<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: express2xml.js,v 1.38 2004/08/24 16:58:55 thendrix Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml2.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.38"
    source="functional_data_and_schematic_representation_mim_lf.exp"/>

  <schema name="Functional_data_and_schematic_representation_mim_lf">

    <constant name="base_types"
      expression="['NUMBER', 'COMPLEX_NUMBER_LITERAL', 'REAL','INTEGER', 'LOGICAL', 'BOOLEAN', 'STRING', 'BINARY', 'MATHS_SPACE','MATHS_FUNCTION', 'LIST', 'ELEMENTARY_SPACE_ENUMERATORS', 'ORDERING_TYPE','LOWER_UPPER', 'SYMMETRY_TYPE', 'ELEMENTARY_FUNCTION_ENUMERATORS','OPEN_CLOSED', 'SPACE_CONSTRAINT_TYPE', 'REPACKAGE_OPTIONS','EXTENSION_OPTIONS']">
      <aggregate
        type="SET"/>
      <builtintype
        type="STRING"/>
    </constant>

    <constant name="cnlit"
      expression="schema_prefix + 'COMPLEX_NUMBER_LITERAL'">
      <builtintype
        type="STRING">
      </builtintype>
    </constant>

    <constant name="dummy_gri"
      expression="representation_item('')|| geometric_representation_item()">
      <typename
        name="geometric_representation_item"/>
    </constant>

    <constant name="schema_prefix"
      expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.'">
      <builtintype
        type="STRING">
      </builtintype>
    </constant>

    <constant name="the_binarys"
      expression="make_elementary_space(es_binarys)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_booleans"
      expression="make_elementary_space(es_booleans)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_complex_numbers"
      expression="make_elementary_space(es_complex_numbers)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_complex_tuples"
      expression="make_extended_tuple_space(the_zero_tuple_space, the_complex_numbers)">
      <typename
        name="extended_tuple_space"/>
    </constant>

    <constant name="the_empty_maths_tuple"
      expression="[]">
      <typename
        name="maths_tuple"/>
    </constant>

    <constant name="the_empty_space"
      expression="make_finite_space([])">
      <typename
        name="finite_space"/>
    </constant>

    <constant name="the_generics"
      expression="make_elementary_space(es_generics)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_integer_tuples"
      expression="make_extended_tuple_space(the_zero_tuple_space, the_integers)">
      <typename
        name="extended_tuple_space"/>
    </constant>

    <constant name="the_integers"
      expression="make_elementary_space(es_integers)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_logicals"
      expression="make_elementary_space(es_logicals)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_maths_spaces"
      expression="make_elementary_space(es_maths_spaces)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_neg1_one_interval"
      expression="make_finite_real_interval(-1.0, closed, 1.0, closed)">
      <typename
        name="finite_real_interval"/>
    </constant>

    <constant name="the_neghalfpi_halfpi_interval"
      expression="make_finite_real_interval(-0.5 * PI, closed, 0.5 * PI, closed)">
      <typename
        name="finite_real_interval"/>
    </constant>

    <constant name="the_negpi_pi_interval"
      expression="make_finite_real_interval(-PI, open, PI, closed)">
      <typename
        name="finite_real_interval"/>
    </constant>

    <constant name="the_nonnegative_reals"
      expression="make_real_interval_from_min(0.0, closed)">
      <typename
        name="real_interval_from_min"/>
    </constant>

    <constant name="the_numbers"
      expression="make_elementary_space(es_numbers)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_real_tuples"
      expression="make_extended_tuple_space(the_zero_tuple_space, the_reals)">
      <typename
        name="extended_tuple_space"/>
    </constant>

    <constant name="the_reals"
      expression="make_elementary_space(es_reals)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_strings"
      expression="make_elementary_space(es_strings)">
      <typename
        name="elementary_space"/>
    </constant>

    <constant name="the_tuples"
      expression="make_extended_tuple_space(the_zero_tuple_space, the_generics)">
      <typename
        name="extended_tuple_space"/>
    </constant>

    <constant name="the_zero_pi_interval"
      expression="make_finite_real_interval(0.0, closed, PI, closed)">
      <typename
        name="finite_real_interval"/>
    </constant>

    <constant name="the_zero_tuple_space"
      expression="make_listed_product_space([])">
      <typename
        name="listed_product_space"/>
    </constant>

    <type name="action_items">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_person class_of_product composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product drawing_revision_class_of_document drawing_sheet_revision_class_of_document individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection organization organization_type person person_and_organization possession_of_property_by_activity possession_of_property_by_product product_as_individual property_condition_for_activity property_condition_for_product schematic_element symbolization_by_schematic_element">
      </select>
    </type>

    <type name="amount_of_substance_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="approved_item">
      <select
        selectitems="drawing_revision drawing_sheet_revision">
      </select>
    </type>

    <type name="area_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="atom_based_value">
      <select
        selectitems="maths_atom">
      </select>
    </type>

    <type name="axis2_placement">
      <select
        selectitems="axis2_placement_2d">
      </select>
    </type>

    <type name="b_spline_curve_form">
      <enumeration
        items="polyline_form circular_arc elliptic_arc parabolic_arc hyperbolic_arc unspecified">
      </enumeration>
    </type>

    <type name="box_characteristic_select">
      <select
        selectitems="box_height box_width box_slant_angle box_rotate_angle">
      </select>
    </type>

    <type name="box_height">
      <typename
        name="positive_ratio_measure"/>
    </type>

    <type name="box_rotate_angle">
      <typename
        name="plane_angle_measure"/>
    </type>

    <type name="box_slant_angle">
      <typename
        name="plane_angle_measure"/>
    </type>

    <type name="box_width">
      <typename
        name="positive_ratio_measure"/>
    </type>

    <type name="celsius_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="character_spacing_select">
      <select
        selectitems="length_measure ratio_measure measure_with_unit descriptive_measure">
      </select>
    </type>

    <type name="character_style_select">
      <select
        selectitems="text_style_for_defined_font">
      </select>
    </type>

    <type name="characterized_action_definition">
      <select
        selectitems="action action_method action_relationship">
      </select>
    </type>

    <type name="characterized_definition">
      <select>
      </select>
    </type>

    <type name="classification_select">
      <select
        selectitems="composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection product_as_individual">
      </select>
    </type>

    <type name="classified_item">
      <select
        selectitems="drawing_revision drawing_sheet_revision">
      </select>
    </type>

    <type name="complete_membership_select">
      <select
        selectitems="composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection product_as_individual">
      </select>
    </type>

    <type name="context_dependent_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="contracted_item">
      <select
        selectitems="drawing_revision">
      </select>
    </type>

    <type name="count_measure">
      <builtintype
        type="NUMBER">
      </builtintype>
    </type>

    <type name="curve_font_or_scaled_curve_font_select">
      <select
        selectitems="curve_style_font_select">
      </select>
    </type>

    <type name="curve_style_font_select">
      <select
        selectitems="curve_style_font pre_defined_curve_font externally_defined_curve_font">
      </select>
    </type>

    <type name="date_time_select">
      <select
        selectitems="date">
      </select>
    </type>

    <type name="day_in_month_number">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="wr1"
        expression="{1 &lt;= SELF &lt;= 31}">
      </where>
    </type>

    <type name="defined_symbol_select">
      <select
        selectitems="pre_defined_symbol externally_defined_symbol">
      </select>
    </type>

    <type name="derived_property_select">
      <select
        selectitems="action_property property_definition">
      </select>
    </type>

    <type name="description_attribute_select">
      <select
        selectitems="application_context approval_role external_source organization_role person_and_organization person_and_organization_role person_role property_definition_representation representation">
      </select>
    </type>

    <type name="descriptive_measure">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="dimension_count">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="wr1"
        expression="SELF &gt; 0">
      </where>
    </type>

    <type name="draughting_callout_element">
      <select
        selectitems="annotation_text_occurrence annotation_symbol_occurrence annotation_curve_occurrence">
      </select>
    </type>

    <type name="draughting_organization_item">
      <select
        selectitems="product_definition_formation drawing_revision drawing_sheet_revision">
      </select>
    </type>

    <type name="draughting_presented_item_select">
      <select
        selectitems="product_definition_formation">
      </select>
    </type>

    <type name="draughting_titled_item">
      <select
        selectitems="drawing_revision drawing_sheet_revision">
      </select>
    </type>

    <type name="electric_current_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="elementary_function_enumerators">
      <enumeration
        items="ef_and ef_or ef_not ef_xor ef_negate_i ef_add_i ef_subtract_i ef_multiply_i ef_divide_i ef_mod_i ef_exponentiate_i ef_eq_i ef_ne_i ef_gt_i ef_lt_i ef_ge_i ef_le_i ef_abs_i ef_max_i ef_min_i ef_if_i ef_negate_r ef_reciprocal_r ef_add_r ef_subtract_r ef_multiply_r ef_divide_r ef_mod_r ef_exponentiate_r ef_exponentiate_ri ef_eq_r ef_ne_r ef_gt_r ef_lt_r ef_ge_r ef_le_r ef_abs_r ef_max_r ef_min_r ef_acos_r ef_asin_r ef_atan2_r ef_cos_r ef_exp_r ef_ln_r ef_log2_r ef_log10_r ef_sin_r ef_sqrt_r ef_tan_r ef_if_r ef_form_c ef_rpart_c ef_ipart_c ef_negate_c ef_reciprocal_c ef_add_c ef_subtract_c ef_multiply_c ef_divide_c ef_exponentiate_c ef_exponentiate_ci ef_eq_c ef_ne_c ef_conjugate_c ef_abs_c ef_arg_c ef_cos_c ef_exp_c ef_ln_c ef_sin_c ef_sqrt_c ef_tan_c ef_if_c ef_subscript_s ef_eq_s ef_ne_s ef_gt_s ef_lt_s ef_ge_s ef_le_s ef_subsequence_s ef_concat_s ef_size_s ef_format ef_value ef_like ef_if_s ef_subscript_b ef_eq_b ef_ne_b ef_gt_b ef_lt_b ef_ge_b ef_le_b ef_subsequence_b ef_concat_b ef_size_b ef_if_b ef_subscript_t ef_eq_t ef_ne_t ef_concat_t ef_size_t ef_entuple ef_detuple ef_insert ef_remove ef_if_t ef_sum_it ef_product_it ef_add_it ef_subtract_it ef_scalar_mult_it ef_dot_prod_it ef_sum_rt ef_product_rt ef_add_rt ef_subtract_rt ef_scalar_mult_rt ef_dot_prod_rt ef_norm_rt ef_sum_ct ef_product_ct ef_add_ct ef_subtract_ct ef_scalar_mult_ct ef_dot_prod_ct ef_norm_ct ef_if ef_ensemble ef_member_of">
      </enumeration>
    </type>

    <type name="elementary_space_enumerators">
      <enumeration
        items="es_numbers es_complex_numbers es_reals es_integers es_logicals es_booleans es_strings es_binarys es_maths_spaces es_maths_functions es_generics">
      </enumeration>
    </type>

    <type name="extension_options">
      <enumeration
        items="eo_none eo_cont eo_cont_right eo_cont_left">
      </enumeration>
    </type>

    <type name="external_identification_item">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_person class_of_product drawing_revision_class_of_document drawing_sheet_revision_class_of_document implicit_schematic_element_definition organization_type property_condition_for_activity property_condition_for_product schematic_element symbolization_by_schematic_element">
      </select>
    </type>

    <type name="fill_area_style_tile_shape_select">
      <select
        selectitems="fill_area_style_tile_symbol_with_style">
      </select>
    </type>

    <type name="fill_style_select">
      <select
        selectitems="fill_area_style_colour externally_defined_tile_style fill_area_style_tiles externally_defined_hatch_style fill_area_style_hatching">
      </select>
    </type>

    <type name="font_select">
      <select
        selectitems="pre_defined_text_font externally_defined_text_font">
      </select>
    </type>

    <type name="founded_item_select">
      <select
        selectitems="founded_item representation_item">
      </select>
    </type>

    <type name="geometric_set_select">
      <select
        selectitems="point curve surface">
      </select>
    </type>

    <type name="id_attribute_select">
      <select
        selectitems="action address application_context group product_category property_definition representation">
      </select>
    </type>

    <type name="identification_item">
      <select
        selectitems="product_as_individual">
      </select>
    </type>

    <type name="identifier">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="input_selector">
      <typename
        name="positive_integer"/>
    </type>

    <type name="invisibility_context">
      <select
        selectitems="presentation_representation presentation_set">
      </select>
    </type>

    <type name="invisible_item">
      <select
        selectitems="styled_item representation">
      </select>
    </type>

    <type name="involved_class_select">
      <typename
        name="action_items"/>
      <where
        label="wr1"
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITION_OF_INDIVIDUAL_ACTIVITY' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITION_OF_INDIVIDUAL_PRODUCT' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CONNECTION_OF_INDIVIDUAL_ACTIVITY' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CONNECTION_OF_INDIVIDUAL_PRODUCT' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CONTAINMENT_OF_INDIVIDUAL_PRODUCT' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INDIVIDUAL_ACTIVITY' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INDIVIDUAL_INVOLVEMENT_IN_ACTIVITY' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INVOLVEMENT_OF_INDIVIDUAL_PRODUCT_IN_CONNECTION' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ORGANIZATION' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PERSON' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PERSON_AND_ORGANIZATION' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSSESSION_OF_PROPERTY_BY_ACTIVITY' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSSESSION_OF_PROPERTY_BY_PRODUCT' IN TYPEOF(SELF))">
      </where>
      <where
        label=""
        expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRODUCT_AS_INDIVIDUAL' IN TYPEOF(SELF))">
      </where>
    </type>

    <type name="involved_select">
      <typename
        name="action_items"/>
    </type>

    <type name="knot_type">
      <enumeration
        items="uniform_knots quasi_uniform_knots piecewise_bezier_knots unspecified">
      </enumeration>
    </type>

    <type name="label">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="length_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="luminous_intensity_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="mass_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="maths_atom">
      <select
        selectitems="maths_simple_atom maths_enum_atom">
      </select>
    </type>

    <type name="maths_binary">
      <builtintype
        type="BINARY">
      </builtintype>
    </type>

    <type name="maths_boolean">
      <builtintype
        type="BOOLEAN">
      </builtintype>
    </type>

    <type name="maths_enum_atom">
      <select
        selectitems="elementary_space_enumerators ordering_type elementary_function_enumerators open_closed space_constraint_type repackage_options extension_options">
      </select>
    </type>

    <type name="maths_expression">
      <select
        selectitems="atom_based_value maths_tuple generic_expression">
      </select>
    </type>

    <type name="maths_function_select">
      <select
        selectitems="maths_function elementary_function_enumerators">
      </select>
    </type>

    <type name="maths_integer">
      <builtintype
        type="INTEGER">
      </builtintype>
    </type>

    <type name="maths_logical">
      <builtintype
        type="LOGICAL">
      </builtintype>
    </type>

    <type name="maths_number">
      <builtintype
        type="NUMBER">
      </builtintype>
    </type>

    <type name="maths_real">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="maths_simple_atom">
      <select
        selectitems="maths_number maths_real maths_integer maths_logical maths_boolean maths_string maths_binary">
      </select>
    </type>

    <type name="maths_space_or_function">
      <select
        selectitems="maths_space maths_function">
      </select>
    </type>

    <type name="maths_string">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="maths_tuple">
      <aggregate
        type="LIST"/>
      <typename
        name="maths_value"/>
    </type>

    <type name="maths_value">
      <select
        selectitems="atom_based_value maths_tuple generic_expression">
      </select>
      <where
        label="constancy"
        expression="NOT ('GENERIC_EXPRESSION' IN stripped_typeof(SELF)) OR expression_is_constant(SELF)">
      </where>
    </type>

    <type name="measure_value">
      <select
        selectitems="amount_of_substance_measure area_measure celsius_temperature_measure context_dependent_measure count_measure descriptive_measure electric_current_measure length_measure luminous_intensity_measure mass_measure numeric_measure parameter_value plane_angle_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure ratio_measure solid_angle_measure thermodynamic_temperature_measure time_measure volume_measure">
      </select>
    </type>

    <type name="month_in_year_number">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="wr1"
        expression="{1 &lt;= SELF &lt;= 12}">
      </where>
    </type>

    <type name="name_attribute_select">
      <select
        selectitems="address derived_unit person_and_organization product_definition property_definition_representation">
      </select>
    </type>

    <type name="nonnegative_integer">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="nonnegativity"
        expression="SELF &gt;= 0">
      </where>
    </type>

    <type name="null_style">
      <enumeration
        items="null">
      </enumeration>
    </type>

    <type name="numeric_measure">
      <builtintype
        type="NUMBER">
      </builtintype>
    </type>

    <type name="one_or_two">
      <typename
        name="positive_integer"/>
      <where
        label="in_range"
        expression="(SELF = 1) OR (SELF = 2)">
      </where>
    </type>

    <type name="open_closed">
      <enumeration
        items="open closed">
      </enumeration>
    </type>

    <type name="ordering_type">
      <enumeration
        items="by_rows by_columns">
      </enumeration>
    </type>

    <type name="organization_type_item">
      <select
        selectitems="organization">
      </select>
    </type>

    <type name="parameter_value">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="person_organization_select">
      <select
        selectitems="organization person person_and_organization">
      </select>
    </type>

    <type name="plane_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="positive_integer">
      <typename
        name="nonnegative_integer"/>
      <where
        label="positivity"
        expression="SELF &gt; 0">
      </where>
    </type>

    <type name="positive_length_measure">
      <typename
        name="length_measure"/>
      <where
        label="wr1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="positive_plane_angle_measure">
      <typename
        name="plane_angle_measure"/>
      <where
        label="wr1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="positive_ratio_measure">
      <typename
        name="ratio_measure"/>
      <where
        label="wr1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="presentable_text">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="presentation_representation_select">
      <select
        selectitems="presentation_representation presentation_set">
      </select>
    </type>

    <type name="presentation_size_assignment_select">
      <select
        selectitems="presentation_view presentation_area area_in_set">
      </select>
    </type>

    <type name="presentation_style_select">
      <select
        selectitems="curve_style symbol_style fill_area_style text_style null_style">
      </select>
    </type>

    <type name="product_space">
      <select
        selectitems="uniform_product_space listed_product_space">
      </select>
    </type>

    <type name="ratio_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="real_interval">
      <select
        selectitems="real_interval_from_min real_interval_to_max finite_real_interval elementary_space">
      </select>
      <where
        label="wr1"
        expression="NOT ('ELEMENTARY_SPACE' IN stripped_typeof(SELF)) OR (SELF\ elementary_space.space_id = es_reals)">
      </where>
    </type>

    <type name="relationship_select">
      <typename
        name="space_context_select"/>
    </type>

    <type name="repackage_options">
      <enumeration
        items="ro_nochange ro_wrap_as_tuple ro_unwrap_tuple">
      </enumeration>
    </type>

    <type name="represented_definition">
      <select
        selectitems="general_property property_definition">
      </select>
    </type>

    <type name="role_select">
      <select
        selectitems="action_assignment approval_assignment approval_date_time contract_assignment document_reference security_classification_assignment">
      </select>
    </type>

    <type name="si_prefix">
      <enumeration
        items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto">
      </enumeration>
    </type>

    <type name="si_unit_name">
      <enumeration
        items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_celsius lumen lux becquerel gray sievert">
      </enumeration>
    </type>

    <type name="size_select">
      <select
        selectitems="positive_length_measure measure_with_unit descriptive_measure">
      </select>
    </type>

    <type name="solid_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="source_item">
      <select
        selectitems="identifier">
      </select>
    </type>

    <type name="space_constraint_type">
      <enumeration
        items="sc_equal sc_subspace sc_member">
      </enumeration>
    </type>

    <type name="space_context_select">
      <select
        selectitems="action action_method class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection general_property product_definition representation_item">
      </select>
    </type>

    <type name="specified_item">
      <select
        selectitems="drawing_revision">
      </select>
    </type>

    <type name="style_context_select">
      <select
        selectitems="group representation representation_item presentation_set">
      </select>
    </type>

    <type name="symbol_style_select">
      <select
        selectitems="symbol_colour">
      </select>
    </type>

    <type name="symbolized_class_select">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_person class_of_product drawing_revision_class_of_document drawing_sheet_revision_class_of_document organization_type property_condition_for_activity property_condition_for_product schematic_element symbolization_by_schematic_element">
      </select>
    </type>

    <type name="symbolized_item_select">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_person class_of_product composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product drawing_revision_class_of_document drawing_sheet_revision_class_of_document individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection organization organization_type person person_and_organization possession_of_property_by_activity possession_of_property_by_product product_as_individual property_condition_for_activity property_condition_for_product schematic_element symbolization_by_schematic_element">
      </select>
    </type>

    <type name="text">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="text_alignment">
      <typename
        name="label"/>
    </type>

    <type name="text_delineation">
      <typename
        name="label"/>
    </type>

    <type name="text_or_character">
      <select
        selectitems="annotation_text composite_text text_literal">
      </select>
    </type>

    <type name="text_path">
      <enumeration
        items="left right up down">
      </enumeration>
    </type>

    <type name="thermodynamic_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="time_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="transition_code">
      <enumeration
        items="discontinuous continuous cont_same_gradient cont_same_gradient_same_curvature">
      </enumeration>
    </type>

    <type name="trimming_preference">
      <enumeration
        items="cartesian parameter unspecified">
      </enumeration>
    </type>

    <type name="trimming_select">
      <select
        selectitems="cartesian_point parameter_value">
      </select>
    </type>

    <type name="tuple_space">
      <select
        selectitems="product_space extended_tuple_space">
      </select>
    </type>

    <type name="unit">
      <select
        selectitems="derived_unit named_unit">
      </select>
    </type>

    <type name="value_context_select">
      <select
        selectitems="action action_method general_property product_definition representation_item">
      </select>
    </type>

    <type name="vector_or_direction">
      <select
        selectitems="vector direction">
      </select>
    </type>

    <type name="volume_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="year_number">
      <builtintype
        type="INTEGER">
      </builtintype>
    </type>

    <type name="zero_or_one">
      <typename
        name="nonnegative_integer"/>
      <where
        label="in_range"
        expression="(SELF = 0) OR (SELF = 1)">
      </where>
    </type>

    <entity
      name="abs_function"
      supertypes="unary_function_call">
    </entity>

    <entity
      name="abstracted_expression_function"
      supertypes="maths_function quantifier_expression">
      <derived
        name="variables"
        expression="remove_first(SELF\multiple_arity_generic_expression.operands)">
        <aggregate
          type="LIST"
          lower="1"
          upper="?"
          unique="YES"/>
        <typename
          name="generic_variable"/>
        <redeclaration
          entity-ref="quantifier_expression"/>
        </derived>
        <derived
          name="expr"
          expression="SELF\multiple_arity_generic_expression.operands[1]">
          <typename
            name="generic_expression"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(QUERY(operand &lt;* SELF\multiple_arity_generic_expression.operands| NOT has_values_space(operand))) = 0">
        </where>
      </entity>

      <entity
        name="acos_function"
        supertypes="unary_function_call">
      </entity>

      <entity
        name="action">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description"
          optional="YES">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="chosen_method">
          <typename
            name="action_method"/>
        </explicit>
        <derived
          name="id"
          expression="get_id_value(SELF)">
          <typename
            name="identifier"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="action_assignment"
        abstract.supertype="YES">
        <explicit
          name="assigned_action">
          <typename
            name="action"/>
        </explicit>
        <derived
          name="role"
          expression="get_role(SELF)">
          <typename
            name="object_role"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="action_method">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description"
          optional="YES">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="consequence">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="purpose">
          <typename
            name="text"/>
        </explicit>
      </entity>

      <entity
        name="action_property">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="definition">
          <typename
            name="characterized_action_definition"/>
        </explicit>
      </entity>

      <entity
        name="action_property_representation">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="property">
          <typename
            name="action_property"/>
        </explicit>
        <explicit
          name="representation">
          <typename
            name="representation"/>
        </explicit>
      </entity>

      <entity
        name="action_relationship">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description"
          optional="YES">
          <typename
            name="text"/>
        </explicit>
        <explicit
          name="relating_action">
          <typename
            name="action"/>
        </explicit>
        <explicit
          name="related_action">
          <typename
            name="action"/>
        </explicit>
      </entity>

      <entity
        name="action_status">
        <explicit
          name="status">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="assigned_action">
          <typename
            name="executed_action"/>
        </explicit>
      </entity>

      <entity
        name="address">
        <explicit
          name="internal_location"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="street_number"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="street"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="postal_box"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="town"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="region"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="postal_code"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="country"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="facsimile_number"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="telephone_number"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="electronic_mail_address"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="telex_number"
          optional="YES">
          <typename
            name="label"/>
        </explicit>
        <derived
          name="name"
          expression="get_name_value(SELF)">
          <typename
            name="label"/>
        </derived>
        <derived
          name="url"
          expression="get_id_value(SELF)">
          <typename
            name="identifier"/>
        </derived>
        <where
          label="wr1"
          expression="EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number)">
        </where>
      </entity>

      <entity
        name="amount_of_substance_measure_with_unit"
        supertypes="measure_with_unit">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
        </where>
      </entity>

      <entity
        name="amount_of_substance_unit"
        supertypes="named_unit">
        <where
          label="wr1"
          expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
        </where>
      </entity>

      <entity
        name="and_expression"
        supertypes="multiple_arity_boolean_expression">
      </entity>

      <entity
        name="annotation_curve_occurrence"
        supertypes="annotation_occurrence">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE' IN TYPEOF(SELF\styled_item.item)">
        </where>
      </entity>

      <entity
        name="annotation_fill_area"
        supertypes="geometric_representation_item">
        <explicit
          name="boundaries">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="curve"/>
        </explicit>
      </entity>

      <entity
        name="annotation_fill_area_occurrence"
        supertypes="annotation_occurrence">
        <explicit
          name="fill_style_target">
          <typename
            name="point"/>
        </explicit>
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_FILL_AREA' IN TYPEOF(SELF.item)">
        </where>
      </entity>

      <entity
        name="annotation_occurrence"
        super.expression="(ONEOF (annotation_curve_occurrence, annotation_fill_area_occurrence, annotation_text_occurrence, annotation_symbol_occurrence))"
        supertypes="styled_item">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(SELF)">
        </where>
      </entity>

      <entity
        name="annotation_subfigure_occurrence"
        supertypes="annotation_symbol_occurrence">
        <where
          label="wr1"
          expression="SIZEOF(QUERY(sty &lt;* SELF.styles | NOT (SIZEOF(sty.styles) = 1))) = 0">
        </where>
        <where
          label="wr2"
          expression="SIZEOF(QUERY(sty &lt;* SELF.styles | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NULL_STYLE' IN TYPEOF(sty.styles[1])))) = 0">
        </where>
        <where
          label="wr3"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(SELF.item)">
        </where>
        <where
          label="wr4"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_SUBFIGURE_REPRESENTATION' IN TYPEOF(SELF.item\mapped_item.mapping_source.mapped_representation)">
        </where>
      </entity>

      <entity
        name="annotation_symbol"
        supertypes="mapped_item">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_REPRESENTATION_MAP' IN TYPEOF(SELF\mapped_item.mapping_source)">
        </where>
        <where
          label="wr2"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_TARGET' IN TYPEOF(SELF\mapped_item.mapping_target)">
        </where>
        <where
          label="wr3"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(SELF)">
        </where>
      </entity>

      <entity
        name="annotation_symbol_occurrence"
        supertypes="annotation_occurrence">
        <where
          label="wr1"
          expression="SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DEFINED_SYMBOL'] * TYPEOF(SELF\styled_item.item)) &gt; 0">
        </where>
      </entity>

      <entity
        name="annotation_text"
        supertypes="mapped_item">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT' IN TYPEOF(SELF\mapped_item.mapping_target)">
        </where>
        <where
          label="wr2"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_STRING_REPRESENTATION' IN TYPEOF(SELF\mapped_item.mapping_source.mapped_representation)">
        </where>
        <where
          label="wr3"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(SELF)">
        </where>
      </entity>

      <entity
        name="annotation_text_occurrence"
        supertypes="annotation_occurrence">
        <where
          label="wr1"
          expression="SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_CHARACTER','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DEFINED_CHARACTER_GLYPH', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT'] * TYPEOF(SELF\styled_item.item)) &gt; 0">
        </where>
      </entity>

      <entity
        name="application_context">
        <explicit
          name="application">
          <typename
            name="label"/>
        </explicit>
        <derived
          name="description"
          expression="get_description_value(SELF)">
          <typename
            name="text"/>
        </derived>
        <derived
          name="id"
          expression="get_id_value(SELF)">
          <typename
            name="identifier"/>
        </derived>
        <inverse
          name="context_elements"
          entity="application_context_element"
          attribute="frame_of_reference">
          <inverse.aggregate
            type="SET"
            lower="1"
            upper="?"/>
        </inverse>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
        </where>
        <where
          label="wr2"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="application_context_element"
        super.expression="(ONEOF (product_context, product_definition_context))">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="frame_of_reference">
          <typename
            name="application_context"/>
        </explicit>
      </entity>

      <entity
        name="application_defined_function"
        supertypes="maths_function">
        <explicit
          name="explicit_domain">
          <typename
            name="tuple_space"/>
        </explicit>
        <explicit
          name="explicit_range">
          <typename
            name="tuple_space"/>
        </explicit>
        <explicit
          name="parameters">
          <aggregate
            type="LIST"/>
          <typename
            name="maths_value"/>
        </explicit>
        <where
          label="wr1"
          expression="expression_is_constant(explicit_domain)">
        </where>
        <where
          label="wr2"
          expression="expression_is_constant(explicit_range)">
        </where>
      </entity>

      <entity
        name="applied_action_assignment"
        supertypes="action_assignment">
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="action_items"/>
        </explicit>
      </entity>

      <entity
        name="applied_classification_assignment"
        supertypes="classification_assignment">
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="classification_select"/>
        </explicit>
      </entity>

      <entity
        name="applied_external_identification_assignment"
        supertypes="external_identification_assignment">
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="external_identification_item"/>
        </explicit>
      </entity>

      <entity
        name="applied_identification_assignment"
        supertypes="identification_assignment">
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="identification_item"/>
        </explicit>
      </entity>

      <entity
        name="applied_organization_type_assignment"
        supertypes="organization_type_assignment">
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="organization_type_item"/>
        </explicit>
      </entity>

      <entity
        name="approval">
        <explicit
          name="status">
          <typename
            name="approval_status"/>
        </explicit>
        <explicit
          name="level">
          <typename
            name="label"/>
        </explicit>
      </entity>

      <entity
        name="approval_assignment"
        abstract.supertype="YES">
        <explicit
          name="assigned_approval">
          <typename
            name="approval"/>
        </explicit>
        <derived
          name="role"
          expression="get_role(SELF)">
          <typename
            name="object_role"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="approval_date_time">
        <explicit
          name="date_time">
          <typename
            name="date_time_select"/>
        </explicit>
        <explicit
          name="dated_approval">
          <typename
            name="approval"/>
        </explicit>
        <derived
          name="role"
          expression="get_role(SELF)">
          <typename
            name="object_role"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="approval_person_organization">
        <explicit
          name="person_organization">
          <typename
            name="person_organization_select"/>
        </explicit>
        <explicit
          name="authorized_approval">
          <typename
            name="approval"/>
        </explicit>
        <explicit
          name="role">
          <typename
            name="approval_role"/>
        </explicit>
      </entity>

      <entity
        name="approval_role">
        <explicit
          name="role">
          <typename
            name="label"/>
        </explicit>
        <derived
          name="description"
          expression="get_description_value(SELF)">
          <typename
            name="text"/>
        </derived>
        <where
          label="wr1"
          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
        </where>
      </entity>

      <entity
        name="approval_status">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
      </entity>

      <entity
        name="area_in_set">
        <explicit
          name="area">
          <typename
            name="presentation_area"/>
        </explicit>
        <explicit
          name="in_set">
          <typename
            name="presentation_set"/>
        </explicit>
      </entity>

      <entity
        name="area_measure_with_unit"
        supertypes="measure_with_unit">
        <where
          label="wr1"
          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
        </where>
      </entity>

      <entity
        name="area_unit"
        supertypes="named_unit">
        <where
          label="wr1"
          expression="(SELF\named_unit.dimensions.length_exponent = 2.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
        </where>
      </entity>

      <entity
        name="asin_function"
        supertypes="unary_function_call">
      </entity>

      <entity
        name="atan_function"
        supertypes="binary_function_call">
      </entity>

      <entity
        name="atom_based_literal"
        supertypes="generic_literal">
        <explicit
          name="lit_value">
          <typename
            name="atom_based_value"/>
        </explicit>
      </entity>

      <entity
        name="axis2_placement_2d"
        supertypes="placement">
        <explicit
          name="ref_direction"
          optional="YES">
          <typename
            name="direction"/>
        </explicit>
        <derived
          name="p"
          expression="build_2axes(ref_direction)">
          <aggregate
            type="LIST"
            lower="2"
            upper="2"/>
          <typename
            name="direction"/>
        </derived>
        <where
          label="wr1"
          expression="SELF\geometric_representation_item.dim = 2">
        </where>
      </entity>

      <entity
        name="b_spline_basis"
        supertypes="maths_function generic_literal">
        <explicit
          name="degree">
          <typename
            name="nonnegative_integer"/>
        </explicit>
        <explicit
          name="repeated_knots">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <builtintype
            type="REAL"/>
        </explicit>
        <derived
          name="order"
          expression="degree + 1">
          <typename
            name="positive_integer"/>
        </derived>
        <derived
          name="num_basis"
          expression="SIZEOF(repeated_knots) - order">
          <typename
            name="positive_integer"/>
        </derived>
        <where
          label="wr1"
          expression="num_basis &gt;= order">
        </where>
        <where
          label="wr2"
          expression="nondecreasing(repeated_knots)">
        </where>
        <where
          label="wr3"
          expression="repeated_knots[order] &lt; repeated_knots[num_basis + 1]">
        </where>
      </entity>

      <entity
        name="b_spline_curve"
        super.expression="(ONEOF (uniform_curve, b_spline_curve_with_knots, quasi_uniform_curve, bezier_curve) ANDOR rational_b_spline_curve)"
        supertypes="bounded_curve">
        <explicit
          name="degree">
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="control_points_list">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="cartesian_point"/>
        </explicit>
        <explicit
          name="curve_form">
          <typename
            name="b_spline_curve_form"/>
        </explicit>
        <explicit
          name="closed_curve">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <explicit
          name="self_intersect">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <derived
          name="upper_index_on_control_points"
          expression="SIZEOF(control_points_list) - 1">
          <builtintype
            type="INTEGER"/>
        </derived>
        <derived
          name="control_points"
          expression="list_to_array(control_points_list, 0, upper_index_on_control_points)">
          <aggregate
            type="ARRAY"
            lower="0"
            upper="upper_index_on_control_points"/>
          <typename
            name="cartesian_point"/>
        </derived>
        <where
          label="wr1"
          expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.UNIFORM_CURVE' IN TYPEOF(SELF)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.QUASI_UNIFORM_CURVE' IN TYPEOF(SELF)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BEZIER_CURVE' IN TYPEOF(SELF)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.B_SPLINE_CURVE_WITH_KNOTS' IN TYPEOF(SELF))">
        </where>
      </entity>

      <entity
        name="b_spline_curve_with_knots"
        supertypes="b_spline_curve">
        <explicit
          name="knot_multiplicities">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="knots">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="parameter_value"/>
        </explicit>
        <explicit
          name="knot_spec">
          <typename
            name="knot_type"/>
        </explicit>
        <derived
          name="upper_index_on_knots"
          expression="SIZEOF(knots)">
          <builtintype
            type="INTEGER"/>
        </derived>
        <where
          label="wr1"
          expression="constraints_param_b_spline(degree, upper_index_on_knots, upper_index_on_control_points, knot_multiplicities, knots)">
        </where>
        <where
          label="wr2"
          expression="SIZEOF(knot_multiplicities) = upper_index_on_knots">
        </where>
      </entity>

      <entity
        name="b_spline_function"
        supertypes="maths_function unary_generic_expression">
        <explicit
          name="operand">
          <typename
            name="maths_function"/>
          <redeclaration
            entity-ref="unary_generic_expression"/>
          </explicit>
          <explicit
            name="basis">
            <aggregate
              type="LIST"
              lower="1"
              upper="?"/>
            <typename
              name="b_spline_basis"/>
          </explicit>
          <derived
            name="coef"
            expression="SELF\unary_generic_expression.operand">
            <typename
              name="maths_function"/>
          </derived>
          <where
            label="wr1"
            expression="function_is_table(coef)">
          </where>
          <where
            label="wr2"
            expression="(space_dimension(coef.range) = 1) AND (number_superspace_of(factor1(coef.range)) = the_reals)">
          </where>
          <where
            label="wr3"
            expression="SIZEOF(basis) &lt;= SIZEOF(shape_of_array(coef))">
          </where>
          <where
            label="wr4"
            expression="compare_basis_and_coef(basis, coef)">
          </where>
        </entity>

        <entity
          name="basic_sparse_matrix"
          supertypes="explicit_table_function multiple_arity_generic_expression">
          <explicit
            name="operands">
            <aggregate
              type="LIST"
              lower="3"
              upper="3"/>
            <typename
              name="maths_function"/>
            <redeclaration
              entity-ref="multiple_arity_generic_expression"/>
            </explicit>
            <explicit
              name="default_entry">
              <typename
                name="maths_value"/>
            </explicit>
            <explicit
              name="order">
              <typename
                name="ordering_type"/>
            </explicit>
            <derived
              name="index"
              expression="SELF\multiple_arity_generic_expression.operands[1]">
              <typename
                name="maths_function"/>
            </derived>
            <derived
              name="loc"
              expression="SELF\multiple_arity_generic_expression.operands[2]">
              <typename
                name="maths_function"/>
            </derived>
            <derived
              name="val"
              expression="SELF\multiple_arity_generic_expression.operands[3]">
              <typename
                name="maths_function"/>
            </derived>
            <where
              label="wr1"
              expression="function_is_1d_table(index)">
            </where>
            <where
              label="wr2"
              expression="function_is_1d_table(loc)">
            </where>
            <where
              label="wr3"
              expression="function_is_1d_table(val)">
            </where>
            <where
              label="wr4"
              expression="check_sparse_index_domain(index.domain, index_base, shape, order)">
            </where>
            <where
              label="wr5"
              expression="check_sparse_index_to_loc(index.range, loc.domain)">
            </where>
            <where
              label="wr6"
              expression="loc.domain = val.domain">
            </where>
            <where
              label="wr7"
              expression="check_sparse_loc_range(loc.range, index_base, shape, order)">
            </where>
            <where
              label="wr8"
              expression="member_of(default_entry, val.range)">
            </where>
          </entity>

          <entity
            name="bezier_curve"
            supertypes="b_spline_curve">
          </entity>

          <entity
            name="binary_boolean_expression"
            abstract.supertype="YES"
            super.expression="(ONEOF (xor_expression, equals_expression))"
            supertypes="boolean_expression binary_generic_expression">
          </entity>

          <entity
            name="binary_function_call"
            abstract.supertype="YES"
            super.expression="(ONEOF (atan_function))"
            supertypes="binary_numeric_expression">
          </entity>

          <entity
            name="binary_generic_expression"
            abstract.supertype="YES"
            supertypes="generic_expression">
            <explicit
              name="operands">
              <aggregate
                type="LIST"
                lower="2"
                upper="2"/>
              <typename
                name="generic_expression"/>
            </explicit>
          </entity>

          <entity
            name="binary_literal"
            supertypes="generic_literal">
            <explicit
              name="lit_value">
              <builtintype
                type="BINARY"/>
            </explicit>
          </entity>

          <entity
            name="binary_numeric_expression"
            abstract.supertype="YES"
            super.expression="(ONEOF (minus_expression, div_expression, mod_expression, slash_expression, power_expression, binary_function_call))"
            supertypes="numeric_expression binary_generic_expression">
            <explicit
              name="operands">
              <aggregate
                type="LIST"
                lower="2"
                upper="2"/>
              <typename
                name="numeric_expression"/>
              <redeclaration
                entity-ref="binary_generic_expression"/>
              </explicit>
            </entity>

            <entity
              name="boolean_defined_function"
              abstract.supertype="YES"
              supertypes="defined_function boolean_expression">
            </entity>

            <entity
              name="boolean_expression"
              abstract.supertype="YES"
              super.expression="(ONEOF (simple_boolean_expression, unary_boolean_expression, binary_boolean_expression, multiple_arity_boolean_expression, comparison_expression, interval_expression, boolean_defined_function))"
              supertypes="expression">
            </entity>

            <entity
              name="boolean_literal"
              supertypes="simple_boolean_expression generic_literal">
              <explicit
                name="the_value">
                <builtintype
                  type="BOOLEAN"/>
              </explicit>
            </entity>

            <entity
              name="boolean_variable"
              supertypes="simple_boolean_expression variable">
            </entity>

            <entity
              name="bounded_curve"
              super.expression="(ONEOF (polyline, b_spline_curve, trimmed_curve, composite_curve))"
              supertypes="curve">
            </entity>

            <entity
              name="calendar_date"
              supertypes="date">
              <explicit
                name="day_component">
                <typename
                  name="day_in_month_number"/>
              </explicit>
              <explicit
                name="month_component">
                <typename
                  name="month_in_year_number"/>
              </explicit>
              <where
                label="wr1"
                expression="valid_calendar_date(SELF)">
              </where>
            </entity>

            <entity
              name="camera_image"
              supertypes="mapped_item">
              <where
                label="wr1"
                expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CAMERA_USAGE' IN TYPEOF(SELF\mapped_item.mapping_source)">
              </where>
              <where
                label="wr2"
                expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLANAR_BOX' IN TYPEOF(SELF\mapped_item.mapping_target)">
              </where>
              <where
                label="wr3"
                expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(SELF)">
              </where>
            </entity>

            <entity
              name="cardinality_of_related_class"
              supertypes="maths_space_context">
              <explicit
                name="physical_space">
                <typename
                  name="relationship_select"/>
                <redeclaration
                  entity-ref="maths_space_context"/>
                </explicit>
              </entity>

              <entity
                name="cardinality_of_relating_class"
                supertypes="maths_space_context">
                <explicit
                  name="physical_space">
                  <typename
                    name="relationship_select"/>
                  <redeclaration
                    entity-ref="maths_space_context"/>
                  </explicit>
                </entity>

                <entity
                  name="cartesian_complex_number_region"
                  supertypes="maths_space generic_literal">
                  <explicit
                    name="real_constraint">
                    <typename
                      name="real_interval"/>
                  </explicit>
                  <explicit
                    name="imag_constraint">
                    <typename
                      name="real_interval"/>
                  </explicit>
                  <where
                    label="wr1"
                    expression="min_exists(real_constraint) OR max_exists(real_constraint) OR min_exists(imag_constraint) OR max_exists(imag_constraint)">
                  </where>
                </entity>

                <entity
                  name="cartesian_point"
                  supertypes="point">
                  <explicit
                    name="coordinates">
                    <aggregate
                      type="LIST"
                      lower="1"
                      upper="3"/>
                    <typename
                      name="length_measure"/>
                  </explicit>
                </entity>

                <entity
                  name="cartesian_transformation_operator"
                  supertypes="geometric_representation_item functionally_defined_transformation">
                  <explicit
                    name="axis1"
                    optional="YES">
                    <typename
                      name="direction"/>
                  </explicit>
                  <explicit
                    name="axis2"
                    optional="YES">
                    <typename
                      name="direction"/>
                  </explicit>
                  <explicit
                    name="local_origin">
                    <typename
                      name="cartesian_point"/>
                  </explicit>
                  <explicit
                    name="scale"
                    optional="YES">
                    <builtintype
                      type="REAL"/>
                  </explicit>
                  <derived
                    name="scl"
                    expression="NVL(scale, 1.0)">
                    <builtintype
                      type="REAL"/>
                  </derived>
                  <where
                    label="wr1"
                    expression="scl &gt; 0.0">
                  </where>
                </entity>

                <entity
                  name="celsius_temperature_measure_with_unit"
                  supertypes="measure_with_unit">
                  <where
                    label="wr1"
                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                  </where>
                </entity>

                <entity
                  name="circle"
                  supertypes="conic">
                  <explicit
                    name="radius">
                    <typename
                      name="positive_length_measure"/>
                  </explicit>
                </entity>

                <entity
                  name="class"
                  super.expression="(ONEOF (class_by_extension, class_by_intension))"
                  supertypes="group">
                </entity>

                <entity
                  name="class_by_extension"
                  supertypes="class">
                </entity>

                <entity
                  name="class_by_intension"
                  supertypes="class">
                </entity>

                <entity
                  name="class_of_activity"
                  supertypes="executed_action class">
                </entity>

                <entity
                  name="class_of_composition_of_activity"
                  supertypes="action_relationship class">
                  <explicit
                    name="relating_action">
                    <typename
                      name="class_of_activity"/>
                    <redeclaration
                      entity-ref="action_relationship"/>
                    </explicit>
                    <explicit
                      name="related_action">
                      <typename
                        name="class_of_activity"/>
                      <redeclaration
                        entity-ref="action_relationship"/>
                      </explicit>
                    </entity>

                    <entity
                      name="class_of_composition_of_product"
                      supertypes="product_definition_formation_relationship class">
                      <explicit
                        name="relating_product_definition_formation">
                        <typename
                          name="class_of_product"/>
                        <redeclaration
                          entity-ref="product_definition_formation_relationship"/>
                        </explicit>
                        <explicit
                          name="related_product_definition_formation">
                          <typename
                            name="class_of_product"/>
                          <redeclaration
                            entity-ref="product_definition_formation_relationship"/>
                          </explicit>
                        </entity>

                        <entity
                          name="class_of_connection_of_activity"
                          supertypes="action_relationship class">
                          <explicit
                            name="relating_action">
                            <typename
                              name="class_of_activity"/>
                            <redeclaration
                              entity-ref="action_relationship"/>
                            </explicit>
                            <explicit
                              name="related_action">
                              <typename
                                name="class_of_activity"/>
                              <redeclaration
                                entity-ref="action_relationship"/>
                              </explicit>
                            </entity>

                            <entity
                              name="class_of_connection_of_product"
                              supertypes="product_definition_formation_relationship class">
                              <explicit
                                name="relating_product_definition_formation">
                                <typename
                                  name="class_of_product"/>
                                <redeclaration
                                  entity-ref="product_definition_formation_relationship"/>
                                </explicit>
                                <explicit
                                  name="related_product_definition_formation">
                                  <typename
                                    name="class_of_product"/>
                                  <redeclaration
                                    entity-ref="product_definition_formation_relationship"/>
                                  </explicit>
                                </entity>

                                <entity
                                  name="class_of_connection_of_product_with_involvements"
                                  supertypes="class_of_connection_of_product class_of_product">
                                </entity>

                                <entity
                                  name="class_of_containment_of_product"
                                  supertypes="product_definition_formation_relationship class">
                                  <explicit
                                    name="relating_product_definition_formation">
                                    <typename
                                      name="class_of_product"/>
                                    <redeclaration
                                      entity-ref="product_definition_formation_relationship"/>
                                    </explicit>
                                    <explicit
                                      name="related_product_definition_formation">
                                      <typename
                                        name="class_of_product"/>
                                      <redeclaration
                                        entity-ref="product_definition_formation_relationship"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="class_of_involvement_in_activity"
                                      supertypes="applied_action_assignment class">
                                      <explicit
                                        name="assigned_action">
                                        <typename
                                          name="class_of_activity"/>
                                        <redeclaration
                                          entity-ref="action_assignment"/>
                                        </explicit>
                                        <explicit
                                          name="items">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="1"/>
                                          <typename
                                            name="involved_class_select"/>
                                          <redeclaration
                                            entity-ref="applied_action_assignment"/>
                                          </explicit>
                                        </entity>

                                        <entity
                                          name="class_of_involvement_of_product_in_connection"
                                          supertypes="product_definition_formation_relationship class">
                                          <explicit
                                            name="relating_product_definition_formation">
                                            <typename
                                              name="class_of_connection_of_product_with_involvements"/>
                                            <redeclaration
                                              entity-ref="product_definition_formation_relationship"/>
                                            </explicit>
                                            <explicit
                                              name="related_product_definition_formation">
                                              <typename
                                                name="class_of_product"/>
                                              <redeclaration
                                                entity-ref="product_definition_formation_relationship"/>
                                              </explicit>
                                            </entity>

                                            <entity
                                              name="class_of_person"
                                              supertypes="person_type class">
                                            </entity>

                                            <entity
                                              name="class_of_possession_of_property_by_activity"
                                              supertypes="action_property">
                                              <explicit
                                                name="definition">
                                                <typename
                                                  name="class_of_activity"/>
                                                <redeclaration
                                                  entity-ref="action_property"/>
                                                </explicit>
                                              </entity>

                                              <entity
                                                name="class_of_possession_of_property_by_product"
                                                supertypes="property_definition">
                                                <where
                                                  label="link_to_class"
                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CLASS_OF_PRODUCT' IN TYPEOF(SELF\property_definition.definition.formation)">
                                                </where>
                                              </entity>

                                              <entity
                                                name="class_of_product"
                                                supertypes="product_definition_formation class">
                                              </entity>

                                              <entity
                                                name="classification"
                                                supertypes="applied_classification_assignment">
                                                <explicit
                                                  name="items">
                                                  <aggregate
                                                    type="SET"
                                                    lower="1"
                                                    upper="1"/>
                                                  <typename
                                                    name="classification_select"/>
                                                  <redeclaration
                                                    entity-ref="applied_classification_assignment"/>
                                                  </explicit>
                                                  <derived
                                                    name="classified"
                                                    expression="SELF\applied_classification_assignment. items[1]">
                                                    <typename
                                                      name="classification_select"/>
                                                  </derived>
                                                  <derived
                                                    name="classifier"
                                                    expression="SELF\classification_assignment.assigned_class">
                                                    <typename
                                                      name="class"/>
                                                  </derived>
                                                </entity>

                                                <entity
                                                  name="classification_assignment"
                                                  abstract.supertype="YES">
                                                  <explicit
                                                    name="assigned_class">
                                                    <typename
                                                      name="group"/>
                                                  </explicit>
                                                  <explicit
                                                    name="role">
                                                    <typename
                                                      name="classification_role"/>
                                                  </explicit>
                                                </entity>

                                                <entity
                                                  name="classification_role">
                                                  <explicit
                                                    name="name">
                                                    <typename
                                                      name="label"/>
                                                  </explicit>
                                                  <explicit
                                                    name="description"
                                                    optional="YES">
                                                    <typename
                                                      name="text"/>
                                                  </explicit>
                                                </entity>

                                                <entity
                                                  name="colour">
                                                </entity>

                                                <entity
                                                  name="colour_rgb"
                                                  supertypes="colour_specification">
                                                  <explicit
                                                    name="red">
                                                    <builtintype
                                                      type="REAL"/>
                                                  </explicit>
                                                  <explicit
                                                    name="green">
                                                    <builtintype
                                                      type="REAL"/>
                                                  </explicit>
                                                  <explicit
                                                    name="blue">
                                                    <builtintype
                                                      type="REAL"/>
                                                  </explicit>
                                                  <where
                                                    label="wr1"
                                                    expression="{0.0 &lt;= red &lt;= 1.0}">
                                                  </where>
                                                  <where
                                                    label="wr2"
                                                    expression="{0.0 &lt;= green &lt;= 1.0}">
                                                  </where>
                                                  <where
                                                    label="wr3"
                                                    expression="{0.0 &lt;= blue &lt;= 1.0}">
                                                  </where>
                                                </entity>

                                                <entity
                                                  name="colour_specification"
                                                  supertypes="colour">
                                                  <explicit
                                                    name="name">
                                                    <typename
                                                      name="label"/>
                                                  </explicit>
                                                </entity>

                                                <entity
                                                  name="comparison_equal"
                                                  supertypes="comparison_expression">
                                                </entity>

                                                <entity
                                                  name="comparison_expression"
                                                  abstract.supertype="YES"
                                                  super.expression="(ONEOF (comparison_equal, comparison_greater, comparison_greater_equal, comparison_less, comparison_less_equal, comparison_not_equal, like_expression))"
                                                  supertypes="boolean_expression binary_generic_expression">
                                                  <explicit
                                                    name="operands">
                                                    <aggregate
                                                      type="LIST"
                                                      lower="2"
                                                      upper="2"/>
                                                    <typename
                                                      name="expression"/>
                                                    <redeclaration
                                                      entity-ref="binary_generic_expression"/>
                                                    </explicit>
                                                    <where
                                                      label="wr1"
                                                      expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[2])) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BOOLEAN_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BOOLEAN_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[2])) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[2]))">
                                                    </where>
                                                  </entity>

                                                  <entity
                                                    name="comparison_greater"
                                                    supertypes="comparison_expression">
                                                  </entity>

                                                  <entity
                                                    name="comparison_greater_equal"
                                                    supertypes="comparison_expression">
                                                  </entity>

                                                  <entity
                                                    name="comparison_less"
                                                    supertypes="comparison_expression">
                                                  </entity>

                                                  <entity
                                                    name="comparison_less_equal"
                                                    supertypes="comparison_expression">
                                                  </entity>

                                                  <entity
                                                    name="comparison_not_equal"
                                                    supertypes="comparison_expression">
                                                  </entity>

                                                  <entity
                                                    name="complement">
                                                    <explicit
                                                      name="id">
                                                      <typename
                                                        name="identifier"/>
                                                    </explicit>
                                                    <explicit
                                                      name="name">
                                                      <typename
                                                        name="label"/>
                                                    </explicit>
                                                    <explicit
                                                      name="description"
                                                      optional="YES">
                                                      <typename
                                                        name="text"/>
                                                    </explicit>
                                                    <explicit
                                                      name="set_1">
                                                      <typename
                                                        name="class"/>
                                                    </explicit>
                                                    <explicit
                                                      name="set_2">
                                                      <typename
                                                        name="class"/>
                                                    </explicit>
                                                    <explicit
                                                      name="universe">
                                                      <typename
                                                        name="class"/>
                                                    </explicit>
                                                    <where
                                                      label="complement_different"
                                                      expression="NOT identical_sets(set_1, set_2)">
                                                    </where>
                                                  </entity>

                                                  <entity
                                                    name="complete_membership"
                                                    supertypes="classification_assignment">
                                                    <explicit
                                                      name="members">
                                                      <aggregate
                                                        type="SET"/>
                                                      <typename
                                                        name="complete_membership_select"/>
                                                    </explicit>
                                                    <derived
                                                      name="containing_set"
                                                      expression="SELF\classification_assignment.assigned_class">
                                                      <typename
                                                        name="class"/>
                                                    </derived>
                                                  </entity>

                                                  <entity
                                                    name="complex_number_literal"
                                                    supertypes="generic_literal">
                                                    <explicit
                                                      name="real_part">
                                                      <builtintype
                                                        type="REAL"/>
                                                    </explicit>
                                                    <explicit
                                                      name="imag_part">
                                                      <builtintype
                                                        type="REAL"/>
                                                    </explicit>
                                                  </entity>

                                                  <entity
                                                    name="composite_curve"
                                                    supertypes="bounded_curve">
                                                    <explicit
                                                      name="segments">
                                                      <aggregate
                                                        type="LIST"
                                                        lower="1"
                                                        upper="?"/>
                                                      <typename
                                                        name="composite_curve_segment"/>
                                                    </explicit>
                                                    <explicit
                                                      name="self_intersect">
                                                      <builtintype
                                                        type="LOGICAL"/>
                                                    </explicit>
                                                    <derived
                                                      name="n_segments"
                                                      expression="SIZEOF(segments)">
                                                      <builtintype
                                                        type="INTEGER"/>
                                                    </derived>
                                                    <derived
                                                      name="closed_curve"
                                                      expression="segments[n_segments].transition &lt;&gt; discontinuous">
                                                      <builtintype
                                                        type="LOGICAL"/>
                                                    </derived>
                                                    <where
                                                      label="wr1"
                                                      expression="NOT closed_curve AND (SIZEOF(QUERY(temp &lt;* segments | temp.transition= discontinuous)) = 1) OR closed_curve AND (SIZEOF(QUERY(temp &lt;* segments| temp.transition = discontinuous)) = 0)">
                                                    </where>
                                                  </entity>

                                                  <entity
                                                    name="composite_curve_segment"
                                                    supertypes="founded_item">
                                                    <explicit
                                                      name="transition">
                                                      <typename
                                                        name="transition_code"/>
                                                    </explicit>
                                                    <explicit
                                                      name="same_sense">
                                                      <builtintype
                                                        type="BOOLEAN"/>
                                                    </explicit>
                                                    <explicit
                                                      name="parent_curve">
                                                      <typename
                                                        name="curve"/>
                                                    </explicit>
                                                    <inverse
                                                      name="using_curves"
                                                      entity="composite_curve"
                                                      attribute="segments">
                                                      <inverse.aggregate
                                                        type="BAG"
                                                        lower="1"
                                                        upper="?"/>
                                                    </inverse>
                                                    <where
                                                      label="wr1"
                                                      expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BOUNDED_CURVE' IN TYPEOF(parent_curve)">
                                                    </where>
                                                  </entity>

                                                  <entity
                                                    name="composite_text"
                                                    supertypes="geometric_representation_item">
                                                    <explicit
                                                      name="collected_text">
                                                      <aggregate
                                                        type="SET"
                                                        lower="2"
                                                        upper="?"/>
                                                      <typename
                                                        name="text_or_character"/>
                                                    </explicit>
                                                    <where
                                                      label="wr1"
                                                      expression="acyclic_composite_text(SELF, SELF.collected_text)">
                                                    </where>
                                                  </entity>

                                                  <entity
                                                    name="composite_text_with_associated_curves"
                                                    supertypes="composite_text">
                                                    <explicit
                                                      name="associated_curves">
                                                      <aggregate
                                                        type="SET"
                                                        lower="1"
                                                        upper="?"/>
                                                      <typename
                                                        name="curve"/>
                                                    </explicit>
                                                  </entity>

                                                  <entity
                                                    name="composite_text_with_blanking_box"
                                                    supertypes="composite_text">
                                                    <explicit
                                                      name="blanking">
                                                      <typename
                                                        name="planar_box"/>
                                                    </explicit>
                                                  </entity>

                                                  <entity
                                                    name="composite_text_with_extent"
                                                    supertypes="composite_text">
                                                    <explicit
                                                      name="extent">
                                                      <typename
                                                        name="planar_extent"/>
                                                    </explicit>
                                                  </entity>

                                                  <entity
                                                    name="composition_of_individual_activity"
                                                    supertypes="action_relationship">
                                                    <explicit
                                                      name="relating_action">
                                                      <typename
                                                        name="individual_activity"/>
                                                      <redeclaration
                                                        entity-ref="action_relationship"/>
                                                      </explicit>
                                                      <explicit
                                                        name="related_action">
                                                        <typename
                                                          name="individual_activity"/>
                                                        <redeclaration
                                                          entity-ref="action_relationship"/>
                                                        </explicit>
                                                      </entity>

                                                      <entity
                                                        name="composition_of_individual_product"
                                                        supertypes="product_definition_formation_relationship">
                                                        <explicit
                                                          name="relating_product_definition_formation">
                                                          <typename
                                                            name="product_as_individual"/>
                                                          <redeclaration
                                                            entity-ref="product_definition_formation_relationship"/>
                                                          </explicit>
                                                          <explicit
                                                            name="related_product_definition_formation">
                                                            <typename
                                                              name="product_as_individual"/>
                                                            <redeclaration
                                                              entity-ref="product_definition_formation_relationship"/>
                                                            </explicit>
                                                          </entity>

                                                          <entity
                                                            name="composition_of_schematic_element_occurrence"
                                                            supertypes="mapped_item">
                                                            <where
                                                              label="schematic_element_occurrence_as_part"
                                                              expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(SELF\mapped_item.mapping_source. mapped_representation)">
                                                            </where>
                                                            <where
                                                              label="schematic_element_occurrence_as_whole"
                                                              expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(using_representations(SELF))">
                                                            </where>
                                                          </entity>

                                                          <entity
                                                            name="compound_maths_space_context"
                                                            supertypes="maths_space_context">
                                                            <explicit
                                                              name="components">
                                                              <aggregate
                                                                type="LIST"
                                                                lower="2"
                                                                upper="?"/>
                                                              <typename
                                                                name="maths_space_context"/>
                                                            </explicit>
                                                          </entity>

                                                          <entity
                                                            name="concat_expression"
                                                            supertypes="string_expression multiple_arity_generic_expression">
                                                            <explicit
                                                              name="operands">
                                                              <aggregate
                                                                type="LIST"
                                                                lower="2"
                                                                upper="?"/>
                                                              <typename
                                                                name="string_expression"/>
                                                              <redeclaration
                                                                entity-ref="multiple_arity_generic_expression"/>
                                                              </explicit>
                                                            </entity>

                                                            <entity
                                                              name="condition_property"
                                                              supertypes="general_property_association">
                                                              <explicit
                                                                name="base_definition">
                                                                <typename
                                                                  name="physical_quantity_range"/>
                                                                <redeclaration
                                                                  entity-ref="general_property_association"/>
                                                                </explicit>
                                                                <where
                                                                  label="link_to_condition"
                                                                  expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PROPERTY_CONDITION_FOR_ACTIVITY' IN TYPEOF(SELF\general_property_association.derived_definition)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PROPERTY_CONDITION_FOR_PRODUCT' IN TYPEOF(SELF\general_property_association.derived_definition))">
                                                                </where>
                                                              </entity>

                                                              <entity
                                                                name="conic"
                                                                super.expression="(ONEOF (circle, ellipse, hyperbola, parabola))"
                                                                supertypes="curve">
                                                                <explicit
                                                                  name="position">
                                                                  <typename
                                                                    name="axis2_placement"/>
                                                                </explicit>
                                                              </entity>

                                                              <entity
                                                                name="connection_of_individual_activity"
                                                                supertypes="action_relationship">
                                                                <explicit
                                                                  name="relating_action">
                                                                  <typename
                                                                    name="individual_activity"/>
                                                                  <redeclaration
                                                                    entity-ref="action_relationship"/>
                                                                  </explicit>
                                                                  <explicit
                                                                    name="related_action">
                                                                    <typename
                                                                      name="individual_activity"/>
                                                                    <redeclaration
                                                                      entity-ref="action_relationship"/>
                                                                    </explicit>
                                                                  </entity>

                                                                  <entity
                                                                    name="connection_of_individual_product"
                                                                    supertypes="product_definition_formation_relationship">
                                                                    <explicit
                                                                      name="relating_product_definition_formation">
                                                                      <typename
                                                                        name="product_as_individual"/>
                                                                      <redeclaration
                                                                        entity-ref="product_definition_formation_relationship"/>
                                                                      </explicit>
                                                                      <explicit
                                                                        name="related_product_definition_formation">
                                                                        <typename
                                                                          name="product_as_individual"/>
                                                                        <redeclaration
                                                                          entity-ref="product_definition_formation_relationship"/>
                                                                        </explicit>
                                                                      </entity>

                                                                      <entity
                                                                        name="connection_of_individual_product_with_involvements"
                                                                        supertypes="connection_of_individual_product product_as_individual">
                                                                      </entity>

                                                                      <entity
                                                                        name="connection_of_schematic_element_occurrence"
                                                                        supertypes="mapped_item">
                                                                        <where
                                                                          label="schematic_element_occurrence_as_side_1"
                                                                          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(SELF\mapped_item.mapping_source. mapped_representation)">
                                                                        </where>
                                                                        <where
                                                                          label="schematic_element_occurrence_as_side_2"
                                                                          expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(using_representations(SELF))">
                                                                        </where>
                                                                      </entity>

                                                                      <entity
                                                                        name="constant_function"
                                                                        supertypes="maths_function generic_literal">
                                                                        <explicit
                                                                          name="sole_output">
                                                                          <typename
                                                                            name="maths_value"/>
                                                                        </explicit>
                                                                        <explicit
                                                                          name="source_of_domain">
                                                                          <typename
                                                                            name="maths_space_or_function"/>
                                                                        </explicit>
                                                                        <where
                                                                          label="wr1"
                                                                          expression="no_cyclic_domain_reference(source_of_domain, [SELF])">
                                                                        </where>
                                                                        <where
                                                                          label="wr2"
                                                                          expression="expression_is_constant(domain_from(source_of_domain))">
                                                                        </where>
                                                                      </entity>

                                                                      <entity
                                                                        name="containment_of_individual_product"
                                                                        supertypes="product_definition_formation_relationship">
                                                                        <explicit
                                                                          name="relating_product_definition_formation">
                                                                          <typename
                                                                            name="product_as_individual"/>
                                                                          <redeclaration
                                                                            entity-ref="product_definition_formation_relationship"/>
                                                                          </explicit>
                                                                          <explicit
                                                                            name="related_product_definition_formation">
                                                                            <typename
                                                                              name="product_as_individual"/>
                                                                            <redeclaration
                                                                              entity-ref="product_definition_formation_relationship"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="context_dependent_invisibility"
                                                                            supertypes="invisibility">
                                                                            <explicit
                                                                              name="presentation_context">
                                                                              <typename
                                                                                name="invisibility_context"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="context_dependent_unit"
                                                                            supertypes="named_unit">
                                                                            <explicit
                                                                              name="name">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="contract">
                                                                            <explicit
                                                                              name="name">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="purpose">
                                                                              <typename
                                                                                name="text"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="kind">
                                                                              <typename
                                                                                name="contract_type"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="contract_assignment"
                                                                            abstract.supertype="YES">
                                                                            <explicit
                                                                              name="assigned_contract">
                                                                              <typename
                                                                                name="contract"/>
                                                                            </explicit>
                                                                            <derived
                                                                              name="role"
                                                                              expression="get_role(SELF)">
                                                                              <typename
                                                                                name="object_role"/>
                                                                            </derived>
                                                                            <where
                                                                              label="wr1"
                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
                                                                            </where>
                                                                          </entity>

                                                                          <entity
                                                                            name="contract_type">
                                                                            <explicit
                                                                              name="description">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="conversion_based_unit"
                                                                            supertypes="named_unit">
                                                                            <explicit
                                                                              name="name">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="conversion_factor">
                                                                              <typename
                                                                                name="measure_with_unit"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="cos_function"
                                                                            supertypes="unary_function_call">
                                                                          </entity>

                                                                          <entity
                                                                            name="curve"
                                                                            super.expression="(ONEOF (line, conic, offset_curve_2d, curve_replica))"
                                                                            supertypes="geometric_representation_item">
                                                                          </entity>

                                                                          <entity
                                                                            name="curve_replica"
                                                                            supertypes="curve">
                                                                            <explicit
                                                                              name="parent_curve">
                                                                              <typename
                                                                                name="curve"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="transformation">
                                                                              <typename
                                                                                name="cartesian_transformation_operator"/>
                                                                            </explicit>
                                                                            <where
                                                                              label="wr1"
                                                                              expression="transformation.dim = parent_curve.dim">
                                                                            </where>
                                                                            <where
                                                                              label="wr2"
                                                                              expression="acyclic_curve_replica(SELF, parent_curve)">
                                                                            </where>
                                                                          </entity>

                                                                          <entity
                                                                            name="curve_style">
                                                                            <explicit
                                                                              name="name">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="curve_font">
                                                                              <typename
                                                                                name="curve_font_or_scaled_curve_font_select"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="curve_width">
                                                                              <typename
                                                                                name="size_select"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="curve_colour">
                                                                              <typename
                                                                                name="colour"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="curve_style_font">
                                                                            <explicit
                                                                              name="name">
                                                                              <typename
                                                                                name="label"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="pattern_list">
                                                                              <aggregate
                                                                                type="LIST"
                                                                                lower="1"
                                                                                upper="?"/>
                                                                              <typename
                                                                                name="curve_style_font_pattern"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="curve_style_font_pattern">
                                                                            <explicit
                                                                              name="visible_segment_length">
                                                                              <typename
                                                                                name="positive_length_measure"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="invisible_segment_length">
                                                                              <typename
                                                                                name="positive_length_measure"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="date"
                                                                            super.expression="(calendar_date)">
                                                                            <explicit
                                                                              name="year_component">
                                                                              <typename
                                                                                name="year_number"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="defined_function"
                                                                            abstract.supertype="YES"
                                                                            super.expression="(ONEOF (numeric_defined_function, string_defined_function, boolean_defined_function) ANDOR sql_mappable_defined_function)">
                                                                          </entity>

                                                                          <entity
                                                                            name="defined_maths_space_context"
                                                                            supertypes="maths_space_context">
                                                                          </entity>

                                                                          <entity
                                                                            name="defined_symbol"
                                                                            supertypes="geometric_representation_item">
                                                                            <explicit
                                                                              name="definition">
                                                                              <typename
                                                                                name="defined_symbol_select"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="target">
                                                                              <typename
                                                                                name="symbol_target"/>
                                                                            </explicit>
                                                                          </entity>

                                                                          <entity
                                                                            name="definite_integral_expression"
                                                                            supertypes="quantifier_expression">
                                                                            <explicit
                                                                              name="lower_limit_neg_infinity">
                                                                              <builtintype
                                                                                type="BOOLEAN"/>
                                                                            </explicit>
                                                                            <explicit
                                                                              name="upper_limit_pos_infinity">
                                                                              <builtintype
                                                                                type="BOOLEAN"/>
                                                                            </explicit>
                                                                            <derived
                                                                              name="integrand"
                                                                              expression="SELF\multiple_arity_generic_expression. operands[1]">
                                                                              <typename
                                                                                name="generic_expression"/>
                                                                            </derived>
                                                                            <derived
                                                                              name="variable_of_integration"
                                                                              expression="SELF\ multiple_arity_generic_expression.operands[2]">
                                                                              <typename
                                                                                name="maths_variable"/>
                                                                            </derived>
                                                                            <derived
                                                                              name="variables"
                                                                              expression="[variable_of_integration]">
                                                                              <aggregate
                                                                                type="LIST"
                                                                                lower="1"
                                                                                upper="1"
                                                                                unique="YES"/>
                                                                              <typename
                                                                                name="generic_variable"/>
                                                                              <redeclaration
                                                                                entity-ref="quantifier_expression"/>
                                                                              </derived>
                                                                              <where
                                                                                label="wr1"
                                                                                expression="has_values_space(integrand)">
                                                                              </where>
                                                                              <where
                                                                                label="wr2"
                                                                                expression="space_is_continuum(values_space_of(integrand))">
                                                                              </where>
                                                                              <where
                                                                                label="wr3"
                                                                                expression="definite_integral_expr_check(SELF\multiple_arity_generic_expression. operands, lower_limit_neg_infinity, upper_limit_pos_infinity)">
                                                                              </where>
                                                                            </entity>

                                                                            <entity
                                                                              name="definite_integral_function"
                                                                              supertypes="maths_function unary_generic_expression">
                                                                              <explicit
                                                                                name="operand">
                                                                                <typename
                                                                                  name="maths_function"/>
                                                                                <redeclaration
                                                                                  entity-ref="unary_generic_expression"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="variable_of_integration">
                                                                                  <typename
                                                                                    name="input_selector"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="lower_limit_neg_infinity">
                                                                                  <builtintype
                                                                                    type="BOOLEAN"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="upper_limit_pos_infinity">
                                                                                  <builtintype
                                                                                    type="BOOLEAN"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="integrand"
                                                                                  expression="SELF\unary_generic_expression.operand">
                                                                                  <typename
                                                                                    name="maths_function"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="space_is_continuum(integrand.range)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="definite_integral_check(integrand.domain, variable_of_integration, lower_limit_neg_infinity, upper_limit_pos_infinity)">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="definition_of_schematic_element_occurrence"
                                                                                supertypes="mapped_item">
                                                                                <where
                                                                                  label="schematic_element_as_superset"
                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT' IN TYPEOF(SELF\mapped_item.mapping_source. mapped_representation)">
                                                                                </where>
                                                                                <where
                                                                                  label="schematic_element_occurrence_as_subset"
                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(using_representations(SELF))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="derivation_of_schematic_element_definition"
                                                                                supertypes="mapped_item">
                                                                                <where
                                                                                  label="schematic_element_definition_as_base"
                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_DEFINITION' IN TYPEOF(SELF\mapped_item.mapping_source. mapped_representation)">
                                                                                </where>
                                                                                <where
                                                                                  label="implicit_schematic_element_definition_as_derived"
                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'IMPLICIT_SCHEMATIC_ELEMENT_DEFINITION' IN TYPEOF(using_representations(SELF))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="derived_unit">
                                                                                <explicit
                                                                                  name="elements">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="derived_unit_element"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="name"
                                                                                  expression="get_name_value(SELF)">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="(SIZEOF(elements) &gt; 1) OR (SIZEOF(elements) = 1) AND (elements[1]. exponent &lt;&gt; 1.0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="derived_unit_element">
                                                                                <explicit
                                                                                  name="unit">
                                                                                  <typename
                                                                                    name="named_unit"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="description_attribute">
                                                                                <explicit
                                                                                  name="attribute_value">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="described_item">
                                                                                  <typename
                                                                                    name="description_attribute_select"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="descriptive_representation_item"
                                                                                supertypes="representation_item">
                                                                                <explicit
                                                                                  name="description">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="dimensional_exponents">
                                                                                <explicit
                                                                                  name="length_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="mass_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="time_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="electric_current_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="thermodynamic_temperature_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="amount_of_substance_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="luminous_intensity_exponent">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="direction"
                                                                                supertypes="geometric_representation_item">
                                                                                <explicit
                                                                                  name="direction_ratios">
                                                                                  <aggregate
                                                                                    type="LIST"
                                                                                    lower="2"
                                                                                    upper="3"/>
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(tmp &lt;* direction_ratios | tmp &lt;&gt; 0.0)) &gt; 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="div_expression"
                                                                                supertypes="binary_numeric_expression">
                                                                              </entity>

                                                                              <entity
                                                                                name="document">
                                                                                <explicit
                                                                                  name="id">
                                                                                  <typename
                                                                                    name="identifier"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="name">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="description"
                                                                                  optional="YES">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="kind">
                                                                                  <typename
                                                                                    name="document_type"/>
                                                                                </explicit>
                                                                                <inverse
                                                                                  name="representation_types"
                                                                                  entity="document_representation_type"
                                                                                  attribute="represented_document">
                                                                                  <inverse.aggregate
                                                                                    type="SET"
                                                                                    lower="0"
                                                                                    upper="?"/>
                                                                                </inverse>
                                                                              </entity>

                                                                              <entity
                                                                                name="document_reference"
                                                                                abstract.supertype="YES">
                                                                                <explicit
                                                                                  name="assigned_document">
                                                                                  <typename
                                                                                    name="document"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="source">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="role"
                                                                                  expression="get_role(SELF)">
                                                                                  <typename
                                                                                    name="object_role"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="document_representation_type">
                                                                                <explicit
                                                                                  name="name">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="represented_document">
                                                                                  <typename
                                                                                    name="document"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="document_type">
                                                                                <explicit
                                                                                  name="product_data_type">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_annotation_occurrence"
                                                                                supertypes="annotation_occurrence">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_CURVE_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(QUERY(sty &lt;* SELF.styles | NOT ((SIZEOF(sty. styles) = 1) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE_STYLE' IN TYPEOF(sty.styles[1]))))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(QUERY(sty &lt;* SELF.styles | NOT ((SIZEOF(sty. styles) = 1) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE' IN TYPEOF(sty.styles[1]))))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(QUERY(bound &lt;* SELF.item\annotation_fill_area. boundaries | NOT (SIZEOF(QUERY(si &lt;* USEDIN(bound,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM.ITEM') |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'ANNOTATION_CURVE_OCCURRENCE' IN TYPEOF(si))) &gt; 0))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr4"
                                                                                  expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(QUERY(sty &lt;* SELF.styles | NOT ((SIZEOF(sty. styles) = 1) AND (SIZEOF(TYPEOF(sty.styles[1]) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_STYLE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NULL_STYLE']) = 1))))= 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr5"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(SELF.item))) OR (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DRAUGHTING_SYMBOL_REPRESENTATION','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DRAUGHTING_SUBFIGURE_REPRESENTATION'] * TYPEOF(SELF.item\mapped_item. mapping_source.mapped_representation)) = 1)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr6"
                                                                                  expression="NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(QUERY(sty &lt;* SELF.styles | NOT ((SIZEOF(sty. styles) = 1) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_STYLE' IN TYPEOF(sty.styles[1]))))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr7"
                                                                                  expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) OR (SIZEOF(TYPEOF(SELF.item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL']) = 1)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr8"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN TYPEOF(SELF.item))) OR (SIZEOF(QUERY(tl &lt;* SELF.item\composite_text. collected_text | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL' IN TYPEOF(tl)))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr9"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL' IN TYPEOF(SELF.item))) OR (SELF.item\text_literal.alignment IN ['baseline left', 'baseline centre', 'baseline right'])">
                                                                                </where>
                                                                                <where
                                                                                  label="wr10"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN TYPEOF(SELF.item))) OR (SIZEOF(QUERY(tl &lt;* QUERY(text &lt;* SELF.item\ composite_text.collected_text |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL' IN TYPEOF(text)) | NOT (tl\text_literal.alignment IN ['baseline left','baseline centre', 'baseline right']))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr11"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN TYPEOF(SELF.item))) OR check_text_alignment(SELF.item)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr12"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN TYPEOF(SELF.item))) OR check_text_font(SELF.item)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr13"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN TYPEOF(SELF.item))) OR (SIZEOF(QUERY(tl &lt;* QUERY(text &lt;* SELF.item\ composite_text.collected_text |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL' IN TYPEOF(text)) | NOT (SIZEOF(TYPEOF(tl) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'TEXT_LITERAL_WITH_BLANKING_BOX','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'TEXT_LITERAL_WITH_ASSOCIATED_CURVES']) = 0))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr14"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_LITERAL_WITH_ASSOCIATED_CURVES' IN TYPEOF(SELF.item))) OR (SIZEOF(QUERY(crv &lt;* SELF.item\ text_literal_with_associated_curves.associated_curves | NOT (SIZEOF(QUERY(si &lt;* USEDIN(crv,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM.ITEM') |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_CURVE_OCCURRENCE' IN TYPEOF(si))) &gt; 0))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr15"
                                                                                  expression="NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE' IN TYPEOF(SELF)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT_WITH_ASSOCIATED_CURVES' IN TYPEOF(SELF.item))) OR (SIZEOF(QUERY(crv &lt;* SELF.item\ composite_text_with_associated_curves.associated_curves | NOT (SIZEOF(QUERY(si &lt;* USEDIN(crv,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM.ITEM') |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_CURVE_OCCURRENCE' IN TYPEOF(si))) &gt; 0))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr16"
                                                                                  expression="SIZEOF(QUERY(cs &lt;* QUERY(sty &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE_STYLE' IN TYPEOF(sty.styles[1])) | NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(cs.styles[1]\curve_style.curve_width)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF(cs.styles[1]\curve_style.curve_width\measure_with_unit. value_component))))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr17"
                                                                                  expression="SIZEOF(QUERY(fas &lt;* QUERY(sty &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE' IN TYPEOF(sty.styles[1])) | NOT ((SIZEOF(QUERY(fs &lt;* fas.styles[1]\ fill_area_style.fill_styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE_TILES' IN TYPEOF(fs))) &lt;= 1) AND (SIZEOF(QUERY(fst &lt;* QUERY(fs &lt;* fas.styles[1]\ fill_area_style.fill_styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE_TILES' IN TYPEOF(fs)) | NOT (SIZEOF(fst\fill_area_style_tiles.tiles) = 1))) = 0)))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr18"
                                                                                  expression="SIZEOF(QUERY(fas &lt;* QUERY(sty &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE' IN TYPEOF(sty.styles[1])) | NOT (SIZEOF(QUERY(fsh &lt;* QUERY(fs &lt;* fas.styles[1]\fill_area_style.fill_styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FILL_AREA_STYLE_HATCHING' IN TYPEOF(fs)) | NOT (fsh\fill_area_style_hatching. point_of_reference_hatch_line :=: fsh\fill_area_style_hatching. pattern_start))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr19"
                                                                                  expression="SIZEOF(QUERY(ts &lt;* QUERY(sty &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_STYLE' IN TYPEOF(sty.styles[1])) | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'TEXT_STYLE_WITH_BOX_CHARACTERISTICS' IN TYPEOF(ts.styles[1])))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr20"
                                                                                  expression="SIZEOF(QUERY(ts &lt;* QUERY(sty &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TEXT_STYLE_WITH_BOX_CHARACTERISTICS' IN TYPEOF(sty.styles[1])) | NOT (SIZEOF(ts.styles[1]\ text_style_with_box_characteristics.characteristics) = 4))) = 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_approval_assignment"
                                                                                supertypes="approval_assignment">
                                                                                <explicit
                                                                                  name="approved_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="approved_item"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(item &lt;* approved_items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_REVISION' IN TYPEOF(item))) &lt;= 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_callout"
                                                                                supertypes="geometric_representation_item">
                                                                                <explicit
                                                                                  name="contents">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_callout_element"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_contract_assignment"
                                                                                supertypes="contract_assignment">
                                                                                <explicit
                                                                                  name="items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="contracted_item"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_drawing_revision"
                                                                                supertypes="drawing_revision">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="(SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET'))&gt;= 1) AND (SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_SHEET_REVISION' IN TYPEOF(ais.area)))) = 0)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="SIZEOF(QUERY(app_ass &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_APPROVAL_ASSIGNMENT.APPROVED_ITEMS') | NOT (SIZEOF(USEDIN(app_ass.assigned_approval,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.APPROVAL_DATE_TIME.DATED_APPROVAL')) = 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(app_ass &lt;* USEDIN(ais.area,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_APPROVAL_ASSIGNMENT.APPROVED_ITEMS') | NOT (SIZEOF(USEDIN(app_ass.assigned_approval,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.APPROVAL_DATE_TIME.DATED_APPROVAL')) = 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr4"
                                                                                  expression="SIZEOF(QUERY(app_ass &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_APPROVAL_ASSIGNMENT.APPROVED_ITEMS') | NOT (SIZEOF(USEDIN(app_ass.assigned_approval,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.APPROVAL_PERSON_ORGANIZATION.AUTHORIZED_APPROVAL')) &gt;= 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr5"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(app_ass &lt;* USEDIN(ais.area,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_APPROVAL_ASSIGNMENT.APPROVED_ITEMS') | NOT (SIZEOF(USEDIN(app_ass.assigned_approval,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.APPROVAL_PERSON_ORGANIZATION.AUTHORIZED_APPROVAL')) &gt;= 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr6"
                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_TITLE.ITEMS')) &lt;= 1">
                                                                                </where>
                                                                                <where
                                                                                  label="wr7"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(USEDIN(ais.area,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_TITLE.ITEMS')) &lt;= 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr8"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(item &lt;* ais.area.items | NOT (SIZEOF(TYPEOF(item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLANAR_BOX']) = 1)))= 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr9"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(item &lt;* ais.area.items | SIZEOF(TYPEOF(item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM']) = 1))&gt; 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr10"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(p_b &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLANAR_BOX' IN TYPEOF(item)) | NOT (SIZEOF(USEDIN(p_b,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTATION_SIZE.SIZE')) = 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr11"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTATION_VIEW' IN TYPEOF(mi.mapping_source.mapped_representation)))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr12"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(a2p &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT' IN TYPEOF(item)) | NOT (SIZEOF(USEDIN(a2p,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM.MAPPING_TARGET')) &gt; 0))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr13"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(ais.area.context_of_items.representations_in_context) = 1)))= 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr14"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT (SIZEOF(USEDIN(mi.mapping_source.mapped_representation,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_MAP.MAPPED_REPRESENTATION')) = 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr15"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(pv_item &lt;* mi.mapping_source. mapped_representation.items | NOT (SIZEOF(TYPEOF(pv_item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' + 'STYLED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CAMERA_IMAGE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' + 'AXIS2_PLACEMENT']) = 1))) = 0))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr16"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(pv_item &lt;* mi.mapping_source. mapped_representation.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CAMERA_IMAGE' IN TYPEOF(pv_item))) = 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr17"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(a2p &lt;* QUERY(pv_item &lt;* mi.mapping_source. mapped_representation.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT' IN TYPEOF(pv_item)) | 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.'+ 'REPRESENTATION_MAP.MAPPING_SOURCE' IN ROLESOF(a2p))) = 1))) = 0))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr18"
                                                                                  expression="SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.IN_SET')| NOT (SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* ais.area.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT (SIZEOF(mi.mapping_source.mapped_representation. context_of_items.representations_in_context) = 1))) = 0))) = 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_model"
                                                                                supertypes="representation">
                                                                                <unique
                                                                                  label="unique_id">
                                                                                  <unique.attribute
                                                                                    entity-ref="representation"
                                                                                    attribute="name"/>
                                                                                </unique>
                                                                                <where
                                                                                  label="valid_draughting_model_items"
                                                                                  expression="SIZEOF(QUERY(it &lt;* SELF.items | NOT (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT'] * TYPEOF(it)) = 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="valid_mapped_items"
                                                                                  expression="SIZEOF(QUERY(mi &lt;* QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(it)) | NOT (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SHAPE_REPRESENTATION', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_MODEL']* TYPEOF(mi\mapped_item.mapping_source.mapped_representation)) = 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="valid_use_of_style"
                                                                                  expression="SIZEOF(QUERY(smi &lt;* QUERY(si &lt;* QUERY(it &lt;* SELF.items| 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM' IN TYPEOF(it)) |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(si\styled_item.item)) | NOT (('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF(smi\styled_item.item\mapped_item.mapping_source. mapped_representation)) AND (SIZEOF(QUERY(sty &lt;* smi\styled_item.styles | NOT (SIZEOF(QUERY(psa &lt;* sty.styles | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE_STYLE' IN TYPEOF(psa)))) = 1))) = 1)))) = 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_organization_assignment"
                                                                                supertypes="organization_assignment">
                                                                                <explicit
                                                                                  name="assigned_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_organization_item"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_person_and_organization_assignment"
                                                                                supertypes="person_and_organization_assignment">
                                                                                <explicit
                                                                                  name="assigned_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_organization_item"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_person_assignment"
                                                                                supertypes="person_assignment">
                                                                                <explicit
                                                                                  name="assigned_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_organization_item"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_presented_item"
                                                                                supertypes="presented_item">
                                                                                <explicit
                                                                                  name="items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_presented_item_select"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(pir &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTED_ITEM_REPRESENTATION.ITEM') | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_REVISION' IN TYPEOF(pir.presentation)))) = 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_security_classification_assignment"
                                                                                supertypes="security_classification_assignment">
                                                                                <explicit
                                                                                  name="assigned_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="classified_item"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_specification_reference"
                                                                                supertypes="document_reference">
                                                                                <explicit
                                                                                  name="specified_items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="specified_item"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SELF.assigned_document.kind.product_data_type ='draughting specification'">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_subfigure_representation"
                                                                                supertypes="symbol_representation">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items | NOT (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_OCCURRENCE', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_CALLOUT', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT'] * TYPEOF(item)) = 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items | SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_OCCURRENCE', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_CALLOUT']* TYPEOF(item)) = 1)) &gt;= 1">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="SIZEOF(QUERY(srm &lt;* QUERY(rm &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_MAP.MAPPED_REPRESENTATION') |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_REPRESENTATION_MAP' IN TYPEOF(rm)) | NOT (SIZEOF(QUERY(a_s &lt;* QUERY(mi &lt;* srm.map_usage |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(mi)) | NOT (SIZEOF(QUERY(aso &lt;* USEDIN(a_s,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM.ITEM') | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SUBFIGURE_OCCURRENCE' IN TYPEOF(aso)))) = 0))) = 0))) &gt; 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr4"
                                                                                  expression="NOT acyclic_mapped_item_usage(SELF)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr5"
                                                                                  expression="SIZEOF(SELF.context_of_items.representations_in_context) = 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_symbol_representation"
                                                                                supertypes="symbol_representation">
                                                                                <unique
                                                                                  label="ur1">
                                                                                  <unique.attribute
                                                                                    entity-ref="representation"
                                                                                    attribute="name"/>
                                                                                </unique>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items | NOT (SIZEOF(TYPEOF(item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_CURVE_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE', 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT'])= 1))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items | SIZEOF(TYPEOF(item) *['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_CURVE_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT_OCCURRENCE']) = 1)) &gt;= 1">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SUBFIGURE_OCCURRENCE' IN TYPEOF(item))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr4"
                                                                                  expression="SIZEOF(QUERY(srm &lt;* QUERY(rm &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_MAP.MAPPED_REPRESENTATION') |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_REPRESENTATION_MAP' IN TYPEOF(rm)) | NOT (SIZEOF(QUERY(a_s &lt;* QUERY(mi &lt;* srm.map_usage |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(mi)) | NOT (SIZEOF(QUERY(aso &lt;* USEDIN(a_s,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM.ITEM') | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE' IN TYPEOF(aso)))) = 0))) = 0))) &gt; 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr5"
                                                                                  expression="NOT acyclic_mapped_item_usage(SELF)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr6"
                                                                                  expression="SIZEOF(SELF.context_of_items.representations_in_context) = 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_text_literal_with_delineation"
                                                                                supertypes="text_literal_with_delineation">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SELF.delineation IN ['underline', 'overline']">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="draughting_title">
                                                                                <explicit
                                                                                  name="items">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="draughting_titled_item"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="language">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="contents">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_definition">
                                                                                <explicit
                                                                                  name="drawing_number">
                                                                                  <typename
                                                                                    name="identifier"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="drawing_type"
                                                                                  optional="YES">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_revision"
                                                                                supertypes="presentation_set">
                                                                                <explicit
                                                                                  name="revision_identifier">
                                                                                  <typename
                                                                                    name="identifier"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="drawing_identifier">
                                                                                  <typename
                                                                                    name="drawing_definition"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="intended_scale"
                                                                                  optional="YES">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </explicit>
                                                                                <unique
                                                                                  label="ur1">
                                                                                  <unique.attribute
                                                                                    attribute="revision_identifier"/>
                                                                                  <unique.attribute
                                                                                    attribute="drawing_identifier"/>
                                                                                </unique>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_revision_class_of_document"
                                                                                supertypes="class product_definition_formation drawing_revision">
                                                                                <where
                                                                                  label="appropriate_category"
                                                                                  expression="SELF.of_product.name = 'document'">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_sheet_revision"
                                                                                supertypes="presentation_area">
                                                                                <explicit
                                                                                  name="revision_identifier">
                                                                                  <typename
                                                                                    name="identifier"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(item &lt;* SELF\representation.items | ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_SHEET_REVISION' IN TYPEOF(item\mapped_item.mapping_source.mapped_representation)))) = 0">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_sheet_revision_class_of_document"
                                                                                supertypes="class product_definition_formation drawing_sheet_revision">
                                                                                <where
                                                                                  label="appropriate_category"
                                                                                  expression="SELF.of_product.name = 'document'">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="drawing_sheet_revision_usage"
                                                                                supertypes="area_in_set">
                                                                                <explicit
                                                                                  name="sheet_number">
                                                                                  <typename
                                                                                    name="identifier"/>
                                                                                </explicit>
                                                                                <unique
                                                                                  label="ur1">
                                                                                  <unique.attribute
                                                                                    attribute="sheet_number"/>
                                                                                  <unique.attribute
                                                                                    attribute="in_set"/>
                                                                                </unique>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_SHEET_REVISION' IN TYPEOF(SELF\area_in_set.area)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAWING_REVISION' IN TYPEOF(SELF\area_in_set.in_set))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="electric_current_measure_with_unit"
                                                                                supertypes="measure_with_unit">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="electric_current_unit"
                                                                                supertypes="named_unit">
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="elementary_function"
                                                                                supertypes="maths_function generic_literal">
                                                                                <explicit
                                                                                  name="func_id">
                                                                                  <typename
                                                                                    name="elementary_function_enumerators"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="elementary_space"
                                                                                supertypes="maths_space generic_literal">
                                                                                <explicit
                                                                                  name="space_id">
                                                                                  <typename
                                                                                    name="elementary_space_enumerators"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="ellipse"
                                                                                supertypes="conic">
                                                                                <explicit
                                                                                  name="semi_axis_1">
                                                                                  <typename
                                                                                    name="positive_length_measure"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="semi_axis_2">
                                                                                  <typename
                                                                                    name="positive_length_measure"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="environment">
                                                                                <explicit
                                                                                  name="syntactic_representation">
                                                                                  <typename
                                                                                    name="generic_variable"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="semantics">
                                                                                  <typename
                                                                                    name="variable_semantics"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="equals_expression"
                                                                                supertypes="binary_boolean_expression">
                                                                              </entity>

                                                                              <entity
                                                                                name="executed_action"
                                                                                supertypes="action">
                                                                              </entity>

                                                                              <entity
                                                                                name="exp_function"
                                                                                supertypes="unary_function_call">
                                                                              </entity>

                                                                              <entity
                                                                                name="explicit_schematic_element_definition"
                                                                                supertypes="schematic_element_definition">
                                                                                <where
                                                                                  label="not_derived_or_defined_by_assembly"
                                                                                  expression="(SIZEOF(QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DERIVATION_OF_SCHEMATIC_ELEMENT_DEFINITION' IN TYPEOF(it))) = 0) AND (SIZEOF(QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'USAGE_OF_SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(it))) &gt;= 0)">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="explicit_table_function"
                                                                                abstract.supertype="YES"
                                                                                super.expression="(ONEOF (listed_real_data, listed_integer_data, listed_logical_data, listed_string_data, listed_complex_number_data, listed_data, externally_listed_data, linearized_table_function, basic_sparse_matrix))"
                                                                                supertypes="maths_function">
                                                                                <explicit
                                                                                  name="index_base">
                                                                                  <typename
                                                                                    name="zero_or_one"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="shape">
                                                                                  <aggregate
                                                                                    type="LIST"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="positive_integer"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="explicitly_enumerated_maths_space_context"
                                                                                supertypes="maths_space_context">
                                                                                <explicit
                                                                                  name="members">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="maths_value_context"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="expression"
                                                                                abstract.supertype="YES"
                                                                                super.expression="(ONEOF (numeric_expression, boolean_expression, string_expression))"
                                                                                supertypes="generic_expression">
                                                                              </entity>

                                                                              <entity
                                                                                name="expression_denoted_function"
                                                                                supertypes="maths_function unary_generic_expression">
                                                                                <derived
                                                                                  name="expr"
                                                                                  expression="SELF\unary_generic_expression.operand">
                                                                                  <typename
                                                                                    name="generic_expression"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="schema_prefix + 'FUNCTION_SPACE' IN TYPEOF(values_space_of(expr))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="extended_tuple_space"
                                                                                supertypes="maths_space generic_literal">
                                                                                <explicit
                                                                                  name="base">
                                                                                  <typename
                                                                                    name="product_space"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="extender">
                                                                                  <typename
                                                                                    name="maths_space"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="expression_is_constant(base) AND expression_is_constant(extender)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="no_cyclic_space_reference(SELF, [])">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="extender &lt;&gt; the_empty_space">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="external_identification_assignment"
                                                                                abstract.supertype="YES"
                                                                                supertypes="identification_assignment">
                                                                                <explicit
                                                                                  name="source">
                                                                                  <typename
                                                                                    name="external_source"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="external_source">
                                                                                <explicit
                                                                                  name="source_id">
                                                                                  <typename
                                                                                    name="source_item"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="description"
                                                                                  expression="get_description_value(SELF)">
                                                                                  <typename
                                                                                    name="text"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_curve_font"
                                                                                supertypes="externally_defined_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_hatch_style"
                                                                                supertypes="externally_defined_item geometric_representation_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_item">
                                                                                <explicit
                                                                                  name="item_id">
                                                                                  <typename
                                                                                    name="source_item"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="source">
                                                                                  <typename
                                                                                    name="external_source"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_symbol"
                                                                                supertypes="externally_defined_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_text_font"
                                                                                supertypes="externally_defined_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_defined_tile_style"
                                                                                supertypes="externally_defined_item geometric_representation_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="externally_listed_data"
                                                                                supertypes="explicit_table_function generic_literal externally_defined_item">
                                                                                <explicit
                                                                                  name="value_range">
                                                                                  <typename
                                                                                    name="maths_space"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="expression_is_constant(value_range)">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="fill_area_style">
                                                                                <explicit
                                                                                  name="name">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="fill_styles">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="fill_style_select"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="SIZEOF(QUERY(fill_style &lt;* SELF.fill_styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'FILL_AREA_STYLE_COLOUR' IN TYPEOF(fill_style))) &lt;= 1">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="fill_area_style_colour">
                                                                                <explicit
                                                                                  name="name">
                                                                                  <typename
                                                                                    name="label"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="fill_colour">
                                                                                  <typename
                                                                                    name="colour"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="fill_area_style_hatching"
                                                                                supertypes="geometric_representation_item">
                                                                                <explicit
                                                                                  name="hatch_line_appearance">
                                                                                  <typename
                                                                                    name="curve_style"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="start_of_next_hatch_line">
                                                                                  <typename
                                                                                    name="one_direction_repeat_factor"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="point_of_reference_hatch_line">
                                                                                  <typename
                                                                                    name="cartesian_point"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="pattern_start">
                                                                                  <typename
                                                                                    name="cartesian_point"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="hatch_line_angle">
                                                                                  <typename
                                                                                    name="plane_angle_measure"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="fill_area_style_tile_symbol_with_style"
                                                                                supertypes="geometric_representation_item">
                                                                                <explicit
                                                                                  name="symbol">
                                                                                  <typename
                                                                                    name="annotation_symbol_occurrence"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="fill_area_style_tiles"
                                                                                supertypes="geometric_representation_item">
                                                                                <explicit
                                                                                  name="tiling_pattern">
                                                                                  <typename
                                                                                    name="two_direction_repeat_factor"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="tiles">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="fill_area_style_tile_shape_select"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="tiling_scale">
                                                                                  <typename
                                                                                    name="positive_ratio_measure"/>
                                                                                </explicit>
                                                                              </entity>

                                                                              <entity
                                                                                name="finite_function"
                                                                                supertypes="maths_function generic_literal">
                                                                                <explicit
                                                                                  name="pairs">
                                                                                  <aggregate
                                                                                    type="SET"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="LIST"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="VALUE_UNIQUE(list_selected_components(pairs, 1))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="finite_integer_interval"
                                                                                supertypes="maths_space generic_literal">
                                                                                <explicit
                                                                                  name="min">
                                                                                  <builtintype
                                                                                    type="INTEGER"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="max">
                                                                                  <builtintype
                                                                                    type="INTEGER"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="size"
                                                                                  expression="max - min + 1">
                                                                                  <typename
                                                                                    name="positive_integer"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="min &lt;= max">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="finite_real_interval"
                                                                                supertypes="maths_space generic_literal">
                                                                                <explicit
                                                                                  name="min">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="min_closure">
                                                                                  <typename
                                                                                    name="open_closed"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="max">
                                                                                  <builtintype
                                                                                    type="REAL"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="max_closure">
                                                                                  <typename
                                                                                    name="open_closed"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="min &lt; max">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="finite_space"
                                                                                supertypes="maths_space generic_literal">
                                                                                <explicit
                                                                                  name="members">
                                                                                  <aggregate
                                                                                    type="SET"/>
                                                                                  <typename
                                                                                    name="maths_value"/>
                                                                                </explicit>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="VALUE_UNIQUE(members)">
                                                                                </where>
                                                                                <where
                                                                                  label="wr2"
                                                                                  expression="SIZEOF(QUERY(expr &lt;* QUERY(member &lt;* members |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GENERIC_EXPRESSION' IN TYPEOF(member)) | NOT expression_is_constant(expr))) = 0">
                                                                                </where>
                                                                                <where
                                                                                  label="wr3"
                                                                                  expression="no_cyclic_space_reference(SELF, [])">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="format_function"
                                                                                supertypes="string_expression binary_generic_expression">
                                                                                <derived
                                                                                  name="value_to_format"
                                                                                  expression="SELF\binary_generic_expression. operands[1]">
                                                                                  <typename
                                                                                    name="generic_expression"/>
                                                                                </derived>
                                                                                <derived
                                                                                  name="format_string"
                                                                                  expression="SELF\binary_generic_expression.operands[2]">
                                                                                  <typename
                                                                                    name="generic_expression"/>
                                                                                </derived>
                                                                                <where
                                                                                  label="wr1"
                                                                                  expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(value_to_format)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(format_string))">
                                                                                </where>
                                                                              </entity>

                                                                              <entity
                                                                                name="founded_item">
                                                                              </entity>

                                                                              <entity
                                                                                name="function_application"
                                                                                supertypes="multiple_arity_generic_expression">
                                                                                <explicit
                                                                                  name="func">
                                                                                  <typename
                                                                                    name="maths_function_select"/>
                                                                                </explicit>
                                                                                <explicit
                                                                                  name="arguments">
                                                                                  <aggregate
                                                                                    type="LIST"
                                                                                    lower="1"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="maths_expression"/>
                                                                                </explicit>
                                                                                <derived
                                                                                  name="operands"
                                                                                  expression="[convert_to_maths_function(func)] + convert_to_operands(arguments)">
                                                                                  <aggregate
                                                                                    type="LIST"
                                                                                    lower="2"
                                                                                    upper="?"/>
                                                                                  <typename
                                                                                    name="generic_expression"/>
                                                                                  <redeclaration
                                                                                    entity-ref="multiple_arity_generic_expression"/>
                                                                                  </derived>
                                                                                  <where
                                                                                    label="wr1"
                                                                                    expression="function_applicability(func, arguments)">
                                                                                  </where>
                                                                                </entity>

                                                                                <entity
                                                                                  name="function_space"
                                                                                  supertypes="maths_space generic_literal">
                                                                                  <explicit
                                                                                    name="domain_constraint">
                                                                                    <typename
                                                                                      name="space_constraint_type"/>
                                                                                  </explicit>
                                                                                  <explicit
                                                                                    name="domain_argument">
                                                                                    <typename
                                                                                      name="maths_space"/>
                                                                                  </explicit>
                                                                                  <explicit
                                                                                    name="range_constraint">
                                                                                    <typename
                                                                                      name="space_constraint_type"/>
                                                                                  </explicit>
                                                                                  <explicit
                                                                                    name="range_argument">
                                                                                    <typename
                                                                                      name="maths_space"/>
                                                                                  </explicit>
                                                                                  <where
                                                                                    label="wr1"
                                                                                    expression="expression_is_constant(domain_argument) AND expression_is_constant(range_argument)">
                                                                                  </where>
                                                                                  <where
                                                                                    label="wr2"
                                                                                    expression="(domain_argument &lt;&gt; the_empty_space) AND (range_argument &lt;&gt; the_empty_space)">
                                                                                  </where>
                                                                                  <where
                                                                                    label="wr3"
                                                                                    expression="(domain_constraint &lt;&gt; sc_member) OR NOT member_of(the_empty_space, domain_argument)">
                                                                                  </where>
                                                                                  <where
                                                                                    label="wr4"
                                                                                    expression="(range_constraint &lt;&gt; sc_member) OR NOT member_of(the_empty_space, range_argument)">
                                                                                  </where>
                                                                                  <where
                                                                                    label="wr5"
                                                                                    expression="NOT (any_space_satisfies(domain_constraint, domain_argument) AND any_space_satisfies(range_constraint, range_argument))">
                                                                                  </where>
                                                                                </entity>

                                                                                <entity
                                                                                  name="functionally_defined_transformation">
                                                                                  <explicit
                                                                                    name="name">
                                                                                    <typename
                                                                                      name="label"/>
                                                                                  </explicit>
                                                                                  <explicit
                                                                                    name="description"
                                                                                    optional="YES">
                                                                                    <typename
                                                                                      name="text"/>
                                                                                  </explicit>
                                                                                </entity>

                                                                                <entity
                                                                                  name="general_linear_function"
                                                                                  supertypes="maths_function unary_generic_expression">
                                                                                  <explicit
                                                                                    name="operand">
                                                                                    <typename
                                                                                      name="maths_function"/>
                                                                                    <redeclaration
                                                                                      entity-ref="unary_generic_expression"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="sum_index">
                                                                                      <typename
                                                                                        name="one_or_two"/>
                                                                                    </explicit>
                                                                                    <derived
                                                                                      name="mat"
                                                                                      expression="SELF\unary_generic_expression.operand">
                                                                                      <typename
                                                                                        name="maths_function"/>
                                                                                    </derived>
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="function_is_2d_table(mat)">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr2"
                                                                                      expression="(space_dimension(mat.range) = 1) AND subspace_of_es(factor1(mat.range), es_numbers)">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="general_property">
                                                                                    <explicit
                                                                                      name="id">
                                                                                      <typename
                                                                                        name="identifier"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="name">
                                                                                      <typename
                                                                                        name="label"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="description"
                                                                                      optional="YES">
                                                                                      <typename
                                                                                        name="text"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="general_property_association">
                                                                                    <explicit
                                                                                      name="name">
                                                                                      <typename
                                                                                        name="label"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="description"
                                                                                      optional="YES">
                                                                                      <typename
                                                                                        name="text"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="base_definition">
                                                                                      <typename
                                                                                        name="general_property"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="derived_definition">
                                                                                      <typename
                                                                                        name="derived_property_select"/>
                                                                                    </explicit>
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="SIZEOF(USEDIN(derived_definition,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GENERAL_PROPERTY_ASSOCIATION.DERIVED_DEFINITION')) = 1">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr2"
                                                                                      expression="derived_definition.name = base_definition.name">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="general_property_relationship">
                                                                                    <explicit
                                                                                      name="name">
                                                                                      <typename
                                                                                        name="label"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="description"
                                                                                      optional="YES">
                                                                                      <typename
                                                                                        name="text"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="relating_property">
                                                                                      <typename
                                                                                        name="general_property"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="related_property">
                                                                                      <typename
                                                                                        name="general_property"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="generic_expression"
                                                                                    abstract.supertype="YES"
                                                                                    super.expression="(ONEOF (simple_generic_expression, unary_generic_expression, binary_generic_expression, multiple_arity_generic_expression))">
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="is_acyclic(SELF)">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="generic_literal"
                                                                                    abstract.supertype="YES"
                                                                                    supertypes="simple_generic_expression">
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="generic_variable"
                                                                                    abstract.supertype="YES"
                                                                                    supertypes="simple_generic_expression">
                                                                                    <inverse
                                                                                      name="interpretation"
                                                                                      entity="environment"
                                                                                      attribute="syntactic_representation">
                                                                                    </inverse>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="geometric_curve_set"
                                                                                    supertypes="geometric_set">
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="SIZEOF(QUERY(temp &lt;* SELF\geometric_set.elements |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SURFACE' IN TYPEOF(temp))) = 0">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="geometric_representation_context"
                                                                                    supertypes="representation_context">
                                                                                    <explicit
                                                                                      name="coordinate_space_dimension">
                                                                                      <typename
                                                                                        name="dimension_count"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="geometric_representation_item"
                                                                                    super.expression="(ONEOF (point, direction, vector, placement, cartesian_transformation_operator, curve, surface, volume, geometric_set))"
                                                                                    supertypes="representation_item">
                                                                                    <derived
                                                                                      name="dim"
                                                                                      expression="dimension_of(SELF)">
                                                                                      <typename
                                                                                        name="dimension_count"/>
                                                                                    </derived>
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="SIZEOF(QUERY(using_rep &lt;* using_representations(SELF) | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(using_rep.context_of_items)))) = 0">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="geometric_set"
                                                                                    super.expression="(geometric_curve_set)"
                                                                                    supertypes="geometric_representation_item">
                                                                                    <explicit
                                                                                      name="elements">
                                                                                      <aggregate
                                                                                        type="SET"
                                                                                        lower="1"
                                                                                        upper="?"/>
                                                                                      <typename
                                                                                        name="geometric_set_select"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="geometrically_bounded_2d_wireframe_representation"
                                                                                    supertypes="shape_representation">
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="SELF.context_of_items\geometric_representation_context. coordinate_space_dimension = 2">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr2"
                                                                                      expression="SIZEOF(QUERY(item &lt;* SELF.items | NOT (SIZEOF(TYPEOF(item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_CURVE_SET','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT_2D','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM']) = 1)))= 0">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr3"
                                                                                      expression="SIZEOF(QUERY(item &lt;* SELF.items | SIZEOF(TYPEOF(item) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_CURVE_SET','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM']) = 1))&gt;= 1">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr4"
                                                                                      expression="SIZEOF(QUERY(mi &lt;* QUERY(item &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(item)) | NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'GEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION' IN TYPEOF(mi\ mapped_item.mapping_source.mapped_representation)))) = 0">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr5"
                                                                                      expression="SIZEOF(QUERY(gcs &lt;* QUERY(item &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(elem &lt;* gcs\geometric_set.elements | NOT (SIZEOF(TYPEOF(elem) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.B_SPLINE_CURVE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CIRCLE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_CURVE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ELLIPSE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.OFFSET_CURVE_2D','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POINT','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POLYLINE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TRIMMED_CURVE']) = 1))) = 0))) = 0">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr6"
                                                                                      expression="SIZEOF(QUERY(gcs &lt;* QUERY(item &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(crv &lt;* QUERY(elem &lt;* gcs\geometric_set.elements | 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE' IN TYPEOF(elem)) | NOT valid_basis_curve_in_2d_wireframe(crv))) = 0))) = 0">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr7"
                                                                                      expression="SIZEOF(QUERY(gcs &lt;* QUERY(item &lt;* SELF.items |'AIC_- GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(pnt &lt;* QUERY(elem &lt;* gcs\geometric_set.elements| 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POINT' IN TYPEOF(elem)) | NOT (SIZEOF(TYPEOF(pnt) * ['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CARTESIAN_POINT','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POINT_ON_CURVE']) = 1))) = 0))) = 0">
                                                                                    </where>
                                                                                    <where
                                                                                      label="wr8"
                                                                                      expression="SIZEOF(QUERY(gcs &lt;* QUERY(item &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF(item)) | NOT (SIZEOF(QUERY(pl &lt;* QUERY(elem &lt;* gcs\geometric_set. elements | 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POLYLINE' IN TYPEOF(elem)) | NOT (SIZEOF(pl\polyline.points) &gt; 2))) = 0))) = 0">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="global_uncertainty_assigned_context"
                                                                                    supertypes="representation_context">
                                                                                    <explicit
                                                                                      name="uncertainty">
                                                                                      <aggregate
                                                                                        type="SET"
                                                                                        lower="1"
                                                                                        upper="?"/>
                                                                                      <typename
                                                                                        name="uncertainty_measure_with_unit"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="global_unit_assigned_context"
                                                                                    supertypes="representation_context">
                                                                                    <explicit
                                                                                      name="units">
                                                                                      <aggregate
                                                                                        type="SET"
                                                                                        lower="1"
                                                                                        upper="?"/>
                                                                                      <typename
                                                                                        name="unit"/>
                                                                                    </explicit>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="group">
                                                                                    <explicit
                                                                                      name="name">
                                                                                      <typename
                                                                                        name="label"/>
                                                                                    </explicit>
                                                                                    <explicit
                                                                                      name="description"
                                                                                      optional="YES">
                                                                                      <typename
                                                                                        name="text"/>
                                                                                    </explicit>
                                                                                    <derived
                                                                                      name="id"
                                                                                      expression="get_id_value(SELF)">
                                                                                      <typename
                                                                                        name="identifier"/>
                                                                                    </derived>
                                                                                    <where
                                                                                      label="wr1"
                                                                                      expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                                                                    </where>
                                                                                  </entity>

                                                                                  <entity
                                                                                    name="homogeneous_linear_function"
                                                                                    supertypes="maths_function unary_generic_expression">
                                                                                    <explicit
                                                                                      name="operand">
                                                                                      <typename
                                                                                        name="maths_function"/>
                                                                                      <redeclaration
                                                                                        entity-ref="unary_generic_expression"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="sum_index">
                                                                                        <typename
                                                                                          name="one_or_two"/>
                                                                                      </explicit>
                                                                                      <derived
                                                                                        name="mat"
                                                                                        expression="SELF\unary_generic_expression.operand">
                                                                                        <typename
                                                                                          name="maths_function"/>
                                                                                      </derived>
                                                                                      <where
                                                                                        label="wr1"
                                                                                        expression="function_is_2d_table(mat)">
                                                                                      </where>
                                                                                      <where
                                                                                        label="wr2"
                                                                                        expression="(space_dimension(mat.range) = 1) AND subspace_of_es(factor1(mat.range), es_numbers)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="hyperbola"
                                                                                      supertypes="conic">
                                                                                      <explicit
                                                                                        name="semi_axis">
                                                                                        <typename
                                                                                          name="positive_length_measure"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="semi_imag_axis">
                                                                                        <typename
                                                                                          name="positive_length_measure"/>
                                                                                      </explicit>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="id_attribute">
                                                                                      <explicit
                                                                                        name="attribute_value">
                                                                                        <typename
                                                                                          name="identifier"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="identified_item">
                                                                                        <typename
                                                                                          name="id_attribute_select"/>
                                                                                      </explicit>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="identification_assignment"
                                                                                      abstract.supertype="YES">
                                                                                      <explicit
                                                                                        name="assigned_id">
                                                                                        <typename
                                                                                          name="identifier"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="role">
                                                                                        <typename
                                                                                          name="identification_role"/>
                                                                                      </explicit>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="identification_role">
                                                                                      <explicit
                                                                                        name="name">
                                                                                        <typename
                                                                                          name="label"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="description"
                                                                                        optional="YES">
                                                                                        <typename
                                                                                          name="text"/>
                                                                                      </explicit>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="implicit_schematic_element_definition"
                                                                                      supertypes="schematic_element_definition">
                                                                                      <where
                                                                                        label="no_styled_item"
                                                                                        expression="SIZEOF(QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM' IN TYPEOF(it))) = 0">
                                                                                      </where>
                                                                                      <where
                                                                                        label="either_derived_once_or_defined_by_assembly"
                                                                                        expression="(SIZEOF(QUERY(it &lt;* SELF.items| 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DERIVATION_OF_SCHEMATIC_ELEMENT_DEFINITION' IN TYPEOF(it))) = 1) OR (SIZEOF(QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'USAGE_OF_SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(it))) &gt;= 1)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="imported_curve_function"
                                                                                      supertypes="maths_function generic_literal">
                                                                                      <explicit
                                                                                        name="geometry">
                                                                                        <typename
                                                                                          name="curve"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="parametric_domain">
                                                                                        <typename
                                                                                          name="tuple_space"/>
                                                                                      </explicit>
                                                                                      <where
                                                                                        label="wr1"
                                                                                        expression="expression_is_constant(parametric_domain)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="imported_point_function"
                                                                                      supertypes="maths_function generic_literal">
                                                                                      <explicit
                                                                                        name="geometry">
                                                                                        <typename
                                                                                          name="point"/>
                                                                                      </explicit>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="imported_surface_function"
                                                                                      supertypes="maths_function generic_literal">
                                                                                      <explicit
                                                                                        name="geometry">
                                                                                        <typename
                                                                                          name="surface"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="parametric_domain">
                                                                                        <typename
                                                                                          name="tuple_space"/>
                                                                                      </explicit>
                                                                                      <where
                                                                                        label="wr1"
                                                                                        expression="expression_is_constant(parametric_domain)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="imported_volume_function"
                                                                                      supertypes="maths_function generic_literal">
                                                                                      <explicit
                                                                                        name="geometry">
                                                                                        <typename
                                                                                          name="volume"/>
                                                                                      </explicit>
                                                                                      <explicit
                                                                                        name="parametric_domain">
                                                                                        <typename
                                                                                          name="tuple_space"/>
                                                                                      </explicit>
                                                                                      <where
                                                                                        label="wr1"
                                                                                        expression="expression_is_constant(parametric_domain)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="index_expression"
                                                                                      supertypes="string_expression binary_generic_expression">
                                                                                      <derived
                                                                                        name="operand"
                                                                                        expression="SELF\binary_generic_expression.operands[1]">
                                                                                        <typename
                                                                                          name="generic_expression"/>
                                                                                      </derived>
                                                                                      <derived
                                                                                        name="index"
                                                                                        expression="SELF\binary_generic_expression.operands[2]">
                                                                                        <typename
                                                                                          name="generic_expression"/>
                                                                                      </derived>
                                                                                      <where
                                                                                        label="wr1"
                                                                                        expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(operand)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(index))">
                                                                                      </where>
                                                                                      <where
                                                                                        label="wr2"
                                                                                        expression="is_int_expr(index)">
                                                                                      </where>
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="individual_activity"
                                                                                      supertypes="executed_action">
                                                                                    </entity>

                                                                                    <entity
                                                                                      name="individual_involvement_in_activity"
                                                                                      supertypes="applied_action_assignment">
                                                                                      <explicit
                                                                                        name="assigned_action">
                                                                                        <typename
                                                                                          name="individual_activity"/>
                                                                                        <redeclaration
                                                                                          entity-ref="action_assignment"/>
                                                                                        </explicit>
                                                                                        <explicit
                                                                                          name="items">
                                                                                          <aggregate
                                                                                            type="SET"
                                                                                            lower="1"
                                                                                            upper="1"/>
                                                                                          <typename
                                                                                            name="involved_select"/>
                                                                                          <redeclaration
                                                                                            entity-ref="applied_action_assignment"/>
                                                                                          </explicit>
                                                                                        </entity>

                                                                                        <entity
                                                                                          name="int_literal"
                                                                                          supertypes="literal_number">
                                                                                          <explicit
                                                                                            name="the_value">
                                                                                            <builtintype
                                                                                              type="INTEGER"/>
                                                                                            <redeclaration
                                                                                              entity-ref="literal_number"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="integer_defined_function"
                                                                                            abstract.supertype="YES"
                                                                                            supertypes="numeric_defined_function">
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="integer_interval_from_min"
                                                                                            supertypes="maths_space generic_literal">
                                                                                            <explicit
                                                                                              name="min">
                                                                                              <builtintype
                                                                                                type="INTEGER"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="integer_interval_to_max"
                                                                                            supertypes="maths_space generic_literal">
                                                                                            <explicit
                                                                                              name="max">
                                                                                              <builtintype
                                                                                                type="INTEGER"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="integer_tuple_literal"
                                                                                            supertypes="generic_literal">
                                                                                            <explicit
                                                                                              name="lit_value">
                                                                                              <aggregate
                                                                                                type="LIST"
                                                                                                lower="1"
                                                                                                upper="?"/>
                                                                                              <builtintype
                                                                                                type="INTEGER"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="intersection">
                                                                                            <explicit
                                                                                              name="id">
                                                                                              <typename
                                                                                                name="identifier"/>
                                                                                            </explicit>
                                                                                            <explicit
                                                                                              name="name">
                                                                                              <typename
                                                                                                name="label"/>
                                                                                            </explicit>
                                                                                            <explicit
                                                                                              name="description"
                                                                                              optional="YES">
                                                                                              <typename
                                                                                                name="text"/>
                                                                                            </explicit>
                                                                                            <explicit
                                                                                              name="operand">
                                                                                              <aggregate
                                                                                                type="SET"
                                                                                                lower="2"
                                                                                                upper="?"/>
                                                                                              <typename
                                                                                                name="class"/>
                                                                                            </explicit>
                                                                                            <explicit
                                                                                              name="resultant">
                                                                                              <typename
                                                                                                name="class"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="interval_expression"
                                                                                            supertypes="boolean_expression multiple_arity_generic_expression">
                                                                                            <derived
                                                                                              name="interval_low"
                                                                                              expression="SELF\multiple_arity_generic_expression. operands[1]">
                                                                                              <typename
                                                                                                name="generic_expression"/>
                                                                                            </derived>
                                                                                            <derived
                                                                                              name="interval_item"
                                                                                              expression="SELF\multiple_arity_generic_expression. operands[2]">
                                                                                              <typename
                                                                                                name="generic_expression"/>
                                                                                            </derived>
                                                                                            <derived
                                                                                              name="interval_high"
                                                                                              expression="SELF\multiple_arity_generic_expression. operands[3]">
                                                                                              <typename
                                                                                                name="generic_expression"/>
                                                                                            </derived>
                                                                                            <where
                                                                                              label="wr1"
                                                                                              expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EXPRESSION' IN TYPEOF(interval_low)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EXPRESSION' IN TYPEOF(interval_item)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EXPRESSION' IN TYPEOF(interval_high))">
                                                                                            </where>
                                                                                            <where
                                                                                              label="wr2"
                                                                                              expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF.interval_low)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF.interval_high)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF.interval_item)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF.interval_low)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(SELF.interval_item)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(SELF.interval_high))">
                                                                                            </where>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="intra_page_connector"
                                                                                            supertypes="page_connector">
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="invisibility">
                                                                                            <explicit
                                                                                              name="invisible_items">
                                                                                              <aggregate
                                                                                                type="SET"
                                                                                                lower="1"
                                                                                                upper="?"/>
                                                                                              <typename
                                                                                                name="invisible_item"/>
                                                                                            </explicit>
                                                                                          </entity>

                                                                                          <entity
                                                                                            name="involvement_of_individual_product_in_connection"
                                                                                            supertypes="product_definition_formation_relationship">
                                                                                            <explicit
                                                                                              name="relating_product_definition_formation">
                                                                                              <typename
                                                                                                name="connection_of_individual_product_with_involvements"/>
                                                                                              <redeclaration
                                                                                                entity-ref="product_definition_formation_relationship"/>
                                                                                              </explicit>
                                                                                              <explicit
                                                                                                name="related_product_definition_formation">
                                                                                                <typename
                                                                                                  name="product_as_individual"/>
                                                                                                <redeclaration
                                                                                                  entity-ref="product_definition_formation_relationship"/>
                                                                                                </explicit>
                                                                                              </entity>

                                                                                              <entity
                                                                                                name="length_function"
                                                                                                supertypes="numeric_expression unary_generic_expression">
                                                                                                <explicit
                                                                                                  name="operand">
                                                                                                  <typename
                                                                                                    name="string_expression"/>
                                                                                                  <redeclaration
                                                                                                    entity-ref="unary_generic_expression"/>
                                                                                                  </explicit>
                                                                                                </entity>

                                                                                                <entity
                                                                                                  name="length_measure_with_unit"
                                                                                                  supertypes="measure_with_unit">
                                                                                                  <where
                                                                                                    label="wr1"
                                                                                                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LENGTH_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                  </where>
                                                                                                </entity>

                                                                                                <entity
                                                                                                  name="length_unit"
                                                                                                  supertypes="named_unit">
                                                                                                  <where
                                                                                                    label="wr1"
                                                                                                    expression="(SELF\named_unit.dimensions.length_exponent = 1.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                  </where>
                                                                                                </entity>

                                                                                                <entity
                                                                                                  name="like_expression"
                                                                                                  supertypes="comparison_expression">
                                                                                                  <where
                                                                                                    label="wr1"
                                                                                                    expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(SELF\binary_generic_expression.operands[2]))">
                                                                                                  </where>
                                                                                                </entity>

                                                                                                <entity
                                                                                                  name="line"
                                                                                                  supertypes="curve">
                                                                                                  <explicit
                                                                                                    name="pnt">
                                                                                                    <typename
                                                                                                      name="cartesian_point"/>
                                                                                                  </explicit>
                                                                                                  <explicit
                                                                                                    name="dir">
                                                                                                    <typename
                                                                                                      name="vector"/>
                                                                                                  </explicit>
                                                                                                  <where
                                                                                                    label="wr1"
                                                                                                    expression="dir.dim = pnt.dim">
                                                                                                  </where>
                                                                                                </entity>

                                                                                                <entity
                                                                                                  name="linearized_table_function"
                                                                                                  supertypes="explicit_table_function unary_generic_expression">
                                                                                                  <explicit
                                                                                                    name="operand">
                                                                                                    <typename
                                                                                                      name="maths_function"/>
                                                                                                    <redeclaration
                                                                                                      entity-ref="unary_generic_expression"/>
                                                                                                    </explicit>
                                                                                                    <explicit
                                                                                                      name="first">
                                                                                                      <builtintype
                                                                                                        type="INTEGER"/>
                                                                                                    </explicit>
                                                                                                    <derived
                                                                                                      name="source"
                                                                                                      expression="SELF\unary_generic_expression.operand">
                                                                                                      <typename
                                                                                                        name="maths_function"/>
                                                                                                    </derived>
                                                                                                    <where
                                                                                                      label="wr1"
                                                                                                      expression="function_is_1d_array(source)">
                                                                                                    </where>
                                                                                                    <where
                                                                                                      label="wr2"
                                                                                                      expression="member_of(first, source.domain)">
                                                                                                    </where>
                                                                                                  </entity>

                                                                                                  <entity
                                                                                                    name="listed_complex_number_data"
                                                                                                    supertypes="explicit_table_function generic_literal">
                                                                                                    <explicit
                                                                                                      name="values">
                                                                                                      <aggregate
                                                                                                        type="LIST"
                                                                                                        lower="2"
                                                                                                        upper="?"/>
                                                                                                      <builtintype
                                                                                                        type="REAL"/>
                                                                                                    </explicit>
                                                                                                    <derived
                                                                                                      name="shape"
                                                                                                      expression="[ SIZEOF(values)/2]">
                                                                                                      <aggregate
                                                                                                        type="LIST"
                                                                                                        lower="1"
                                                                                                        upper="?"/>
                                                                                                      <typename
                                                                                                        name="positive_integer"/>
                                                                                                      <redeclaration
                                                                                                        entity-ref="explicit_table_function"/>
                                                                                                      </derived>
                                                                                                      <where
                                                                                                        label="wr1"
                                                                                                        expression="NOT ODD(SIZEOF(values))">
                                                                                                      </where>
                                                                                                    </entity>

                                                                                                    <entity
                                                                                                      name="listed_data"
                                                                                                      supertypes="explicit_table_function generic_literal">
                                                                                                      <explicit
                                                                                                        name="values">
                                                                                                        <aggregate
                                                                                                          type="LIST"
                                                                                                          lower="1"
                                                                                                          upper="?"/>
                                                                                                        <typename
                                                                                                          name="maths_value"/>
                                                                                                      </explicit>
                                                                                                      <explicit
                                                                                                        name="value_range">
                                                                                                        <typename
                                                                                                          name="maths_space"/>
                                                                                                      </explicit>
                                                                                                      <derived
                                                                                                        name="shape"
                                                                                                        expression="[ SIZEOF(values)]">
                                                                                                        <aggregate
                                                                                                          type="LIST"
                                                                                                          lower="1"
                                                                                                          upper="?"/>
                                                                                                        <typename
                                                                                                          name="positive_integer"/>
                                                                                                        <redeclaration
                                                                                                          entity-ref="explicit_table_function"/>
                                                                                                        </derived>
                                                                                                        <where
                                                                                                          label="wr1"
                                                                                                          expression="expression_is_constant(value_range)">
                                                                                                        </where>
                                                                                                        <where
                                                                                                          label="wr2"
                                                                                                          expression="SIZEOF(QUERY(val &lt;* values | NOT member_of(val, value_range))) = 0">
                                                                                                        </where>
                                                                                                      </entity>

                                                                                                      <entity
                                                                                                        name="listed_integer_data"
                                                                                                        supertypes="explicit_table_function generic_literal">
                                                                                                        <explicit
                                                                                                          name="values">
                                                                                                          <aggregate
                                                                                                            type="LIST"
                                                                                                            lower="1"
                                                                                                            upper="?"/>
                                                                                                          <builtintype
                                                                                                            type="INTEGER"/>
                                                                                                        </explicit>
                                                                                                        <derived
                                                                                                          name="shape"
                                                                                                          expression="[ SIZEOF(values)]">
                                                                                                          <aggregate
                                                                                                            type="LIST"
                                                                                                            lower="1"
                                                                                                            upper="?"/>
                                                                                                          <typename
                                                                                                            name="positive_integer"/>
                                                                                                          <redeclaration
                                                                                                            entity-ref="explicit_table_function"/>
                                                                                                          </derived>
                                                                                                        </entity>

                                                                                                        <entity
                                                                                                          name="listed_logical_data"
                                                                                                          supertypes="explicit_table_function generic_literal">
                                                                                                          <explicit
                                                                                                            name="values">
                                                                                                            <aggregate
                                                                                                              type="LIST"
                                                                                                              lower="1"
                                                                                                              upper="?"/>
                                                                                                            <builtintype
                                                                                                              type="LOGICAL"/>
                                                                                                          </explicit>
                                                                                                          <derived
                                                                                                            name="shape"
                                                                                                            expression="[ SIZEOF(values)]">
                                                                                                            <aggregate
                                                                                                              type="LIST"
                                                                                                              lower="1"
                                                                                                              upper="?"/>
                                                                                                            <typename
                                                                                                              name="positive_integer"/>
                                                                                                            <redeclaration
                                                                                                              entity-ref="explicit_table_function"/>
                                                                                                            </derived>
                                                                                                          </entity>

                                                                                                          <entity
                                                                                                            name="listed_product_space"
                                                                                                            supertypes="maths_space generic_literal">
                                                                                                            <explicit
                                                                                                              name="factors">
                                                                                                              <aggregate
                                                                                                                type="LIST"/>
                                                                                                              <typename
                                                                                                                name="maths_space"/>
                                                                                                            </explicit>
                                                                                                            <where
                                                                                                              label="wr1"
                                                                                                              expression="SIZEOF(QUERY(space &lt;* factors | NOT expression_is_constant(space))) = 0">
                                                                                                            </where>
                                                                                                            <where
                                                                                                              label="wr2"
                                                                                                              expression="no_cyclic_space_reference(SELF, [])">
                                                                                                            </where>
                                                                                                            <where
                                                                                                              label="wr3"
                                                                                                              expression="NOT (the_empty_space IN factors)">
                                                                                                            </where>
                                                                                                          </entity>

                                                                                                          <entity
                                                                                                            name="listed_real_data"
                                                                                                            supertypes="explicit_table_function generic_literal">
                                                                                                            <explicit
                                                                                                              name="values">
                                                                                                              <aggregate
                                                                                                                type="LIST"
                                                                                                                lower="1"
                                                                                                                upper="?"/>
                                                                                                              <builtintype
                                                                                                                type="REAL"/>
                                                                                                            </explicit>
                                                                                                            <derived
                                                                                                              name="shape"
                                                                                                              expression="[ SIZEOF(values)]">
                                                                                                              <aggregate
                                                                                                                type="LIST"
                                                                                                                lower="1"
                                                                                                                upper="?"/>
                                                                                                              <typename
                                                                                                                name="positive_integer"/>
                                                                                                              <redeclaration
                                                                                                                entity-ref="explicit_table_function"/>
                                                                                                              </derived>
                                                                                                            </entity>

                                                                                                            <entity
                                                                                                              name="listed_string_data"
                                                                                                              supertypes="explicit_table_function generic_literal">
                                                                                                              <explicit
                                                                                                                name="values">
                                                                                                                <aggregate
                                                                                                                  type="LIST"
                                                                                                                  lower="1"
                                                                                                                  upper="?"/>
                                                                                                                <builtintype
                                                                                                                  type="STRING"/>
                                                                                                              </explicit>
                                                                                                              <derived
                                                                                                                name="shape"
                                                                                                                expression="[ SIZEOF(values)]">
                                                                                                                <aggregate
                                                                                                                  type="LIST"
                                                                                                                  lower="1"
                                                                                                                  upper="?"/>
                                                                                                                <typename
                                                                                                                  name="positive_integer"/>
                                                                                                                <redeclaration
                                                                                                                  entity-ref="explicit_table_function"/>
                                                                                                                </derived>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="literal_number"
                                                                                                                abstract.supertype="YES"
                                                                                                                super.expression="(ONEOF (int_literal, real_literal))"
                                                                                                                supertypes="simple_numeric_expression generic_literal">
                                                                                                                <explicit
                                                                                                                  name="the_value">
                                                                                                                  <builtintype
                                                                                                                    type="NUMBER"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="log10_function"
                                                                                                                supertypes="unary_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="log2_function"
                                                                                                                supertypes="unary_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="log_function"
                                                                                                                supertypes="unary_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="logical_literal"
                                                                                                                supertypes="generic_literal">
                                                                                                                <explicit
                                                                                                                  name="lit_value">
                                                                                                                  <builtintype
                                                                                                                    type="LOGICAL"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="luminous_intensity_measure_with_unit"
                                                                                                                supertypes="measure_with_unit">
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="luminous_intensity_unit"
                                                                                                                supertypes="named_unit">
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 1.0)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="mapped_item"
                                                                                                                supertypes="representation_item">
                                                                                                                <explicit
                                                                                                                  name="mapping_source">
                                                                                                                  <typename
                                                                                                                    name="representation_map"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="mapping_target">
                                                                                                                  <typename
                                                                                                                    name="representation_item"/>
                                                                                                                </explicit>
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="acyclic_mapped_representation(using_representations(SELF), [SELF])">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="mass_measure_with_unit"
                                                                                                                supertypes="measure_with_unit">
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MASS_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="mass_unit"
                                                                                                                supertypes="named_unit">
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_enum_literal"
                                                                                                                supertypes="generic_literal">
                                                                                                                <explicit
                                                                                                                  name="lit_value">
                                                                                                                  <typename
                                                                                                                    name="maths_enum_atom"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_function"
                                                                                                                abstract.supertype="YES"
                                                                                                                super.expression="(ONEOF (finite_function, constant_function, selector_function, elementary_function, restriction_function, repackaging_function, reindexed_array_function, series_composed_function, parallel_composed_function, explicit_table_function, homogeneous_linear_function, general_linear_function, b_spline_basis, b_spline_function, rationalize_function, partial_derivative_function, definite_integral_function, abstracted_expression_function, expression_denoted_function, imported_point_function, imported_curve_function, imported_surface_function, imported_volume_function, application_defined_function))"
                                                                                                                supertypes="generic_expression">
                                                                                                                <derived
                                                                                                                  name="domain"
                                                                                                                  expression="derive_function_domain(SELF)">
                                                                                                                  <typename
                                                                                                                    name="tuple_space"/>
                                                                                                                </derived>
                                                                                                                <derived
                                                                                                                  name="range"
                                                                                                                  expression="derive_function_range(SELF)">
                                                                                                                  <typename
                                                                                                                    name="tuple_space"/>
                                                                                                                </derived>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_space"
                                                                                                                abstract.supertype="YES"
                                                                                                                super.expression="(ONEOF (elementary_space, finite_integer_interval, integer_interval_from_min, integer_interval_to_max, finite_real_interval, real_interval_from_min, real_interval_to_max, cartesian_complex_number_region, polar_complex_number_region, finite_space, uniform_product_space, listed_product_space, extended_tuple_space, function_space))"
                                                                                                                supertypes="generic_expression">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_space_context"
                                                                                                                super.expression="(ONEOF (compound_maths_space_context, defined_maths_space_context, explicitly_enumerated_maths_space_context))">
                                                                                                                <explicit
                                                                                                                  name="id">
                                                                                                                  <typename
                                                                                                                    name="identifier"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="name">
                                                                                                                  <typename
                                                                                                                    name="label"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="description"
                                                                                                                  optional="YES">
                                                                                                                  <typename
                                                                                                                    name="text"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="abstract_space">
                                                                                                                  <typename
                                                                                                                    name="maths_space"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="physical_space">
                                                                                                                  <typename
                                                                                                                    name="space_context_select"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_tuple_literal"
                                                                                                                supertypes="generic_literal">
                                                                                                                <explicit
                                                                                                                  name="lit_value">
                                                                                                                  <aggregate
                                                                                                                    type="LIST"/>
                                                                                                                  <typename
                                                                                                                    name="maths_value"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_value_context">
                                                                                                                <explicit
                                                                                                                  name="id">
                                                                                                                  <typename
                                                                                                                    name="identifier"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="name">
                                                                                                                  <typename
                                                                                                                    name="label"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="description"
                                                                                                                  optional="YES">
                                                                                                                  <typename
                                                                                                                    name="text"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="abstract_value">
                                                                                                                  <typename
                                                                                                                    name="maths_value"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="physical_value">
                                                                                                                  <typename
                                                                                                                    name="value_context_select"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maths_variable"
                                                                                                                supertypes="generic_variable">
                                                                                                                <explicit
                                                                                                                  name="values_space">
                                                                                                                  <typename
                                                                                                                    name="maths_space"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="name">
                                                                                                                  <typename
                                                                                                                    name="label"/>
                                                                                                                </explicit>
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="expression_is_constant(values_space)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="maximum_function"
                                                                                                                supertypes="multiple_arity_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="measure_with_unit"
                                                                                                                super.expression="(ONEOF (length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit))">
                                                                                                                <explicit
                                                                                                                  name="value_component">
                                                                                                                  <typename
                                                                                                                    name="measure_value"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="unit_component">
                                                                                                                  <typename
                                                                                                                    name="unit"/>
                                                                                                                </explicit>
                                                                                                                <where
                                                                                                                  label="wr1"
                                                                                                                  expression="valid_units(SELF)">
                                                                                                                </where>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="membership_of_maths_space_context">
                                                                                                                <explicit
                                                                                                                  name="space_context">
                                                                                                                  <typename
                                                                                                                    name="maths_space_context"/>
                                                                                                                </explicit>
                                                                                                                <explicit
                                                                                                                  name="value_context">
                                                                                                                  <typename
                                                                                                                    name="maths_value_context"/>
                                                                                                                </explicit>
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="minimum_function"
                                                                                                                supertypes="multiple_arity_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="minus_expression"
                                                                                                                supertypes="binary_numeric_expression">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="minus_function"
                                                                                                                supertypes="unary_function_call">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="mod_expression"
                                                                                                                supertypes="binary_numeric_expression">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="mult_expression"
                                                                                                                supertypes="multiple_arity_numeric_expression">
                                                                                                              </entity>

                                                                                                              <entity
                                                                                                                name="multiple_arity_boolean_expression"
                                                                                                                abstract.supertype="YES"
                                                                                                                super.expression="(ONEOF (and_expression, or_expression))"
                                                                                                                supertypes="boolean_expression multiple_arity_generic_expression">
                                                                                                                <explicit
                                                                                                                  name="operands">
                                                                                                                  <aggregate
                                                                                                                    type="LIST"
                                                                                                                    lower="2"
                                                                                                                    upper="?"/>
                                                                                                                  <typename
                                                                                                                    name="boolean_expression"/>
                                                                                                                  <redeclaration
                                                                                                                    entity-ref="multiple_arity_generic_expression"/>
                                                                                                                  </explicit>
                                                                                                                </entity>

                                                                                                                <entity
                                                                                                                  name="multiple_arity_function_call"
                                                                                                                  abstract.supertype="YES"
                                                                                                                  super.expression="(ONEOF (maximum_function, minimum_function))"
                                                                                                                  supertypes="multiple_arity_numeric_expression">
                                                                                                                </entity>

                                                                                                                <entity
                                                                                                                  name="multiple_arity_generic_expression"
                                                                                                                  abstract.supertype="YES"
                                                                                                                  supertypes="generic_expression">
                                                                                                                  <explicit
                                                                                                                    name="operands">
                                                                                                                    <aggregate
                                                                                                                      type="LIST"
                                                                                                                      lower="2"
                                                                                                                      upper="?"/>
                                                                                                                    <typename
                                                                                                                      name="generic_expression"/>
                                                                                                                  </explicit>
                                                                                                                </entity>

                                                                                                                <entity
                                                                                                                  name="multiple_arity_numeric_expression"
                                                                                                                  abstract.supertype="YES"
                                                                                                                  super.expression="(ONEOF (plus_expression, mult_expression, multiple_arity_function_call))"
                                                                                                                  supertypes="numeric_expression multiple_arity_generic_expression">
                                                                                                                  <explicit
                                                                                                                    name="operands">
                                                                                                                    <aggregate
                                                                                                                      type="LIST"
                                                                                                                      lower="2"
                                                                                                                      upper="?"/>
                                                                                                                    <typename
                                                                                                                      name="numeric_expression"/>
                                                                                                                    <redeclaration
                                                                                                                      entity-ref="multiple_arity_generic_expression"/>
                                                                                                                    </explicit>
                                                                                                                  </entity>

                                                                                                                  <entity
                                                                                                                    name="name_attribute">
                                                                                                                    <explicit
                                                                                                                      name="attribute_value">
                                                                                                                      <typename
                                                                                                                        name="label"/>
                                                                                                                    </explicit>
                                                                                                                    <explicit
                                                                                                                      name="named_item">
                                                                                                                      <typename
                                                                                                                        name="name_attribute_select"/>
                                                                                                                    </explicit>
                                                                                                                  </entity>

                                                                                                                  <entity
                                                                                                                    name="named_unit"
                                                                                                                    super.expression="(ONEOF (si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF (length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit))">
                                                                                                                    <explicit
                                                                                                                      name="dimensions">
                                                                                                                      <typename
                                                                                                                        name="dimensional_exponents"/>
                                                                                                                    </explicit>
                                                                                                                  </entity>

                                                                                                                  <entity
                                                                                                                    name="not_expression"
                                                                                                                    supertypes="unary_boolean_expression">
                                                                                                                    <explicit
                                                                                                                      name="operand">
                                                                                                                      <typename
                                                                                                                        name="boolean_expression"/>
                                                                                                                      <redeclaration
                                                                                                                        entity-ref="unary_generic_expression"/>
                                                                                                                      </explicit>
                                                                                                                    </entity>

                                                                                                                    <entity
                                                                                                                      name="numeric_defined_function"
                                                                                                                      abstract.supertype="YES"
                                                                                                                      super.expression="(ONEOF (integer_defined_function, real_defined_function))"
                                                                                                                      supertypes="numeric_expression defined_function">
                                                                                                                    </entity>

                                                                                                                    <entity
                                                                                                                      name="numeric_expression"
                                                                                                                      abstract.supertype="YES"
                                                                                                                      super.expression="(ONEOF (simple_numeric_expression, unary_numeric_expression, binary_numeric_expression, multiple_arity_numeric_expression, length_function, value_function, numeric_defined_function))"
                                                                                                                      supertypes="expression">
                                                                                                                      <derived
                                                                                                                        name="is_int"
                                                                                                                        expression="is_int_expr(SELF)">
                                                                                                                        <builtintype
                                                                                                                          type="BOOLEAN"/>
                                                                                                                      </derived>
                                                                                                                      <derived
                                                                                                                        name="sql_mappable"
                                                                                                                        expression="is_sql_mappable(SELF)">
                                                                                                                        <builtintype
                                                                                                                          type="BOOLEAN"/>
                                                                                                                      </derived>
                                                                                                                    </entity>

                                                                                                                    <entity
                                                                                                                      name="numeric_variable"
                                                                                                                      supertypes="simple_numeric_expression variable">
                                                                                                                      <where
                                                                                                                        label="wr1"
                                                                                                                        expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF(SELF)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF(SELF))">
                                                                                                                      </where>
                                                                                                                    </entity>

                                                                                                                    <entity
                                                                                                                      name="object_role">
                                                                                                                      <explicit
                                                                                                                        name="name">
                                                                                                                        <typename
                                                                                                                          name="label"/>
                                                                                                                      </explicit>
                                                                                                                      <explicit
                                                                                                                        name="description"
                                                                                                                        optional="YES">
                                                                                                                        <typename
                                                                                                                          name="text"/>
                                                                                                                      </explicit>
                                                                                                                    </entity>

                                                                                                                    <entity
                                                                                                                      name="odd_function"
                                                                                                                      supertypes="unary_boolean_expression">
                                                                                                                      <explicit
                                                                                                                        name="operand">
                                                                                                                        <typename
                                                                                                                          name="numeric_expression"/>
                                                                                                                        <redeclaration
                                                                                                                          entity-ref="unary_generic_expression"/>
                                                                                                                        </explicit>
                                                                                                                        <where
                                                                                                                          label="wr1"
                                                                                                                          expression="is_int_expr(SELF\numeric_expression)">
                                                                                                                        </where>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="off_page_connector"
                                                                                                                        supertypes="page_connector">
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="offset_curve_2d"
                                                                                                                        supertypes="curve">
                                                                                                                        <explicit
                                                                                                                          name="basis_curve">
                                                                                                                          <typename
                                                                                                                            name="curve"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="distance">
                                                                                                                          <typename
                                                                                                                            name="length_measure"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="self_intersect">
                                                                                                                          <builtintype
                                                                                                                            type="LOGICAL"/>
                                                                                                                        </explicit>
                                                                                                                        <where
                                                                                                                          label="wr1"
                                                                                                                          expression="basis_curve.dim = 2">
                                                                                                                        </where>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="on_page_connector"
                                                                                                                        supertypes="page_connector">
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="one_direction_repeat_factor"
                                                                                                                        supertypes="geometric_representation_item">
                                                                                                                        <explicit
                                                                                                                          name="repeat_factor">
                                                                                                                          <typename
                                                                                                                            name="vector"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="or_expression"
                                                                                                                        supertypes="multiple_arity_boolean_expression">
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization">
                                                                                                                        <explicit
                                                                                                                          name="id"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="identifier"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_assignment"
                                                                                                                        abstract.supertype="YES">
                                                                                                                        <explicit
                                                                                                                          name="assigned_organization">
                                                                                                                          <typename
                                                                                                                            name="organization"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="role">
                                                                                                                          <typename
                                                                                                                            name="organization_role"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_relationship">
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="relating_organization">
                                                                                                                          <typename
                                                                                                                            name="organization"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="related_organization">
                                                                                                                          <typename
                                                                                                                            name="organization"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_role">
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <derived
                                                                                                                          name="description"
                                                                                                                          expression="get_description_value(SELF)">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </derived>
                                                                                                                        <where
                                                                                                                          label="wr1"
                                                                                                                          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                        </where>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_type">
                                                                                                                        <explicit
                                                                                                                          name="id">
                                                                                                                          <typename
                                                                                                                            name="identifier"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_type_assignment"
                                                                                                                        abstract.supertype="YES">
                                                                                                                        <explicit
                                                                                                                          name="id">
                                                                                                                          <typename
                                                                                                                            name="identifier"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="assigned_organization_type">
                                                                                                                          <typename
                                                                                                                            name="organization_type"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="role">
                                                                                                                          <typename
                                                                                                                            name="organization_type_role"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organization_type_role">
                                                                                                                        <explicit
                                                                                                                          name="id">
                                                                                                                          <typename
                                                                                                                            name="identifier"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="name">
                                                                                                                          <typename
                                                                                                                            name="label"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="organizational_address"
                                                                                                                        supertypes="address">
                                                                                                                        <explicit
                                                                                                                          name="organizations">
                                                                                                                          <aggregate
                                                                                                                            type="SET"
                                                                                                                            lower="1"
                                                                                                                            upper="?"/>
                                                                                                                          <typename
                                                                                                                            name="organization"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="description"
                                                                                                                          optional="YES">
                                                                                                                          <typename
                                                                                                                            name="text"/>
                                                                                                                        </explicit>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="page_connector"
                                                                                                                        supertypes="schematic_element_definition">
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="parabola"
                                                                                                                        supertypes="conic">
                                                                                                                        <explicit
                                                                                                                          name="focal_dist">
                                                                                                                          <typename
                                                                                                                            name="length_measure"/>
                                                                                                                        </explicit>
                                                                                                                        <where
                                                                                                                          label="wr1"
                                                                                                                          expression="focal_dist &lt;&gt; 0.0">
                                                                                                                        </where>
                                                                                                                      </entity>

                                                                                                                      <entity
                                                                                                                        name="parallel_composed_function"
                                                                                                                        supertypes="maths_function multiple_arity_generic_expression">
                                                                                                                        <explicit
                                                                                                                          name="source_of_domain">
                                                                                                                          <typename
                                                                                                                            name="maths_space_or_function"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="prep_functions">
                                                                                                                          <aggregate
                                                                                                                            type="LIST"
                                                                                                                            lower="1"
                                                                                                                            upper="?"/>
                                                                                                                          <typename
                                                                                                                            name="maths_function"/>
                                                                                                                        </explicit>
                                                                                                                        <explicit
                                                                                                                          name="final_function">
                                                                                                                          <typename
                                                                                                                            name="maths_function_select"/>
                                                                                                                        </explicit>
                                                                                                                        <derived
                                                                                                                          name="operands"
                                                                                                                          expression="convert_to_operands_prcmfn(source_of_domain, prep_functions, final_function)">
                                                                                                                          <aggregate
                                                                                                                            type="LIST"
                                                                                                                            lower="2"
                                                                                                                            upper="?"/>
                                                                                                                          <typename
                                                                                                                            name="generic_expression"/>
                                                                                                                          <redeclaration
                                                                                                                            entity-ref="multiple_arity_generic_expression"/>
                                                                                                                          </derived>
                                                                                                                          <where
                                                                                                                            label="wr1"
                                                                                                                            expression="no_cyclic_domain_reference(source_of_domain, [SELF])">
                                                                                                                          </where>
                                                                                                                          <where
                                                                                                                            label="wr2"
                                                                                                                            expression="expression_is_constant(domain_from(source_of_domain))">
                                                                                                                          </where>
                                                                                                                          <where
                                                                                                                            label="wr3"
                                                                                                                            expression="parallel_composed_function_domain_check(domain_from(source_of_domain), prep_functions)">
                                                                                                                          </where>
                                                                                                                          <where
                                                                                                                            label="wr4"
                                                                                                                            expression="parallel_composed_function_composability_check(prep_functions, final_function)">
                                                                                                                          </where>
                                                                                                                        </entity>

                                                                                                                        <entity
                                                                                                                          name="partial_derivative_expression"
                                                                                                                          supertypes="unary_generic_expression">
                                                                                                                          <explicit
                                                                                                                            name="d_variables">
                                                                                                                            <aggregate
                                                                                                                              type="LIST"
                                                                                                                              lower="1"
                                                                                                                              upper="?"/>
                                                                                                                            <typename
                                                                                                                              name="maths_variable"/>
                                                                                                                          </explicit>
                                                                                                                          <explicit
                                                                                                                            name="extension">
                                                                                                                            <typename
                                                                                                                              name="extension_options"/>
                                                                                                                          </explicit>
                                                                                                                          <derived
                                                                                                                            name="derivand"
                                                                                                                            expression="SELF\unary_generic_expression.operand">
                                                                                                                            <typename
                                                                                                                              name="generic_expression"/>
                                                                                                                          </derived>
                                                                                                                          <where
                                                                                                                            label="wr1"
                                                                                                                            expression="has_values_space(derivand)">
                                                                                                                          </where>
                                                                                                                          <where
                                                                                                                            label="wr2"
                                                                                                                            expression="space_is_continuum(values_space_of(derivand))">
                                                                                                                          </where>
                                                                                                                          <where
                                                                                                                            label="wr3"
                                                                                                                            expression="SIZEOF(QUERY(vbl &lt;* d_variables | NOT subspace_of(values_space_of(vbl), the_reals) AND NOT subspace_of(values_space_of(vbl), the_complex_numbers))) = 0">
                                                                                                                          </where>
                                                                                                                        </entity>

                                                                                                                        <entity
                                                                                                                          name="partial_derivative_function"
                                                                                                                          supertypes="maths_function unary_generic_expression">
                                                                                                                          <explicit
                                                                                                                            name="operand">
                                                                                                                            <typename
                                                                                                                              name="maths_function"/>
                                                                                                                            <redeclaration
                                                                                                                              entity-ref="unary_generic_expression"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="d_variables">
                                                                                                                              <aggregate
                                                                                                                                type="LIST"
                                                                                                                                lower="1"
                                                                                                                                upper="?"/>
                                                                                                                              <typename
                                                                                                                                name="input_selector"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="extension">
                                                                                                                              <typename
                                                                                                                                name="extension_options"/>
                                                                                                                            </explicit>
                                                                                                                            <derived
                                                                                                                              name="derivand"
                                                                                                                              expression="SELF\unary_generic_expression.operand">
                                                                                                                              <typename
                                                                                                                                name="maths_function"/>
                                                                                                                            </derived>
                                                                                                                            <where
                                                                                                                              label="wr1"
                                                                                                                              expression="space_is_continuum(derivand.range)">
                                                                                                                            </where>
                                                                                                                            <where
                                                                                                                              label="wr2"
                                                                                                                              expression="partial_derivative_check(derivand.domain, d_variables)">
                                                                                                                            </where>
                                                                                                                          </entity>

                                                                                                                          <entity
                                                                                                                            name="person">
                                                                                                                            <explicit
                                                                                                                              name="id">
                                                                                                                              <typename
                                                                                                                                name="identifier"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="last_name"
                                                                                                                              optional="YES">
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="first_name"
                                                                                                                              optional="YES">
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="middle_names"
                                                                                                                              optional="YES">
                                                                                                                              <aggregate
                                                                                                                                type="LIST"
                                                                                                                                lower="1"
                                                                                                                                upper="?"/>
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="prefix_titles"
                                                                                                                              optional="YES">
                                                                                                                              <aggregate
                                                                                                                                type="LIST"
                                                                                                                                lower="1"
                                                                                                                                upper="?"/>
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="suffix_titles"
                                                                                                                              optional="YES">
                                                                                                                              <aggregate
                                                                                                                                type="LIST"
                                                                                                                                lower="1"
                                                                                                                                upper="?"/>
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </explicit>
                                                                                                                            <where
                                                                                                                              label="wr1"
                                                                                                                              expression="EXISTS(last_name) OR EXISTS(first_name)">
                                                                                                                            </where>
                                                                                                                          </entity>

                                                                                                                          <entity
                                                                                                                            name="person_and_organization">
                                                                                                                            <explicit
                                                                                                                              name="the_person">
                                                                                                                              <typename
                                                                                                                                name="person"/>
                                                                                                                            </explicit>
                                                                                                                            <explicit
                                                                                                                              name="the_organization">
                                                                                                                              <typename
                                                                                                                                name="organization"/>
                                                                                                                            </explicit>
                                                                                                                            <derived
                                                                                                                              name="description"
                                                                                                                              expression="get_description_value(SELF)">
                                                                                                                              <typename
                                                                                                                                name="text"/>
                                                                                                                            </derived>
                                                                                                                            <derived
                                                                                                                              name="name"
                                                                                                                              expression="get_name_value(SELF)">
                                                                                                                              <typename
                                                                                                                                name="label"/>
                                                                                                                            </derived>
                                                                                                                            <where
                                                                                                                              label="wr1"
                                                                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                                                                                                                            </where>
                                                                                                                            <where
                                                                                                                              label="wr2"
                                                                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                            </where>
                                                                                                                          </entity>

                                                                                                                          <entity
                                                                                                                            name="person_and_organization_address"
                                                                                                                            supertypes="organizational_address personal_address">
                                                                                                                            <explicit
                                                                                                                              name="people">
                                                                                                                              <aggregate
                                                                                                                                type="SET"
                                                                                                                                lower="1"
                                                                                                                                upper="1"/>
                                                                                                                              <typename
                                                                                                                                name="person"/>
                                                                                                                              <redeclaration
                                                                                                                                entity-ref="personal_address"/>
                                                                                                                              </explicit>
                                                                                                                              <explicit
                                                                                                                                name="organizations">
                                                                                                                                <aggregate
                                                                                                                                  type="SET"
                                                                                                                                  lower="1"
                                                                                                                                  upper="1"/>
                                                                                                                                <typename
                                                                                                                                  name="organization"/>
                                                                                                                                <redeclaration
                                                                                                                                  entity-ref="organizational_address"/>
                                                                                                                                </explicit>
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="SIZEOF(QUERY(pao &lt;* USEDIN(SELF\personal_address.people[1],'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON') | pao.the_organization :=: SELF\organizational_address.organizations[1]))= 1">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="person_and_organization_assignment"
                                                                                                                                abstract.supertype="YES">
                                                                                                                                <explicit
                                                                                                                                  name="assigned_person_and_organization">
                                                                                                                                  <typename
                                                                                                                                    name="person_and_organization"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="role">
                                                                                                                                  <typename
                                                                                                                                    name="person_and_organization_role"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="person_and_organization_role">
                                                                                                                                <explicit
                                                                                                                                  name="name">
                                                                                                                                  <typename
                                                                                                                                    name="label"/>
                                                                                                                                </explicit>
                                                                                                                                <derived
                                                                                                                                  name="description"
                                                                                                                                  expression="get_description_value(SELF)">
                                                                                                                                  <typename
                                                                                                                                    name="text"/>
                                                                                                                                </derived>
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="person_assignment"
                                                                                                                                abstract.supertype="YES">
                                                                                                                                <explicit
                                                                                                                                  name="assigned_person">
                                                                                                                                  <typename
                                                                                                                                    name="person"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="role">
                                                                                                                                  <typename
                                                                                                                                    name="person_role"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="person_role">
                                                                                                                                <explicit
                                                                                                                                  name="name">
                                                                                                                                  <typename
                                                                                                                                    name="label"/>
                                                                                                                                </explicit>
                                                                                                                                <derived
                                                                                                                                  name="description"
                                                                                                                                  expression="get_description_value(SELF)">
                                                                                                                                  <typename
                                                                                                                                    name="text"/>
                                                                                                                                </derived>
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="person_type">
                                                                                                                                <explicit
                                                                                                                                  name="id">
                                                                                                                                  <typename
                                                                                                                                    name="identifier"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="name">
                                                                                                                                  <typename
                                                                                                                                    name="label"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="description"
                                                                                                                                  optional="YES">
                                                                                                                                  <typename
                                                                                                                                    name="text"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="personal_address"
                                                                                                                                supertypes="address">
                                                                                                                                <explicit
                                                                                                                                  name="people">
                                                                                                                                  <aggregate
                                                                                                                                    type="SET"
                                                                                                                                    lower="1"
                                                                                                                                    upper="?"/>
                                                                                                                                  <typename
                                                                                                                                    name="person"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="description"
                                                                                                                                  optional="YES">
                                                                                                                                  <typename
                                                                                                                                    name="text"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="physical_quantity_range"
                                                                                                                                supertypes="physical_quantity_space">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="physical_quantity_space"
                                                                                                                                supertypes="general_property class">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="physical_quantity_symmetry"
                                                                                                                                supertypes="general_property class">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="physical_quantity_symmetry_by_library_reference"
                                                                                                                                supertypes="physical_quantity_symmetry externally_defined_item">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="physical_quantity_value"
                                                                                                                                supertypes="general_property class">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="placement"
                                                                                                                                super.expression="(axis2_placement_2d)"
                                                                                                                                supertypes="geometric_representation_item">
                                                                                                                                <explicit
                                                                                                                                  name="location">
                                                                                                                                  <typename
                                                                                                                                    name="cartesian_point"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="planar_box"
                                                                                                                                supertypes="planar_extent">
                                                                                                                                <explicit
                                                                                                                                  name="placement">
                                                                                                                                  <typename
                                                                                                                                    name="axis2_placement"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="planar_extent"
                                                                                                                                supertypes="geometric_representation_item">
                                                                                                                                <explicit
                                                                                                                                  name="size_in_x">
                                                                                                                                  <typename
                                                                                                                                    name="length_measure"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="size_in_y">
                                                                                                                                  <typename
                                                                                                                                    name="length_measure"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="plane_angle_measure_with_unit"
                                                                                                                                supertypes="measure_with_unit">
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="plane_angle_unit"
                                                                                                                                supertypes="named_unit">
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="plus_expression"
                                                                                                                                supertypes="multiple_arity_numeric_expression">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="point"
                                                                                                                                super.expression="(ONEOF (cartesian_point, point_on_curve))"
                                                                                                                                supertypes="geometric_representation_item">
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="point_on_curve"
                                                                                                                                supertypes="point">
                                                                                                                                <explicit
                                                                                                                                  name="basis_curve">
                                                                                                                                  <typename
                                                                                                                                    name="curve"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="point_parameter">
                                                                                                                                  <typename
                                                                                                                                    name="parameter_value"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="polar_complex_number_region"
                                                                                                                                supertypes="maths_space generic_literal">
                                                                                                                                <explicit
                                                                                                                                  name="centre">
                                                                                                                                  <typename
                                                                                                                                    name="complex_number_literal"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="distance_constraint">
                                                                                                                                  <typename
                                                                                                                                    name="real_interval"/>
                                                                                                                                </explicit>
                                                                                                                                <explicit
                                                                                                                                  name="direction_constraint">
                                                                                                                                  <typename
                                                                                                                                    name="finite_real_interval"/>
                                                                                                                                </explicit>
                                                                                                                                <where
                                                                                                                                  label="wr1"
                                                                                                                                  expression="min_exists(distance_constraint) AND (real_min(distance_constraint) &gt;=0.0)">
                                                                                                                                </where>
                                                                                                                                <where
                                                                                                                                  label="wr2"
                                                                                                                                  expression="{-PI &lt;= direction_constraint.min &lt; PI}">
                                                                                                                                </where>
                                                                                                                                <where
                                                                                                                                  label="wr3"
                                                                                                                                  expression="direction_constraint.max - direction_constraint.min &lt;= 2.0 * PI">
                                                                                                                                </where>
                                                                                                                                <where
                                                                                                                                  label="wr4"
                                                                                                                                  expression="(direction_constraint.max - direction_constraint.min &lt; 2.0 * PI) OR (direction_constraint.min_closure = open)">
                                                                                                                                </where>
                                                                                                                                <where
                                                                                                                                  label="wr5"
                                                                                                                                  expression="(direction_constraint.max - direction_constraint.min &lt; 2.0 * PI) OR (direction_constraint.max_closure = open) OR (direction_constraint.min = -PI)">
                                                                                                                                </where>
                                                                                                                                <where
                                                                                                                                  label="wr6"
                                                                                                                                  expression="(real_min(distance_constraint) &gt; 0.0) OR max_exists(distance_constraint) OR (direction_constraint.max - direction_constraint.min &lt; 2.0 * PI) OR (direction_constraint.max_closure = open)">
                                                                                                                                </where>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="polyline"
                                                                                                                                supertypes="bounded_curve">
                                                                                                                                <explicit
                                                                                                                                  name="points">
                                                                                                                                  <aggregate
                                                                                                                                    type="LIST"
                                                                                                                                    lower="2"
                                                                                                                                    upper="?"/>
                                                                                                                                  <typename
                                                                                                                                    name="cartesian_point"/>
                                                                                                                                </explicit>
                                                                                                                              </entity>

                                                                                                                              <entity
                                                                                                                                name="possessed_physical_quantity_space"
                                                                                                                                supertypes="general_property_association">
                                                                                                                                <explicit
                                                                                                                                  name="base_definition">
                                                                                                                                  <typename
                                                                                                                                    name="physical_quantity_space"/>
                                                                                                                                  <redeclaration
                                                                                                                                    entity-ref="general_property_association"/>
                                                                                                                                  </explicit>
                                                                                                                                  <where
                                                                                                                                    label="link_to_possession"
                                                                                                                                    expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CLASS_OF_POSSESSION_OF_PROPERTY_BY_ACTIVITY' IN TYPEOF(SELF\general_property_association.derived_definition)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CLASS_OF_POSSESSION_OF_PROPERTY_BY_PRODUCT' IN TYPEOF(SELF\general_property_association.derived_definition))">
                                                                                                                                  </where>
                                                                                                                                </entity>

                                                                                                                                <entity
                                                                                                                                  name="possessed_property"
                                                                                                                                  supertypes="general_property_association">
                                                                                                                                  <explicit
                                                                                                                                    name="base_definition">
                                                                                                                                    <typename
                                                                                                                                      name="physical_quantity_value"/>
                                                                                                                                    <redeclaration
                                                                                                                                      entity-ref="general_property_association"/>
                                                                                                                                    </explicit>
                                                                                                                                    <where
                                                                                                                                      label="link_to_possession"
                                                                                                                                      expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSSESSION_OF_PROPERTY_BY_ACTIVITY' IN TYPEOF(SELF\general_property_association.derived_definition)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSSESSION_OF_PROPERTY_BY_PRODUCT' IN TYPEOF(SELF\general_property_association.derived_definition))">
                                                                                                                                    </where>
                                                                                                                                  </entity>

                                                                                                                                  <entity
                                                                                                                                    name="possession_of_property_by_activity"
                                                                                                                                    supertypes="action_property">
                                                                                                                                    <explicit
                                                                                                                                      name="definition">
                                                                                                                                      <typename
                                                                                                                                        name="individual_activity"/>
                                                                                                                                      <redeclaration
                                                                                                                                        entity-ref="action_property"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="possession_of_property_by_product"
                                                                                                                                      supertypes="property_definition">
                                                                                                                                      <where
                                                                                                                                        label="link_to_individual"
                                                                                                                                        expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRODUCT_AS_INDIVIDUAL' IN TYPEOF(SELF\property_definition.definition.formation)">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="power_expression"
                                                                                                                                      supertypes="binary_numeric_expression">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="power_set">
                                                                                                                                      <explicit
                                                                                                                                        name="id">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="base">
                                                                                                                                        <typename
                                                                                                                                          name="class"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="derived">
                                                                                                                                        <typename
                                                                                                                                          name="class"/>
                                                                                                                                      </explicit>
                                                                                                                                      <where
                                                                                                                                        label="derived_different"
                                                                                                                                        expression="NOT identical_sets(base, derived)">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="pre_defined_colour"
                                                                                                                                      supertypes="pre_defined_item colour">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="pre_defined_curve_font"
                                                                                                                                      supertypes="pre_defined_item">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="pre_defined_item">
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="pre_defined_symbol"
                                                                                                                                      supertypes="pre_defined_item">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="pre_defined_text_font"
                                                                                                                                      supertypes="pre_defined_item">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_area"
                                                                                                                                      supertypes="presentation_representation">
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="(SIZEOF(QUERY(ais &lt;* USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET.AREA') | SIZEOF(USEDIN(ais,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTATION_SIZE.UNIT')) = 1)) &gt; 0) OR (SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTATION_SIZE.UNIT')) = 1)">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_representation"
                                                                                                                                      supertypes="representation">
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="SELF\representation.context_of_items\geometric_representation_context. coordinate_space_dimension = 2">
                                                                                                                                      </where>
                                                                                                                                      <where
                                                                                                                                        label="wr2"
                                                                                                                                        expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF\representation.context_of_items)">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_set">
                                                                                                                                      <inverse
                                                                                                                                        name="areas"
                                                                                                                                        entity="area_in_set"
                                                                                                                                        attribute="in_set">
                                                                                                                                        <inverse.aggregate
                                                                                                                                          type="SET"
                                                                                                                                          lower="1"
                                                                                                                                          upper="?"/>
                                                                                                                                      </inverse>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_size">
                                                                                                                                      <explicit
                                                                                                                                        name="unit">
                                                                                                                                        <typename
                                                                                                                                          name="presentation_size_assignment_select"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="size">
                                                                                                                                        <typename
                                                                                                                                          name="planar_box"/>
                                                                                                                                      </explicit>
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRESENTATION_REPRESENTATION' IN TYPEOF(SELF.unit)) AND item_in_context(SELF.size, SELF.unit\ representation.context_of_items) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_IN_SET' IN TYPEOF(SELF.unit)) AND (SIZEOF(QUERY(ais &lt;* SELF.unit\area_in_set.in_set.areas | NOT item_in_context(SELF.size, ais.area\representation.context_of_items)))= 0)">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_style_assignment">
                                                                                                                                      <explicit
                                                                                                                                        name="styles">
                                                                                                                                        <aggregate
                                                                                                                                          type="SET"
                                                                                                                                          lower="1"
                                                                                                                                          upper="?"/>
                                                                                                                                        <typename
                                                                                                                                          name="presentation_style_select"/>
                                                                                                                                      </explicit>
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="SIZEOF(QUERY(style1 &lt;* SELF.styles | NOT (SIZEOF(QUERY(style2 &lt;* SELF. styles - style1 | NOT ((TYPEOF(style1) &lt;&gt; TYPEOF(style2)) OR (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SURFACE_STYLE_USAGE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'EXTERNALLY_DEFINED_STYLE'] * TYPEOF(style1)) = 1)))) = 0))) = 0">
                                                                                                                                      </where>
                                                                                                                                      <where
                                                                                                                                        label="wr2"
                                                                                                                                        expression="SIZEOF(QUERY(style1 &lt;* SELF.styles |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SURFACE_STYLE_USAGE' IN TYPEOF(style1))) &lt;= 2">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_style_by_context"
                                                                                                                                      supertypes="presentation_style_assignment">
                                                                                                                                      <explicit
                                                                                                                                        name="style_context">
                                                                                                                                        <typename
                                                                                                                                          name="style_context_select"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presentation_view"
                                                                                                                                      supertypes="presentation_representation">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presented_item"
                                                                                                                                      abstract.supertype="YES">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="presented_item_representation">
                                                                                                                                      <explicit
                                                                                                                                        name="presentation">
                                                                                                                                        <typename
                                                                                                                                          name="presentation_representation_select"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="item">
                                                                                                                                        <typename
                                                                                                                                          name="presented_item"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product">
                                                                                                                                      <explicit
                                                                                                                                        name="id">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="frame_of_reference">
                                                                                                                                        <aggregate
                                                                                                                                          type="SET"
                                                                                                                                          lower="1"
                                                                                                                                          upper="?"/>
                                                                                                                                        <typename
                                                                                                                                          name="product_context"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_as_individual"
                                                                                                                                      abstract.supertype="YES"
                                                                                                                                      super.expression="(ONEOF (product_as_planned, product_as_realized))"
                                                                                                                                      supertypes="product_definition_formation">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_as_planned"
                                                                                                                                      supertypes="product_as_individual">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_as_realized"
                                                                                                                                      supertypes="product_as_individual">
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_category">
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <derived
                                                                                                                                        name="id"
                                                                                                                                        expression="get_id_value(SELF)">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </derived>
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_category_relationship">
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="category">
                                                                                                                                        <typename
                                                                                                                                          name="product_category"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="sub_category">
                                                                                                                                        <typename
                                                                                                                                          name="product_category"/>
                                                                                                                                      </explicit>
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="acyclic_product_category_relationship(SELF, [SELF.sub_category])">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_context"
                                                                                                                                      supertypes="application_context_element">
                                                                                                                                      <explicit
                                                                                                                                        name="discipline_type">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_definition">
                                                                                                                                      <explicit
                                                                                                                                        name="id">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="formation">
                                                                                                                                        <typename
                                                                                                                                          name="product_definition_formation"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="frame_of_reference">
                                                                                                                                        <typename
                                                                                                                                          name="product_definition_context"/>
                                                                                                                                      </explicit>
                                                                                                                                      <derived
                                                                                                                                        name="name"
                                                                                                                                        expression="get_name_value(SELF)">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </derived>
                                                                                                                                      <where
                                                                                                                                        label="wr1"
                                                                                                                                        expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                                                                                                                                      </where>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_definition_context"
                                                                                                                                      supertypes="application_context_element">
                                                                                                                                      <explicit
                                                                                                                                        name="life_cycle_stage">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_definition_formation">
                                                                                                                                      <explicit
                                                                                                                                        name="id">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="of_product">
                                                                                                                                        <typename
                                                                                                                                          name="product"/>
                                                                                                                                      </explicit>
                                                                                                                                      <unique
                                                                                                                                        label="ur1">
                                                                                                                                        <unique.attribute
                                                                                                                                          attribute="id"/>
                                                                                                                                        <unique.attribute
                                                                                                                                          attribute="of_product"/>
                                                                                                                                      </unique>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_definition_formation_relationship">
                                                                                                                                      <explicit
                                                                                                                                        name="id">
                                                                                                                                        <typename
                                                                                                                                          name="identifier"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="name">
                                                                                                                                        <typename
                                                                                                                                          name="label"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="description"
                                                                                                                                        optional="YES">
                                                                                                                                        <typename
                                                                                                                                          name="text"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="relating_product_definition_formation">
                                                                                                                                        <typename
                                                                                                                                          name="product_definition_formation"/>
                                                                                                                                      </explicit>
                                                                                                                                      <explicit
                                                                                                                                        name="related_product_definition_formation">
                                                                                                                                        <typename
                                                                                                                                          name="product_definition_formation"/>
                                                                                                                                      </explicit>
                                                                                                                                    </entity>

                                                                                                                                    <entity
                                                                                                                                      name="product_design_to_individual"
                                                                                                                                      supertypes="product_definition_formation_relationship">
                                                                                                                                      <explicit
                                                                                                                                        name="related_product_definition_formation">
                                                                                                                                        <typename
                                                                                                                                          name="product_as_individual"/>
                                                                                                                                        <redeclaration
                                                                                                                                          entity-ref="product_definition_formation_relationship"/>
                                                                                                                                        </explicit>
                                                                                                                                        <derived
                                                                                                                                          name="individual_product"
                                                                                                                                          expression="SELF\ product_definition_formation_relationship. related_product_definition_formation">
                                                                                                                                          <typename
                                                                                                                                            name="product_as_individual"/>
                                                                                                                                        </derived>
                                                                                                                                        <derived
                                                                                                                                          name="product_version"
                                                                                                                                          expression="SELF\ product_definition_formation_relationship. relating_product_definition_formation">
                                                                                                                                          <typename
                                                                                                                                            name="product_definition_formation"/>
                                                                                                                                        </derived>
                                                                                                                                      </entity>

                                                                                                                                      <entity
                                                                                                                                        name="product_planned_to_realized"
                                                                                                                                        supertypes="product_definition_formation_relationship">
                                                                                                                                        <explicit
                                                                                                                                          name="relating_product_definition_formation">
                                                                                                                                          <typename
                                                                                                                                            name="product_as_planned"/>
                                                                                                                                          <redeclaration
                                                                                                                                            entity-ref="product_definition_formation_relationship"/>
                                                                                                                                          </explicit>
                                                                                                                                          <explicit
                                                                                                                                            name="related_product_definition_formation">
                                                                                                                                            <typename
                                                                                                                                              name="product_as_realized"/>
                                                                                                                                            <redeclaration
                                                                                                                                              entity-ref="product_definition_formation_relationship"/>
                                                                                                                                            </explicit>
                                                                                                                                            <derived
                                                                                                                                              name="planned_product"
                                                                                                                                              expression="SELF\ product_definition_formation_relationship. relating_product_definition_formation">
                                                                                                                                              <typename
                                                                                                                                                name="product_as_planned"/>
                                                                                                                                            </derived>
                                                                                                                                            <derived
                                                                                                                                              name="realized_product"
                                                                                                                                              expression="SELF\ product_definition_formation_relationship. related_product_definition_formation">
                                                                                                                                              <typename
                                                                                                                                                name="product_as_realized"/>
                                                                                                                                            </derived>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="product_related_product_category"
                                                                                                                                            supertypes="product_category">
                                                                                                                                            <explicit
                                                                                                                                              name="products">
                                                                                                                                              <aggregate
                                                                                                                                                type="SET"
                                                                                                                                                lower="1"
                                                                                                                                                upper="?"/>
                                                                                                                                              <typename
                                                                                                                                                name="product"/>
                                                                                                                                            </explicit>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="proper_subset"
                                                                                                                                            supertypes="subset">
                                                                                                                                            <where
                                                                                                                                              label="subset_different"
                                                                                                                                              expression="NOT identical_sets(superset, subset)">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="property_condition_for_activity"
                                                                                                                                            supertypes="class_of_possession_of_property_by_activity">
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="property_condition_for_product"
                                                                                                                                            supertypes="class_of_possession_of_property_by_product">
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="property_definition">
                                                                                                                                            <explicit
                                                                                                                                              name="name">
                                                                                                                                              <typename
                                                                                                                                                name="label"/>
                                                                                                                                            </explicit>
                                                                                                                                            <explicit
                                                                                                                                              name="description"
                                                                                                                                              optional="YES">
                                                                                                                                              <typename
                                                                                                                                                name="text"/>
                                                                                                                                            </explicit>
                                                                                                                                            <explicit
                                                                                                                                              name="definition">
                                                                                                                                              <typename
                                                                                                                                                name="characterized_definition"/>
                                                                                                                                            </explicit>
                                                                                                                                            <derived
                                                                                                                                              name="id"
                                                                                                                                              expression="get_id_value(SELF)">
                                                                                                                                              <typename
                                                                                                                                                name="identifier"/>
                                                                                                                                            </derived>
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="property_definition_representation">
                                                                                                                                            <explicit
                                                                                                                                              name="definition">
                                                                                                                                              <typename
                                                                                                                                                name="represented_definition"/>
                                                                                                                                            </explicit>
                                                                                                                                            <explicit
                                                                                                                                              name="used_representation">
                                                                                                                                              <typename
                                                                                                                                                name="representation"/>
                                                                                                                                            </explicit>
                                                                                                                                            <derived
                                                                                                                                              name="description"
                                                                                                                                              expression="get_description_value(SELF)">
                                                                                                                                              <typename
                                                                                                                                                name="text"/>
                                                                                                                                            </derived>
                                                                                                                                            <derived
                                                                                                                                              name="name"
                                                                                                                                              expression="get_name_value(SELF)">
                                                                                                                                              <typename
                                                                                                                                                name="label"/>
                                                                                                                                            </derived>
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                                            </where>
                                                                                                                                            <where
                                                                                                                                              label="wr2"
                                                                                                                                              expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="quantifier_expression"
                                                                                                                                            abstract.supertype="YES"
                                                                                                                                            supertypes="multiple_arity_generic_expression">
                                                                                                                                            <explicit
                                                                                                                                              name="variables">
                                                                                                                                              <aggregate
                                                                                                                                                type="LIST"
                                                                                                                                                lower="1"
                                                                                                                                                upper="?"
                                                                                                                                                unique="YES"/>
                                                                                                                                              <typename
                                                                                                                                                name="generic_variable"/>
                                                                                                                                            </explicit>
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="SIZEOF(QUERY(vrbl &lt;* variables | NOT (vrbl IN SELF\ multiple_arity_generic_expression.operands))) = 0">
                                                                                                                                            </where>
                                                                                                                                            <where
                                                                                                                                              label="wr2"
                                                                                                                                              expression="SIZEOF(QUERY(vrbl &lt;* variables | NOT (schema_prefix +'BOUND_VARIABLE_SEMANTICS' IN TYPEOF(vrbl.interpretation.semantics)))) = 0">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="quasi_uniform_curve"
                                                                                                                                            supertypes="b_spline_curve">
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="ratio_measure_with_unit"
                                                                                                                                            supertypes="measure_with_unit">
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.RATIO_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="ratio_unit"
                                                                                                                                            supertypes="named_unit">
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="rational_b_spline_curve"
                                                                                                                                            supertypes="b_spline_curve">
                                                                                                                                            <explicit
                                                                                                                                              name="weights_data">
                                                                                                                                              <aggregate
                                                                                                                                                type="LIST"
                                                                                                                                                lower="2"
                                                                                                                                                upper="?"/>
                                                                                                                                              <builtintype
                                                                                                                                                type="REAL"/>
                                                                                                                                            </explicit>
                                                                                                                                            <derived
                                                                                                                                              name="weights"
                                                                                                                                              expression="list_to_array(weights_data, 0, upper_index_on_control_points)">
                                                                                                                                              <aggregate
                                                                                                                                                type="ARRAY"
                                                                                                                                                lower="0"
                                                                                                                                                upper="upper_index_on_control_points"/>
                                                                                                                                              <builtintype
                                                                                                                                                type="REAL"/>
                                                                                                                                            </derived>
                                                                                                                                            <where
                                                                                                                                              label="wr1"
                                                                                                                                              expression="SIZEOF(weights_data) = SIZEOF(SELF\b_spline_curve.control_points_list)">
                                                                                                                                            </where>
                                                                                                                                            <where
                                                                                                                                              label="wr2"
                                                                                                                                              expression="curve_weights_positive(SELF)">
                                                                                                                                            </where>
                                                                                                                                          </entity>

                                                                                                                                          <entity
                                                                                                                                            name="rationalize_function"
                                                                                                                                            supertypes="maths_function unary_generic_expression">
                                                                                                                                            <explicit
                                                                                                                                              name="operand">
                                                                                                                                              <typename
                                                                                                                                                name="maths_function"/>
                                                                                                                                              <redeclaration
                                                                                                                                                entity-ref="unary_generic_expression"/>
                                                                                                                                              </explicit>
                                                                                                                                              <derived
                                                                                                                                                name="fun"
                                                                                                                                                expression="SELF\unary_generic_expression.operand">
                                                                                                                                                <typename
                                                                                                                                                  name="maths_function"/>
                                                                                                                                              </derived>
                                                                                                                                              <where
                                                                                                                                                label="wr1"
                                                                                                                                                expression="(space_dimension(fun.domain) = 1) AND (space_dimension(fun.range) = 1)">
                                                                                                                                              </where>
                                                                                                                                              <where
                                                                                                                                                label="wr2"
                                                                                                                                                expression="number_tuple_subspace_check(factor1(fun.range))">
                                                                                                                                              </where>
                                                                                                                                              <where
                                                                                                                                                label="wr3"
                                                                                                                                                expression="space_dimension(factor1(fun.range)) &gt; 1">
                                                                                                                                              </where>
                                                                                                                                            </entity>

                                                                                                                                            <entity
                                                                                                                                              name="real_defined_function"
                                                                                                                                              abstract.supertype="YES"
                                                                                                                                              supertypes="numeric_defined_function">
                                                                                                                                            </entity>

                                                                                                                                            <entity
                                                                                                                                              name="real_interval_from_min"
                                                                                                                                              supertypes="maths_space generic_literal">
                                                                                                                                              <explicit
                                                                                                                                                name="min">
                                                                                                                                                <builtintype
                                                                                                                                                  type="REAL"/>
                                                                                                                                              </explicit>
                                                                                                                                              <explicit
                                                                                                                                                name="min_closure">
                                                                                                                                                <typename
                                                                                                                                                  name="open_closed"/>
                                                                                                                                              </explicit>
                                                                                                                                            </entity>

                                                                                                                                            <entity
                                                                                                                                              name="real_interval_to_max"
                                                                                                                                              supertypes="maths_space generic_literal">
                                                                                                                                              <explicit
                                                                                                                                                name="max">
                                                                                                                                                <builtintype
                                                                                                                                                  type="REAL"/>
                                                                                                                                              </explicit>
                                                                                                                                              <explicit
                                                                                                                                                name="max_closure">
                                                                                                                                                <typename
                                                                                                                                                  name="open_closed"/>
                                                                                                                                              </explicit>
                                                                                                                                            </entity>

                                                                                                                                            <entity
                                                                                                                                              name="real_literal"
                                                                                                                                              supertypes="literal_number">
                                                                                                                                              <explicit
                                                                                                                                                name="the_value">
                                                                                                                                                <builtintype
                                                                                                                                                  type="REAL"/>
                                                                                                                                                <redeclaration
                                                                                                                                                  entity-ref="literal_number"/>
                                                                                                                                                </explicit>
                                                                                                                                              </entity>

                                                                                                                                              <entity
                                                                                                                                                name="real_tuple_literal"
                                                                                                                                                supertypes="generic_literal">
                                                                                                                                                <explicit
                                                                                                                                                  name="lit_value">
                                                                                                                                                  <aggregate
                                                                                                                                                    type="LIST"
                                                                                                                                                    lower="1"
                                                                                                                                                    upper="?"/>
                                                                                                                                                  <builtintype
                                                                                                                                                    type="REAL"/>
                                                                                                                                                </explicit>
                                                                                                                                              </entity>

                                                                                                                                              <entity
                                                                                                                                                name="reference_between_page_connectors"
                                                                                                                                                supertypes="representation_relationship">
                                                                                                                                                <explicit
                                                                                                                                                  name="rep_1">
                                                                                                                                                  <typename
                                                                                                                                                    name="page_connector"/>
                                                                                                                                                  <redeclaration
                                                                                                                                                    entity-ref="representation_relationship"/>
                                                                                                                                                  </explicit>
                                                                                                                                                  <explicit
                                                                                                                                                    name="rep_2">
                                                                                                                                                    <typename
                                                                                                                                                      name="page_connector"/>
                                                                                                                                                    <redeclaration
                                                                                                                                                      entity-ref="representation_relationship"/>
                                                                                                                                                    </explicit>
                                                                                                                                                  </entity>

                                                                                                                                                  <entity
                                                                                                                                                    name="reindexed_array_function"
                                                                                                                                                    supertypes="maths_function unary_generic_expression">
                                                                                                                                                    <explicit
                                                                                                                                                      name="operand">
                                                                                                                                                      <typename
                                                                                                                                                        name="maths_function"/>
                                                                                                                                                      <redeclaration
                                                                                                                                                        entity-ref="unary_generic_expression"/>
                                                                                                                                                      </explicit>
                                                                                                                                                      <explicit
                                                                                                                                                        name="starting_indices">
                                                                                                                                                        <aggregate
                                                                                                                                                          type="LIST"
                                                                                                                                                          lower="1"
                                                                                                                                                          upper="?"/>
                                                                                                                                                        <builtintype
                                                                                                                                                          type="INTEGER"/>
                                                                                                                                                      </explicit>
                                                                                                                                                      <where
                                                                                                                                                        label="wr1"
                                                                                                                                                        expression="function_is_array(SELF\unary_generic_expression.operand)">
                                                                                                                                                      </where>
                                                                                                                                                      <where
                                                                                                                                                        label="wr2"
                                                                                                                                                        expression="SIZEOF(starting_indices) = SIZEOF(shape_of_array(SELF\ unary_generic_expression.operand))">
                                                                                                                                                      </where>
                                                                                                                                                    </entity>

                                                                                                                                                    <entity
                                                                                                                                                      name="repackaging_function"
                                                                                                                                                      supertypes="maths_function unary_generic_expression">
                                                                                                                                                      <explicit
                                                                                                                                                        name="operand">
                                                                                                                                                        <typename
                                                                                                                                                          name="maths_function"/>
                                                                                                                                                        <redeclaration
                                                                                                                                                          entity-ref="unary_generic_expression"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="input_repack">
                                                                                                                                                          <typename
                                                                                                                                                            name="repackage_options"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="output_repack">
                                                                                                                                                          <typename
                                                                                                                                                            name="repackage_options"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="selected_output">
                                                                                                                                                          <typename
                                                                                                                                                            name="nonnegative_integer"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <where
                                                                                                                                                          label="wr1"
                                                                                                                                                          expression="(input_repack &lt;&gt; ro_wrap_as_tuple) OR (space_dimension(operand.domain)= 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF(factor1(operand.domain)))">
                                                                                                                                                        </where>
                                                                                                                                                        <where
                                                                                                                                                          label="wr2"
                                                                                                                                                          expression="(output_repack &lt;&gt; ro_unwrap_tuple) OR (space_dimension(operand.range)= 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF(factor1(operand.range)))">
                                                                                                                                                        </where>
                                                                                                                                                        <where
                                                                                                                                                          label="wr3"
                                                                                                                                                          expression="selected_output &lt;= space_dimension(repackage(operand.range, output_repack))">
                                                                                                                                                        </where>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation">
                                                                                                                                                        <explicit
                                                                                                                                                          name="name">
                                                                                                                                                          <typename
                                                                                                                                                            name="label"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="items">
                                                                                                                                                          <aggregate
                                                                                                                                                            type="SET"
                                                                                                                                                            lower="1"
                                                                                                                                                            upper="?"/>
                                                                                                                                                          <typename
                                                                                                                                                            name="representation_item"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="context_of_items">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation_context"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <derived
                                                                                                                                                          name="id"
                                                                                                                                                          expression="get_id_value(SELF)">
                                                                                                                                                          <typename
                                                                                                                                                            name="identifier"/>
                                                                                                                                                        </derived>
                                                                                                                                                        <derived
                                                                                                                                                          name="description"
                                                                                                                                                          expression="get_description_value(SELF)">
                                                                                                                                                          <typename
                                                                                                                                                            name="text"/>
                                                                                                                                                        </derived>
                                                                                                                                                        <where
                                                                                                                                                          label="wr1"
                                                                                                                                                          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                                                                                                                                        </where>
                                                                                                                                                        <where
                                                                                                                                                          label="wr2"
                                                                                                                                                          expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                                                                                                                                        </where>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation_context">
                                                                                                                                                        <explicit
                                                                                                                                                          name="context_identifier">
                                                                                                                                                          <typename
                                                                                                                                                            name="identifier"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="context_type">
                                                                                                                                                          <typename
                                                                                                                                                            name="text"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <inverse
                                                                                                                                                          name="representations_in_context"
                                                                                                                                                          entity="representation"
                                                                                                                                                          attribute="context_of_items">
                                                                                                                                                          <inverse.aggregate
                                                                                                                                                            type="SET"
                                                                                                                                                            lower="1"
                                                                                                                                                            upper="?"/>
                                                                                                                                                        </inverse>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation_context_defined_maths_space_context"
                                                                                                                                                        supertypes="defined_maths_space_context">
                                                                                                                                                        <explicit
                                                                                                                                                          name="representation_basis">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation_context"/>
                                                                                                                                                        </explicit>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation_item">
                                                                                                                                                        <explicit
                                                                                                                                                          name="name">
                                                                                                                                                          <typename
                                                                                                                                                            name="label"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <where
                                                                                                                                                          label="wr1"
                                                                                                                                                          expression="SIZEOF(using_representations(SELF)) &gt; 0">
                                                                                                                                                        </where>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation_map">
                                                                                                                                                        <explicit
                                                                                                                                                          name="mapping_origin">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation_item"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="mapped_representation">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <inverse
                                                                                                                                                          name="map_usage"
                                                                                                                                                          entity="mapped_item"
                                                                                                                                                          attribute="mapping_source">
                                                                                                                                                          <inverse.aggregate
                                                                                                                                                            type="SET"
                                                                                                                                                            lower="1"
                                                                                                                                                            upper="?"/>
                                                                                                                                                        </inverse>
                                                                                                                                                        <where
                                                                                                                                                          label="wr1"
                                                                                                                                                          expression="item_in_context(SELF.mapping_origin, SELF.mapped_representation. context_of_items)">
                                                                                                                                                        </where>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="representation_relationship">
                                                                                                                                                        <explicit
                                                                                                                                                          name="name">
                                                                                                                                                          <typename
                                                                                                                                                            name="label"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="description"
                                                                                                                                                          optional="YES">
                                                                                                                                                          <typename
                                                                                                                                                            name="text"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="rep_1">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation"/>
                                                                                                                                                        </explicit>
                                                                                                                                                        <explicit
                                                                                                                                                          name="rep_2">
                                                                                                                                                          <typename
                                                                                                                                                            name="representation"/>
                                                                                                                                                        </explicit>
                                                                                                                                                      </entity>

                                                                                                                                                      <entity
                                                                                                                                                        name="restriction_function"
                                                                                                                                                        supertypes="maths_function unary_generic_expression">
                                                                                                                                                        <explicit
                                                                                                                                                          name="operand">
                                                                                                                                                          <typename
                                                                                                                                                            name="maths_space"/>
                                                                                                                                                          <redeclaration
                                                                                                                                                            entity-ref="unary_generic_expression"/>
                                                                                                                                                          </explicit>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="role_association">
                                                                                                                                                          <explicit
                                                                                                                                                            name="role">
                                                                                                                                                            <typename
                                                                                                                                                              name="object_role"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="item_with_role">
                                                                                                                                                            <typename
                                                                                                                                                              name="role_select"/>
                                                                                                                                                          </explicit>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="same_membership">
                                                                                                                                                          <explicit
                                                                                                                                                            name="id">
                                                                                                                                                            <typename
                                                                                                                                                              name="identifier"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="name">
                                                                                                                                                            <typename
                                                                                                                                                              name="label"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="description"
                                                                                                                                                            optional="YES">
                                                                                                                                                            <typename
                                                                                                                                                              name="text"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="set_1">
                                                                                                                                                            <typename
                                                                                                                                                              name="class"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="set_2">
                                                                                                                                                            <typename
                                                                                                                                                              name="class"/>
                                                                                                                                                          </explicit>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="schematic_drawing"
                                                                                                                                                          supertypes="schematic_element_definition drawing_sheet_revision">
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="schematic_element"
                                                                                                                                                          abstract.supertype="YES"
                                                                                                                                                          super.expression="(ONEOF (schematic_element_definition, schematic_element_occurrence))"
                                                                                                                                                          supertypes="class draughting_model presentation_representation">
                                                                                                                                                          <where
                                                                                                                                                            label="valid_mapping"
                                                                                                                                                            expression="SIZEOF(QUERY(it &lt;* SELF.items | ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(it)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DRAUGHTING_MODEL' IN TYPEOF(it\mapped_item.mapping_source.mapped_representation)) AND NOT (SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DERIVATION_OF_SCHEMATIC_ELEMENT_DEFINITION','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'USAGE_OF_SCHEMATIC_ELEMENT_OCCURRENCE','FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'DEFINITION_OF_SCHEMATIC_ELEMENT_OCCURRENCE'] * TYPEOF(it)) = 1))) = 0">
                                                                                                                                                          </where>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="schematic_element_definition"
                                                                                                                                                          super.expression="(ONEOF (explicit_schematic_element_definition, implicit_schematic_element_definition))"
                                                                                                                                                          supertypes="schematic_element">
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="schematic_element_occurrence"
                                                                                                                                                          supertypes="schematic_element">
                                                                                                                                                          <inverse
                                                                                                                                                            name="usage_in_map"
                                                                                                                                                            entity="representation_map"
                                                                                                                                                            attribute="mapped_representation">
                                                                                                                                                            <inverse.aggregate
                                                                                                                                                              type="SET"
                                                                                                                                                              lower="1"
                                                                                                                                                              upper="?"/>
                                                                                                                                                          </inverse>
                                                                                                                                                          <where
                                                                                                                                                            label="no_styled_item"
                                                                                                                                                            expression="SIZEOF(QUERY(it &lt;* SELF.items |'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STYLED_ITEM' IN TYPEOF(it))) = 0">
                                                                                                                                                          </where>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="security_classification">
                                                                                                                                                          <explicit
                                                                                                                                                            name="name">
                                                                                                                                                            <typename
                                                                                                                                                              name="label"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="purpose">
                                                                                                                                                            <typename
                                                                                                                                                              name="text"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="security_level">
                                                                                                                                                            <typename
                                                                                                                                                              name="security_classification_level"/>
                                                                                                                                                          </explicit>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="security_classification_assignment"
                                                                                                                                                          abstract.supertype="YES">
                                                                                                                                                          <explicit
                                                                                                                                                            name="assigned_security_classification">
                                                                                                                                                            <typename
                                                                                                                                                              name="security_classification"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <derived
                                                                                                                                                            name="role"
                                                                                                                                                            expression="get_role(SELF)">
                                                                                                                                                            <typename
                                                                                                                                                              name="object_role"/>
                                                                                                                                                          </derived>
                                                                                                                                                          <where
                                                                                                                                                            label="wr1"
                                                                                                                                                            expression="SIZEOF(USEDIN(SELF,'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
                                                                                                                                                          </where>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="security_classification_level">
                                                                                                                                                          <explicit
                                                                                                                                                            name="name">
                                                                                                                                                            <typename
                                                                                                                                                              name="label"/>
                                                                                                                                                          </explicit>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="selector_function"
                                                                                                                                                          supertypes="maths_function generic_literal">
                                                                                                                                                          <explicit
                                                                                                                                                            name="selector">
                                                                                                                                                            <typename
                                                                                                                                                              name="input_selector"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <explicit
                                                                                                                                                            name="source_of_domain">
                                                                                                                                                            <typename
                                                                                                                                                              name="maths_space_or_function"/>
                                                                                                                                                          </explicit>
                                                                                                                                                          <where
                                                                                                                                                            label="wr1"
                                                                                                                                                            expression="no_cyclic_domain_reference(source_of_domain, [SELF])">
                                                                                                                                                          </where>
                                                                                                                                                          <where
                                                                                                                                                            label="wr2"
                                                                                                                                                            expression="expression_is_constant(domain_from(source_of_domain))">
                                                                                                                                                          </where>
                                                                                                                                                        </entity>

                                                                                                                                                        <entity
                                                                                                                                                          name="series_composed_function"
                                                                                                                                                          supertypes="maths_function multiple_arity_generic_expression">
                                                                                                                                                          <explicit
                                                                                                                                                            name="operands">
                                                                                                                                                            <aggregate
                                                                                                                                                              type="LIST"
                                                                                                                                                              lower="2"
                                                                                                                                                              upper="?"/>
                                                                                                                                                            <typename
                                                                                                                                                              name="maths_function"/>
                                                                                                                                                            <redeclaration
                                                                                                                                                              entity-ref="multiple_arity_generic_expression"/>
                                                                                                                                                            </explicit>
                                                                                                                                                            <where
                                                                                                                                                              label="wr1"
                                                                                                                                                              expression="composable_sequence(SELF\multiple_arity_generic_expression.operands)">
                                                                                                                                                            </where>
                                                                                                                                                          </entity>

                                                                                                                                                          <entity
                                                                                                                                                            name="shape_representation"
                                                                                                                                                            supertypes="representation">
                                                                                                                                                          </entity>

                                                                                                                                                          <entity
                                                                                                                                                            name="si_unit"
                                                                                                                                                            supertypes="named_unit">
                                                                                                                                                            <explicit
                                                                                                                                                              name="prefix"
                                                                                                                                                              optional="YES">
                                                                                                                                                              <typename
                                                                                                                                                                name="si_prefix"/>
                                                                                                                                                            </explicit>
                                                                                                                                                            <explicit
                                                                                                                                                              name="name">
                                                                                                                                                              <typename
                                                                                                                                                                name="si_unit_name"/>
                                                                                                                                                            </explicit>
                                                                                                                                                            <derived
                                                                                                                                                              name="dimensions"
                                                                                                                                                              expression="dimensions_for_si_unit(name)">
                                                                                                                                                              <typename
                                                                                                                                                                name="dimensional_exponents"/>
                                                                                                                                                              <redeclaration
                                                                                                                                                                entity-ref="named_unit"/>
                                                                                                                                                              </derived>
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="simple_boolean_expression"
                                                                                                                                                              abstract.supertype="YES"
                                                                                                                                                              super.expression="(ONEOF (boolean_literal, boolean_variable))"
                                                                                                                                                              supertypes="boolean_expression simple_generic_expression">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="simple_generic_expression"
                                                                                                                                                              abstract.supertype="YES"
                                                                                                                                                              super.expression="(ONEOF (generic_literal, generic_variable))"
                                                                                                                                                              supertypes="generic_expression">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="simple_numeric_expression"
                                                                                                                                                              abstract.supertype="YES"
                                                                                                                                                              super.expression="(ONEOF (literal_number, numeric_variable))"
                                                                                                                                                              supertypes="numeric_expression simple_generic_expression">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="simple_string_expression"
                                                                                                                                                              abstract.supertype="YES"
                                                                                                                                                              super.expression="(ONEOF (string_literal, string_variable))"
                                                                                                                                                              supertypes="string_expression simple_generic_expression">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="sin_function"
                                                                                                                                                              supertypes="unary_function_call">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="slash_expression"
                                                                                                                                                              supertypes="binary_numeric_expression">
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="solid_angle_measure_with_unit"
                                                                                                                                                              supertypes="measure_with_unit">
                                                                                                                                                              <where
                                                                                                                                                                label="wr1"
                                                                                                                                                                expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                                              </where>
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="solid_angle_unit"
                                                                                                                                                              supertypes="named_unit">
                                                                                                                                                              <where
                                                                                                                                                                label="wr1"
                                                                                                                                                                expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                                                              </where>
                                                                                                                                                            </entity>

                                                                                                                                                            <entity
                                                                                                                                                              name="space_for_physical_quantity"
                                                                                                                                                              supertypes="general_property_relationship">
                                                                                                                                                              <explicit
                                                                                                                                                                name="relating_property">
                                                                                                                                                                <typename
                                                                                                                                                                  name="physical_quantity_space"/>
                                                                                                                                                                <redeclaration
                                                                                                                                                                  entity-ref="general_property_relationship"/>
                                                                                                                                                                </explicit>
                                                                                                                                                                <explicit
                                                                                                                                                                  name="related_property">
                                                                                                                                                                  <typename
                                                                                                                                                                    name="physical_quantity_value"/>
                                                                                                                                                                  <redeclaration
                                                                                                                                                                    entity-ref="general_property_relationship"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="sql_mappable_defined_function"
                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                  supertypes="defined_function">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="square_root_function"
                                                                                                                                                                  supertypes="unary_function_call">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="standard_physical_quantity_symmetry"
                                                                                                                                                                  supertypes="physical_quantity_symmetry_by_library_reference">
                                                                                                                                                                  <where
                                                                                                                                                                    label="valid_standard_class"
                                                                                                                                                                    expression="(SELF\physical_quantity_symmetry_by_library_reference\ externally_defined_item.source.source_id = 'ISO-TS-10303-1099') AND (SELF\ physical_quantity_symmetry_by_library_reference\externally_defined_item. item_id IN ['PS001', 'PS002', 'PS003', 'PS004', 'PS005', 'PS006', 'PS007','PS008', 'PS009', 'PS010', 'PS011', 'PS012', 'PS013'])">
                                                                                                                                                                  </where>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="standard_tensor_order_and_symmetry"
                                                                                                                                                                  supertypes="tensor_order_and_symmetry_by_library_reference">
                                                                                                                                                                  <where
                                                                                                                                                                    label="valid_standard_class"
                                                                                                                                                                    expression="(SELF\tensor_order_and_symmetry_by_library_reference\ externally_defined_item.source.source_id = 'ISO-TS-10303-1080') AND (SELF\ tensor_order_and_symmetry_by_library_reference\externally_defined_item. item_id IN ['TO001', 'TO002', 'TO003', 'TO004', 'TO005', 'TO006', 'TO007','TO008', 'TO009'])">
                                                                                                                                                                  </where>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="string_defined_function"
                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                  supertypes="defined_function string_expression">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="string_expression"
                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                  super.expression="(ONEOF (simple_string_expression, index_expression, substring_expression, concat_expression, format_function, string_defined_function))"
                                                                                                                                                                  supertypes="expression">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="string_literal"
                                                                                                                                                                  supertypes="simple_string_expression generic_literal">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="the_value">
                                                                                                                                                                    <builtintype
                                                                                                                                                                      type="STRING"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="string_variable"
                                                                                                                                                                  supertypes="simple_string_expression variable">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="styled_item"
                                                                                                                                                                  supertypes="representation_item">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="styles">
                                                                                                                                                                    <aggregate
                                                                                                                                                                      type="SET"
                                                                                                                                                                      lower="1"
                                                                                                                                                                      upper="?"/>
                                                                                                                                                                    <typename
                                                                                                                                                                      name="presentation_style_assignment"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="item">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="representation_item"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr1"
                                                                                                                                                                    expression="(SIZEOF(SELF.styles) = 1) XOR (SIZEOF(QUERY(pres_style &lt;* SELF.styles| NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'PRESENTATION_STYLE_BY_CONTEXT' IN TYPEOF(pres_style)))) = 0)">
                                                                                                                                                                  </where>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="subset">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="id">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="identifier"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="name">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="label"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="description"
                                                                                                                                                                    optional="YES">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="text"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="subset">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="class"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="superset">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="class"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="substring_expression"
                                                                                                                                                                  supertypes="string_expression multiple_arity_generic_expression">
                                                                                                                                                                  <derived
                                                                                                                                                                    name="operand"
                                                                                                                                                                    expression="SELF\multiple_arity_generic_expression. operands[1]">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="generic_expression"/>
                                                                                                                                                                  </derived>
                                                                                                                                                                  <derived
                                                                                                                                                                    name="index1"
                                                                                                                                                                    expression="SELF\multiple_arity_generic_expression. operands[2]">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="generic_expression"/>
                                                                                                                                                                  </derived>
                                                                                                                                                                  <derived
                                                                                                                                                                    name="index2"
                                                                                                                                                                    expression="SELF\multiple_arity_generic_expression. operands[3]">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="generic_expression"/>
                                                                                                                                                                  </derived>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr1"
                                                                                                                                                                    expression="('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_EXPRESSION' IN TYPEOF(operand)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(index1)) AND ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_EXPRESSION' IN TYPEOF(index2))">
                                                                                                                                                                  </where>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr2"
                                                                                                                                                                    expression="SIZEOF(SELF\multiple_arity_generic_expression.operands) = 3">
                                                                                                                                                                  </where>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr3"
                                                                                                                                                                    expression="is_int_expr(index1)">
                                                                                                                                                                  </where>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr4"
                                                                                                                                                                    expression="is_int_expr(index2)">
                                                                                                                                                                  </where>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="surface"
                                                                                                                                                                  supertypes="geometric_representation_item">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbol_colour">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="colour_of_symbol">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="colour"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbol_representation"
                                                                                                                                                                  supertypes="representation">
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbol_representation_map"
                                                                                                                                                                  supertypes="representation_map">
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr1"
                                                                                                                                                                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SYMBOL_REPRESENTATION' IN TYPEOF(SELF\representation_map.mapped_representation)">
                                                                                                                                                                  </where>
                                                                                                                                                                  <where
                                                                                                                                                                    label="wr2"
                                                                                                                                                                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AXIS2_PLACEMENT' IN TYPEOF(SELF\representation_map.mapping_origin)">
                                                                                                                                                                  </where>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbol_style">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="name">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="label"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="style_of_symbol">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="symbol_style_select"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbol_target"
                                                                                                                                                                  supertypes="geometric_representation_item">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="placement">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="axis2_placement"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="x_scale">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="positive_ratio_measure"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="y_scale">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="positive_ratio_measure"/>
                                                                                                                                                                  </explicit>
                                                                                                                                                                </entity>

                                                                                                                                                                <entity
                                                                                                                                                                  name="symbolization_by_schematic_element"
                                                                                                                                                                  supertypes="class presented_item_representation">
                                                                                                                                                                  <explicit
                                                                                                                                                                    name="presentation">
                                                                                                                                                                    <typename
                                                                                                                                                                      name="schematic_element"/>
                                                                                                                                                                    <redeclaration
                                                                                                                                                                      entity-ref="presented_item_representation"/>
                                                                                                                                                                    </explicit>
                                                                                                                                                                    <explicit
                                                                                                                                                                      name="item">
                                                                                                                                                                      <typename
                                                                                                                                                                        name="symbolized_item"/>
                                                                                                                                                                      <redeclaration
                                                                                                                                                                        entity-ref="presented_item_representation"/>
                                                                                                                                                                      </explicit>
                                                                                                                                                                    </entity>

                                                                                                                                                                    <entity
                                                                                                                                                                      name="symbolization_of_member_or_subclass_by_schematic_element"
                                                                                                                                                                      supertypes="class presented_item_representation">
                                                                                                                                                                      <explicit
                                                                                                                                                                        name="presentation">
                                                                                                                                                                        <typename
                                                                                                                                                                          name="schematic_element_definition"/>
                                                                                                                                                                        <redeclaration
                                                                                                                                                                          entity-ref="presented_item_representation"/>
                                                                                                                                                                        </explicit>
                                                                                                                                                                        <explicit
                                                                                                                                                                          name="item">
                                                                                                                                                                          <typename
                                                                                                                                                                            name="symbolized_class"/>
                                                                                                                                                                          <redeclaration
                                                                                                                                                                            entity-ref="presented_item_representation"/>
                                                                                                                                                                          </explicit>
                                                                                                                                                                        </entity>

                                                                                                                                                                        <entity
                                                                                                                                                                          name="symbolized_class"
                                                                                                                                                                          supertypes="presented_item">
                                                                                                                                                                          <explicit
                                                                                                                                                                            name="item">
                                                                                                                                                                            <typename
                                                                                                                                                                              name="symbolized_class_select"/>
                                                                                                                                                                          </explicit>
                                                                                                                                                                        </entity>

                                                                                                                                                                        <entity
                                                                                                                                                                          name="symbolized_item"
                                                                                                                                                                          supertypes="presented_item">
                                                                                                                                                                          <explicit
                                                                                                                                                                            name="item">
                                                                                                                                                                            <typename
                                                                                                                                                                              name="symbolized_item_select"/>
                                                                                                                                                                          </explicit>
                                                                                                                                                                        </entity>

                                                                                                                                                                        <entity
                                                                                                                                                                          name="symmetry_for_physical_quantity"
                                                                                                                                                                          supertypes="general_property_relationship">
                                                                                                                                                                          <explicit
                                                                                                                                                                            name="relating_property">
                                                                                                                                                                            <typename
                                                                                                                                                                              name="physical_quantity_symmetry"/>
                                                                                                                                                                            <redeclaration
                                                                                                                                                                              entity-ref="general_property_relationship"/>
                                                                                                                                                                            </explicit>
                                                                                                                                                                            <explicit
                                                                                                                                                                              name="related_property">
                                                                                                                                                                              <typename
                                                                                                                                                                                name="physical_quantity_value"/>
                                                                                                                                                                              <redeclaration
                                                                                                                                                                                entity-ref="general_property_relationship"/>
                                                                                                                                                                              </explicit>
                                                                                                                                                                            </entity>

                                                                                                                                                                            <entity
                                                                                                                                                                              name="tan_function"
                                                                                                                                                                              supertypes="unary_function_call">
                                                                                                                                                                            </entity>

                                                                                                                                                                            <entity
                                                                                                                                                                              name="tensor_order_and_symmetry"
                                                                                                                                                                              supertypes="general_property class">
                                                                                                                                                                            </entity>

                                                                                                                                                                            <entity
                                                                                                                                                                              name="tensor_order_and_symmetry_by_library_reference"
                                                                                                                                                                              supertypes="tensor_order_and_symmetry externally_defined_item">
                                                                                                                                                                            </entity>

                                                                                                                                                                            <entity
                                                                                                                                                                              name="tensor_order_and_symmetry_for_physical_quantity_space"
                                                                                                                                                                              supertypes="general_property_relationship">
                                                                                                                                                                              <explicit
                                                                                                                                                                                name="relating_property">
                                                                                                                                                                                <typename
                                                                                                                                                                                  name="tensor_order_and_symmetry"/>
                                                                                                                                                                                <redeclaration
                                                                                                                                                                                  entity-ref="general_property_relationship"/>
                                                                                                                                                                                </explicit>
                                                                                                                                                                                <explicit
                                                                                                                                                                                  name="related_property">
                                                                                                                                                                                  <typename
                                                                                                                                                                                    name="physical_quantity_space"/>
                                                                                                                                                                                  <redeclaration
                                                                                                                                                                                    entity-ref="general_property_relationship"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="terminator_symbol"
                                                                                                                                                                                  supertypes="annotation_symbol_occurrence">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="annotated_curve">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="annotation_curve_occurrence"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_literal"
                                                                                                                                                                                  supertypes="geometric_representation_item">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="literal">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="presentable_text"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="placement">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="axis2_placement"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="alignment">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="text_alignment"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="path">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="text_path"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="font">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="font_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_literal_with_associated_curves"
                                                                                                                                                                                  supertypes="text_literal">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="associated_curves">
                                                                                                                                                                                    <aggregate
                                                                                                                                                                                      type="SET"
                                                                                                                                                                                      lower="1"
                                                                                                                                                                                      upper="?"/>
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="curve"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_literal_with_blanking_box"
                                                                                                                                                                                  supertypes="text_literal">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="blanking">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="planar_box"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_literal_with_delineation"
                                                                                                                                                                                  supertypes="text_literal">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="delineation">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="text_delineation"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_literal_with_extent"
                                                                                                                                                                                  supertypes="text_literal">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="extent">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="planar_extent"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_style">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="name">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="label"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="character_appearance">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="character_style_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_style_for_defined_font">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="text_colour">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="colour"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_style_with_box_characteristics"
                                                                                                                                                                                  supertypes="text_style">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="characteristics">
                                                                                                                                                                                    <aggregate
                                                                                                                                                                                      type="SET"
                                                                                                                                                                                      lower="1"
                                                                                                                                                                                      upper="4"/>
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="box_characteristic_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="SIZEOF(QUERY(c1 &lt;* SELF.characteristics | SIZEOF(QUERY(c2 &lt;* SELF. characteristics - c1 | TYPEOF(c1) = TYPEOF(c2))) &gt; 0)) = 0">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_style_with_mirror"
                                                                                                                                                                                  supertypes="text_style">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="mirror_placement">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="axis2_placement"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="text_style_with_spacing"
                                                                                                                                                                                  supertypes="text_style">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="character_spacing">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="character_spacing_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="thermodynamic_temperature_measure_with_unit"
                                                                                                                                                                                  supertypes="measure_with_unit">
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="thermodynamic_temperature_unit"
                                                                                                                                                                                  supertypes="named_unit">
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 0.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 1.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="time_measure_with_unit"
                                                                                                                                                                                  supertypes="measure_with_unit">
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TIME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="time_unit"
                                                                                                                                                                                  supertypes="named_unit">
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions. time_exponent = 1.0) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions. amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions. luminous_intensity_exponent = 0.0)">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="trimmed_curve"
                                                                                                                                                                                  supertypes="bounded_curve">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="basis_curve">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="curve"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="trim_1">
                                                                                                                                                                                    <aggregate
                                                                                                                                                                                      type="SET"
                                                                                                                                                                                      lower="1"
                                                                                                                                                                                      upper="2"/>
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="trimming_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="trim_2">
                                                                                                                                                                                    <aggregate
                                                                                                                                                                                      type="SET"
                                                                                                                                                                                      lower="1"
                                                                                                                                                                                      upper="2"/>
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="trimming_select"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="sense_agreement">
                                                                                                                                                                                    <builtintype
                                                                                                                                                                                      type="BOOLEAN"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="master_representation">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="trimming_preference"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr1"
                                                                                                                                                                                    expression="(HIINDEX(trim_1) = 1) OR (TYPEOF(trim_1[1]) &lt;&gt; TYPEOF(trim_1[2]))">
                                                                                                                                                                                  </where>
                                                                                                                                                                                  <where
                                                                                                                                                                                    label="wr2"
                                                                                                                                                                                    expression="(HIINDEX(trim_2) = 1) OR (TYPEOF(trim_2[1]) &lt;&gt; TYPEOF(trim_2[2]))">
                                                                                                                                                                                  </where>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="two_direction_repeat_factor"
                                                                                                                                                                                  supertypes="one_direction_repeat_factor">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="second_repeat_factor">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="vector"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="unary_boolean_expression"
                                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                                  super.expression="(ONEOF (not_expression, odd_function))"
                                                                                                                                                                                  supertypes="boolean_expression unary_generic_expression">
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="unary_function_call"
                                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                                  super.expression="(ONEOF (abs_function, minus_function, sin_function, cos_function, tan_function, asin_function, acos_function, exp_function, log_function, log2_function, log10_function, square_root_function))"
                                                                                                                                                                                  supertypes="unary_numeric_expression">
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="unary_generic_expression"
                                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                                  supertypes="generic_expression">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="operand">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="generic_expression"/>
                                                                                                                                                                                  </explicit>
                                                                                                                                                                                </entity>

                                                                                                                                                                                <entity
                                                                                                                                                                                  name="unary_numeric_expression"
                                                                                                                                                                                  abstract.supertype="YES"
                                                                                                                                                                                  super.expression="(ONEOF (unary_function_call))"
                                                                                                                                                                                  supertypes="numeric_expression unary_generic_expression">
                                                                                                                                                                                  <explicit
                                                                                                                                                                                    name="operand">
                                                                                                                                                                                    <typename
                                                                                                                                                                                      name="numeric_expression"/>
                                                                                                                                                                                    <redeclaration
                                                                                                                                                                                      entity-ref="unary_generic_expression"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="uncertainty_measure_with_unit"
                                                                                                                                                                                    supertypes="measure_with_unit">
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="name">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="label"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="description"
                                                                                                                                                                                      optional="YES">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="text"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="wr1"
                                                                                                                                                                                      expression="valid_measure_value(SELF\measure_with_unit.value_component)">
                                                                                                                                                                                    </where>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="uniform_curve"
                                                                                                                                                                                    supertypes="b_spline_curve">
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="uniform_product_space"
                                                                                                                                                                                    supertypes="maths_space generic_literal">
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="base">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="maths_space"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="exponent">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="positive_integer"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="wr1"
                                                                                                                                                                                      expression="expression_is_constant(base)">
                                                                                                                                                                                    </where>
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="wr2"
                                                                                                                                                                                      expression="no_cyclic_space_reference(SELF, [])">
                                                                                                                                                                                    </where>
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="wr3"
                                                                                                                                                                                      expression="base &lt;&gt; the_empty_space">
                                                                                                                                                                                    </where>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="union">
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="id">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="identifier"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="name">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="label"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="description"
                                                                                                                                                                                      optional="YES">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="text"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="operand">
                                                                                                                                                                                      <aggregate
                                                                                                                                                                                        type="SET"
                                                                                                                                                                                        lower="2"
                                                                                                                                                                                        upper="?"/>
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="class"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="resultant">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="class"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="unit_defined_maths_space_context"
                                                                                                                                                                                    supertypes="defined_maths_space_context">
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="unit_basis">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="unit"/>
                                                                                                                                                                                    </explicit>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="usage_of_schematic_element_occurrence"
                                                                                                                                                                                    supertypes="mapped_item">
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="schematic_element_occurrence_as_part"
                                                                                                                                                                                      expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'SCHEMATIC_ELEMENT_OCCURRENCE' IN TYPEOF(SELF\mapped_item.mapping_source. mapped_representation)">
                                                                                                                                                                                    </where>
                                                                                                                                                                                    <where
                                                                                                                                                                                      label="implicit_schematic_element_definition_as_whole"
                                                                                                                                                                                      expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +'IMPLICIT_SCHEMATIC_ELEMENT_DEFINITION' IN TYPEOF(using_representations(SELF))">
                                                                                                                                                                                    </where>
                                                                                                                                                                                  </entity>

                                                                                                                                                                                  <entity
                                                                                                                                                                                    name="value_function"
                                                                                                                                                                                    supertypes="numeric_expression unary_generic_expression">
                                                                                                                                                                                    <explicit
                                                                                                                                                                                      name="operand">
                                                                                                                                                                                      <typename
                                                                                                                                                                                        name="string_expression"/>
                                                                                                                                                                                      <redeclaration
                                                                                                                                                                                        entity-ref="unary_generic_expression"/>
                                                                                                                                                                                      </explicit>
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="variable"
                                                                                                                                                                                      abstract.supertype="YES"
                                                                                                                                                                                      super.expression="(ONEOF (numeric_variable, boolean_variable, string_variable))"
                                                                                                                                                                                      supertypes="generic_variable">
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="variable_semantics"
                                                                                                                                                                                      abstract.supertype="YES">
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="vector"
                                                                                                                                                                                      supertypes="geometric_representation_item">
                                                                                                                                                                                      <explicit
                                                                                                                                                                                        name="orientation">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="direction"/>
                                                                                                                                                                                      </explicit>
                                                                                                                                                                                      <explicit
                                                                                                                                                                                        name="magnitude">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="length_measure"/>
                                                                                                                                                                                      </explicit>
                                                                                                                                                                                      <where
                                                                                                                                                                                        label="wr1"
                                                                                                                                                                                        expression="magnitude &gt;= 0.0">
                                                                                                                                                                                      </where>
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="volume"
                                                                                                                                                                                      supertypes="geometric_representation_item">
                                                                                                                                                                                      <where
                                                                                                                                                                                        label="wr1"
                                                                                                                                                                                        expression="SELF\geometric_representation_item.dim = 3">
                                                                                                                                                                                      </where>
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="volume_measure_with_unit"
                                                                                                                                                                                      supertypes="measure_with_unit">
                                                                                                                                                                                      <where
                                                                                                                                                                                        label="wr1"
                                                                                                                                                                                        expression="'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VOLUME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
                                                                                                                                                                                      </where>
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="volume_unit"
                                                                                                                                                                                      supertypes="named_unit">
                                                                                                                                                                                      <where
                                                                                                                                                                                        label="wr1"
                                                                                                                                                                                        expression="(SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\ named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit. dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions. electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions. thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit. dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit. dimensions.luminous_intensity_exponent = 0.000000)">
                                                                                                                                                                                      </where>
                                                                                                                                                                                    </entity>

                                                                                                                                                                                    <entity
                                                                                                                                                                                      name="xor_expression"
                                                                                                                                                                                      supertypes="binary_boolean_expression">
                                                                                                                                                                                      <explicit
                                                                                                                                                                                        name="operands">
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"
                                                                                                                                                                                          lower="2"
                                                                                                                                                                                          upper="2"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="boolean_expression"/>
                                                                                                                                                                                        <redeclaration
                                                                                                                                                                                          entity-ref="binary_generic_expression"/>
                                                                                                                                                                                        </explicit>
                                                                                                                                                                                      </entity>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg2">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : BOOLEAN;
END_LOCAL;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIMPLE_GENERIC_EXPRESSION'
IN TYPEOF(arg1) THEN
RETURN (TRUE);
END_IF;
IF arg1 IN arg2 THEN
RETURN (FALSE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.UNARY_GENERIC_EXPRESSION'
IN TYPEOF(arg1) THEN
RETURN (acyclic(arg1\unary_generic_expression.operand, arg2 + [arg1]));
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BINARY_GENERIC_EXPRESSION'
IN TYPEOF(arg1) THEN
RETURN (acyclic(arg1\binary_generic_expression.operands[1], arg2 + [arg1])
AND acyclic(arg1\binary_generic_expression.operands[2], arg2 + [arg1]));
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION'
IN TYPEOF(arg1) THEN
result := TRUE;
REPEAT i := 1 TO SIZEOF(arg1\multiple_arity_generic_expression.operands);
result := result AND acyclic(arg1\multiple_arity_generic_expression.
operands[i], arg2 + [arg1]);
END_REPEAT;
RETURN (result);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic_composite_text">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="start_composite">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="composite_text"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="child_text">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="text_or_character"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
i : INTEGER;
local_composite_text : SET OF composite_text;
local_annotation_text : SET OF annotation_text;
local_children : SET OF text_or_character;
END_LOCAL;
local_composite_text := QUERY(child &lt;* child_text |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT' IN
TYPEOF(child));
IF SIZEOF(local_composite_text) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(local_composite_text);
IF start_composite :=: local_composite_text[i] THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
local_children := child_text;
IF SIZEOF(local_composite_text) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(local_composite_text);
local_children := local_children + local_composite_text[i].collected_text
;
END_REPEAT;
END_IF;
local_annotation_text := QUERY(child &lt;* child_text |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT' IN
TYPEOF(child));
IF SIZEOF(local_annotation_text) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(local_annotation_text);
local_children := local_children + QUERY(item &lt;* local_annotation_text[i]
\mapped_item.mapping_source.mapped_representation.items | SIZEOF([
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ANNOTATION_TEXT',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_TEXT'] *
TYPEOF(item)) &gt; 0);
END_REPEAT;
END_IF;
IF local_children :&lt;&gt;: child_text THEN
RETURN (acyclic_composite_text(start_composite, local_children));
ELSE
RETURN (TRUE);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic_curve_replica">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="rep">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="curve_replica"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="parent">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="curve"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF NOT ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE_REPLICA'
IN TYPEOF(parent)) THEN
RETURN (TRUE);
END_IF;
IF parent :=: rep THEN
RETURN (FALSE);
ELSE
RETURN (acyclic_curve_replica(rep, parent\curve_replica.parent_curve));
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic_mapped_item_usage">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="rep">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="representation"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
items : SET OF representation_item;
END_LOCAL;
items := QUERY(item &lt;* rep.items |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(
item));
IF SIZEOF(items) = 0 THEN
RETURN (FALSE);
ELSE
REPEAT i := 1 TO HIINDEX(items);
IF items[i]\mapped_item.mapping_source.mapped_representation :=: rep THEN
RETURN (TRUE);
ELSE
RETURN (acyclic_mapped_item_usage(items[i]\mapped_item.mapping_source.
mapped_representation));
END_IF;
END_REPEAT;
RETURN (FALSE);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic_mapped_representation">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="parent_set">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="representation"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="children_set">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="representation_item"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
x : SET OF representation_item;
y : SET OF representation_item;
END_LOCAL;
x := QUERY(z &lt;* children_set |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(z
));
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
IF x[i]\mapped_item.mapping_source.mapped_representation IN parent_set
THEN
RETURN (FALSE);
END_IF;
IF NOT acyclic_mapped_representation(parent_set + x[i]\mapped_item.
mapping_source.mapped_representation, x[i]\mapped_item.mapping_source.
mapped_representation.items) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
x := children_set - x;
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
y := QUERY(z &lt;* bag_to_set(USEDIN(x[i], '')) |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_ITEM'
IN TYPEOF(z));
IF NOT acyclic_mapped_representation(parent_set, y) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="acyclic_product_category_relationship">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="relation">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="product_category_relationship"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="children">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="product_category"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
x : SET OF product_category_relationship;
local_children : SET OF product_category;
END_LOCAL;
REPEAT i := 1 TO HIINDEX(children);
IF relation.category :=: children[i] THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
x := bag_to_set(USEDIN(relation.category,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'
));
local_children := children + relation.category;
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="all_members_of_es">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sv">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="es">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
CONSTANT
base_types : SET OF STRING := ['NUMBER', 'COMPLEX_NUMBER_LITERAL', 'REAL',
'INTEGER', 'LOGICAL', 'BOOLEAN', 'STRING', 'BINARY', 'MATHS_SPACE',
'MATHS_FUNCTION', 'LIST', 'ELEMENTARY_SPACE_ENUMERATORS', 'ORDERING_TYPE',
'LOWER_UPPER', 'SYMMETRY_TYPE', 'ELEMENTARY_FUNCTION_ENUMERATORS',
'OPEN_CLOSED', 'SPACE_CONSTRAINT_TYPE', 'REPACKAGE_OPTIONS',
'EXTENSION_OPTIONS'];
END_CONSTANT;
LOCAL
v : maths_value;
key_type : STRING := '';
types : SET OF STRING;
ge : generic_expression;
cum : LOGICAL := TRUE;
vspc : maths_space;
END_LOCAL;
IF NOT EXISTS(sv) OR NOT EXISTS(es) THEN
RETURN (FALSE);
END_IF;
CASE es OF
es_numbers :
key_type := 'NUMBER';
es_complex_numbers :
key_type := 'COMPLEX_NUMBER_LITERAL';
es_reals :
key_type := 'REAL';
es_integers :
key_type := 'INTEGER';
es_logicals :
key_type := 'LOGICAL';
es_booleans :
key_type := 'BOOLEAN';
es_strings :
key_type := 'STRING';
es_binarys :
key_type := 'BINARY';
es_maths_spaces :
key_type := 'MATHS_SPACE';
es_maths_functions :
key_type := 'MATHS_FUNCTION';
es_generics :
RETURN (TRUE);
END_CASE;
REPEAT i := 1 TO SIZEOF(sv);
IF NOT EXISTS(sv[i]) THEN
RETURN (FALSE);
END_IF;
v := simplify_maths_value(sv[i]);
types := stripped_typeof(v);
IF key_type IN types THEN
SKIP;
END_IF;
IF (es = es_numbers) AND ('COMPLEX_NUMBER_LITERAL' IN types) THEN
SKIP;
END_IF;
IF SIZEOF(base_types * types) &gt; 0 THEN
RETURN (FALSE);
END_IF;
ge := v;
IF has_values_space(ge) THEN
vspc := values_space_of(ge);
IF NOT subspace_of_es(vspc, es) THEN
IF NOT compatible_spaces(vspc, make_elementary_space(es)) THEN
RETURN (FALSE);
END_IF;
cum := UNKNOWN;
END_IF;
ELSE
cum := UNKNOWN;
END_IF;
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="any_space_satisfies">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="space_constraint_type"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
spc_id : elementary_space_enumerators;
END_LOCAL;
IF (sc = sc_equal) OR NOT ('ELEMENTARY_SPACE' IN stripped_typeof(spc)) THEN
RETURN (FALSE);
END_IF;
spc_id := spc\elementary_space.space_id;
IF sc = sc_subspace THEN
RETURN (bool(spc_id = es_generics));
END_IF;
IF sc = sc_member THEN
RETURN (bool((spc_id = es_generics) OR (spc_id = es_maths_spaces)));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="assoc_product_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ts1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ts2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types1 : SET OF STRING := stripped_typeof(ts1);
types2 : SET OF STRING := stripped_typeof(ts2);
up1 : uniform_product_space := make_uniform_product_space(the_reals, 1);
up2 : uniform_product_space := make_uniform_product_space(the_reals, 1);
lp1 : listed_product_space := the_zero_tuple_space;
lp2 : listed_product_space := the_zero_tuple_space;
lps : listed_product_space := the_zero_tuple_space;
et1 : extended_tuple_space := the_tuples;
et2 : extended_tuple_space := the_tuples;
ets : extended_tuple_space := the_tuples;
use_up1 : BOOLEAN;
use_up2 : BOOLEAN;
use_lp1 : BOOLEAN;
use_lp2 : BOOLEAN;
factors : LIST OF maths_space := [];
tspace : tuple_space;
END_LOCAL;
IF 'UNIFORM_PRODUCT_SPACE' IN types1 THEN
up1 := ts1;
use_up1 := TRUE;
use_lp1 := FALSE;
ELSE
IF 'LISTED_PRODUCT_SPACE' IN types1 THEN
lp1 := ts1;
use_up1 := FALSE;
use_lp1 := TRUE;
ELSE
IF NOT ('EXTENDED_TUPLE_SPACE' IN types1) THEN
RETURN (?);
END_IF;
et1 := ts1;
use_up1 := FALSE;
use_lp1 := FALSE;
END_IF;
END_IF;
IF 'UNIFORM_PRODUCT_SPACE' IN types2 THEN
up2 := ts2;
use_up2 := TRUE;
use_lp2 := FALSE;
ELSE
IF 'LISTED_PRODUCT_SPACE' IN types2 THEN
lp2 := ts2;
use_up2 := FALSE;
use_lp2 := TRUE;
ELSE
IF NOT ('EXTENDED_TUPLE_SPACE' IN types2) THEN
RETURN (?);
END_IF;
et2 := ts2;
use_up2 := FALSE;
use_lp2 := FALSE;
END_IF;
END_IF;
IF use_up1 THEN
IF use_up2 THEN
IF up1.base = up2.base THEN
tspace := make_uniform_product_space(up1.base, up1.exponent + up2.
exponent);
ELSE
factors := [up1.base : up1.exponent, up2.base : up2.exponent];
tspace := make_listed_product_space(factors);
END_IF;
ELSE
IF use_lp2 THEN
factors := [up1.base : up1.exponent];
factors := factors + lp2.factors;
tspace := make_listed_product_space(factors);
ELSE
tspace := assoc_product_space(up1, et2.base);
tspace := make_extended_tuple_space(tspace, et2.extender);
END_IF;
END_IF;
ELSE
IF use_lp1 THEN
IF use_up2 THEN
factors := [up2.base : up2.exponent];
factors := lp1.factors + factors;
tspace := make_listed_product_space(factors);
ELSE
IF use_lp2 THEN
tspace := make_listed_product_space(lp1.factors + lp2.factors);
ELSE
tspace := assoc_product_space(lp1, et2.base);
tspace := make_extended_tuple_space(tspace, et2.extender);
END_IF;
END_IF;
ELSE
IF use_up2 THEN
IF et1.extender = up2.base THEN
tspace := assoc_product_space(et1.base, up2);
tspace := make_extended_tuple_space(tspace, et1.extender);
ELSE
RETURN (?);
END_IF;
ELSE
IF use_lp2 THEN
factors := lp2.factors;
REPEAT i := 1 TO SIZEOF(factors);
IF et1.extender &lt;&gt; factors[i] THEN
RETURN (?);
END_IF;
END_REPEAT;
tspace := assoc_product_space(et1.base, lp2);
tspace := make_extended_tuple_space(tspace, et1.extender);
ELSE
IF et1.extender = et2.extender THEN
tspace := assoc_product_space(et1, et2.base);
ELSE
RETURN (?);
END_IF;
END_IF;
END_IF;
END_IF;
END_IF;
RETURN (tspace);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="atan2">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="y">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="x">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="REAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
r : REAL;
END_LOCAL;
IF (y = 0.0) AND (x = 0.0) THEN
RETURN (?);
END_IF;
r := ATAN(y, x);
IF x &lt; 0.0 THEN
IF y &lt; 0.0 THEN
r := r - PI;
ELSE
r := r + PI;
END_IF;
END_IF;
RETURN (r);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="bag_to_set">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="the_bag">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="BAG"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"
                                                                                                                                                                                            typelabel="intype"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="SET"/>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="GENERIC"
                                                                                                                                                                                          typelabel="intype"/>
                                                                                                                                                                                        <algorithm>
LOCAL
the_set : SET OF GENERIC : intype := [];
END_LOCAL;
IF SIZEOF(the_bag) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(the_bag);
the_set := the_set + the_bag[i];
END_REPEAT;
END_IF;
RETURN (the_set);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="bool">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lgcl">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="LOGICAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF NOT EXISTS(lgcl) THEN
RETURN (FALSE);
END_IF;
IF lgcl &lt;&gt; TRUE THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="build_2axes">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ref_direction">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="direction"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"
                                                                                                                                                                                          lower="2"
                                                                                                                                                                                          upper="2"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="direction"/>
                                                                                                                                                                                        <algorithm>
LOCAL
d : direction := NVL(normalise(ref_direction), dummy_gri||direction([1.0, 0.0
]));
END_LOCAL;
RETURN ([d, orthogonal_complement(d)]);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="check_sparse_index_domain">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="idxdom">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="base">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="zero_or_one"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="shape">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="positive_integer"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="order">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="ordering_type"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
mthspc : maths_space;
interval : finite_integer_interval;
i : INTEGER;
END_LOCAL;
mthspc := factor1(idxdom);
interval := mthspc;
IF order = by_rows THEN
i := 1;
ELSE
i := 2;
END_IF;
RETURN (bool((interval.min &lt;= base) AND (interval.max &gt;= base + shape[i])));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="check_sparse_index_to_loc">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="index_range">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="loc_domain">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
temp : maths_space;
idx_rng_itvl : finite_integer_interval;
loc_dmn_itvl : finite_integer_interval;
END_LOCAL;
temp := factor1(index_range);
IF schema_prefix + 'TUPLE_SPACE' IN TYPEOF(temp) THEN
temp := factor1(temp);
END_IF;
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (FALSE);
END_IF;
idx_rng_itvl := temp;
temp := factor1(loc_domain);
IF schema_prefix + 'TUPLE_SPACE' IN TYPEOF(temp) THEN
temp := factor1(temp);
END_IF;
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (FALSE);
END_IF;
loc_dmn_itvl := temp;
RETURN (bool((loc_dmn_itvl.min &lt;= idx_rng_itvl.min) AND (idx_rng_itvl.max &lt;=
loc_dmn_itvl.max + 1)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="check_sparse_loc_range">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="locrng">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="base">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="zero_or_one"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="shape">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="positive_integer"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="order">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="ordering_type"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
mthspc : maths_space;
interval : finite_integer_interval;
i : INTEGER;
END_LOCAL;
IF space_dimension(locrng) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
mthspc := factor1(locrng);
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(mthspc)) THEN
RETURN (FALSE);
END_IF;
interval := mthspc;
IF order = by_rows THEN
i := 2;
ELSE
i := 1;
END_IF;
RETURN (bool((interval.min &gt;= base) AND (interval.max &lt;= base + shape[i] - 1)
));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="check_text_alignment">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ct">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="composite_text"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
a : SET OF text_alignment := [];
END_LOCAL;
REPEAT i := 1 TO HIINDEX(ct.collected_text);
a := a + [ct.collected_text[i]\text_literal.alignment];
END_REPEAT;
RETURN (SIZEOF(a) = 1);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="check_text_font">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ct">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="composite_text"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
f : SET OF font_select := [];
END_LOCAL;
REPEAT i := 1 TO HIINDEX(ct.collected_text);
f := f + [ct.collected_text[i]\text_literal.font];
END_REPEAT;
RETURN (SIZEOF(f) &lt;= 1);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="compare_basis_and_coef">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="basis">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="b_spline_basis"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="coef">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
shape : LIST OF positive_integer;
END_LOCAL;
IF NOT EXISTS(basis) OR NOT EXISTS(coef) THEN
RETURN (FALSE);
END_IF;
shape := shape_of_array(coef);
IF NOT EXISTS(shape) THEN
RETURN (FALSE);
END_IF;
IF SIZEOF(shape) &lt; SIZEOF(basis) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO SIZEOF(basis);
IF (basis[i].num_basis = shape[i]) &lt;&gt; TRUE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="compatible_complex_number_regions">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(sp1);
crgn1 : cartesian_complex_number_region;
crgn2 : cartesian_complex_number_region;
prgn1 : polar_complex_number_region;
prgn2 : polar_complex_number_region;
prgn1c2 : polar_complex_number_region;
prgn2c1 : polar_complex_number_region;
sp1_is_crgn : BOOLEAN;
sp2_is_crgn : BOOLEAN;
END_LOCAL;
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN typenames THEN
sp1_is_crgn := TRUE;
crgn1 := sp1;
ELSE
IF 'POLAR_COMPLEX_NUMBER_REGION' IN typenames THEN
sp1_is_crgn := FALSE;
prgn1 := sp1;
ELSE
RETURN (TRUE);
END_IF;
END_IF;
typenames := stripped_typeof(sp2);
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN typenames THEN
sp2_is_crgn := TRUE;
crgn2 := sp2;
ELSE
IF 'POLAR_COMPLEX_NUMBER_REGION' IN typenames THEN
sp2_is_crgn := FALSE;
prgn2 := sp2;
ELSE
RETURN (TRUE);
END_IF;
END_IF;
IF sp1_is_crgn AND sp2_is_crgn THEN
RETURN (compatible_intervals(crgn1.real_constraint, crgn2.real_constraint)
AND compatible_intervals(crgn1.imag_constraint, crgn2.imag_constraint));
END_IF;
IF NOT sp1_is_crgn AND NOT sp2_is_crgn AND (prgn1.centre.real_part = prgn2.
centre.real_part) AND (prgn1.centre.imag_part = prgn2.centre.imag_part) THEN
IF NOT compatible_intervals(prgn1.distance_constraint, prgn2.
distance_constraint) THEN
RETURN (FALSE);
END_IF;
IF compatible_intervals(prgn1.direction_constraint, prgn2.
direction_constraint) THEN
RETURN (TRUE);
END_IF;
IF (prgn1.direction_constraint.max &gt; PI) AND (prgn2.direction_constraint.
max &lt; PI) THEN
RETURN (compatible_intervals(prgn2.direction_constraint,
make_finite_real_interval(-PI, open, prgn1.direction_constraint.max - 2.0
* PI, prgn1.direction_constraint.max_closure)));
END_IF;
IF (prgn2.direction_constraint.max &gt; PI) AND (prgn1.direction_constraint.
max &lt; PI) THEN
RETURN (compatible_intervals(prgn1.direction_constraint,
make_finite_real_interval(-PI, open, prgn2.direction_constraint.max - 2.0
* PI, prgn2.direction_constraint.max_closure)));
END_IF;
RETURN (FALSE);
END_IF;
IF sp1_is_crgn AND NOT sp2_is_crgn THEN
crgn2 := enclose_pregion_in_cregion(prgn2);
prgn1 := enclose_cregion_in_pregion(crgn1, prgn2.centre);
RETURN (compatible_complex_number_regions(crgn1, crgn2) AND
compatible_complex_number_regions(prgn1, prgn2));
END_IF;
IF NOT sp1_is_crgn AND sp2_is_crgn THEN
crgn1 := enclose_pregion_in_cregion(prgn1);
prgn2 := enclose_cregion_in_pregion(crgn2, prgn1.centre);
RETURN (compatible_complex_number_regions(crgn1, crgn2) AND
compatible_complex_number_regions(prgn1, prgn2));
END_IF;
prgn1c2 := enclose_pregion_in_pregion(prgn1, prgn2.centre);
prgn2c1 := enclose_pregion_in_pregion(prgn2, prgn1.centre);
RETURN (compatible_complex_number_regions(prgn1, prgn2c1) AND
compatible_complex_number_regions(prgn1c2, prgn2));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="compatible_es_values">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="esval1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="esval2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
esval1_is_numeric : LOGICAL;
esval2_is_numeric : LOGICAL;
END_LOCAL;
IF (esval1 = esval2) OR (esval1 = es_generics) OR (esval2 = es_generics) THEN
RETURN (TRUE);
END_IF;
esval1_is_numeric := (esval1 &gt;= es_numbers) AND (esval1 &lt;= es_integers);
esval2_is_numeric := (esval2 &gt;= es_numbers) AND (esval2 &lt;= es_integers);
IF esval1_is_numeric AND (esval2 = es_numbers) OR esval2_is_numeric AND (
esval1 = es_numbers) THEN
RETURN (TRUE);
END_IF;
IF esval1_is_numeric XOR esval2_is_numeric THEN
RETURN (FALSE);
END_IF;
IF (esval1 = es_logicals) AND (esval2 = es_booleans) OR (esval1 = es_booleans
) AND (esval2 = es_logicals) THEN
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="compatible_intervals">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
amin : REAL;
amax : REAL;
END_LOCAL;
IF min_exists(sp1) AND max_exists(sp2) THEN
amin := real_min(sp1);
amax := real_max(sp2);
IF amin &gt; amax THEN
RETURN (FALSE);
END_IF;
IF amin = amax THEN
RETURN (min_included(sp1) AND max_included(sp2));
END_IF;
END_IF;
IF min_exists(sp2) AND max_exists(sp1) THEN
amin := real_min(sp2);
amax := real_max(sp1);
IF amin &gt; amax THEN
RETURN (FALSE);
END_IF;
IF amin = amax THEN
RETURN (min_included(sp2) AND max_included(sp1));
END_IF;
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="compatible_spaces">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="sp2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types1 : SET OF STRING := stripped_typeof(sp1);
types2 : SET OF STRING := stripped_typeof(sp2);
lgcl : LOGICAL := UNKNOWN;
m : INTEGER;
n : INTEGER;
s1 : maths_space;
s2 : maths_space;
END_LOCAL;
IF 'FINITE_SPACE' IN types1 THEN
REPEAT i := 1 TO SIZEOF(sp1\finite_space.members);
lgcl := member_of(sp1\finite_space.members[i], sp2);
IF lgcl &lt;&gt; FALSE THEN
RETURN (TRUE);
END_IF;
END_REPEAT;
RETURN (FALSE);
END_IF;
IF 'FINITE_SPACE' IN types2 THEN
REPEAT i := 1 TO SIZEOF(sp2\finite_space.members);
lgcl := member_of(sp2\finite_space.members[i], sp1);
IF lgcl &lt;&gt; FALSE THEN
RETURN (TRUE);
END_IF;
END_REPEAT;
RETURN (FALSE);
END_IF;
IF 'ELEMENTARY_SPACE' IN types1 THEN
IF sp1\elementary_space.space_id = es_generics THEN
RETURN (TRUE);
END_IF;
IF 'ELEMENTARY_SPACE' IN types2 THEN
RETURN (compatible_es_values(sp1\elementary_space.space_id, sp2\
elementary_space.space_id));
END_IF;
IF ('FINITE_INTEGER_INTERVAL' IN types2) OR ('INTEGER_INTERVAL_FROM_MIN' IN
types2) OR ('INTEGER_INTERVAL_TO_MAX' IN types2) THEN
RETURN (compatible_es_values(sp1\elementary_space.space_id, es_integers))
;
END_IF;
IF ('FINITE_REAL_INTERVAL' IN types2) OR ('REAL_INTERVAL_FROM_MIN' IN
types2) OR ('REAL_INTERVAL_TO_MAX' IN types2) THEN
RETURN (compatible_es_values(sp1\elementary_space.space_id, es_reals));
END_IF;
IF ('CARTESIAN_COMPLEX_NUMBER_REGION' IN types2) OR (
'POLAR_COMPLEX_NUMBER_REGION' IN types2) THEN
RETURN (compatible_es_values(sp1\elementary_space.space_id,
es_complex_numbers));
END_IF;
IF 'TUPLE_SPACE' IN types2 THEN
RETURN (FALSE);
END_IF;
IF 'FUNCTION_SPACE' IN types2 THEN
RETURN (bool(sp1\elementary_space.space_id = es_maths_functions));
END_IF;
RETURN (TRUE);
END_IF;
IF 'ELEMENTARY_SPACE' IN types2 THEN
IF sp2\elementary_space.space_id = es_generics THEN
RETURN (TRUE);
END_IF;
IF ('FINITE_INTEGER_INTERVAL' IN types1) OR ('INTEGER_INTERVAL_FROM_MIN' IN
types1) OR ('INTEGER_INTERVAL_TO_MAX' IN types1) THEN
RETURN (compatible_es_values(sp2\elementary_space.space_id, es_integers))
;
END_IF;
IF ('FINITE_REAL_INTERVAL' IN types1) OR ('REAL_INTERVAL_FROM_MIN' IN
types1) OR ('REAL_INTERVAL_TO_MAX' IN types1) THEN
RETURN (compatible_es_values(sp2\elementary_space.space_id, es_reals));
END_IF;
IF ('CARTESIAN_COMPLEX_NUMBER_REGION' IN types1) OR (
'POLAR_COMPLEX_NUMBER_REGION' IN types1) THEN
RETURN (compatible_es_values(sp2\elementary_space.space_id,
es_complex_numbers));
END_IF;
IF 'TUPLE_SPACE' IN types1 THEN
RETURN (FALSE);
END_IF;
IF 'FUNCTION_SPACE' IN types1 THEN
RETURN (bool(sp2\elementary_space.space_id = es_maths_functions));
END_IF;
RETURN (TRUE);
END_IF;
IF subspace_of_es(sp1, es_integers) THEN
IF subspace_of_es(sp2, es_integers) THEN
RETURN (compatible_intervals(sp1, sp2));
END_IF;
RETURN (FALSE);
END_IF;
IF subspace_of_es(sp2, es_integers) THEN
RETURN (FALSE);
END_IF;
IF subspace_of_es(sp1, es_reals) THEN
IF subspace_of_es(sp2, es_reals) THEN
RETURN (compatible_intervals(sp1, sp2));
END_IF;
RETURN (FALSE);
END_IF;
IF subspace_of_es(sp2, es_reals) THEN
RETURN (FALSE);
END_IF;
IF subspace_of_es(sp1, es_complex_numbers) THEN
IF subspace_of_es(sp2, es_complex_numbers) THEN
RETURN (compatible_complex_number_regions(sp1, sp2));
END_IF;
RETURN (FALSE);
END_IF;
IF subspace_of_es(sp2, es_complex_numbers) THEN
RETURN (FALSE);
END_IF;
IF 'UNIFORM_PRODUCT_SPACE' IN types1 THEN
IF 'UNIFORM_PRODUCT_SPACE' IN types2 THEN
IF sp1\uniform_product_space.exponent &lt;&gt; sp2\uniform_product_space.
exponent THEN
RETURN (FALSE);
END_IF;
RETURN (compatible_spaces(sp1\uniform_product_space.base, sp2\
uniform_product_space.base));
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN types2 THEN
n := SIZEOF(sp2\listed_product_space.factors);
IF sp1\uniform_product_space.exponent &lt;&gt; n THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO n;
IF NOT compatible_spaces(sp1\uniform_product_space.base, sp2\
listed_product_space.factors[i]) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types2 THEN
m := sp1\uniform_product_space.exponent;
n := space_dimension(sp2\extended_tuple_space.base);
IF m &lt; n THEN
RETURN (FALSE);
END_IF;
IF m = n THEN
RETURN (compatible_spaces(sp1, sp2\extended_tuple_space.base));
END_IF;
RETURN (compatible_spaces(sp1, assoc_product_space(sp2\
extended_tuple_space.base, make_uniform_product_space(sp2\
extended_tuple_space.extender, m - n))));
END_IF;
IF 'FUNCTION_SPACE' IN types2 THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN types1 THEN
n := SIZEOF(sp1\listed_product_space.factors);
IF 'UNIFORM_PRODUCT_SPACE' IN types2 THEN
IF n &lt;&gt; sp2\uniform_product_space.exponent THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO n;
IF NOT compatible_spaces(sp2\uniform_product_space.base, sp1\
listed_product_space.factors[i]) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN types2 THEN
IF n &lt;&gt; SIZEOF(sp2\listed_product_space.factors) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO n;
IF NOT compatible_spaces(sp1\listed_product_space.factors[i], sp2\
listed_product_space.factors[i]) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types2 THEN
m := space_dimension(sp2\extended_tuple_space.base);
IF n &lt; m THEN
RETURN (FALSE);
END_IF;
IF n = m THEN
RETURN (compatible_spaces(sp1, sp2\extended_tuple_space.base));
END_IF;
RETURN (compatible_spaces(sp1, assoc_product_space(sp2\
extended_tuple_space.base, make_uniform_product_space(sp2\
extended_tuple_space.extender, n - m))));
END_IF;
IF schema_prefix + 'FUNCTION_SPACE' IN types2 THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types1 THEN
IF ('UNIFORM_PRODUCT_SPACE' IN types2) OR ('LISTED_PRODUCT_SPACE' IN types2
) THEN
RETURN (compatible_spaces(sp2, sp1));
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types2 THEN
IF NOT compatible_spaces(sp1\extended_tuple_space.extender, sp2\
extended_tuple_space.extender) THEN
RETURN (FALSE);
END_IF;
n := space_dimension(sp1\extended_tuple_space.base);
m := space_dimension(sp2\extended_tuple_space.base);
IF n &lt; m THEN
RETURN (compatible_spaces(assoc_product_space(sp1\extended_tuple_space.
base, make_uniform_product_space(sp1\extended_tuple_space.extender, m
- n)), sp2\extended_tuple_space.base));
END_IF;
IF n = m THEN
RETURN (compatible_spaces(sp1\extended_tuple_space.base, sp2\
extended_tuple_space.base));
END_IF;
IF n &gt; m THEN
RETURN (compatible_spaces(sp1\extended_tuple_space.base,
assoc_product_space(sp2\extended_tuple_space.base,
make_uniform_product_space(sp2\extended_tuple_space.extender, n - m))))
;
END_IF;
END_IF;
IF 'FUNCTION_SPACE' IN types2 THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
END_IF;
IF 'FUNCTION_SPACE' IN types1 THEN
IF 'FUNCTION_SPACE' IN types2 THEN
s1 := sp1\function_space.domain_argument;
s2 := sp2\function_space.domain_argument;
CASE sp1\function_space.domain_constraint OF
sc_equal :
BEGIN
CASE sp2\function_space.domain_constraint OF
sc_equal :
lgcl := subspace_of(s1, s2) AND subspace_of(s2, s1);
sc_subspace :
lgcl := subspace_of(s1, s2);
sc_member :
lgcl := member_of(s1, s2);
END_CASE;
END;
sc_subspace :
BEGIN
CASE sp2\function_space.domain_constraint OF
sc_equal :
lgcl := subspace_of(s2, s1);
sc_subspace :
lgcl := compatible_spaces(s1, s2);
sc_member :
lgcl := UNKNOWN;
END_CASE;
END;
sc_member :
BEGIN
CASE sp2\function_space.domain_constraint OF
sc_equal :
lgcl := member_of(s2, s1);
sc_subspace :
lgcl := UNKNOWN;
sc_member :
lgcl := compatible_spaces(s1, s2);
END_CASE;
END;
END_CASE;
IF lgcl = FALSE THEN
RETURN (FALSE);
END_IF;
s1 := sp1\function_space.range_argument;
s2 := sp2\function_space.range_argument;
CASE sp1\function_space.range_constraint OF
sc_equal :
BEGIN
CASE sp2\function_space.range_constraint OF
sc_equal :
lgcl := subspace_of(s1, s2) AND subspace_of(s2, s1);
sc_subspace :
lgcl := subspace_of(s1, s2);
sc_member :
lgcl := member_of(s1, s2);
END_CASE;
END;
sc_subspace :
BEGIN
CASE sp2\function_space.range_constraint OF
sc_equal :
lgcl := subspace_of(s2, s1);
sc_subspace :
lgcl := compatible_spaces(s1, s2);
sc_member :
lgcl := UNKNOWN;
END_CASE;
END;
sc_member :
BEGIN
CASE sp2\function_space.range_constraint OF
sc_equal :
lgcl := member_of(s2, s1);
sc_subspace :
lgcl := UNKNOWN;
sc_member :
lgcl := compatible_spaces(s1, s2);
END_CASE;
END;
END_CASE;
IF lgcl = FALSE THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
END_IF;
RETURN (TRUE);
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="composable_sequence">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="operands">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="2"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
REPEAT i := 1 TO SIZEOF(operands) - 1;
IF NOT compatible_spaces(operands[i].range, operands[i + 1].domain) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="constraints_param_b_spline">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="degree">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="up_knots">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="up_cp">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="knot_mult">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="knots">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="parameter_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : BOOLEAN := TRUE;
k : INTEGER;
sum : INTEGER;
END_LOCAL;
sum := knot_mult[1];
REPEAT i := 2 TO up_knots;
sum := sum + knot_mult[i];
END_REPEAT;
IF (degree &lt; 1) OR (up_knots &lt; 2) OR (up_cp &lt; degree) OR (sum &lt;&gt; degree +
up_cp + 2) THEN
result := FALSE;
RETURN (result);
END_IF;
k := knot_mult[1];
IF (k &lt; 1) OR (k &gt; degree + 1) THEN
result := FALSE;
RETURN (result);
END_IF;
REPEAT i := 2 TO up_knots;
IF (knot_mult[i] &lt; 1) OR (knots[i] &lt;= knots[i - 1]) THEN
result := FALSE;
RETURN (result);
END_IF;
k := knot_mult[i];
IF (i &lt; up_knots) AND (k &gt; degree) THEN
result := FALSE;
RETURN (result);
END_IF;
IF (i = up_knots) AND (k &gt; degree + 1) THEN
result := FALSE;
RETURN (result);
END_IF;
END_REPEAT;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_atom"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_literal"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(val);
END_LOCAL;
IF 'INTEGER' IN types THEN
RETURN (make_int_literal(val));
END_IF;
IF 'REAL' IN types THEN
RETURN (make_real_literal(val));
END_IF;
IF 'BOOLEAN' IN types THEN
RETURN (make_boolean_literal(val));
END_IF;
IF 'STRING' IN types THEN
RETURN (make_string_literal(val));
END_IF;
IF 'LOGICAL' IN types THEN
RETURN (make_logical_literal(val));
END_IF;
IF 'BINARY' IN types THEN
RETURN (make_binary_literal(val));
END_IF;
IF schema_prefix + 'MATHS_ENUM_ATOM' IN types THEN
RETURN (make_maths_enum_literal(val));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_maths_function">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_function"/>
                                                                                                                                                                                        <algorithm>
LOCAL
efenum : elementary_function_enumerators;
mthfun : maths_function;
END_LOCAL;
IF schema_prefix + 'MATHS_FUNCTION' IN TYPEOF(func) THEN
mthfun := func;
ELSE
efenum := func;
mthfun := make_elementary_function(efenum);
END_IF;
RETURN (mthfun);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_maths_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(val);
ival : maths_integer;
rval : maths_real;
nval : maths_number;
tfval : maths_boolean;
lval : maths_logical;
sval : maths_string;
bval : maths_binary;
tval : maths_tuple := the_empty_maths_tuple;
mval : maths_value;
END_LOCAL;
IF schema_prefix + 'MATHS_VALUE' IN types THEN
RETURN (val);
END_IF;
IF 'INTEGER' IN types THEN
ival := val;
RETURN (ival);
END_IF;
IF 'REAL' IN types THEN
rval := val;
RETURN (rval);
END_IF;
IF 'NUMBER' IN types THEN
nval := val;
RETURN (nval);
END_IF;
IF 'BOOLEAN' IN types THEN
tfval := val;
RETURN (tfval);
END_IF;
IF 'LOGICAL' IN types THEN
lval := val;
RETURN (lval);
END_IF;
IF 'STRING' IN types THEN
sval := val;
RETURN (sval);
END_IF;
IF 'BINARY' IN types THEN
bval := val;
RETURN (bval);
END_IF;
IF 'LIST' IN types THEN
REPEAT i := 1 TO SIZEOF(val);
mval := convert_to_maths_value(val[i]);
IF NOT EXISTS(mval) THEN
RETURN (?);
END_IF;
INSERT(tval, mval, i - 1);
END_REPEAT;
RETURN (tval);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_operand">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(val);
END_LOCAL;
IF 'GENERIC_EXPRESSION' IN types THEN
RETURN (val);
END_IF;
IF 'MATHS_ATOM' IN types THEN
RETURN (convert_to_literal(val));
END_IF;
IF 'ATOM_BASED_VALUE' IN types THEN
RETURN (make_atom_based_literal(val));
END_IF;
IF 'MATHS_TUPLE' IN types THEN
RETURN (make_maths_tuple_literal(val));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_operands">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="values">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="AGGREGATE"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
LOCAL
operands : LIST OF generic_expression := [];
loc : INTEGER := 0;
END_LOCAL;
IF NOT EXISTS(values) THEN
RETURN (?);
END_IF;
REPEAT i := LOINDEX(values) TO HIINDEX(values);
INSERT(operands, convert_to_operand(values[i]), loc);
loc := loc + 1;
END_REPEAT;
RETURN (operands);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="convert_to_operands_prcmfn">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="srcdom">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space_or_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="prepfun">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="finfun">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"
                                                                                                                                                                                          lower="2"
                                                                                                                                                                                          upper="?"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
LOCAL
operands : LIST OF generic_expression := [];
END_LOCAL;
INSERT(operands, srcdom, 0);
REPEAT i := 1 TO SIZEOF(prepfun);
INSERT(operands, prepfun[i], i);
END_REPEAT;
INSERT(operands, convert_to_maths_function(finfun), SIZEOF(prepfun) + 1);
RETURN (operands);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="curve_weights_positive">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="b">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="rational_b_spline_curve"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 0 TO b.upper_index_on_control_points;
IF b.weights[i] &lt;= 0.0 THEN
result := FALSE;
RETURN (result);
END_IF;
END_REPEAT;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="definite_integral_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="domain">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="vrblint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="input_selector"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lowerinf">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="upperinf">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
domn : tuple_space := domain;
fspc : maths_space;
dim : nonnegative_integer;
k : positive_integer;
END_LOCAL;
IF (space_dimension(domain) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF
(factor1(domain))) THEN
domn := factor1(domain);
END_IF;
dim := space_dimension(domn);
k := vrblint;
IF k &gt; dim THEN
RETURN (FALSE);
END_IF;
fspc := factor_space(domn, k);
IF NOT (schema_prefix + 'REAL_INTERVAL' IN TYPEOF(fspc)) THEN
RETURN (FALSE);
END_IF;
IF lowerinf AND min_exists(fspc) THEN
RETURN (FALSE);
END_IF;
IF upperinf AND max_exists(fspc) THEN
RETURN (FALSE);
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="definite_integral_expr_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="operands">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="2"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lowerinf">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="upperinf">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
nops : INTEGER := 2;
vspc : maths_space;
dim : nonnegative_integer;
k : positive_integer;
bspc : maths_space;
END_LOCAL;
IF NOT lowerinf THEN
nops := nops + 1;
END_IF;
IF NOT upperinf THEN
nops := nops + 1;
END_IF;
IF SIZEOF(operands) &lt;&gt; nops THEN
RETURN (FALSE);
END_IF;
IF NOT ('GENERIC_VARIABLE' IN stripped_typeof(operands[2])) THEN
RETURN (FALSE);
END_IF;
IF NOT has_values_space(operands[2]) THEN
RETURN (FALSE);
END_IF;
vspc := values_space_of(operands[2]);
IF NOT ('REAL_INTERVAL' IN stripped_typeof(vspc)) THEN
RETURN (FALSE);
END_IF;
IF lowerinf THEN
IF min_exists(vspc) THEN
RETURN (FALSE);
END_IF;
k := 3;
ELSE
IF NOT has_values_space(operands[3]) THEN
RETURN (FALSE);
END_IF;
bspc := values_space_of(operands[3]);
IF NOT compatible_spaces(bspc, vspc) THEN
RETURN (FALSE);
END_IF;
k := 4;
END_IF;
IF upperinf THEN
IF max_exists(vspc) THEN
RETURN (FALSE);
END_IF;
ELSE
IF NOT has_values_space(operands[k]) THEN
RETURN (FALSE);
END_IF;
bspc := values_space_of(operands[k]);
IF NOT compatible_spaces(bspc, vspc) THEN
RETURN (FALSE);
END_IF;
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="dependently_instantiated">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_of_input_instances">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_of_input_types">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="STRING"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="previous_in_chain">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
number_of_input_instances : INTEGER;
number_of_referring_instances : INTEGER;
bag_of_referring_instances : BAG OF GENERIC := [];
dependently_instantiated_flag : BOOLEAN;
previous_in_chain_plus : LIST OF GENERIC := [];
recursion : BOOLEAN;
result : BOOLEAN := TRUE;
set_of_types : SET OF STRING := [];
END_LOCAL;
IF EXISTS(set_of_input_instances) THEN
number_of_input_instances := SIZEOF(set_of_input_instances);
set_of_input_types := set_of_input_types + 'GENERIC';
REPEAT i := 1 TO number_of_input_instances;
bag_of_referring_instances := USEDIN(set_of_input_instances[i], '');
IF EXISTS(bag_of_referring_instances) THEN
number_of_referring_instances := SIZEOF(bag_of_referring_instances);
dependently_instantiated_flag := FALSE;
REPEAT j := 1 TO number_of_referring_instances;
set_of_types := TYPEOF(bag_of_referring_instances[j]);
IF set_of_types &lt;= set_of_input_types THEN
IF EXISTS(previous_in_chain) THEN
recursion := TRUE;
REPEAT k := 1 TO SIZEOF(previous_in_chain);
IF previous_in_chain[k] :=: bag_of_referring_instances[j] THEN
recursion := FALSE;
ESCAPE;
END_IF;
END_REPEAT;
END_IF;
IF recursion THEN
previous_in_chain_plus := previous_in_chain +
set_of_input_instances[i];
IF dependently_instantiated([bag_of_referring_instances[j]],
set_of_input_types, previous_in_chain_plus) THEN
dependently_instantiated_flag := TRUE;
ESCAPE;
ELSE
SKIP;
END_IF;
END_IF;
ELSE
dependently_instantiated_flag := TRUE;
ESCAPE;
END_IF;
END_REPEAT;
IF NOT dependently_instantiated_flag THEN
RETURN (FALSE);
END_IF;
ELSE
RETURN (FALSE);
END_IF;
END_REPEAT;
ELSE
RETURN (FALSE);
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_definite_integral_domain">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="igrl">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="definite_integral_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
FUNCTION process_product_space(spc : product_space; idx : INTEGER; prefix :
INTEGER; vdomn : maths_space) : product_space;
LOCAL
uspc : uniform_product_space;
expnt : INTEGER;
factors : LIST OF maths_space;
END_LOCAL;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN TYPEOF(spc) THEN
uspc := spc;
expnt := uspc.exponent + prefix;
IF idx &lt;= uspc.exponent THEN
expnt := expnt - 1;
END_IF;
IF expnt = 0 THEN
RETURN (make_listed_product_space([]));
ELSE
RETURN (make_uniform_product_space(uspc.base, expnt));
END_IF;
ELSE
factors := spc\listed_product_space.factors;
IF idx &lt;= SIZEOF(factors) THEN
REMOVE(factors, idx);
END_IF;
IF prefix &gt; 0 THEN
INSERT(factors, vdomn, 0);
IF prefix &gt; 1 THEN
INSERT(factors, vdomn, 0);
END_IF;
END_IF;
RETURN (make_listed_product_space(factors));
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_dimensional_exponents">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="x">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="unit"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="dimensional_exponents"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0,
0.0, 0.0, 0.0);
END_LOCAL;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DERIVED_UNIT' IN
TYPEOF(x) THEN
REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
result.length_exponent := result.length_exponent + x.elements[i].exponent
* x.elements[i].unit.dimensions.length_exponent;
result.mass_exponent := result.mass_exponent + x.elements[i].exponent * x
.elements[i].unit.dimensions.mass_exponent;
result.time_exponent := result.time_exponent + x.elements[i].exponent * x
.elements[i].unit.dimensions.time_exponent;
result.electric_current_exponent := result.electric_current_exponent + x.
elements[i].exponent * x.elements[i].unit.dimensions.
electric_current_exponent;
result.thermodynamic_temperature_exponent := result.
thermodynamic_temperature_exponent + x.elements[i].exponent * x.elements[
i].unit.dimensions.thermodynamic_temperature_exponent;
result.amount_of_substance_exponent := result.
amount_of_substance_exponent + x.elements[i].exponent * x.elements[i].
unit.dimensions.amount_of_substance_exponent;
result.luminous_intensity_exponent := result.luminous_intensity_exponent
+ x.elements[i].exponent * x.elements[i].unit.dimensions.
luminous_intensity_exponent;
END_REPEAT;
ELSE
result := x.dimensions;
END_IF;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_elementary_function_domain">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ef_val">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_function_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
IF NOT EXISTS(ef_val) THEN
RETURN (?);
END_IF;
CASE ef_val OF
ef_and :
RETURN (make_extended_tuple_space(the_zero_tuple_space, the_logicals));
ef_or :
RETURN (make_extended_tuple_space(the_zero_tuple_space, the_logicals));
ef_not :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_xor :
RETURN (make_uniform_product_space(the_logicals, 2));
ef_negate_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_add_i :
RETURN (the_integer_tuples);
ef_subtract_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_multiply_i :
RETURN (the_integer_tuples);
ef_divide_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_mod_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_exponentiate_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_eq_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_ne_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_gt_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_lt_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_ge_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_le_i :
RETURN (make_uniform_product_space(the_integers, 2));
ef_abs_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_if_i :
RETURN (make_listed_product_space([the_logicals, the_integers, the_integers
]));
ef_negate_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_reciprocal_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_add_r :
RETURN (the_real_tuples);
ef_subtract_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_multiply_r :
RETURN (the_real_tuples);
ef_divide_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_mod_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_exponentiate_r :
RETURN (make_listed_product_space([the_nonnegative_reals, the_reals]));
ef_exponentiate_ri :
RETURN (make_listed_product_space([the_reals, the_integers]));
ef_eq_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_ne_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_gt_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_lt_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_ge_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_le_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_abs_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_acos_r :
RETURN (make_uniform_product_space(the_neg1_one_interval, 1));
ef_asin_r :
RETURN (make_uniform_product_space(the_neg1_one_interval, 1));
ef_atan2_r :
RETURN (make_uniform_product_space(the_reals, 2));
ef_cos_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_exp_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_ln_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_log2_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_log10_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_sin_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_sqrt_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_tan_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_if_r :
RETURN (make_listed_product_space([the_logicals, the_reals, the_reals]));
ef_negate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_reciprocal_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_add_c :
RETURN (the_complex_tuples);
ef_subtract_c :
RETURN (make_uniform_product_space(the_complex_numbers, 2));
ef_multiply_c :
RETURN (the_complex_tuples);
ef_divide_c :
RETURN (make_uniform_product_space(the_complex_numbers, 2));
ef_exponentiate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 2));
ef_exponentiate_ci :
RETURN (make_listed_product_space([the_complex_numbers, the_integers]));
ef_eq_c :
RETURN (make_uniform_product_space(the_complex_numbers, 2));
ef_ne_c :
RETURN (make_uniform_product_space(the_complex_numbers, 2));
ef_conjugate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_abs_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_arg_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_cos_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_exp_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_ln_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_sin_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_sqrt_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_tan_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_if_c :
RETURN (make_listed_product_space([the_logicals, the_complex_numbers,
the_complex_numbers]));
ef_subscript_s :
RETURN (make_listed_product_space([the_strings, the_integers]));
ef_eq_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_ne_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_gt_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_lt_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_ge_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_le_s :
RETURN (make_uniform_product_space(the_strings, 2));
ef_subsequence_s :
RETURN (make_listed_product_space([the_strings, the_integers, the_integers]
));
ef_concat_s :
RETURN (make_extended_tuple_space(the_zero_tuple_space, the_strings));
ef_size_s :
RETURN (make_uniform_product_space(the_strings, 1));
ef_format :
RETURN (make_listed_product_space([the_numbers, the_strings]));
ef_value :
RETURN (make_uniform_product_space(the_strings, 1));
ef_like :
RETURN (make_uniform_product_space(the_strings, 2));
ef_if_s :
RETURN (make_listed_product_space([the_logicals, the_strings, the_strings])
);
ef_subscript_b :
RETURN (make_listed_product_space([the_binarys, the_integers]));
ef_eq_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_ne_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_gt_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_lt_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_ge_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_le_b :
RETURN (make_uniform_product_space(the_binarys, 2));
ef_subsequence_b :
RETURN (make_listed_product_space([the_binarys, the_integers, the_integers]
));
ef_concat_b :
RETURN (make_extended_tuple_space(the_zero_tuple_space, the_binarys));
ef_size_b :
RETURN (make_uniform_product_space(the_binarys, 1));
ef_if_b :
RETURN (make_listed_product_space([the_logicals, the_binarys, the_binarys])
);
ef_subscript_t :
RETURN (make_listed_product_space([the_tuples, the_integers]));
ef_eq_t :
RETURN (make_uniform_product_space(the_tuples, 2));
ef_ne_t :
RETURN (make_uniform_product_space(the_tuples, 2));
ef_concat_t :
RETURN (make_extended_tuple_space(the_zero_tuple_space, the_tuples));
ef_size_t :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_entuple :
RETURN (the_tuples);
ef_detuple :
RETURN (make_uniform_product_space(the_generics, 1));
ef_insert :
RETURN (make_listed_product_space([the_tuples, the_generics, the_integers])
);
ef_remove :
RETURN (make_listed_product_space([the_tuples, the_integers]));
ef_if_t :
RETURN (make_listed_product_space([the_logicals, the_tuples, the_tuples]));
ef_sum_it :
RETURN (make_uniform_product_space(the_integer_tuples, 1));
ef_product_it :
RETURN (make_uniform_product_space(the_integer_tuples, 1));
ef_add_it :
RETURN (make_extended_tuple_space(the_integer_tuples, the_integer_tuples));
ef_subtract_it :
RETURN (make_uniform_product_space(the_integer_tuples, 2));
ef_scalar_mult_it :
RETURN (make_listed_product_space([the_integers, the_integer_tuples]));
ef_dot_prod_it :
RETURN (make_uniform_product_space(the_integer_tuples, 2));
ef_sum_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_product_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_add_rt :
RETURN (make_extended_tuple_space(the_real_tuples, the_real_tuples));
ef_subtract_rt :
RETURN (make_uniform_product_space(the_real_tuples, 2));
ef_scalar_mult_rt :
RETURN (make_listed_product_space([the_reals, the_real_tuples]));
ef_dot_prod_rt :
RETURN (make_uniform_product_space(the_real_tuples, 2));
ef_norm_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_sum_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_product_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_add_ct :
RETURN (make_extended_tuple_space(the_complex_tuples, the_complex_tuples));
ef_subtract_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 2));
ef_scalar_mult_ct :
RETURN (make_listed_product_space([the_complex_numbers, the_complex_tuples]
));
ef_dot_prod_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 2));
ef_norm_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_if :
RETURN (make_listed_product_space([the_logicals, the_generics, the_generics
]));
ef_ensemble :
RETURN (the_tuples);
ef_member_of :
RETURN (make_listed_product_space([the_generics, the_maths_spaces]));
OTHERWISE : RETURN (?);
END_CASE;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_elementary_function_range">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ef_val">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_function_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
IF NOT EXISTS(ef_val) THEN
RETURN (?);
END_IF;
CASE ef_val OF
ef_and :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_or :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_not :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_xor :
RETURN (make_uniform_product_space(the_logicals, 2));
ef_negate_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_add_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_subtract_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_multiply_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_divide_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_mod_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_exponentiate_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_eq_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_gt_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_lt_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ge_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_le_i :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_abs_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_if_i :
RETURN (make_uniform_product_space(the_integers, 1));
ef_negate_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_reciprocal_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_add_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_subtract_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_multiply_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_divide_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_mod_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_exponentiate_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_exponentiate_ri :
RETURN (make_uniform_product_space(the_reals, 1));
ef_eq_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_gt_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_lt_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ge_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_le_r :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_abs_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_acos_r :
RETURN (make_uniform_product_space(the_zero_pi_interval, 1));
ef_asin_r :
RETURN (make_uniform_product_space(the_neghalfpi_halfpi_interval, 1));
ef_atan2_r :
RETURN (make_uniform_product_space(the_negpi_pi_interval, 1));
ef_cos_r :
RETURN (make_uniform_product_space(the_neg1_one_interval, 1));
ef_exp_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_ln_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_log2_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_log10_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_sin_r :
RETURN (make_uniform_product_space(the_neg1_one_interval, 1));
ef_sqrt_r :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_tan_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_if_r :
RETURN (make_uniform_product_space(the_reals, 1));
ef_negate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_reciprocal_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_add_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_subtract_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_multiply_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_divide_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_exponentiate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_exponentiate_ci :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_eq_c :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_c :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_conjugate_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_abs_c :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_arg_c :
RETURN (make_uniform_product_space(the_negpi_pi_interval, 1));
ef_cos_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_exp_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_ln_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_sin_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_sqrt_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_tan_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_if_c :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_subscript_s :
RETURN (make_uniform_product_space(the_strings, 1));
ef_eq_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_gt_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_lt_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ge_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_le_s :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_subsequence_s :
RETURN (make_uniform_product_space(the_strings, 1));
ef_concat_s :
RETURN (make_uniform_product_space(the_strings, 1));
ef_size_s :
RETURN (make_uniform_product_space(the_integers, 1));
ef_format :
RETURN (make_uniform_product_space(the_strings, 1));
ef_value :
RETURN (make_uniform_product_space(the_reals, 1));
ef_like :
RETURN (make_uniform_product_space(the_booleans, 1));
ef_if_s :
RETURN (make_uniform_product_space(the_strings, 1));
ef_subscript_b :
RETURN (make_uniform_product_space(the_binarys, 1));
ef_eq_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_gt_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_lt_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ge_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_le_b :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_subsequence_b :
RETURN (make_uniform_product_space(the_binarys, 1));
ef_concat_b :
RETURN (make_uniform_product_space(the_binarys, 1));
ef_size_b :
RETURN (make_uniform_product_space(the_integers, 1));
ef_if_b :
RETURN (make_uniform_product_space(the_binarys, 1));
ef_subscript_t :
RETURN (make_uniform_product_space(the_generics, 1));
ef_eq_t :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_ne_t :
RETURN (make_uniform_product_space(the_logicals, 1));
ef_concat_t :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_size_t :
RETURN (make_uniform_product_space(the_integers, 1));
ef_entuple :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_detuple :
RETURN (the_tuples);
ef_insert :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_remove :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_if_t :
RETURN (make_uniform_product_space(the_tuples, 1));
ef_sum_it :
RETURN (make_uniform_product_space(the_integers, 1));
ef_product_it :
RETURN (make_uniform_product_space(the_integers, 1));
ef_add_it :
RETURN (make_uniform_product_space(the_integer_tuples, 1));
ef_subtract_it :
RETURN (make_uniform_product_space(the_integer_tuples, 1));
ef_scalar_mult_it :
RETURN (make_uniform_product_space(the_integer_tuples, 1));
ef_dot_prod_it :
RETURN (make_uniform_product_space(the_integers, 1));
ef_sum_rt :
RETURN (make_uniform_product_space(the_reals, 1));
ef_product_rt :
RETURN (make_uniform_product_space(the_reals, 1));
ef_add_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_subtract_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_scalar_mult_rt :
RETURN (make_uniform_product_space(the_real_tuples, 1));
ef_dot_prod_rt :
RETURN (make_uniform_product_space(the_reals, 1));
ef_norm_rt :
RETURN (make_uniform_product_space(the_reals, 1));
ef_sum_ct :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_product_ct :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_add_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_subtract_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_scalar_mult_ct :
RETURN (make_uniform_product_space(the_complex_tuples, 1));
ef_dot_prod_ct :
RETURN (make_uniform_product_space(the_complex_numbers, 1));
ef_norm_ct :
RETURN (make_uniform_product_space(the_nonnegative_reals, 1));
ef_if :
RETURN (make_uniform_product_space(the_generics, 1));
ef_ensemble :
RETURN (make_uniform_product_space(the_maths_spaces, 1));
ef_member_of :
RETURN (make_uniform_product_space(the_logicals, 1));
OTHERWISE : RETURN (?);
END_CASE;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_finite_function_domain">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="pairs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="LIST"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : SET OF maths_value := [];
END_LOCAL;
result := result + list_selected_components(pairs, 1);
RETURN (one_tuples_of(make_finite_space(result)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_finite_function_range">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="pairs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="LIST"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : SET OF maths_value := [];
END_LOCAL;
result := result + list_selected_components(pairs, 2);
RETURN (one_tuples_of(make_finite_space(result)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_function_domain">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(func);
tspace : tuple_space := make_listed_product_space([]);
shape : LIST OF positive_integer;
sidxs : LIST OF INTEGER := [0];
itvl : finite_integer_interval;
factors : LIST OF finite_integer_interval := [];
is_uniform : BOOLEAN := TRUE;
END_LOCAL;
IF 'FINITE_FUNCTION' IN typenames THEN
RETURN (derive_finite_function_domain(func\finite_function.pairs));
END_IF;
IF 'CONSTANT_FUNCTION' IN typenames THEN
RETURN (domain_from(func\constant_function.source_of_domain));
END_IF;
IF 'SELECTOR_FUNCTION' IN typenames THEN
RETURN (domain_from(func\selector_function.source_of_domain));
END_IF;
IF 'ELEMENTARY_FUNCTION' IN typenames THEN
RETURN (derive_elementary_function_domain(func\elementary_function.func_id)
);
END_IF;
IF 'RESTRICTION_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(func\restriction_function.operand));
END_IF;
IF 'REPACKAGING_FUNCTION' IN typenames THEN
IF func\repackaging_function.input_repack = ro_nochange THEN
RETURN (func\repackaging_function.operand.domain);
END_IF;
IF func\repackaging_function.input_repack = ro_wrap_as_tuple THEN
RETURN (factor1(func\repackaging_function.operand.domain));
END_IF;
IF func\repackaging_function.input_repack = ro_unwrap_tuple THEN
RETURN (one_tuples_of(func\repackaging_function.operand.domain));
END_IF;
RETURN (?);
END_IF;
IF 'REINDEXED_ARRAY_FUNCTION' IN typenames THEN
shape := shape_of_array(func\unary_generic_expression.operand);
sidxs := func\reindexed_array_function.starting_indices;
REPEAT i := 1 TO SIZEOF(shape);
itvl := make_finite_integer_interval(sidxs[i], sidxs[i] + shape[i] - 1);
INSERT(factors, itvl, i - 1);
IF shape[i] &lt;&gt; shape[1] THEN
is_uniform := FALSE;
END_IF;
END_REPEAT;
IF is_uniform THEN
RETURN (make_uniform_product_space(factors[1], SIZEOF(shape)));
END_IF;
RETURN (make_listed_product_space(factors));
END_IF;
IF 'SERIES_COMPOSED_FUNCTION' IN typenames THEN
RETURN (func\series_composed_function.operands[1].domain);
END_IF;
IF 'PARALLEL_COMPOSED_FUNCTION' IN typenames THEN
RETURN (domain_from(func\parallel_composed_function.source_of_domain));
END_IF;
IF 'EXPLICIT_TABLE_FUNCTION' IN typenames THEN
shape := func\explicit_table_function.shape;
sidxs[1] := func\explicit_table_function.index_base;
REPEAT i := 1 TO SIZEOF(shape);
itvl := make_finite_integer_interval(sidxs[1], sidxs[1] + shape[i] - 1);
INSERT(factors, itvl, i - 1);
IF shape[i] &lt;&gt; shape[1] THEN
is_uniform := FALSE;
END_IF;
END_REPEAT;
IF is_uniform THEN
RETURN (make_uniform_product_space(factors[1], SIZEOF(shape)));
END_IF;
RETURN (make_listed_product_space(factors));
END_IF;
IF 'HOMOGENEOUS_LINEAR_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(factor1(func\
homogeneous_linear_function.mat.range), func\homogeneous_linear_function.
mat\explicit_table_function.shape[func\homogeneous_linear_function.
sum_index])));
END_IF;
IF 'GENERAL_LINEAR_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(factor1(func\
general_linear_function.mat.range), func\general_linear_function.mat\
explicit_table_function.shape[func\general_linear_function.sum_index] - 1))
);
END_IF;
IF 'B_SPLINE_BASIS' IN typenames THEN
RETURN (one_tuples_of(make_finite_real_interval(func\b_spline_basis.
repeated_knots[func\b_spline_basis.order], closed, func\b_spline_basis.
repeated_knots[func\b_spline_basis.num_basis + 1], closed)));
END_IF;
IF 'B_SPLINE_FUNCTION' IN typenames THEN
REPEAT i := 1 TO SIZEOF(func\b_spline_function.basis);
tspace := assoc_product_space(tspace, func\b_spline_function.basis[i].
domain);
END_REPEAT;
RETURN (one_tuples_of(tspace));
END_IF;
IF 'RATIONALIZE_FUNCTION' IN typenames THEN
RETURN (func\rationalize_function.fun.domain);
END_IF;
IF 'PARTIAL_DERIVATIVE_FUNCTION' IN typenames THEN
RETURN (func\partial_derivative_function.derivand.domain);
END_IF;
IF 'DEFINITE_INTEGRAL_FUNCTION' IN typenames THEN
RETURN (derive_definite_integral_domain(func));
END_IF;
IF 'ABSTRACTED_EXPRESSION_FUNCTION' IN typenames THEN
REPEAT i := 1 TO SIZEOF(func\abstracted_expression_function.variables);
tspace := assoc_product_space(tspace, one_tuples_of(values_space_of(func\
abstracted_expression_function.variables[i])));
END_REPEAT;
RETURN (tspace);
END_IF;
IF 'EXPRESSION_DENOTED_FUNCTION' IN typenames THEN
RETURN (values_space_of(func\expression_denoted_function.expr)\
function_space.domain_argument);
END_IF;
IF 'IMPORTED_POINT_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_listed_product_space([])));
END_IF;
IF 'IMPORTED_CURVE_FUNCTION' IN typenames THEN
RETURN (func\imported_curve_function.parametric_domain);
END_IF;
IF 'IMPORTED_SURFACE_FUNCTION' IN typenames THEN
RETURN (func\imported_surface_function.parametric_domain);
END_IF;
IF 'IMPORTED_VOLUME_FUNCTION' IN typenames THEN
RETURN (func\imported_volume_function.parametric_domain);
END_IF;
IF 'APPLICATION_DEFINED_FUNCTION' IN typenames THEN
RETURN (func\application_defined_function.explicit_domain);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="derive_function_range">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(func);
tspace : tuple_space := make_listed_product_space([]);
m : nonnegative_integer := 0;
n : nonnegative_integer := 0;
END_LOCAL;
IF 'FINITE_FUNCTION' IN typenames THEN
RETURN (derive_finite_function_range(func\finite_function.pairs));
END_IF;
IF 'CONSTANT_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_finite_space([func\constant_function.sole_output
])));
END_IF;
IF 'SELECTOR_FUNCTION' IN typenames THEN
tspace := func.domain;
IF (space_dimension(tspace) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN
TYPEOF(tspace)) THEN
tspace := factor1(tspace);
END_IF;
RETURN (one_tuples_of(factor_space(tspace, func\selector_function.selector)
));
END_IF;
IF 'ELEMENTARY_FUNCTION' IN typenames THEN
RETURN (derive_elementary_function_range(func\elementary_function.func_id))
;
END_IF;
IF 'RESTRICTION_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(func\restriction_function.operand));
END_IF;
IF 'REPACKAGING_FUNCTION' IN typenames THEN
tspace := func\repackaging_function.operand.range;
IF func\repackaging_function.output_repack = ro_wrap_as_tuple THEN
tspace := one_tuples_of(tspace);
END_IF;
IF func\repackaging_function.output_repack = ro_unwrap_tuple THEN
tspace := factor1(tspace);
END_IF;
IF func\repackaging_function.selected_output &gt; 0 THEN
tspace := one_tuples_of(factor_space(tspace, func\repackaging_function.
selected_output));
END_IF;
RETURN (tspace);
END_IF;
IF 'REINDEXED_ARRAY_FUNCTION' IN typenames THEN
RETURN (func\unary_generic_expression.operand\maths_function.range);
END_IF;
IF 'SERIES_COMPOSED_FUNCTION' IN typenames THEN
RETURN (func\series_composed_function.operands[SIZEOF(func\
series_composed_function.operands)].range);
END_IF;
IF 'PARALLEL_COMPOSED_FUNCTION' IN typenames THEN
RETURN (func\parallel_composed_function.final_function.range);
END_IF;
IF 'EXPLICIT_TABLE_FUNCTION' IN typenames THEN
IF 'LISTED_REAL_DATA' IN typenames THEN
RETURN (one_tuples_of(the_reals));
END_IF;
IF 'LISTED_INTEGER_DATA' IN typenames THEN
RETURN (one_tuples_of(the_integers));
END_IF;
IF 'LISTED_LOGICAL_DATA' IN typenames THEN
RETURN (one_tuples_of(the_logicals));
END_IF;
IF 'LISTED_STRING_DATA' IN typenames THEN
RETURN (one_tuples_of(the_strings));
END_IF;
IF 'LISTED_COMPLEX_NUMBER_DATA' IN typenames THEN
RETURN (one_tuples_of(the_complex_numbers));
END_IF;
IF 'LISTED_DATA' IN typenames THEN
RETURN (one_tuples_of(func\listed_data.value_range));
END_IF;
IF 'EXTERNALLY_LISTED_DATA' IN typenames THEN
RETURN (one_tuples_of(func\externally_listed_data.value_range));
END_IF;
IF 'LINEARIZED_TABLE_FUNCTION' IN typenames THEN
RETURN (func\linearized_table_function.source.range);
END_IF;
IF 'BASIC_SPARSE_MATRIX' IN typenames THEN
RETURN (func\basic_sparse_matrix.val.range);
END_IF;
RETURN (?);
END_IF;
IF 'HOMOGENEOUS_LINEAR_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(factor1(func\
homogeneous_linear_function.mat.range), func\homogeneous_linear_function.
mat\explicit_table_function.shape[3 - func\homogeneous_linear_function.
sum_index])));
END_IF;
IF 'GENERAL_LINEAR_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(factor1(func\
general_linear_function.mat.range), func\general_linear_function.mat\
explicit_table_function.shape[3 - func\general_linear_function.sum_index]))
);
END_IF;
IF 'B_SPLINE_BASIS' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, func\
b_spline_basis.num_basis)));
END_IF;
IF 'B_SPLINE_FUNCTION' IN typenames THEN
tspace := factor1(func\b_spline_function.coef.domain);
m := SIZEOF(func\b_spline_function.basis);
n := space_dimension(tspace);
IF m = n THEN
RETURN (one_tuples_of(the_reals));
END_IF;
IF m = n - 1 THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, factor_space(
tspace, n)\finite_integer_interval.size)));
END_IF;
tspace := extract_factors(tspace, m + 1, n);
RETURN (one_tuples_of(make_function_space(sc_equal, tspace, sc_subspace,
number_superspace_of(func\b_spline_function.coef.range))));
END_IF;
IF 'RATIONALIZE_FUNCTION' IN typenames THEN
tspace := factor1(func\rationalize_function.fun.range);
n := space_dimension(tspace);
RETURN (one_tuples_of(make_uniform_product_space(number_superspace_of(
factor1(tspace)), n - 1)));
END_IF;
IF 'PARTIAL_DERIVATIVE_FUNCTION' IN typenames THEN
RETURN (drop_numeric_constraints(func\partial_derivative_function.derivand.
range));
END_IF;
IF 'DEFINITE_INTEGRAL_FUNCTION' IN typenames THEN
RETURN (drop_numeric_constraints(func\definite_integral_function.integrand.
range));
END_IF;
IF 'ABSTRACTED_EXPRESSION_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(values_space_of(func\abstracted_expression_function.
expr)));
END_IF;
IF 'EXPRESSION_DENOTED_FUNCTION' IN typenames THEN
RETURN (values_space_of(func\expression_denoted_function.expr)\
function_space.range_argument);
END_IF;
IF 'IMPORTED_POINT_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, dimension_of(
func\imported_point_function.geometry))));
END_IF;
IF 'IMPORTED_CURVE_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, dimension_of(
func\imported_curve_function.geometry))));
END_IF;
IF 'IMPORTED_SURFACE_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, dimension_of(
func\imported_surface_function.geometry))));
END_IF;
IF 'IMPORTED_VOLUME_FUNCTION' IN typenames THEN
RETURN (one_tuples_of(make_uniform_product_space(the_reals, dimension_of(
func\imported_volume_function.geometry))));
END_IF;
IF 'APPLICATION_DEFINED_FUNCTION' IN typenames THEN
RETURN (func\application_defined_function.explicit_range);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="dimension_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="item">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="geometric_representation_item"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="dimension_count"/>
                                                                                                                                                                                        <algorithm>
LOCAL
x : SET OF representation;
y : representation_context;
dim : dimension_count;
END_LOCAL;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CARTESIAN_POINT' IN
TYPEOF(item) THEN
dim := SIZEOF(item\cartesian_point.coordinates);
RETURN (dim);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DIRECTION' IN TYPEOF(
item) THEN
dim := SIZEOF(item\direction.direction_ratios);
RETURN (dim);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VECTOR' IN TYPEOF(
item) THEN
dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
RETURN (dim);
END_IF;
x := using_representations(item);
y := x[1].context_of_items;
dim := y\geometric_representation_context.coordinate_space_dimension;
RETURN (dim);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="dimensions_for_si_unit">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="n">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="si_unit_name"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="dimensional_exponents"/>
                                                                                                                                                                                        <algorithm>
CASE n OF
metre :
RETURN (dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
gram :
RETURN (dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
second :
RETURN (dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
ampere :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
kelvin :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
mole :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
candela :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
radian :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
steradian :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
hertz :
RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
newton :
RETURN (dimensional_exponents(1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
pascal :
RETURN (dimensional_exponents(-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
joule :
RETURN (dimensional_exponents(2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
watt :
RETURN (dimensional_exponents(2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
coulomb :
RETURN (dimensional_exponents(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
volt :
RETURN (dimensional_exponents(2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
farad :
RETURN (dimensional_exponents(-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
ohm :
RETURN (dimensional_exponents(2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
siemens :
RETURN (dimensional_exponents(-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
weber :
RETURN (dimensional_exponents(2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
tesla :
RETURN (dimensional_exponents(0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
henry :
RETURN (dimensional_exponents(2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
degree_celsius :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
lumen :
RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
lux :
RETURN (dimensional_exponents(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
becquerel :
RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
gray :
RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
sievert :
RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
OTHERWISE : RETURN (?);
END_CASE;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="domain_from">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ref">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space_or_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(ref);
func : maths_function;
END_LOCAL;
IF NOT EXISTS(ref) THEN
RETURN (?);
END_IF;
IF 'TUPLE_SPACE' IN typenames THEN
RETURN (ref);
END_IF;
IF 'MATHS_SPACE' IN typenames THEN
RETURN (one_tuples_of(ref));
END_IF;
func := ref;
IF 'CONSTANT_FUNCTION' IN typenames THEN
RETURN (domain_from(func\constant_function.source_of_domain));
END_IF;
IF 'SELECTOR_FUNCTION' IN typenames THEN
RETURN (domain_from(func\selector_function.source_of_domain));
END_IF;
IF 'PARALLEL_COMPOSED_FUNCTION' IN typenames THEN
RETURN (domain_from(func\parallel_composed_function.source_of_domain));
END_IF;
RETURN (func.domain);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="drop_numeric_constraints">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(spc);
tspc : listed_product_space;
factors : LIST OF maths_space := [];
xspc : extended_tuple_space;
END_LOCAL;
IF 'UNIFORM_PRODUCT_SPACE' IN typenames THEN
RETURN (make_uniform_product_space(drop_numeric_constraints(spc\
uniform_product_space.base), spc\uniform_product_space.exponent));
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN typenames THEN
tspc := spc;
REPEAT i := 1 TO SIZEOF(tspc.factors);
INSERT(factors, drop_numeric_constraints(tspc.factors[i]), i - 1);
END_REPEAT;
RETURN (make_listed_product_space(factors));
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN typenames THEN
xspc := spc;
RETURN (make_extended_tuple_space(drop_numeric_constraints(xspc.base),
drop_numeric_constraints(xspc.extender)));
END_IF;
IF subspace_of_es(spc, es_numbers) THEN
RETURN (number_superspace_of(spc));
END_IF;
RETURN (spc);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="enclose_cregion_in_pregion">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="crgn">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="cartesian_complex_number_region"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="centre">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="complex_number_literal"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="polar_complex_number_region"/>
                                                                                                                                                                                        <algorithm>
FUNCTION angle(a : REAL) : REAL;
REPEAT WHILE a &gt; PI;
a := a - 2.0 * PI;
END_REPEAT;
REPEAT WHILE a &lt;= -PI;
a := a + 2.0 * PI;
END_REPEAT;
RETURN (a);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="strictly_in">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="z">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="zitv">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
RETURN ((NOT min_exists(zitv) OR (z &gt; real_min(zitv))) AND (NOT max_exists(
zitv) OR (z &lt; real_max(zitv))));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="angle_minmax">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ab">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amin">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amax">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amin_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amax_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
a := angle(a - ab);
IF amin = a THEN
amin_in := amin_in OR a_in;
END_IF;
IF amin &gt; a THEN
amin := a;
amin_in := a_in;
END_IF;
IF amax = a THEN
amax_in := amax_in OR a_in;
END_IF;
IF amax &lt; a THEN
amax := a;
amax_in := a_in;
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="range_max">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="r">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="incl">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR rmax">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR rmax_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
IF rmax = r THEN
rmax_in := rmax_in OR incl;
END_IF;
IF rmax &lt; r THEN
rmax := r;
rmax_in := incl;
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="range_min">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="r">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="incl">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR rmin">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR rmin_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
IF rmin = r THEN
rmin_in := rmin_in OR incl;
END_IF;
IF (rmin &lt; 0.0) OR (rmin &gt; r) THEN
rmin := r;
rmin_in := incl;
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <function
                                                                                                                                                                                        name="enclose_pregion_in_cregion">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="prgn">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="polar_complex_number_region"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="cartesian_complex_number_region"/>
                                                                                                                                                                                        <algorithm>
PROCEDURE nearest_good_direction(acart : REAL; aitv : finite_real_interval;
VAR a : REAL; VAR a_in : BOOLEAN);
a := acart;
a_in := TRUE;
IF a &lt; aitv.min THEN
IF a + 2.0 * PI &lt; aitv.max THEN
RETURN;
END_IF;
IF a + 2.0 * PI = aitv.max THEN
a_in := max_included(aitv);
RETURN;
END_IF;
ELSE
IF a = aitv.min THEN
a_in := min_included(aitv);
RETURN;
ELSE
IF a &lt; aitv.max THEN
RETURN;
ELSE
IF a = aitv.max THEN
a_in := max_included(aitv);
RETURN;
END_IF;
END_IF;
END_IF;
END_IF;
IF COS(acart - aitv.max) &gt;= COS(acart - aitv.min) THEN
a := aitv.max;
a_in := max_included(aitv);
ELSE
a := aitv.min;
a_in := min_included(aitv);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="enclose_pregion_in_pregion">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="prgn">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="polar_complex_number_region"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="centre">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="complex_number_literal"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="polar_complex_number_region"/>
                                                                                                                                                                                        <algorithm>
FUNCTION angle(a : REAL) : REAL;
REPEAT WHILE a &gt; PI;
a := a - 2.0 * PI;
END_REPEAT;
REPEAT WHILE a &lt;= -PI;
a := a + 2.0 * PI;
END_REPEAT;
RETURN (a);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="angle_range">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amin">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amax">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
amin := angle(amin);
IF amin = PI THEN
amin := -PI;
END_IF;
amax := angle(amax);
IF amax &lt;= amin THEN
amax := amax + 2.0 * PI;
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <function
                                                                                                                                                                                        name="strictly_in">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="aitv">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="finite_real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
a := angle(a);
RETURN ({aitv.min &lt; a &lt; aitv.max} OR {aitv.min &lt; a + 2.0 * PI &lt; aitv.max});
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="find_aminmax">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ab">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a0">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a1">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a2">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="a3">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="in0">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="in1">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="in2">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="in3">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amin">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amax">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amin_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR amax_in">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
LOCAL
a : REAL;
END_LOCAL;
amin := angle(a0 - ab);
amin_in := in0;
amax := amin;
amax_in := in0;
a := angle(a1 - ab);
IF a = amin THEN
amin_in := amin_in OR in1;
END_IF;
IF a &lt; amin THEN
amin := a;
amin_in := in1;
END_IF;
IF a = amax THEN
amax_in := amax_in OR in1;
END_IF;
IF a &gt; amax THEN
amax := a;
amax_in := in1;
END_IF;
a := angle(a2 - ab);
IF a = amin THEN
amin_in := amin_in OR in2;
END_IF;
IF a &lt; amin THEN
amin := a;
amin_in := in2;
END_IF;
IF a = amax THEN
amax_in := amax_in OR in2;
END_IF;
IF a &gt; amax THEN
amax := a;
amax_in := in2;
END_IF;
a := angle(a3 - ab);
IF a = amin THEN
amin_in := amin_in OR in3;
END_IF;
IF a &lt; amin THEN
amin := a;
amin_in := in3;
END_IF;
IF a = amax THEN
amax_in := amax_in OR in3;
END_IF;
IF a &gt; amax THEN
amax := a;
amax_in := in3;
END_IF;
amin := amin + ab;
amax := amax + ab;
angle_range(amin, amax);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <function
                                                                                                                                                                                        name="equal_cregion_pregion">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="crgn">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="cartesian_complex_number_region"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="prgn">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="polar_complex_number_region"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
arng : REAL;
amin : REAL;
xc : REAL;
yc : REAL;
aitv : real_interval;
xitv : real_interval;
yitv : real_interval;
c_in : BOOLEAN;
END_LOCAL;
IF NOT EXISTS(crgn) OR NOT EXISTS(prgn) THEN
RETURN (FALSE);
END_IF;
IF max_exists(prgn.distance_constraint) THEN
RETURN (FALSE);
END_IF;
IF real_min(prgn.distance_constraint) &lt;&gt; 0.0 THEN
RETURN (FALSE);
END_IF;
c_in := min_included(prgn.distance_constraint);
aitv := prgn.direction_constraint;
amin := aitv.min;
arng := aitv.max - amin;
xc := prgn.centre.real_part;
yc := prgn.centre.imag_part;
xitv := crgn.real_constraint;
yitv := crgn.imag_constraint;
IF arng = 0.5 * PI THEN
IF amin = 0.0 THEN
RETURN (NOT max_exists(xitv) AND NOT max_exists(yitv) AND min_exists(xitv
) AND min_exists(yitv) AND (real_min(xitv) = xc) AND (real_min(yitv) = yc
) AND (c_in AND min_included(aitv) AND max_included(aitv) AND
min_included(xitv) AND min_included(yitv) OR NOT c_in AND NOT
min_included(aitv) AND max_included(aitv) AND min_included(xitv) AND NOT
min_included(yitv) OR NOT c_in AND min_included(aitv) AND NOT
max_included(aitv) AND NOT min_included(xitv) AND min_included(yitv) OR
NOT c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
min_included(xitv) AND NOT min_included(yitv)));
END_IF;
IF amin = 0.5 * PI THEN
RETURN (max_exists(xitv) AND NOT max_exists(yitv) AND NOT min_exists(xitv
) AND min_exists(yitv) AND (real_max(xitv) = xc) AND (real_min(yitv) = yc
) AND (c_in AND min_included(aitv) AND max_included(aitv) AND
max_included(xitv) AND min_included(yitv) OR NOT c_in AND NOT
min_included(aitv) AND max_included(aitv) AND max_included(xitv) AND NOT
min_included(yitv) OR NOT c_in AND min_included(aitv) AND NOT
max_included(aitv) AND NOT max_included(xitv) AND min_included(yitv) OR
NOT c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
max_included(xitv) AND NOT min_included(yitv)));
END_IF;
IF amin = -PI THEN
RETURN (max_exists(xitv) AND max_exists(yitv) AND NOT min_exists(xitv)
AND NOT min_exists(yitv) AND (real_max(xitv) = xc) AND (real_max(yitv) =
yc) AND (c_in AND min_included(aitv) AND max_included(aitv) AND
max_included(xitv) AND max_included(yitv) OR NOT c_in AND NOT
min_included(aitv) AND max_included(aitv) AND max_included(xitv) AND NOT
max_included(yitv) OR NOT c_in AND min_included(aitv) AND NOT
max_included(aitv) AND NOT max_included(xitv) AND max_included(yitv) OR
NOT c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
max_included(xitv) AND NOT max_included(yitv)));
END_IF;
IF amin = -0.5 * PI THEN
RETURN (NOT max_exists(xitv) AND max_exists(yitv) AND min_exists(xitv)
AND NOT min_exists(yitv) AND (real_min(xitv) = xc) AND (real_max(yitv) =
yc) AND (c_in AND min_included(aitv) AND max_included(aitv) AND
min_included(xitv) AND max_included(yitv) OR NOT c_in AND NOT
min_included(aitv) AND max_included(aitv) AND min_included(xitv) AND NOT
max_included(yitv) OR NOT c_in AND min_included(aitv) AND NOT
max_included(aitv) AND NOT min_included(xitv) AND max_included(yitv) OR
NOT c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
min_included(xitv) AND NOT max_included(yitv)));
END_IF;
END_IF;
IF arng = PI THEN
IF amin = 0.0 THEN
RETURN (NOT max_exists(xitv) AND NOT max_exists(yitv) AND NOT min_exists(
xitv) AND min_exists(yitv) AND (real_min(yitv) = yc) AND (c_in AND
min_included(aitv) AND max_included(aitv) AND min_included(yitv) OR NOT
c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
min_included(yitv)));
END_IF;
IF amin = 0.5 * PI THEN
RETURN (max_exists(xitv) AND NOT max_exists(yitv) AND NOT min_exists(xitv
) AND NOT min_exists(yitv) AND (real_max(xitv) = xc) AND (c_in AND
min_included(aitv) AND max_included(aitv) AND max_included(xitv) OR NOT
c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
max_included(xitv)));
END_IF;
IF amin = -PI THEN
RETURN (NOT max_exists(xitv) AND max_exists(yitv) AND NOT min_exists(xitv
) AND NOT min_exists(yitv) AND (real_max(yitv) = yc) AND (c_in AND
min_included(aitv) AND max_included(aitv) AND max_included(yitv) OR NOT
c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
max_included(yitv)));
END_IF;
IF amin = -0.5 * PI THEN
RETURN (NOT max_exists(xitv) AND NOT max_exists(yitv) AND min_exists(xitv
) AND NOT min_exists(yitv) AND (real_min(xitv) = xc) AND (c_in AND
min_included(aitv) AND max_included(aitv) AND min_included(xitv) OR NOT
c_in AND NOT min_included(aitv) AND NOT max_included(aitv) AND NOT
min_included(xitv)));
END_IF;
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="equal_maths_functions">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="fun1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="fun2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
cum : LOGICAL;
END_LOCAL;
IF fun1 = fun2 THEN
RETURN (TRUE);
END_IF;
cum := equal_maths_spaces(fun1.domain, fun2.domain);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
cum := cum AND equal_maths_spaces(fun1.range, fun2.range);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="equal_maths_spaces">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
spc1types : SET OF STRING := stripped_typeof(spc1);
spc2types : SET OF STRING := stripped_typeof(spc2);
set1 : SET OF maths_value;
set2 : SET OF maths_value;
cum : LOGICAL := TRUE;
base : maths_space;
expnt : INTEGER;
factors : LIST OF maths_space;
factors2 : LIST OF maths_space;
fs1 : function_space;
fs2 : function_space;
cum2 : LOGICAL;
END_LOCAL;
IF spc1 = spc2 THEN
RETURN (TRUE);
END_IF;
IF 'FINITE_SPACE' IN spc1types THEN
set1 := spc1\finite_space.members;
IF 'FINITE_SPACE' IN spc2types THEN
set2 := spc2\finite_space.members;
REPEAT i := 1 TO SIZEOF(set1);
cum := cum AND member_of(set1[i], spc2);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
IF cum = TRUE THEN
REPEAT i := 1 TO SIZEOF(set2);
cum := cum AND member_of(set2[i], spc1);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN (cum);
END_IF;
IF 'FINITE_INTEGER_INTERVAL' IN spc2types THEN
set2 := [];
REPEAT i := spc2\finite_integer_interval.min TO spc2\
finite_integer_interval.max;
set2 := set2 + [i];
END_REPEAT;
RETURN (equal_maths_spaces(spc1, make_finite_space(set2)));
END_IF;
END_IF;
IF ('FINITE_INTEGER_INTERVAL' IN spc1types) AND ('FINITE_SPACE' IN spc2types)
THEN
set1 := [];
REPEAT i := spc1\finite_integer_interval.min TO spc1\
finite_integer_interval.max;
set1 := set1 + [i];
END_REPEAT;
RETURN (equal_maths_spaces(make_finite_space(set1), spc2));
END_IF;
IF ('CARTESIAN_COMPLEX_NUMBER_REGION' IN spc1types) AND (
'POLAR_COMPLEX_NUMBER_REGION' IN spc2types) THEN
RETURN (equal_cregion_pregion(spc1, spc2));
END_IF;
IF ('POLAR_COMPLEX_NUMBER_REGION' IN spc1types) AND (
'CARTESIAN_COMPLEX_NUMBER_REGION' IN spc2types) THEN
RETURN (equal_cregion_pregion(spc2, spc1));
END_IF;
IF 'UNIFORM_PRODUCT_SPACE' IN spc1types THEN
base := spc1\uniform_product_space.base;
expnt := spc1\uniform_product_space.exponent;
IF 'UNIFORM_PRODUCT_SPACE' IN spc2types THEN
IF expnt &lt;&gt; spc2\uniform_product_space.exponent THEN
RETURN (FALSE);
END_IF;
RETURN (equal_maths_spaces(base, spc2\uniform_product_space.base));
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN spc2types THEN
factors := spc2\listed_product_space.factors;
IF expnt &lt;&gt; SIZEOF(factors) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO SIZEOF(factors);
cum := cum AND equal_maths_spaces(base, factors[i]);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN spc1types THEN
factors := spc1\listed_product_space.factors;
IF 'UNIFORM_PRODUCT_SPACE' IN spc2types THEN
IF spc2\uniform_product_space.exponent &lt;&gt; SIZEOF(factors) THEN
RETURN (FALSE);
END_IF;
base := spc2\uniform_product_space.base;
REPEAT i := 1 TO SIZEOF(factors);
cum := cum AND equal_maths_spaces(base, factors[i]);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN spc2types THEN
factors2 := spc2\listed_product_space.factors;
IF SIZEOF(factors) &lt;&gt; SIZEOF(factors2) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO SIZEOF(factors);
cum := cum AND equal_maths_spaces(factors[i], factors2[i]);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
IF ('EXTENDED_TUPLE_SPACE' IN spc1types) AND ('EXTENDED_TUPLE_SPACE' IN
spc2types) THEN
RETURN (equal_maths_spaces(spc1\extended_tuple_space.extender, spc2\
extended_tuple_space.extender) AND equal_maths_spaces(spc1\
extended_tuple_space.base, spc2\extended_tuple_space.base));
END_IF;
IF ('FUNCTION_SPACE' IN spc1types) AND ('FUNCTION_SPACE' IN spc2types) THEN
fs1 := spc1;
fs2 := spc2;
IF fs1.domain_constraint &lt;&gt; fs2.domain_constraint THEN
IF (fs1.domain_constraint = sc_equal) OR (fs2.domain_constraint =
sc_equal) THEN
RETURN (FALSE);
END_IF;
IF fs1.domain_constraint &lt;&gt; sc_subspace THEN
fs1 := spc2;
fs2 := spc1;
END_IF;
IF (fs1.domain_constraint &lt;&gt; sc_subspace) OR (fs2.domain_constraint &lt;&gt;
sc_member) THEN
RETURN (UNKNOWN);
END_IF;
IF any_space_satisfies(fs1.domain_constraint, fs1.domain_argument) &lt;&gt;
any_space_satisfies(fs2.domain_constraint, fs2.domain_argument) THEN
RETURN (FALSE);
END_IF;
IF NOT ('FINITE_SPACE' IN stripped_typeof(fs2.domain_argument)) THEN
RETURN (FALSE);
END_IF;
IF SIZEOF(['FINITE_SPACE', 'FINITE_INTEGER_INTERVAL'] * stripped_typeof(
fs1.domain_argument)) = 0 THEN
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
END_IF;
cum := equal_maths_spaces(fs1.domain_argument, fs2.domain_argument);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
IF fs1.range_constraint &lt;&gt; fs2.range_constraint THEN
IF (fs1.range_constraint = sc_equal) OR (fs2.range_constraint = sc_equal)
THEN
RETURN (FALSE);
END_IF;
IF fs1.range_constraint &lt;&gt; sc_subspace THEN
fs1 := spc2;
fs2 := spc1;
END_IF;
IF (fs1.range_constraint &lt;&gt; sc_subspace) OR (fs2.range_constraint &lt;&gt;
sc_member) THEN
RETURN (UNKNOWN);
END_IF;
IF any_space_satisfies(fs1.range_constraint, fs1.range_argument) &lt;&gt;
any_space_satisfies(fs2.range_constraint, fs2.range_argument) THEN
RETURN (FALSE);
END_IF;
IF NOT ('FINITE_SPACE' IN stripped_typeof(fs2.range_argument)) THEN
RETURN (FALSE);
END_IF;
IF SIZEOF(['FINITE_SPACE', 'FINITE_INTEGER_INTERVAL'] * stripped_typeof(
fs1.range_argument)) = 0 THEN
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
END_IF;
cum := cum AND equal_maths_spaces(fs1.range_argument, fs2.range_argument);
RETURN (cum);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="equal_maths_values">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
FUNCTION mem_of_vs(val1 : maths_value; val2 : maths_value) : LOGICAL;
IF NOT has_values_space(val2) THEN
RETURN (UNKNOWN);
END_IF;
IF NOT member_of(val1, values_space_of(val2)) THEN
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="es_subspace_of_es">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="es1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="es2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF NOT EXISTS(es1) OR NOT EXISTS(es2) THEN
RETURN (FALSE);
END_IF;
IF es1 = es2 THEN
RETURN (TRUE);
END_IF;
IF es2 = es_generics THEN
RETURN (TRUE);
END_IF;
IF (es1 = es_booleans) AND (es2 = es_logicals) THEN
RETURN (TRUE);
END_IF;
IF (es2 = es_numbers) AND ((es1 = es_complex_numbers) OR (es1 = es_reals) OR
(es1 = es_integers)) THEN
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="expression_is_constant">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
RETURN (bool(SIZEOF(free_variables_of(expr)) = 0));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="extract_factors">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tspace">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="m">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="n">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tsp : tuple_space := the_zero_tuple_space;
END_LOCAL;
REPEAT i := m TO n;
tsp := assoc_product_space(tsp, factor_space(tspace, i));
END_REPEAT;
RETURN (tsp);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="factor1">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tspace">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := TYPEOF(tspace);
END_LOCAL;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN typenames THEN
RETURN (tspace\uniform_product_space.base);
END_IF;
IF schema_prefix + 'LISTED_PRODUCT_SPACE' IN typenames THEN
RETURN (tspace\listed_product_space.factors[1]);
END_IF;
IF schema_prefix + 'EXTENDED_TUPLE_SPACE' IN typenames THEN
RETURN (factor1(tspace\extended_tuple_space.base));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="factor_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tspace">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="idx">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="positive_integer"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := TYPEOF(tspace);
END_LOCAL;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN typenames THEN
IF idx &lt;= tspace\uniform_product_space.exponent THEN
RETURN (tspace\uniform_product_space.base);
END_IF;
RETURN (?);
END_IF;
IF schema_prefix + 'LISTED_PRODUCT_SPACE' IN typenames THEN
IF idx &lt;= SIZEOF(tspace\listed_product_space.factors) THEN
RETURN (tspace\listed_product_space.factors[idx]);
END_IF;
RETURN (?);
END_IF;
IF schema_prefix + 'EXTENDED_TUPLE_SPACE' IN typenames THEN
IF idx &lt;= space_dimension(tspace\extended_tuple_space.base) THEN
RETURN (factor_space(tspace\extended_tuple_space.base, idx));
END_IF;
RETURN (tspace\extended_tuple_space.extender);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="free_variables_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="SET"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_variable"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(expr);
result : SET OF generic_variable := [];
exprs : LIST OF generic_expression := [];
END_LOCAL;
IF 'GENERIC_LITERAL' IN typenames THEN
RETURN (result);
END_IF;
IF 'GENERIC_VARIABLE' IN typenames THEN
result := result + expr;
RETURN (result);
END_IF;
IF 'QUANTIFIER_EXPRESSION' IN typenames THEN
exprs := QUERY(ge &lt;* expr\multiple_arity_generic_expression.operands | NOT
(ge IN expr\quantifier_expression.variables));
REPEAT i := 1 TO SIZEOF(exprs);
result := result + free_variables_of(exprs[i]);
END_REPEAT;
REPEAT i := 1 TO SIZEOF(expr\quantifier_expression.variables);
result := result - expr\quantifier_expression.variables[i];
END_REPEAT;
RETURN (result);
END_IF;
IF 'UNARY_GENERIC_EXPRESSION' IN typenames THEN
RETURN (free_variables_of(expr\unary_generic_expression.operand));
END_IF;
IF 'BINARY_GENERIC_EXPRESSION' IN typenames THEN
result := free_variables_of(expr\binary_generic_expression.operands[1]);
RETURN (result + free_variables_of(expr\binary_generic_expression.operands[
2]));
END_IF;
IF 'MULTIPLE_ARITY_GENERIC_EXPRESSION' IN typenames THEN
REPEAT i := 1 TO SIZEOF(expr\multiple_arity_generic_expression.operands);
result := result + free_variables_of(expr\
multiple_arity_generic_expression.operands[i]);
END_REPEAT;
RETURN (result);
END_IF;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_applicability">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arguments">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
domain : tuple_space := convert_to_maths_function(func).domain;
domain_types : SET OF STRING := TYPEOF(domain);
narg : positive_integer := SIZEOF(arguments);
arg : generic_expression;
END_LOCAL;
IF schema_prefix + 'PRODUCT_SPACE' IN domain_types THEN
IF space_dimension(domain) &lt;&gt; narg THEN
RETURN (FALSE);
END_IF;
ELSE
IF schema_prefix + 'EXTENDED_TUPLE_SPACE' IN domain_types THEN
IF space_dimension(domain) &gt; narg THEN
RETURN (FALSE);
END_IF;
ELSE
RETURN (FALSE);
END_IF;
END_IF;
REPEAT i := 1 TO narg;
arg := convert_to_operand(arguments[i]);
IF NOT has_values_space(arg) THEN
RETURN (FALSE);
END_IF;
IF NOT compatible_spaces(factor_space(domain, i), values_space_of(arg))
THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_is_1d_array">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
temp : maths_space;
END_LOCAL;
IF NOT EXISTS(func) THEN
RETURN (FALSE);
END_IF;
IF space_dimension(func.domain) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
temp := factor1(func.domain);
IF schema_prefix + 'PRODUCT_SPACE' IN TYPEOF(temp) THEN
IF space_dimension(temp) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
temp := factor1(temp);
END_IF;
IF schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp) THEN
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_is_1d_table">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
temp : maths_space;
itvl : finite_integer_interval;
END_LOCAL;
IF NOT EXISTS(func) THEN
RETURN (FALSE);
END_IF;
IF space_dimension(func.domain) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
temp := factor1(func.domain);
IF schema_prefix + 'PRODUCT_SPACE' IN TYPEOF(temp) THEN
IF space_dimension(temp) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
temp := factor1(temp);
END_IF;
IF schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp) THEN
itvl := temp;
RETURN (bool((itvl.min = 0) OR (itvl.min = 1)));
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_is_2d_table">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
temp : maths_space;
pspace : product_space;
itvl1 : finite_integer_interval;
itvl2 : finite_integer_interval;
END_LOCAL;
IF NOT EXISTS(func) THEN
RETURN (FALSE);
END_IF;
IF space_dimension(func.domain) &lt;&gt; 1 THEN
RETURN (FALSE);
END_IF;
temp := factor1(func.domain);
IF NOT ('PRODUCT_SPACE' IN stripped_typeof(temp)) THEN
RETURN (FALSE);
END_IF;
pspace := temp;
IF space_dimension(pspace) &lt;&gt; 2 THEN
RETURN (FALSE);
END_IF;
temp := factor1(pspace);
IF NOT ('FINITE_INTEGER_INTERVAL' IN stripped_typeof(temp)) THEN
RETURN (FALSE);
END_IF;
itvl1 := temp;
temp := factor_space(pspace, 2);
IF NOT ('FINITE_INTEGER_INTERVAL' IN stripped_typeof(temp)) THEN
RETURN (FALSE);
END_IF;
itvl2 := temp;
RETURN (bool((itvl1.min = itvl2.min) AND ((itvl1.min = 0) OR (itvl1.min = 1))
));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_is_array">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tspace : tuple_space;
temp : maths_space;
END_LOCAL;
IF NOT EXISTS(func) THEN
RETURN (FALSE);
END_IF;
tspace := func.domain;
IF (space_dimension(tspace) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF
(factor1(tspace))) THEN
tspace := factor1(tspace);
END_IF;
IF NOT (schema_prefix + 'PRODUCT_SPACE' IN TYPEOF(tspace)) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO space_dimension(tspace);
temp := factor_space(tspace, i);
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="function_is_table">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tspace : tuple_space;
temp : maths_space;
base : INTEGER;
END_LOCAL;
IF NOT EXISTS(func) THEN
RETURN (FALSE);
END_IF;
tspace := func.domain;
IF (space_dimension(tspace) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF
(factor1(tspace))) THEN
tspace := factor1(tspace);
END_IF;
IF NOT (schema_prefix + 'PRODUCT_SPACE' IN TYPEOF(tspace)) THEN
RETURN (FALSE);
END_IF;
temp := factor1(tspace);
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (FALSE);
END_IF;
base := temp\finite_integer_interval.min;
IF (base &lt;&gt; 0) AND (base &lt;&gt; 1) THEN
RETURN (FALSE);
END_IF;
REPEAT i := 2 TO space_dimension(tspace);
temp := factor_space(tspace, i);
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (FALSE);
END_IF;
IF temp\finite_integer_interval.min &lt;&gt; base THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="get_description_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="obj">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="description_attribute_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="text"/>
                                                                                                                                                                                        <algorithm>
LOCAL
description_bag : BAG OF description_attribute := USEDIN(obj,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'
);
END_LOCAL;
IF SIZEOF(description_bag) = 1 THEN
RETURN (description_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="get_id_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="obj">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="id_attribute_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="identifier"/>
                                                                                                                                                                                        <algorithm>
LOCAL
id_bag : BAG OF id_attribute := USEDIN(obj,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM'
);
END_LOCAL;
IF SIZEOF(id_bag) = 1 THEN
RETURN (id_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="get_name_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="obj">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="name_attribute_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="label"/>
                                                                                                                                                                                        <algorithm>
LOCAL
name_bag : BAG OF name_attribute := USEDIN(obj,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM'
);
END_LOCAL;
IF SIZEOF(name_bag) = 1 THEN
RETURN (name_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="get_role">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="obj">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="role_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="object_role"/>
                                                                                                                                                                                        <algorithm>
LOCAL
role_bag : BAG OF role_association := USEDIN(obj,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE'
);
END_LOCAL;
IF SIZEOF(role_bag) = 1 THEN
RETURN (role_bag[1].role);
ELSE
RETURN (?);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="has_values_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := stripped_typeof(expr);
END_LOCAL;
IF 'EXPRESSION' IN typenames THEN
RETURN (bool(('NUMERIC_EXPRESSION' IN typenames) OR ('STRING_EXPRESSION' IN
typenames) OR ('BOOLEAN_EXPRESSION' IN typenames)));
END_IF;
IF 'MATHS_FUNCTION' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTION_APPLICATION' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'MATHS_SPACE' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'MATHS_VARIABLE' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'DEPENDENT_VARIABLE_DEFINITION' IN typenames THEN
RETURN (has_values_space(expr\unary_generic_expression.operand));
END_IF;
IF 'COMPLEX_NUMBER_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'LOGICAL_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'BINARY_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'MATHS_ENUM_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'REAL_TUPLE_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'INTEGER_TUPLE_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'ATOM_BASED_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'MATHS_TUPLE_LITERAL' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'PARTIAL_DERIVATIVE_EXPRESSION' IN typenames THEN
RETURN (TRUE);
END_IF;
IF 'DEFINITE_INTEGRAL_EXPRESSION' IN typenames THEN
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="identical_sets">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_a">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="class"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_b">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="class"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
set_of_sets : SET OF class := [];
END_LOCAL;
IF set_a = set_b THEN
RETURN (TRUE);
END_IF;
set_of_sets := set_of_sets + set_b;
RETURN (identical_to_one_of_set_of_sets(set_a, set_of_sets));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="identical_to_one_of_set_of_sets">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_a">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="class"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="set_of_sets">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="T"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
i : INTEGER;
initial_size : INTEGER;
augmented_size : INTEGER;
set_of_forward_equivalences : SET OF same_membership := [];
set_of_backward_equivalences : SET OF same_membership := [];
augmented_set_of_sets : SET OF class := [];
END_LOCAL;
IF set_a IN set_of_sets THEN
RETURN (TRUE);
END_IF;
initial_size := SIZEOF(set_of_sets);
IF initial_size = 0 THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO initial_size;
set_of_forward_equivalences := set_of_forward_equivalences + USEDIN(
set_of_sets[i],
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SAME_MEMBERSHIP.SET_1'
);
set_of_backward_equivalences := set_of_forward_equivalences + USEDIN(
set_of_sets[i],
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SAME_MEMBERSHIP.SET_2'
);
END_REPEAT;
augmented_set_of_sets := set_of_sets;
IF SIZEOF(set_of_forward_equivalences) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(set_of_forward_equivalences);
augmented_set_of_sets := augmented_set_of_sets +
set_of_forward_equivalences[i].set_2;
END_REPEAT;
END_IF;
IF SIZEOF(set_of_backward_equivalences) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(set_of_backward_equivalences);
augmented_set_of_sets := augmented_set_of_sets +
set_of_backward_equivalences[i].set_1;
END_REPEAT;
END_IF;
augmented_size := SIZEOF(augmented_set_of_sets);
IF augmented_size = initial_size THEN
RETURN (FALSE);
END_IF;
RETURN (identical_to_one_of_set_of_sets(set_a, augmented_set_of_sets));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="is_acyclic">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
RETURN (acyclic(arg, []));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="is_int_expr">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="numeric_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
i : INTEGER;
END_LOCAL;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INT_LITERAL' IN
TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REAL_LITERAL' IN
TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INT_NUMERIC_VARIABLE'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REAL_NUMERIC_VARIABLE'
IN TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ABS_FUNCTION' IN
TYPEOF(arg) THEN
RETURN (is_int_expr(arg\unary_numeric_expression.operand));
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINUS_FUNCTION' IN
TYPEOF(arg) THEN
RETURN (is_int_expr(arg\unary_numeric_expression.operand));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIN_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COS_FUNCTION' IN TYPEOF(
arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TAN_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ASIN_FUNCTION' IN TYPEOF
(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ACOS_FUNCTION' IN TYPEOF
(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ATAN_FUNCTION' IN TYPEOF
(arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EXP_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG_FUNCTION' IN TYPEOF(
arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG2_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG10_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SQUARE_ROOT_FUNCTION' IN
TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLUS_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MULT_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAXIMUM_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINIMUM_FUNCTION' IN
TYPEOF(arg)) THEN
REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.operands);
IF NOT is_int_expr(arg\multiple_arity_numeric_expression.operands[i])
THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINUS_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POWER_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (is_int_expr(arg\binary_numeric_expression.operands[1]) AND
is_int_expr(arg\binary_numeric_expression.operands[2]));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DIV_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MOD_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SLASH_EXPRESSION' IN
TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LENGTH_FUNCTION' IN
TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VALUE_FUNCTION' IN
TYPEOF(arg) THEN
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INT_VALUE_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INTEGER_DEFINED_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REAL_DEFINED_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BOOLEAN_DEFINED_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_DEFINED_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (FALSE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="is_sql_mappable">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
i : INTEGER;
END_LOCAL;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIMPLE_NUMERIC_EXPRESSION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SQL_MAPPABLE_DEFINED_FUNCTION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINUS_FUNCTION' IN
TYPEOF(arg) THEN
RETURN (is_sql_mappable(arg\unary_numeric_expression.operand));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ABS_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIN_FUNCTION' IN TYPEOF(
arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COS_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TAN_FUNCTION' IN TYPEOF(
arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ASIN_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ACOS_FUNCTION' IN TYPEOF
(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ATAN_FUNCTION' IN TYPEOF
(arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EXP_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG_FUNCTION' IN TYPEOF(
arg)) OR ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG2_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LOG10_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SQUARE_ROOT_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VALUE_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LENGTH_FUNCTION' IN
TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLUS_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MULT_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MAXIMUM_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINIMUM_FUNCTION' IN
TYPEOF(arg)) THEN
REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.operands);
IF NOT is_sql_mappable(arg\multiple_arity_numeric_expression.operands[i])
THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MINUS_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SLASH_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (is_sql_mappable(arg\binary_numeric_expression.operands[1]) AND
is_sql_mappable(arg\binary_numeric_expression.operands[2]));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.DIV_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MOD_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POWER_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIMPLE_BOOLEAN_EXPRESSION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NOT_EXPRESSION' IN
TYPEOF(arg) THEN
RETURN (is_sql_mappable(arg\unary_generic_expression.operand));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ODD_FUNCTION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.XOR_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AND_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.OR_EXPRESSION' IN TYPEOF
(arg)) THEN
REPEAT i := 1 TO SIZEOF(arg\multiple_arity_boolean_expression.operands);
IF NOT is_sql_mappable(arg\multiple_arity_boolean_expression.operands[i])
THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.EQUALS_EXPRESSION' IN
TYPEOF(arg) THEN
RETURN (is_sql_mappable(arg\binary_generic_expression.operands[1]) AND
is_sql_mappable(arg\binary_generic_expression.operands[2]));
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_EQUAL' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_GREATER' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_GREATER_EQUAL'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_LESS' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_LESS_EQUAL'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPARISON_NOT_EQUAL' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LIKE_EXPRESSION' IN
TYPEOF(arg)) THEN
RETURN (is_sql_mappable(arg\comparison_expression.operands[1]) AND
is_sql_mappable(arg\comparison_expression.operands[2]));
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INTERVAL_EXPRESSION'
IN TYPEOF(arg) THEN
RETURN (is_sql_mappable(arg\interval_expression.interval_low) AND
is_sql_mappable(arg\interval_expression.interval_high) AND is_sql_mappable(
arg\interval_expression.interval_item));
END_IF;
IF (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.NUMERIC_DEFINED_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.BOOLEAN_DEFINED_FUNCTION'
IN TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.STRING_DEFINED_FUNCTION'
IN TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SIMPLE_STRING_EXPRESSION'
IN TYPEOF(arg) THEN
RETURN (TRUE);
END_IF;
IF ('FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.INDEX_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SUBSTRING_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CONCAT_EXPRESSION' IN
TYPEOF(arg)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FORMAT_FUNCTION' IN
TYPEOF(arg)) THEN
RETURN (FALSE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="item_in_context">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="item">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="representation_item"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="cntxt">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="representation_context"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
y : BAG OF representation_item;
END_LOCAL;
IF SIZEOF(USEDIN(item,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION.ITEMS')
* cntxt.representations_in_context) &gt; 0 THEN
RETURN (TRUE);
ELSE
y := QUERY(z &lt;* USEDIN(item, '') |
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_ITEM'
IN TYPEOF(z));
IF SIZEOF(y) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(y);
IF item_in_context(y[i], cntxt) THEN
RETURN (TRUE);
END_IF;
END_REPEAT;
END_IF;
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="leap_year">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="year">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="year_number"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF (year MOD 4 = 0) AND (year MOD 100 &lt;&gt; 0) OR (year MOD 400 = 0) THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="list_selected_components">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="aggr">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="AGGREGATE"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="LIST"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="k">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="positive_integer"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : LIST OF maths_value := [];
j : INTEGER := 0;
END_LOCAL;
REPEAT i := LOINDEX(aggr) TO HIINDEX(aggr);
IF k &lt;= SIZEOF(aggr[i]) THEN
INSERT(result, aggr[i][k], j);
j := j + 1;
END_IF;
END_REPEAT;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="list_to_array">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lis">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"
                                                                                                                                                                                            typelabel="t"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="low">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="u">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="ARRAY"
                                                                                                                                                                                          lower="low"
                                                                                                                                                                                          upper="u"/>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="GENERIC"
                                                                                                                                                                                          typelabel="t"/>
                                                                                                                                                                                        <algorithm>
LOCAL
n : INTEGER;
res : ARRAY [low:u] OF GENERIC : t;
END_LOCAL;
n := SIZEOF(lis);
IF n &lt;&gt; u - low + 1 THEN
RETURN (?);
ELSE
res := [lis[1] : n];
REPEAT i := 2 TO n;
res[low + i - 1] := lis[i];
END_REPEAT;
RETURN (res);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_atom_based_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="atom_based_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="atom_based_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (atom_based_literal(lit_value)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_binary_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BINARY"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="binary_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (binary_literal(lit_value)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_boolean_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="BOOLEAN"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="boolean_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (boolean_literal(lit_value)||simple_boolean_expression()||
boolean_expression()||expression()||generic_expression()||
simple_generic_expression()||generic_literal());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_cartesian_complex_number_region">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="real_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="imag_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="cartesian_complex_number_region"/>
                                                                                                                                                                                        <algorithm>
RETURN (cartesian_complex_number_region(real_constraint, imag_constraint)||
maths_space()||generic_expression()||generic_literal()||
simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_complex_number_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="rpart">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ipart">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="complex_number_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (complex_number_literal(rpart, ipart)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_elementary_function">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func_id">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_function_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="elementary_function"/>
                                                                                                                                                                                        <algorithm>
RETURN (elementary_function(func_id)||maths_function()||generic_expression()
||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_elementary_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="space_id">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="elementary_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (elementary_space(space_id)||maths_space()||generic_expression()||
generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_extended_tuple_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="base">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="product_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="extender">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="extended_tuple_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (extended_tuple_space(base, extender)||maths_space()||
generic_expression()||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_finite_integer_interval">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="min">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="max">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="finite_integer_interval"/>
                                                                                                                                                                                        <algorithm>
RETURN (finite_integer_interval(min, max)||maths_space()||generic_expression(
)||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_finite_real_interval">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="min">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="minclo">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="open_closed"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="max">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="maxclo">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="open_closed"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="finite_real_interval"/>
                                                                                                                                                                                        <algorithm>
RETURN (finite_real_interval(min, minclo, max, maxclo)||maths_space()||
generic_expression()||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_finite_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="members">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="finite_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (finite_space(members)||maths_space()||generic_expression()||
generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_function_application">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="afunction">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arguments">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="function_application"/>
                                                                                                                                                                                        <algorithm>
RETURN (function_application(afunction, arguments)||
multiple_arity_generic_expression(convert_to_maths_function(afunction) +
convert_to_operands(arguments))||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_function_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="domain_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="space_constraint_type"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="domain_argument">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="range_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="space_constraint_type"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="range_argument">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="function_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (function_space(domain_constraint, domain_argument, range_constraint,
range_argument)||maths_space()||generic_expression()||generic_literal()||
simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_int_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="INTEGER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="int_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (int_literal()||literal_number(lit_value)||simple_numeric_expression()
||numeric_expression()||expression()||generic_expression()||
simple_generic_expression()||generic_literal());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_listed_product_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="factors">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="listed_product_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (listed_product_space(factors)||maths_space()||generic_expression()||
generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_logical_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="LOGICAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="logical_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (logical_literal(lit_value)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_maths_enum_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_enum_atom"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_enum_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (maths_enum_literal(lit_value)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_maths_tuple_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_tuple_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (maths_tuple_literal(lit_value)||generic_literal()||
simple_generic_expression()||generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_parallel_composed_function">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="srcdom">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space_or_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="prepfuncs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="2"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="finfunc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="parallel_composed_function"/>
                                                                                                                                                                                        <algorithm>
RETURN (parallel_composed_function(srcdom, prepfuncs, finfunc)||
maths_function()||generic_expression()||multiple_arity_generic_expression(
convert_to_operands_prcmfn(srcdom, prepfuncs, finfunc)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_polar_complex_number_region">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="centre">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="complex_number_literal"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="dis_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="dir_constraint">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="finite_real_interval"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="polar_complex_number_region"/>
                                                                                                                                                                                        <algorithm>
RETURN (polar_complex_number_region(centre, dis_constraint, dir_constraint)||
maths_space()||generic_expression()||generic_literal()||
simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_real_interval_from_min">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="min">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="minclo">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="open_closed"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="real_interval_from_min"/>
                                                                                                                                                                                        <algorithm>
RETURN (real_interval_from_min(min, minclo)||maths_space()||
generic_expression()||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_real_interval_to_max">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="max">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="maxclo">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="open_closed"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="real_interval_to_max"/>
                                                                                                                                                                                        <algorithm>
RETURN (real_interval_to_max(max, maxclo)||maths_space()||generic_expression(
)||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_real_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="real_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (real_literal()||literal_number(lit_value)||simple_numeric_expression(
)||numeric_expression()||expression()||generic_expression()||
simple_generic_expression()||generic_literal());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_string_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lit_value">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="STRING"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="string_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (string_literal(lit_value)||simple_string_expression()||
string_expression()||expression()||generic_expression()||
simple_generic_expression()||generic_literal());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_uniform_product_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="base">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="exponent">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="positive_integer"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="uniform_product_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (uniform_product_space(base, exponent)||maths_space()||
generic_expression()||generic_literal()||simple_generic_expression());
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="max_exists">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
RETURN (bool((schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types) OR (
schema_prefix + 'INTEGER_INTERVAL_TO_MAX' IN types) OR (schema_prefix +
'FINITE_REAL_INTERVAL' IN types) OR (schema_prefix + 'REAL_INTERVAL_TO_MAX'
IN types)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="max_included">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
IF (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types) OR (schema_prefix +
'INTEGER_INTERVAL_TO_MAX' IN types) THEN
RETURN (TRUE);
END_IF;
IF schema_prefix + 'FINITE_REAL_INTERVAL' IN types THEN
RETURN (bool(spc\finite_real_interval.max_closure = closed));
END_IF;
IF schema_prefix + 'REAL_INTERVAL_TO_MAX' IN types THEN
RETURN (bool(spc\real_interval_to_max.max_closure = closed));
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="member_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
v : maths_value := simplify_maths_value(convert_to_maths_value(val));
vtypes : SET OF STRING := stripped_typeof(v);
s : maths_space := simplify_maths_space(spc);
stypes : SET OF STRING := stripped_typeof(s);
tmp_int : INTEGER;
tmp_real : REAL;
tmp_cmplx : complex_number_literal;
lgcl : LOGICAL;
cum : LOGICAL;
vspc : maths_space;
sspc : maths_space;
smem : SET OF maths_value;
factors : LIST OF maths_space;
END_LOCAL;
IF NOT EXISTS(s) THEN
RETURN (FALSE);
END_IF;
IF NOT EXISTS(v) THEN
RETURN (s = the_generics);
END_IF;
IF ('GENERIC_EXPRESSION' IN vtypes) AND NOT ('MATHS_SPACE' IN vtypes) AND
NOT ('MATHS_FUNCTION' IN vtypes) AND NOT ('COMPLEX_NUMBER_LITERAL' IN vtypes)
THEN
IF has_values_space(v) THEN
vspc := values_space_of(v);
IF subspace_of(vspc, s) THEN
RETURN (TRUE);
END_IF;
IF NOT compatible_spaces(vspc, s) THEN
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
END_IF;
RETURN (UNKNOWN);
END_IF;
IF 'ELEMENTARY_SPACE' IN stypes THEN
CASE s\elementary_space.space_id OF
es_numbers :
RETURN (('NUMBER' IN vtypes) OR ('COMPLEX_NUMBER_LITERAL' IN vtypes));
es_complex_numbers :
RETURN ('COMPLEX_NUMBER_LITERAL' IN vtypes);
es_reals :
RETURN (('REAL' IN vtypes) AND NOT ('INTEGER' IN vtypes));
es_integers :
RETURN ('INTEGER' IN vtypes);
es_logicals :
RETURN ('LOGICAL' IN vtypes);
es_booleans :
RETURN ('BOOLEAN' IN vtypes);
es_strings :
RETURN ('STRING' IN vtypes);
es_binarys :
RETURN ('BINARY' IN vtypes);
es_maths_spaces :
RETURN ('MATHS_SPACE' IN vtypes);
es_maths_functions :
RETURN ('MATHS_FUNCTION' IN vtypes);
es_generics :
RETURN (TRUE);
END_CASE;
END_IF;
IF 'FINITE_INTEGER_INTERVAL' IN stypes THEN
IF 'INTEGER' IN vtypes THEN
tmp_int := v;
RETURN ({s\finite_integer_interval.min &lt;= tmp_int &lt;= s\
finite_integer_interval.max});
END_IF;
RETURN (FALSE);
END_IF;
IF 'INTEGER_INTERVAL_FROM_MIN' IN stypes THEN
IF 'INTEGER' IN vtypes THEN
tmp_int := v;
RETURN (s\integer_interval_from_min.min &lt;= tmp_int);
END_IF;
RETURN (FALSE);
END_IF;
IF 'INTEGER_INTERVAL_TO_MAX' IN stypes THEN
IF 'INTEGER' IN vtypes THEN
tmp_int := v;
RETURN (tmp_int &lt;= s\integer_interval_to_max.max);
END_IF;
RETURN (FALSE);
END_IF;
IF 'FINITE_REAL_INTERVAL' IN stypes THEN
IF ('REAL' IN vtypes) AND NOT ('INTEGER' IN vtypes) THEN
tmp_real := v;
IF s\finite_real_interval.min_closure = closed THEN
IF s\finite_real_interval.max_closure = closed THEN
RETURN ({s\finite_real_interval.min &lt;= tmp_real &lt;= s\
finite_real_interval.max});
ELSE
RETURN ({s\finite_real_interval.min &lt;= tmp_real &lt; s\
finite_real_interval.max});
END_IF;
ELSE
IF s\finite_real_interval.max_closure = closed THEN
RETURN ({s\finite_real_interval.min &lt; tmp_real &lt;= s\
finite_real_interval.max});
ELSE
RETURN ({s\finite_real_interval.min &lt; tmp_real &lt; s\
finite_real_interval.max});
END_IF;
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'REAL_INTERVAL_FROM_MIN' IN stypes THEN
IF ('REAL' IN vtypes) AND NOT ('INTEGER' IN vtypes) THEN
tmp_real := v;
IF s\real_interval_from_min.min_closure = closed THEN
RETURN (s\real_interval_from_min.min &lt;= tmp_real);
ELSE
RETURN (s\real_interval_from_min.min &lt; tmp_real);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'REAL_INTERVAL_TO_MAX' IN stypes THEN
IF ('REAL' IN vtypes) AND NOT ('INTEGER' IN vtypes) THEN
tmp_real := v;
IF s\real_interval_to_max.max_closure = closed THEN
RETURN (tmp_real &lt;= s\real_interval_to_max.max);
ELSE
RETURN (tmp_real &lt; s\real_interval_to_max.max);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN stypes THEN
IF 'COMPLEX_NUMBER_LITERAL' IN vtypes THEN
RETURN (member_of(v\complex_number_literal.real_part, s\
cartesian_complex_number_region.real_constraint) AND member_of(v\
complex_number_literal.imag_part, s\cartesian_complex_number_region.
imag_constraint));
END_IF;
RETURN (FALSE);
END_IF;
IF 'POLAR_COMPLEX_NUMBER_REGION' IN stypes THEN
IF 'COMPLEX_NUMBER_LITERAL' IN vtypes THEN
tmp_cmplx := v;
tmp_cmplx.real_part := tmp_cmplx.real_part - s\
polar_complex_number_region.centre.real_part;
tmp_cmplx.imag_part := tmp_cmplx.imag_part - s\
polar_complex_number_region.centre.imag_part;
tmp_real := SQRT(tmp_cmplx.real_part**2 + tmp_cmplx.imag_part**2);
IF NOT member_of(tmp_real, s\polar_complex_number_region.
distance_constraint) THEN
RETURN (FALSE);
END_IF;
IF tmp_real = 0.0 THEN
RETURN (TRUE);
END_IF;
tmp_real := atan2(tmp_cmplx.imag_part, tmp_cmplx.real_part);
RETURN (member_of(tmp_real, s\polar_complex_number_region.
direction_constraint) OR member_of(tmp_real + 2.0 * PI, s\
polar_complex_number_region.direction_constraint));
END_IF;
RETURN (FALSE);
END_IF;
IF 'FINITE_SPACE' IN stypes THEN
smem := s\finite_space.members;
cum := FALSE;
REPEAT i := 1 TO SIZEOF(smem);
cum := cum OR equal_maths_values(v, smem[i]);
IF cum = TRUE THEN
RETURN (TRUE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
IF 'UNIFORM_PRODUCT_SPACE' IN stypes THEN
IF 'LIST' IN vtypes THEN
IF SIZEOF(v) = s\uniform_product_space.exponent THEN
sspc := s\uniform_product_space.base;
cum := TRUE;
REPEAT i := 1 TO SIZEOF(v);
cum := cum AND member_of(v[i], sspc);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN stypes THEN
IF 'LIST' IN vtypes THEN
factors := s\listed_product_space.factors;
IF SIZEOF(v) = SIZEOF(factors) THEN
cum := TRUE;
REPEAT i := 1 TO SIZEOF(v);
cum := cum AND member_of(v[i], factors[i]);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN stypes THEN
IF 'LIST' IN vtypes THEN
sspc := s\extended_tuple_space.base;
tmp_int := space_dimension(sspc);
IF SIZEOF(v) &gt;= tmp_int THEN
cum := TRUE;
REPEAT i := 1 TO tmp_int;
cum := cum AND member_of(v[i], factor_space(sspc, i));
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
sspc := s\extended_tuple_space.extender;
REPEAT i := tmp_int + 1 TO SIZEOF(v);
cum := cum AND member_of(v[i], sspc);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'FUNCTION_SPACE' IN stypes THEN
IF 'MATHS_FUNCTION' IN vtypes THEN
vspc := v\maths_function.domain;
sspc := s\function_space.domain_argument;
CASE s\function_space.domain_constraint OF
sc_equal :
cum := equal_maths_spaces(vspc, sspc);
sc_subspace :
cum := subspace_of(vspc, sspc);
sc_member :
cum := member_of(vspc, sspc);
END_CASE;
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
vspc := v\maths_function.range;
sspc := s\function_space.range_argument;
CASE s\function_space.range_constraint OF
sc_equal :
cum := cum AND equal_maths_spaces(vspc, sspc);
sc_subspace :
cum := cum AND subspace_of(vspc, sspc);
sc_member :
cum := cum AND member_of(vspc, sspc);
END_CASE;
RETURN (cum);
END_IF;
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="min_exists">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
RETURN (bool((schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types) OR (
schema_prefix + 'INTEGER_INTERVAL_FROM_MIN' IN types) OR (schema_prefix +
'FINITE_REAL_INTERVAL' IN types) OR (schema_prefix + 'REAL_INTERVAL_FROM_MIN'
IN types)));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="min_included">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
IF (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types) OR (schema_prefix +
'INTEGER_INTERVAL_FROM_MIN' IN types) THEN
RETURN (TRUE);
END_IF;
IF schema_prefix + 'FINITE_REAL_INTERVAL' IN types THEN
RETURN (bool(spc\finite_real_interval.min_closure = closed));
END_IF;
IF schema_prefix + 'REAL_INTERVAL_FROM_MIN' IN types THEN
RETURN (bool(spc\real_interval_from_min.min_closure = closed));
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="no_cyclic_domain_reference">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ref">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space_or_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="used">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="SETOF maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := TYPEOF(ref);
func : maths_function;
END_LOCAL;
IF NOT EXISTS(ref) OR NOT EXISTS(used) THEN
RETURN (FALSE);
END_IF;
IF schema_prefix + 'MATHS_SPACE' IN typenames THEN
RETURN (TRUE);
END_IF;
func := ref;
IF func IN used THEN
RETURN (FALSE);
END_IF;
IF schema_prefix + 'CONSTANT_FUNCTION' IN typenames THEN
RETURN (no_cyclic_domain_reference(func\constant_function.source_of_domain
, used + [func]));
END_IF;
IF schema_prefix + 'SELECTOR_FUNCTION' IN typenames THEN
RETURN (no_cyclic_domain_reference(func\selector_function.source_of_domain
, used + [func]));
END_IF;
IF schema_prefix + 'PARALLEL_COMPOSED_FUNCTION' IN typenames THEN
RETURN (no_cyclic_domain_reference(func\parallel_composed_function.
source_of_domain, used + [func]));
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="no_cyclic_space_reference">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="refs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING;
refs_plus : SET OF maths_space;
END_LOCAL;
IF spc IN refs THEN
RETURN (FALSE);
END_IF;
types := TYPEOF(spc);
refs_plus := refs + spc;
IF schema_prefix + 'FINITE_SPACE' IN types THEN
RETURN (bool(SIZEOF(QUERY(sp &lt;* QUERY(mem &lt;* spc\finite_space.members |
schema_prefix + 'MATHS_SPACE' IN TYPEOF(mem)) | NOT
no_cyclic_space_reference(sp, refs_plus))) = 0));
END_IF;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN types THEN
RETURN (no_cyclic_space_reference(spc\uniform_product_space.base, refs_plus
));
END_IF;
IF schema_prefix + 'LISTED_PRODUCT_SPACE' IN types THEN
RETURN (bool(SIZEOF(QUERY(fac &lt;* spc\listed_product_space.factors | NOT
no_cyclic_space_reference(fac, refs_plus))) = 0));
END_IF;
IF schema_prefix + 'EXTENDED_TUPLE_SPACE' IN types THEN
RETURN (no_cyclic_space_reference(spc\extended_tuple_space.base, refs_plus)
AND no_cyclic_space_reference(spc\extended_tuple_space.extender, refs_plus
));
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="nondecreasing">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="lr">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF NOT EXISTS(lr) THEN
RETURN (FALSE);
END_IF;
REPEAT j := 2 TO SIZEOF(lr);
IF lr[j] &lt; lr[j - 1] THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="normalise">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="vector_or_direction"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="vector_or_direction"/>
                                                                                                                                                                                        <algorithm>
LOCAL
ndim : INTEGER;
v : direction;
result : vector_or_direction;
vec : vector;
mag : REAL;
END_LOCAL;
IF NOT EXISTS(arg) THEN
result := ?;
ELSE
ndim := arg.dim;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VECTOR' IN TYPEOF(
arg) THEN
v := dummy_gri||direction(arg.orientation.direction_ratios);
IF arg.magnitude = 0.0 THEN
RETURN (?);
ELSE
vec := dummy_gri||vector(v, 1.0);
END_IF;
ELSE
v := dummy_gri||direction(arg.direction_ratios);
END_IF;
mag := 0.0;
REPEAT i := 1 TO ndim;
mag := mag + v.direction_ratios[i] * v.direction_ratios[i];
END_REPEAT;
IF mag &gt; 0.0 THEN
mag := SQRT(mag);
REPEAT i := 1 TO ndim;
v.direction_ratios[i] := v.direction_ratios[i]/mag;
END_REPEAT;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VECTOR' IN TYPEOF
(arg) THEN
vec.orientation := v;
result := vec;
ELSE
result := v;
END_IF;
ELSE
RETURN (?);
END_IF;
END_IF;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="number_superspace_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="elementary_space"/>
                                                                                                                                                                                        <algorithm>
IF subspace_of_es(spc, es_integers) THEN
RETURN (the_integers);
END_IF;
IF subspace_of_es(spc, es_reals) THEN
RETURN (the_reals);
END_IF;
IF subspace_of_es(spc, es_complex_numbers) THEN
RETURN (the_complex_numbers);
END_IF;
IF subspace_of_es(spc, es_numbers) THEN
RETURN (the_numbers);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="number_tuple_subspace_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(spc);
factors : LIST OF maths_space;
cum : LOGICAL := TRUE;
END_LOCAL;
IF 'UNIFORM_PRODUCT_SPACE' IN types THEN
RETURN (subspace_of_es(spc\uniform_product_space.base, es_numbers));
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN types THEN
factors := spc\listed_product_space.factors;
REPEAT i := 1 TO SIZEOF(factors);
cum := cum AND subspace_of_es(factors[i], es_numbers);
END_REPEAT;
RETURN (cum);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types THEN
cum := subspace_of_es(spc\extended_tuple_space.extender, es_numbers);
cum := cum AND number_tuple_subspace_check(spc\extended_tuple_space.base);
RETURN (cum);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="one_tuples_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
RETURN (make_uniform_product_space(spc, 1));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="orthogonal_complement">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="vec">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="direction"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="direction"/>
                                                                                                                                                                                        <algorithm>
LOCAL
result : direction;
END_LOCAL;
IF (vec.dim &lt;&gt; 2) OR NOT EXISTS(vec) THEN
RETURN (?);
ELSE
result := dummy_gri||direction([-vec.direction_ratios[2], vec.
direction_ratios[1]]);
RETURN (result);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="parallel_composed_function_composability_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="funcs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="final">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tplsp : tuple_space := the_zero_tuple_space;
finfun : maths_function := convert_to_maths_function(final);
END_LOCAL;
REPEAT i := 1 TO SIZEOF(funcs);
tplsp := assoc_product_space(tplsp, funcs[i].range);
END_REPEAT;
RETURN (compatible_spaces(tplsp, finfun.domain));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="parallel_composed_function_domain_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="comdom">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="funcs">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
REPEAT i := 1 TO SIZEOF(funcs);
IF NOT compatible_spaces(comdom, funcs[i].domain) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="partial_derivative_check">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="domain">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="d_vars">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="input_selector"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
domn : tuple_space := domain;
fspc : maths_space;
dim : INTEGER;
k : INTEGER;
END_LOCAL;
IF (space_dimension(domain) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF
(factor1(domain))) THEN
domn := factor1(domain);
END_IF;
dim := space_dimension(domn);
REPEAT i := 1 TO SIZEOF(d_vars);
k := d_vars[i];
IF k &gt; dim THEN
RETURN (FALSE);
END_IF;
fspc := factor_space(domn, k);
IF NOT subspace_of_es(fspc, es_reals) AND NOT subspace_of_es(fspc,
es_complex_numbers) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="real_max">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="REAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
IF schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types THEN
RETURN (spc\finite_integer_interval.max);
END_IF;
IF schema_prefix + 'INTEGER_INTERVAL_TO_MAX' IN types THEN
RETURN (spc\integer_interval_to_max.max);
END_IF;
IF schema_prefix + 'FINITE_REAL_INTERVAL' IN types THEN
RETURN (spc\finite_real_interval.max);
END_IF;
IF schema_prefix + 'REAL_INTERVAL_TO_MAX' IN types THEN
RETURN (spc\real_interval_to_max.max);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="real_min">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="REAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(spc);
END_LOCAL;
IF schema_prefix + 'FINITE_INTEGER_INTERVAL' IN types THEN
RETURN (spc\finite_integer_interval.min);
END_IF;
IF schema_prefix + 'INTEGER_INTERVAL_FROM_MIN' IN types THEN
RETURN (spc\integer_interval_from_min.min);
END_IF;
IF schema_prefix + 'FINITE_REAL_INTERVAL' IN types THEN
RETURN (spc\finite_real_interval.min);
END_IF;
IF schema_prefix + 'REAL_INTERVAL_FROM_MIN' IN types THEN
RETURN (spc\real_interval_from_min.min);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="remove_first">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="alist">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"/>
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"
                                                                                                                                                                                            typelabel="gen"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"/>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="GENERIC"
                                                                                                                                                                                          typelabel="gen"/>
                                                                                                                                                                                        <algorithm>
LOCAL
blist : LIST OF GENERIC : gen := alist;
END_LOCAL;
IF SIZEOF(blist) &gt; 0 THEN
REMOVE(blist, 1);
END_IF;
RETURN (blist);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="repackage">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tspace">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="repckg">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="repackage_options"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="tuple_space"/>
                                                                                                                                                                                        <algorithm>
CASE repckg OF
ro_nochange :
RETURN (tspace);
ro_wrap_as_tuple :
RETURN (one_tuples_of(tspace));
ro_unwrap_tuple :
RETURN (factor1(tspace));
OTHERWISE : RETURN (?);
END_CASE;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="shape_of_array">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="func">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_function"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="LIST"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="positive_integer"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tspace : tuple_space;
temp : maths_space;
result : LIST OF positive_integer := [];
END_LOCAL;
IF schema_prefix + 'EXPLICIT_TABLE_FUNCTION' IN TYPEOF(func) THEN
RETURN (func\explicit_table_function.shape);
END_IF;
tspace := func.domain;
IF (space_dimension(tspace) = 1) AND (schema_prefix + 'TUPLE_SPACE' IN TYPEOF
(factor1(tspace))) THEN
tspace := factor1(tspace);
END_IF;
REPEAT i := 1 TO space_dimension(tspace);
temp := factor_space(tspace, i);
IF NOT (schema_prefix + 'FINITE_INTEGER_INTERVAL' IN TYPEOF(temp)) THEN
RETURN (?);
END_IF;
INSERT(result, temp\finite_integer_interval.size, i - 1);
END_REPEAT;
RETURN (result);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="simplify_function_application">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="function_application"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
FUNCTION ctmv(x : GENERIC : g) : maths_value;
RETURN (convert_to_maths_value(x));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <procedure
                                                                                                                                                                                        name="parts">
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name=""/>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="c">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="complex_number_literal"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR x">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="VAR y">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <algorithm>
x := c.real_part;
y := c.imag_part;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </procedure>
                                                                                                                                                                                      <function
                                                                                                                                                                                        name="makec">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="x">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="y">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="REAL"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="complex_number_literal"/>
                                                                                                                                                                                        <algorithm>
RETURN (make_complex_number_literal(x, y));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="good_t">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="v">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tn">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="STRING"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
tpl : LIST OF maths_value;
END_LOCAL;
IF 'LIST' IN TYPEOF(v) THEN
tpl := v;
REPEAT i := 1 TO SIZEOF(tpl);
IF NOT (tn IN TYPEOF(tpl[i])) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <constant name="cnlit"
                                                                                                                                                                                        expression="schema_prefix + 'COMPLEX_NUMBER_LITERAL'">
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="STRING">
                                                                                                                                                                                        </builtintype>
                                                                                                                                                                                      </constant>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="simplify_generic_expression">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
FUNCTION restore_unary(expr : unary_generic_expression; opnd :
generic_expression) : generic_expression;
expr.operand := opnd;
RETURN (expr);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="restore_binary">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="binary_generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="opd1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="opd2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
expr.operands[1] := opd1;
expr.operands[2] := opd2;
RETURN (expr);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="restore_mulary">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="multiple_arity_generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="ops">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="LISTOF generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
expr.operands := ops;
RETURN (expr);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="make_number_literal">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="nmb">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="NUMBER"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_literal"/>
                                                                                                                                                                                        <algorithm>
IF 'INTEGER' IN TYPEOF(nmb) THEN
RETURN (make_int_literal(nmb));
END_IF;
RETURN (make_real_literal(nmb));
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="simplify_maths_space">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
stypes : SET OF STRING := stripped_typeof(spc);
sset : SET OF maths_value;
zset : SET OF maths_value := [];
zval : maths_value;
zspc : maths_space;
zallint : BOOLEAN := TRUE;
zint : INTEGER;
zmin : INTEGER;
zmax : INTEGER;
factors : LIST OF maths_space;
zfactors : LIST OF maths_space := [];
rspc : maths_space;
END_LOCAL;
IF 'FINITE_SPACE' IN stypes THEN
sset := spc\finite_space.members;
REPEAT i := 1 TO SIZEOF(sset);
zval := simplify_maths_value(sset[i]);
zset := zset + [zval];
IF zallint AND ('INTEGER' IN TYPEOF(zval)) THEN
zint := zval;
IF i = 1 THEN
zmin := zint;
zmax := zint;
ELSE
IF zint &lt; zmin THEN
zmin := zint;
END_IF;
IF zint &gt; zmax THEN
zmax := zint;
END_IF;
END_IF;
ELSE
zallint := FALSE;
END_IF;
END_REPEAT;
IF zallint AND (SIZEOF(zset) = zmax - zmin + 1) THEN
RETURN (make_finite_integer_interval(zmin, zmax));
END_IF;
RETURN (make_finite_space(zset));
END_IF;
IF 'UNIFORM_PRODUCT_SPACE' IN stypes THEN
zspc := simplify_maths_space(spc\uniform_product_space.base);
RETURN (make_uniform_product_space(zspc, spc\uniform_product_space.exponent
));
END_IF;
IF 'LISTED_PRODUCT_SPACE' IN stypes THEN
factors := spc\listed_product_space.factors;
REPEAT i := 1 TO SIZEOF(factors);
INSERT(zfactors, simplify_maths_space(factors[i]), i - 1);
END_REPEAT;
RETURN (make_listed_product_space(zfactors));
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN stypes THEN
zspc := simplify_maths_space(spc\extended_tuple_space.base);
rspc := simplify_maths_space(spc\extended_tuple_space.extender);
RETURN (make_extended_tuple_space(zspc, rspc));
END_IF;
IF 'FUNCTION_SPACE' IN stypes THEN
zspc := simplify_maths_space(spc\function_space.domain_argument);
rspc := simplify_maths_space(spc\function_space.range_argument);
RETURN (make_function_space(spc\function_space.domain_constraint, zspc, spc
\function_space.range_constraint, rspc));
END_IF;
RETURN (spc);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="simplify_maths_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="val">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
LOCAL
vtypes : SET OF STRING := stripped_typeof(val);
vlist : LIST OF maths_value;
nlist : LIST OF maths_value := [];
END_LOCAL;
IF 'GENERIC_EXPRESSION' IN vtypes THEN
RETURN (simplify_generic_expression(val));
END_IF;
IF 'LIST' IN vtypes THEN
vlist := val;
REPEAT i := 1 TO SIZEOF(vlist);
INSERT(nlist, simplify_maths_value(vlist[i]), i - 1);
END_REPEAT;
RETURN (convert_to_maths_value(nlist));
END_IF;
RETURN (val);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="singleton_member_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_value"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(spc);
END_LOCAL;
IF 'FINITE_SPACE' IN types THEN
IF SIZEOF(spc\finite_space.members) = 1 THEN
RETURN (spc\finite_space.members[1]);
END_IF;
RETURN (?);
END_IF;
IF 'FINITE_INTEGER_INTERVAL' IN types THEN
IF spc\finite_integer_interval.size = 1 THEN
RETURN (spc\finite_integer_interval.min);
END_IF;
RETURN (?);
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="space_dimension">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="tspace">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="tuple_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="nonnegative_integer"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(tspace);
END_LOCAL;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN types THEN
RETURN (tspace\uniform_product_space.exponent);
END_IF;
IF schema_prefix + 'LISTED_PRODUCT_SPACE' IN types THEN
RETURN (SIZEOF(tspace\listed_product_space.factors));
END_IF;
IF schema_prefix + 'EXTENDED_TUPLE_SPACE' IN types THEN
RETURN (space_dimension(tspace\extended_tuple_space.base));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="space_is_continuum">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="space">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
typenames : SET OF STRING := TYPEOF(space);
factors : LIST OF maths_space;
END_LOCAL;
IF NOT EXISTS(space) THEN
RETURN (FALSE);
END_IF;
IF subspace_of_es(space, es_reals) OR subspace_of_es(space,
es_complex_numbers) THEN
RETURN (TRUE);
END_IF;
IF schema_prefix + 'UNIFORM_PRODUCT_SPACE' IN typenames THEN
RETURN (space_is_continuum(space\uniform_product_space.base));
END_IF;
IF schema_prefix + 'LISTED_PRODUCT_SPACE' IN typenames THEN
factors := space\listed_product_space.factors;
IF SIZEOF(factors) = 0 THEN
RETURN (FALSE);
END_IF;
REPEAT i := 1 TO SIZEOF(factors);
IF NOT space_is_continuum(factors[i]) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="space_is_singleton">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(spc);
END_LOCAL;
IF 'FINITE_SPACE' IN types THEN
RETURN (bool(SIZEOF(spc\finite_space.members) = 1));
END_IF;
IF 'FINITE_INTEGER_INTERVAL' IN types THEN
RETURN (bool(spc\finite_integer_interval.size = 1));
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="stripped_typeof">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="arg">
                                                                                                                                                                                          <builtintype
                                                                                                                                                                                            type="GENERIC"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="SET"/>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="STRING"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := TYPEOF(arg);
stypes : SET OF STRING := [];
n : INTEGER := LENGTH(schema_prefix);
END_LOCAL;
REPEAT i := 1 TO SIZEOF(types);
IF types[i][1:n] = schema_prefix THEN
stypes := stypes + [types[i][n + 1:LENGTH(types[i])]];
ELSE
stypes := stypes + [types[i]];
END_IF;
END_REPEAT;
RETURN (stypes);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="subspace_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="space1">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="space2">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
spc1 : maths_space := simplify_maths_space(space1);
spc2 : maths_space := simplify_maths_space(space2);
types1 : SET OF STRING := stripped_typeof(spc1);
types2 : SET OF STRING := stripped_typeof(spc2);
lgcl : LOGICAL;
cum : LOGICAL;
es_val : elementary_space_enumerators;
bnd1 : REAL;
bnd2 : REAL;
n : INTEGER;
sp1 : maths_space;
sp2 : maths_space;
prgn1 : polar_complex_number_region;
prgn2 : polar_complex_number_region;
aitv : finite_real_interval;
END_LOCAL;
IF NOT EXISTS(spc1) OR NOT EXISTS(spc2) THEN
RETURN (FALSE);
END_IF;
IF spc2 = the_generics THEN
RETURN (TRUE);
END_IF;
IF 'ELEMENTARY_SPACE' IN types1 THEN
IF NOT ('ELEMENTARY_SPACE' IN types2) THEN
RETURN (FALSE);
END_IF;
es_val := spc2\elementary_space.space_id;
IF spc1\elementary_space.space_id = es_val THEN
RETURN (TRUE);
END_IF;
CASE spc1\elementary_space.space_id OF
es_numbers :
RETURN (FALSE);
es_complex_numbers :
RETURN (es_val = es_numbers);
es_reals :
RETURN (es_val = es_numbers);
es_integers :
RETURN (es_val = es_numbers);
es_logicals :
RETURN (FALSE);
es_booleans :
RETURN (es_val = es_logicals);
es_strings :
RETURN (FALSE);
es_binarys :
RETURN (FALSE);
es_maths_spaces :
RETURN (FALSE);
es_maths_functions :
RETURN (FALSE);
es_generics :
RETURN (FALSE);
END_CASE;
RETURN (UNKNOWN);
END_IF;
IF 'FINITE_INTEGER_INTERVAL' IN types1 THEN
cum := TRUE;
REPEAT i := spc1\finite_integer_interval.min TO spc1\
finite_integer_interval.max;
cum := cum AND member_of(i, spc2);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
IF 'INTEGER_INTERVAL_FROM_MIN' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_integers));
END_IF;
IF 'INTEGER_INTERVAL_FROM_MIN' IN types2 THEN
RETURN (spc1\integer_interval_from_min.min &gt;= spc2\
integer_interval_from_min.min);
END_IF;
RETURN (FALSE);
END_IF;
IF 'INTEGER_INTERVAL_TO_MAX' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_integers));
END_IF;
IF 'INTEGER_INTERVAL_TO_MAX' IN types2 THEN
RETURN (spc1\integer_interval_to_max.max &lt;= spc2\integer_interval_to_max.
max);
END_IF;
RETURN (FALSE);
END_IF;
IF 'FINITE_REAL_INTERVAL' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_reals));
END_IF;
IF ('FINITE_REAL_INTERVAL' IN types2) OR ('REAL_INTERVAL_FROM_MIN' IN
types2) OR ('REAL_INTERVAL_TO_MAX' IN types2) THEN
IF min_exists(spc2) THEN
bnd1 := spc1\finite_real_interval.min;
bnd2 := real_min(spc2);
IF (bnd1 &lt; bnd2) OR (bnd1 = bnd2) AND min_included(spc1) AND NOT
min_included(spc2) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF max_exists(spc2) THEN
bnd1 := spc1\finite_real_interval.max;
bnd2 := real_max(spc2);
IF (bnd1 &gt; bnd2) OR (bnd1 = bnd2) AND max_included(spc1) AND NOT
max_included(spc2) THEN
RETURN (FALSE);
END_IF;
END_IF;
RETURN (TRUE);
END_IF;
RETURN (FALSE);
END_IF;
IF 'REAL_INTERVAL_FROM_MIN' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_reals));
END_IF;
IF 'REAL_INTERVAL_FROM_MIN' IN types2 THEN
bnd1 := spc1\real_interval_from_min.min;
bnd2 := spc2\real_interval_from_min.min;
RETURN ((bnd2 &lt; bnd1) OR (bnd2 = bnd1) AND (min_included(spc2) OR NOT
min_included(spc1)));
END_IF;
RETURN (FALSE);
END_IF;
IF 'REAL_INTERVAL_TO_MAX' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_reals));
END_IF;
IF 'REAL_INTERVAL_TO_MAX' IN types2 THEN
bnd1 := spc1\real_interval_to_max.max;
bnd2 := spc2\real_interval_to_max.max;
RETURN ((bnd2 &gt; bnd1) OR (bnd2 = bnd1) AND (max_included(spc2) OR NOT
max_included(spc1)));
END_IF;
RETURN (FALSE);
END_IF;
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_complex_numbers));
END_IF;
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN types2 THEN
RETURN (subspace_of(spc1\cartesian_complex_number_region.real_constraint
, spc2\cartesian_complex_number_region.real_constraint) AND subspace_of(
spc1\cartesian_complex_number_region.imag_constraint, spc2\
cartesian_complex_number_region.imag_constraint));
END_IF;
IF 'POLAR_COMPLEX_NUMBER_REGION' IN types2 THEN
RETURN (subspace_of(enclose_cregion_in_pregion(spc1, spc2\
polar_complex_number_region.centre), spc2));
END_IF;
RETURN (FALSE);
END_IF;
IF 'POLAR_COMPLEX_NUMBER_REGION' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
es_val := spc2\elementary_space.space_id;
RETURN ((es_val = es_numbers) OR (es_val = es_complex_numbers));
END_IF;
IF 'CARTESIAN_COMPLEX_NUMBER_REGION' IN types2 THEN
RETURN (subspace_of(enclose_pregion_in_cregion(spc1), spc2));
END_IF;
IF 'POLAR_COMPLEX_NUMBER_REGION' IN types2 THEN
prgn1 := spc1;
prgn2 := spc2;
IF prgn1.centre = prgn2.centre THEN
IF prgn2.direction_constraint.max &gt; PI THEN
aitv := make_finite_real_interval(-PI, open, prgn2.
direction_constraint.max - 2.0 * PI, prgn2.direction_constraint.
max_closure);
RETURN (subspace_of(prgn1.distance_constraint, prgn2.
distance_constraint) AND (subspace_of(prgn1.direction_constraint,
prgn2.direction_constraint) OR subspace_of(prgn1.direction_constraint
, aitv)));
ELSE
RETURN (subspace_of(prgn1.distance_constraint, prgn2.
distance_constraint) AND subspace_of(prgn1.direction_constraint,
prgn2.direction_constraint));
END_IF;
END_IF;
RETURN (subspace_of(enclose_pregion_in_pregion(prgn1, prgn2.centre),
prgn2));
END_IF;
RETURN (FALSE);
END_IF;
IF 'FINITE_SPACE' IN types1 THEN
cum := TRUE;
REPEAT i := 1 TO SIZEOF(spc1\finite_space.members);
cum := cum AND member_of(spc1\finite_space.members[i], spc2);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
IF 'PRODUCT_SPACE' IN types1 THEN
IF 'PRODUCT_SPACE' IN types2 THEN
IF space_dimension(spc1) = space_dimension(spc2) THEN
cum := TRUE;
REPEAT i := 1 TO space_dimension(spc1);
cum := cum AND subspace_of(factor_space(spc1, i), factor_space(spc2,
i));
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types2 THEN
IF space_dimension(spc1) &gt;= space_dimension(spc2) THEN
cum := TRUE;
REPEAT i := 1 TO space_dimension(spc1);
cum := cum AND subspace_of(factor_space(spc1, i), factor_space(spc2,
i));
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
END_IF;
RETURN (FALSE);
END_IF;
IF 'EXTENDED_TUPLE_SPACE' IN types1 THEN
IF 'EXTENDED_TUPLE_SPACE' IN types2 THEN
n := space_dimension(spc1);
IF n &lt; space_dimension(spc2) THEN
n := space_dimension(spc2);
END_IF;
cum := TRUE;
REPEAT i := 1 TO n + 1;
cum := cum AND subspace_of(factor_space(spc1, i), factor_space(spc2, i)
);
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (cum);
END_IF;
RETURN (FALSE);
END_IF;
IF 'FUNCTION_SPACE' IN types1 THEN
IF 'ELEMENTARY_SPACE' IN types2 THEN
RETURN (spc2\elementary_space.space_id = es_maths_functions);
END_IF;
IF 'FUNCTION_SPACE' IN types2 THEN
cum := TRUE;
sp1 := spc1\function_space.domain_argument;
sp2 := spc2\function_space.domain_argument;
CASE spc1\function_space.domain_constraint OF
sc_equal :
BEGIN
CASE spc2\function_space.domain_constraint OF
sc_equal :
cum := cum AND equal_maths_spaces(sp1, sp2);
sc_subspace :
cum := cum AND subspace_of(sp1, sp2);
sc_member :
cum := cum AND member_of(sp1, sp2);
END_CASE;
END;
sc_subspace :
BEGIN
CASE spc2\function_space.domain_constraint OF
sc_equal :
RETURN (FALSE);
sc_subspace :
cum := cum AND subspace_of(sp1, sp2);
sc_member :
BEGIN
IF NOT member_of(sp1, sp2) THEN
RETURN (FALSE);
END_IF;
cum := UNKNOWN;
END;
END_CASE;
END;
sc_member :
BEGIN
CASE spc2\function_space.domain_constraint OF
sc_equal :
cum := cum AND space_is_singleton(sp1) AND equal_maths_spaces(
singleton_member_of(sp1), sp2);
sc_subspace :
BEGIN
IF NOT member_of(sp2, sp1) THEN
RETURN (FALSE);
END_IF;
cum := UNKNOWN;
END;
sc_member :
cum := cum AND subspace_of(sp1, sp2);
END_CASE;
END;
END_CASE;
IF cum = FALSE THEN
RETURN (FALSE);
END_IF;
sp1 := spc1\function_space.range_argument;
sp2 := spc2\function_space.range_argument;
CASE spc1\function_space.range_constraint OF
sc_equal :
BEGIN
CASE spc2\function_space.range_constraint OF
sc_equal :
cum := cum AND equal_maths_spaces(sp1, sp2);
sc_subspace :
cum := cum AND subspace_of(sp1, sp2);
sc_member :
cum := cum AND member_of(sp1, sp2);
END_CASE;
END;
sc_subspace :
BEGIN
CASE spc2\function_space.domain_constraint OF
sc_equal :
RETURN (FALSE);
sc_subspace :
cum := cum AND subspace_of(sp1, sp2);
sc_member :
BEGIN
IF NOT member_of(sp1, sp2) THEN
RETURN (FALSE);
END_IF;
cum := UNKNOWN;
END;
END_CASE;
END;
sc_member :
BEGIN
CASE spc2\function_space.domain_constraint OF
sc_equal :
cum := cum AND space_is_singleton(sp1) AND equal_maths_spaces(
singleton_member_of(sp1), sp2);
sc_subspace :
BEGIN
IF NOT member_of(sp2, sp1) THEN
RETURN (FALSE);
END_IF;
cum := UNKNOWN;
END;
sc_member :
cum := cum AND subspace_of(sp1, sp2);
END_CASE;
END;
END_CASE;
RETURN (cum);
END_IF;
RETURN (FALSE);
END_IF;
RETURN (UNKNOWN);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="subspace_of_es">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="spc">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_space"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="es">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="elementary_space_enumerators"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(spc);
END_LOCAL;
IF NOT EXISTS(spc) OR NOT EXISTS(es) THEN
RETURN (FALSE);
END_IF;
IF 'ELEMENTARY_SPACE' IN types THEN
RETURN (es_subspace_of_es(spc\elementary_space.space_id, es));
END_IF;
IF 'FINITE_SPACE' IN types THEN
RETURN (all_members_of_es(spc\finite_space.members, es));
END_IF;
CASE es OF
es_numbers :
RETURN (('FINITE_INTEGER_INTERVAL' IN types) OR (
'INTEGER_INTERVAL_FROM_MIN' IN types) OR ('INTEGER_INTERVAL_TO_MAX' IN
types) OR ('FINITE_REAL_INTERVAL' IN types) OR ('REAL_INTERVAL_FROM_MIN' IN
types) OR ('REAL_INTERVAL_TO_MAX' IN types) OR (
'CARTESIAN_COMPLEX_NUMBER_REGION' IN types) OR (
'POLAR_COMPLEX_NUMBER_REGION' IN types));
es_complex_numbers :
RETURN (('CARTESIAN_COMPLEX_NUMBER_REGION' IN types) OR (
'POLAR_COMPLEX_NUMBER_REGION' IN types));
es_reals :
RETURN (('FINITE_REAL_INTERVAL' IN types) OR ('REAL_INTERVAL_FROM_MIN' IN
types) OR ('REAL_INTERVAL_TO_MAX' IN types));
es_integers :
RETURN (('FINITE_INTEGER_INTERVAL' IN types) OR (
'INTEGER_INTERVAL_FROM_MIN' IN types) OR ('INTEGER_INTERVAL_TO_MAX' IN
types));
es_logicals :
RETURN (FALSE);
es_booleans :
RETURN (FALSE);
es_strings :
RETURN (FALSE);
es_binarys :
RETURN (FALSE);
es_maths_spaces :
RETURN (FALSE);
es_maths_functions :
RETURN ('FUNCTION_SPACE' IN types);
es_generics :
RETURN (TRUE);
END_CASE;
RETURN (UNKNOWN);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="substitute">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="vars">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="ST"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="vals">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="LIST"
                                                                                                                                                                                            lower="1"
                                                                                                                                                                                            upper="?"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="maths_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="generic_expression"/>
                                                                                                                                                                                        <algorithm>
LOCAL
types : SET OF STRING := stripped_typeof(expr);
opnds : LIST OF generic_expression;
op1 : generic_expression;
op2 : generic_expression;
qvars : LIST OF generic_variable;
srcdom : maths_space_or_function;
prpfun : LIST [1:?] OF maths_function;
finfun : maths_function_select;
END_LOCAL;
IF SIZEOF(vars) &lt;&gt; SIZEOF(vals) THEN
RETURN (?);
END_IF;
IF 'GENERIC_LITERAL' IN types THEN
RETURN (expr);
END_IF;
IF 'GENERIC_VARIABLE' IN types THEN
REPEAT i := 1 TO SIZEOF(vars);
IF expr :=: vars[i] THEN
RETURN (vals[i]);
END_IF;
END_REPEAT;
RETURN (expr);
END_IF;
IF 'QUANTIFIER_EXPRESSION' IN types THEN
qvars := expr\quantifier_expression.variables;
REPEAT i := SIZEOF(vars) TO 1;
IF vars[i] IN qvars THEN
REMOVE(vars, i);
REMOVE(vals, i);
END_IF;
END_REPEAT;
opnds := expr\multiple_arity_generic_expression.operands;
REPEAT i := 1 TO SIZEOF(opnds);
IF NOT (opnds[i] IN qvars) THEN
expr\multiple_arity_generic_expression.operands[i] := substitute(opnds[
i], vars, vals);
END_IF;
END_REPEAT;
RETURN (expr);
END_IF;
IF 'UNARY_GENERIC_EXPRESSION' IN types THEN
op1 := expr\unary_generic_expression.operand;
expr\unary_generic_expression.operand := substitute(op1, vars, vals);
END_IF;
IF 'BINARY_GENERIC_EXPRESSION' IN types THEN
op1 := expr\binary_generic_expression.operands[1];
expr\binary_generic_expression.operands[1] := substitute(op1, vars, vals);
op2 := expr\binary_generic_expression.operands[2];
expr\binary_generic_expression.operands[2] := substitute(op2, vars, vals);
END_IF;
IF 'PARALLEL_COMPOSED_FUNCTION' IN types THEN
srcdom := expr\parallel_composed_function.source_of_domain;
prpfun := expr\parallel_composed_function.prep_functions;
finfun := expr\parallel_composed_function.final_function;
srcdom := substitute(srcdom, vars, vals);
REPEAT i := 1 TO SIZEOF(prpfun);
prpfun[i] := substitute(prpfun[i], vars, vals);
END_REPEAT;
IF 'MATHS_FUNCTION' IN stripped_typeof(finfun) THEN
finfun := substitute(finfun, vars, vals);
END_IF;
RETURN (make_parallel_composed_function(srcdom, prpfun, finfun));
END_IF;
IF 'MULTIPLE_ARITY_GENERIC_EXPRESSION' IN types THEN
opnds := expr\multiple_arity_generic_expression.operands;
REPEAT i := 1 TO SIZEOF(opnds);
expr\multiple_arity_generic_expression.operands[i] := substitute(opnds[i]
, vars, vals);
END_REPEAT;
END_IF;
RETURN (expr);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="using_items">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="item">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="founded_item_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="checked_items">
                                                                                                                                                                                          <aggregate
                                                                                                                                                                                            type="SET"/>
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="T"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="SET"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="founded_item_select"/>
                                                                                                                                                                                        <algorithm>
LOCAL
new_check_items : SET OF founded_item_select;
result_items : SET OF founded_item_select;
next_items : SET OF founded_item_select;
END_LOCAL;
result_items := [];
new_check_items := checked_items + item;
next_items := QUERY(z &lt;* bag_to_set(USEDIN(item, '')) | (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION_ITEM' IN
TYPEOF(z)) OR (
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.FOUNDED_ITEM' IN TYPEOF(
z)));
IF SIZEOF(next_items) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(next_items);
IF NOT (next_items[i] IN new_check_items) THEN
result_items := result_items + next_items[i] + using_items(next_items[i
], new_check_items);
END_IF;
END_REPEAT;
END_IF;
RETURN (result_items);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="using_representations">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="item">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="founded_item_select"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <aggregate
                                                                                                                                                                                          type="SET"/>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="representation"/>
                                                                                                                                                                                        <algorithm>
LOCAL
results : SET OF representation;
result_bag : BAG OF representation;
intermediate_items : SET OF founded_item_select;
END_LOCAL;
results := [];
result_bag := USEDIN(item,
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION.ITEMS');
IF SIZEOF(result_bag) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(result_bag);
results := results + result_bag[i];
END_REPEAT;
END_IF;
intermediate_items := using_items(item, []);
IF SIZEOF(intermediate_items) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(intermediate_items);
result_bag := USEDIN(intermediate_items[i],
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.REPRESENTATION.ITEMS'
);
IF SIZEOF(result_bag) &gt; 0 THEN
REPEAT j := 1 TO HIINDEX(result_bag);
results := results + result_bag[j];
END_REPEAT;
END_IF;
END_REPEAT;
END_IF;
RETURN (results);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="valid_basis_curve_in_2d_wireframe">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="crv">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="curve"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POLYLINE',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.B_SPLINE_CURVE',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ELLIPSE',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CIRCLE'] * TYPEOF(crv))
= 1 THEN
RETURN (TRUE);
ELSE
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TRIMMED_CURVE' IN
TYPEOF(crv) THEN
IF SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LINE',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PARABOLA',
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.HYPERBOLA'] * TYPEOF
(crv\trimmed_curve.basis_curve)) = 1 THEN
RETURN (TRUE);
ELSE
RETURN (valid_basis_curve_in_2d_wireframe(crv\trimmed_curve.basis_curve
));
END_IF;
ELSE
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.OFFSET_CURVE_2D'
IN TYPEOF(crv) THEN
RETURN (valid_basis_curve_in_2d_wireframe(crv\offset_curve_2d.
basis_curve));
ELSE
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CURVE_REPLICA'
IN TYPEOF(crv) THEN
RETURN (valid_basis_curve_in_2d_wireframe(crv\curve_replica.
parent_curve));
ELSE
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.COMPOSITE_CURVE'
IN TYPEOF(crv) THEN
RETURN (SIZEOF(QUERY(ccs &lt;* crv\composite_curve.segments | NOT
valid_basis_curve_in_2d_wireframe(ccs.parent_curve))) = 0);
END_IF;
END_IF;
END_IF;
END_IF;
END_IF;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="valid_calendar_date">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="date">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="calendar_date"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="LOGICAL"/>
                                                                                                                                                                                        <algorithm>
CASE date.month_component OF
1 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
2 :
BEGIN
IF leap_year(date.year_component) THEN
RETURN ({1 &lt;= date.day_component &lt;= 29});
ELSE
RETURN ({1 &lt;= date.day_component &lt;= 28});
END_IF;
END;
3 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
4 :
RETURN ({1 &lt;= date.day_component &lt;= 30});
5 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
6 :
RETURN ({1 &lt;= date.day_component &lt;= 30});
7 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
8 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
9 :
RETURN ({1 &lt;= date.day_component &lt;= 30});
10 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
11 :
RETURN ({1 &lt;= date.day_component &lt;= 30});
12 :
RETURN ({1 &lt;= date.day_component &lt;= 31});
END_CASE;
RETURN (FALSE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="valid_measure_value">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="m">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="measure_value"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF 'REAL' IN TYPEOF(m) THEN
RETURN (m &gt; 0.0);
ELSE
IF 'INTEGER' IN TYPEOF(m) THEN
RETURN (m &gt; 0);
ELSE
RETURN (TRUE);
END_IF;
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="valid_units">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="m">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="measure_with_unit"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LENGTH_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.MASS_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.TIME_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.ELECTRIC_CURRENT_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.CELSIUS_TEMPERATURE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.LUMINOUS_INTENSITY_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.PLANE_ANGLE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.SOLID_ANGLE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.AREA_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.VOLUME_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.RATIO_MEASURE' IN
TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSITIVE_LENGTH_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF
'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE'
IN TYPEOF(m.value_component) THEN
IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
RETURN (TRUE);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="values_space_of">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="expr">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="generic_expression"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <typename
                                                                                                                                                                                          name="maths_space"/>
                                                                                                                                                                                        <algorithm>
LOCAL
e_prefix : STRING := 'FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.';
typenames : SET OF STRING := TYPEOF(expr);
END_LOCAL;
IF schema_prefix + 'MATHS_VARIABLE' IN typenames THEN
RETURN (expr\maths_variable.values_space);
END_IF;
IF e_prefix + 'EXPRESSION' IN typenames THEN
IF e_prefix + 'NUMERIC_EXPRESSION' IN typenames THEN
IF expr\numeric_expression.is_int THEN
IF e_prefix + 'INT_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\int_literal.the_value]));
ELSE
RETURN (the_integers);
END_IF;
ELSE
IF e_prefix + 'REAL_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\real_literal.the_value]));
ELSE
RETURN (the_reals);
END_IF;
END_IF;
END_IF;
IF e_prefix + 'BOOLEAN_EXPRESSION' IN typenames THEN
IF e_prefix + 'BOOLEAN_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\boolean_literal.the_value]));
ELSE
RETURN (the_booleans);
END_IF;
END_IF;
IF e_prefix + 'STRING_EXPRESSION' IN typenames THEN
IF e_prefix + 'STRING_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\string_literal.the_value]));
ELSE
RETURN (the_strings);
END_IF;
END_IF;
RETURN (?);
END_IF;
IF schema_prefix + 'MATHS_FUNCTION' IN typenames THEN
IF expression_is_constant(expr) THEN
RETURN (make_finite_space([expr]));
ELSE
RETURN (make_function_space(sc_equal, expr\maths_function.domain,
sc_equal, expr\maths_function.range));
END_IF;
END_IF;
IF schema_prefix + 'FUNCTION_APPLICATION' IN typenames THEN
RETURN (expr\function_application.func.range);
END_IF;
IF schema_prefix + 'MATHS_SPACE' IN typenames THEN
IF expression_is_constant(expr) THEN
RETURN (make_finite_space([expr]));
ELSE
RETURN (make_elementary_space(es_maths_spaces));
END_IF;
END_IF;
IF schema_prefix + 'DEPENDENT_VARIABLE_DEFINITION' IN typenames THEN
RETURN (values_space_of(expr\unary_generic_expression.operand));
END_IF;
IF schema_prefix + 'COMPLEX_NUMBER_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr]));
END_IF;
IF schema_prefix + 'LOGICAL_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\logical_literal.lit_value]));
END_IF;
IF schema_prefix + 'BINARY_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\binary_literal.lit_value]));
END_IF;
IF schema_prefix + 'MATHS_ENUM_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\maths_enum_literal.lit_value]));
END_IF;
IF schema_prefix + 'REAL_TUPLE_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\real_tuple_literal.lit_value]));
END_IF;
IF schema_prefix + 'INTEGER_TUPLE_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\integer_tuple_literal.lit_value]));
END_IF;
IF schema_prefix + 'ATOM_BASED_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\atom_based_literal.lit_value]));
END_IF;
IF schema_prefix + 'MATHS_TUPLE_LITERAL' IN typenames THEN
RETURN (make_finite_space([expr\maths_tuple_literal.lit_value]));
END_IF;
IF schema_prefix + 'PARTIAL_DERIVATIVE_EXPRESSION' IN typenames THEN
RETURN (drop_numeric_constraints(values_space_of(expr\
partial_derivative_expression.derivand)));
END_IF;
IF schema_prefix + 'DEFINITE_INTEGRAL_EXPRESSION' IN typenames THEN
RETURN (drop_numeric_constraints(values_space_of(expr\
definite_integral_expression.integrand)));
END_IF;
RETURN (?);
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <function
                                                                                                                                                                                        name="version_assignment_is_valid">
                                                                                                                                                                                        <parameter
                                                                                                                                                                                          name="aia">
                                                                                                                                                                                          <typename
                                                                                                                                                                                            name="applied_identification_assignment"/>
                                                                                                                                                                                        </parameter>
                                                                                                                                                                                        <builtintype
                                                                                                                                                                                          type="BOOLEAN"/>
                                                                                                                                                                                        <algorithm>
LOCAL
item : identification_item;
role : identification_role;
END_LOCAL;
role := aia.role;
IF role.name = 'version' THEN
REPEAT i := LOINDEX(aia.items) TO HIINDEX(aia.items);
item := aia.items[i];
IF SIZEOF(['FUNCTIONAL_DATA_AND_SCHEMATIC_REPRESENTATION_MIM_LF.' +
'VERSIONABLE_ITEM'] * TYPEOF(item)) = 0 THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
ELSE
RETURN (TRUE);
END_IF;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                      </function>

                                                                                                                                                                                      <rule
                                                                                                                                                                                        name="compatible_dimension"
                                                                                                                                                                                        appliesto="cartesian_point direction representation_context geometric_representation_context">
                                                                                                                                                                                        <where
                                                                                                                                                                                          label="wr1"
                                                                                                                                                                                          expression="SIZEOF(QUERY(x &lt;* cartesian_point | SIZEOF(QUERY(y &lt;* geometric_representation_context | item_in_context(x, y) AND (HIINDEX(x. coordinates) &lt;&gt; y.coordinate_space_dimension))) &gt; 0)) = 0">
                                                                                                                                                                                        </where>
                                                                                                                                                                                        <where
                                                                                                                                                                                          label="wr2"
                                                                                                                                                                                          expression="SIZEOF(QUERY(x &lt;* direction | SIZEOF(QUERY(y &lt;* geometric_representation_context | item_in_context(x, y) AND (HIINDEX(x. direction_ratios) &lt;&gt; y.coordinate_space_dimension))) &gt; 0)) = 0">
                                                                                                                                                                                        </where>
                                                                                                                                                                                      </rule>

                                                                                                                                                                                      <rule
                                                                                                                                                                                        name="validate_dependently_instantiable_entity_data_types"
                                                                                                                                                                                        appliesto="abs_function abstracted_expression_function acos_function and_expression annotation_text application_context application_context_element application_defined_function applied_classification_assignment approval_role approval_status area_in_set asin_function atan_function atom_based_literal b_spline_basis b_spline_curve b_spline_function basic_sparse_matrix binary_boolean_expression binary_function_call binary_generic_expression binary_literal binary_numeric_expression boolean_defined_function boolean_expression boolean_literal boolean_variable bounded_curve cartesian_complex_number_region cartesian_point cartesian_transformation_operator classification_assignment classification_role colour colour_specification comparison_equal comparison_expression comparison_greater comparison_greater_equal comparison_less comparison_less_equal comparison_not_equal complex_number_literal concat_expression conic constant_function contract contract_type cos_function curve_style_font_pattern date defined_function definite_integral_expression definite_integral_function description_attribute direction div_expression document document_representation_type document_type drawing_definition elementary_function environment equals_expression exp_function explicit_table_function expression expression_denoted_function extended_tuple_space externally_listed_data finite_function format_function founded_item function_application function_space functionally_defined_transformation general_linear_function generic_expression generic_literal generic_variable geometric_representation_item homogeneous_linear_function imported_curve_function imported_point_function imported_surface_function imported_volume_function index_expression int_literal integer_defined_function integer_tuple_literal interval_expression invisibility length_function like_expression linearized_table_function listed_complex_number_data listed_data listed_integer_data listed_logical_data listed_real_data listed_string_data literal_number log10_function log2_function log_function logical_literal maths_enum_literal maths_function maths_tuple_literal maths_variable maximum_function minimum_function minus_expression minus_function mod_expression mult_expression multiple_arity_boolean_expression multiple_arity_function_call multiple_arity_generic_expression multiple_arity_numeric_expression name_attribute not_expression numeric_defined_function numeric_expression numeric_variable odd_function one_direction_repeat_factor or_expression organization_role organization_type_role parallel_composed_function partial_derivative_expression partial_derivative_function person_and_organization_role person_role placement planar_box planar_extent plus_expression point polar_complex_number_region power_expression pre_defined_item presentation_area presentation_set presentation_style_assignment product_context product_definition_context quantifier_expression rationalize_function real_defined_function real_literal real_tuple_literal reindexed_array_function repackaging_function restriction_function role_association security_classification security_classification_level selector_function series_composed_function simple_boolean_expression simple_generic_expression simple_numeric_expression simple_string_expression sin_function slash_expression sql_mappable_defined_function square_root_function string_defined_function string_expression string_literal string_variable substring_expression surface symbol_target tan_function two_direction_repeat_factor unary_boolean_expression unary_function_call unary_generic_expression unary_numeric_expression value_function variable variable_semantics vector volume xor_expression">
                                                                                                                                                                                        <algorithm>
LOCAL
number_of_input_instances : INTEGER;
previous_in_chain : LIST OF GENERIC := [];
set_of_input_types : SET OF STRING := [];
all_instances : SET OF GENERIC := [];
END_LOCAL;
all_instances := xor_expression + volume + vector + variable_semantics +
variable + value_function + unary_numeric_expression +
unary_generic_expression + unary_function_call + unary_boolean_expression +
two_direction_repeat_factor + tan_function + symbol_target + surface +
substring_expression + string_variable + string_literal + string_expression
+ string_defined_function + square_root_function +
sql_mappable_defined_function + slash_expression + sin_function +
simple_string_expression + simple_numeric_expression +
simple_generic_expression + simple_boolean_expression +
series_composed_function + selector_function + security_classification_level
+ security_classification + role_association + restriction_function +
repackaging_function + reindexed_array_function + real_tuple_literal +
real_literal + real_defined_function + rationalize_function +
quantifier_expression + product_definition_context + product_context +
presentation_style_assignment + presentation_set + presentation_area +
pre_defined_item + power_expression + polar_complex_number_region + point +
plus_expression + planar_extent + planar_box + placement + person_role +
person_and_organization_role + partial_derivative_function +
partial_derivative_expression + parallel_composed_function +
organization_type_role + organization_role + or_expression +
one_direction_repeat_factor + odd_function + numeric_variable +
numeric_expression + numeric_defined_function + not_expression +
name_attribute + multiple_arity_numeric_expression +
multiple_arity_generic_expression + multiple_arity_function_call +
multiple_arity_boolean_expression + mult_expression + mod_expression +
minus_function + minus_expression + minimum_function + maximum_function +
maths_variable + maths_tuple_literal + maths_function + maths_enum_literal +
logical_literal + log_function + log2_function + log10_function +
literal_number + listed_string_data + listed_real_data + listed_logical_data
+ listed_integer_data + listed_data + listed_complex_number_data +
linearized_table_function + like_expression + length_function + invisibility
+ interval_expression + integer_tuple_literal + integer_defined_function +
int_literal + index_expression + imported_volume_function +
imported_surface_function + imported_point_function + imported_curve_function
+ homogeneous_linear_function + geometric_representation_item +
generic_variable + generic_literal + generic_expression +
general_linear_function + functionally_defined_transformation +
function_space + function_application + founded_item + format_function +
finite_function + externally_listed_data + extended_tuple_space +
expression_denoted_function + expression + explicit_table_function +
exp_function + equals_expression + environment + elementary_function +
drawing_definition + document_type + document_representation_type + document
+ div_expression + direction + description_attribute +
definite_integral_function + definite_integral_expression + defined_function
+ date + curve_style_font_pattern + cos_function + contract_type + contract
+ constant_function + conic + concat_expression + complex_number_literal +
comparison_not_equal + comparison_less_equal + comparison_less +
comparison_greater_equal + comparison_greater + comparison_expression +
comparison_equal + colour_specification + colour + classification_role +
classification_assignment + cartesian_transformation_operator +
cartesian_point + cartesian_complex_number_region + bounded_curve +
boolean_variable + boolean_literal + boolean_expression +
boolean_defined_function + binary_numeric_expression + binary_literal +
binary_generic_expression + binary_function_call + binary_boolean_expression
+ basic_sparse_matrix + b_spline_function + b_spline_curve + b_spline_basis
+ atom_based_literal + atan_function + asin_function + area_in_set +
approval_status + approval_role + applied_classification_assignment +
application_defined_function + application_context_element +
application_context + annotation_text + and_expression + acos_function +
abstracted_expression_function + abs_function;
number_of_input_instances := SIZEOF(all_instances);
REPEAT i := 1 TO number_of_input_instances;
set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
END_REPEAT;
                                                                                                                                                                                        </algorithm>
                                                                                                                                                                                        <where
                                                                                                                                                                                          label="wr1"
                                                                                                                                                                                          expression="dependently_instantiated(all_instances, set_of_input_types, previous_in_chain)">
                                                                                                                                                                                        </where>
                                                                                                                                                                                      </rule>

                                                                                                                                                                                      <rule
                                                                                                                                                                                        name="version_assignments_are_valid"
                                                                                                                                                                                        appliesto="applied_identification_assignment">
                                                                                                                                                                                        <where
                                                                                                                                                                                          label="wr1"
                                                                                                                                                                                          expression="SIZEOF(QUERY(aia &lt;* applied_identification_assignment | NOT version_assignment_is_valid(aia))) = 0">
                                                                                                                                                                                        </where>
                                                                                                                                                                                      </rule>

                                                                                                                                                                                    </schema>
                                                                                                                                                                                  </express>
