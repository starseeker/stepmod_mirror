<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.11 2005/04/05 12:46:03 budreckytej Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="functional_decomposition_to_assembly_design" part="1675" version="1" sc4.working_group="12" wg.number="3416" wg.number.arm="3417" wg.number.mim="3418" checklist.internal_review="3675" checklist.project_leader="3676" checklist.convener="3677" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/04/05 12:46:03 $" rcs.revision="$Revision: 1.11 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, electrical, layered product, assembly joint, analysis, simulation, packaging application
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the assignment of a functional unit in a network definition to an element in the assembly.  Usually, this information is provided by a packaging application.
	 This module defines the different means of describing swapping accomplished within a design.
	 The types of swapping covered are the ones between gates in a single package instance, between gates in different package instances, and between terminals in a gate.  
	 Constraints on swapping are not included in this module. The terminals swapped with this module are on the functional elements in the hierarchical design network listing and not the flattened network listing. Applications that perform swapping on flattened representations will need to map to the hierarchical representation.  This part of ISO 103030 extends "Functional decomposition to design" part to include allocation of functional unit to joint concept and is primarily intended for detailed and extended analysis of a design.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>functional unit allocation to physical design component;</li>
   <li>functional unit allocation to physical design assembly joint;</li>
   <li>gate swap;</li>
   <li>terminal swap;</li>
    <li>items within the scope of application module <module_ref linkend="assembly_technology:1_scope">Assembly technology</module_ref>, ISO/CD-TS 10303-1649.</li>
    </inscope>

 <!-- Items out of scope
 <outscope>
   <li>xxxx</li>
 </outscope>
 -->
 
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Design_functional_unit_allocation_to_assembly_joint" extensible="NO">
            <aimelt xml:space="preserve">product_definition_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{product_definition_relationship
product_definition_relationship.name =  'design functional unit allocation to assembly joint'}
</refpath>
            <aa attribute="implementation" assertion_to="Assembly_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect =&gt;
assembly_joint
</refpath>
            </aa>
            <aa attribute="functional_design_definition_path" assertion_to="Design_composition_path">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition
{product_definition.id = 'design composition path'}
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
