<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="functional_decomposition_to_design" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2006/01/11 08:13:13 $" rcs.revision="$Revision: 1.11 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Functional_decomposition_to_design_arm
   <express_ref linkend="functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm">
</ext_description>

<!-- +++++++++++ Reference_functional_unit_assignment_to_part +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part">
	A <b>Reference_functional_unit_assignment_to_part</b> is a means to assign one specific path in the function reference network graph to an <b>implementation</b>.
	A <b>Reference_functional_unit_assignment_to_part</b> provides support for exchange of information needed to determine swappability of functions assigned to devices.
</ext_description>

<!-- swap_code -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.swap_code">
	specifies the string that is the type of exchange that is valid. The value of this attribute need not be specified.
</ext_description>

<!-- path_alias -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.path_alias">
	specifies a string that is the identifier for the <b>Reference_functional_unit_assignment_to_part</b>.
</ext_description>

<!-- of_property -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.of_property">
	specifies a role of the 
	<express_ref linkend="Measure_representation:arm:Measure_representation_arm.Property_value_representation"/>  
	for the <b>Reference_functional_unit_assignment_to_part</b>. 
	There may be more than one <b>of_property</b> for a <b>Reference_functional_unit_assignment_to_part</b>. 
	The value of this attribute need not be specified.
</ext_description>

<!-- implementation -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.implementation">
	specifies a role of the 
	<express_ref linkend="Part_view_definition:arm:Part_view_definition_arm.Part_view_definition"/> 
	for the <b>Reference_functional_unit_assignment_to_part</b>.
</ext_description>

<!-- functional_design_definition_path -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.functional_design_definition_path">
	specifies a role of the 
	<express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Reference_composition_path"/> 
	for the <b>Reference_functional_unit_assignment_to_part</b>.
</ext_description>

<!-- UR1 -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_part.ur:UR1">
The combination of <b>implementation</b> and <b>path_alias</b> shall be unique within a population of <b>Reference_functional_unit_assignment_to_part</b>.
</ext_description>

<!-- +++++++++++ Reference_functional_unit_assignment_to_template +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template">
	A <b>Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template</b> 
	is a means to assign one specific path in the function reference network graph to an <b>implementation</b>.
	A <b>Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template</b> 
	provides support for exchange of information needed to determine swappability of functions assigned to templates.
</ext_description>

<!-- functional_design_definition_path -->
<ext_description 	linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.functional_design_definition_path">
	specifies a role of the 
	<express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Reference_composition_path"/>
	for the <b>Reference_functional_unit_assignment_to_template</b>.
</ext_description>

<!-- implementation -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.implementation">
	specifies a role of the 
	<express_ref linkend="Physical_layout_template:arm:Physical_layout_template_arm.Template_definition"/>
	for the <b>Reference_functional_unit_assignment_to_template</b>.		
</ext_description>

<!-- of_property -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.of_property">
	specifies a set of one or more 
	<express_ref linkend="Measure_representation:arm:Measure_representation_arm.Property_value_representation"/> 
	for the <b>Reference_functional_unit_assignment_to_template</b>. The value of this attribute need not be specified.
</ext_description>

<!-- path_alias -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.path_alias">
	specifies alternate text for the path for <b>Reference_functional_unit_assignment_to_template</b>.
</ext_description>

<!-- swap_code -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.swap_code">
	specifies a string for the <b>Reference_functional_unit_assignment_to_template</b>. The value of this attribute need not be specified.
</ext_description>

<!-- UR1 -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_functional_unit_assignment_to_template.ur:UR1">
	The combination of <b>implementation</b> and <b>path_alias</b> shall be unique within a population of the <b>Reference_functional_unit_assignment_to_template</b>.
</ext_description>




<!-- +++++++++++ Design_functional_unit_allocation_to_reference_functional_unit +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_reference_functional_unit"><p>
 A <b>Design_functional_unit_allocation_to_reference_functional_unit</b> is an assignment of a <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> in a <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_composition_path"/> to a  <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> in a <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Reference_composition_path"/> for the functional definition of a product.

</p><note number="1">
This provides the capability to exchange a functional decomposition that an enterprise reuses in multiple designs.
</note>
<note number="2">
The library functional hierarchy, if provided, is required to be a network definition with the constraint that 
only external references on the root node of the network structure will be mapped to physical terminals of 
the reused product design.
</note>
<note number="3">
The allocation relationship in this Application Object is critical in mapping between a functional design and a physical implementation of that design, because this part of ISO 10303 relies on the reference mapping between a functional definition in a library and the physical implementation of that functional definition in that library, usually in a packaged part, to identify the necessary definitions that need to be instantiated in the physical design.
</note>

</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_reference_functional_unit.design_definition_path">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_composition_path"/> for the 
<b>Design_functional_unit_allocation_to_reference_functional_unit</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_reference_functional_unit.reference_definition_path">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Reference_composition_path"/> for the 
<b>Design_functional_unit_allocation_to_reference_functional_unit</b>.
</ext_description>
<!-- +++++++++++ Reference_composition_path +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_composition_path">
A <b>Reference_composition_path</b> is one path through the function reference network graph.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_composition_path.reference_functional_unit">
specifies the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> that participates as a link to the leaf node in the functional decomposition 
hierarchical definition in the <b>Reference_composition_path</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Reference_composition_path.path_element">
specifies a role of the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> for the 
<b>Reference_composition_path</b>. There shall be one or more  <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> for a <b>Reference_composition_path</b>. 
</ext_description>
<!-- +++++++++++ Component_swap_specification +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Component_swap_specification"><p>

A <b>Component_swap_specification</b> is a type of <express_ref linkend="Design_management:arm:Design_management_arm.Change_design_object_management_relationship"/>.
The <b>Component_swap_specification</b> specifies which component has been swapped for which other component in a design; both the swapped-out and the swapped-in components are specified.
</p><note>
The <b>Component_swap_specification</b> supports the component identification portion of the gate 
swap specification. It is necessary when components, such as the microcircuits 
known as U1, U2, etc. are being swapped.
</note>
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Component_swap_specification.previous_design_object">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component"/> for the original design object before swapping, for the <b>Component_swap_specification</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Component_swap_specification.current_design_object">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component"/> for the resulting design object after swapping, for the <b>Component_swap_specification</b>.
</ext_description>
<!-- +++++++++++ Design_functional_unit_allocation_to_assembly_component +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component">
	A <b>Design_functional_unit_allocation_to_assembly_component</b> is the relationship between the 
	<express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_composition_path"/> 
	and the 
	<express_ref linkend="Physical_unit_design_view:arm:Physical_unit_design_view_arm.Assembly_component"/> 
	that performs the required function. 
</ext_description>

<!-- swap_code -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.swap_code">
	specifies the text that is the type of replacement that is valid.
</ext_description>

<!-- path_alias -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.path_alias">
<p> 
	specifies the label that is the identifier in the context of the <b>implementation</b> for the <b>Design_functional_unit_allocation_to_assembly_component</b>.
</p>
	<example>
		"A", "B", "C", "D", are typical <b>path_alias</b> for a quad NAND gate part.
	</example>
</ext_description>

<!-- of_property -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.of_property">
	specifies the 
	<express_ref linkend="Measure_representation:arm:Measure_representation_arm.Property_value_representation"/> 
	for the <b>Design_functional_unit_allocation_to_assembly_component</b>. 
	There may be more than one <b>of_property</b> for a <b>Design_functional_unit_allocation_to_assembly_component</b>. 
	The value of this attribute need not be specified. 
</ext_description>

<!-- local_swappable -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.local_swappable">
	specifies a boolean value that indicates if occurrences of the associated path can be exchanged within the context of an  
	<express_ref linkend="Physical_unit_design_view:arm:Physical_unit_design_view_arm.Assembly_component"/>.
</ext_description>

<!-- global_swappable -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.global_swappable">
	specifies a boolean value that indicates if occurrences of the associated path can be exchanged within the context of an  
	<express_ref linkend="Product_identification:arm:Product_identification_arm.Product"/> being designed.
</ext_description>

<!-- implementation -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.implementation">
	specifies the 
	<express_ref linkend="Physical_unit_design_view:arm:Physical_unit_design_view_arm.Assembly_component"/> 
	for the <b>Design_functional_unit_allocation_to_assembly_component</b>.
</ext_description>

<!-- functional_design_definition_path -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.functional_design_definition_path">
	specifies the 
	<express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_composition_path"/> 
	for the <b>Design_functional_unit_allocation_to_assembly_component</b>.
</ext_description>

<!-- UR1 -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_assembly_component.ur:UR1">
	The combination of <b>implementation</b> and <b>path_alias</b> shall be unique within a population of 
	<b>Design_functional_unit_allocation_to_assembly_component</b>.
</ext_description>


<!-- +++++++++++ Design_composition_path +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Design_composition_path"><p>
 A <b>Design_composition_path</b> is a collection of <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> that together compose one path through the complete functional 
definition that has the <b>design_functional_unit</b> as a reference to the <express_ref linkend="Functional_usage_view:arm:Functional_usage_view_arm.Functional_unit_definition"/> that is the leaf node.
The functional definition has a root node that is a <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit_network_definition"/>.  The path is then established by starting at the leaf element and traversing the collection of <b>path_element</b> in the sequence in which they exist in the functional definition between the leaf element and the root element.  Each member of <b>path_element</b> establishes a link in the sequence.
The <b>Design_composition_path</b> is a mapping source for a packaging application to use to map between a hierarchical description and a flattened description of a network.
</p><note>
The types of node elements that are composing a directed acyclic graph must be consistent.  This part of ISO 10303 uses <express_ref linkend="Functional_usage_view:arm:Functional_usage_view_arm.Functional_unit_definition"/> as the node elements.
</note>
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Design_composition_path.design_functional_unit">
specifies the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/>
for the leaf element for the <b>Design_composition_path</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Design_composition_path.path_element">
specifies the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> for the 
<b>Design_composition_path</b>. There shall be one or more  <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit"/> for a <b>Design_composition_path</b>. 
</ext_description>
<!-- +++++++++++ Gate_path_swap_specification +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Gate_path_swap_specification"><p>

A <b>Gate_path_swap_specification</b> is a type of <express_ref linkend="Design_management:arm:Design_management_arm.Change_design_object_management_relationship"/>. This entity explicitly states that a path to a functional unit in a design shall be changed to a new path in the 
library of functional unit definitions.
</p><note>
Normally the new path is based on the same root functional 
unit definition in the library, leading to a different path in the same technology, but there is no restriction in 
the standard that prohibits switching to a different functional unit definition in the library. If there is a new 
functional unit definition as root, other design changes will likely need to occur, but the mapping to 
identify those explicitly and relate them to this entity is not standardized, except through the use of the 
requirement occurrence concept. Specifically, this entity needs to be used in conjunction with the 
component swap specification to swap between components if the path in the library is also changing.
</note>
<example>
An example is in the case where a change is being made from one microcircuit and its terminal, U1-A, to 
another microcircuit and terminal, U2-C.
</example>
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Gate_path_swap_specification.previous_design_object">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_reference_functional_unit"/> from 
which the swap was made in the <b>Gate_path_swap_specification</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Gate_path_swap_specification.current_design_object">
specifies the <express_ref linkend="Functional_decomposition_to_design:arm:Functional_decomposition_to_design_arm.Design_functional_unit_allocation_to_reference_functional_unit"/> that 
results from the swap in the <b>Gate_path_swap_specification</b>.
</ext_description>
<!-- +++++++++++ Terminal_swap_specification +++++++++++ -->
<ext_description linkend="Functional_decomposition_to_design_arm.Terminal_swap_specification"><p>
A <b>Terminal_swap_specification</b> is a type of <express_ref linkend="Design_management:arm:Design_management_arm.Change_design_object_management_relationship"/>.
The <b>Terminal_swap_specification</b> is part of the swapping specification from the previous design definition to the current design definition.
It identifies the terminal in the previous design that was connected to a node, and the terminal in the current design that is connected to that node instead.
</p><note>
With the pin mapping between the functional and physical representations in the library,
this is sufficient information to derive the swapping at the component terminal;
however, note that this is in the previous and present design definitions 
and not in the library functional definition.
</note>
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Terminal_swap_specification.current_design_object">
specifies the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit_terminal_node_assignment"/> of the terminal node after the swap for the 
<b>Terminal_swap_specification</b>.
</ext_description>
<ext_description linkend="Functional_decomposition_to_design_arm.Terminal_swap_specification.previous_design_object">
specifies the <express_ref linkend="Network_functional_design_view:arm:Network_functional_design_view_arm.Functional_unit_terminal_node_assignment"/> of the terminal node before the swap for the 
<b>Terminal_swap_specification</b>.
</ext_description>
</ext_descriptions>

