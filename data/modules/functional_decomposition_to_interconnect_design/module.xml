<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.18 2005/11/03 07:30:16 liutkuviene Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="functional_decomposition_to_interconnect_design" 
	part="1677" 
	version="1" 
	sc4.working_group="12" 
	wg.number="3977" 
	wg.number.arm="3978" 
	wg.number.mim="3979" 
	wg.number.supersedes="3422" 
	wg.number.arm.supersedes="3423" 
	wg.number.mim.supersedes="3424"
	checklist.internal_review="3818" 
	checklist.project_leader="3819" 
	checklist.convener="3820" 
	status="TS" 
	language="E" 
	publication.year="2006" 
	published="y" 
	rcs.date="$Date: 2005/11/03 07:30:16 $" rcs.revision="$Revision: 1.18 $" development.folder="dvlp">

 <keywords>
    module, electrical, layered product, analysis, simulation, packaging application, interconnect
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the assignment of a functional unit in a network definition to an element in the Interconnect_module.
	 This module defines the different means of performing swapping within a design.  
	 The types of swapping covered are the ones between gates in a single printed part, between identical gates in different instances of a printed part, and between terminals of identical type and behaviour in a gate.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>functional unit allocation to layout design component;</li>
   <li>functional unit allocation to embedded design component;</li>
   <li>gate swap;</li>
   <li>terminal swap;</li>
    
        
    <li>items within the scope of application module <module_ref linkend="fabrication_joint:1_scope">Fabrication joint</module_ref>, ISO/CD-TS 10303-1668;</li>
<li>items within the scope of application module <module_ref linkend="network_functional_design_view:1_scope">Network functional design view</module_ref>, ISO/CD-TS 10303-1704.</li>
</inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Design_functional_unit_allocation_to_fabrication_joint" extensible="NO">
            <aimelt xml:space="preserve">product_definition_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{product_definition_relationship
product_definition_relationship.id =  'design functional unit allocation to fabrication joint'}
</refpath>
            <aa attribute="implementation" assertion_to="Fabrication_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect =&gt;
fabrication_joint
</refpath>
            </aa>
            <aa attribute="functional_design_definition_path" assertion_to="Design_composition_path">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition
{product_definition.id = 'design composition path'}
</refpath>
            </aa>
        </ae>
    <ae entity="Transmission_line_functional_unit_terminal_allocation" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'transmission line functional unit terminal allocation'}
</refpath>
            <aa attribute="transmission_line_functional_unit_terminal" assertion_to="Functional_unit_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'unit terminal'}
shape_aspect =&gt;
component_functional_terminal
</refpath>
            </aa>
            <aa attribute="implementation" assertion_to="Printed_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'printed component join terminal'}
shape_aspect =&gt;
component_feature =&gt;				
laminate_component_feature =&gt;	
laminate_component_join_terminal 
</refpath>
            </aa>
            <aa attribute="functional_unit_design_path" assertion_to="Transmission_line_functional_unit_to_routed_printed_component_allocation">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{[shape_aspect
shape_aspect.description = 'printed component join terminal']
[shape_aspect =&gt;
component_feature =&gt;
component_terminal]}
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'terminal in component'}
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name =  'transmission line to routed printed component allocation'}
</refpath>
            </aa>
        </ae>
	<ae entity="Design_functional_unit_allocation_to_assembly_component" original_module="functional_decomposition_to_design" extensible="NO">
		<aimelt xml:space="preserve">
			(/SUBTYPE(Transmission_line_functional_unit_to_routed_printed_component_allocation)/)
		</aimelt>
	</ae>
    <ae entity="Transmission_line_functional_unit_to_routed_printed_component_allocation" extensible="NO">
            <aimelt xml:space="preserve">product_definition_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{product_definition_relationship
product_definition_relationship.name =  'transmission line to routed printed component allocation'}
</refpath>
            <aa attribute="implementation" assertion_to="Routed_printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component =&gt;
routed_printed_component
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
