<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" reference="ISO/TS 10303-1705">
   <application name="JSDAI" owner="LKSoft" source="functional_usage_view_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Functional_usage_view_arm">
      <interface kind="use" schema="Analytical_model_arm"/>
      <interface kind="use" schema="Shape_property_assignment_arm"/>
      <interface kind="reference" schema="Support_resource_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <type name="fuuv_am_port_assignment_select">
         <select basedon="analytical_model_port_assignment_select" extensible="YES" genericentity="YES" selectitems="Functional_unit_usage_view_terminal_definition"/>
      </type>
      <type name="fuuv_classification_item">
         <select basedon="classification_item" extensible="YES" genericentity="YES" selectitems="Functional_unit_usage_view_terminal_definition"/>
      </type>
      <entity name="Equivalent_functional_terminals_assignment">
         <explicit name="name">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="equivalent_terminals">
            <aggregate lower="2" type="SET" upper="?"/>
            <typename name="Functional_unit_usage_view_terminal_definition"/>
         </explicit>
      </entity>
      <entity name="Equivalent_functional_unit_definition_assignment">
         <explicit name="name">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="equivalent_functional_unit_definitions">
            <aggregate lower="2" type="SET" upper="?"/>
            <typename name="Functional_unit_definition"/>
         </explicit>
      </entity>
      <entity name="Functional_product" supertypes="Information_product">
         <unique label="UR1">
            <unique.attribute attribute="SELF\Product.id"/>
         </unique>
      </entity>
      <entity name="Functional_terminal_group">
         <explicit name="name">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="group_description">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="group_type">
            <builtintype type="STRING"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="name"/>
         </unique>
      </entity>
      <entity name="Functional_terminal_group_assignment">
         <explicit name="composed_group">
            <typename name="Functional_terminal_group"/>
         </explicit>
         <explicit name="functional_usage_view_terminal">
            <typename name="Scalar_terminal_definition"/>
         </explicit>
      </entity>
      <entity abstract.supertype="YES" name="Functional_unit_definition" supertypes="Information_definition Item_shape">
         <explicit name="defined_version">
            <typename name="Functional_version"/>
            <redeclaration entity-ref="Product_view_definition"/>
         </explicit>
         <derived expression="SELF" name="described_element">
            <typename name="shapeable_item"/>
            <redeclaration entity-ref="Item_shape"/>
         </derived>
      </entity>
      <entity name="Functional_unit_make_from_relationship" supertypes="View_definition_relationship">
         <explicit name="relating_view">
            <typename name="Functional_unit_usage_view"/>
            <redeclaration entity-ref="View_definition_relationship"/>
         </explicit>
         <explicit name="related_view">
            <typename name="Functional_unit_usage_view"/>
            <redeclaration entity-ref="View_definition_relationship"/>
         </explicit>
         <where expression="acyclic_functional_unit_make_from_relationship (SELF, [related_view], &#10;            'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP')" label="WR1"/>
      </entity>
      <entity name="Functional_unit_usage_view" supertypes="Functional_unit_definition">
         <derived expression="get_ama(access_mechanism[1])" name="analytical_model_application_reference">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Analytical_model_application"/>
         </derived>
         <inverse attribute="associated_functional_unit_definition" entity="Functional_unit_usage_view_terminal_definition" name="access_mechanism">
            <inverse.aggregate lower="0" type="SET" upper="?"/>
         </inverse>
         <where expression="SIZEOF(analytical_model_application_reference) &lt;= 1" label="WR1"/>
         <where expression="NOT(SIZEOF(analytical_model_application_reference) = 1) OR&#10;        (SIZEOF(QUERY( am &lt;* access_mechanism |&#10;           NOT((SIZEOF(USEDIN(am,'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM')) = 0) OR&#10;              (SIZEOF(QUERY( ampa &lt;* USEDIN(am, 'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM') |&#10;                 NOT(analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application) &#10;                 )) = 0))&#10;        )) = 0)" label="WR2"/>
      </entity>
      <entity name="Functional_unit_usage_view_terminal_definition" super.expression="Scalar_terminal_definition">
         <explicit name="associated_functional_unit_definition">
            <typename name="Functional_unit_usage_view"/>
         </explicit>
         <explicit name="signal_name">
            <builtintype type="STRING"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="signal_name"/>
            <unique.attribute attribute="associated_functional_unit_definition"/>
         </unique>
      </entity>
      <entity name="Functional_unit_usage_view_terminal_definition_make_from_relationship">
         <explicit name="associated_make_from">
            <typename name="Functional_unit_make_from_relationship"/>
         </explicit>
         <explicit name="reusable_feature">
            <typename name="Functional_unit_usage_view_terminal_definition"/>
         </explicit>
         <explicit name="resultant_feature">
            <typename name="Functional_unit_usage_view_terminal_definition"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="reusable_feature"/>
            <unique.attribute attribute="resultant_feature"/>
         </unique>
         <where expression="reusable_feature :&lt;&gt;: resultant_feature" label="WR1"/>
         <where expression="reusable_feature.associated_functional_unit_definition :&lt;&gt;: resultant_feature.associated_functional_unit_definition" label="WR2"/>
         <where expression="reusable_feature.associated_functional_unit_definition :=: &#10;      &#9;&#9;associated_make_from\Functional_unit_make_from_relationship.relating_view" label="WR3"/>
         <where expression="resultant_feature.associated_functional_unit_definition :=: &#10;      &#9;&#9;associated_make_from\Functional_unit_make_from_relationship.related_view" label="WR4"/>
         <where expression="acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship&#10;        (SELF, [resultant_feature], &#10;        'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP')" label="WR5"/>
      </entity>
      <entity name="Functional_version" supertypes="Information_version">
         <explicit name="of_product">
            <typename name="Functional_product"/>
            <redeclaration entity-ref="Product_version"/>
         </explicit>
      </entity>
      <entity name="Scalar_terminal_definition" supertypes="Functional_unit_usage_view_terminal_definition"/>
      <entity name="Scalar_terminal_definition_link">
         <explicit name="precedent_terminal_definition">
            <typename name="Scalar_terminal_definition"/>
         </explicit>
         <explicit name="subsequent_terminal_definition">
            <typename name="Scalar_terminal_definition"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="precedent_terminal_definition"/>
            <unique.attribute attribute="subsequent_terminal_definition"/>
         </unique>
         <where expression="precedent_terminal_definition :&lt;&gt;: subsequent_terminal_definition" label="WR1"/>
         <where expression="acyclic_scalar_terminal_definition_link (SELF,&#10;        [subsequent_terminal_definition],&#10;        'FUNCTIONAL_USAGE_VIEW_ARM.SCALAR_TERMINAL_DEFINITION_LINK')" label="WR2"/>
      </entity>
      <function name="acyclic_functional_unit_make_from_relationship">
         <parameter name="relation">
            <typename name="Functional_unit_make_from_relationship"/>
         </parameter>
         <parameter name="relatives">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Functional_unit_usage_view"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     x : SET OF Functional_unit_make_from_relationship;
  END_LOCAL;

    IF relation.relating_view IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.relating_view,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP.' +
      'RELATED_VIEW')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_functional_unit_make_from_relationship(x[i], relatives +
        relation.relating_view, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship">
         <parameter name="relation">
            <typename name="Functional_unit_usage_view_terminal_definition_make_from_relationship"/>
         </parameter>
         <parameter name="relatives">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Functional_unit_usage_view_terminal_definition"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
       x : SET OF Functional_unit_usage_view_terminal_definition_make_from_relationship;
     END_LOCAL;
    
     IF relation.reusable_feature IN relatives THEN
       RETURN (FALSE);
     END_IF;
     x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.reusable_feature,
      'FUNCTIONAL_USAGE_VIEW_ARM.' +
      'FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP.' +
      'RESULTANT_FEATURE')) | specific_relation IN TYPEOF(pd));
     REPEAT i := 1 TO HIINDEX(x);
       IF NOT
         acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship(x[i],
         relatives + relation.reusable_feature, specific_relation) THEN
           RETURN (FALSE);
       END_IF;
     END_REPEAT;
    RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_scalar_terminal_definition_link">
         <parameter name="relation">
            <typename name="Scalar_terminal_definition_link"/>
         </parameter>
         <parameter name="relatives">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Scalar_terminal_definition"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
      x : SET OF Scalar_terminal_definition_link;
    END_LOCAL;

    IF relation.precedent_terminal_definition IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.precedent_terminal_definition,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'SCALAR_TERMINAL_DEFINITION_LINK.' +
      'SUBSEQUENT_TERMINAL_DEFINITION')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_scalar_terminal_definition_link(x[i], relatives +
        relation.precedent_terminal_definition, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
   RETURN (TRUE);</algorithm>
      </function>
      <function name="get_ama">
         <parameter name="input">
            <typename name="analytical_model_port_assignment_select"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Analytical_model_application"/>
         <algorithm>LOCAL
	ama : SET[0:?] OF Analytical_model_application := [];  --this gives us access to the information base
	ampa : SET[0:?] OF Analytical_model_port_assignment :=[];
   END_LOCAL;
	ampa := bag_to_set(USEDIN (input, 'ANALYTICAL_MODEL_ARM.'+'ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'));
	-- iterate over ampa
	REPEAT i := 1 to SIZEOF(ampa) by 1;
		ama := ama + ampa[i].associated_analytical_model_application;
	END_REPEAT;

	RETURN(ama);</algorithm>
      </function>
   </schema>
</express>
