<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-11-28T13:54:08" rcs.revision="1.0" description.file="arm_descriptions.xml">
<application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="functional_usage_view_arm schema_instance"/>
<schema name="Functional_usage_view_arm">
<interface kind="use" schema="Analytical_model_arm"/>
<interface kind="use" schema="Product_view_definition_relationship_arm"/>
<interface kind="reference" schema="Product_identification_arm">
<interfaced.item name="types_of_product"/>
</interface>
<type name="fuuv_am_port_assignment_select">
<select extensible="YES" genericentity="YES" basedon="analytical_model_port_assignment_select" selectitems="Functional_unit_usage_view_terminal_definition"/>
</type>
<entity name="Equivalent_functional_terminals_assignment">
<explicit name="name">
<builtintype type="STRING"/>
</explicit>
<explicit name="equivalent_terminals">
<aggregate type="SET" lower="2" upper="?"/>
<typename name="Functional_unit_usage_view_terminal_definition"/>
</explicit>
</entity>
<entity name="Equivalent_functional_unit_definition_assignment">
<explicit name="name">
<builtintype type="STRING"/>
</explicit>
<explicit name="equivalent_functional_unit_definitions">
<aggregate type="SET" lower="2" upper="?"/>
<typename name="Functional_unit_definition"/>
</explicit>
</entity>
<entity name="Functional" supertypes="Information_product">
<where label="WR1" expression="SIZEOF([ 'functional' ] * types_of_product(SELF))= 1"/>
</entity>
<entity name="Functional_terminal_group">
<explicit name="name">
<builtintype type="STRING"/>
</explicit>
<explicit name="group_description">
<builtintype type="STRING"/>
</explicit>
<explicit name="group_type">
<builtintype type="STRING"/>
</explicit>
<unique label="UR1">
<unique.attribute attribute="name"/>
</unique>
</entity>
<entity name="Functional_terminal_group_assignment">
<explicit name="composed_group">
<typename name="Functional_terminal_group"/>
</explicit>
<explicit name="functional_usage_view_terminal">
<typename name="Scalar_terminal_definition"/>
</explicit>
</entity>
<entity name="Functional_unit_definition" abstract.supertype="YES" supertypes="Product_view_definition">
<explicit name="defined_version">
<typename name="Functional_version"/>
<redeclaration entity-ref="Product_view_definition"/>
</explicit>
</entity>
<entity name="Functional_unit_make_from_relationship" supertypes="View_definition_relationship">
<explicit name="relating_view">
<typename name="Functional_unit_usage_view"/>
<redeclaration entity-ref="View_definition_relationship"/>
</explicit>
<explicit name="related_view">
<typename name="Functional_unit_usage_view"/>
<redeclaration entity-ref="View_definition_relationship"/>
</explicit>
</entity>
<entity name="Functional_unit_usage_view" supertypes="Functional_unit_definition">
<derived name="analytical_model_application_reference" expression="bag_to_set(USEDIN(access_mechanism[1],'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'))">
<aggregate type="SET" lower="0" upper="?"/>
<typename name="Analytical_model_application"/>
</derived>
<inverse name="access_mechanism" entity="Functional_unit_usage_view_terminal_definition" attribute="associated_functional_unit_definition">
<inverse.aggregate type="SET" lower="1" upper="?"/>
</inverse>
<where label="WR1" expression="SIZEOF(analytical_model_application_reference) &lt;= 1"/>
<where label="WR2" expression="NOT(SIZEOF(analytical_model_application_reference) = 1) OR&#10;        (SIZEOF(QUERY( am &lt;* access_mechanism |&#10;           NOT((SIZEOF(USEDIN(am,'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM')) = 0) OR&#10;              (SIZEOF(QUERY( ampa &lt;* USEDIN(am, 'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM') |&#10;                 NOT(analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application) &#10;                 )) = 0))&#10;        )) = 0)"/>
</entity>
<entity name="Functional_unit_usage_view_terminal_definition" super.expression="Scalar_terminal_definition">
<explicit name="associated_functional_unit_definition">
<typename name="Functional_unit_usage_view"/>
</explicit>
<explicit name="signal_name">
<builtintype type="STRING"/>
</explicit>
<unique label="UR1">
<unique.attribute attribute="signal_name"/>
<unique.attribute attribute="associated_functional_unit_definition"/>
</unique>
</entity>
<entity name="Functional_unit_usage_view_terminal_definition_make_from_relationship">
<explicit name="associated_make_from">
<typename name="Functional_unit_make_from_relationship"/>
</explicit>
<explicit name="reusable_feature">
<typename name="Functional_unit_usage_view_terminal_definition"/>
</explicit>
<explicit name="resultant_feature">
<typename name="Functional_unit_usage_view_terminal_definition"/>
</explicit>
<unique label="UR1">
<unique.attribute attribute="reusable_feature"/>
<unique.attribute attribute="resultant_feature"/>
</unique>
<where label="WR1" expression="reusable_feature :&lt;&gt;: resultant_feature"/>
<where label="WR2" expression="reusable_feature.associated_functional_unit_definition :&lt;&gt;: resultant_feature.associated_functional_unit_definition"/>
</entity>
<entity name="Functional_version" supertypes="Information_version">
<explicit name="of_product">
<typename name="Functional"/>
<redeclaration entity-ref="Product_version"/>
</explicit>
</entity>
<entity name="Scalar_terminal_definition" supertypes="Functional_unit_usage_view_terminal_definition"/>
<entity name="Scalar_terminal_definition_link">
<explicit name="precedent_terminal_definition">
<typename name="Scalar_terminal_definition"/>
</explicit>
<explicit name="subsequent_terminal_definition">
<typename name="Scalar_terminal_definition"/>
</explicit>
<unique label="UR1">
<unique.attribute attribute="precedent_terminal_definition"/>
<unique.attribute attribute="subsequent_terminal_definition"/>
</unique>
<where label="WR1" expression="precedent_terminal_definition :&lt;&gt;: subsequent_terminal_definition"/>
</entity>
<function name="bag_to_set">
<parameter name="the_bag">
<aggregate type="BAG" lower="0" upper="?"/>
<builtintype type="GENERIC"/>
</parameter>
<aggregate type="SET" lower="0" upper="?"/>
<builtintype type="GENERIC"/>
<algorithm>LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);</algorithm>
</function>
</schema>
</express>
