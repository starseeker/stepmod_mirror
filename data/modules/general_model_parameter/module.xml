<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.10 2006/04/19 18:56:33 dmprice Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="general_model_parameter"
   part="1472"
   version="1"
   sc4.working_group="12"
   wg.number="00000"
   wg.number.arm=""
   wg.number.mim=""
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="WD"
   language="E"
   publication.year="2006"
   publication.date=""
   published="n"
   rcs.date="$Date: 2006/04/19 18:56:33 $"
   rcs.revision="$Revision: 1.10 $"
   development.folder="dvlp">

 <keywords>
    module, paremeter, model parameter
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
    <li>xxxxx</li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
    <projlead ref="ap233.projlead"/>
   <editor ref="david.price"/> 
	 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of general model parameters. A general model parameter is
		 an input, output, or both, related to a model of
		 some functionality, simulation or analysis.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>the representation of a general model parameter</li>
	 <li>the representation of the default value of the parameter</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>relating a general model parameter to a model</li>
	 <li>the representation of the actual value of the general model parameter for input or output</li>
 </outscope>


 <normrefs>
 <normref.inc normref="uml2.-" ></normref.inc>
 <normref.inc normref="ietf3986.-" ></normref.inc>
 </normrefs>


 <abbreviations>
 <abbreviation.inc linkend="URI" ></abbreviation.inc >
 </abbreviations>

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

<usage_guide>
<p>Implementations of this part of ISO 10303 make use of the capability to classify an 
entity type using <express_ref linkend="classification_assignment:arm:Classification_assignment_arm.Classification_assignment"/>.
This annex contains a subclause for each entity type defined in this part of ISO 10303 for which that capability
shall be applied. The specified Uniform Resource Identifier (URI) is used to identify each class.</p>
<p>For the purpose of diagramming possible classifications of EXPRESS entity types, UML 1.4 or later class diagrams with stereotypes
are used. The <a href="http://www.omg.org/technology/documents/formal/uml.htm">UML 2 specification</a> is available from the OMG Web site.
The <a href="http://www.omg.org/cgi-bin/doc?formal/05-04-01">ISO UML 1.4.2 specification</a> published as ISO/IEC 19501:2005(E) is available from the OMG Web site
and from the <a href="http://www.iso.org">ISO</a> Web site. The <a href="http://www.w3.org/TR/owl-ref/">W3C OWL Web Ontology Language</a>
is used to represent the
classes that may be applied to an EXPRESS entity type both in the diagrams and as example OWL files.</p>
<p>The diagram notation adopted is as follows:</p>
<ul>
<li>the &lt;&lt;expressEntityType&gt;&gt; stereotype applied to a UML Class denotes an EXPRESS entity type;</li>
<li>the &lt;&lt;owlClass&gt;&gt; stereotype applied to a UML Class denotes the related class(es);</li>
<li>if all OWL classes on a diagram have the same namespace it may be omitted, otherwise the XML namespace of the OWL ontology
containing each class is
represented as the UML Package name which appears under the class name enclosed in parentheses;</li>
<li>the &lt;&lt;classificationAssignment&gt;&gt; stereotype applied to a UML Generalization denotes the fact that the EXPRESS entity type can be classified
using the more specific class;</li>
<li>the &lt;&lt;disjointWith&gt;&gt; stereotype applied to a UML constraint note is included where appropriate to specify the set of OWL classes are mutually exclusive</li>
<li>the OWL subClassOf relationship between OWL classes is denoted using unstereotyped generalizations between the stereotyped UML classes;</li>
<li>no other UML, EXPRESS or OWL concepts appear in these diagrams.</li>
</ul>
<guide_subclause title="Classifications of General_model_parameter">
<p>A <express_ref linkend="general_model_parameter:arm:General_model_parameter_arm.General_model_parameter"/> may be classified
in order to specify its direction with respect to the model for which it is a parameter. 
For the purpose of specifying that direction, the OMG UML 2 concept of ParameterDirectionKind is used. The following terms represent 
the same concepts from the UML 2 specification
regarding <b>ParameterDirectionKind</b> and are referenced using the specified URIs.

<figure id="f61" number="6.1" >
<title>General_model_parameter Taxonomy</title>
<img src="general_model_parameter-taxonomy.jpg"></img>
</figure>
</p>
<guide_subclause title="ParemeterDirectionKind-in">
A <b>ParemeterDirectionKind-in</b> indicates that parameter values are passed into the model.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/ParemeterDirectionKind-in
</screen>
</guide_subclause>

<guide_subclause title="ParemeterDirectionKind-out">
A <b>ParemeterDirectionKind-out</b> indicates that parameter values are passed from a model.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/ParemeterDirectionKind-out
</screen>
</guide_subclause>

<guide_subclause title="ParemeterDirectionKind-inout">
A <b>ParemeterDirectionKind-inout</b> indicates that parameter values are passed into a model and then back out from the model.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/ParemeterDirectionKind-inout
</screen>
</guide_subclause>

<guide_subclause title="ParemeterDirectionKind-return">
A <b>ParemeterDirectionKind-return</b> indicates that parameter values are passed as return values from a model.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/ParemeterDirectionKind-return
</screen>
</guide_subclause>
<guide_subclause title="Examples">
<example>
<p>The following shows how the four direction kinds would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('http://schema.omg.org/spec/UML/2.1','OMG UML 2.1');
#2=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-in','in',$,#1);
#3=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-out','out',$,#1);
#4=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-inout','inout',$,#1);
#5=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-return','return',$,#1);
#6=CLASSIFICATION_ASSIGNMENT(#2,#7,$);
#7=GENERAL_MODEL_PARAMETER('a','','',$);
</screen>
</example>
<example>
<p>The following shows how the <b>ParameterDirectionKind</b>'s can be
represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="http://schema.omg.org/spec/UML/2.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
  xml:base="http://schema.omg.org/spec/UML/2.1/"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-in"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-out"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-inout"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/ParameterDirectionKind-return"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>
</guide_subclause>
</guide_subclause>
<guide_subclause title="Classifications of Independent_property_representation">
<p>An <express_ref linkend="independent_property_representation:arm:Independent_property_representation_arm.Independent_property_representation"/> may be classified
in order to specify the kind of value being represented for a 
<express_ref linkend="general_model_parameter:arm:General_model_parameter_arm.General_model_parameter"/>.
<figure  id="f62" number="6.2" >
<title>Independent_property_representation Taxonomy</title>
<img src="independent_property_representation-taxonomy.jpg"></img>
</figure>
</p>
<guide_subclause title="Independent_property_representation Default Value">
A <b>DefaultValue</b> is the value of the <express_ref linkend="general_model_parameter:arm:General_model_parameter_arm.General_model_parameter"/>
should no other value be specified.
<p>URI Specification</p>
<screen>
urn:iso:std:iso:ts:10303:-1472:ed-1:tech-taxonomy#DefaultValue
</screen>
</guide_subclause>
<guide_subclause title="Examples">
<example>
<p>The following shows how the <b>DefaultValue</b> would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1472:ed-1:en:tech:taxonomy:General_model_parameter','ISO 10303-1472 General model parameter module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1472:ed-1:en:tech:taxonomy:General_model_parameter#DefaultValue','default value',$,#1);
#6=CLASSIFICATION_ASSIGNMENT(#2,#7,$);
#7=INDEPENDENT_PROPERTY_REPRESENTATION($,#20,#21,$);
#20=GENERAL_MODEL_PARAMETER( ... );
#21=REPRESENTATION( ... );
</screen>
</example>
<example>
<p>The following shows how the <b>DefaultValue</b> can be
represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1472:ed-1:en:tech:taxonomy:General_model_parameter#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:-1472:ed-1:en:tech:taxonomy:General_model_parameter"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1472:ed-1:en:tech:taxonomy:General_model_parameter#DefaultValue"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>
</guide_subclause>
</guide_subclause>
</usage_guide>
</module>
