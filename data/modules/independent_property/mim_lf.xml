<?xml version="1.0"?>
<!-- $Id: express2xml.js,v 1.6 2002/01/16 12:11:43 robbod Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.6"
    source="../data/modules/independent_property/mim_lf.exp"/>

  <schema name="independent_property_mim">
    <type name="description_attribute_select">
      <select
        selectitems="external_source property_definition_representation representation">
      </select>

    </type>
    <type name="founded_item_select">
      <select
        selectitems="representation_item">
      </select>

    </type>
    <type name="id_attribute_select">
      <select
        selectitems="representation">
      </select>

    </type>
    <type name="identifier">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="label">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="name_attribute_select">
      <select
        selectitems="derived_unit property_definition_representation">
      </select>

    </type>
    <type name="represented_definition">
      <select
        selectitems="general_property">
      </select>

    </type>
    <type name="source_item">
      <select
        selectitems="identifier">
      </select>

    </type>
    <type name="text">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="unit">
      <select
        selectitems="named_unit derived_unit">
      </select>

    </type>
    <entity
      name="class"
      supertypes="group">
    </entity>

    <entity
      name="derived_unit">
      <explicit
        name="elements">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="derived_unit_element"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename
          name="label "/>
      </derived>
      <where
        label="wr1"
        expression="((SIZEOF(elements) &gt; 1) OR ((SIZEOF(elements) = 1) AND (               elements[1].exponent &lt;&gt; 1)))">
      </where>
      <where
        label="wr2"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="derived_unit_element">
      <explicit
        name="unit">
        <typename
          name="named_unit"/>
      </explicit>
      <explicit
        name="exponent">
        <builtintype
          type="REAL"/>
      </explicit>
    </entity>

    <entity
      name="description_attribute">
      <explicit
        name="attribute_value">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="described_item">
        <typename
          name="description_attribute_select"/>
      </explicit>
    </entity>

    <entity
      name="dimensional_exponents">
      <explicit
        name="length_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="mass_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="time_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="electric_current_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="thermodynamic_temperature_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="amount_of_substance_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="luminous_intensity_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
    </entity>

    <entity
      name="external_source">
      <explicit
        name="source_id">
        <typename
          name="source_item"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename
          name="text "/>
      </derived>
      <where
        label="wr1"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="externally_defined_class"
      supertypes="class externally_defined_item">
    </entity>

    <entity
      name="externally_defined_general_property"
      supertypes="general_property externally_defined_item">
    </entity>

    <entity
      name="externally_defined_item">
      <explicit
        name="item_id">
        <typename
          name="source_item"/>
      </explicit>
      <explicit
        name="source">
        <typename
          name="external_source"/>
      </explicit>
    </entity>

    <entity
      name="general_property">
      <explicit
        name="id">
        <typename
          name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
    </entity>

    <entity
      name="general_property_relationship">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="relating_property">
        <typename
          name="general_property"/>
      </explicit>
      <explicit
        name="related_property">
        <typename
          name="general_property"/>
      </explicit>
    </entity>

    <entity
      name="global_unit_assigned_context"
      supertypes="representation_context">
      <explicit
        name="units">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="unit"/>
      </explicit>
    </entity>

    <entity
      name="group">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
    </entity>

    <entity
      name="id_attribute">
      <explicit
        name="attribute_value">
        <typename
          name="identifier"/>
      </explicit>
      <explicit
        name="identified_item">
        <typename
          name="id_attribute_select"/>
      </explicit>
    </entity>

    <entity
      name="name_attribute">
      <explicit
        name="attribute_value">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="named_item">
        <typename
          name="name_attribute_select"/>
      </explicit>
    </entity>

    <entity
      name="named_unit">
      <explicit
        name="dimensions">
        <typename
          name="dimensional_exponents"/>
      </explicit>
    </entity>

    <entity
      name="property_definition_representation">
      <explicit
        name="definition">
        <typename
          name="represented_definition"/>
      </explicit>
      <explicit
        name="used_representation">
        <typename
          name="representation"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename
          name="text "/>
      </derived>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename
          name="label "/>
      </derived>
      <where
        label="wr1"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1)">
      </where>
      <where
        label="wr2"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="representation">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="representation_item"/>
      </explicit>
      <explicit
        name="context_of_items">
        <typename
          name="representation_context"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename
          name="identifier "/>
      </derived>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename
          name="text "/>
      </derived>
      <where
        label="wr1"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1)">
      </where>
      <where
        label="wr2"
        expression="(SIZEOF(USEDIN(SELF,'INDEPENDENT_PROPERTY_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="representation_context">
      <explicit
        name="context_identifier">
        <typename
          name="identifier"/>
      </explicit>
      <explicit
        name="context_type">
        <typename
          name="text"/>
      </explicit>
      <inverse
        name="representations_in_context"
        entity="representation"
        attribute="context_of_items">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"/>
      </inverse>
    </entity>

    <entity
      name="representation_item">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <where
        label="wr1"
        expression="(SIZEOF(using_representations(SELF)) &gt; 0)">
      </where>
    </entity>

    <function
      name="bag_to_set">
      <aggregate
        type="SET"/>
      <typename
        name="GENERICintype"/>
      <parameter
        name="the_bag">
        <aggregate
          type="BAG"/>
        <typename
          name="GENERICintype"/>
      </parameter>
      <algorithm>

    LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;
    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag) BY 1;
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);

      </algorithm>

    </function>

    <function
      name="get_description_value">
      <typename
        name="text"/>
      <parameter
        name="obj">
        <typename
          name="description_attribute_select"/>
      </parameter>
      <algorithm>

    LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj,
                         'INDEPENDENT_PROPERTY_MIM.' + 
                         'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM');
    END_LOCAL;
    IF SIZEOF(description_bag) = 1 THEN
      RETURN(description_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </algorithm>

    </function>

    <function
      name="get_id_value">
      <typename
        name="identifier"/>
      <parameter
        name="obj">
        <typename
          name="id_attribute_select"/>
      </parameter>
      <algorithm>

    LOCAL
      id_bag : BAG OF id_attribute := USEDIN(obj,
                'INDEPENDENT_PROPERTY_MIM.' + 'ID_ATTRIBUTE.' + 
                'IDENTIFIED_ITEM');
    END_LOCAL;
    IF SIZEOF(id_bag) = 1 THEN
      RETURN(id_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </algorithm>

    </function>

    <function
      name="get_name_value">
      <typename
        name="label"/>
      <parameter
        name="obj">
        <typename
          name="name_attribute_select"/>
      </parameter>
      <algorithm>

    LOCAL
      name_bag : BAG OF name_attribute := USEDIN(obj,
                  'INDEPENDENT_PROPERTY_MIM.' + 'NAME_ATTRIBUTE.' + 
                  'NAMED_ITEM');
    END_LOCAL;
    IF SIZEOF(name_bag) = 1 THEN
      RETURN(name_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </algorithm>

    </function>

    <function
      name="using_items">
      <aggregate
        type="SET"/>
      <typename
        name="founded_item_select"/>
      <parameter
        name="item">
        <typename
          name="founded_item_select"/>
      </parameter>
      <parameter
        name="checked_items">
        <aggregate
          type="SET"/>
        <typename
          name="founded_item_select"/>
      </parameter>
      <algorithm>

    LOCAL
      next_items      : SET OF founded_item_select;
      new_check_items : SET OF founded_item_select;
      result_items    : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    next_items := QUERY ( z &lt;* bag_to_set(USEDIN(item,'')) | ((
        'INDEPENDENT_PROPERTY_MIM.REPRESENTATION_ITEM' IN TYPEOF(z)) OR (
        'INDEPENDENT_PROPERTY_MIM.FOUNDED_ITEM' IN TYPEOF(z))) );
    IF SIZEOF(next_items) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(next_items) BY 1;
        IF NOT (next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] + using_items(
              next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(result_items);

      </algorithm>

    </function>

    <function
      name="using_representations">
      <aggregate
        type="SET"/>
      <typename
        name="representation"/>
      <parameter
        name="item">
        <typename
          name="founded_item_select"/>
      </parameter>
      <algorithm>

    LOCAL
      results            : SET OF representation;
      intermediate_items : SET OF founded_item_select;
      result_bag         : BAG OF representation;
    END_LOCAL;
    results := [];
    result_bag := USEDIN(item,
        'INDEPENDENT_PROPERTY_MIM.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag) BY 1;
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    intermediate_items := using_items(item,[]);
    IF SIZEOF(intermediate_items) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(intermediate_items) BY 1;
        result_bag := USEDIN(intermediate_items[i],
            'INDEPENDENT_PROPERTY_MIM.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) &gt; 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag) BY 1;
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(results);

      </algorithm>

    </function>

  </schema>

</express>
