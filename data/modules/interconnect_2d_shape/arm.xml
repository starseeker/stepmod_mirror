<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="$Date: 2007-05-07 03:51:59 -0700 (Pr, 07 Geg 2007) $" rcs.revision="$Revision: 672 $" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="interconnect_2d_shape_arm schema_instance"/>
   <schema name="Interconnect_2d_shape_arm">
      <interface kind="use" schema="Fabrication_joint_arm"/>
      <interface kind="use" schema="Physical_unit_2d_design_view_arm"/>
      <interface kind="reference" schema="Characterizable_object_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <entity name="Component_2d_embedded_location" supertypes="Component_2d_location">
         <explicit name="precedent_surface">
            <typename name="Adjacent_stratum_surface_embedded_physical_component_surface_definition"/>
         </explicit>
         <explicit name="subsequent_surface">
            <typename name="Adjacent_stratum_surface_embedded_physical_component_surface_definition"/>
         </explicit>
         <explicit name="reference_terminal">
            <typename name="Fabrication_joint"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="precedent_surface"/>
            <unique.attribute attribute="reference_terminal"/>
            <unique.attribute attribute="subsequent_surface"/>
         </unique>
         <where label="WR1" expression="precedent_surface &lt;&gt; subsequent_surface"/>
         <where label="WR2" expression="SELF\Component_2d_location.substrate_location = FALSE"/>
         <where label="WR3" expression="NOT EXISTS(SELF\Representation_relationship.description)"/>
      </entity>
      <rule name="component_in_assembly_2d_context" appliesto="Area_component">
         <where label="WR1" expression="SIZEOF(QUERY( ac &lt;* Area_component | NOT(&#10;       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR &#10;        (in_2d_assembly_context(ac)))&#10;          )) = 0"/>
      </rule>
      <rule name="no_component_assembly_2d_location_for_area_component" appliesto="Area_component">
         <where label="WR1" expression="SIZEOF(QUERY( ac &lt;* Area_component | NOT(&#10;       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR&#10;       (no_2d_location_for_component(ac))) &#10;  )) = 0"/>
      </rule>
      <function name="in_2d_assembly_context">
         <parameter name="comp">
            <typename name="Assembly_component"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
    shapes : SET OF Assembly_component_2d_shape_model := [];
    shapes_in_context : SET OF Physical_unit_planar_shape_model := [];
    assemblies : SET OF Product_view_definition := [];
    i, j : INTEGER := 0;
    in_context : LOGICAL := TRUE;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
  END_REPEAT;

  shapes := bag_to_set(USEDIN(comp,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'));
  REPEAT i := 1 TO SIZEOF(shapes);
    shapes_in_context := bag_to_set(USEDIN(shapes[i]\Geometric_model.context_of_items,'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'));
    in_context := FALSE;
    j := 1;
    REPEAT WHILE ((j &lt;= SIZEOF(shapes_in_context)) AND (NOT(in_context)));
      in_context := (shapes_in_context[j].shape_characterized_definition IN assemblies);
      j := j + 1;
    END_REPEAT;
    
    IF NOT (in_context) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  
  RETURN (SIZEOF(shapes) &gt; 0);</algorithm>
      </function>
      <function name="no_2d_location_for_component">
         <parameter name="comp">
            <typename name="Assembly_component"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    i, j : INTEGER;
    cis : SET OF Contextual_item_shape;
    loc : SET OF Component_2d_location;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    cis := bag_to_set(USEDIN(comp.occurrence_contexts[i],'SHAPE_PROPERTY_ASSIGNMENT_ARM.CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'));
    REPEAT j := 1 TO SIZEOF(cis);
      loc := bag_to_set(USEDIN(cis[j],'CONTEXTUAL_SHAPE_POSITIONING_ARM.CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'));
      IF (SIZEOF(loc) &gt; 0) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_REPEAT;

  RETURN (TRUE);</algorithm>
      </function>
   </schema>
</express>
