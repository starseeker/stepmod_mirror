<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2004-12-15T15:47:19" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="interconnect_module_connection_routing_mim schema_instance"/>
   <schema name="Interconnect_module_connection_routing_mim">
      <interface kind="use" schema="Fabrication_joint_mim"/>
      <interface kind="use" schema="Functional_design_elaboration_mim"/>
      <interface kind="use" schema="Layered_interconnect_module_with_design_intend_modifications_mim"/>
      <entity name="direct_stratum_component_join_implementation" supertypes="shape_aspect_relationship">
         <where label="WR1" expression=" SIZEOF ( TYPEOF ( SELF ) - TYPEOF ( SELF \ shape_aspect_relationship || SELF \ direct_stratum_component_join_implementation ) ) = 0 "/>
      </entity>
      <entity name="indirect_stratum_component_join_implementation" supertypes="plated_inter_stratum_feature"/>
      <rule name="junction_vertex_allocation_constraint" appliesto="shape_aspect_relationship">
         <where label="WR1" expression=" SIZEOF ( QUERY ( sar &lt;* shape_aspect_relationship | ( sar \ shape_aspect_relationship . name = 'junction vertex allocation' ) AND NOT ( ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER_CONNECTION_POINT' IN TYPEOF ( sar . related_shape_aspect ) ) AND ( sar . related_shape_aspect \ shape_aspect . description = 'explicitly located' ) ) OR ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'JOIN_SHAPE_ASPECT' IN TYPEOF ( sar . related_shape_aspect ) ) AND ( sar . related_shape_aspect \ shape_aspect . name = 'inter stratum join' ) ) ) ) ) = 0 "/>
         <where label="WR2" expression=" SIZEOF ( QUERY ( sar &lt;* shape_aspect_relationship | ( sar \ shape_aspect_relationship . name = 'junction vertex allocation' ) AND NOT ( sar . relating_shape_aspect \ shape_aspect . description = 'topological junction' ) ) ) = 0 "/>
      </rule>
      <rule name="junction_vertex_allocation_unique_constraint" appliesto="shape_aspect_relationship">
         <algorithm> LOCAL jva : BAG OF shape_aspect_relationship := QUERY ( sar &lt;* shape_aspect_relationship | ( sar \ shape_aspect_relationship . name = 'junction vertex allocation' ) ) ; pass : BOOLEAN := TRUE ; sa_bag : BAG OF shape_aspect := [ ] ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( jva ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; IF EXISTS ( jva [ i ] . relating_shape_aspect ) THEN IF ( jva [ i ] . relating_shape_aspect \ shape_aspect . description = 'topological junction' ) THEN IF ( jva [ i ] . relating_shape_aspect IN sa_bag ) THEN pass := FALSE ; ESCAPE ; ELSE sa_bag := sa_bag + jva [ i ] . relating_shape_aspect ; END_IF ; END_IF ; END_IF ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="physical_connectivity_abstraction_map_unique_constraint" appliesto="shape_aspect_relationship">
         <algorithm> LOCAL pcam : BAG OF shape_aspect_relationship := QUERY ( r &lt;* shape_aspect_relationship | ( r \ shape_aspect_relationship . name = 'physical to topological abstraction map' ) ) ; pce_bag : BAG OF physical_connectivity_element := [ ] ; sar_bag : BAG OF shape_aspect_relationship ; pass : BOOLEAN := TRUE ; csa_bag : BAG OF component_shape_aspect ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( pcam ) by 1 ; IF EXISTS ( pcam [ i ] . related_shape_aspect ) THEN IF ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_ELEMENT' IN TYPEOF ( pcam [ i ] . related_shape_aspect ) ) THEN IF ( NOT ( pcam [ i ] . related_shape_aspect IN pce_bag ) ) THEN pce_bag := pce_bag + pcam [ i ] . related_shape_aspect ; END_IF ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pce_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; csa_bag := [ ] ; sar_bag := QUERY ( sar &lt;* pcam | ( sar . related_shape_aspect :=: pce_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( sar_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; IF ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_SHAPE_ASPECT' IN TYPEOF ( sar_bag [ j ] . relating_shape_aspect ) ) AND ( sar_bag [ j ] . relating_shape_aspect \ shape_aspect . description IN [ 'conductive interconnect element with pre defined transitions' , 'conductive interconnect element with user defined single transition' ] ) ) THEN IF EXISTS ( sar_bag [ j ] . relating_shape_aspect ) THEN IF ( sar_bag [ j ] . relating_shape_aspect IN csa_bag ) THEN pass := FALSE ; ESCAPE ; ELSE csa_bag := csa_bag + sar_bag [ j ] . relating_shape_aspect ; END_IF ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="topological_junction_unique_constraint" appliesto="shape_aspect">
         <algorithm> LOCAL tj : BAG OF shape_aspect := QUERY ( r &lt;* shape_aspect | ( r \ shape_aspect . description = 'topological junction' ) ) ; sar_bag : BAG OF shape_aspect_relationship ; s_bag : BAG OF shape_aspect := [ ] ; pass : BOOLEAN := TRUE ; name_bag : BAG OF STRING ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( tj ) by 1 ; sar_bag := QUERY ( sar &lt;* USEDIN ( tj [ i ] , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | ( ( sar \ shape_aspect_relationship . name = 'topological junction scope' ) AND ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_DEFINITION' ) IN TYPEOF ( sar . relating_shape_aspect ) ) ) ) ; REPEAT j := 1 to SIZEOF ( sar_bag ) by 1 ; IF EXISTS ( sar_bag [ j ] . relating_shape_aspect ) THEN IF ( NOT ( sar_bag [ j ] . relating_shape_aspect IN s_bag ) ) THEN s_bag := s_bag + sar_bag [ j ] . relating_shape_aspect ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( s_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; sar_bag := QUERY ( sar &lt;* USEDIN ( s_bag [ i ] , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | ( sar \ shape_aspect_relationship . name = 'topological junction scope' ) ) ; name_bag := [ ] ; REPEAT j := 1 to SIZEOF ( sar_bag ) by 1 ; IF EXISTS ( sar_bag [ j ] . related_shape_aspect \ shape_aspect . name ) THEN IF ( sar_bag [ j ] . related_shape_aspect \ shape_aspect . name IN name_bag ) THEN pass := FALSE ; ESCAPE ; ELSE name_bag := name_bag + sar_bag [ j ] . related_shape_aspect \ shape_aspect . name ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
   </schema>
</express>
