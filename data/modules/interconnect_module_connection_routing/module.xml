<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.5 2004/12/05 18:00:58 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="interconnect_module_connection_routing" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2004/12/05 18:00:58 $" rcs.revision="$Revision: 1.5 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, layout, electrical, electronic, autoroute, route, connection, network, node, connection point, vertex, junction
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the electrical design requirements for the conductive elements associated with an interconnect substrate.  The information contains specific topological requirements data, and user defined property data related to elements associated with the topological requirements data.  The information needed to describe the resulting design is included. Tree network support is provided.  Mapping between abstract topological tree model and the explicit connection data.  This provides support for detailed layout analysis and synthesis applications.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>tree network connection representation</li>
   <li>physical connection implementation</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>functional network representation</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        <imgfile file="armexpg3.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Dependently_located_layer_connection_point" extensible="NO">
            <aimelt xml:space="preserve">layer_connection_point</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">layer_connection_point &lt;=
shape_aspect
{shape_aspect
shape_aspect.description = 'dependently located'}
</refpath>
            <aa attribute="reference_zone" assertion_to="Connection_zone">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">layer_connection_point &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'reference zone'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect.description = 'connection zone'}
</refpath>
            </aa>
            <aa attribute="associated_design_object" assertion_to="terminal_or_inter_stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">layer_connection_point &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'associated design object'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Dielectric_crossover_area" extensible="NO">
            <aimelt xml:space="preserve">stratum_concept_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">stratum_concept_relationship &lt;=
[shape_aspect]
[shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'dielectric crossover area'}]
</refpath>
            <aa attribute="related_concept" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">stratum_concept_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
            <aa attribute="relating_concept" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">stratum_concept_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
            <aa attribute="resulting_dielectric_crossover" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">stratum_concept_relationship &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'resulting dielectric crossover'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
        </ae>
    <ae entity="Direct_stratum_component_join_implementation" extensible="NO">
            <aimelt xml:space="preserve">direct_stratum_component_join_implementation</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">direct_stratum_component_join_implementation &lt;=
shape_aspect_relationship
</refpath>
            <aa attribute="topological_requirement" assertion_to="Stratum_embedded_component_join_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">direct_stratum_component_join_implementation &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.name = 'stratum embedded component join'}
shape_aspect =&gt;
join_shape_aspect
</refpath>
            </aa>
            <aa attribute="implementing_joint" assertion_to="Fabrication_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">direct_stratum_component_join_implementation &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
fabrication_joint
</refpath>
            </aa>
        </ae>
    <ae entity="Explicitly_located_layer_connection_point" extensible="NO">
            <aimelt xml:space="preserve">layer_connection_point</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">layer_connection_point &lt;=
shape_aspect
{shape_aspect
shape_aspect.description = 'explicitly located'}
</refpath>
        </ae>
    <ae entity="Indirect_stratum_component_join_implementation" extensible="NO">
            <aimelt xml:space="preserve">indirect_stratum_component_join_implementation</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">indirect_stratum_component_join_implementation &lt;=
plated_inter_stratum_feature
</refpath>
            <aa attribute="indirect_topological_requirement" assertion_to="Stratum_embedded_component_join_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">indirect_stratum_component_join_implementation &lt;=
plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'indirect topological requirement'}
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.name = 'stratum embedded component join'}
shape_aspect =&gt;
join_shape_aspect
</refpath>
            </aa>
            <aa attribute="implementing_joint" assertion_to="Fabrication_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">indirect_stratum_component_join_implementation &lt;=
plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementing joint'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
fabrication_joint
</refpath>
            </aa>
        </ae>
    <ae entity="Inter_stratum_join_implementation" extensible="NO">
            <aimelt xml:space="preserve">(stratum_concept_relationship) (plated_inter_stratum_feature)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210</source>
            <refpath xml:space="preserve">(stratum_concept_relationship &lt;=
[shape_aspect
{shape_aspect
shape_aspect.description = 'physical net supporting stratum feature conductive join'}]
[shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature conductive join'}])
(plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect
{shape_aspect
(shape_aspect.description = 'bonded conductive base blind via')
(shape_aspect.description = 'non conductive base blind via')
(shape_aspect.description = 'plated conductive base blind via')
(shape_aspect.description = 'interfacial connection')
(shape_aspect.description = 'buried via')
(shape_aspect.description = 'component termination passage')
(shape_aspect.description = 'plated cutout')
(shape_aspect.description = 'plated cutout edge segment')
(shape_aspect.description = 'plated interconnect module edge segment')
(shape_aspect.description = 'plated interconnect module edge')})
</refpath>
            <aa attribute="topological_requirement" assertion_to="Inter_stratum_join_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(stratum_concept_relationship &lt;=)
(plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=)
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'join implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.name = 'inter stratum join'}
shape_aspect =&gt;
join_shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Junction_vertex_allocation" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'junction vertex allocation'}
</refpath>
            <aa attribute="implementation_point" assertion_to="trace_junction_or_via">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
</refpath>
            </aa>
            <aa attribute="required_vertex" assertion_to="Topological_junction">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect
shape_aspect.description = 'topological junction'}
</refpath>
            </aa>
        </ae>
    <ae entity="Physical_connectivity_abstraction_map" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'physical to topological abstraction map'}
</refpath>
            <aa attribute="geometric_context_based_definition" assertion_to="Conductive_interconnect_element">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect
[(shape_aspect.description = 'conductive interconnect element with pre defined transitions')
(shape_aspect.description = 'join 2 physical connectivity definition supporting')
(shape_aspect.description = 'conductive interconnect element with user defined single transition')]
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition]
[shape_aspect =&gt;
component_shape_aspect]}
</refpath>
            </aa>
            <aa attribute="name_space_context_based_definition" assertion_to="Physical_connectivity_element">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
physical_connectivity_element
</refpath>
            </aa>
        </ae>
    <ae entity="Physical_network_supporting_inter_stratum_feature" extensible="NO">
            <aimelt xml:space="preserve">plated_inter_stratum_feature</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect
{[(shape_aspect =&gt;
component_shape_aspect =&gt;
inter_stratum_feature =&gt;
plated_inter_stratum_feature =&gt;
(plated_interconnect_module_edge_segment)
(plated_cutout_edge_segment))
(shape_aspect
(shape_aspect.description = 'bonded conductive base blind via')
(shape_aspect.description = 'buried via')
(shape_aspect.description = 'component termination passage')
(shape_aspect.description = 'interfacial connection')
(shape_aspect.description = 'non conductive base blind via')
(shape_aspect.description = 'join two physical connectivity definition supporting inter stratum feature')
(shape_aspect.description = 'plated conductive base blind via')
(shape_aspect.description = 'plated interconnect module edge')
(shape_aspect.description = 'plated cutout'))]
[shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'join implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.name = 'inter stratum join'}
shape_aspect =&gt;
join_shape_aspect]}
</refpath>
        </ae>
    <ae entity="Join_two_physical_connectivity_definition_supporting_inter_stratum_feature" extensible="NO">
            <aimelt xml:space="preserve">plated_inter_stratum_feature</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect
{[shape_aspect
shape_aspect.description = 'join two physical connectivity definition supporting inter stratum feature']
[shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'join implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.name = 'inter stratum join'}
shape_aspect =&gt;
join_shape_aspect]}
</refpath>
            <aa attribute="joined_definitions" assertion_to="Physical_connectivity_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">plated_inter_stratum_feature &lt;=
inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect
shape_definition = shape_aspect 
characterized_definition = shape_definition 
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_relationship.related_property_definition
property_definition_relationship
{property_definition_relationship
property_definition_relationship.name = 'requirement implementation'}
property_definition_relationship.relating_property_definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
physical_connectivity_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Physical_network_supporting_stratum_feature_conductive_join" extensible="NO">
            <aimelt xml:space="preserve">stratum_concept_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">stratum_concept_relationship &lt;=
[shape_aspect
{shape_aspect
shape_aspect.description = 'physical net supporting stratum feature conductive join'}]
[shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature conductive join'}]
</refpath>
        </ae>
    <ae entity="Stratum_feature_conductive_join" extensible="NO">
            <aimelt xml:space="preserve">stratum_concept_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">stratum_concept_relationship &lt;=
[shape_aspect]
[shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature conductive join'}]
</refpath>
            <aa attribute="related_concept" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">stratum_concept_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'stratum feature template component'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
            <aa attribute="relating_concept" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">stratum_concept_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'stratum feature template component'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Topological_junction" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect
[shape_aspect.description = 'topological junction']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve"/>
            </aa>
            <aa attribute="scope" assertion_to="Physical_connectivity_structure_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'topological junction scope'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
physical_connectivity_definition
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
