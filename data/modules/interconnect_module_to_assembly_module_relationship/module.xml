<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.15 2005/02/17 16:06:25 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="interconnect_module_to_assembly_module_relationship" part="1685" version="1" sc4.working_group="12" wg.number="3443" wg.number.arm="3444" wg.number.mim="3445" checklist.internal_review="3675" checklist.project_leader="3676" checklist.convener="3677" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/02/17 16:06:25 $" rcs.revision="$Revision: 1.15 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, assembly, interconnect, electrical, electronic, requirement
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of domain specific relationships between an interconnect design and an associated assembly design.  The representation supports description of overall relationship between the interconnect and the assembly as a requirement.  The representation supports description of relationships between individual features of the interconnect and components or component features in the assembly.  The representation supports data when the explicit definition of the assembly is not provided
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>assembly requirement for interconnect relationship;</li>
   <li>component based annotation symbol placement relationship;</li>
   <li>component based annotation text relationship;</li>
   <li>component feature to layout feature relationship;</li>
   <li>external references for component;</li>
   <li>external references for component feature;</li>
		<li>items within the scope of application module <module_ref linkend="assembly_module_design:1_scope">Assembly module design</module_ref>, ISO/CD-TS 10303-1636;</li>
		<li>items within the scope of application module <module_ref linkend="interconnect_module_connection_routing:1_scope">Interconnect module connection routing</module_ref>, ISO/CD-TS 10303-1684;</li>
		<li>items within the scope of application module <module_ref linkend="layered_interconnect_module_design:1_scope">Layered interconnect module design</module_ref>, ISO/CD-TS 10303-1698.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
	 <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>   
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   		<ae entity="Assembly_requirement_for_interconnect_relationship" extensible="NO">
			<aimelt xml:space="preserve">product_definition_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-41</source>
			<aa attribute="SELF\View_definition_relationship.relating_view" assertion_to="Assembly_module">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">product_definition_relationship
					product_definition_relationship.relating_product_definition -&gt; 
					product_definition  
					{product_definition
					[product_definition.name = 'assembly module'] 
					[product_definition.frame_of_reference -&gt; 
					product_definition_context &lt;= 
					application_context_element
					application_context_element.name = 'physical design']}
				</refpath>
			</aa>
			<aa attribute="SELF\View_definition_relationship.related_view" assertion_to="Interconnect_module">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">product_definition_relationship
					product_definition_relationship.relating_product_definition -&gt; 
					product_definition  
					{product_definition
					[product_definition.name = 'interconnect module'] 
					[product_definition.frame_of_reference -&gt; 
					product_definition_context &lt;= 
					application_context_element
					application_context_element.name = 'physical design']}
				</refpath>
			</aa>
		</ae>
 <ae entity="Component_feature_to_layout_feature_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'component feature to layout feature'}
</refpath>
            <aa attribute="relating_feature" assertion_to="component_or_component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="stratum_concept">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Component_based_annotation_symbol_placement_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship.name = 'component based annotation symbol placement'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component
</refpath>
            <aa attribute="related_stratum_concept" assertion_to="Special_symbol_laminate_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{[product_definition.description = 'special symbol laminate component']
[product_definition
product_definition.name = 'laminate component']]}
product_definition =&gt;
component_definition =&gt;
assembly_component
</refpath>
            </aa>
        </ae>
    <ae entity="Component_based_annotation_text_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship.name = 'component based annotation text'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component
</refpath>
            <aa attribute="message_type">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_definition = shape_aspect_relationship
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = 'message type'}
representation_item =&gt;
descriptive_representation_item
{descriptive_representation_item
(descriptive_representation_item.description = 'component reference designation')
(descriptive_representation_item.description = 'terminal designation')}
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Laminate_text_string_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{shape_aspect
[product_definition.description = 'laminate text string component']
[product_definition
product_definition.name = 'laminate component']]}
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
assembly_group_component_definition =&gt;
array_placement_group_component_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Embedded_component_terminal" original_module="layered_interconnect_module_design">
            <aa attribute="associated_component" assertion_to="Bare_die_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath_extend extended_select="bare_die_component_or_packaged_component">
*&gt; component_definition 				
{component_definition &lt;=
product_definition
product_definition.description = 'bare die component'}
</refpath_extend>
            </aa>
            <aa attribute="associated_component" assertion_to="Packaged_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath_extend extended_select="bare_die_component_or_packaged_component">
*&gt; component_definition =&gt;
packaged_component
{packaged_component &lt;=
component_definition &lt;=
product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical occurrence'}
</refpath_extend>
            </aa>
            <aa attribute="definition" assertion_to="Bare_die_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath_extend extended_select="bare_die_terminal_or_packaged_part_terminal">
*&gt; shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt;
bare_die_terminal
</refpath_extend>
            </aa>
            <aa attribute="definition" assertion_to="Packaged_part_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath_extend extended_select="bare_die_terminal_or_packaged_part_terminal">
*&gt; shape_aspect
{(shape_aspect.description = 'interface terminal')
(shape_aspect.description = 'join terminal')}
shape_aspect =&gt;
packaged_part_terminal
</refpath_extend>
            </aa>
        </ae>
		
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>     
   </express-g>
 </mim>

</module>
