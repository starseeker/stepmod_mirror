<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: mkmodule.js,v 1.41 2004/10/11 20:17:49 thendrix Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="interconnect_module_to_assembly_module_relationship" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: $" rcs.revision="$Revision: $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
    <li>xxxxx</li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of 
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>xxxxx</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae original_module="Interconnect_module_to_assembly_module_relationship" entity="Component_feature_to_layout_feature_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = `component feature to layout feature'}
</refpath>
            <aa attribute="relating_feature" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
            <aa attribute="relating_feature" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect =&gt;
(component_feature)
(component_interface_terminal)
(laminate_component_interface_terminal)
(component_terminal))
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Inter_stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect =&gt;
inter_stratum_feature
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Laminate_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
(shape_aspect =&gt;
component_shape_aspect =&gt;
(inter_stratum_feature)
(land)
(fiducial)
(probe_access_area)
(material_removal_component_shape_aspect))
(shape_aspect
{shape_aspect.description = `laminate text string component'} =&gt;
component_shape_aspect =&gt;
assembly_group_component_shape_aspect =&gt;
array_placement_group_component_shape_aspect)
(shape_aspect
{(shape_aspect.description = `laminate component')
(shape_aspect.description = `part template occurrence')
(shape_aspect.description = `conductive interconnect element with pre defined transitions')
(shape_aspect.description = `join 2 physical connectivity definition supporting')
(shape_aspect.description = `conductive interconnect element with user defined single transition')
(shape_aspect.description = `unrouted conductive interconnect element')
(shape_aspect.description = `laminate text component')
(shape_aspect.description = `primary stratum indicator symbol')
(shape_aspect.description = `routed interconnect component')
(shape_aspect.description = `special symbol laminate component')
(shape_aspect.description = `stratum feature template component')})
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
{product_definition.description = `laminate component'}
component_definition)
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Stratum">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect 
shape_aspect.of_shape -&gt;
product_definition_shape
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
stratum
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Stratum_surface">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
stratum_surface
</refpath>
            </aa>
        </ae>
    <ae original_module="Interconnect_module_to_assembly_module_relationship" entity="Component_based_annotation_symbol_placement_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship.name = `component based annotation symbol placement'}
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect =&gt;
component_shape_aspect)
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition)
</refpath>
            <aa attribute="related_stratum_concept" assertion_to="Special_symbol_laminate_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{[shape_aspect.description = `special symbol laminate component']
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
[product_definition =&gt;
component_definition]
[product_definition
product_definition.description = `laminate component']]}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
        </ae>
    <ae original_module="Interconnect_module_to_assembly_module_relationship" entity="Component_based_annotation_text_relationship" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_aspect_relationship
{shape_aspect_relationship.name = `component based annotation text'}
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect =&gt;
component_shape_aspect)
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition)
</refpath>
            <aa attribute="message_type">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_definition = shape_aspect_relationship
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = `message type'}
representation_item =&gt;
descriptive_representation_item
{descriptive_representation_item
(descriptive_representation_item.description = `component reference designation')
(descriptive_representation_item.description = `terminal designation')}
</refpath>
            </aa>
            <aa attribute="related_stratum_concept" assertion_to="Laminate_text_string_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
[shape_aspect.description = `laminate text string component']
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
[product_definition =&gt;
component_definition]
[product_definition
product_definition.description = `laminate component']]}
shape_aspect =&gt;
component_shape_aspect =&gt;
assembly_group_component_shape_aspect =&gt;
array_placement_group_component_shape_aspect
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
