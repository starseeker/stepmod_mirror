<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-04-18T16:34:27" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="interconnect_module_usage_view_mim schema_instance"/>
   <schema name="Interconnect_module_usage_view_mim">
      <interface kind="use" schema="Extended_geometric_tolerance_mim"/>
      <interface kind="use" schema="Functional_assignment_to_part_mim"/>
      <interface kind="use" schema="Network_functional_usage_view_mim"/>
      <entity name="interconnect_definition" supertypes="physical_unit">
         <where label="WR1" expression=" EXISTS ( SELF \ product_definition . name ) "/>
         <where label="WR2" expression=" NOT EXISTS ( SELF \ product_definition . name ) OR ( SELF \ product_definition . name = 'interconnect module' ) "/>
         <where label="WR3" expression=" ( NOT ( SELF . frame_of_reference . name = 'physical design' ) ) OR ( SIZEOF ( QUERY ( du &lt;* QUERY ( pdr &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION' ) | pdr \ product_definition_relationship . name = 'design usage' ) | ( SIZEOF ( [ 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'INTERCONNECT_DEFINITION' , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EXTERNALLY_DEFINED_INTERCONNECT_DEFINITION' , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'LIBRARY_DEFINED_INTERCONNECT_DEFINITION' ] * TYPEOF ( du . relating_product_definition ) ) = 1 ) AND ( du . relating_product_definition . frame_of_reference . name = 'physical design usage' ) AND ( du . relating_product_definition \ product_definition . name = 'interconnect module' ) ) ) = 1 ) "/>
      </entity>
      <entity name="interconnect_module_cutout_segment_surface" supertypes="shape_aspect shape_aspect_relationship">
         <where label="WR1" expression=" 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EDGE_SEGMENT_VERTEX' IN TYPEOF ( SELF \ shape_aspect_relationship . related_shape_aspect ) "/>
         <where label="WR2" expression=" 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EDGE_SEGMENT_VERTEX' IN TYPEOF ( SELF \ shape_aspect_relationship . relating_shape_aspect ) "/>
         <where label="WR3" expression=" SELF \ shape_aspect_relationship . relating_shape_aspect :&lt;&gt;: SELF \ shape_aspect_relationship . related_shape_aspect "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( ce &lt;* QUERY ( sar &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'composed surface' ) | ( 'interconnect module cutout surface' = ce . relating_shape_aspect \ shape_aspect . description ) ) ) = 1 "/>
         <where label="WR5" expression=" SIZEOF ( TYPEOF ( SELF ) - TYPEOF ( SELF \ shape_aspect || SELF \ shape_aspect_relationship || SELF \ interconnect_module_cutout_segment_surface ) ) = 0 "/>
      </entity>
      <entity name="interconnect_module_edge_segment_surface" supertypes="shape_aspect shape_aspect_relationship">
         <where label="WR1" expression=" 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EDGE_SEGMENT_VERTEX' IN TYPEOF ( SELF \ shape_aspect_relationship . related_shape_aspect ) "/>
         <where label="WR2" expression=" 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EDGE_SEGMENT_VERTEX' IN TYPEOF ( SELF \ shape_aspect_relationship . relating_shape_aspect ) "/>
         <where label="WR3" expression=" SELF \ shape_aspect_relationship . relating_shape_aspect :&lt;&gt;: SELF \ shape_aspect_relationship . related_shape_aspect "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( ce &lt;* QUERY ( sar &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'composed surface' ) | ( 'interconnect module edge surface' = ce . relating_shape_aspect \ shape_aspect . description ) ) ) = 1 "/>
         <where label="WR5" expression=" SIZEOF ( TYPEOF ( SELF ) - TYPEOF ( SELF \ shape_aspect || SELF \ shape_aspect_relationship || SELF \ interconnect_module_edge_segment_surface ) ) = 0 "/>
      </entity>
      <entity name="interconnect_module_interface_terminal" supertypes="interconnect_module_terminal"/>
      <entity name="interconnect_module_terminal" supertypes="shape_aspect" super.expression="interconnect_module_interface_terminal">
         <where label="WR1" expression=" EXISTS ( SELF . of_shape . definition \ product_definition . name ) "/>
         <where label="WR2" expression=" ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PHYSICAL_UNIT' IN TYPEOF ( SELF . of_shape . definition ) ) AND ( SELF . of_shape . definition \ product_definition . frame_of_reference . name = 'physical design usage' ) AND ( SELF . of_shape . definition \ product_definition . name = 'interconnect module' ) "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | SIZEOF ( QUERY ( pdr &lt;* USEDIN ( pd , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) | 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_REPRESENTATION' IN TYPEOF ( pdr . used_representation ) ) ) &gt;= 1 ) ) &gt;= 1 "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( mct &lt;* QUERY ( sar &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'member connected terminal' ) | 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PART_CONNECTED_TERMINALS_DEFINITION' IN TYPEOF ( mct . relating_shape_aspect ) ) ) &lt;= 1 "/>
         <where label="WR5" expression=" SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | sar . related_shape_aspect \ shape_aspect . description = 'connection zone' ) ) &lt;= 1 "/>
      </entity>
      <rule name="interconnect_module_surface_feature_constraint" appliesto="shape_aspect">
         <where label="WR1" expression=" SIZEOF ( QUERY ( sa &lt;* shape_aspect | ( ( sa \ shape_aspect . description = 'interconnect module edge segment surface' ) OR ( sa \ shape_aspect . description = 'interconnect module cavity surface' ) OR ( sa \ shape_aspect . description = 'interconnect module cutout surface' ) OR ( sa \ shape_aspect . description = 'interconnect module edge surface' ) OR ( sa \ shape_aspect . description = 'interconnect module primary surface' ) OR ( sa \ shape_aspect . description = 'interconnect module secondary surface' ) OR ( sa \ shape_aspect . description = 'interconnect module surface feature' ) ) AND NOT ( ( sa . of_shape . definition \ product_definition . name = 'interconnect module' ) AND ( sa . of_shape . definition . frame_of_reference . name = 'physical design usage' ) AND ( ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PHYSICAL_UNIT' IN TYPEOF ( sa . of_shape . definition ) ) OR ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'EXTERNALLY_DEFINED_PHYSICAL_UNIT' IN TYPEOF ( sa . of_shape . definition ) ) OR ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'LIBRARY_DEFINED_PHYSICAL_UNIT' IN TYPEOF ( sa . of_shape . definition ) ) ) ) ) ) = 0 "/>
      </rule>
      <rule name="located_interconnect_module_thickness_requirement_unique_constraint" appliesto="property_definition_representation">
         <algorithm> LOCAL limrt : BAG OF property_definition_representation := QUERY ( pdr &lt;* property_definition_representation | ( pdr . definition \ property_definition . name = 'located interconnect module thickness' ) AND ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'SHAPE_ASPECT' IN TYPEOF ( pdr . definition . definition ) ) ) ; pu_bag : BAG OF physical_unit := [ ] ; pdr_bag : BAG OF property_definition_representation ; rr_bag : BAG OF representation_relationship ; pass : BOOLEAN := TRUE ; ri_bag : BAG OF representation_item ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( limrt ) by 1 ; IF EXISTS ( limrt [ i ] . definition . definition . of_shape . definition ) THEN IF ( ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'PHYSICAL_UNIT' IN TYPEOF ( limrt [ i ] . definition . definition . of_shape . definition ) ) ) THEN IF ( NOT ( limrt [ i ] . definition . definition . of_shape . definition IN pu_bag ) ) THEN pu_bag := pu_bag + limrt [ i ] . definition . definition . of_shape . definition ; END_IF ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pu_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; ri_bag := [ ] ; pdr_bag := QUERY ( pdr &lt;* limrt | ( pdr . definition . definition . of_shape . definition :=: pu_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( pdr_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; rr_bag := QUERY ( rr &lt;* USEDIN ( pdr_bag [ j ] . used_representation , 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'REPRESENTATION_RELATIONSHIP.REP_2' ) | ( rr \ representation_relationship . name = 'reference location' ) ) ; REPEAT k := 1 to SIZEOF ( rr_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; REPEAT l := 1 to SIZEOF ( rr_bag [ k ] . rep_1 . items ) by 1 ; IF ( ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'AXIS2_PLACEMENT_2D' IN TYPEOF ( rr_bag [ k ] . rep_1 . items [ l ] ) ) OR ( 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' + 'AXIS2_PLACEMENT_3D' IN TYPEOF ( rr_bag [ k ] . rep_1 . items [ l ] ) ) ) THEN IF EXISTS ( rr_bag [ k ] . rep_1 . items [ l ] ) THEN IF ( rr_bag [ k ] . rep_1 . items [ l ] IN ri_bag ) THEN pass := FALSE ; ESCAPE ; ELSE ri_bag := ri_bag + rr_bag [ k ] . rep_1 . items [ l ] ; END_IF ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
   </schema>
</express>
