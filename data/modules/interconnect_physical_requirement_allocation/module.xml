<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.30 2005/12/22 09:09:56 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="interconnect_physical_requirement_allocation" 
	part="1689" 
	version="1" 
	sc4.working_group="12" 
	wg.number="4013" 
	wg.number.arm="4014" 
	wg.number.mim="4015" 
	wg.number.supersedes="3455" 
	wg.number.arm.supersedes="3456" 
	wg.number.mim.supersedes="3457"
	checklist.internal_review="3818" 
	checklist.project_leader="3819" 
	checklist.convener="3820" 
	status="TS" 
	language="E" 
	publication.year="2006" 
	published="y" 
	rcs.date="$Date: 2005/12/22 09:09:56 $" rcs.revision="$Revision: 1.30 $" development.folder="dvlp">

 <keywords>
    module, electrical, electronic, electromechanical, thermal, isolation, requirement, interconnect substrate, design, template
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the assignment of customer, regulatory agency, and enterprise requirements to an interconnect product under design.  These requirements may be assigned to physical items, geometric features, or conceptual items that are used in various phases of the design process.  The representation includes specific support for thermal and electrical isolation features and requirements.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>Thermal isolation requirement;</li>
   <li>Electrical isolation requirement;</li>
   <li>Thermal isolation template;</li>
   <li>Electrical isolation template;</li>        
    
        
    <li>items within the scope of application module <module_ref linkend="fabrication_technology:1_scope">Fabrication technology</module_ref>, ISO/CD-TS 10303-1670;</li>
<li>items within the scope of application module <module_ref linkend="integral_shield:1_scope">Integral shield</module_ref>, ISO/CD-TS 10303-xxxx;</li>
<li>items within the scope of application module <module_ref linkend="requirement_view_definition_relationship:1_scope">Requirement view definition relationship</module_ref>, ISO/TS 10303-1142.</li>
</inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
    <ae entity="Electrical_isolation_removal_template" extensible="NO">
            <aimelt xml:space="preserve">electrical_isolation_removal_template</aimelt>
            <source xml:space="preserve">ISO 10303-1670</source>
            <refpath xml:space="preserve">electrical_isolation_removal_template &lt;=
material_removal_feature_template &lt;=
single_layer_template &lt;=
part_template_definition &lt;=
product_definition
</refpath>
        </ae>
		<ae entity="Electrical_isolation_requirement" extensible="NO">
			<aimelt xml:space="preserve">product_definition</aimelt>
			<source xml:space="preserve">ISO 10303-41</source>
			<refpath xml:space="preserve">
				product_definition
				{product_definition
				product_definition.formation -&gt;
				product_definition_formation
				product_definition_formation.of_product -&gt;
				product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='requirement'}
				{product_definition.name = 'electrical isolation requirement'}				
			</refpath>
		</ae>   
	
    <ae entity="Interconnect_shield_allocation" extensible="NO">
            <aimelt xml:space="preserve">interconnect_shield_allocation</aimelt>
            <source xml:space="preserve">ISO 10303-1689</source>
            <refpath xml:space="preserve">interconnect_shield_allocation &lt;=
requirement_assignment
</refpath>
            <aa attribute="assigned_to" assertion_to="integral_or_routed_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">interconnect_shield_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				laminate_component =&gt;
				integral_shield
				</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Routed_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">interconnect_shield_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				laminate_component =&gt;
				integral_shield =&gt;
				routed_shield
				</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Integral_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">interconnect_shield_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				laminate_component =&gt;
				integral_shield
				</refpath>
            </aa>
        </ae>
	
		 <ae entity="Thermal_isolation_removal_template" extensible="NO">
			<aimelt xml:space="preserve">thermal_isolation_removal_template</aimelt>
			<source xml:space="preserve">ISO 10303-1689</source>
			<refpath xml:space="preserve">thermal_isolation_removal_template &lt;=
				material_removal_feature_template &lt;=
				single_layer_template &lt;=
				part_template_definition &lt;=
				product_definition
			</refpath>
        </ae>

		<ae entity="Thermal_isolation_requirement" extensible="NO">
			<aimelt xml:space="preserve">product_definition</aimelt>
			<source xml:space="preserve">ISO 10303-41</source>
			<refpath xml:space="preserve">
				product_definition
				{product_definition
				product_definition.formation -&gt;
				product_definition_formation
				product_definition_formation.of_product -&gt;
				product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='requirement'}
				{product_definition.name = 'thermal isolation requirement'}				
			</refpath>
		</ae>   
		<sc constraint="material_removal_feature_template_subtypes" entity="Material_removal_feature_template">
			<description/>
			<constraint>
			ipra_part_template_definition_subtypes
			</constraint>
			<source xml:space="preserve"/>
		</sc>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
	   <shortnames>
			<shortname name="INSHAL" entity="interconnect_shield_allocation"/>		
			<shortname name="TIRTD" entity="thermal_isolation_removal_template_definition"/>
	   </shortnames>                                 		          		               	                              
 </mim>

</module>
