<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-04-04T09:52:19" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="interface_component_mim schema_instance"/>
   <schema name="Interface_component_mim">
      <interface kind="use" schema="Physical_component_feature_mim"/>
      <entity name="interface_component_definition" supertypes="assembly_component">
         <where label="WR1" expression=" ( SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'INTERFACE_COMPONENT_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'INTERFACE_COMPONENT_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( 'INTERFACE_COMPONENT_MIM.' + 'PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN TYPEOF ( sa ) ) AND ( sa \ shape_aspect . description IN [ 'interconnect component interface terminal' , 'packaged connector component interface terminal' ] ) ) ) &gt;= 1 ) ) &gt;= 1 ) "/>
      </entity>
      <entity name="physical_component_interface_terminal" supertypes="physical_component_feature">
         <where label="WR1" expression=" SELF \ shape_aspect . description IN [ 'interconnect component interface terminal' , 'packaged connector component interface terminal' ] "/>
         <where label="WR2" expression=" 'INTERFACE_COMPONENT_MIM.' + 'COMPONENT_DEFINITION' IN TYPEOF ( SELF . of_shape . definition ) "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'INTERFACE_COMPONENT_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'instantiated feature' ) ) &lt;= 1 "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'INTERFACE_COMPONENT_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'design usage' ) ) &lt;= 1 "/>
         <where label="WR5" expression=" ( NOT ( SELF \ shape_aspect . description = 'packaged connector component interface terminal' ) ) OR ( 'INTERFACE_COMPONENT_MIM.' + 'INTERFACE_COMPONENT_DEFINITION' IN TYPEOF ( SELF . of_shape . definition ) ) "/>
         <where label="WR6" expression=" ( NOT ( SELF \ shape_aspect . description = 'packaged connector component interface terminal' ) ) OR ( SELF . of_shape . definition \ product_definition . frame_of_reference . name = 'physical occurrence' ) "/>
         <where label="WR7" expression=" ( NOT ( SELF \ shape_aspect . description = 'interconnect component interface terminal' ) ) OR ( ( SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'INTERFACE_COMPONENT_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | ( sar . related_shape_aspect \ shape_aspect . description = 'connection zone' ) ) ) = 1 ) AND NOT ( SELF . of_shape . definition \ product_definition . description IN [ 'assembly module component' , 'bare die component' , 'interconnect module component' , 'laminate component' , 'packaged component' ] ) ) "/>
         <where label="WR8" expression=" ( NOT ( SELF \ shape_aspect . description = 'packaged connector component interface terminal' ) ) OR ( SELF . product_definitional ) "/>
         <where label="WR9" expression=" ( NOT ( SELF \ shape_aspect . description = 'packaged connector component interface terminal' ) ) OR ( ( 'INTERFACE_COMPONENT_MIM.' + 'PACKAGED_COMPONENT' IN TYPEOF ( SELF . of_shape . definition ) ) AND ( SELF . of_shape . definition \ product_definition . description = 'packaged connector component' ) AND ( SELF . of_shape . definition \ product_definition . frame_of_reference . name = 'physical occurrence' ) ) "/>
         <where label="WR10" expression=" ( NOT ( SELF \ shape_aspect . description = 'packaged connector component interface terminal' ) ) OR ( SIZEOF ( QUERY ( i_f &lt;* QUERY ( sar &lt;* USEDIN ( SELF , 'INTERFACE_COMPONENT_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'instantiated feature' ) | ( 'INTERFACE_COMPONENT_MIM.' + 'PACKAGED_PART_TERMINAL' IN TYPEOF ( i_f . relating_shape_aspect ) ) AND ( i_f . relating_shape_aspect \ shape_aspect . description = 'interface terminal' ) ) ) = 1 ) "/>
      </entity>
      <rule name="component_feature_unique_constraint" appliesto="component_terminal physical_component_interface_terminal">
         <algorithm> LOCAL ct : BAG OF shape_aspect := QUERY ( ct &lt;* component_terminal | ( ct \ shape_aspect . description IN [ 'assembly module component terminal' , 'bare die component terminal' , 'interconnect component join terminal' , 'interconnect module component terminal' , 'interconnect module component stratum based terminal' , 'minimally defined component terminal' , 'packaged component join terminal' ] ) ) ; cit : BAG OF shape_aspect := QUERY ( cit &lt;* physical_component_interface_terminal | ( cit \ shape_aspect . description IN [ 'interconnect component interface terminal' , 'packaged connector component interface terminal' ] ) ) ; cf : BAG OF shape_aspect ; cd_bag : BAG OF component_definition := [ ] ; sa_bag : BAG OF shape_aspect ; sar_bag : BAG OF shape_aspect_relationship ; pass : BOOLEAN := TRUE ; def_bag : BAG OF shape_aspect ; END_LOCAL ; cf := ct + cit ; REPEAT i := 1 to SIZEOF ( cf ) by 1 ; IF EXISTS ( cf [ i ] . of_shape . definition ) THEN IF ( 'COMPONENT_FEATURE_MIM.' + 'COMPONENT_DEFINITION' IN TYPEOF ( cf [ i ] . of_shape . definition ) ) THEN IF ( NOT ( cf [ i ] . of_shape . definition IN cd_bag ) ) THEN cd_bag := cd_bag + cf [ i ] . of_shape . definition ; END_IF ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( cd_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; def_bag := [ ] ; sa_bag := QUERY ( sa &lt;* cf | ( sa . of_shape . definition :=: cd_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( sa_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; sar_bag := QUERY ( sar &lt;* USEDIN ( sa_bag [ j ] , 'COMPONENT_FEATURE_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | ( sar \ shape_aspect_relationship . name = 'instantiated feature' ) ) ; REPEAT k := 1 to SIZEOF ( sar_bag ) by 1 ; IF EXISTS ( sar_bag [ k ] . relating_shape_aspect ) THEN IF ( sar_bag [ k ] . relating_shape_aspect IN def_bag ) THEN pass := FALSE ; ESCAPE ; ELSE def_bag := def_bag + sar_bag [ k ] . relating_shape_aspect ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
   </schema>
</express>
