<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.47 2009/04/23 11:28:18 liutkuviene Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="interface_component" 
	name.french="Composant d'interface"
	part="1691" version="2" sc4.working_group="12" 
	wg.number="6413" 
	wg.number.arm="6414" 
	wg.number.mim="6415" 
	wg.number.supersedes="5682" 
	wg.number.arm.supersedes="5683" 
	wg.number.mim.supersedes="5684" 
	checklist.internal_review="6566" 
	checklist.project_leader="6567" 
	checklist.convener="6568" 
	status="TS" language="E" 
	publication.year="2009" 
	publication.date="2009-07-01" 
	published="y"
	previous.revision.year="2006" previous.revision.cancelled="NO" revision.complete="YES"  
	rcs.date="$Date: 2009/04/23 11:28:18 $" rcs.revision="$Revision: 1.47 $" development.folder="dvlp">

 <keywords>
    module, electrical, electronic, interface, mechanical, component, assembly
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
      <li>the component and terminals used to provide an identified internal interface in an assembly.</li>
	 
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of information required to support declaration of interface features and components 
	   in an assembly design.  This information is related to components that are considered to be internal
	   to an assembly design by a design organization and is not related in this part of ISO 10303 to the interface control definition or usage view of that design.
	   The inclusion of domain specific model for interface component provides the ability to perform design rule checks on the implemented
	   connectivity of the assembly.
   </p>
	 <example number="1">
		 A socket may be used internally in a computer to allow processor upgrades without replacing the motherboard,
		 but with a requirement for temporary partial disassembly of the computer.
		 In this case the socket would be considered to be an interface component from the viewpoint of the computer
		 assembler.
		 	 </example>
	 <example number="2">
		 An ethernet socket provided on the motherboard that allows an end user to connect the assembled computer
		 to an ethernet cable would not be modeled as an interface component since the ethernet cable is not internal to
		 the assembled computer.
	 </example>
	 <note>
		 The classification of a part occurrence as an interface component depends on the design application and intent.  The same
		 product may be represented as an interface component in one design if its features are not accessible externally 
		 to the system and can be represented as a connector in another design where the external features are available.
	 </note>
	 
	<!-- 2nd edition -->
	<p>
		This second edition of this part of ISO 10303 incorporates the modifications to the first edition listed below.
	</p>
	<p>
		The following ARM EXPRESS declarations and interface specifications have been modified:
	</p>
	<ul>
		<li>Interface_component.</li>
	</ul>
	
	<p>
		In addition, modifications have been made to the mapping specification 
		and the EXPRESS-G diagrams to reflect and be consistent with the modifications of the ARM.
	</p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
      <li>the component and terminals used to provide an identified internal interface in an assembly;</li>
      <li>items within the scope of application module <module_ref linkend="physical_component_feature:1_scope">Physical component feature</module_ref>, ISO/TS 10303-1721.</li>
   </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>interconnect substrate design.</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Interface_component" extensible="NO">
            <aimelt xml:space="preserve">interface_component</aimelt>
            <source xml:space="preserve">ISO 10303-1691</source>
            <refpath xml:space="preserve">interface_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
{product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'instantiated part'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit}
</refpath>
        </ae>
    <ae entity="Physical_component_interface_terminal" extensible="NO">
            <aimelt xml:space="preserve">physical_component_interface_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1691</source>
            <refpath xml:space="preserve">physical_component_interface_terminal &lt;=
physical_component_feature &lt;=
component_feature &lt;=
shape_aspect
</refpath>
            <aa attribute="associated_component" assertion_to="Physical_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">physical_component_interface_terminal &lt;=
physical_component_feature &lt;=
component_feature &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component =&gt;
physical_component 
</refpath>
            </aa>
        </ae>
		<sc constraint="physical_component_feature_subtypes" entity="Physical_component_feature">
			<description/>
			<constraint>
			physical_component_feature_subtypes
			</constraint>
			<source xml:space="preserve"/>
		</sc>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>     
   </express-g>
	   <shortnames>
	   	<shortname name="PCIT" entity="physical_component_interface_terminal"/>
	   	<shortname name="INTCMP" entity="interface_component"/>	   	
	   </shortnames>                                 		          		               	                                    
 </mim>

</module>
