(*
   $Id: arm_lf.exp,v 1.15 2008/10/14 22:02:40 abhpf Exp $
   ISO TC184/SC4/WG3 N2488 - ISO/TS 10303-1489 Issue management -  EXPRESS ARM Long form
   Supersedes ISO TC184/SC4/WG12 N2297
*) 

(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.7.1B.20070802*)
(* Tue Oct 14 14:50:33 2008                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)

SCHEMA Issue_management_arm_LF;

(*
USE FROM Activity_method_assignment_arm;    

USE FROM Disposition_arm;    
USE FROM Issue_arm;    
*)
(* USED FROM (Date_time_arm); *)
TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

(* Pruned unused type: im_activity_method_item  *)


(* Pruned unused type: im_affected_item_select  *)


(* Pruned unused type: im_alias_identification_item  *)


(* Pruned unused type: im_approval_item  *)


(* Pruned unused type: im_certification_item  *)


(* Pruned unused type: im_classification  *)


(* Pruned unused type: im_contract_item  *)


(* Pruned unused type: im_date_or_date_time_item  *)


(* Pruned unused type: im_event_item  *)


(* Pruned unused type: im_identification_item  *)


(* Pruned unused type: im_issue_reference_item  *)


(* Pruned unused type: im_observed_context  *)


(* Pruned unused type: im_organization_or_person_in_organization_item  *)


(* Pruned unused type: im_project_item  *)


(* Pruned unused type: im_security_classification_item  *)


(* Pruned unused type: im_string_select  *)

(* USED FROM (Activity_method_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_method_item = SELECT (
   Approval_assignment,
   Certification,
   Date_or_date_time_assignment,
   Observation,
   Security_classification);
END_TYPE;


(* Pruned unused type: disposition_identification_item  *)

(* USED FROM (Approval_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE approval_item = SELECT (
   Activity_actual,
   Certification,
   Contract,
   Event,
   Identification_assignment,
   Observation,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_view_definition,
   View_definition_context,
   Work_request);
END_TYPE;

(* USED FROM (Date_time_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_or_date_time_item = SELECT (
   Certification,
   Contract,
   Identification_assignment,
   Observation,
   Organization_or_person_in_organization_assignment,
   Product_as_planned,
   Product_as_realized,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_view_definition,
   Security_classification_assignment,
   View_definition_context);
END_TYPE;

(* USED FROM (Person_organization_arm); *)
TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 
(* USED FROM (Identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   Activity_method,
   Address,
   Approval,
   Approval_status,
   Certification,
   Contract,
   Disposition,
   Event,
   Organization,
   Organization_or_person_in_organization_assignment,
   Person,
   Person_in_organization,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Project,
   Security_classification,
   Security_classification_assignment,
   View_definition_context);
END_TYPE;

(* USED FROM (Issue_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE issue_reference_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_relationship,
   Activity_status,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Applied_activity_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Attribute_translation_assignment,
   Calendar_date,
   Certification,
   Certification_assignment,
   Class,
   Classification_assignment,
   Contract,
   Contract_assignment,
   Date_or_date_time_assignment,
   Date_time,
   Event,
   Event_assignment,
   Event_relationship,
   Identification_assignment,
   Language,
   Language_indication,
   Local_time,
   Observation,
   Observation_consequence,
   Observation_relationship,
   Organization,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Product,
   Product_category,
   Product_category_assignment,
   Product_category_hierarchy,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Security_classification,
   Security_classification_assignment,
   Unit,
   Value_with_unit,
   View_definition_context,
   Work_request,
   Work_request_status);
END_TYPE;


(* Pruned unused type: observation_approval  *)


(* Pruned unused type: observation_classification_item  *)


(* Pruned unused type: observation_date_time  *)

(* USED FROM (Observation_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE observation_recorder = SELECT (
   Product_as_realized);
END_TYPE;

(* USED FROM (Observation_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE observed_context = SELECT (
   Activity,
   Activity_method,
   Applied_activity_assignment,
   Approval_assignment,
   Certification_assignment,
   Contract_assignment,
   Event_assignment,
   Issue,
   Observation_consequence,
   Product,
   Product_design_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_view_definition,
   Project,
   Project_assignment,
   Security_classification_assignment);
END_TYPE;


(* Pruned unused type: observing_person  *)

(* USED FROM (Date_time_arm); *)
TYPE date_or_date_time_select = SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 

(* Pruned unused type: im_activity_item  *)

(* USED FROM (Date_time_arm); *)
TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE year_number = INTEGER;
END_TYPE; 
(* USED FROM (Activity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_item = SELECT (
   Activity,
   Activity_method,
   Applied_activity_assignment,
   Contract,
   Issue,
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;

(* USED FROM (Classification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   Activity,
   Activity_relationship,
   Applied_activity_assignment,
   Conversion_based_unit,
   Derived_unit,
   Observation,
   Observation_relationship,
   Product,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_view_definition,
   Uncertainty_with_unit,
   Unit,
   Value_with_unit,
   View_definition_context);
END_TYPE;


(* Pruned unused type: mri_alias_identification_item  *)


(* Pruned unused type: mri_approval_item  *)


(* Pruned unused type: mri_date_or_date_time_item  *)


(* Pruned unused type: mri_identification_item  *)


(* Pruned unused type: mri_organization_or_person_in_organization_item  *)


(* Pruned unused type: mri_string_select  *)

(* USED FROM (Alias_identification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE alias_identification_item = identification_item;
WHERE
  wr1 : NOT ('ISSUE_MANAGEMENT_ARM.ACTIVITY_METHOD' IN TYPEOF(SELF));
  wr2 : NOT ('ISSUE_MANAGEMENT_ARM.DISPOSITION' IN TYPEOF(SELF));
  wr3 : NOT ('ISSUE_MANAGEMENT_ARM.PRODUCT_AS_INDIVIDUAL_VERSION' IN TYPEOF(SELF));
  wr4 : NOT ('ISSUE_MANAGEMENT_ARM.PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr5 : NOT ('ISSUE_MANAGEMENT_ARM.VIEW_DEFINITION_CONTEXT' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Certification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE certification_item = SELECT (
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Project);
END_TYPE;

(* USED FROM (Contract_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE contract_item = SELECT (
   organization_or_person_in_organization_item,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Product_version);
END_TYPE;

(* USED FROM (Multi_linguism_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE string_select = SELECT (
   Approval,
   Approval_relationship,
   Approval_status,
   Certification,
   Contract,
   Date_or_date_time_assignment,
   Identification_assignment,
   Organization_relationship,
   Person_in_organization,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Project,
   Project_assignment,
   Project_relationship);
END_TYPE;

(* USED FROM (Person_organization_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE organization_or_person_in_organization_item = SELECT (
   Contract,
   Identification_assignment,
   Observation,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Security_classification_assignment);
END_TYPE;

(* USED FROM (Project_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE project_item = SELECT (
   Activity_method,
   Applied_activity_assignment);
END_TYPE;

(* USED FROM (Security_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE security_classification_item = SELECT (
   Product_as_individual,
   Product_as_individual_version,
   Product_as_planned,
   Product_as_realized,
   Product_design_version_to_individual,
   Product_version,
   Product_view_definition,
   Project_relationship);
END_TYPE;


(* Pruned unused type: product_as_individual_identification_item  *)

(* USED FROM (Work_request_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE affected_item_select = SELECT (
   Activity_method,
   Contract,
   Organization,
   Person,
   Person_in_organization,
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;

(* USED FROM (Event_arm); *)
TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_number_value = NUMBER;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_string_value = STRING;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE length_measure = REAL;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   length_measure,
   plane_angle_measure);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE plane_angle_measure = REAL;
END_TYPE; 
(* USED FROM (Event_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE event_item = SELECT (
   Observation);
END_TYPE;

(* USED FROM (Person_organization_assignment_arm); *)
ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role            : STRING;
  items           : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Activity_method_arm); *)
ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Disposition_arm); *)
ENTITY Disposition
  SUBTYPE OF (Approval);
  name : STRING;
END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval;
    actual_date  : OPTIONAL date_or_date_time_select;
    planned_date : OPTIONAL date_or_date_time_select;
    purpose      : STRING;
    status       : Approval_status;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_assignment;
    assigned_approval : Approval;
    items             : SET[1:?] OF approval_item;
    role              : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_relationship;
    relation_type     : STRING;
    description       : OPTIONAL STRING;
    relating_approval : Approval;
    related_approval  : Approval;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_status;
    status_name : STRING;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approving_person_organization;
    approval_date       : OPTIONAL date_or_date_time_select;
    authorized_approval : Approval;
    person_organization : organization_or_person_in_organization_select;
    role                : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Date_time_assignment_arm); *)
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;
(* USED FROM (Identification_assignment_arm); *)
ENTITY Identification_assignment;
  identifier  : STRING;
  role        : STRING;
  description : OPTIONAL STRING;
  items       : SET [1:?] OF identification_item;
END_ENTITY;
(* USED FROM (Issue_arm); *)
ENTITY Issue
  SUBTYPE OF (Observation);
END_ENTITY;
(* USED FROM (Issue_arm); *)
ENTITY Issue_consequence
  SUBTYPE OF (Observation_consequence);
END_ENTITY;
(* USED FROM (Issue_arm); *)
ENTITY Issue_reference
  SUBTYPE OF (Observation_item);
  item : SET[0:?] OF issue_reference_item;
END_ENTITY;
(* USED FROM (Observation_arm); *)
ENTITY Observation;
  id : STRING;
  name : STRING;
  description : STRING;
  applies_to : SET[0:?] OF Observation_item;
  in_context : SET[0:?] OF observed_context;
  observed_by : SET[0:?] OF observation_recorder;
  observed_during : OPTIONAL Activity_actual;
  related_records : SET[0:?] OF Observation_item;
END_ENTITY;
(* USED FROM (Observation_arm); *)
ENTITY Observation_consequence;
  id : STRING;
  name : STRING;
  infered_from : Observation;
  requests : Work_request;
  role : STRING;
END_ENTITY;
(* USED FROM (Observation_arm); *)
ENTITY Observation_item;
  access_comment : STRING;
  item_identifier : STRING;
  item_type : STRING;
END_ENTITY;
(* USED FROM (Observation_arm); *)
ENTITY Observation_relationship;
  relating : Observation;
  related : Observation;
  role : STRING;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;
(* USED FROM (Activity_as_realized_arm); *)
ENTITY Activity_actual
  SUBTYPE OF (Activity);
END_ENTITY;
(* USED FROM (Activity_as_realized_arm); *)
ENTITY Activity_happening
  SUBTYPE OF (Activity_relationship);
  SELF\Activity_relationship.relating_activity : Activity_actual;  -- actual : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

  (* removed : SELF\Activity_relationship.predicted :  ACTIVITY *)
    DERIVE
      actual : ACTIVITY_ACTUAL := SELF\Activity_relationship.relating_activity;  -- RELATING_ACTIVITY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      predicted : ACTIVITY := SELF\Activity_relationship.related_activity;  -- RELATED_ACTIVITY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

WHERE
  WR1: NOT ('ACTIVITY_AS_REALIZED.ACTIVITY_ACTUAL' IN TYPEOF(predicted));
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Classification_assignment_arm); *)
ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class
  SUPERTYPE OF (ONEOF (
              CLASS_BY_EXTENSION,
              CLASS_BY_INTENSION));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Alias_identification_arm); *)
  ENTITY Alias_identification
    SUBTYPE OF (Identification_assignment);
      SELF\Identification_assignment.items : SET [1:?] OF alias_identification_item;
    DERIVE
      SELF\Identification_assignment.role : STRING := 'alias';
  END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract;
  id             : STRING;
  purpose        : STRING;
  kind	     : STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_assignment;
  assigned_contract  : Contract;
  items              : SET [1:?] OF contract_item;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_version
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_AS_PLANNED,
                        PRODUCT_AS_REALIZED))
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_view
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_planned
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_realized
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_to_individual;
  product_design : Product;
  individual_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_version_to_individual;
  product_design_version : Product_version;
  individual_product : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_planned_to_realized;
  planned_product : Product_as_planned;
  realized_product : Product_as_realized;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request;
  request_id : STRING;
  version_id : STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request_status;
  status : STRING;
  work_request : Work_request;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit
  SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'ISSUE_MANAGEMENT_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;
(* USED FROM (Event_assignment_arm); *)
ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product;
  id : STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product_category_assignment;
  category : Product_category;
  products : SET[1:?] OF Product;
END_ENTITY;
(* USED FROM (Product_version_arm); *)
ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'ISSUE_MANAGEMENT_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'ISSUE_MANAGEMENT_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category;  
  id		: OPTIONAL STRING;
  name	: STRING;
  description : OPTIONAL STRING;  
END_ENTITY;   
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category_hierarchy;  
  super_category : Product_category;  
  sub_category   : Product_category;
END_ENTITY;   


END_SCHEMA;


