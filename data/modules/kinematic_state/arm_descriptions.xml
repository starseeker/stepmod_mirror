<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="kinematic_state" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2011/08/31 12:03:48 $" rcs.revision="$Revision: 1.4 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Kinematic_state_arm
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Kinematic_state_arm">
</ext_description>

<ext_description linkend="Kinematic_state_arm.ksa_initial_application_domain_enumeration">
	The <b>ksa_initial_application_domain_enumeration</b> provides pre-defined identifiers for the initial application domains of
	<express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/>s.
</ext_description>
<ext_description linkend="Kinematic_state_arm.ksa_initial_application_domain_enumeration.kinematic_state">
	the application domain is kinematic state.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Type: spatial_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.spatial_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.spatial_rotation">
	The <b>spatial_rotation</b> type enables an arbitrary rotation in 3D space (<i>R<sup>3</sup></i>) to be specified either
	as a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.ypr_rotation"/> 
	or as a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Enumeration: ypr_enumeration 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_enumeration">
	The <b>ypr_enumeration</b> is a means by which the angles of rotation about the origin in Cartesian
	coordinate space R<sup>3</sup> are distinguished.
	The <b>yaw</b> represents the angle by which the original frame (<i>x</i><sub>0</sub>; <i>y</i><sub>0</sub>; <i>z</i><sub>0</sub>) 
	is rotated first about the z-axis to yield an intermediate 
	(<i>x</i>&#8242;, <i>y</i>&#8242;, <i>z</i>&#8242;) frame.
	The <b>pitch</b> represents the angle by which the intermediate frame 
	(<i>x</i>&#8242;, <i>y</i>&#8242;, <i>z</i>&#8242;) 
	then is rotated about the y&#8242;-axis to yield another intermediate 
	(<i>x</i>&#8243;, <i>y</i>&#8243;, <i>z</i>&#8243;) frame.
	The <b>roll</b> represents the angle by which the
	(<i>x</i>&#8243;, <i>y</i>&#8243;, <i>z</i>&#8243;) 
	frame is rotated about the x&#8243;-axis to yield the desired final (x, y, z) frame.
	<note>
		For more detailed information on yaw, pitch, and roll convention see ISO 8855:1991
	</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Enumeration: ypr_enumeration  Item: yaw 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.yaw"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_enumeration.yaw">
	the angle of rotation about the z-axis;
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Enumeration: ypr_enumeration  Item: pitch 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.pitch"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_enumeration.pitch">
	the angle of rotation about the y&#8242;-axis;
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Enumeration: ypr_enumeration  Item: roll 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.roll"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_enumeration.roll">
	the angle of rotation about the x&#8242;-axis.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Type: ypr_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_rotation">
	The <b>ypr_rotation</b> type is a means for specifying an ordered sequence of the angles of rotation.
	The 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.yaw"/> 
	value is the first, the 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.pitch"/> 
	value the second, and the 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.roll"/> 
	value the last element in the array.
	The yaw rotation shall be performed first, followed by the pitch rotation.
	The roll rotation shall be performed as the last action of a <b>ypr_rotation</b>.
	<note>
		An <i>EXPRESS</i> function which returns the rotation matrix corresponding to an input
		<b>ypr_rotation</b> is given in annex E.
		This function has been provided for applications that use this part of ISO 10303, 
		but need the rotational transformation to be expressed in terms of a rotation
		matrix rather than in terms of a sequence of rotation angles.
	</note>
</ext_description>

<!-- IP1 -->
<ext_description linkend="Kinematic_state_arm.ypr_rotation.wr:IP1">
	<p>
	The values of the yaw, pitch, and roll angle shall be in the ranges equivalent
	to the following ranges, where the angles are measured in radians:
	</p>
	<p> <i>yaw angle</i> &#8712; &#93;- &#960;, &#960;&#93;</p>
	<p>	<i>pitch angle</i> &#8712; &#91;- &#960;/2, &#960;/2&#93;</p> 
	<p>	<i>roll angle</i> &#8712; &#93;- &#960;, &#960;&#93;</p>	
</ext_description>

<!-- IP2 -->
<ext_description linkend="Kinematic_state_arm.ypr_rotation.wr:IP2">
	If the absolute value of the pitch angle is equal to the equivalent
	value of &#960;/2, the roll angle shall be zero.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Cylindrical_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Cylindrical_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Cylindrical_pair_value">
	A <b>Cylindrical_pair_value</b> is a type of
    <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Cylindrical_pair_value</b> specifies the set of pair parameters for a 
    <express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Cylindrical_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Cylindrical_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Cylindrical_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Cylindrical_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Cylindrical_pair"/> 
	to which the <b>Cylindrical_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Cylindrical_pair_value  Attribute: actual_translation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Cylindrical_pair_value.actual_translation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Cylindrical_pair_value.actual_translation">
	the translation value.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Cylindrical_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Cylindrical_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Cylindrical_pair_value.actual_rotation">
	the angle of rotation.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Gear_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Gear_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Gear_pair_value">
	A <b>Gear_pair_value</b> is a type of
    <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Gear_pair_value</b> specifies the pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Gear_pair"/>.
	<note>
		<p>
			If the gear pair is part of a more complex gear mechanism, the gear pair values as defined here may not be the primary design targets.
			In the case of a planetary gear mechanism, for example, it is more important to know the rotation angles of the planetary gears 
			with respect to an inertial coordinate system than the rotation angles between the planetary gears and the frames which support them.
			See [3] for a detailed description of this specific example. 
		</p>
		<p>
			For a given configuration of pairs within a mechanism, the more global motion parameters can be derived, in general, 
			from the individual pair parameters and vice versa.
			This is not possible, however, generically without knowledge of the configuration.
			Therefore, the specification of functions which provide such derivations is left to an application protocol 
			for which these derivations are required.
		</p>
	</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Gear_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Gear_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Gear_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Gear_pair"/> 
	to which the <b>Gear_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Gear_pair_value  Attribute: actual_rotation_1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Gear_pair_value.actual_rotation_1"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Gear_pair_value.actual_rotation_1">
	the value of the pair parameter of the first link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Gear_pair_value  Attribute: actual_rotation_2 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Gear_pair_value.actual_rotation_2"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Gear_pair_value.actual_rotation_2">
	the value of the pair parameter of the second link.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Mechanism_state_representation  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Mechanism_state_representation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Mechanism_state_representation">
	A <b>Mechanism_state_representation</b> is a type of
	<express_ref linkend="foundation_representation:arm:Foundation_representation_arm.Representation" />
	that specifies a particular state of a
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Mechanism_representation"/>
	by applying 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value"/>s
	for each
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Kinematic_pair"/>
	of the underlying
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Mechanism_representation"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Mechanism_state_representation  Attribute: items 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Mechanism_state_representation.items"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Mechanism_state_representation.items">
	an inherited attribute that shall be of type
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
	There shall exist at least one
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value" />
	for the <b>Mechanism_state_representation</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Mechanism_state_representation  Attribute: represented_mechanism 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Mechanism_state_representation.represented_mechanism"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Mechanism_state_representation.represented_mechanism">
	specifies the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Mechanism_representation" />
	for which a particular state is represented.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Mechanism_state_representation  Attribute: context_of_items 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Mechanism_state_representation.context_of_items"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Mechanism_state_representation.context_of_items">
	an inherited attribute that shall be of type
	<express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_coordinate_space" />.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Pair_value">
	A <b>Pair_value</b> is a type of
	<express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Detailed_geometric_model_element" />
	that specifies a configuration of the two links that join a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Kinematic_pair"/>.
	Each <b>Pair_value</b> is either a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value"/>, 
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Revolute_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Prismatic_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Screw_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Cylindrical_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Spherical_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rolling_curve_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Gear_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rack_and_pinion_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Universal_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Planar_pair_value"/>,
	an
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Unconstrained_pair_value"/>,
	a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value"/>,
	or a
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value"/>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Kinematic_pair"/> 
	to which the <b>Pair_value</b> applies.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Planar_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Planar_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Planar_pair_value">
	A <b>Planar_pair_value</b> is a type of
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
	A <b>Planar_pair_value</b> specifies the set of pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Planar_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Planar_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Planar_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_pair"/> 
	to which the <b>Planar_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Planar_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Planar_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Planar_pair_value.actual_rotation">
	the value of the angle of rotation for a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Planar_pair_value  Attribute: actual_translation_x 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Planar_pair_value.actual_translation_x"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Planar_pair_value.actual_translation_x">
	the value of translation in x-direction for a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Planar_pair_value  Attribute: actual_translation_y 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Planar_pair_value.actual_translation_y"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Planar_pair_value.actual_translation_y">
	the value of translation in y-direction for a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_pair"/>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_planar_curve_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_planar_curve_pair_value">
	A <b>Point_on_planar_curve_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Point_on_planar_curve_pair_value</b> specifies the pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_planar_curve_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_planar_curve_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_planar_curve_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_planar_curve_pair"/> 
	to which the <b>Point_on_planar_curve_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_planar_curve_pair_value  Attribute: actual_point_on_curve 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value.actual_point_on_curve"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_planar_curve_pair_value.actual_point_on_curve">
	the positional value for the point on the curve.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_planar_curve_pair_value  Attribute: input_orientation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value.input_orientation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_planar_curve_pair_value.input_orientation">
	the input specification of the rotational pair parameter values from which the actual orientation is derived.
	An <b>input_orientation</b> is either a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.ypr_rotation"/> 
	or a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_planar_curve_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_planar_curve_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_planar_curve_pair_value.wr:WR1">
	The <b>actual_point_on_curve</b> shall be defined as a point on the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_planar_curve_pair.pair_curve"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_planar_curve_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_surface_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_surface_pair_value">
	A <b>Point_on_surface_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Point_on_surface_pair_value</b> specifies the pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_surface_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_surface_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_surface_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_surface_pair"/> 
	to which the <b>Point_on_surface_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_surface_pair_value  Attribute: actual_point_on_surface 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value.actual_point_on_surface"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_surface_pair_value.actual_point_on_surface">
	the positional value for the point on the surface.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_surface_pair_value  Attribute: input_orientation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value.input_orientation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_surface_pair_value.input_orientation">
	the input specification of the rotational pair parameter values from which the actual orientation is derived.
	An <b>input_orientation</b> is either an 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.ypr_rotation"/> 
	or a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Point_on_surface_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Point_on_surface_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Point_on_surface_pair_value.wr:WR1">
	The <b>actual_point_on_surface</b> shall be defined as a point on the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_surface_pair.pair_surface"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Point_on_surface_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Prismatic_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Prismatic_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Prismatic_pair_value">
	A <b>Prismatic_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Prismatic_pair_value</b> is the value of the pair parameter for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Prismatic_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Prismatic_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Prismatic_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Prismatic_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Prismatic_pair"/> 
	to which the <b>Prismatic_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Prismatic_pair_value  Attribute: actual_translation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Prismatic_pair_value.actual_translation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Prismatic_pair_value.actual_translation">
	the value of the pair parameter.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rack_and_pinion_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rack_and_pinion_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rack_and_pinion_pair_value">
	A <b>Rack_and_pinion_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Rack_and_pinion_pair_value</b> specifies the pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rack_and_pinion_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rack_and_pinion_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rack_and_pinion_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rack_and_pinion_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rack_and_pinion_pair"/> 
	to which the <b>Rack_and_pinion_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rack_and_pinion_pair_value  Attribute: actual_displacement 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rack_and_pinion_pair_value.actual_displacement"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rack_and_pinion_pair_value.actual_displacement">
	the value of the pair parameter for the rack.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rack_and_pinion_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rack_and_pinion_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rack_and_pinion_pair_value.actual_rotation">
	the resulting rotation of the pinion.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Revolute_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Revolute_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Revolute_pair_value">
	A <b>Revolute_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Revolute_pair_value</b> specifies the value of the pair parameter for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Revolute_pair"/>. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Revolute_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Revolute_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Revolute_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Revolute_pair"/> 
	to which the <b>Revolute_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Revolute_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Revolute_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Revolute_pair_value.actual_rotation">
	the value of the pair parameter.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_curve_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_curve_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_curve_pair_value">
	A <b>Rolling_curve_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Rolling_curve_pair_value</b> specifies the pair parameter for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rolling_curve_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_curve_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_curve_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_curve_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rolling_curve_pair"/>
	to which the <b>Rolling_curve_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_curve_pair_value  Attribute: actual_point_on_curve_1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_curve_pair_value.actual_point_on_curve_1"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_curve_pair_value.actual_point_on_curve_1">
	the contact point, defined in the parameter space of the curve on the first link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_curve_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_curve_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_curve_pair_value.wr:WR1">
	The <b>actual_point_on_curve_1</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair.curve_1"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_surface_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_surface_pair_value">
	A <b>Rolling_surface_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Rolling_surface_pair_value</b> specifies the set of pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rolling_surface_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_surface_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_surface_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Rolling_surface_pair"/> 
	to which the <b>Rolling_surface_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_surface_pair_value  Attribute: actual_point_on_surface 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value.actual_point_on_surface"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_surface_pair_value.actual_point_on_surface">
	the contact point of the contact surface 
	(<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_1"/>) 
	of the first link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_surface_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_surface_pair_value.actual_rotation">
	the angle required to rotate the <i>x<sub>c</sub><sup>p</sup></i>-direction of the first link surface around
	the <i>z<sub>c</sub></i>-direction of that surface until it coincides with the <i>x<sub>c</sub></i>-direction of the second link surface.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rolling_surface_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rolling_surface_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rolling_surface_pair_value.wr:WR1">
	The <b>actual_point_on_surface</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_1"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair"/>
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rotation_about_direction  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rotation_about_direction">
	A <b>Rotation_about_direction</b> is a type of
	<express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Detailed_geometric_model_element" />
	that specifies a rotation in Cartesian coordinate space <i>R</i><sup>3</sup>.
	The axis of rotation passes the origin of the related coordinate system; 
	its direction is given explicitely as <b>direction_of_axis</b>.
	Furthermore, the amount of rotation is specified by <b>rotation_angle</b> which may have any finite value;
	i.e., its absolute value in radians is not restricted to be less than &#960;.
	A positive value of <b>rotation_angle</b> indicates a counter-clockwise rotation when looking in the
	negative direction with respect to the <b>direction_of_axis</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rotation_about_direction  Attribute: direction_of_axis 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction.direction_of_axis"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rotation_about_direction.direction_of_axis">
	the three-dimensional direction of the axis of rotation.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rotation_about_direction  Attribute: rotation_angle 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction.rotation_angle"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rotation_about_direction.rotation_angle">
	the angle of rotation about the axis of rotation.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Rotation_about_direction  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Rotation_about_direction.wr:WR1">
	The <b>direction_of_axis</b> shall be a three-dimensional direction.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Screw_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Screw_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Screw_pair_value">
	A <b>Screw_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Screw_pair_value</b> specifies the value of the pair parameter of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Screw_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Screw_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Screw_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Screw_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Screw_pair"/> 
	to which the <b>Screw_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Screw_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Screw_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Screw_pair_value.actual_rotation">
	the rotation angle of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Screw_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value">
	A <b>Sliding_curve_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Sliding_curve_pair_value</b> specifies the pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Sliding_curve_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Sliding_curve_pair"/> 
	to which the <b>Sliding_curve_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  Attribute: actual_point_on_curve_1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value.actual_point_on_curve_1"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value.actual_point_on_curve_1">
	the contact point, defined in the parameter space of the curve on the first link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  Attribute: actual_point_on_curve_2 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value.actual_point_on_curve_2"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value.actual_point_on_curve_2">
	the contact point, defined in the parameter space of the curve on the second link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value.wr:WR1">
	The <b>actual_point_on_curve_1</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair.curve_1"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_curve_pair_value  Where: WR2 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_curve_pair_value.wr:WR2"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_curve_pair_value.wr:WR2">
	The <b>actual_point_on_curve_2</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair.curve_2"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Planar_curve_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value">
	A <b>Sliding_surface_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
    A <b>Sliding_surface_pair_value</b> specifies the set of pair parameters for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Sliding_surface_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Sliding_surface_pair"/> 
	to which the <b>Sliding_surface_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Attribute: actual_point_on_surface_1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.actual_point_on_surface_1"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.actual_point_on_surface_1">
	the contact point of the contact surface 
	(<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_1"/>) 
	of the first link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Attribute: actual_point_on_surface_2 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.actual_point_on_surface_2"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.actual_point_on_surface_2">
	the contact point of the contact surface 
	(<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_2"/>)
	of the second link.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Attribute: actual_rotation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.actual_rotation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.actual_rotation">
	the angle required to rotate the <i>x<sub>c</sub><sup>p</sup></i>-direction of the first link surface around
	the <i>z<sub>c</sub></i>-direction of that surface until it coincides with the <i>x<sub>c</sub></i>-direction of the second link surface.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Where: WR1 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.wr:WR1">
	The <b>actual_point_on_surface_1</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_1"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Sliding_surface_pair_value  Where: WR2 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Sliding_surface_pair_value.wr:WR2"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Sliding_surface_pair_value.wr:WR2">
	The <b>actual_point_on_surface_2</b> shall be defined as a point on 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair.surface_2"/> 
	of the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Surface_pair"/> 
	referenced by <b>applies_to_pair</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Spherical_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Spherical_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Spherical_pair_value">
	A <b>Spherical_pair_value</b> is a type of
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
	A <b>Spherical_pair_value</b> specifies the set of pair parameters for a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Spherical_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Spherical_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Spherical_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Spherical_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Spherical_pair"/> 
	to which the <b>Spherical_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Spherical_pair_value  Attribute: input_orientation 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Spherical_pair_value.input_orientation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Spherical_pair_value.input_orientation">
	the input specification of the pair parameter values from which the actual orientation is derived.
	An <b>input_orientation</b> is either an 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.ypr_rotation"/> 
	or a 
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Rotation_about_direction"/>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Unconstrained_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Unconstrained_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Unconstrained_pair_value">
	An <b>Unconstrained_pair_value</b> is a type of
    <express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />
    An <b>Unconstrained_pair_value</b> specifies the pair parameters for an 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Unconstrained_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Unconstrained_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Unconstrained_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Unconstrained_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Unconstrained_pair"/> 
	to which the <b>Unconstrained_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Unconstrained_pair_value  Attribute: actual_placement 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Unconstrained_pair_value.actual_placement"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Unconstrained_pair_value.actual_placement">
	the placement of the second pair frame with respect to the first pair frame for the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Unconstrained_pair"/>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Universal_pair_value  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Universal_pair_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Universal_pair_value">
	A <b>Universal_pair_value</b> is a type of
	<express_ref linkend="Kinematic_state:arm:Kinematic_state_arm.Pair_value" />.
	A <b>Universal_pair_value</b> specifies the set of pair parameters for a 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Universal_pair"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Universal_pair_value  Attribute: applies_to_pair 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Universal_pair_value.applies_to_pair"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Universal_pair_value.applies_to_pair">
	the 
	<express_ref linkend="Kinematic_structure:arm:Kinematic_structure_arm.Universal_pair"/> 
	to which the <b>Universal_pair_value</b> applies.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Universal_pair_value  Attribute: first_rotation_angle 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Universal_pair_value.first_rotation_angle"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Universal_pair_value.first_rotation_angle">
	the angle of rotation around the first axis.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Entity: Universal_pair_value  Attribute: second_rotation_angle 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.Universal_pair_value.second_rotation_angle"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.Universal_pair_value.second_rotation_angle">
	the angle of rotation around the second axis.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Function: ypr_index 
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_index"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.ypr_index">
	The <b>ypr_index</b> function establishes an ordered sequence of angles of rotation for a linear transformation.
	The function returns 1 if the angle of rotation is of type 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.yaw"/>.
	The function returns 2 if the angle of rotation is of type 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.pitch"/>.
	The function returns 3 if the angle of rotation is of type 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration.roll"/>.
	The type of the function is INTEGER.
</ext_description>

<!--  -->
<ext_description linkend="Kinematic_state_arm.ypr_index.ypr">
	one axis of rotation as specified by the 
	<express_ref linkend="kinematic_state:arm:Kinematic_state_arm.ypr_enumeration"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Kinematic_state_arm  Subtype constraint: kss_geometric_representation_item_subtypes  
   <express_ref linkend="kinematic_state:arm:Kinematic_state_arm.kss_geometric_representation_item_subtypes"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Kinematic_state_arm.kss_geometric_representation_item_subtypes">
</ext_description>
</ext_descriptions>
