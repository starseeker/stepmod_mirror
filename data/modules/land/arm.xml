<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$">
   <application name="JSDAI" owner="LKSoft" source="land_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Land_arm">
      <interface kind="use" schema="Layered_interconnect_module_design_arm"/>
      <interface kind="reference" schema="Characterizable_object_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <entity name="Contact_size_dependent_land" supertypes="Land">
         <explicit name="derived_from">
            <typename name="Default_attachment_size_based_land_physical_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <inverse attribute="associated_component" entity="Land_interface_terminal" name="external_access_mechanism">
            <inverse.aggregate lower="1" type="SET" upper="2"/>
         </inverse>
      </entity>
      <entity name="Dependent_electrical_isolation_removal_component" supertypes="Electrical_isolation_laminate_component">
         <explicit name="derived_from">
            <typename name="Dependent_electrical_isolation_removal_template"/>
            <redeclaration entity-ref="Electrical_isolation_laminate_component"/>
         </explicit>
         <derived expression="land_get_associated_land_for_electrical_removal(SELF)" name="associated_land">
            <typename name="Land"/>
            <redeclaration entity-ref="Material_removal_laminate_component" old_name="causal_item"/>
         </derived>
         <where expression="associated_land\Definition_based_product_occurrence.derived_from :=:&#10;            SELF\Definition_based_product_occurrence.derived_from\Dependent_electrical_isolation_removal_template.associated_item" label="WR1"/>
         <where expression="NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT' IN TYPEOF(SELF))" label="WR2"/>
         <where expression="associated_land\Land.functional = FALSE" label="WR3"/>
      </entity>
      <entity name="Dependent_thermal_isolation_removal_component" supertypes="Thermal_isolation_removal_component">
         <explicit name="derived_from">
            <typename name="Dependent_thermal_isolation_removal_template"/>
            <redeclaration entity-ref="Thermal_isolation_removal_component"/>
         </explicit>
         <derived expression="land_get_associated_land_for_thermal_removal(SELF)" name="associated_land">
            <typename name="Land"/>
         </derived>
         <where expression="associated_land\Definition_based_product_occurrence.derived_from :=:&#10;            SELF\Thermal_isolation_removal_component.derived_from\Dependent_thermal_isolation_removal_template.associated_item" label="WR1"/>
         <where expression="associated_land\Land.functional = TRUE" label="WR2"/>
      </entity>
      <entity abstract.supertype="YES" name="Inter_stratum_feature_dependent_land" super.expression="ONEOF (Plated_passage_dependent_land, Unsupported_passage_dependent_land)" supertypes="Land">
         <explicit name="derived_from">
            <typename name="Default_passage_based_land_physical_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
      </entity>
      <entity name="Land" super.expression="ONEOF (Contact_size_dependent_land, Inter_stratum_feature_dependent_land)" supertypes="Stratum_feature_template_component">
         <explicit name="alternate_land_definition" optional="YES">
            <typename name="Land_physical_template"/>
         </explicit>
         <explicit name="derived_from">
            <typename name="Land_physical_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <derived expression="(SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTOR',&#10;           'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONNECTED_FILLED_AREA'] *&#10;           TYPEOF(SELF\Stratum_feature_template_component.implementation_or_resident_stratum)) = 1)" name="functional">
            <builtintype type="BOOLEAN"/>
         </derived>
         <inverse attribute="associated_component" entity="Land_join_terminal" name="access_mechanism">
            <inverse.aggregate lower="0" type="SET" upper="?"/>
         </inverse>
         <where expression="NOT(functional) OR (SIZEOF(access_mechanism) &gt; 0)" label="WR1"/>
      </entity>
      <entity name="Land_interface_terminal" supertypes="Laminate_component_interface_terminal">
         <explicit name="definition">
            <typename name="Land_template_interface_terminal"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="associated_component">
            <typename name="Contact_size_dependent_land"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <where expression="NOT EXISTS(SELF\Shape_element.description)" label="WR1"/>
      </entity>
      <entity name="Land_join_terminal" supertypes="Laminate_component_join_terminal">
         <explicit name="definition">
            <typename name="Land_template_join_terminal"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="associated_component">
            <typename name="Land"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <where expression="NOT EXISTS(SELF\Shape_element.description)" label="WR1"/>
      </entity>
      <entity name="Land_with_join_terminal" supertypes="Land Land_join_terminal">
         <derived expression="SELF" name="associated_component">
            <typename name="Land_with_join_terminal"/>
            <redeclaration entity-ref="Component_feature"/>
         </derived>
      </entity>
      <entity name="Plated_passage_dependent_land" supertypes="Inter_stratum_feature_dependent_land">
         <explicit name="reference_plated_passage">
            <typename name="Plated_passage"/>
         </explicit>
         <explicit name="derived_from">
            <typename name="Default_plated_passage_based_land_physical_template"/>
            <redeclaration entity-ref="Assembly_component"/>
         </explicit>
      </entity>
      <entity name="Thermal_isolation_removal_component" supertypes="Material_removal_structured_component">
         <explicit name="derived_from">
            <typename name="Thermal_isolation_removal_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <where expression="NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT' IN TYPEOF(SELF))" label="WR1"/>
      </entity>
      <entity name="Unsupported_passage_dependent_land" supertypes="Inter_stratum_feature_dependent_land">
         <explicit name="reference_passage">
            <typename name="Unsupported_passage"/>
         </explicit>
         <explicit name="derived_from">
            <typename name="Default_unsupported_passage_based_land_physical_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
      </entity>
      <subtype.constraint entity="Laminate_component_interface_terminal" name="l_laminate_component_interface_terminal_subtypes" super.expression="ONEOF (Component_termination_passage_interface_terminal, Land_interface_terminal)"/>
      <subtype.constraint entity="Laminate_component_join_terminal" name="l_laminate_component_join_terminal_subtypes" super.expression="ONEOF (Component_termination_passage_join_terminal, Land_join_terminal, Embedded_physical_component_terminal)"/>
      <subtype.constraint entity="Stratum_feature_template_component" name="stratum_feature_template_component_subtypes" super.expression="ONEOF (Area_component, Land)"/>
      <function name="land_get_associated_land_for_electrical_removal">
         <parameter name="input">
            <typename name="Dependent_electrical_isolation_removal_component"/>
         </parameter>
         <typename name="Land"/>
         <algorithm>LOCAL
   assembly_relationships_for_associated_structure : SET OF Structured_layout_component_sub_assembly_relationship := [];
   assembly_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'));
   associated_structure : Structured_layout_component;
   first_location : Template_location_in_structured_template := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.first_location;
   resident_stratum : stratum;
   resident_sftc : Stratum_feature_template_component;
  END_LOCAL;
  --determine resident_stratum;
  --critical to just use resident stratum as the individual design intents might be against different stratum features (different power areas).
  --address the multiple design intents here
  --use the last stratum found
   REPEAT i := 1 TO SIZEOF(input\Material_removal_laminate_component.design_intent) BY 1;
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(input\Material_removal_laminate_component.design_intent[i])) : 
     resident_stratum := input\Material_removal_laminate_component.design_intent[i];
  
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(input\Material_removal_laminate_component.design_intent[i])) :
    BEGIN
     resident_sftc := input\Material_removal_laminate_component.design_intent[i];
     CASE TRUE OF
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum;
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum;
       OTHERWISE :
        RETURN(?);
     END_CASE;
    END;
    OTHERWISE :
     RETURN(?);
  END_CASE;
   END_REPEAT;
  --determine first_location;
  --if there is more than one assembly_relationship return UNKNOWN;
   IF SIZEOF(assembly_relationship) &lt;&gt; 1 THEN RETURN(?);
   END_IF;
   
  --determine associated_land;
  --associated land is on same stratum;
  
     associated_structure := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.relating_view;
     assembly_relationships_for_associated_structure := 
                     bag_to_set(USEDIN(associated_structure, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW')) - assembly_relationship;
  --this assembly relationship is excluded since we are querying for other relationships
  
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(associated_structure)) :
  --if part of footprint then associated_land has same first_location;
    BEGIN   
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF ((first_location :=: assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.first_location) AND
         ('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
         (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
              :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
      END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(associated_structure)) :
    BEGIN
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF (('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
          (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
               :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
       END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
    OTHERWISE :
    --if no land is found return UNKNOWN.
     RETURN(?);
  END_CASE;</algorithm>
      </function>
      <function name="land_get_associated_land_for_thermal_removal">
         <parameter name="input">
            <typename name="Dependent_thermal_isolation_removal_component"/>
         </parameter>
         <typename name="Land"/>
         <algorithm>LOCAL
   assembly_relationships_for_associated_structure : SET OF Structured_layout_component_sub_assembly_relationship := [];
   assembly_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'));
   associated_structure : Structured_layout_component;
   component_mrlc : SET OF Material_removal_laminate_component := [];
   component_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW'));
   first_location : Template_location_in_structured_template := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.first_location;
   resident_stratum : stratum;
   resident_sftc : Stratum_feature_template_component;
  END_LOCAL;
  --determine resident_stratum;
  --critical to just use resident stratum as the individual isolation features might be against different stratum features (different power areas).
   REPEAT i := 1 TO SIZEOF(component_relationship) BY 1;
     component_mrlc := component_mrlc + component_relationship[i]\Structured_layout_component_sub_assembly_relationship.related_view;
   END_REPEAT;
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(component_mrlc[1]\Material_removal_laminate_component.design_intent[1])) : 
     resident_stratum := component_mrlc[1]\Material_removal_laminate_component.design_intent[1];
  
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(component_mrlc[1]\Material_removal_laminate_component.design_intent[1])) :
    BEGIN
     resident_sftc := component_mrlc[1]\Material_removal_laminate_component.design_intent[1];
     CASE TRUE OF
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum;
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum;
       OTHERWISE :
        RETURN(?);
     END_CASE;
    END;
    OTHERWISE :
     RETURN(?);
  END_CASE;
  --determine first_location;
  --if there is more than one assembly_relationship return UNKNOWN;
   IF SIZEOF(assembly_relationship) &lt;&gt; 1 THEN RETURN(?);
   END_IF;
   
  --determine associated_land;
  --associated land is on same stratum;
  
     associated_structure := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.relating_view;
     assembly_relationships_for_associated_structure := 
                     bag_to_set(USEDIN(associated_structure, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW')) - assembly_relationship;
  --this assembly relationship is excluded since we are querying for other relationships
  
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(associated_structure)) :
  --if part of footprint then associated_land has same first_location;
    BEGIN   
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF ((first_location :=: assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.first_location) AND
         ('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
         (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
              :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
      END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(associated_structure)) :
    BEGIN
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF (('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
          (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
               :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
       END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
    OTHERWISE :
    --if no land is found return UNKNOWN.
     RETURN(?);
  END_CASE;</algorithm>
      </function>
   </schema>
</express>
