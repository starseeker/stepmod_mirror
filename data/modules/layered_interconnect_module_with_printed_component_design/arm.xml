<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$">
   <application name="JSDAI" owner="LKSoft" source="layered_interconnect_module_with_printed_component_design_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Layered_interconnect_module_with_printed_component_design_arm">
      <interface kind="use" schema="Printed_physical_layout_template_arm"/>
      <interface kind="use" schema="Land_arm"/>
      <interface kind="reference" schema="Characterizable_object_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <type name="conductor_or_conductive_filled_area">
         <select selectitems="Conductor Conductive_filled_area"/>
      </type>
      <type name="limwpcd_external_identification_item">
         <select basedon="external_identification_item" extensible="YES" genericentity="YES" selectitems="Printed_component"/>
      </type>
      <entity name="Basic_multi_stratum_printed_component" supertypes="Printed_component">
         <explicit name="material_stack">
            <typename name="Stratum_feature_based_derived_pattern"/>
         </explicit>
         <explicit name="derived_from">
            <typename name="Basic_multi_stratum_printed_part_template"/>
            <redeclaration entity-ref="Printed_component"/>
         </explicit>
         <derived expression="material_stack.reference_stratum_feature" name="stratum_feature_implementation">
            <typename name="Stratum_feature"/>
         </derived>
      </entity>
      <entity name="Multi_stratum_printed_component" supertypes="Printed_component Structured_layout_component">
         <explicit name="derived_from">
            <typename name="Multi_stratum_printed_part_template"/>
            <redeclaration entity-ref="Printed_component"/>
         </explicit>
      </entity>
      <entity abstract.supertype="YES" name="Printed_component" super.expression="ONEOF (Single_stratum_printed_component, Basic_multi_stratum_printed_component, Multi_stratum_printed_component)" supertypes="Assembly_component Single_instance">
         <explicit name="derived_from">
            <typename name="Printed_part_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <inverse attribute="associated_component" entity="Printed_component_join_terminal" name="access_mechanism">
            <inverse.aggregate lower="1" type="SET" upper="?"/>
         </inverse>
         <inverse attribute="item" entity="External_source_identification" name="cad_layer">
            <inverse.aggregate lower="0" type="SET" upper="1"/>
         </inverse>
         <where expression="NOT EXISTS(SELF\Product_view_definition.name)" label="WR5"/>
      </entity>
      <entity name="Printed_component_join_terminal" supertypes="Laminate_component_join_terminal">
         <explicit name="definition">
            <typename name="Printed_part_template_join_terminal"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="associated_component">
            <typename name="Printed_component"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="stratum_concept_implementation">
            <typename name="Stratum_feature_template_component"/>
         </explicit>
         <where expression="NOT EXISTS(SELF\Shape_element.description)" label="WR1"/>
         <where expression="associated_component.derived_from :=: definition\Printed_part_template_terminal.associated_definition" label="WR2"/>
      </entity>
      <entity name="Printed_connector_component" supertypes="Printed_component">
         <explicit name="derived_from">
            <typename name="Printed_connector_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <inverse attribute="associated_component" entity="Printed_connector_component_interface_terminal" name="interface_access_mechanism">
            <inverse.aggregate lower="1" type="SET" upper="?"/>
         </inverse>
      </entity>
      <entity name="Printed_connector_component_interface_terminal" supertypes="Laminate_component_interface_terminal">
         <explicit name="definition">
            <typename name="Printed_part_template_interface_terminal"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="associated_component">
            <typename name="Printed_connector_component"/>
            <redeclaration entity-ref="Component_feature"/>
         </explicit>
         <explicit name="stratum_concept_implementation">
            <typename name="Stratum_feature_template_component"/>
         </explicit>
         <where expression="NOT EXISTS(SELF\Shape_element.description)" label="WR1"/>
      </entity>
      <entity name="Routed_transmission_line" supertypes="Assembly_component Single_instance">
         <explicit name="routed_centreline_shape">
            <typename name="Curve"/>
         </explicit>
         <explicit name="derived_from">
            <typename name="Printed_part_cross_section_template"/>
            <redeclaration entity-ref="Definition_based_product_occurrence"/>
         </explicit>
         <explicit name="component_extent">
            <typename name="Inter_stratum_extent"/>
         </explicit>
         <explicit name="curve_parameters">
            <typename name="Curve_style_parameters"/>
         </explicit>
      </entity>
      <entity name="Single_stratum_printed_component" supertypes="Printed_component Structured_layout_component">
         <explicit name="derived_from">
            <typename name="Single_stratum_printed_part_template"/>
            <redeclaration entity-ref="Printed_component"/>
         </explicit>
         <explicit name="stratum_feature_implementation">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Stratum_feature"/>
         </explicit>
         <where expression="SIZEOF(QUERY(sfi &lt;* stratum_feature_implementation |&#10;         NOT(sfi.resident_stratum = stratum_feature_implementation[1].resident_stratum)&#10;               )) = 0" label="WR1"/>
      </entity>
      <entity name="Tiebar_printed_component" supertypes="Printed_component Structured_layout_component">
         <explicit name="derived_from">
            <typename name="Printed_tiebar_template"/>
            <redeclaration entity-ref="Printed_component"/>
         </explicit>
         <derived expression="get_gpn(SELF\Printed_component.access_mechanism)" name="joined_networks">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Generic_physical_network"/>
         </derived>
         <derived expression="limdwpcd_get_ac(components)" name="tiebar_component">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Area_component"/>
         </derived>
         <derived expression="limdwpcd_get_lc(components)" name="padstack_component">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Laminate_component"/>
         </derived>
         <derived expression="QUERY(pc &lt;* padstack_component | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_PASSAGE' IN TYPEOF(pc)))" name="passage_component">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Plated_passage"/>
         </derived>
         <derived expression="limdwpcd_get_tbrs(tiebar_component)" name="tiebar_resident_stratum">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Stratum"/>
         </derived>
         <derived expression="limdwpcd_get_prs(passage_component, SELF\Assembly_component.assemblies)" name="passage_resident_stratum">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Stratum"/>
         </derived>
         <derived expression="limdwpcd_get_ppdl(passage_component)" name="passage_dependent_land_component">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Plated_passage_dependent_land"/>
         </derived>
         <inverse attribute="relating_view" entity="Structured_layout_component_sub_assembly_relationship" name="components">
            <inverse.aggregate lower="1" type="SET" upper="?"/>
            <redeclaration entity-ref="Assembly_group_component"/>
         </inverse>
         <where expression="(SIZEOF(tiebar_component) + SIZEOF(passage_component)) &gt; 0" label="WR1"/>
         <where expression="SIZEOF(components) = (SIZEOF(tiebar_component) + SIZEOF(padstack_component))" label="WR2"/>
         <where expression="SIZEOF(padstack_component) &gt; SIZEOF(passage_component)" label="WR3"/>
         <where expression="SIZEOF(QUERY(tc &lt;* tiebar_component |&#10;                  NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF&#10;                      (tc\Stratum_feature_template_component.implementation_or_resident_stratum))&#10;                 )) = 0" label="WR4"/>
         <where expression="SIZEOF(tiebar_component) = SIZEOF(tiebar_resident_stratum)" label="WR5"/>
         <where expression="SIZEOF(joined_networks) &gt; 1" label="WR6"/>
         <where expression="SIZEOF(QUERY(jn &lt;* joined_networks |&#10;                 NOT(SIZEOF(SELF\Printed_component.access_mechanism * jn\Generic_physical_network.connectivity_requirement_element) = 1 )&#10;                 )) = 0" label="WR7"/>
         <where expression="SIZEOF(QUERY(tc &lt;* tiebar_component |&#10;           NOT(SIZEOF(USEDIN(tc,'COMPONENT_FEATURE_ARM.COMPONENT_FEATURE.ASSOCIATED_COMPONENT')) = 0)&#10;              )) = 0" label="WR8"/>
         <where expression="NOT(SIZEOF(passage_component) = 1) OR&#10;             (SIZEOF(QUERY(pc &lt;* passage_component | NOT((SIZEOF(tiebar_component) = 0) OR&#10;                (SIZEOF(tiebar_resident_stratum * passage_resident_stratum) = SIZEOF(tiebar_resident_stratum))&#10;                )&#10;               )) = 0)" label="WR9"/>
         <where expression="NOT(SIZEOF(passage_component) &gt;= 1) OR&#10;              (SIZEOF(QUERY(pc &lt;* passage_component | NOT&#10;                (SIZEOF(tiebar_resident_stratum * passage_resident_stratum) = SIZEOF(tiebar_resident_stratum))&#10;               )) = 0)" label="WR10"/>
         <where expression="SIZEOF(QUERY(am &lt;* SELF\Printed_component.access_mechanism |&#10;           NOT('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF(am.definition))&#10;            )) = 0" label="WR11"/>
      </entity>
      <subtype.constraint entity="Assembly_component" name="limwpcd_assembly_component_subtypes" super.expression="ONEOF (Physical_component, Printed_component, Laminate_component)"/>
      <subtype.constraint entity="Structured_layout_component" name="limwpcd_structured_layout_component_subtypes" super.expression="ONEOF (Footprint_occurrence, Material_removal_structured_component, Multi_stratum_printed_component, Multi_stratum_special_symbol_component, Padstack_occurrence, Single_stratum_printed_component, Single_stratum_special_symbol_component)"/>
      <function name="get_gpn">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Printed_component_join_terminal"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Generic_physical_network"/>
         <algorithm>LOCAL
	gpn : SET[0:?] OF Generic_physical_network := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
		gpn := gpn + bag_to_set(USEDIN(input[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.GENERIC_PHYSICAL_NETWORK.CONNECTIVITY_REQUIREMENT_ELEMENT'));
	END_REPEAT;

	RETURN(gpn);</algorithm>
      </function>
      <function name="limdwpcd_get_ac">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Structured_layout_component_sub_assembly_relationship"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Area_component"/>
         <algorithm>LOCAL
	sspc : SET OF Stratum_feature_template_component := [];  --this gives us access to the information base
	slcsar : SET OF Structured_layout_component_sub_assembly_relationship :=
                 (QUERY(inp &lt;* input |
                 ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(inp.related_view)) AND NOT
                 ('LAND_ARM.LAND' IN TYPEOF(inp.related_view)) AND NOT
  ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS' IN TYPEOF(inp.related_view)) AND NOT
  ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERFACE_ACCESS_STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(inp.related_view))
                 ));
END_LOCAL;

	REPEAT i := 1 to SIZEOF(slcsar) by 1;
	      sspc := sspc + slcsar[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);</algorithm>
      </function>
      <function name="limdwpcd_get_lc">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Structured_layout_component_sub_assembly_relationship"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Laminate_component"/>
         <algorithm>LOCAL
	sspc : SET OF Laminate_component := [];  --this gives us access to the information base
	slcsar : SET OF Structured_layout_component_sub_assembly_relationship :=
                 (QUERY(inp &lt;* input |
                 ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_DEFINITION' IN TYPEOF
(inp\Structured_layout_component_sub_assembly_relationship.second_location\Template_location_in_structured_template.assembly))
                 ));
END_LOCAL;

	REPEAT i := 1 to SIZEOF(slcsar) by 1;
	      sspc := sspc + slcsar[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);</algorithm>
      </function>
      <function name="limdwpcd_get_ppdl">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Plated_passage"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Plated_passage_dependent_land"/>
         <algorithm>LOCAL
	sspc : SET OF Plated_passage_dependent_land := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      sspc := sspc + bag_to_set(USEDIN(input[i],'LAND_ARM.PLATED_PASSAGE_DEPENDENT_LAND.REFERENCE_PLATED_PASSAGE'));
	END_REPEAT;

	RETURN(sspc);</algorithm>
      </function>
      <function name="limdwpcd_get_prs">
         <parameter name="input1">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Plated_passage"/>
         </parameter>
         <parameter name="input2">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Product_view_definition"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Stratum"/>
         <algorithm>LOCAL
	s : SET OF Stratum := [];  --this gives us access to the information base
	stol : SET OF Stratum_technology_occurrence_link := [];  --this gives us access to the information base
	ptatsm : SET OF Passage_technology_allocation_to_stack_model := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input1) by 1;
             ptatsm := ptatsm + input1[i]\Inter_stratum_feature.vertical_extent;
	END_REPEAT;

	REPEAT i := 1 to SIZEOF(ptatsm) by 1;
             stol := stol + ptatsm[i]\Stratum_sub_stack.stratum_technology_sequence;
	END_REPEAT;

             s := limdwpcd_get_stolrs(stol, input2);
	RETURN(s);</algorithm>
      </function>
      <function name="limdwpcd_get_s">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Single_stratum_printed_component"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Stratum"/>
         <algorithm>LOCAL
	  s : SET[0:?] OF Stratum := [];  --this gives us access to the information base
    END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      s := s + input[i]\Single_stratum_printed_component.stratum_feature_implementation[1]\Stratum_feature.resident_stratum;
	END_REPEAT;

	RETURN(s);</algorithm>
      </function>
      <function name="limdwpcd_get_sspc">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Structured_layout_component_sub_assembly_relationship"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Single_stratum_printed_component"/>
         <algorithm>LOCAL
	  sspc : SET[0:?] OF Single_stratum_printed_component := [];  --this gives us access to the information base
    END_LOCAL;
	REPEAT i := 1 to SIZEOF(input) by 1;
	      sspc := sspc + input[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);</algorithm>
      </function>
      <function name="limdwpcd_get_stolrs">
         <parameter name="input1">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Stratum_technology_occurrence_link"/>
         </parameter>
         <parameter name="input2">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Product_view_definition"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Stratum"/>
         <algorithm>LOCAL
	s0 : SET OF Stratum := [];  --this gives us access to the information base for stratum that reference sto
	sto : SET OF Stratum_technology_occurrence := [];  --this gives us access to the information base
	imsar : SET OF Interconnect_module_stratum_assembly_relationship := [];
	s1 : SET OF Stratum := [];  --this gives us access to the information base for stratum that are referenced by the assembly relationship to the input2
	s2 : SET OF Stratum := [];  --this gives us access to the information base for stratum that are related to both input1 and input2
	i : INTEGER := 0; -- variable representing the member of input2 that is the context for the function
END_LOCAL;
(* initial implementation only supports examining the first Product_view_definition as the stratum stack is not expected to change over the design cycle. *)
(* depends on the unique constraint on stratum.definition in an assembly context *)

REPEAT i := 1 to 1 by 1;
	REPEAT j := 1 to SIZEOF(input1) by 1;
	      sto := sto + input1[j]\Stratum_technology_occurrence_relationship.sto_1 +
	                   input1[j]\Stratum_technology_occurrence_relationship.sto_2;
	END_REPEAT;
	
	REPEAT j := 1 to SIZEOF(sto) by 1;
      	     s0 := s0 + bag_to_set(USEDIN(sto[j], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM.DEFINITION'));
    END_REPEAT;

    imsar := imsar + bag_to_set(USEDIN(input2[i], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY'));

    REPEAT j := 1 to SIZEOF(imsar) by 1;
     s1 := s1 + imsar[j]\Interconnect_module_stratum_assembly_relationship.component;
    END_REPEAT;

    s2 := s0 * s1; -- The intersection of the Stratum that reference the sto and the stratum that are part of the layered interconnect module.
END_REPEAT;

	RETURN(s2);</algorithm>
      </function>
      <function name="limdwpcd_get_tbrs">
         <parameter name="input">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Stratum_feature_template_component"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Stratum"/>
         <algorithm>LOCAL
	s : SET OF Stratum := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      s := s + input[i]\Stratum_feature_template_component.resident_stratum;
	END_REPEAT;

	RETURN(s);</algorithm>
      </function>
   </schema>
</express>
