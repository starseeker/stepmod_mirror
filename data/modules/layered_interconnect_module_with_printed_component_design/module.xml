<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.11 2005/01/17 14:43:41 hz0wyg Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="layered_interconnect_module_with_printed_component_design" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/01/17 14:43:41 $" rcs.revision="$Revision: 1.11 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, interconnect, substrate, electrical, electronic, design, layout, features, layered product, connectivity, thermal, requirement, simulation, printed component
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the required physical design data for an interconnect substrate.
The information includes stackup, conductive patterns, feature tolerances, design intent, interface feature design, plated and unplated passages, various forms of cutout and edge treatments, and traceability capability from design features back to design intent.
Various design definitions may exist for the same interconnect module depending on the discipline and enterprise perspective. The information is primarily in support of rf and microwave design where existing design libraries provide functional and physical template models.  Support is provided for connectors implemented in the interconnect substrate.  Support is provided for specialized multi-layer routed patterns in support of stripline for example.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>printed components;</li>
   <li>routed printed components;</li>
   <li>printed connectors;</li>
		<li>items within the scope of Layered_interconnect_module_design_arm.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->

<!--
 <normrefs/>
-->

<definition>
	<term id="printed component">printed component</term>
	<def>
		a part manufactured during PCB fabrication
	</def>
</definition>

<!--
 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Routed_printed_component" extensible="NO">
            <aimelt xml:space="preserve">routed_printed_component</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">routed_printed_component &lt;=
printed_component &lt;=
component_definition &lt;=
product_definition
{product_definition
[product_definition.description = 'printed component']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']}
</refpath>
            <aa attribute="routed_centreline_shape" assertion_to="Curve">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_printed_component &lt;=
printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation.items[i] -&gt;
representation_item =&gt;
geometric_representation_item =&gt;
curve
</refpath>
            </aa>
            <aa attribute="component_extent" assertion_to="Inter_stratum_extent">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_printed_component &lt;=
printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect &lt;-
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'component extent'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'inter stratum extent'}
</refpath>
            </aa>
            <aa attribute="derived_from" assertion_to="Printed_part_cross_section_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_printed_component &lt;=
printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated template'}
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'printed part cross section template'}
shape_aspect =&gt;
part_template_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_component" extensible="NO">
            <aimelt xml:space="preserve">printed_component </aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;= 
product_definition 
{product_definition 
[product_definition.description = 'printed component']
[product_definition.frame_of_reference -&gt; product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']}
</refpath>
            <aa attribute="footprint_implementation" assertion_to="Footprint_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'footprint implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect =&gt;
assembly_group_component_shape_aspect =&gt;
footprint_occurrence
</refpath>
            </aa>
            <aa attribute="required_material_stack" assertion_to="Laminate_layer">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'required material stack'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
layer
</refpath>
            </aa>
            <aa attribute="printed_component_stack" assertion_to="Printed_component_link">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
product_definition &lt;-
product_definition_relationship.relating_product_definition
{product_definition_relationship
product_definition_relationship.name = 'printed component stack'}
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
printed_component_link
</refpath>
            </aa>
            <aa attribute="derived_from" assertion_to="Printed_part_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated template'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
{shape_aspect
(shape_aspect.description = 'printed part template')
(shape_aspect.description = 'printed connector template')}
part_template_definition
</refpath>
            </aa>
            <aa attribute="stratum_feature_implementation" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_component_join_terminal" extensible="NO">
            <aimelt xml:space="preserve">laminate_component_join_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">laminate_component_join_terminal &lt;=
laminate_component_feature &lt;=				
component_feature &lt;=				
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed component join terminal']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence'}
product_definition =&gt;
component_definition =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'join terminal'}
shape_aspect =&gt;
printed_part_template_terminal
</refpath>
            </aa>
            <aa attribute="stratum_concept_implementation" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect
[(shape_aspect =&gt;
component_shape_aspect =&gt;
land)
(shape_aspect.description = 'stratum feature template component')]
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
[product_definition =&gt;
component_definition]
[product_definition
product_definition.description = 'laminate component']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']]}
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_component_link" extensible="NO">
            <aimelt xml:space="preserve">printed_component_link</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">printed_component_link &lt;=
[product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'printed component stack'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
printed_component]
[product_definition_relationship]
</refpath>
            <aa attribute="precedent_printed_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="subsequent_printed_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_link">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition 
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'definition'}
property_definition_relationship.relating_property_definition -&gt;
property_definition =&gt;
stratum_technology_link =&gt;
printed_part_template_link
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_connector_component" extensible="NO">
            <aimelt xml:space="preserve">printed_component</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
{product_definition
[product_definition.name = 'printed connector component']
[product_definition.description = 'printed component']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']}
</refpath>
            <aa attribute="derived_from" assertion_to="Printed_connector_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
{shape_aspect =&gt;
component_shape_aspect}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated template'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect
shape_aspect.description = 'printed connector template'}
shape_aspect =&gt;
part_template_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_connector_component_interface_terminal" extensible="NO">
            <aimelt xml:space="preserve">laminate_component_interface_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed connector component interface terminal']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_component" assertion_to="Printed_connector_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
[product_definition.name = 'printed connector component']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']}
product_definition =&gt;
component_definition =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interface terminal'}
shape_aspect =&gt;
printed_part_template_terminal
</refpath>
            </aa>
            <aa attribute="stratum_concept_implementation" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect
[(shape_aspect =&gt;
component_shape_aspect =&gt;
land)
(shape_aspect.description = 'stratum feature template component')]
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
[product_definition =&gt;
component_definition]
[product_definition
product_definition.description = 'laminate component']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'layout occurrence']]}
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
