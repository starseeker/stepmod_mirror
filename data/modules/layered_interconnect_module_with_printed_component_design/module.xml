<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.50 2006/01/05 11:50:46 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="layered_interconnect_module_with_printed_component_design" 
	part="1700" 
	version="1" 
	sc4.working_group="12" 
	wg.number="4046" 
	wg.number.arm="4047" 
	wg.number.mim="4048" 
	wg.number.supersedes="3485" 
	wg.number.arm.supersedes="3486" 
	wg.number.mim.supersedes="3487"
	checklist.internal_review="3818" 
	checklist.project_leader="3819" 
	checklist.convener="3820" 
	status="TS" 
	language="E" 
	publication.year="2006" 
	published="y" 
	rcs.date="$Date: 2006/01/05 11:50:46 $" rcs.revision="$Revision: 1.50 $" development.folder="dvlp">

 <keywords>
    module, interconnect, substrate, electrical, electronic, design, layout, features, layered product, connectivity, thermal, requirement, simulation, printed component
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the required physical design data for an interconnect substrate.
The information includes stackup, conductive patterns, feature tolerances, design intent, interface feature design, plated and unplated passages, various forms of cutout and edge treatments, and traceability capability from design features back to design intent.
Various design definitions may exist for the same interconnect module depending on the discipline and enterprise perspective. The information is primarily in support of rf and microwave design where existing design libraries provide functional and physical template models.  Support is provided for connectors implemented in the interconnect substrate.  Support is provided for specialized multi-layer routed patterns in support of stripline for example.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>printed components;</li>
   <li>routed printed components;</li>
   <li>printed connectors;</li>
    
    <li>items within the scope of application module <module_ref linkend="layered_interconnect_module_design:1_scope">Layered interconnect module design</module_ref>, ISO/CD-TS 10303-1698.</li>
</inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->

<!--
 <normrefs/>
-->

<definition>
	<term id="printed component">printed component</term>
	<def>
		a part manufactured during PCB fabrication
	</def>
</definition>

<!--
 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
    <ae entity="Basic_multi_stratum_printed_component" extensible="NO">
            <aimelt xml:space="preserve">basic_multi_stratum_printed_component</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">basic_multi_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=
component_definition &lt;= 
product_definition 
</refpath>
            <aa attribute="material_stack" assertion_to="Stratum_feature_based_derived_pattern">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">basic_multi_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=					
product_definition_shape &lt;=
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'material stack'}
property_definition_relationship.relating_property_definition -&gt;
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_object
characterized_object =&gt;
stratum_feature_based_derived_pattern
</refpath>
            </aa>
            <aa attribute="derived_from" assertion_to="Basic_multi_stratum_printed_part_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">basic_multi_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
printed_part_template =&gt;
basic_multi_stratum_printed_part_template
</refpath>
            </aa>
        </ae>
    <ae entity="Multi_stratum_printed_component" extensible="NO">
            <aimelt xml:space="preserve">multi_stratum_printed_component</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">multi_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=
component_definition &lt;= 
product_definition 
</refpath>
            <aa attribute="derived_from" assertion_to="Multi_stratum_printed_part_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">multi_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
geometric_template =&gt;
structured_template =&gt;
multi_stratum_structured_template =&gt;
multi_stratum_printed_part_template
</refpath>
            </aa>
        </ae>
	
		<ae entity="External_source_identification" original_module="external_item_identification_assignment" extensible="NO">
			<aa attribute="item" assertion_to="Printed_component">
			<refpath_extend extended_select="external_identification_item" xml:space="preserve">
				external_identification_item *&gt; limwpcd_external_identification_item
				limwpcd_external_identification_item = printed_component
			</refpath_extend>
			</aa>
		</ae>   
    <ae entity="Printed_component" extensible="NO">
            <aimelt xml:space="preserve">printed_component </aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=
component_definition &lt;= 
product_definition 
</refpath>
<!-- Removed attribute
            <aa attribute="footprint_implementation" assertion_to="Generic_footprint_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'footprint implementation'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
assembly_group_component =&gt;
footprint_occurrence
</refpath>
            </aa>
-->			
<!-- Removed attribute			
            <aa attribute="required_material_stack" assertion_to="Stratum_feature_based_pattern">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'required material stack'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature_based_pattern
</refpath>
            </aa>
            <aa attribute="printed_component_stack" assertion_to="Printed_component_link">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=
component_definition &lt;=					
product_definition &lt;-
product_definition_relationship.relating_product_definition
{product_definition_relationship
product_definition_relationship.name = 'printed component stack'}
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
printed_component_link
</refpath>
            </aa>
-->			
            <aa attribute="derived_from" assertion_to="Printed_part_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
printed_part_template
</refpath>
            </aa>
<!-- Removed alternative			
            <aa attribute="derived_from" assertion_to="Printed_part_cross_section_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
				assembly_component &lt;=					
				component_definition &lt;=
				product_definition &lt;-
				product_definition_relationship.related_product_definition
				product_definition_relationship
				{product_definition_relationship
				product_definition_relationship.name = 'definition usage'}
				product_definition_relationship.relating_product_definition -&gt;
				product_definition =&gt;
				part_template_definition
				</refpath>
            </aa>
            <aa attribute="stratum_feature_implementation" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=					
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
-->			
        </ae>
    <ae entity="Printed_component_join_terminal" extensible="NO">
            <aimelt xml:space="preserve">laminate_component_join_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1698</source>
            <refpath xml:space="preserve">laminate_component_join_terminal &lt;=
laminate_component_feature &lt;=				
component_feature &lt;=				
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed component join terminal']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'join terminal'}
shape_aspect =&gt;
printed_part_template_terminal
</refpath>
            </aa>
            <aa attribute="stratum_concept_implementation" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component =&gt; 
laminate_component =&gt;
stratum_feature_template_component
</refpath>
            </aa>
        </ae>
<!-- Removed entity		
    <ae entity="Printed_component_link" extensible="NO">
            <aimelt xml:space="preserve">printed_component_link</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">printed_component_link &lt;=
[product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'printed component stack'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component]
[product_definition_relationship]
</refpath>
            <aa attribute="precedent_printed_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="subsequent_printed_component" assertion_to="Printed_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_link">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component_link &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition 
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'definition'}
property_definition_relationship.relating_property_definition -&gt;
property_definition =&gt;
stratum_technology_link =&gt;
printed_part_template_link
</refpath>
            </aa> 
        </ae> -->
    <ae entity="Printed_connector_component" extensible="NO">
            <aimelt xml:space="preserve">printed_connector_component</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">printed_connector_component &lt;=
printed_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
</refpath>
            <aa attribute="derived_from" assertion_to="Printed_connector_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_connector_component &lt;=
printed_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
printed_part_template =&gt;
printed_connector_template
</refpath>
            </aa>
        </ae>
    <ae entity="Printed_connector_component_interface_terminal" extensible="NO">
            <aimelt xml:space="preserve">laminate_component_interface_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1698</source>
            <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect
{shape_aspect
[shape_aspect.description = 'printed connector component interface terminal']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_component" assertion_to="Printed_connector_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
printed_component =&gt;
printed_connector_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Printed_part_template_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interface terminal'}
shape_aspect =&gt;
printed_part_template_terminal
</refpath>
            </aa>
            <aa attribute="stratum_concept_implementation" assertion_to="Stratum_feature_template_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">laminate_component_interface_terminal &lt;=
laminate_component_feature &lt;=
component_feature &lt;=	
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt; 
laminate_component =&gt;
stratum_feature_template_component
</refpath>
            </aa>
        </ae>		
 <ae entity="Routed_transmission_line" extensible="NO">
            <aimelt xml:space="preserve">routed_transmission_line</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">routed_transmission_line &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
</refpath>
            <aa attribute="routed_centreline_shape" assertion_to="Curve">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_transmission_line &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
{property_definition
property_definition.name = 'routed centreline shape'}
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation.items[i] -&gt;
representation_item =&gt;
geometric_representation_item =&gt;
curve
</refpath>
            </aa>
            <aa attribute="component_extent" assertion_to="Inter_stratum_extent">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_transmission_line &lt;=
assembly_component &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'component extent'}
property_definition_relationship.relating_property_definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'inter stratum extent'}
</refpath>
            </aa>
            <aa attribute="derived_from" assertion_to="Printed_part_cross_section_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">routed_transmission_line &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
printed_part_cross_section_template
</refpath>
            </aa>
        </ae>
    <ae entity="Single_stratum_printed_component" extensible="NO">
            <aimelt xml:space="preserve">single_stratum_printed_component</aimelt>
            <source xml:space="preserve">ISO 10303-1700</source>
            <refpath xml:space="preserve">single_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=
component_definition &lt;= 
product_definition 
</refpath>
            <aa attribute="derived_from" assertion_to="Single_stratum_printed_part_template">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">single_stratum_printed_component &lt;=
printed_component &lt;=
assembly_component &lt;=					
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
part_template_definition =&gt;
geometric_template =&gt;
structured_template =&gt;
single_stratum_structured_template =&gt;
single_stratum_printed_part_template
</refpath>
            </aa>
<!-- removed			
            <aa attribute="stratum_feature_implementation" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">printed_component &lt;=
assembly_component &lt;=					
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum feature implementation'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
-->			
        </ae>
	
		<sc constraint="limwpcd_assembly_component_subtypes" entity="Assembly_component">
			<description>
				All members of this constraint maps to entity <express_ref linkend="Physical_unit_design_view:mim:Physical_unit_design_view_mim.assembly_component"/> with additional constraints in the mapping, except <express_ref linkend="Layered_interconnect_module_with_printed_component_design:mim:Layered_interconnect_module_with_printed_component_design_mim.printed_component"/>.
				All of them require UNIQUE string for <express_ref linkend="product_definition_schema:ir_express:product_definition_schema.product_definition"/>.<express_ref linkend="product_definition_schema:ir_express:product_definition_schema.product_definition.name"/>, so ONEOF subtype constraint from ARM is guaranteed as not violated.
			</description>
			<constraint>
			assembly_component
			</constraint>
			<source xml:space="preserve">
			ISO 10303-1728
			</source>
		</sc>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
	   <shortnames>
			<shortname name="BMSPC" entity="basic_multi_stratum_printed_component"/>		
			<shortname name="MSPC" entity="multi_stratum_printed_component"/>					
			<shortname name="PRNCMP" entity="printed_component"/>
			<shortname name="PRCNCM" entity="printed_connector_component"/>					
			<shortname name="RTTRLN" entity="routed_transmission_line"/>	
			<shortname name="SSPC" entity="single_stratum_printed_component"/>	
	   </shortnames>                                 		          		               	                                                
 </mim>

</module>
