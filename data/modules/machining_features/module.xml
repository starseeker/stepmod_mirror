<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.24 2013/06/28 21:57:13 darla Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="machining_features"
   name.french="caract&#233;ristiques d'usinage"
   part="1814"
   version="1"
   sc4.working_group="12"
   wg.number="7914"
   wg.number.arm="7915"
   wg.number.mim="7916"
   wg.number.supersedes="7351"
   wg.number.arm.supersedes="7352"
   wg.number.mim.supersedes="7353"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="TS"
   language="E"
   publication.year="2013"
   publication.date="2013-08"
   published="y"
   rcs.date="$Date: 2013/06/28 21:57:13 $"
   rcs.revision="$Revision: 1.24 $"
   development.folder="dvlp">

 <keywords>
    module, machining, features, thread, boss, pocket, chamfer
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap242.projlead"/>
   <editor ref="ap242.editor"/>
 </contacts>

<!-- 
<changes/>

 -->

  <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
     This part of ISO 10303 specifies an application module for the
     representation of 
		specific characteristics of part shape used in manufacturing. 
		These characteristics are used to define manufacturing features. 
		These shapes can be represented either by machining features,
		or by a boundary representation solid model. 
		The purpose of manufacturing features is to facilitate the identification of manufacturing shapes that are human and computer interpretable.
 </purpose>

 <!-- Items in scope -->
 <inscope>
 		<li>machining features for computer integrated manufacturing;</li>
 		<li>features that are to be manufactured by either milling or turning processes;</li>
		<li>machining features for defining shapes necessary for manufacturing;</li>
		<li>machining feature definition elements necessary for creating machining features;</li>
		<li>shape representations necessary for creating machining features;</li>
		<li>features that can be replicated in patterns;</li>
		<li>implicit representation of machining features through selection of standard parameters.</li>
   	  <li>items within the scope of application module <module_ref linkend="elemental_geometric_shape:1_scope">Elemental geometric shape</module_ref>, ISO/TS 10303-1004;</li>
      <li>items within the scope of application module <module_ref linkend="feature_and_connection_zone:1_scope">Feature and connection zone</module_ref>, ISO/TS 10303-1671;</li>
      <li>items within the scope of application module <module_ref linkend="measure_representation:1_scope">Measure representation</module_ref>, ISO/TS 10303-1118;</li>
      <li>items within the scope of application module <module_ref linkend="specification_document:1_scope">Specification document</module_ref>, ISO/TS 10303-1747;</li>
      <li>items within the scope of application module <module_ref linkend="value_with_unit:1_scope">Value with unit</module_ref>, ISO/TS 10303-1054.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope> -->

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/>
     <imgfile file="armexpg7.xml"/>
     <imgfile file="armexpg8.xml"/>
     <imgfile file="armexpg9.xml"/>
     <imgfile file="armexpg10.xml"/>
     <imgfile file="armexpg11.xml"/>
     <imgfile file="armexpg12.xml"/>
     <imgfile file="armexpg13.xml"/>
     <imgfile file="armexpg14.xml"/>
     <imgfile file="armexpg15.xml"/>
     <imgfile file="armexpg16.xml"/>
     <imgfile file="armexpg17.xml"/>
     <imgfile file="armexpg18.xml"/>
     <imgfile file="armexpg19.xml"/>
     <imgfile file="armexpg20.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>


<!--  source is the number of  STEP part where aimelt is declared. -->
<!-- If aimelt is not a common resource, 
	  then a refpath to a common resource is required. 
	  Additionally a refpath may be needed to document constraints.-->

<!--  ++  ANGLE_TAPER  ++ -->
<ae entity="Angle_taper">
	<aimelt>taper</aimelt>
	<source>ISO 10303-522</source>
	<refpath>taper &lt;=
			shape_aspect
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			{shape_aspect
			shape_aspect.of_shape -&gt;
			product_definition_shape &lt;=
			property_definition
			property_definition.definition -&gt;
			characterized_definition = characterized_object
			characterized_object =&gt;
			feature_component_definition}
	</refpath>
	<aa attribute="angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>taper &lt;=
				shape_aspect
				shape_definition = shape_aspect
				shape_definition
				characterized_definition = shape_definition
				characterized_definition &lt;-
				property_definition.definition
				property_definition &lt;-
				property_definition_representation.definition
				{property_definition_representation =&gt;
				shape_definition_representation}
				property_definition_representation
				property_definition_representation.used_representation -&gt;
				{representation =&gt;
				shape_representation =&gt;
				shape_representation_with_parameters}
				representation
				representation.items[i] -&gt;
				{representation_item
				representation_item.name = 'taper angle'}
				representation_item =&gt;
				measure_representation_item
				{measure_representation_item &lt;=
				measure_with_unit =&gt;
				plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  BEVEL_GEAR  ++ -->
<ae entity="Bevel_gear">
<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object	
	</refpath>
	<aa attribute="tip_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tip angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="root_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'root angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  BLIND_BOTTOM_CONDITION  ++ -->
<ae entity="Blind_bottom_condition">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		(shape_aspect.description = 'conical')
		(shape_aspect.description = 'flat')
		(shape_aspect.description = 'flat with radius')
		(shape_aspect.description = 'flat with taper')
		(shape_aspect.description = 'spherical')}
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="start_or_end">
		<aimelt>shape_aspect_relationship.name</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.name = 'hole depth start'
			shape_aspect_relationship.name = 'hole depth end'
		</refpath>
	</aa>
</ae> 

<!--  ++  BOSS  ++ -->
<ae entity="Boss">
	<aimelt>boss</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		boss &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		(characterized_object.description = 'circular')
		(characterized_object.description = 'complex')
		(characterized_object.description = 'rectangular')}
	</refpath>
	<aa attribute="boss_height" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'boss height occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'boss height']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="fillet_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'fillet radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="top_condition" assertion_to="Boss_top_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'top condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'boss top usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			boss_top
		</refpath>
	</aa>
</ae> 

<!--  ++  BOSS_TOP_CONDITION  ++ -->
<ae entity="Boss_top_condition">
	<aimelt>boss_top</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		boss_top &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="top_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-41</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			boss_top &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'top radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="start_or_end">
		<aimelt>shape_aspect_relationship.name</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			boss_top &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			shape_aspect_relationship
			shape_aspect_relationship.name
			{( shape_aspect_relationship.name = 'boss height start')
			(shape_aspect_relationship.name = 'boss height end')}
		</refpath>
	</aa>
</ae> 

<!--  ++  CATALOGUE_GEAR  ++ -->
<ae entity="Catalogue_gear">
	<aimelt>externally_defined_feature_definition</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		externally_defined_feature_definition &lt;=
		[externally_defined_item
		{externally_definied_item.item_id -&gt;
		source_item
		source_item=' external gear'}
		{externally_definied_item.source -&gt;
		external_source
		external_source.source_id -&gt;
		source_item
		source_item=' external feature specification'}]
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'gear'}
	</refpath>
	<aa attribute="documentation" assertion_to="Specification_definition">
		<alt_map id="1">
			<description>(if specification has zero constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_reference.items[i]
				applied_document_reference &lt;=
				document_reference
				document_reference.assigned_document -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document=>
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>(if specification has one or more constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_usage_constraint_assignment.items[i]
				applied_document_usage_constraint_assignment &lt;=
				document_usage_constraint_assignment
				document_usage_constraint_assignment.assigned_document_usage -&gt;
				document_usage_constraint
				document_usage_constraint.source -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  CATALOGUE_KNURL  ++ -->
<ae entity="Catalogue_knurl">
	<aimelt>externally_defined_feature_definition</aimelt>
	<source>ISO 10303-41</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		externally_defined_feature_definition &lt;=
		[externally_defined_item
		{externally_definied_item.item_id -&gt;
		source_item
		source_item=' external knurl'}
		{externally_definied_item.source -&gt;
		external_source
		external_source.source_id -&gt;
		source_item
		source_item=' external feature specification'}]
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'knurl'}
	</refpath>
	<aa attribute="documentation" assertion_to="Specification_definition">
		<alt_map id="1">
			<description>(if specification has zero constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_reference.items[i]
				applied_document_reference &lt;=
				document_reference
				document_reference.assigned_document -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>(if specification has one or more constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_usage_constraint_assignment.items[i]
				applied_document_usage_constraint_assignment &lt;=
				document_usage_constraint_assignment
				document_usage_constraint_assignment.assigned_document_usage -&gt;
				document_usage_constraint
				document_usage_constraint.source -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  CATALOGUE_MARKING  ++ -->
<ae entity="Catalogue_marking">
	<aimelt>externally_defined_feature_definition</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		externally_defined_feature_definition &lt;=
		[externally_defined_item
		{externally_definied_item.item_id -&gt;
		source_item
		source_item=' external marking'}
		{externally_definied_item.source -&gt;
		external_source
		external_source.source_id -&gt;
		source_item
		source_item=' external feature specification'}]
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'marking'}
	</refpath>
	<aa attribute="documentation" assertion_to="Specification_definition">
		<alt_map id="1">
			<description>(if specification has zero constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_reference.items[i]
				applied_document_reference &lt;=
				document_reference
				document_reference.assigned_document -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>(if specification has one or more constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_usage_constraint_assignment.items[i]
				applied_document_usage_constraint_assignment &lt;=
				document_usage_constraint_assignment
				document_usage_constraint_assignment.assigned_document_usage -&gt;
				document_usage_constraint
				document_usage_constraint.source -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  CATALOGUE_THREAD  ++ -->
<ae entity="Catalogue_thread">
	<aimelt>externally_defined_feature_definition</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		externally_defined_feature_definition &lt;=
		[externally_defined_item
		{externally_definied_item.item_id-&gt;
		source_item
		source_item=' external thread'}
		{externally_definied_item.source -&gt;
		external_source
		external_source.source_id -&gt;
		source_item
		source_item=' external feature specification'}]
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'thread'}
	</refpath>
	<aa attribute="documentation" assertion_to="Specification_definition">
		<alt_map id="1">
			<description>(if specification has zero constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_reference.items[i]
				applied_document_reference &lt;=
				document_reference
				document_reference.assigned_document -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>(if specification has one or more constraints)</description>
			<aimelt>PATH</aimelt>
			<refpath>
				( externally_defined_feature_definition
				document_reference_item = externally_defined_feature_definition
				document_reference_item &lt;-
				applied_document_usage_constraint_assignment.items[i]
				applied_document_usage_constraint_assignment &lt;=
				document_usage_constraint_assignment
				document_usage_constraint_assignment.assigned_document_usage -&gt;
				document_usage_constraint
				document_usage_constraint.source -&gt;
				document)
				{document &lt;-
				document_representation_type.represented_document
				document_representation_type}
				{document =&gt;
				document_file &lt;=
				characterized_object}
			</refpath>
		</alt_map>
	</aa>
	<aa attribute="major_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			externally_defined_feature_definition &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'major diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CHAMFER  ++ -->
<ae entity="Chamfer">
	<aimelt>chamfer</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_relationship_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		chamfer &lt;=
		transition_feature &lt;=
		shape_aspect
	</refpath>
	<aa attribute="chamfer_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			chamfer &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation = shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation.name = 'chamfer face'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="first_parameter" assertion_to="First_chamfer_offset">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			chamfer &lt;=
			transition_feature &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'first offset'}
			shape_aspect =&gt;
			chamfer_offset
		</refpath>
	</aa>
	<aa attribute="second_parameter" assertion_to="Second_chamfer_parameter">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			chamfer &lt;=
			transition_feature &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'second offset'}
			shape_aspect =&gt;
			chamfer_offset
		</refpath>
	</aa>
</ae> 

<!--  ++  CHAMFER_ANGLE  ++ -->
<ae entity="Chamfer_angle">
	<aimelt>chamfer_offset</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		chamfer_offset &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'second offset'}
	</refpath>
	<aa attribute="angle_amount" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			chamfer_offset &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'offset angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_BOSS  ++ -->
<ae entity="Circular_boss">
	<aimelt>boss</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		boss &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'circular'}
	</refpath>
	<aa attribute="circular_profile" assertion_to="Circular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'circular profile occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			circular_closed_profile
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Diameter_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'diameter taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_CLOSED_PROFILE  ++ -->
<ae entity="Circular_closed_profile">
	<aimelt>circular_closed_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		circular_closed_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			circular_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_CLOSED_SHAPE_PROFILE  ++ -->
<ae entity="Circular_closed_shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'closed circular boundary occurrence'}
	</refpath>
	<aa attribute="closed_boundary" assertion_to="Circular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'closed circular boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			shape_defining_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage'}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			circular_closed_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_CUTOUT  ++ -->
<ae entity="Circular_cutout">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'circular cutout'}
	</refpath>
	<aa attribute="circular_boundary" assertion_to="Circular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'enclosed boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			circular_closed_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_OFFSET_PATTERN  ++ -->
<ae entity="Circular_offset_pattern">
	<aimelt>shape_aspect</aimelt>
	<source>ISO 10303-41</source>
	<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
	<refpath>
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		shape_aspect_relationship =&gt;
		feature_component_relationship =&gt;
		pattern_offset_membership]
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		{shape_aspect_relationship =&gt;
		feature_component_relationship}
		shape_aspect_relationship.relating_shape_aspect -&gt;
		shape_aspect =&gt;
		modified_pattern]
	</refpath>
	<aa attribute="index_number">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'offset index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="angular_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>machining_feature_life_cycle
			shape_aspect_subtype_exclusiveness
			subtype_mandatory_characterized_object
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_OMIT_PATTERN  ++ -->
<ae entity="Circular_omit_pattern">
	<aimelt>shape_aspect</aimelt>
	<source>ISO 10303-41</source>
	<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
	<refpath>
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		shape_aspect_relationship =&gt;
		feature_component_relationship =&gt;
		pattern_omit_membership]
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		{shape_aspect_relationship =&gt;
		feature_component_relationship}
		shape_aspect_relationship.relating_shape_aspect -&gt;
		shape_aspect =&gt;
		modified_pattern]
	</refpath>
	<aa attribute="omit_index">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'omit index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_PATH_FEATURE_COMPONENT  ++ -->
<ae entity="Circular_path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		(shape_aspect.description = 'partial circular')
		(shape_aspect.description = 'complete circular')}
	</refpath>
	<aa attribute="radius" assertion_to="length_measure">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CIRCULAR_PATTERN  ++ -->
<ae entity="Circular_pattern">
	<aimelt>circular_pattern</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		circular_pattern &lt;=
		replicate_feature &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="relocated_base_feature" assertion_to="Circular_offset_pattern">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			[shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship =&gt;
			pattern_offset_membership}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
			[shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'base pattern'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect &lt;-
			{shape_aspect =&gt;
			modified_pattern}
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'modified pattern'}
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
		</refpath>
	</aa>
	<aa attribute="missing_base_feature" assertion_to="Circular_omit_pattern">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			[shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship =&gt;
			pattern_omit_membership}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
			[shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'base pattern'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect &lt;-
			{shape_aspect =&gt;
			modified_pattern}
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'modified pattern'}
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
		</refpath>
	</aa>
	<aa attribute="base_feature_rotation" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'base feature rotation'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="number_of_features">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of features'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="base_feature_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="angular_spacing" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			circular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'angular spacing'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CLOSED_PROFILE  ++ -->
<ae entity="Closed_profile">
	<aimelt>
		( circular_closed_profile)
		( closed_path_profile)
		( ngon_closed_profile)
		( rectangular_closed_profile)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		(circular_closed_profile &lt;=)
		(closed_path_profile &lt;=)
		(ngon_closed_profile &lt;=)
		(rectangular_closed_profile &lt;=)
		shape_aspect
	</refpath>
</ae> 

<!--  ++  CLOSED_SLOT  ++ -->
<ae entity="Closed_slot">
	<aimelt>slot</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		slot &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="end_condition" assertion_to="Loop_slot_end_type">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			slot &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'end condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'slot end usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			{shape_aspect
			shape_aspect.description = 'loop'}
			slot_end
		</refpath>
	</aa>
	<aa attribute="cource_of_travel" assertion_to="Complete_circular_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			slot &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'course of travel']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			{shape_aspect
			shape_aspect.description = 'complete circular'}
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="cource_of_travel" assertion_to="General_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			slot &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'course of travel']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			{shape_aspect
			shape_aspect.description = 'complex'}
			path_feature_component
		</refpath>
	</aa>
</ae> 

<!--  ++  COMPLETE_CIRCULAR_PATH_FEATURE_COMPONENT  ++ -->
<ae entity="Complete_circular_path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complete circular'}
	</refpath>
</ae> 

<!--  ++  COMPOUND_FEATURE  ++ -->
<ae entity="Compound_feature">
	<aimelt>compound_feature</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		compound_feature &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object &lt;-
		property_definition.definition
		property_definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		shape_aspect
		shape_aspect.name = 'compound feature in solid'
	</refpath>
	<aa attribute="element" assertion_to="Compound_feature_element">
		<alt_map id="1">
			<description>as element except for thread</description>
			<aimelt>PATH</aimelt>
			<rules>machining_feature_life_cycle
				shape_aspect_relationship_subtype_exclusiveness
				shape_aspect_subtype_exclusiveness
				transition_feature_life_cycle
				transition_feature_on_part_boundary
			</rules>
			<refpath>
				compound_feature &lt;=
				feature_definition &lt;=
				characterized_object
				characterized_definition = characterized_object &lt;-
				property_definition.definition
				property_definition
				property_definition =&gt;
				product_definition_shape &lt;-
				shape_aspect.of_shape
				shape_aspect
				{shape_aspect =&gt;
				composite_shape_aspect}
				shape_aspect &lt;-
				shape_aspect_relationship.relating_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship =&gt;
				feature_component_relationship}
				shape_aspect_relationship.related_shape_aspect -&gt;
				shape_aspect =&gt;
				(( instanced_feature)
				( transition_feature))
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>as element for thread only</description>
			<aimelt>PATH</aimelt>
			<rules>machining_feature_life_cycle
				shape_aspect_relationship_subtype_exclusiveness
				shape_aspect_subtype_exclusiveness
				transition_feature_life_cycle
				transition_feature_on_part_boundary
			</rules>
			<refpath>
				compound_feature &lt;=
				feature_definition &lt;=
				characterized_object
				characterized_definition = characterized_object &lt;-
				property_definition.definition
				property_definition
				property_definition =&gt;
				product_definition_shape &lt;-
				shape_aspect.of_shape
				shape_aspect
				{shape_aspect =&gt;
				composite_shape_aspect}
				shape_aspect &lt;-
				shape_aspect_relationship.relating_shape_aspect
				shape_aspect_relationship
				{shape_aspect_relationship =&gt;
				feature_component_relationship}
				shape_aspect_relationship.related_shape_aspect -&gt;
				shape_aspect =&gt;
				(applied_area)
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  COMPOUND_FEATURE_ELEMENT  ++ -->
<ae entity="Compound_feature_element">
	<alt_map id="1">
		<description>as element except for thread</description>
		<aimelt>
			( instanced_feature)
			( transition_feature)
			#2(applied_area)
		</aimelt>
		<source>ISO 10303-522</source>
		<rules>machining_feature_life_cycle
			shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
			transition_feature_life_cycle
			transition_feature_on_part_boundary
		</rules>
		<refpath>
			( instanced_feature &lt;=
			[ feature_definition &lt;=
			characterized_object]
			[shape_aspect])
			(transition_feature &lt;=
			shape_aspect)
		</refpath>
	</alt_map>
	<alt_map id="2">
		<description>as element for thread only</description>
		<aimelt>(applied_area)</aimelt>
		<source>ISO 10303-522</source>
		<rules>machining_feature_life_cycle
			shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
			transition_feature_life_cycle
			transition_feature_on_part_boundary
		</rules>
		<refpath>
			(applied_area &lt;=
			shape_aspect)
		</refpath>
	</alt_map>
	<aa attribute="element" assertion_to="Machining_feature">
		<aimelt>IDENTICAL MAPPING</aimelt>
	</aa>
	<aa attribute="element" assertion_to="Transition_feature">
		<aimelt>IDENTICAL MAPPING</aimelt>
	</aa>
</ae> 

<!--  ++  COMPOUND_FEATURE_RELATIONSHIP  ++ -->
<ae entity="Compound_feature_relationship">
	<aimelt>shape_aspect_relationship</aimelt>
	<source>ISO 10303-41</source>
	<refpath>
		{shape_aspect_relationship
		shape_aspect_relationship.name = 'compound feature ordering'}
	</refpath>
	<aa attribute="predecssor" assertion_to="Compound_feature_element">
		<aimelt>PATH</aimelt>
		<rules>machining_feature_life_cycle
			shape_aspect_relationship_subtype_exclusiveness
			transition_feature_life_cycle
			transition_feature_on_part_boundary
		</rules>
		<refpath>
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			( instanced_feature)
			( transition_feature)
		</refpath>
	</aa>
	<aa attribute="successor" assertion_to="Compound_feature_element">
		<aimelt>PATH</aimelt>
		<rules>machining_feature_life_cycle
			shape_aspect_relationship_subtype_exclusiveness
			transition_feature_life_cycle
			transition_feature_on_part_boundary
		</rules>
		<refpath>
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			( instanced_feature)
			( transition_feature)
		</refpath>
	</aa>
</ae> 

<!--  ++  CONICAL_HOLE_BOTTOM  ++ -->
<ae entity="Conical_hole_bottom">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'conical'}
	</refpath>
	<aa attribute="tip_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tip angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="tip_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tip radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CONSTANT_RADIUS_EDGE_ROUND  ++ -->
<ae entity="Constant_radius_edge_round">
	<aimelt>edge_round</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		edge_round &lt;=
		transition_feature &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'constant radius'}
	</refpath>
	<aa attribute="first_face_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_face_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation ->
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  CONSTANT_RADIUS_FILLET  ++ -->
<ae entity="Constant_radius_fillet">
	<aimelt>fillet</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		fillet &lt;=
		transition_feature &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'constant radius'}
	</refpath>
	<aa attribute="first_face_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_face_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  COUNTERBORE_HOLE  ++ -->
<ae entity="Counterbore_hole">
	<aimelt>composite_hole</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		composite_hole &lt;=
		compound_feature &lt;=
		feature_definition =&gt;
		{feature_definition &lt;=
		characterized_object
		characterized_object.description = 'counterbore'}
	</refpath>
	<aa attribute="smaller_hole" assertion_to="Round_hole">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			composite_hole &lt;=
			compound_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object &lt;-
			property_definition.definition
			property_definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.name = 'small hole']}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature &lt;=
			feature_definition =&gt;
			round_hole
		</refpath>
	</aa>
	<aa attribute="larger_hole" assertion_to="Round_hole">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			composite_hole &lt;=
			compound_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object &lt;-
			property_definition.definition
			property_definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.name = 'large hole']}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature &lt;=
			feature_definition =&gt;
			round_hole
		</refpath>
	</aa>
</ae> 

<!--  ++  COUNTERSUNK_HOLE  ++ -->
<ae entity="Countersunk_hole">
	<aimelt>composite_hole</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		composite_hole &lt;=
		compound_feature &lt;=
		feature_definition =&gt;
		[feature_definition &lt;=
		characterized_object
		characterized_object.description = 'countersunk']
		instanced_feature &lt;=
		shape_aspect
	</refpath>
	<aa attribute="constant_diameter_hole" assertion_to="Round_hole">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			composite_hole &lt;=
			compound_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object &lt;-
			property_definition.definition
			property_definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.name = 'constant diameter hole']}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature &lt;=
			feature_definition =&gt;
			round_hole
		</refpath>
	</aa>
	<aa attribute="tapered_hole" assertion_to="Round_hole">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			composite_hole &lt;=
			compound_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object &lt;-
			property_definition.definition
			property_definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect
			shape_aspect =&gt;
			composite_shape_aspect
			composite_shape_aspect.component_relationships -&gt;
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature &lt;=
			feature_definition =&gt;
			round_hole
			{round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			taper}
		</refpath>
	</aa>
</ae> 

<!--  ++  INSTANCED_MANUFACTURING_FEATURE  ++ -->
<ae entity="Instanced_manufacturing_feature">
	<aimelt>instanced_feature</aimelt>
	<source>ISO 10303-47</source>
	<refpath>
      instanced_feature &lt;=
      [shape_aspect]
      [ feature_definition &lt;=
        characterized_object]
	</refpath>
	<aa attribute="definition" assertion_to="Manufacturing_feature">
		<aimelt>IDENTICAL MAPPING</aimelt>
	</aa>
</ae> 


<!--  ++  CUTOUT_FEATURE  ++ -->
<ae entity="Cutout_feature">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		(characterized_object.description = 'circular cutout')
		(characterized_object.description = 'complex cutout')}
	</refpath>
	<aa attribute="bottom_condition" assertion_to="Through_pocket_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'pocket bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'through')}
			shape_aspect =&gt;
			pocket_bottom
		</refpath>
	</aa>
</ae> 

<!--  ++  DEFINED_GEAR  ++ -->
<ae entity="Defined_gear">
	<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
</ae> 

<!--  ++  DEFINED_MARKING  ++ -->
<ae entity="Defined_marking">
	<aimelt>marking</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		marking &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="font_name" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			marking &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'font name'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="special_instruction" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			marking &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'special instructions'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="character_spacing" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			marking &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'character spacing'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="character_height" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			marking &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'character height'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DEFINED_THREAD  ++ -->
<ae entity="Defined_thread">
	<aimelt>thread</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		thread &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="crest" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'crest'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="minor_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'minor diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="pitch_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="major_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'major diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DIAGONAL_KNURL  ++ -->
<ae entity="Diagonal_knurl">
	<aimelt>turned_knurl</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		turned_knurl &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'diagonal'}
	</refpath>
	<aa attribute="helix_hand" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'helix hand'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="helix_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'helix angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DIAMETER_TAPER  ++ -->
<ae entity="Diameter_taper">
	<aimelt>taper</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		taper &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'diameter taper'}
		{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="final_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			taper &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'final diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DIAMOND_KNURL  ++ -->
<ae entity="Diamond_knurl">
	<aimelt>turned_knurl</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		turned_knurl &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'diamond'}
	</refpath>
	<aa attribute="helix_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'helix angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DIRECTED_TAPER  ++ -->
<ae entity="Directed_taper">
	<aimelt>taper</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		taper &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'directed taper'}{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			taper &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'direction'}
			representation =&gt;
			shape_representation = &gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			taper &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  DIRECTION_ELEMENT  ++ -->
<ae entity="Direction_element">
	<aimelt>direction_shape_representation</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		direction_shape_representation &lt;=
		shape_representation &lt;=
		representation
		{representation.items[i] -&gt;
		representation_item =&gt;
		geometric_representation_item =&gt;
		direction}
	</refpath>
</ae> 

<!--  ++  EDGE_ROUND  ++ -->
<ae entity="Edge_round">
	<aimelt>edge_round</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		edge_round &lt;=
		transition_feature &lt;=
		shape_aspect
	</refpath>
	<aa attribute="edge_round_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation = shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation.name = 'edge round face'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="first_face_shape" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'first face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="second_face_shape" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			edge_round &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'second face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  FACE_SHAPE_ELEMENT  ++ -->
<ae entity="Face_shape_element">
	<aimelt>face_shape_representation</aimelt>
	<source>ISO 10303-522</source>
	<rules>representation_subtype_exclusiveness</rules>
	<refpath>
		face_shape_representation &lt;=
		shape_representation &lt;=
		representation
		representation.items[i] -&gt;
		representation_item =&gt;
		geometric_representation_item =&gt;
		(face_surface)
		(oriented_face)
	</refpath>
</ae> 

<!--  ++  FACE_SHAPE_ELEMENT_RELATIONSHIP  ++ -->
<ae entity="Face_shape_element_relationship">
	<aimelt>face_shape_representation_relationship</aimelt>
	<source>ISO 10303-224</source>
	<refpath>
		face_shape_representation_relationship&lt;=
		representation_relationship
	</refpath>
	<aa attribute="relating" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<refpath>
			face_shape_representation_relationship &lt;=
			representation_relationship
			representation_relationship.rep_1 -&gt;
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="related" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<refpath>
			face_shape_representation_relationship &lt;=
			representation_relationship
			representation_relationship.rep_2 -&gt;
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  FILLET  ++ -->
<ae entity="Fillet">
	<aimelt>fillet</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		fillet &lt;=
		transition_feature &lt;=
		shape_aspect
	</refpath>
	<aa attribute="fillet_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation = shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation.name = 'fillet face'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="first_face_shape" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'first face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="second_face_shape" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			fillet &lt;=
			transition_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'second face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  FIRST_CHAMFER_OFFSET  ++ -->
<ae entity="First_chamfer_offset">
	<aimelt>chamfer_offset</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		chamfer_offset &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'first offset'}
	</refpath>
	<aa attribute="face_shape" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			chamfer_offset &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'first face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="offset_amount" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			chamfer_offset &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'offset amount'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  FLAT_HOLE_BOTTOM  ++ -->
<ae entity="Flat_hole_bottom">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'flat'}
	</refpath>
</ae> 

<!--  ++  FLAT_SLOT_END_TYPE  ++ -->
<ae entity="Flat_slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'flat'}
	</refpath>
	<aa attribute="first_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			slot_end &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			slot_end &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  FLAT_WITH_RADIUS_HOLE_BOTTOM  ++ -->
<ae entity="Flat_with_radius_hole_bottom">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'flat with radius'}
	</refpath>
	<aa attribute="corner_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'corner radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  FLAT_WITH_TAPER_HOLE_BOTTOM  ++ -->
<ae entity="Flat_with_taper_hole_bottom">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'flat with taper'}
	</refpath>
	<aa attribute="taper_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'taper angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="final_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'final diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  GEAR  ++ -->
<ae entity="Gear">
	<aimelt>
		(gear)
		(externally_defined_feature_definition)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_relationship_subtype_exclusiveness
	</rules>
	<refpath>
		(gear &lt;=
		feature_definition &lt;=
		characterized_object)
		(externally_defined_feature_definition &lt;=
		[externally_defined_item]
		[feature_definition &lt;=
		characterized_object
		{characterized_object
		(characterized_object.description = 'helical bevel gear')
		(characterized_object.description = 'straight bevel gear')
		(characterized_object.description = 'spur gear')
		(characterized_object.description = 'helix gear')}])
	</refpath>
	<aa attribute="nominal_tooth_depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'nominal tooth depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="reference_preassure_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'reference pressure angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="profile_shift" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'profile shift'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="number_of_teeth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of teeth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			ratio_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="face_width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'face width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="tip_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tip diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="normal_attribute" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			(gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'normal_attribute'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="applied_shape" assertion_to="Definitional_shape_element">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition =&gt;
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape
		</refpath>
	</aa>
	<aa attribute="internal_or_external_gear">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch type'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'internal')
			(descriptive_representation_item.description = 'external')}
		</refpath>
	</aa>
	<aa attribute="module_or_diametrical_pitch">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch type'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'module')
			(descriptive_representation_item.description = 'diametral pitch')}
		</refpath>
	</aa>
	<aa attribute="root_fillet_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			(gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'root fillet radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_BOSS  ++ -->
<ae entity="General_boss">
	<aimelt>boss</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		boss &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'complex'}
	</refpath>
	<aa attribute="enclosed_boundary" assertion_to="Closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'enclosed boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			( closed_path_profile)
			( ngon_closed_profile)
		</refpath>
	</aa>
	<aa attribute="change_in_boundary" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_boundary" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_CLOSED_PROFILE  ++ -->
<ae entity="General_closed_profile">
	<aimelt>closed_path_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		closed_path_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="closed_profile_shape" assertion_to="Path_element">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			closed_path_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			path_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_CUTOUT  ++ -->
<ae entity="General_cutout">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'complex cutout'}
	</refpath>
	<aa attribute="boundary" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
			( linear_profile)
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_OPEN_PROFILE  ++ -->
<ae entity="General_open_profile">
	<aimelt>open_path_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		open_path_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="enclosed_boundary" assertion_to="Path_element">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			open_path_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			path_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_OUTSIDE_PROFILE  ++ -->
<ae entity="General_outside_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'outside boundary'}
	</refpath>
	<aa attribute="boundary" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'outside boundary'}
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
			( linear_profile)
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_PATH_FEATURE_COMPONENT  ++ -->
<ae entity="General_path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complex'}
	</refpath>
	<aa attribute="sweep_path" assertion_to="Path_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'sweep path'}
			representation =&gt;
			shape_representation =&gt;
			path_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_PATTERN  ++ -->
<ae entity="General_pattern">
	<aimelt>feature_pattern</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		feature_pattern &lt;=
		replicate_feature &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="feature_placement" assertion_to="Axis_placement">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			feature_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = charcterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'base feature placement'}
			representation_item =&gt;
			geometric_representation_item =&gt;
			placement
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_POCKET  ++ -->
<ae entity="General_pocket">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'complex'}
	</refpath>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt; -
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
	<aa attribute="boundary" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'boundary'}
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_POCKET_BOTTOM_CONDITION  ++ -->
<ae entity="General_pocket_bottom_condition">
	<aimelt>pocket_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		pocket_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complex'}
	</refpath>
	<aa attribute="floor" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			pocket_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'floor face'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
	<aa attribute="floor_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			pocket_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_PROFILE_FLOOR  ++ -->
<ae entity="General_profile_floor">
	<aimelt>profile_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		profile_floor &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complex'}
	</refpath>
	<aa attribute="floor" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			profile_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'floor'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_REMOVAL_VOLUME  ++ -->
<ae entity="General_removal_volume">
	<aimelt>removal_volume</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		removal_volume =&gt;
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="removal_volume" assertion_to="Definitional_shape_element">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			removal_volume &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;=
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'shape volume occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'volume shape usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'volume shape'}
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_REVOLUTION  ++ -->
<ae entity="General_revolution">
	<aimelt>revolved_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		revolved_profile &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'open profile'}
	</refpath>
	<aa attribute="outer_edge_shape" assertion_to="General_open_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			revolved_profile
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'outer edge shape occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'outer edge shape'}
			shape_aspect =&gt;
			open_path_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_RIB_TOP_FLOOR  ++ -->
<ae entity="General_rib_top_floor">
	<aimelt>rib_top_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rib_top_floor &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complex'}
	</refpath>
	<aa attribute="rib_top_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			rib_top_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'rib top face'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_SHAPE_PROFILE  ++ -->
<ae entity="General_shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'complex boundary occurrence'}
	</refpath>
	<aa attribute="profile_boundary" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'complex boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			shape_defining_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage'}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'boundary'}
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  GENERAL_TOP_CONDITION  ++ -->
<ae entity="General_top_condition">
	<aimelt>boss_top</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		boss_top &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'complex'}
	</refpath>
	<aa attribute="top_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			boss_top &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  GROOVE  ++ -->
<ae entity="Groove">
	<aimelt>revolved_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		revolved_profile &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'groove'}
	</refpath>
	<aa attribute="sweep" assertion_to="Open_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			revolved_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'sweep occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'sweep'}
			shape_aspect =&gt;
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  HELICAL_BEVEL_GEAR  ++ -->
<ae entity="Helical_bevel_gear">
	<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'helix bevel gear'}
	</refpath>
	<aa attribute="reference_helix_agle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'reference helix angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="left_or_right_hand_tooth">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch type'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'left hand tooth')
			(descriptive_representation_item.description = 'right hand tooth')}
		</refpath>
	</aa>
</ae> 

<!--  ++  HELICAL_GEAR  ++ -->
<ae entity="Helical_gear">
	<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'helix gear'}
	</refpath>
	<aa attribute="left_or_right_hand_tooth">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch type'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'left hand tooth')
			(descriptive_representation_item.description = 'right hand tooth')}
		</refpath>
	</aa>
	<aa attribute="reference_helix_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( gear &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'reference helix angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  HOLE  ++ -->
<ae entity="Hole">
	<alt_map id="1">
		<description>if hole is of type round_hole</description>
		<aimelt>(round_hole)</aimelt>
		<source>ISO 10303-522</source>
		<rules>machining_feature_life_cycle
			shape_aspect_subtype_exclusiveness
			subtype_mandatory_characterized_object
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
		</refpath>
	</alt_map>
	<alt_map id="2">
		<description>if hole is of type countersunk_hole or counterbore_hole</description>
		<aimelt>(composite_hole)</aimelt>
		<source>ISO 10303-522</source>
		<rules>machining_feature_life_cycle
			shape_aspect_subtype_exclusiveness
			subtype_mandatory_characterized_object
		</rules>
		<refpath>
			composite_hole &lt;=
			compound_feature &lt;=
			feature_definition =&gt;
			characterized_object
		</refpath>
	</alt_map>
</ae> 

<!--  ++  KNURL  ++ -->
<ae entity="Knurl">
	<aimelt>
		( turned_knurl)
		( externally_defined_feature_definition)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_relationship_subtype_exclusiveness
	</rules>
	<refpath>
		(turned_knurl &lt;=
		feature_definition &lt;=
		characterized_object)
		(externally_defined_feature_definition &lt;=
		[externally_defined_item]
		[feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'knurl'}])
	</refpath>
	<aa attribute="partial_profile" assertion_to="Partial_area_definition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			( turned_knurl &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape
			shape_aspect.of_shape -&gt;
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'applied area usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			applied_area
		</refpath>
	</aa>
	<aa attribute="applied_shape" assertion_to="Definitional_shape_element">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			( turned_knurl &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition =&gt;
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape
			shape_aspect.of_shape -&gt;
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'applied shape']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  LINEAR_PATH_FEATURE_COMPONENT  ++ -->
<ae entity="Linear_path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'linear'}
	</refpath>
	<aa attribute="distance" assertion_to="length_measure">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'distance'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  LINEAR_PROFILE  ++ -->
<ae entity="Linear_profile">
	<aimelt>linear_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		linear_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="profile_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			linear_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'profile length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  LOCATION_ELEMENT  ++ -->
<ae entity="Location_element">
	<aimelt>location_shape_representation</aimelt>
	<source>ISO 10303-522</source>
	<rules>representation_subtype_exclusiveness</rules>
	<refpath>
		location_shape_representation &lt;=
		shape_representation &lt;=
		representation
		representation.items[i] -&gt;
		{representation_item
		representation_item.name = 'orientation'}
		{representation_item =&gt;
		geometric_representation_item =&gt;
		point =&gt;
		cartesian_point}
	</refpath>
</ae> 

<!--  ++  LOOP_SLOT_END_TYPE  ++ -->
<ae entity="Loop_slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'loop'}
	</refpath>
</ae> 

<!--  ++  MACHINING_FEATURE  ++ -->
<ae entity="Machining_feature">
	<aimelt>feature_definition</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		instanced_feature &lt;=
		[shape_aspect]
		[ feature_definition &lt;=
		characterized_object]
	</refpath>
	<aa attribute="placement" assertion_to="Axis_placement_3d">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			instanced_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			{property_definition =&gt;
			product_definition_shape}
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'orientation'}
			representation_item =&gt;
			geometric_representation_item =&gt;
			placement
		</refpath>
	</aa>
</ae> 



<!--  ++  MANUFACTURING_FEATURE  ++ -->
<ae entity="Manufacturing_feature">
	<aimelt>shape_feature_definition</aimelt>
	<source>ISO 10303-1764</source>
</ae> 

<!--  ++  MANUFACTURING_FEATURE_GROUP  ++ -->
<ae entity="Manufacturing_feature_group">
	<aimelt>group</aimelt>
	<source>ISO 10303-41</source>
	<aa attribute="group_name" assertion_to="label">
		<aimelt>group.name</aimelt>
		<source>ISO 10303-41</source>
	</aa>
	<aa attribute="group_description" assertion_to="text">
		<aimelt>group.description</aimelt>
		<source>ISO 10303-41</source>
	</aa>
	<aa attribute="feature_groups" assertion_to="Manufacturing_feature">
		<aimelt>PATH</aimelt>
		<refpath>
			group &lt;-
			group_assignment.assigned_group
			group_assignment =&gt;
			applied_group_assignment
			applied_group_assignment.items -&gt;
			group_item
			(group_item=instanced_feature)
			(group_item=replicate_feature)
			(group_item=transition_feature)
		</refpath>
	</aa>
</ae> 

<!--  ++  MARKING_FEATURE  ++ -->
<ae entity="Marking_feature">
	<aimelt>
		( marking)
		( externally_defined_feature_definition)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_relationship_subtype_exclusiveness
	</rules>
	<refpath>
		(marking &lt;=
		feature_definition &lt;=
		characterized_object)
		(externally_defined_feature_definition &lt;=
		[externally_defined_item]
		[feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'marking'}])
	</refpath>
	<aa attribute="text" assertion_to="text">
		<aimelt>PATH</aimelt>
		<refpath>
			( marking &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'marking text'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="applied_to_shape" assertion_to="Shape_element">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			( marking &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition =&gt;
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape
			shape_aspect.of_shape -&gt;
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'applied shape']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  MULTI_AXIS_FEATURE  ++ -->
<ae entity="Multi_axis_feature">
	<aimelt>instanced_feature</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		(boss &lt;=)
		(outside_profile &lt;=)
		(removal_volume &lt;=)
		(round_hole &lt;=)
		(flat_face &lt;=)
		(pocket &lt;=)
		(protrusion &lt;=)
		(rib_top &lt;=)
		(rounded_end &lt;=)
		(slot &lt;=)
		(step &lt;=)
		instanced_feature
	</refpath>
	<aa attribute="maximum_feature_limit" assertion_to="Planar_element">
		<aimelt>PATH</aimelt>
		<refpath>
			instanced_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			{property_definition =&gt;
			product_definition_shape}
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			{representation.name ='maximum feature limit'}
			shape_representation =&gt;
			planar_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  NGON_PROFILE  ++ -->
<ae entity="Ngon_profile">
	<aimelt>ngon_closed_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		ngon_closed_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			ngon_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			(representation_item.name = 'circumscribed diameter')
			(representation_item.name = 'diameter across flats')}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="number_of_sides" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			ngon_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of sides'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="corner_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			ngon_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'corner radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="circumscribed_or_across_flat">
		<aimelt>
			(representation_item.name = 'circumscribed diameter')
			(representation_item.name =
			'diameter across flats')
		</aimelt>
		<source>ISO 10303-522</source>
		<refpath>
			ngon_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			representation_item
			(representation_item.name = 'circumscribed diameter')
			(representation_item.name = 'diameter across flats')
		</refpath>
	</aa>
</ae> 

<!--  ++  OPEN_PROFILE  ++ -->
<ae entity="Open_profile">
	<aimelt>
		( linear_profile)
		( open_path_profile)
		( partial_circular_profile)
		( rounded_u_profile)
		( square_u_profile)
		( tee_profile)
		( vee_profile)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		(linear_profile &lt;=)
		(open_path_profile &lt;=)
		(partial_circular_profile &lt;=)
		(rounded_u_profile &lt;=)
		(square_u_profile &lt;=)
		(tee_profile &lt;=)
		(vee_profile &lt;=)
		shape_aspect
	</refpath>
	<aa attribute="profile_limit" assertion_to="Planar_element">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<refpath>
			(rounded_u_profile &lt;=)
			(square_u_profile &lt;=)
			(open_path_profile &lt;=)
			(tee_profile &lt;=)
			(vee_profile &lt;=)
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			{representation.name = 'profile limit'}
			shape_representation =&gt;
			planar_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  OPEN_SLOT  ++ -->
<ae entity="Open_slot">
	<aimelt>slot</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		slot &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="course_of_travel" assertion_to="Path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			slot &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'course of travel']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="end_conditions" assertion_to="Slot_end_type">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			slot &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'end condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'slot end usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			slot_end
		</refpath>
	</aa>
</ae> 

<!--  ++  OPEN_SLOT_END_TYPE  ++ -->
<ae entity="Open_slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'open'}
	</refpath>
</ae> 

<!--  ++  OUTER_DIAMETER  ++ -->
<ae entity="Outer_diameter">
	<aimelt>outer_round</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outer_round &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'outer diameter'}
	</refpath>
	<aa attribute="feature_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="reduced_size" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'reduced size occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'reduced size']
			[shape_aspect_relationship.description = 'taper usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="reduced_size" assertion_to="Diameter_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'reduced size occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'reduced size']
			[shape_aspect_relationship.description = 'taper usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'diameter taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="reduced_size" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'reduced size occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'reduced size']
			[shape_aspect_relationship.description = 'taper usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
</ae> 

<!--  ++  OUTER_DIAMETER_TO_SHOULDER  ++ -->
<ae entity="Outer_diameter_to_shoulder">
	<aimelt>outer_round</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outer_round &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'outer diameter to shoulder'}
	</refpath>
	<aa attribute="feature_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'feature length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;>
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="v_shape_boundary" assertion_to="Vee_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outer_round &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'v-shape boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'v-shape'}
			shape_aspect =&gt;
			vee_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  OUTER_ROUND  ++ -->
<ae entity="Outer_round">
	<aimelt>outer_round</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outer_round &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
</ae> 

<!--  ++  PARTIAL_AREA_DEFINITION  ++ -->
<ae entity="Partial_area_definition">
	<aimelt>applied_area</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		applied_area &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape}
	</refpath>
	<aa attribute="maximum_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			applied_area &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'maximum length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="effective_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			applied_area &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'effective length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="placement" assertion_to="Axis_placement">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			applied_area &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'orientation'}
			representation_item =&gt;
			geometric_representation_item =&gt;
			placement
		</refpath>
	</aa>
</ae> 

<!--  ++  PARTIAL_CIRCULAR_PATH_FEATURE_COMPONENT  ++ -->
<ae entity="Partial_circular_path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'partial circular'}
	</refpath>
	<aa attribute="sweep_angle" assertion_to="length_measure">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'sweep angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  PARTIAL_CIRCULAR_PROFILE  ++ -->
<ae entity="Partial_circular_profile">
	<aimelt>partial_circular_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		partial_circular_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="sweep_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			partial_circular_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'sweep angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			partial_circular_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  PARTIAL_CIRCULAR_SHAPE_PROFILE  ++ -->
<ae entity="Partial_circular_shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'partial circular boundary occurrence'
	</refpath>
	<aa attribute="open_boundary" assertion_to="Partial_circular_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'partial circular boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			shape_defining_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage'}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;>
			partial_circular_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  PATH_ELEMENT  ++ -->
<ae entity="Path_element">
	<aimelt>path_shape_representation</aimelt>
	<source>ISO 10303-522</source>
	<rules>representation_subtype_exclusiveness</rules>
	<refpath>
		path_shape_representation &lt;=
		shape_representation &lt;=
		representation
		representation.items[i] -&gt;
		{representation_item
		representation_item.name = 'profile shape'}
		representation_item =&gt;
		(geometric_representation_item =&gt;
		curve =&gt;
		bounded_curve)
		(topological_representation_item =&gt;
		edge =&gt;
		edge_curve)
	</refpath>
</ae>

<!--  ++  PATH_FEATURE_COMPONENT  ++ -->
<ae entity="Path_feature_component">
	<aimelt>path_feature_component</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		path_feature_component &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="placement" assertion_to="Axis_placement">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			path_feature_component &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'orientation'}
			representation_item =&gt;
			geometric_representation_item =&gt;
			placement
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_ELEMENT  ++ -->
<ae entity="Planar_element">
	<aimelt>planar_shape_representation</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		planar_shape_representation &lt;=
		shape_representation &lt;=
		representation
	</refpath>
	<aa attribute="normal" assertion_to="Direction_element">
		<aimelt>direction</aimelt>
		<source>ISO 10303-42</source>
		<refpath>
			planar_shape_representation &lt;=
			shape_representation &lt;=
			representation
			representation.items[i] -&gt;
			representation_item =&gt;
			geometric_representation_item =&gt;
			surface =&gt;
			elementary_surface
			{elementary_surface =&gt;
			plane}
			elementary_surface.position -&gt;
			axis2_placement_3d.axis -&gt;
			direction
		</refpath>
	</aa>
	<aa attribute="location" assertion_to="Location_element">
		<aimelt>cartesian_point</aimelt>
		<source>ISO 10303-42</source>
		<refpath>
			planar_shape_representation &lt;=
			shape_representation &lt;=
			representation
			representation.items[i] -&gt;
			representation_item =&gt;
			geometric_representation_item =&gt;
			surface =&gt;
			elementary_surface
			{elementary_surface =&gt;
			plane}
			elementary_surface.position -&gt;
			axis2_placement_3d &lt;=
			placement
			placement.location -&gt;
			cartesian_point
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_FACE  ++ -->
<ae entity="Planar_face">
	<aimelt>flat_face</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		flat_face &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="removal_boundary" assertion_to="Linear_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'removal boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'removal boundary']
			[shape_aspect_relationship.description = 'profile usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			linear_profile
		</refpath>
	</aa>
	<aa attribute="course_of_travel" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'course of travel']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="face_boundary" assertion_to="Closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'enclosed boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'boundary']
			[shape_aspect_relationship.description = 'profile usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			(circular_closed_profile)
			(ngon_closed_profile)
			(rectangular_closed_profile)
			(closed_path_profile)
		</refpath>
	</aa>
	<aa attribute="removal_direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'removal direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt; -
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt; -
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt; -
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt; -
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
	<aa attribute="removal_depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			flat_face &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'removal depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_POCKET_BOTTOM_CONDITION  ++ -->
<ae entity="Planar_pocket_bottom_condition">
	<aimelt>pocket_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		pocket_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'planar'}
	</refpath>
	<aa attribute="floor_normal" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			pocket_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'floor normal'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="floor_location" assertion_to="Location_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			pocket_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'floor location'}
			representation =&gt;
			shape_representation =&gt;
			location_shape_representation
		</refpath>
	</aa>
	<aa attribute="floor_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			pocket_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_PROFILE_FLOOR  ++ -->
<ae entity="Planar_profile_floor">
	<aimelt>profile_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		profile_floor &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'planar'}
	</refpath>
	<aa attribute="floor" assertion_to="Planar_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			profile_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'floor'}
			representation =&gt;
			planar_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_RIB_TOP_FLOOR  ++ -->
<ae entity="Planar_rib_top_floor">
	<aimelt>rib_top_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rib_top_floor &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'planar'}
	</refpath>
	<aa attribute="floor_face" assertion_to="Planar_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			rib_top_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'rib top face'}
			representation =&gt;
			shape_representation =&gt;
			planar_shape_representation
		</refpath>
	</aa>
	<aa attribute="boundary" assertion_to="Closed_profile">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rib_top_floor &lt;=
			{shape_aspect
			shape_aspect.description = 'boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'rib top floor boundary'}
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  PLANAR_TOP_CONDITION  ++ -->
<ae entity="Planar_top_condition">
	<aimelt>boss_top</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		boss_top &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'planar'}
	</refpath>
	<aa attribute="top_normal" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			boss_top &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="top_location" assertion_to="Location_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			boss_top &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			representation =&gt;
			shape_representation =&gt;
			location_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  POCKET  ++ -->
<ae entity="Pocket">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="base_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'fillet radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="change_in_boundardy" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_boundardy" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="bottom_condition" assertion_to="Pocket_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'pocket bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'planar')
			(shape_aspect.description = 'complex')}
			shape_aspect =&gt;
			pocket_bottom
		</refpath>
	</aa>
	<aa attribute="bottom_condition" assertion_to="Through_pocket_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'pocket bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'through')}
			shape_aspect =&gt;
			pocket_bottom
		</refpath>
	</aa>
	<aa attribute="pocket_depth" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'pocket depth occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'pocket depth']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
</ae> 

<!--  ++  POCKET_BOTTOM_CONDITION  ++ -->
<ae entity="Pocket_bottom_condition">
	<aimelt>pocket_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		pocket_bottom &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="start_or_end">
		<aimelt>shape_aspect_relationship.name</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			pocket_bottom &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.name = 'pocket depth start'
			shape_aspect_relationship.name = 'pocket depth end'
		</refpath>
	</aa>
</ae> 

<!--  ++  PROFILE  ++ -->
<ae entity="Profile">
	<aimelt>
		( circular_closed_profile)
		( closed_path_profile)
		( ngon_closed_profile)
		( rectangular_closed_profile)
		( linear_profile)
		( open_path_profile)
		( partial_circular_profile)
		( rounded_u_profile)
		( square_u_profile)
		( tee_profile)
		( vee_profile)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		(circular_closed_profile &lt;=)
		(closed_path_profile &lt;=)
		(ngon_closed_profile &lt;=)
		(rectangular_closed_profile &lt;=)
		(linear_profile &lt;=)
		(open_path_profile &lt;=)
		(partial_circular_profile &lt;=)
		(rounded_u_profile &lt;=)
		(square_u_profile &lt;=)
		(tee_profile &lt;=)
		(vee_profile &lt;=)
		shape_aspect
		{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  PROFILE_FEATURE  ++ -->
<ae entity="Profile_feature">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="profile_swept_shape" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			(shape_aspect.description = 'outside boundary'),
			(shape_aspect.description = 'complex boundary occurrence'),
			(shape_aspect.description = 'partial circular boundary occurrence'),
			(shape_aspect.description = 'closed circular boundary occurrence'),
			(shape_aspect.description = 'open rectangular boundary occurrence'),
			(shape_aspect.description = 'closed rectangular boundary occurrence')}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'profile swept shape']
			[shape_aspect_relationship.description = 'path feature component usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
			shape_aspect.description = 'linear'
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
</ae> 

<!--  ++  PROFILE_FLOOR  ++ -->
<ae entity="Profile_floor">
	<aimelt>profile_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		profile_floor &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="floor_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			profile_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="start_or_end">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			profile_floor &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'shape profile floor orientation'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'shape profile start')
			(descriptive_representation_item.description = 'shape profile end')}
		</refpath>
	</aa>
</ae> 

<!--  ++  PROTRUSION  ++ -->
<ae entity="Protrusion">
	<aimelt>protrusion</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		protrusion &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="shape_volume" assertion_to="Definitional_shape_element">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			protrusion &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'shape volume occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'volume shape usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'volume shape'}
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  RADIUSED_SLOT_END_TYPE  ++ -->
<ae entity="Radiused_slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'radiused'}
	</refpath>
</ae> 

<!--  ++  RECESS  ++ -->
<ae entity="Recess">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'recess'}
	</refpath>
	<aa attribute="bottom_condition" assertion_to="Pocket_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'pocket bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'planar')
			(shape_aspect.description = 'complex')}
			shape_aspect =&gt;
			pocket_bottom
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
	<aa attribute="fillet_boundary" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			( circular_closed_profile)
			( closed_path_profile)
			( ngon_closed_profile)
			( rectangular_closed_profile)
			( linear_profile)
			( open_path_profile)
			( partial_circular_profile)
			( rounded_u_profile)
			( square_u_profile)
			( tee_profile)
			( vee_profile)
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_BOSS  ++ -->
<ae entity="Rectangular_boss">
	<aimelt>boss</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		boss &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'rectangular'}
	</refpath>
	<aa attribute="rectangular_profile" assertion_to="Rectangular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'rectangular profile occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			rectangular_closed_profile
		</refpath>
	</aa>
	<aa attribute="change_in_boundary" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_boundary" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			boss &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_CLOSED_POCKET  ++ -->
<ae entity="Rectangular_closed_pocket">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'closed rectangular'}
	</refpath>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
	<aa attribute="closed_boundary" assertion_to="Rectangular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'closed boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			rectangular_closed_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_CLOSED_PROFILE  ++ -->
<ae entity="Rectangular_closed_profile">
	<aimelt>rectangular_closed_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rectangular_closed_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="profile_width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="profile_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="corner_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_closed_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'corner radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_CLOSED_SHAPE_PROFILE  ++ -->
<ae entity="Rectangular_closed_shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'closed rectangular boundary occurrence'}
	</refpath>
	<aa attribute="closed_boundary" assertion_to="Rectangular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'closed rectangular boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			shape_defining_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			rectangular_closed_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_OFFSET_PATTERN  ++ -->
<ae entity="Rectangular_offset_pattern">
	<aimelt>shape_aspect</aimelt>
	<source>ISO 10303-41</source>
	<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
	<refpath>
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		shape_aspect_relationship =&gt;
		feature_component_relationship =&gt;
		pattern_offset_membership]
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		{shape_aspect_relationship =&gt;
		feature_component_relationship}
		shape_aspect_relationship.relating_shape_aspect-&gt;
		shape_aspect =&gt;
		modified_pattern]
	</refpath>
	<aa attribute="offset_direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			shape_aspect &lt;-
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'offset direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="offset_distance" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'offset distance'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="column_index">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'column index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="row_index">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'row index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure}
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_OMIT_PATTERN  ++ -->
<ae entity="Rectangular_omit_pattern">
	<aimelt>shape_aspect</aimelt>
	<source>ISO 10303-41</source>
	<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
	<refpath>
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		shape_aspect_relationship =&gt;
		feature_component_relationship =&gt;
		pattern_omit_membership]
		[shape_aspect &lt;-
		shape_aspect_relationship.related_shape_aspect
		{shape_aspect_relationship =&gt;
		feature_component_relationship}
		shape_aspect_relationship.relating_shape_aspect -&gt;
		shape_aspect=&gt;
		modified_pattern]
	</refpath>
	<aa attribute="row_index">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'row index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="column_index">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'column index'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_OPEN_POCKET  ++ -->
<ae entity="Rectangular_open_pocket">
	<aimelt>pocket</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		pocket &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'open rectangular'}
	</refpath>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
	<aa attribute="open_boundary" assertion_to="Square_u_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			pocket &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'open boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			square_u_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_OPEN_SHAPE_PROFILE  ++ -->
<ae entity="Rectangular_open_shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		{shape_aspect
		shape_aspect.description = 'open rectangular boundary occurrence'}
	</refpath>
	<aa attribute="open_boundary" assertion_to="Square_u_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'open rectangular boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			shape_defining_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			square_u_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  RECTANGULAR_PATTERN  ++ -->
<ae entity="Rectangular_pattern">
	<aimelt>rectangular_pattern</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rectangular_pattern &lt;=
		replicate_feature &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="relocated_base_feature" assertion_to="Rectangular_offset_pattern">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			[shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship =&gt;
			pattern_offset_membership}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
			[shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'base pattern'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect &lt;-
			{shape_aspect =&gt;
			modified_pattern}
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'modified pattern'}
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
		</refpath>
	</aa>
	<aa attribute="missing_base_feature" assertion_to="Rectangular_omit_pattern">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			[shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship =&gt;
			pattern_omit_membership}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
			[shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'base pattern'}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect &lt;-
			{shape_aspect =&gt;
			modified_pattern}
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			{shape_aspect_relationship.description = 'modified pattern'}
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect]
		</refpath>
	</aa>
	<aa attribute="column_layout_direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'column layout direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="row_spacing" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'row spacing'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="rows">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of rows'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="row_layout_direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'row layout direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="columns">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of columns'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="column_spacing" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rectangular_pattern &lt;=
			replicate_feature &lt;=
			feature_definition &lt;=
			characterized_object
			shape_definition = characterized_object
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'column spacing'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  REPLICATE_BASE  ++ -->
<ae entity="Replicate_base">
	<aimelt>feature_component_relationship</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_relationship_subtype_exclusiveness
		shape_aspect_subtype_exclusiveness
	</rules>
	<refpath>
		feature_component_relationship &lt;=
		shape_aspect_relationship
	</refpath>
	<aa attribute="base_feature" assertion_to="Machining_feature">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_component_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature
		</refpath>
	</aa>
	<aa attribute="base_feature" assertion_to="Replicate_feature">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_component_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature &lt;=
			feature_definition &lt;=
			replicate_feature
		</refpath>
	</aa>
</ae> 

<!--  ++  REPLICATE_FEATURE  ++ -->
<ae entity="Replicate_feature">
	<aimelt>replicate_feature</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		replicate_feature &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="placement" assertion_to="Axis_placement">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			replicate_feature &lt;=
			feature_definition =&gt;
			instanced_feature &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'orientation'}
			representation_item =&gt;
			geometric_representation_item =&gt;
			placement
		</refpath>
	</aa>
	<aa attribute="replicate_feature_base" assertion_to="Replicate_base">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			replicate_feature &lt;=
			feature_definition =&gt;
			instanced_feature &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			shape_aspect_relationship =&gt;
			feature_component_relationship
			{shape_aspect_relationship.name ='pattern basis'}
		</refpath>
	</aa>
</ae> 

<!--  ++  REVOLVED_FEATURE  ++ -->
<ae entity="Revolved_feature">
	<aimelt>revolved_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		revolved_profile &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			revolved_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="material_side" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			revolved_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'removal direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  REVOLVED_FLAT  ++ -->
<ae entity="Revolved_flat">
	<aimelt>revolved_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		revolved_profile &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'flat'}
	</refpath>
	<aa attribute="flat_edge_shape" assertion_to="Linear_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			revolved_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'flat edge shape occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'flat edge shape'}
			shape_aspect =&gt;
			linear_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  REVOLVED_ROUND  ++ -->
<ae entity="Revolved_round">
	<aimelt>revolved_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		revolved_profile &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'round'}
	</refpath>
	<aa attribute="rounded_edge_shape" assertion_to="Partial_circular_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			revolved_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'rounded edge shape occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'rounded edge shape'}
			shape_aspect =&gt;
			partial_circular_profile
		</refpath>
	</aa>
</ae> 

<!--  ++  RIB_TOP  ++ -->
<ae entity="Rib_top">
	<aimelt>rib_top</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		rib_top &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="removal_direction" assertion_to="Direction">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			ribtop &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'removal direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
	<aa attribute="floor_condition" assertion_to="Rib_top_floor">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			ribtop &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'rib top condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'ribtop usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'planar')
			(shape_aspect.description = 'complex')}
			shape_aspect =&gt;
			ribtop_floor
		</refpath>
	</aa>
</ae> 

<!--  ++  RIB_TOP_FLOOR  ++ -->
<ae entity="Rib_top_floor">
	<aimelt>rib_top_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rib_top_floor &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  ROUND_HOLE  ++ -->
<ae entity="Round_hole">
	<aimelt>round_hole</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		round_hole &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="hole_depth" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'hole depth occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'hole depth']
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="diameter" assertion_to="Circular_closed_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.name = 'diameter']
			[shape_aspect_relationship.description = 'profile usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			circular_closed_profile
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Angle_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'angle taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Diameter_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'diameter taper'}
			shape_aspect =&gt;
			taper
		</refpath>
	</aa>
	<aa attribute="change_in_diameter" assertion_to="Directed_taper">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'change in diameter occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'taper usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'directed taper'}
			shape_aspect =&gt;
			tape
		</refpath>
	</aa>
	<aa attribute="bottom_condition" assertion_to="Blind_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'hole bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'conical')
			(shape_aspect.description = 'flat')
			(shape_aspect.description = 'flat with radius')
			(shape_aspect.description = 'flat with taper')
			(shape_aspect.description = 'spherical')}
			shape_aspect =&gt;
			hole_bottom
		</refpath>
	</aa>
	<aa attribute="bottom_condition" assertion_to="Through_bottom_condition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			round_hole &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'bottom condition occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			feature_component_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'hole bottom usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'through'}
			shape_aspect =&gt;
			hole_bottom
		</refpath>
	</aa>
</ae> 

<!--  ++  ROUNDED_END  ++ -->
<ae entity="Rounded_end">
	<aimelt>rounded_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		rounded_end &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="partial_circular_boundary" assertion_to="Partial_circular_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			rounded_end &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'partial circular boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.description = 'profile usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			partial_circular_profile
		</refpath>
	</aa>
	<aa attribute="course_of_travel" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			rounded_end &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
</ae> 

<!--  ++  ROUNDED_U_PROFILE  ++ -->
<ae entity="Rounded_u_profile">
	<aimelt>rounded_u_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		rounded_u_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rounded_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			rounded_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  SECOND_CHAMFER_OFFSET  ++ -->
<ae entity="Second_chamfer_offset">
	<aimelt>chamfer_offset</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		chamfer_offset &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'second offset'}
	</refpath>
	<aa attribute="offset_amount" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			chamfer_offset &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'offset amount'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  SECOND_CHAMFER_PARAMETER  ++ -->
<ae entity="Second_chamfer_parameter">
	<aimelt>chamfer_offset</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		chamfer_offset &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'second offset'}
	</refpath>
	<aa attribute="second_face" assertion_to="Face_shape_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			chamfer_offset &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'second face shape'}
			representation =&gt;
			shape_representation =&gt;
			face_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  SHAPE_PROFILE  ++ -->
<ae entity="Shape_profile">
	<aimelt>outside_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		outside_profile &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="floor_condition" assertion_to="Profile_floor">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			(shape_aspect.description = 'complex boundary occurrence')
			(shape_aspect.description = 'partial circular boundary occurrence')
			(shape_aspect.description = 'closed circular boundary occurrence')
			(shape_aspect.description = 'open rectangular boundary occurrence')
			(shape_aspect.description = 'closed rectangular boundary occurrence')}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile floor usage'}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'planar')
			(shape_aspect.description = 'complex')}
			shape_aspect =&gt;
			profile_floor
		</refpath>
	</aa>
	<aa attribute="floor_condition" assertion_to="Through_profile_floor">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			(shape_aspect.description = 'complex boundary occurrence'),
			(shape_aspect.description = 'partial circular boundary occurrence'),
			(shape_aspect.description = 'closed circular boundary occurrence'),
			(shape_aspect.description = 'open rectangular boundary occurrence'),
			(shape_aspect.description = 'closed rectangular boundary occurrence')}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{shape_aspect_relationship =&gt;
			feature_component_relationship
			shape_aspect_relationship
			shape_aspect_relationship.description = 'profile floor usage'}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			(shape_aspect.description = 'through')}
			shape_aspect =&gt;
			profile_floor
		</refpath>
	</aa>
	<aa attribute="removal_direction" assertion_to="Direction_element">
		<aimelt>PATH</aimelt>
		<rules>representation_subtype_exclusiveness</rules>
		<refpath>
			outside_profile &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			{property_definition =&gt;
			product_definition_shape}
			{product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect
			(shape_aspect.description = 'complex boundary occurrence'),
			(shape_aspect.description = 'partial circular boundary occurrence'),
			(shape_aspect.description = 'closed circular boundary occurrence'),
			(shape_aspect.description = 'open rectangular boundary occurrence'),
			(shape_aspect.description = 'closed rectangular boundary occurrence')}
			property_definition_representation.definition
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation
			representation.name = 'removal direction'}
			representation =&gt;
			shape_representation =&gt;
			direction_shape_representation
		</refpath>
	</aa>
</ae> 

<!--  ++  SLOT  ++ -->
<ae entity="Slot">
<aimelt>slot</aimelt>
<source>ISO 10303-522</source>
<rules>machining_feature_life_cycle
	shape_aspect_subtype_exclusiveness
	subtype_mandatory_characterized_object
</rules>
<refpath>
	slot &lt;=
	feature_definition &lt;=
	characterized_object
</refpath>
</ae> 

<!--  ++  SLOT_END_TYPE  ++ -->
<ae entity="Slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="first_or_second">
		<aimelt>shape_aspect_relationship.name</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			slot_end &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			shape_aspect_relationship
			shape_aspect_relationship.name
			{(shape_aspect_relationship.name = 'course of travel start')
			(shape_aspect_relationship.name = 'course of travel end')}
		</refpath>
	</aa>
</ae> 

<!--  ++  SPHERICAL_CAP  ++ -->
<ae entity="Spherical_cap">
	<aimelt>spherical_cap</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		spherical_cap &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="internal_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			spherical_cap &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'internal angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			spherical_cap &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  SPHERICAL_HOLE_BOTTOM  ++ -->
<ae entity="Spherical_hole_bottom">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'spherical'}
	</refpath>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusivenes
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			hole_bottom &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  SPUR_GEAR  ++ -->
<ae entity="Spur_gear">
	<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'spur gear'}
	</refpath>
</ae> 

<!--  ++  SQUARE_U_PROFILE  ++ -->
<ae entity="Square_u_profile">
	<aimelt>square_u_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		square_u_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="first_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="first_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			square_u_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  STEP  ++ -->
<ae entity="Step">
	<aimelt>step</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		step &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="removal_boundary" assertion_to="Vee_profile">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			step &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'removal boundary occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'profile usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			vee_profile
		</refpath>
	</aa>
	<aa attribute="course_of_travel" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			step &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect
			shape_aspect.description = 'course of travel occurrence'}
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			[shape_aspect_relationship.description = 'path feature component usage']]}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			{shape_aspect
			shape_aspect.description = 'linear'}
			shape_aspect =&gt;
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Boss">
		<aimelt>PATH</aimelt>
		<refpath>
			step &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			boss
		</refpath>
	</aa>
	<aa attribute="volume_not_removed" assertion_to="Protrusion">
		<aimelt>PATH</aimelt>
		<refpath>
			step &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			{shape_aspect =&gt;
			composite_shape_aspect}
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			{shape_aspect_relationship.description = 'uncut volume'}
			{shape_aspect_relationship =&gt;
			feature_component_relationship}
			shape_aspect_relationship
			shape_aspect_relationship.related_shape_aspect -&gt;
			shape_aspect =&gt;
			instanced_feature =&gt;
			feature_definition =&gt;
			protrusion
		</refpath>
	</aa>
</ae> 

<!--  ++  STRAIGHT_BEVEL_GEAR  ++ -->
<ae entity="Straight_bevel_gear">
	<aimelt>gear</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		gear &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'straight bevel gear'}
	</refpath>
</ae> 

<!--  ++  STRAIGHT_KNURL  ++ -->
<ae entity="Straight_knurl">
	<aimelt>turned_knurl</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		turned_knurl &lt;=
		feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'straight'}
	</refpath>
</ae> 

<!--  ++  TEE_PROFILE  ++ -->
<ae entity="Tee_profile">
	<aimelt>tee_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		tee_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="first_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="first_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_offset" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second offset'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="cross_bar_width" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'cross bar width'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="cross_bar_depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			tee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'cross bar depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  THREAD  ++ -->
<ae entity="Thread">
	<aimelt>
		( thread)
		( externally_defined_feature_definition)
	</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_relationship_subtype_exclusiveness
	</rules>
	<refpath>
		(thread &lt;=
		feature_definition &lt;=
		characterized_object)
		(externally_defined_feature_definition &lt;=
		[externally_defined_item]
		[feature_definition &lt;=
		characterized_object
		{characterized_object
		characterized_object.description = 'thread'}])
	</refpath>
	<aa attribute="partial_profile" assertion_to="Partial_area_definition">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape 
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'applied area usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			applied_area
		</refpath>
	</aa>
	<aa attribute="runout" assertion_to="Thread_runout">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness
			shape_aspect_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			shape_aspect_relationship.related_shape_aspect
			{[shape_aspect_relationship =&gt;
			shape_defining_relationship]
			[shape_aspect_relationship
			shape_aspect_relationship.description = 'thread runout usage']}
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			thread_runout
		</refpath>
	</aa>
	<aa attribute="fit_class" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'fit class'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="form" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'form'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="number_of_threads" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of threads'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			ratio_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="thread_hand" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'hand'}
			{representation_item
			representation_item.description = 'left'
			representation_item.description = 'right'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="inner_or_outer_thread">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'thread side'}
			representation_item =&gt;
			descriptive_representation_item
			descriptive_representation_item.description
			{(descriptive_representation_item.description = 'internal')
			(descriptive_representation_item.description = 'external')}
		</refpath>
	</aa>
	<aa attribute="qualifier" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'qualifier'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
	<aa attribute="nominal_size" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'nominal size'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="applied_shape" assertion_to="Definitional_shape_element">
		<aimelt>PATH</aimelt>
		<rules>shape_aspect_relationship_subtype_exclusiveness</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition =&gt;
			characterized_object &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape
		</refpath>
	</aa>
	<aa attribute="fit_class_2" assertion_to="text">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			( thread &lt;=)
			( externally_defined_feature_definition &lt;=)
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'fit class 2'}
			representation_item =&gt;
			descriptive_representation_item
		</refpath>
	</aa>
</ae> 

<!--  ++  THREAD_RUNOUT  ++ -->
<ae entity="Thread_runout">
	<aimelt>thread_runout</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		thread_runout &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.of_shape -&gt;
		product_definition_shape}
	</refpath>
	<aa attribute="length_of_runout" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread_runout &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'length of runout'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="pitch_or_dimension">
		<aimelt>-</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread_runout &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'pitch or dimension'}
			representation_item =&gt;
			descriptive_representation_item
			(descriptive_representation_item.description = 'pitch')
			(descriptive_representation_item.description = 'dimension')
		</refpath>
	</aa>
	<aa attribute="included_or_extra">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			thread_runout &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'included or extra'}
			representation_item =&gt;
			descriptive_representation_item
			(descriptive_representation_item.description = 'included')
			(descriptive_representation_item.description = 'extra')
		</refpath>
	</aa>
</ae> 

<!--  ++  THROUGH_BOTTOM_CONDITION  ++ -->
<ae entity="Through_bottom_condition">
	<aimelt>hole_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		hole_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'through'}
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  THROUGH_POCKET_BOTTOM_CONDITION  ++ -->
<ae entity="Through_pocket_bottom_condition">
	<aimelt>pocket_bottom</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		pocket_bottom &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'through'}
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  THROUGH_PROFILE_FLOOR  ++ -->
<ae entity="Through_profile_floor">
	<aimelt>profile_floor</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		profile_floor &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'through'}
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  TRANSITION_FEATURE  ++ -->
<ae entity="Transition_feature">
	<aimelt>transition_feature</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness
		transition_feature_life_cycle
		transition_feature_on_part_boundary
	</rules>
	<refpath>
		transition_feature &lt;=
		shape_aspect
	</refpath>
</ae> 

<!--  ++  TURNED_KNURL  ++ -->
<ae entity="Turned_knurl">
	<aimelt>turned_knurl</aimelt>
	<source>ISO 10303-522</source>
	<rules>machining_feature_life_cycle
		shape_aspect_subtype_exclusiveness
		subtype_mandatory_characterized_object
	</rules>
	<refpath>
		turned_knurl &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="nominal_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'nominal diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="diametrical_pitch" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'diametral pitch'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="root_fillet" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'root fillet'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="number_of_teeth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'number of teeth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = count_measure
			count_measure}
		</refpath>
	</aa>
	<aa attribute="tooth_depth" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tooth depth'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="major_diameter" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			turned_knurl &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'major diameter'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  VEE_PROFILE  ++ -->
<ae entity="Vee_profile">
	<aimelt>vee_profile</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		vee_profile &lt;=
		shape_aspect
	</refpath>
	<aa attribute="profile_radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			vee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'profile radius'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="profile_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			vee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'profile angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="tilt_angle" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			vee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'tilt angle'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="first_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			vee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'first length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="second_length" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<source>ISO 10303-522</source>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			vee_profile &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'second length'}
			representation_item =&gt;
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  WOODRUFF_SLOT_END_TYPE  ++ -->
<ae entity="Woodruff_slot_end_type">
	<aimelt>slot_end</aimelt>
	<source>ISO 10303-522</source>
	<rules>shape_aspect_subtype_exclusiveness</rules>
	<refpath>
		slot_end &lt;=
		shape_aspect
		{shape_aspect
		shape_aspect.description = 'woodruff'}
	</refpath>
	<aa attribute="radius" assertion_to="Numerical_item_with_unit">
		<aimelt>PATH</aimelt>
		<rules>dependent_instantiable_shape_representation
			representation_subtype_exclusiveness
			shape_representation_subtype_exclusiveness
		</rules>
		<refpath>
			slot_end &lt;=
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition &lt;-
			property_definition_representation.definition
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation
			property_definition_representation.used_representation -&gt;
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation
			representation.items[i] -&gt;
			{representation_item
			representation_item.name = 'radius'}
			representation_item =&gt;
			measure_representation_item
			.{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit
		</refpath>
	</aa>
</ae>

 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
   <shortnames>
      <shortname name="FSRR" entity="face_shape_representation_relationship"/>
   </shortnames>                                 		          		               	      
 </mim>


 <!-- Clause 6 Module reference data -->
<!--
 <refdata>
   <refdata_subclause title='Classifications of x'>
   </refdata_subclause>
 </refdata>
-->

<bibliography>
	<bibitem.inc ref="ISO1122-1"/>
	<bibitem.inc ref="ISO1328-1"/>
	<bibitem.inc ref="ISO1340"/>
	<bibitem.inc ref="ISO2203"/>
	<bibitem.inc ref="ref8824-1"/>
    <bibitem.inc ref="AMConGde06"/>
</bibliography>

</module>
