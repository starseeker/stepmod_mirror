<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="mesh_connectivity" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2009/09/28 21:14:11 $" rcs.revision="$Revision: 1.6 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Mesh_connectivity_arm
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Mesh_connectivity_arm">
<p>
	Meshes have interfaces which are either abutting or overlapping. 
	For the abutting interface this can be either matched, or mis-matched.
	This clause describes and illustrates such interfaces.
</p>
	<note number="1">
		Figures 1 to Figure 3 show three types of mesh interfaces.
	</note>
	<example number="1">
		Figure 1 illustrates a 1-to-1 abutting interface, also referred to as matching or C0 continuous.
		The interface is a plane of vertices that are physically coincident (i.e., they have identical coordinate values) between
		the adjacent meshes; mesh-coordinate lines perpendicular to the interface are continuous from one mesh to the next.
		In 3-D, a 1-to-1 abutting interface is always a logically rectangular region.
	</example>
	<figure id="1_1_abutting_interface" number="1">
	  <title>A 1-to-1 abutting interface</title>
	  <img src="1_1_abutting_interface.gif"/>
	</figure>
	
	<figure id="mismatched_abutting_interface" number="2">
	  <title>A mismatched abutting interface</title>
	  <img src="mismatched_abutting_interface.gif"/>
	</figure>
	
	<figure id="overset_interface" number="3">
	  <title>An overset interface</title>
	  <img src="overset_interface.gif"/>
	</figure>
	
	<example number="2">
		The second type of interface, is mismatched abutting, where two meshes touch but do not overlap
		(except for vertices and cell faces on the mesh plane of the interface).
		Vertices on the interface need not be physically concident between the two meshes.
		Figure 2 identifies the vertices and face centers of the left mesh that lie on the interface. 
		In 3-D, the vertices of a mesh that constitute an interface patch may not form a logically rectangular region.
	</example>
<p>
	The third type of interface is called overset and occurs when two meshes overlap; in 3-D, the overlap is a 3-D region. 
	For overset interfaces, one of the two meshes takes precedence over the other; 
	this establishes which solution in the overlap region to retain and which one to discard.
	The region in a given mesh where the solution is discarded is called an overset hole and the mesh vertices outlining the hole
	are called fringe points.
</p>
	<example number="3">
		Figure 3 depicts an overlap region between two meshes, where the right mesh takes precedence over the left mesh. 
		The points identified in Figure 3 are the fringe points and overset-hole points for the left mesh.
		In addition, for the mesh taking precedence, any bounding points (i.e., vertices on the bounding faces) of the mesh
		that lies within the overlap must also be identified.
	</example>
<p>
	Overset interfaces may include multiple layers of fringe points outlining holes and at mesh boundaries.
</p>
<p>
	For the mismatched abutting and overset interfaces in Figure 2 and Figure 3, the left mesh plays the role of
	receiver mesh and the right plays the role of donor mesh.
</p>
<p>
	Mesh vertices that are included in a mesh interface are, in general, termed interface points.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Enumeration: mismatched_region_type 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.mismatched_region_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.mismatched_region_type">
	A  <b>mismatched_region_type</b> is an enumeration of the kinds of mismatched mesh regions.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Enumeration: mismatched_region_type  Item: abutting 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.mismatched_region_type.abutting"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.mismatched_region_type.abutting">
	an abutting region;
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Enumeration: mismatched_region_type  Item: overset 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.mismatched_region_type.overset"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.mismatched_region_type.overset">
	an overset region.
</ext_description><!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Listed_real_data  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Listed_real_data"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Listed_real_data">
	A <b>Listed_real_data</b> is a multi-dimensional array of real numbers.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection">
	A <b>Matched_mesh_connection</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity" /> 
	that contains connectivity information for a mesh interface patch that is abutting with 1-to-1 matching between adjacent structured mesh 
	indices (also referred to as C0 connectivity). 
	An interface patch is the subrange of the face of a mesh that touches one and only one other mesh. 
	This structure identifies the subrange of indices for the two adjacent meshes that make up the interface and gives an index transformation 
	from one mesh to the other. 
	It also identifies the adjacent mesh.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Attribute: current 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.current"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.current">
	(inherited) the current mesh.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Attribute: range 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.range"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.range">
	contains the subrange of indices that makes up the interface patch in the block.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Attribute: donor 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.donor"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.donor">
	the adjacent mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Attribute: donor_range 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.donor_range"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.donor_range">
	contains the interface patch subrange of indices for the <b>donor</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Attribute: transform 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.transform"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.transform">
<p>
	contains a shorthand notation for the transformation matrix describing the relationship between indices of the two adjacent meshes.
</p>
<p>
	The shorthand matrix notation used in <b>transform</b> has the following properties.
	The matrix itself has rank 
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.index_count" /> 
	and contains elements +1, 0, and -1; it is orthonormal and its inverse is its transpose.
	The transformation matrix (T) works as follows:
	If Index1 and Index2 are the indices of a given point on the interface, 
	where Index1 is in the current mesh and Index2 is in the adjacent mesh, then their relationship is,
</p>
	<screen>
		Index2 = T.(Index1 - Start1) + Start2
		Index1 = Transpose[T].(Index2 - Start2) + Start1
	</screen>
<p>
	where the '.' notation indicates matrix-vector multiply, Start1 and Finish1 are the subrange indices
	contained in <b>range</b>, and Start2 and Finish2 are the subrange indices contained in <b>donor_range</b>.
</p>
<p>
	The short-hand notation used in <b>transform</b> is as follows.
	Each element shows the image in the adjacent mesh's face of a positive index increment in the current mesh's face.
	The first element is the image of a positive increment in <i>i</i>; the second element is the image of an increment in <i>j</i>; 
	and the third (in 3-D) is the image of an increment in <i>k</i> in the current mesh's face.
	For 3-D, the transformation matrix <i>T</i> is constructed from <b>transform</b> = [&#177;a, &#177;b, &#177;c] as follows:
</p>
	<img src="matrix_t.gif"/>
<p>
	where,
</p>
	<img src="sgn_del.gif"/>
	<example number="1">
		<b>transform</b> = [-2, +3, +1] gives the transformation matrix,
	</example>
	<img src="transformation_t.gif"/>
	<note number="1">
		For establishing relationships between adjacent and current mesh indices lying on the interface itself,
		one of the elements of <b>transform</b> is superfluous since one component of both interface indices remains constant.
	</note>
	<note number="2">
		The transform matrix and the two index pairs overspecify the interface patch. 
		For example, Finish2 can be obtained from <b>transform</b>, Start1, Finish1 and Start2.
	</note>
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Where: WR1 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.wr:WR1">
	The <b>current</b> and <b>donor</b> shall be different.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Where: WR2 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.wr:WR2"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.wr:WR2">
	The 
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.index_count">index_counts</express_ref> 
	of <b>current</b> and <b>donor</b> shall have the same value.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Where: WR3 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.wr:WR3"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.wr:WR3">
	The 
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.index_count">index_counts</express_ref>  
	of <b>current</b> and <b>range</b> shall have the same value.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Matched_mesh_connection  Where: WR4 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.wr:WR4"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Matched_mesh_connection.wr:WR4">
	The 
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.index_count">index_counts</express_ref> 
	of <b>donor</b> and <b>donor_range</b> shall have the same value.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity">
	A <b>Mesh_connectivity</b> is the connectivity of a mesh interface.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  Attribute: id 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity.id">
	an identifier.      
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  Attribute: name 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity.name">
	user-specified instance identifier.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  Attribute: description 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity.description">
   annotation.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  Attribute: current 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.current"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity.current">
	the current (receiver) mesh;
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_connectivity  Attribute: index_count 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.index_count"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_connectivity.index_count">
	the number of indices required to identify uniquely a vertex or cell in the block.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mesh_overset_hole  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_overset_hole"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mesh_overset_hole">
<p>
	A <b>Mesh_overset_hole</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_connection" /> 
	that is a hole, or holes, in an overset mesh.
</p>
<p>
	Mesh connectivity for overset meshes may also include 'holes' within meshes, where any mesh data is ignored or 'turned off', 
	because the data in some other overlapping mesh applies instead.
</p>
	<note number="1">
		The interface points making up a hole within a mesh may be specified by an element in the 
		<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.range" /> 
		list if they constitute a logically rectangular region.
		Likewise further elements in the list may be used for further logically rectangular holes.
		The more general alternative is to use 
		<express_ref linkend="Mesh_topology:arm:Mesh_topology_arm.Array_based_unstructured_mesh_and_vertices.vertices" /> 
		to list all interface points making up the holes within a mesh.
		Using the list of 
		<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.range" /> 
		specifications, or using 
		<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.range" /> 
		in combination with 
		<express_ref linkend="Mesh_topology:arm:Mesh_topology_arm.Array_based_unstructured_mesh_and_vertices.vertices" />, 
		may result in a given hole being specified more than once.
	</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_donor_mesh  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_donor_mesh"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_donor_mesh">
	A <b>Mismatched_donor_mesh</b> is a mesh that acts as a donor for a 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region" />.
	A <b>Mismatched_donor_mesh</b> is either a 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh" />
	or an
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh" />.
</ext_description>

<!-- donor -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_donor_mesh.donor">
	the donor mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_donor_mesh  Attribute: connect 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_donor_mesh.connect"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_donor_mesh.connect">
	the 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region" />
	for which this is the donor.
</ext_description><!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_connection  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_connection"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_connection">
	A  <b>Mismatched_mesh_connection</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity" />
	that contains conectivity information for generalized mesh interfaces. 
	Its purpose is to describe mismatched-abutting and overset interfaces for both structured and unstructured meshes, 
	and can also be used for 1-to-1 abutting interfaces.
<p>
	For abutting interfaces, also referred to as patched or mismatched, an interface patch is the subrange of the face of a mesh 
	that touches one and only one other mesh. 
	This structure identifies the subrange of indices (or array of indices) that make up the interface and gives their image 
	in the adjacent (donor) mesh. 
	It also identifies the adjacent mesh. 
	If a given face of a mesh touches several (say <i>N</i>) adjacent meshes, then <i>N</i> different instances of <b>Mismatched_mesh_connection</b> 
	are needed to describe all the interfaces. 
	For a single abutting interface, two instances of <b>Mismatched_mesh_connection</b> are needed - one for each adjacent mesh. 
</p>
<p>
	For overset interfaces, this structure identifies the fringe points of a given mesh that lie in one and only one other mesh. 
	If the fringe points of a mesh lie in several (say <i>N</i>) overlapping meshes, then <i>N</i> different instances of 
	<b>Mismatched_mesh_connection</b> are needed to describe the overlaps. 
	It is possible with overset meshes that a single fringe point may actually lie in several overlapping meshes 
	(though in typical usage, linkage to only one of the overlapping meshes is kept). 
	There is no restriction against a given fringe point being contained within multiple instances of <b>Mismatched_mesh_connection</b>; 
	therefore, this structure allows the description of a single fringe point lying in several overlapping meshes.
</p>
<p>
	A  <b>Mismatched_mesh_connection</b> is either a 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region" />
	or a
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_overset_hole" />.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_connection  Attribute: points 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_connection.points"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_connection.points">
	the indices of the interface points within the current mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_connection  Attribute: gridloc 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_connection.gridloc"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_connection.gridloc">
	the location of indices within the current mesh described by <b>points</b>. 
	It also identifies the location of indices described by an index range 
	in a donor mesh. 
	This allows the flexibility to describe overset interfaces for cell-centered quantities.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_region  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region">
	A <b>Mismatched_mesh_region</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_connection" />
	that is abutting or overset.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_region  Attribute: donor 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region.donor"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region.donor">
	an adjacent structured or unstructured donor mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Mismatched_mesh_region  Attribute: kind 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_mesh_region.kind"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region.kind">
	the kind of connection.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region.wr:WR1">
	The donor mesh shall not be the same as the 
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity.current" />.
</ext_description>

<!-- IP1 -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region.wr:IP1">
	When the <b>kind</b> is 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.mismatched_region_type.abutting" /> 
	the 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Matched_mesh_connection.range" /> 
	or 
	<express_ref linkend="Mesh_topology:arm:Mesh_topology_arm.Array_based_unstructured_mesh_and_vertices.vertices" /> 
	shall describe a face subrange (i.e., points in a single computational mesh plane).
</ext_description>

<!-- IP2 -->
<ext_description linkend="Mesh_connectivity_arm.Mismatched_mesh_region.wr:IP2">
	When the <b>kind</b> is 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.mismatched_region_type.abutting" />  
	the 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh" /> 
	shall also describe a face subrange.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Multiple_mesh_block  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Multiple_mesh_block"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Multiple_mesh_block">
	A  <b>Multiple_mesh_block</b> is a grouping of connected meshes. 
	All mesh connectivity information pertaining to the group is contained in the <b>Multiple_mesh_block</b> structure. 
	This includes abutting interfaces (general mismatched and 1-to-1), overset-mesh interfaces, and overset-mesh holes.
<p>
	All the interface patches for a given mesh in the group are contained in the <b>Multiple_mesh_block</b> entity for that group. 
	If a face of a mesh touches several other meshes (say <i>N</i>), the <i>N</i> different instances of the 
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity" /> 
	structure must be included in the <b>Multiple_mesh_block</b> to describe each interface patch.
</p>
	<note number="1">
		This convention requires that a single interface patch be described twice - once for each adjacent mesh. 
		It also means that the <b>Multiple_mesh_block</b> is symmetrical with regard to interface patches.
	</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Multiple_mesh_block  Attribute: id 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Multiple_mesh_block.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Multiple_mesh_block.id">
	an identifier.        
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Multiple_mesh_block  Attribute: name 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Multiple_mesh_block.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Multiple_mesh_block.name">
	user-specified instance identifier. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Multiple_mesh_block  Attribute: description 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Multiple_mesh_block.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Multiple_mesh_block.description">
	annotation.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Multiple_mesh_block  Attribute: connectivities 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Multiple_mesh_block.connectivities"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Multiple_mesh_block.connectivities">
	the connectivity information.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Property_distribution_description  
   <express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Property_distribution_description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Property_distribution_description">
	A <b>Property_distribution_description</b> is a ...
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Property_distribution_description  Attribute: id 
   <express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Property_distribution_description.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Property_distribution_description.id">
	the identifier for the <b>Property_distribution_description</b>.        
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Property_distribution_description  Attribute: name 
   <express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Property_distribution_description.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Property_distribution_description.name">
	the words by which the <b>Property_distribution_description</b> is known. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Property_distribution_description  Attribute: description 
   <express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.Property_distribution_description.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Property_distribution_description.description">
	the text that provides further information about the <b>Property_distribution_description</b>.  
	The value of this attribute need not be specified.
</ext_description>

<!-- physical_function -->
<ext_description linkend="Mesh_connectivity_arm.Property_distribution_description.physical_function">
	the
	<express_ref linkend="Mesh_connectivity:arm:Mesh_connectivity_arm.property_distribution_select"/>
	for the <b>Property_distribution_description</b>.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Structured_donor_mesh  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Structured_donor_mesh">
	A <b>Structured_donor_mesh</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mismatched_donor_mesh" />  
	that is structured.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Structured_donor_mesh  Attribute: donor 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh.donor"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Structured_donor_mesh.donor">
	the structured donor mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Structured_donor_mesh  Attribute: points 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh.points"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Structured_donor_mesh.points">
	the image of the receiver mesh interface points in the donor mesh. 
	These may be thought of as bi- or tri-linear interpolants (depending on 
	<express_ref linkend="mesh_topology:arm:Mesh_topology_arm.Cell.dimension" />) 
	in the computational grid of the donor mesh. 
	FORTRAN multidimensional array ordering shall be used.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Structured_donor_mesh  Attribute: vsize 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh.vsize"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Structured_donor_mesh.vsize">
	the size of the data array necessary to contain the interface points.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Structured_donor_mesh  Attribute: index_count 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Structured_donor_mesh.index_count"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Structured_donor_mesh.index_count">
	the number of indices required to reference a vertex.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh">
	An <b>Unstructured_donor_mesh</b> is a type of
	<express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Mesh_connectivity" /> 
	that is unstructured.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  Attribute: donor 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh.donor"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh.donor">
	the unstructured donor mesh.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  Attribute: cells 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh.cells"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh.cells">
	contains the donor cell where the node is located.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  Attribute: interpolant 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh.interpolant"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh.interpolant">
	contains the interpolation factors to locate the node in the donor cell.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  Attribute: vsize 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh.vsize"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh.vsize">
	the size of the data array necessary.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Mesh_connectivity_arm  Entity: Unstructured_donor_mesh  Attribute: index_count 
   <express_ref linkend="mesh_connectivity:arm:Mesh_connectivity_arm.Unstructured_donor_mesh.index_count"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Mesh_connectivity_arm.Unstructured_donor_mesh.index_count">
	the number of indices required to reference a vertex.
</ext_description>

</ext_descriptions>
