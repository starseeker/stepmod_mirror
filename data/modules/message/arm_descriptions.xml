<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="message" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2003/02/11 09:01:37 $" rcs.revision="$Revision: 1.9 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Message_arm
   <express_ref linkend="message:arm:Message_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<ext_description linkend="Message_arm">
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Type: message_approval_select 
   <express_ref linkend="message:arm:Message_arm.message_approval_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.message_approval_select">
The approval has the implication that the contents are suitable for the purpose of the message.
<note> The approval of the list of intended recipients of the message is held against Envelope. </note>
</ext_description>




<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Type: message_date_time_select 
   <express_ref linkend="message:arm:Message_arm.message_date_time_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.message_date_time_select">
<note> Date_or_date_time_assignment.role allows the role of the assigment to be identified, for example, "date made". </note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Type: message_definer_select 
   <express_ref linkend="message:arm:Message_arm.message_definer_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.message_definer_select">
The message_definer is initially defined as an <b>organization</b> or <b>person_in_organization</b>, but provision is made to extend this in higher level modules.
<note number="2"> Another possible message definer is a piece of automatic recording equipment, which will need
the select extending to <b>product_version</b>.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Type: message_security_classification_select 
   <express_ref linkend="message:arm:Message_arm.message_security_classification_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.message_security_classification_select">
This enables a security classification to be applied to the message as a whole.
<note> The security classification of the collection of information may be higher than any of the individual elements of the message. </note> 
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Type: message_state_select 
   <express_ref linkend="message:arm:Message_arm.message_state_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.message_state_select">
<note> The business process for creating, approving and processing a message can be mapped to a state model, hence assigning a series of states to a message allows an audit trail to be produced. </note>
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Content_item  
   <express_ref linkend="message:arm:Message_arm.Content_item"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Message_arm.Content_item">
A content item is a reference to any item that can be referenced as part of the message content.
<note number="1">As well as externally defined items such as drawings, photographs, and so on, a message can refer to any entity represented in the schema it is used in, from products to property values, or actions to task steps.The mechanism used gives no interpretation of how the <b>item_identifier</b> is interpreted or how the data is accessed. For example, the identifier could be the number of the entity in a Part 21 file. Interpretation of this entity and its attributes may be defined through reference data.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Content_item  Attribute: access_comment 
   <express_ref linkend="message:arm:Message_arm.Content_item.access_comment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Content_item.access_comment">
The access comment informs the user about how to access the data. This may include or imply a description what associated entities are accessed as part of the message. For example, reference to a <b>product</b> entity may also bring with it any <express_ref linkend="identification_assignment:arm:Identification_assignment_arm.Identification_assignment"/> that applies to it.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Content_item  Attribute: item_identifier 
   <express_ref linkend="message:arm:Message_arm.Content_item.item_identifier"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Content_item.item_identifier">
The item_identifer provides a reference mechanism to any entity or object referenced in the message.
<note number="2">The item_identifier should provide a unique reference to the item referred to in the message, however there is no useful way of specifying this.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Content_item  Attribute: item_type 
   <express_ref linkend="message:arm:Message_arm.Content_item.item_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Content_item.item_type">
This provides the type of the item. The format and value will b given through reference data.
<example number="1">A <b>product</b> in a part 21 file may be given the type 'part 21 entity'.</example>
<example number="2">A log file from built in equipment may be given the type 'equipment log file'.</example> 
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  
   <express_ref linkend="message:arm:Message_arm.Message"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message">
A <b>Message</b> is a collection of information, brought together by an originator (the message_definer) for some particular purpose, generally the fulfillment of a process.
A <b>Message</b> is an historical record, intended to be sent using an <express_ref linkend="envelope:arm:Envelope_arm.Envelope"/> and in consequence, is not versioned.
<note number="1"> The same <b>Message</b> can be sent several times using different <b>Envelopes</b>. Once it has been sent
once, it cannot be further changed. However it should not remain unsent, since that is to confuse its functions and therefore its meaning with
other entities such as one of the types of document.
</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  Attribute: id 
   <express_ref linkend="message:arm:Message_arm.Message.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message.id">
Identifier of the message.
<note number="2"> The identifier should be unique, however, given the scope of message, there is no meaningful way of specifying that uniqueness within the standard. </note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  Attribute: message_type 
   <express_ref linkend="message:arm:Message_arm.Message.message_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message.message_type">
This identifies the general purpose of the message, allowing it to be differentiated from other types of message, and so be handled appropriately. The contents of this entity are defined through reference data.
<note number="3"> The following gives an example of reference data for <b>message_type</b>:
   <ul>
    <li>field input	- used to identify data acquired directly from the environment, for example, on a maintenance engineer's palm top;</li>
    <li>synchronisation	- used to indicate that the attached data has been changed in the originator's data base, and should be used to update the recipients database;</li>
    <li>action required	- used to prompt the recipient to respond to the contents of the reports;</li>
    <li>urgent action required - as above, but with a high priority.</li>
   </ul>
</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  Attribute: purpose 
   <express_ref linkend="message:arm:Message_arm.Message.purpose"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message.purpose">
Purpose provides an optional, extended description of the purpose of the message.
<note number="4">On the e-mail analogy, purpose is equivalent of the text of the message</note>
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  Attribute: contains 
   <express_ref linkend="message:arm:Message_arm.Message.contains"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message.contains">
This links the <b>Message</b> to its contents.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message  Attribute: defined_by 
   <express_ref linkend="message:arm:Message_arm.Message.defined_by"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message.defined_by">
This identifies who (<b>orgnaization</b> or <b>person-in-organisation</b>) or what defined the message, that is, identified its purpose and contents.
</ext_description>



<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message_association  
   <express_ref linkend="message:arm:Message_arm.Message_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message_association">
Message_association provides a link between two related messages. The meaning of the association depends on Message_association.role.
<example> If Message.id=2 replaces Message.id=1, then Message_association.relating points to Message.id=2 and Message_association.related points to Message.id=1 with Message_association.role="replaces".</example>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message_association  Attribute: related 
   <express_ref linkend="message:arm:Message_arm.Message_association.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message_association.related">
The related message.
<note number="1"> See example above.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message_association  Attribute: relating 
   <express_ref linkend="message:arm:Message_arm.Message_association.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Message_arm.Message_association.relating">
The relating message.
<note number="2"> See example above.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Message_arm  Entity: Message_association  Attribute: role
   <express_ref linkend="message:arm:Message_arm.Message_association.role"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Message_arm.Message_association.role">
The role of the message association.
<note number="3"> See example above.</note>
</ext_description>

</ext_descriptions>
