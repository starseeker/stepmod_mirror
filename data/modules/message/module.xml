<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.53 2004/10/20 10:36:06 robbod Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module name="message" 
name.french="Message"
part="1270" version="1" wg.number="3081" wg.number.arm="3082" wg.number.mim="3083" wg.number.supersedes="2338" wg.number.arm.supersedes="2339" wg.number.mim.supersedes="2340" checklist.internal_review="3203" checklist.project_leader="3204" checklist.convener="3205" status="TS" language="E" publication.year="2005" publication.date="2005-12-01" published="y" rcs.date="$Date: 2004/10/20 10:36:06 $" rcs.revision="$Revision: 1.53 $" development.folder="dvlp">
	<keywords>
    module, message
 </keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="plcs.projlead"/>
		<editor ref="seanbarker"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p>
     This part of ISO 10303 specifies an application module for the
     representation of message.
A message is a collection of information made at a particular time for some
particular purpose. The message module contains the meta-data that
describes the message. The structure and format of the content is out of
scope, but is intended to range from a structured report corresponding to,
say, a maintenance form, to an arbitrary collection of database abstracts,
documents and other media as might correspond to a dossier on some
unexpected problem with a product. Also out of scope is the sending of the
message, which is covered by the 
<module_ref linkend="envelope:introduction"/> application module.
	</p>
		<p>The essential part of the message is its purpose. Message records this in three ways. Firstly, it may record the intentions of the sender, for example, "The attached gives evidence of severe cracking around the engine mountings. Request urgent grounding and inspection of the fleet". Secondly, the message will be part of a business process, and may be automatically processed. For example, an input made in the field by some automatic data recorder may simply be input into a database without further ado. Thirdly, a state may be associated to the message, which will enable tracking of the message through the process. Both sender and recipient may apply a state.

   </p>
	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>identification of the message;</li>
		<li>identification of the message creator and creation date;</li>
		<li>identification of the items referenced in the message content;</li>
		<li>identification of the approver of the message;</li>
		<li>recording the state of the message with respect to a business process;</li>
		<li>application of a security classification to the message;</li>
		<li>association of messages with each other.</li>
	</inscope>
	<!-- items out of scope -->
	<outscope>
		<li>encoding formats of the information in the message;</li>
		<li>
			<p>sending the message or identifying the recipients.</p>
			<note>
       Definition of an envelope for encapsulating a message is within the scope of the
       <module_ref linkend="envelope:1_inscope">Envelope</module_ref>
       application module.
     </note>
		</li>
	</outscope>
	<normrefs>
		<normref.inc normref="ref10303-41.e3"/>
		<normref.inc normref="ref10303-43.2000"/>
		<normref.inc normref="ref10303-45.1998"/>
		<normref.inc normref="ref10303-56.-"/>
		<normref.inc module.name="envelope">
			<term.ref linkend="envelope"/>
		</normref.inc>
		<normref.inc module.name="external_class">
			<term.ref linkend="reference_data"/>
		</normref.inc>
	</normrefs>
	<definition>
		<term id="message">message</term>
		<def>a collection of information recorded at a particular date and time with the intent of sending it to a third party
   </def>
	</definition>
	<!--
 <definition/>

 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="Message">
			<description>
     Message provides the functionality needed to record messages and their associated audit trail.
     </description>
			<uof.ae entity="Content_item"/>
			<uof.ae entity="Message"/>
			<uof.ae entity="Message_association"/>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<!-- mappings due to the extension of the approval_item select -->
		<ae entity="Approval_assignment" original_module="approval">
			<aa attribute="items" assertion_to="Message">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
         approval_item *> message_approval
        message_approval = structured_message
       </refpath_extend>
			</aa>
		</ae>
		<!-- mappings due to the extension of the state_of select -->
		<ae entity="Applied_state_assignment" original_module="state_observed">
			<aa attribute="assigned_to" assertion_to="Message">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="state_of_item">
         state_observed_of_item *> message_state
         message_state = structured_message
       </refpath_extend>
			</aa>
		</ae>
		<!-- mappings due to the extension of the security_classification_item select -->
		<ae entity="Security_classification_assignment" original_module="security_classification">
			<aa attribute="items" assertion_to="Message">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
         security_classification_item *> message_security_classification
        message_security_classification = structured_message
       </refpath_extend>
			</aa>
		</ae>
		<!-- mappings due to the extension of the date_or_date_time_item select-->
		<!-- format due to table being nicked from management_resource_information-->
		<ae entity="Date_or_date_time_assignment" original_module="date_time_assignment">
			<aa attribute="items" assertion_to="Message">
				<alt_map alt_map.inc="1">
					<aimelt>PATH</aimelt>
					<refpath_extend extended_select="date_or_date_time_item">
           date_item *> message_date
           message_date = structured_message
         </refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<aimelt>PATH</aimelt>
					<refpath_extend extended_select="date_or_date_time_item">
         date_and_time_item *> message_date_time
           message_date_time = structured_message 
         </refpath_extend>
				</alt_map>
			</aa>
		</ae>
		<ae entity="Content_item">
			<aimelt>representation</aimelt>
			<source>ISO 10303-43</source>
			<refpath>
	representation
	{representation.context_of_items[1] -&gt;
	representation_context
	representation_context.context_type='message content item'}
   </refpath>
			<aa attribute="item_identifier">
				<aimelt>PATH</aimelt>
				<refpath>
	representation
	representation.items[1] -&gt;
	representation_item
	{representation_item.name='message content item identifer'}
	representation_item =&gt; descriptive_representation_item
	descriptive_representation_item.description
	</refpath>
			</aa>
			<aa attribute="item_type">
				<aimelt>PATH</aimelt>
				<refpath>
	representation
	representation.items[2] -&gt;
	representation_item
	{representation_item.name='message content item type'}
	representation_item =&gt; descriptive_representation_item
	descriptive_representation_item.description
	</refpath>
			</aa>
			<aa attribute="access_comment">
				<aimelt>PATH</aimelt>
				<refpath>
	representation
	representation.items[3] -&gt;
	representation_item
	{representation_item.name='message content access comment'}
	representation_item =&gt; descriptive_representation_item
	descriptive_representation_item.description
	</refpath>
			</aa>
		</ae>
		<ae entity="Message">
			<aimelt>structured_message</aimelt>
			<source>ISO 10303-1270</source>
			<refpath>
      structured_message &lt;= 
      product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='message' }
   </refpath>
			<aa attribute="id">
				<aimelt>PATH</aimelt>
				<refpath>
           structured_message &lt;= 
           product
	   product.id
           </refpath>
			</aa>
			<aa attribute="message_type">
				<aimelt>PATH</aimelt>
				<refpath>
           structured_message &lt;= 
           product
	   product.name
           </refpath>
			</aa>
			<aa attribute="purpose">
				<aimelt>PATH</aimelt>
				<refpath>
           structured_message &lt;= 
           product
	   product.description
           </refpath>
			</aa>
			<aa attribute="contains" assertion_to="Content_item">
				<aimelt>PATH</aimelt>
				<refpath>
	   structured_message &lt;- containing_message.items[1]
	   containing_message
	   containing_message.message_contents_group -&gt;
	   message_contents_group
	   message_contents_group &lt;-
	   message_contents_assignment.message_contents_group
	   message_contents_assignment
           message_contents_assignment.items[i] -&gt;
           representation
	   </refpath>
			</aa>

			<aa attribute="defined_by" assertion_to="message_definer_select">
				<aimelt>PATH</aimelt>
				<source>ISO 10303-1013</source>
				<refpath>
                                  structured_message
                                </refpath>
			</aa>
			<!-- where target is organization -->
			<aa attribute="defined_by" assertion_to="Organization">
				<aimelt>PATH</aimelt>
				<source>ISO 10303-1013</source>
				<refpath>
	   structured_message = message_organization
	   message_organization &lt;* organization_item
	   organization_item &lt;- applied_organization_assignment.items[1]
	   applied_organization_assignment
	   applied_organization_assignment &lt;= organization_assignment
	   organization_assignment.assigned_organization -&gt;
	   organization
	   </refpath>
			</aa>
			<!-- where target is person_in_organization-->
			<aa attribute="defined_by" assertion_to="Person_in_organization">
				<aimelt>PATH</aimelt>
				<source>ISO 10303-1013</source>
				<refpath>
	   structured_message = message_person_and_organization
	   message_person_and_organization &lt;* person_and_organization_item
	   person_and_organization_item &lt;- applied_person_and_organization_assignment.items[1]
	   applied_person_and_organization_assignment
	   &lt;= person_and_organization_assignment
	   person_and_organization_assignment.assigned_person_and_organization -&gt; 
	   person_and_organization
	   </refpath>
			</aa>
		</ae>
		<ae entity="Message_relationship">
			<source>ISO 10303-1270</source>
			<refpath>message_relationship &lt;=
   product_relationship
   </refpath>
			<aa attribute="related" assertion_to="Message">
				<aimelt>PATH</aimelt>
				<refpath>
	message_relationship &lt;=
	product_relationship
	product_relationship.related_product -&gt;
	product
	</refpath>
			</aa>
			<aa attribute="relating" assertion_to="Message">
				<aimelt>PATH</aimelt>
				<refpath>
        message_relationship &lt;=
	product_relationship
	product_relationship.related_product -&gt;
	product
	</refpath>
			</aa>
			<aa attribute="relation_type">
				<aimelt>PATH</aimelt>
				<refpath>
        message_relationship &lt;=
	product_relationship
	product_relationship.name
	</refpath>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
		</express-g>
		<shortnames>
			<shortname name="STRMSS" entity="structured_message"/>
			<shortname name="MSSRLT" entity="message_relationship"/>
			<shortname name="CNTMSS" entity="containing_message"/>
			<shortname name="MSCNAS" entity="message_contents_assignment"/>
			<shortname name="MSCNGR" entity="message_contents_group"/>
		</shortnames>
	</mim>
</module>
