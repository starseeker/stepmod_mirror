(*
   $Id: arm.exp,v 1.6 2004/12/15 17:37:36 liutkus Exp $
   ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Network functional design view - EXPRESS ARM 
(* UNDER DEVELOPMENT *)

SCHEMA Network_functional_design_view_arm;

USE FROM Network_functional_usage_view_arm;

USE FROM Model_parameter_arm;

USE FROM Requirement_assignment_arm;

	SUBTYPE_CONSTRAINT functional_unit_definition_subtypes FOR functional_unit_definition;     
		(ONEOF (functional_unit_network_definition,
		functional_unit_usage_view));
	END_SUBTYPE_CONSTRAINT; 

  TYPE bus_structural_definition_or_node = SELECT
    (functional_unit_network_node_definition,
     bus_structural_definition);
  END_TYPE; -- bus_structural_definition_or_node

TYPE nfdw_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (functional_unit);
END_TYPE; 

  ENTITY Bus_element_link;
      precedent_element  : bus_structural_definition_or_node;
      subsequent_element : bus_structural_definition_or_node;
    UNIQUE
      UR1 : precedent_element,
 subsequent_element;
    WHERE
      WR1 : precedent_element <> subsequent_element;
  END_ENTITY; -- bus_element_link

  ENTITY Bus_structural_definition;
      bus_name    : STRING; --ee_name;
      composition : SET[1:?] OF bus_element_link;
    INVERSE
      external_bus_access : SET[0:1] OF functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
    UNIQUE
      UR1 : bus_name;
    WHERE
      WR1 : consistent_bus_structural_definition(composition);
  END_ENTITY; -- bus_structural_definition

  ENTITY Equivalent_functional_unit_definition_assignment;
      equivalent_functional_unit_definitions : SET[2:?] OF functional_unit_definition;
      name                                   : STRING; --ee_name;
  END_ENTITY; -- equivalent_functional_unit_definition_assignment

  ENTITY Functional_unit;
      definition            : functional_unit_definition;
      reference_designation : STRING; --ee_name;
      composed_network      : functional_unit_network_definition;
      functional_property   : OPTIONAL SET[1:?] OF parameter_assignment_override;
    INVERSE
      access_mechanisms : SET[1:?] OF functional_unit_terminal FOR accessed_functional_unit;
    UNIQUE
      UR1 : reference_designation, composed_network;
  END_ENTITY; -- functional_unit

  ENTITY Functional_unit_network_definition
    SUBTYPE OF (Functional_unit_definition);
      usage_view : functional_unit_usage_view;
  END_ENTITY; -- functional_unit_network_definition

  ENTITY Functional_unit_network_node_definition;
      associated_functional_unit_definition : functional_unit_network_definition;
      functional_unit_network_node_name     : STRING; --ee_name;
    DERIVE
      valid_conservative_node : BOOLEAN := ((SIZEOF(QUERY(vc <* USEDIN(SELF,
 'AP210_ARM.BUS_ELEMENT_LINK.PRECEDENT_ELEMENT') | TRUE)) + SIZEOF(QUERY(vc <* USEDIN(SELF,
 'AP210_ARM.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT') | TRUE)) + SIZEOF(QUERY(vc <* USEDIN(SELF,
 'AP210_ARM.FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE') | TRUE)) + SIZEOF(external_node_access)) > 1);
    INVERSE
      external_node_access : SET[0:1] OF functional_unit_network_terminal_definition_node_assignment FOR composed_node;
    UNIQUE
      UR1 : functional_unit_network_node_name,
 associated_functional_unit_definition;
  END_ENTITY; -- functional_unit_network_node_definition

  ENTITY Functional_unit_network_terminal_definition_bus_assignment;
      connected_bus      : bus_structural_definition;
      connected_terminal : functional_unit_usage_view_terminal_definition;
  END_ENTITY; -- functional_unit_network_terminal_definition_bus_assignment

  ENTITY Functional_unit_network_terminal_definition_node_assignment;
      composed_node      : functional_unit_network_node_definition;
      connected_terminal : functional_unit_usage_view_terminal_definition;
  END_ENTITY; -- functional_unit_network_terminal_definition_node_assignment

  ENTITY Functional_unit_terminal;
      accessed_functional_unit : functional_unit;
      definition               : functional_unit_usage_view_terminal_definition;
    INVERSE
      bus_assignment  : SET[0:1] OF functional_unit_terminal_bus_assignment FOR connected_terminal;
      node_assignment : SET[0:1] OF functional_unit_terminal_node_assignment FOR connected_terminal;
  END_ENTITY; -- functional_unit_terminal

  ENTITY Functional_unit_terminal_bus_assignment;
      connected_bus      : bus_structural_definition;
      connected_terminal : functional_unit_terminal;
  END_ENTITY; -- functional_unit_terminal_bus_assignment

  ENTITY Functional_unit_terminal_node_assignment;
      composed_node      : functional_unit_network_node_definition;
      connected_terminal : functional_unit_terminal;
  END_ENTITY; -- functional_unit_terminal_node_assignment

  FUNCTION consistent_bus_structural_definition(
    input : SET OF bus_element_link
  ) : BOOLEAN;

    LOCAL
      vertex        : SET OF bus_structural_definition_or_node := [];
      edge          : INTEGER := SIZEOF(input);
      vc            : INTEGER := 0;
      vertex_degree : INTEGER := 0;
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input) BY 1;
      vertex := vertex + input[i].precedent_element;
      vertex := vertex + input[i].subsequent_element;
    END_REPEAT;
    vc := SIZEOF(vertex);
    IF (vc <> (edge + 1)) THEN
      RETURN(FALSE);
    END_IF;
    REPEAT i := 1 TO vc BY 1;
      vertex_degree := 0;
      REPEAT j := 1 TO SIZEOF(input) BY 1;
        IF input[j].precedent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
        IF input[j].subsequent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
      END_REPEAT;
      IF (vertex_degree > 2) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);
  END_FUNCTION; -- consistent_bus_structural_definition


END_SCHEMA; -- Network_functional_design_view_arm
