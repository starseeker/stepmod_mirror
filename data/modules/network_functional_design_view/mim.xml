<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:30" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="network_functional_design_view_mim schema_instance"/>
   <schema name="NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM">
      <interface kind="use" schema="MODEL_PARAMETER_MIM"/>
      <interface kind="use" schema="NETWORK_FUNCTIONAL_USAGE_VIEW_MIM"/>
      <interface kind="use" schema="PART_OCCURRENCE_MIM"/>
      <interface kind="use" schema="REQUIREMENT_ASSIGNMENT_MIM"/>
      <interface kind="use" schema="MATERIAL_PROPERTY_DEFINITION_SCHEMA">
         <interfaced.item name="property_definition_relationship"/>
      </interface>
      <interface kind="reference" schema="SUPPORT_RESOURCE_SCHEMA">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <type name="nfdv_requirement_assigned_item">
         <select extensible="YES" genericentity="YES" basedon="requirement_assigned_item" selectitems="component_functional_unit"/>
      </type>
      <entity name="bus_element_link" supertypes="product_definition product_definition_relationship">
         <unique label="ur1">
            <unique.attribute entity-ref="bus_element_link" attribute="related_product_definition"/>
            <unique.attribute entity-ref="bus_element_link" attribute="relating_product_definition"/>
         </unique>
         <where label="wr1" expression=" self \ product_definition_relationship . related_product_definition :&lt;&gt;: self \ product_definition_relationship . relating_product_definition "/>
         <where label="wr2" expression=" ( 'network_functional_design_view_mim.' + 'bus_structural_definition' in typeof ( self \ product_definition_relationship . related_product_definition ) ) or ( 'network_functional_design_view_mim.' + 'network_node_definition' in typeof ( self \ product_definition_relationship . related_product_definition ) ) "/>
         <where label="wr3" expression=" ( 'network_functional_design_view_mim.' + 'bus_structural_definition' in typeof ( self \ product_definition_relationship . relating_product_definition ) ) or ( 'network_functional_design_view_mim.' + 'network_node_definition' in typeof ( self \ product_definition_relationship . relating_product_definition ) ) "/>
         <where label="wr4" expression=" sizeof ( typeof ( self ) - typeof ( self \ product_definition || self \ product_definition_relationship || self \ bus_element_link ) ) = 0 "/>
         <where label="wr5" expression=" not exists ( self \ product_definition . name ) or ( self \ product_definition . name = '' ) "/>
         <where label="wr6" expression=" self \ product_definition_relationship . name = '' "/>
         <where label="wr7" expression=" sizeof ( usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) ) &gt;= 1 "/>
      </entity>
      <entity name="bus_structural_definition" supertypes="product_definition">
         <where label="wr1" expression=" sizeof ( query ( bce &lt;* query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.relating_product_definition' ) | pdr \ product_definition_relationship . name = 'bus composition' ) | 'network_functional_design_view_mim.' + 'bus_element_link' in typeof ( bce . related_product_definition ) ) ) &gt;= 1 "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'property_definition.definition' ) | sizeof ( query ( pdr &lt;* usedin ( pd , 'network_functional_design_view_mim.' + 'property_definition_relationship.relating_property_definition' ) | pdr \ property_definition_relationship . name = 'functional unit network terminal definition bus assignment' ) ) &lt;= 1 ) ) &lt;= 1 "/>
         <where label="wr3" expression=" consistent_bus_structural_definition ( bag_to_set ( query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.relating_product_definition' ) | 'network_functional_design_view_mim.' + 'bus_element_link' in typeof ( pdr . related_product_definition ) ) ) ) "/>
      </entity>
      <entity name="component_functional_terminal" supertypes="shape_aspect">
         <where label="wr1" expression=" 'network_functional_design_view_mim.' + 'component_functional_unit' in typeof ( self . of_shape . definition ) "/>
         <where label="wr2" expression=" sizeof ( query ( it &lt;* query ( sar &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'instantiated terminal' ) | 'network_functional_design_view_mim.' + 'functional_unit_terminal_definition' in typeof ( it . relating_shape_aspect ) ) ) = 1 "/>
         <where label="wr3" expression=" sizeof ( query ( futba &lt;* query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'property_definition_relationship.related_property_definition' ) | pdr \ property_definition_relationship . name = 'functional unit terminal bus assignment' ) | 'network_functional_design_view_mim.' + 'bus_structural_definition' in typeof ( futba . relating_property_definition . definition ) ) ) &lt;= 1 "/>
         <where label="wr4" expression=" sizeof ( query ( futna &lt;* query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'property_definition_relationship.related_property_definition' ) | pdr \ property_definition_relationship . name = 'functional unit terminal node assignment' ) | 'network_functional_design_view_mim.' + 'network_node_definition' in typeof ( futna . relating_property_definition . definition ) ) ) &lt;= 1 "/>
      </entity>
      <entity name="component_functional_unit" supertypes="product_definition">
         <where label="wr1" expression=" self . frame_of_reference . name = 'functional occurrence' "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'property_definition.definition' ) | sizeof ( query ( sa &lt;* usedin ( pd , 'network_functional_design_view_mim.' + 'shape_aspect.of_shape' ) | 'network_functional_design_view_mim.' + 'component_functional_terminal' in typeof ( sa ) ) ) &gt;= 1 ) ) &gt;= 1 "/>
         <where label="wr3" expression=" sizeof ( query ( ifu &lt;* query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) | pdr \ product_definition_relationship . name = 'instantiated functional unit' ) | 'network_functional_design_view_mim.' + 'functional_unit' in typeof ( ifu . relating_product_definition ) ) ) = 1 "/>
         <where label="wr4" expression=" sizeof ( query ( nc &lt;* query ( pdr &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) | pdr \ product_definition_relationship . name = 'network composition' ) | ( 'network_functional_design_view_mim.' + 'functional_unit' in typeof ( nc . relating_product_definition ) ) and ( nc . relating_product_definition . frame_of_reference . name = 'functional network design' ) ) ) = 1 "/>
      </entity>
      <entity name="network_node_definition" supertypes="product_definition">
         <where label="wr1" expression=" self . frame_of_reference . name = 'functional network design' "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'property_definition.definition' ) | sizeof ( query ( funtdna &lt;* query ( pdr &lt;* usedin ( pd , 'network_functional_design_view_mim.' + 'property_definition_relationship.relating_property_definition' ) | pdr \ property_definition_relationship . name = 'functional unit network terminal definition node assignment' ) | ( 'network_functional_design_view_mim.' + 'product_definition_shape' in typeof ( funtdna . related_property_definition ) ) and ( 'network_functional_design_view_mim.' + 'functional_unit_terminal_definition' in typeof ( funtdna . related_property_definition . definition ) ) ) ) &lt;= 1 ) ) &lt;= 1 "/>
         <where label="wr3" expression=" sizeof ( query ( funn &lt;* usedin ( self , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) | ( 'network_functional_design_view_mim.' + 'functional_unit' in typeof ( funn . relating_product_definition ) ) and ( funn . relating_product_definition . frame_of_reference . name = 'functional network design' ) ) ) = 1 "/>
      </entity>
      <rule name="bus_structural_definition_unique_constraint" appliesto="bus_structural_definition product_definition_formation product">
         <algorithm> local pass : boolean := true ; name_bag : bag of string := [ ] ; end_local ; repeat i := 1 to sizeof ( bus_structural_definition ) by 1 ; if exists ( bus_structural_definition [ i ] . formation . of_product . name ) then if ( bus_structural_definition [ i ] . formation . of_product . name in name_bag ) then pass := false ; escape ; else name_bag := name_bag + bus_structural_definition [ i ] \ product_definition . formation . of_product . name ; end_if ; end_if ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="functional_unit_network_node_definition_unique_constraint" appliesto="network_node_definition">
         <algorithm> local funnd : bag of network_node_definition := query ( nnd &lt;* network_node_definition | ( nnd . frame_of_reference . name = 'functional network design' ) ) ; name_bag : bag of string := [ ] ; nnd_bag : bag of network_node_definition ; pdr_bag : bag of product_definition_relationship ; pass : boolean := true ; fu_bag : bag of functional_unit ; end_local ; repeat i := 1 to sizeof ( funnd ) by 1 ; if exists ( funnd [ i ] \ product_definition . name ) then if ( not ( funnd [ i ] \ product_definition . name in name_bag ) ) then name_bag := name_bag + funnd [ i ] \ product_definition . name ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( name_bag ) by 1 ; if ( not pass ) then escape ; end_if ; fu_bag := [ ] ; nnd_bag := query ( nnd &lt;* funnd | ( nnd \ product_definition . name = name_bag [ i ] ) ) ; repeat j := 1 to sizeof ( nnd_bag ) by 1 ; if ( not pass ) then escape ; end_if ; pdr_bag := query ( pdr &lt;* usedin ( nnd_bag [ j ] , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) | ( ( 'network_functional_design_view_mim.' + 'functional_unit' in typeof ( pdr . relating_product_definition ) ) and ( pdr \ product_definition_relationship . name = 'functional unit network node' ) ) ) ; repeat k := 1 to sizeof ( pdr_bag ) by 1 ; if exists ( pdr_bag [ k ] . relating_product_definition ) then if ( pdr_bag [ k ] . relating_product_definition in fu_bag ) then pass := false ; escape ; else fu_bag := fu_bag + pdr_bag [ k ] . relating_product_definition ; end_if ; end_if ; end_repeat ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="functional_unit_network_terminal_definition_bus_assignment_constraint" appliesto="property_definition_relationship">
         <where label="wr1" expression=" sizeof ( query ( pdr &lt;* property_definition_relationship | ( pdr \ property_definition_relationship . name = 'functional unit network terminal definition bus assignment' ) and not ( 'network_functional_design_view_mim.' + 'bus_structural_definition' in typeof ( pdr . relating_property_definition . definition ) ) ) ) = 0 "/>
         <where label="wr2" expression=" sizeof ( query ( pdr &lt;* property_definition_relationship | ( pdr \ property_definition_relationship . name = 'functional unit network terminal definition bus assignment' ) and not ( ( 'network_functional_design_view_mim.' + 'product_definition_shape' in typeof ( pdr . related_property_definition . definition ) ) and ( sizeof ( query ( futd &lt;* usedin ( pdr . related_property_definition . definition , 'network_functional_design_view_mim.' + 'shape_aspect.of_shape' ) | ( 'network_functional_design_view_mim.' + 'functional_unit_terminal_definition.of_shape' in typeof ( futd ) ) ) ) &gt; 0 ) ) ) ) = 0 "/>
      </rule>
      <rule name="functional_unit_terminal_bus_assignment_constraint" appliesto="property_definition_relationship">
         <where label="wr1" expression=" sizeof ( query ( pdr &lt;* property_definition_relationship | ( pdr \ property_definition_relationship . name = 'functional unit terminal bus assignment' ) and not ( 'network_functional_design_view_mim.' + 'bus_structural_definition' in typeof ( pdr . relating_property_definition . definition ) ) ) ) = 0 "/>
      </rule>
      <rule name="functional_unit_unique_constraint" appliesto="component_functional_unit">
         <algorithm> local fu : bag of component_functional_unit := query ( cfu &lt;* component_functional_unit | ( cfu . frame_of_reference . name = 'functional occurrence' ) ) ; id_bag : bag of string := [ ] ; cfu_bag : bag of component_functional_unit ; pdr_bag : bag of product_definition_relationship ; pass : boolean := true ; fu_bag : bag of functional_unit ; end_local ; repeat i := 1 to sizeof ( fu ) by 1 ; if exists ( fu [ i ] . id ) then if ( not ( fu [ i ] . id in id_bag ) ) then id_bag := id_bag + fu [ i ] . id ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( id_bag ) by 1 ; if ( not pass ) then escape ; end_if ; fu_bag := [ ] ; cfu_bag := query ( cfu &lt;* fu | ( cfu . id = id_bag [ i ] ) ) ; repeat j := 1 to sizeof ( cfu_bag ) by 1 ; if ( not pass ) then escape ; end_if ; pdr_bag := query ( pdr &lt;* usedin ( cfu_bag [ j ] , 'network_functional_design_view_mim.' + 'product_definition_relationship.related_product_definition' ) | ( ( pdr \ product_definition_relationship . name = 'network composition' ) and ( 'network_functional_design_view_mim.' + 'functional_unit' in typeof ( pdr . relating_product_definition ) ) and ( pdr . relating_product_definition . frame_of_reference . name = 'functional network design' ) ) ) ; repeat k := 1 to sizeof ( pdr_bag ) by 1 ; if exists ( pdr_bag [ k ] . relating_product_definition ) then if ( pdr_bag [ k ] . relating_product_definition in fu_bag ) then pass := false ; escape ; else fu_bag := fu_bag + pdr_bag [ k ] . relating_product_definition ; end_if ; end_if ; end_repeat ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <function name="consistent_bus_structural_definition">
         <parameter name="input_rel">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="product_definition_relationship"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local input : set of product_definition := [ ] ; vertex : set of product_definition := [ ] ; edge : integer := sizeof ( input ) ; vc : integer := 0 ; vertex_degree : integer := 0 ; end_local ; repeat i := 1 to sizeof ( input_rel ) by 1 ; input := input + input_rel [ i ] . related_product_definition ; end_repeat ; repeat i := 1 to sizeof ( input ) by 1 ; vertex := vertex + input [ i ] \ product_definition_relationship . relating_product_definition ; vertex := vertex + input [ i ] \ product_definition_relationship . related_product_definition ; end_repeat ; vc := sizeof ( vertex ) ; if ( vc &lt;&gt; ( edge + 1 ) ) then return ( false ) ; end_if ; repeat i := 1 to vc by 1 ; vertex_degree := 0 ; repeat j := 1 to sizeof ( input ) by 1 ; if input [ j ] \ product_definition_relationship . relating_product_definition = vertex [ i ] then vertex_degree := vertex_degree + 1 ; end_if ; if input [ j ] \ product_definition_relationship . related_product_definition = vertex [ i ] then vertex_degree := vertex_degree + 1 ; end_if ; end_repeat ; if ( vertex_degree &gt; 2 ) then return ( false ) ; end_if ; end_repeat ; return ( true ) ; </algorithm>
      </function>
   </schema>
</express>
