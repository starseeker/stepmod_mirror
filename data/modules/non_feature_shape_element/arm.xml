<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" reference="ISO/TS 10303-1706">
   <application name="JSDAI" owner="LKSoft" source="non_feature_shape_element_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Non_feature_shape_element_arm">
      <interface kind="use" schema="Physical_unit_shape_with_parameters_arm"/>
      <interface kind="use" schema="Part_feature_location_arm"/>
      <type name="nfse_feature_or_non_feature_usage">
         <select basedon="feature_or_non_feature_usage" selectitems="Usage_view_level_non_feature_shape_model"/>
      </type>
      <type name="nfse_usage_concept">
         <select basedon="usage_concept" selectitems="Non_feature_shape_element"/>
      </type>
      <type name="view_shape_select">
         <select extensible="YES" genericentity="YES" selectitems="Physical_unit_shape_model"/>
      </type>
      <entity name="Edge_segment_vertex" supertypes="Shape_element">
         <derived expression="TRUE" name="product_definitional">
            <builtintype type="BOOLEAN"/>
            <redeclaration entity-ref="Shape_element"/>
         </derived>
      </entity>
      <entity name="Interface_plane" supertypes="Non_feature_shape_element">
         <where expression="(SELF\Shape_element.element_name = 'interface plane')" label="WR1"/>
      </entity>
      <entity name="Non_feature_shape_element" supertypes="Shape_element">
         <explicit name="associated_definition">
            <typename name="Part_view_definition"/>
            <redeclaration entity-ref="Shape_element"/>
         </explicit>
         <derived expression="FALSE" name="product_definitional">
            <builtintype type="BOOLEAN"/>
            <redeclaration entity-ref="Shape_element"/>
         </derived>
         <inverse attribute="associated_element" entity="Non_feature_shape_model" name="element_shape">
            <inverse.aggregate lower="0" type="SET" upper="?"/>
         </inverse>
         <inverse attribute="associated_usage" entity="Usage_concept_usage_relationship" name="associated_usage_concept">
            <inverse.aggregate lower="0" type="SET" upper="?"/>
         </inverse>
         <unique label="UR1">
            <unique.attribute attribute="SELF\Shape_element.element_name"/>
            <unique.attribute attribute="associated_definition"/>
         </unique>
         <where expression="NOT ((SIZEOF(associated_usage_concept) &gt; 0) OR (SIZEOF(element_shape) &gt; 0))" label="WR1"/>
      </entity>
      <entity name="Non_feature_shape_element_relationship" supertypes="Shape_element_relationship">
         <explicit name="relating">
            <typename name="Non_feature_shape_element"/>
            <redeclaration entity-ref="Shape_element_relationship"/>
         </explicit>
         <explicit name="related">
            <typename name="Non_feature_shape_element"/>
            <redeclaration entity-ref="Shape_element_relationship"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="related"/>
            <unique.attribute attribute="relating"/>
         </unique>
      </entity>
      <entity name="Non_feature_shape_model" supertypes="Geometric_model">
         <explicit name="associated_element">
            <typename name="Non_feature_shape_element"/>
         </explicit>
         <explicit name="model_shape" optional="YES">
            <typename name="Geometric_model"/>
         </explicit>
         <where expression="TYPEOF(SELF) &lt;&gt; TYPEOF(model_shape)" label="WR1"/>
         <where expression="NOT EXISTS(SELF\Representation.id)" label="WR2"/>
         <where expression="SIZEOF(QUERY( x &lt;* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')&#10;                           | 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF(x)))=0" label="WR3"/>
      </entity>
      <entity name="Reference_graphic_registration_mark" supertypes="Non_feature_shape_element"/>
      <entity name="Seating_plane" supertypes="Non_feature_shape_element">
         <where expression="(SELF\Shape_element.element_name = 'seating plane')" label="WR1"/>
      </entity>
      <entity abstract.supertype="YES" name="Usage_view_level_non_feature_shape_model" supertypes="Non_feature_shape_model">
         <explicit name="associated_element">
            <typename name="View_level_non_feature_shape_element"/>
            <redeclaration entity-ref="Non_feature_shape_model"/>
         </explicit>
         <explicit name="model_shape">
            <typename name="view_shape_select"/>
            <redeclaration entity-ref="Non_feature_shape_model"/>
         </explicit>
         <where expression="SELF\Geometric_model.context_of_items = SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items" label="WR1"/>
      </entity>
      <entity name="View_level_non_feature_shape_element" supertypes="Non_feature_shape_element">
         <where expression="NOT(SIZEOF(SELF\Non_feature_shape_element.element_shape) &gt; 0) OR&#10;      valid_es('NON_FEATURE_SHAPE_ELEMENT_ARM.USAGE_VIEW_LEVEL_NON_FEATURE_SHAPE_MODEL',&#10;      (SELF\Non_feature_shape_element.element_shape))" label="WR1"/>
         <where expression="NOT EXISTS(SELF\Shape_element.description)" label="WR2"/>
      </entity>
      <subtype.constraint entity="Shape_element" name="nfse_shape_element_subtypes" super.expression="ONEOF (Edge_segment_vertex, Non_feature_shape_element)"/>
      <function name="valid_es">
         <parameter name="input1">
            <builtintype type="STRING"/>
         </parameter>
         <parameter name="input2">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="Non_feature_shape_model"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>REPEAT i := 1 to HIINDEX(input2);
    IF NOT (input1 IN TYPEOF(input2[i])) THEN RETURN(FALSE);
    END_IF;
   END_REPEAT;
    RETURN(TRUE);</algorithm>
      </function>
   </schema>
</express>
