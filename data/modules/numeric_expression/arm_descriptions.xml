<?xml version="1.0"?> 
<!-- hand edited  by Ray Goult from expression module to split out numeric expression module -->
<?xml-stylesheet type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="numeric_expression" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2007/09/17 18:22:10 $" rcs.revision="$Revision: 1.30 $">
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Numeric_expression_arm
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<ext_description linkend="Numeric_expression_arm">The <b>Numeric_expression</b> module represents a simple expression. It can represent a numeric or boolean expression.
</ext_description>

<!-- 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: And_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.And_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.And_expression">An <b>And_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_boolean_expression"/>. It carries the semantics of the 'AND' operator defined in ISO 10303-11 and uses its associativity property to handle multiple arity.<note>The AND operator requires at least two Boolean expressions and evaluates to a Boolean value that is the conjunction of the two operands.</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Binary_boolean_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_boolean_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Binary_boolean_expression">A <b>Binary_boolean_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Binary_generic_expression"/>. It shall be one of a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Xor_expression"/> or an <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Equals_expression"/>. It is a binary operator of which the range is the BOOLEAN data type defined in ISO 10303-11.</ext_description>
	
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Binary_numeric_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Binary_numeric_expression">A <b>Binary_numeric_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Binary_generic_expression"/>. It shall be a subtype of either a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Minus_expression"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Div_expression"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Mod_expression"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Slash_expression"/> and a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Power_expression"/>. It is a binary operator of which the range is the BOOLEAN data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Binary_numeric_expression  Attribute: operands 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression.operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Binary_numeric_expression.operands">a list containing the two parameters of the binary operator. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Boolean_defined_function  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_defined_function"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Boolean_defined_function">A <b>Boolean_defined_function</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Defined_function"/> and <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/>. It is any application-defined operator of which the range is the BOOLEAN data type defined in ISO 10303-11. </ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Boolean_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Boolean_expression">A <b>Boolean_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Expression"/> for which the range is the BOOLEAN data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Boolean_literal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Boolean_literal">A <b>Boolean_literal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_literal"/>. It is an EXPRESS BOOLEAN literal.<note>The EXPRESS Boolean data type has as its domain the set containing the two literals TRUE and FALSE. </note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Boolean_literal  Attribute: the_value 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_literal.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Boolean_literal.the_value">
		<p>a BOOLEAN literal value.</p>
		<note> The EXPRESS Boolean data type has as its domain the set containing the two literals TRUE and FALSE. </note>
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Boolean_variable  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Boolean_variable">A <b>Boolean_variable</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Variable"/>. It is a variable that stands for a Boolean value.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_equal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_equal">A <b>Comparison_equal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/> carries the semantics of the value equal ('=') operator defined in ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>The <b>Comparison_equal</b> evaluates to TRUE if the two operands evaluate to the same value. </note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_expression">A <b>Comparison_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> and a <express_ref linkend="generic_expression:arm:Generic_expression_arm.Binary_generic_expression"/>. It shall be one of a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_equal"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_greater"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_greater_equal"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_less"/>, a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_less_equal"/>, or a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_not_equal"/>. . The <b>Comparison_expression </b> expressions carry the semantics of the different value comparison operators defined in ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_expression  Attribute: operands 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression.operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_expression.operands">a list of <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_expression"/>s that contains the expressions to be compared. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_expression  Where: WR1 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_expression.wr:WR1">the operands of the <b>Comparison_expression </b>shall be compatible in type.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_greater  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_greater"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_greater">A <b>Comparison_greater</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>. It carries the semantics of the greater than ('>') operator defined in of ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>
			<p>The <b>Comparison_greater</b> evaluates to TRUE if the first operand evaluates to a value greater than the second operand. The relevant orders are: </p>
			<ul>
				<li>mathematical ordering of the real numbers;</li>
				<li>FALSE &lt; TRUE;</li>
				<li>lexicographic order on strings.</li>
			</ul>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_greater_equal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_greater_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_greater_equal">A <b>Comparison_greater_equal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>. It carries the semantics of the greater than or equal ('>=') operator defined in of ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>
			<p>The <b>Comparison_greater_equal</b> evaluates to TRUE if the first operand evaluates to a value greater than or equal to the second operand. The relevant orders are:</p>
			<ul>
				<li>mathematical ordering of the real numbers;</li>
				<li>FALSE  &lt; TRUE;</li>
				<li>lexicographic order on strings.</li>
			</ul>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_less  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_less"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_less">A <b>Comparison_less</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>. It carries the semantics of the less than ('&lt;') operator defined in ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>
			<p>The <b>Comparison_less</b> evaluates to TRUE if the first operand evaluates to a value less than the second operand. The relevant orders are: </p>
			<ul>
				<li>mathematical ordering of the real numbers;</li>
				<li>FALSE &lt; TRUE;</li>
				<li>lexicographic order on strings.</li>
			</ul>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_less_equal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_less_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_less_equal">A <b>Comparison_less_equal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>. It carries the semantics of the EXPRESS less than or equal ('&lt;=') operator defined in ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>
			<p>The <b>Comparison_less_equal</b> evaluates to TRUE if the first operand evaluates to a value less than or equal to the second operand. The relevant  orders are: </p>
			<ul>
				<li>mathematical ordering of the real numbers;</li>
				<li>FALSE &lt; TRUE;</li>
				<li>lexicographic order on strings.</li>
			</ul>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Comparison_not_equal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_not_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Comparison_not_equal">A <b>Comparison_not_equal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Comparison_expression"/>. It carries the semantics of the value not equal ('&lt;>') operator defined in ISO 10303-11 restricted to the NUMBER, BOOLEAN and STRING EXPRESS data types. Both operands shall have the same data type.<note>
			<p>The <b>Comparison_not_equal</b> evaluates to TRUE if the first operand evaluates to a value different from the second operand. The relevant orders are: </p>
			<ul>
				<li>mathematical ordering of the real numbers;</li>
				<li>FALSE &lt; TRUE;</li>
				<li>lexicographic order on strings.</li>
			</ul>
		</note>
	</ext_description>

	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Defined_function  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Defined_function"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Defined_function">A <b>Defined_function</b> is a  strongly typed function intended to be subtyped in the information models that use the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref>.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Div_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Div_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Div_expression">A <b>Div_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression"/>. It carries the semantics of the EXPRESS 'DIV' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Div_expression</b> is an expression which evaluates to the integer division of its operands. In the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref>, all these operands shall evaluate to a number in the number data type domain. The result is an integer number. If either operand is of data type REAL, it is truncated to an INTEGER before the operation, i.e. any fractional part is lost. </p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Equals_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Equals_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Equals_expression">An <b>Equals_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_boolean_expression"/>. It carries the semantics of the ':=:' instance equal operator defined in ISO 10303-11, the domain of which is entities of data type <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_expression"/>.<note>
			<p> The entity instance equality operator accepts two compatible instance values that are <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_expression"/> and evaluates to a Boolean value. In the context of the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref> the two <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_expression"/>s instance values are compatible either if their data types are the same, or if one data type is a subtype of the other one.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Expression">An <b>Expression</b> is a type of <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_expression"/>.  It is restricted to numeric, boolean, or string  domain of values.</ext_description>
	
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Int_literal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Int_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Int_literal">An <b>Int_literal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Literal_number"/>. It is an EXPRESS INTEGER literal.<note>
			<p>An EXPRESS INTEGER literal represents an integer VALUE that is composed of one or more digits. </p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Int_literal  Attribute: the_value 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Int_literal.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Int_literal.the_value">an INTEGER literal value.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Int_numeric_variable  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Int_numeric_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Int_numeric_variable">An <b>Int_numeric_variable</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_variable"/>. It is a variable that stands for an integer value.</ext_description>

	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Literal_number  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Literal_number"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Literal_number">A <b>Literal_number</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Generic_literal"/>. It shall be a subtype of either an <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Int_literal"/> and <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Real_literal"/>. It is an EXPRESS NUMBER literal . A <b>Literal_number</b> may be either an integer literal or a real literal.<note>
			<p>The EXPRESS NUMBER data type has the numeric values as domain</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Literal_number  Attribute: the_value 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Literal_number.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Literal_number.the_value">a NUMBER literal value. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Minus_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Minus_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Minus_expression">A <b>Minus_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/>. It carries the semantics of the '-' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Minus_expression</b> is an expression which evaluates to the difference of its operands. In the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref>, all these operands shall evaluate to a number in the number data type domain.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Mod_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Mod_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Mod_expression">A <b>Mod_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression"/>. It carries the semantics of the EXPRESS 'MOD' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Mod_expression</b> is an expression which evaluates to the first argument value modulo operation of the second argument value. Its operands shall evaluate to a number in the number data type domain. The result is an integer number. If either operand is of data type REAL, it is truncated to an INTEGER before the operation, i.e. any fractional part is lost.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Mult_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Mult_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Mult_expression">A <b>Mult_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_numeric_expression"/>. It carries the semantics of the '*' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Mult_expression</b> is an expression which evaluates to the difference of its operands. In the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref>, all these operands shall evaluate to a number in the number data type domain.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Multiple_arity_boolean_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_boolean_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Multiple_arity_boolean_expression">A <b>Multiple_arity_boolean_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Multiple_arity_generic_expression"/>. It shall be one of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.And_expression"/> or an <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Or_expression"/>. It is a multiple-arity operator for which the range is the same as the EXPRESS BOOLEAN data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Multiple_arity_boolean_expression  Attribute: operands 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_boolean_expression.operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Multiple_arity_boolean_expression.operands">the occurrences of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> that represents the parameters of the m-arity  operator.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Multiple_arity_function_call  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_function_call"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Multiple_arity_function_call">A <b>Multiple_arity_function_call</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_numeric_expression"/>.  It is a multiple-arity operator on NUMBER data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Multiple_arity_numeric_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_numeric_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Multiple_arity_numeric_expression">A <b>Multiple_arity_numeric_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Multiple_arity_generic_expression"/>. It shall be a subtype of either a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Plus_expression"/>, <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Mult_expression"/> and <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_function_call"/>. A <b>Multiple_arity_numeric_expression </b>is a multiple arity operator whose range is the NUMBER data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Multiple_arity_numeric_expression  Attribute: operands 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_numeric_expression.operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Multiple_arity_numeric_expression.operands">a list containing the parameters of the multiple arity operator. The length of this list is equal to the arity of the operator. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Not_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Not_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Not_expression">A <b>Not_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Unary_boolean_expression"/>. It carries the semantics of the 'NOT' on Boolean data type operator defined in ISO 10303-11.<note>
			<p>The NOT operator requires one Boolean operand and evaluates to a Boolean value.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Not_expression  Attribute: operand 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Not_expression.operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Not_expression.operand">the <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> that represents the operand of the 'NOT' operator.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Numeric_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Numeric_expression">A <b>Numeric_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Expression"/>.  A <b>Numeric_expression </b>is an expression of which the range is the NUMBER data type defined in  8.1.1 of ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Numeric_expression  Attribute: is_int 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression.is_int"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Numeric_expression.is_int">a Boolean attribute that indicates if an expression evaluates to integer or not. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Numeric_expression  Attribute: sql_mappable 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression.sql_mappable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Numeric_expression.sql_mappable">a Boolean attribute that indicates if an expression is mappable to the SQL, defined in ISO/IEC 9075:1992, query language.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Numeric_variable  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Numeric_variable">A <b>Numeric_variable</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Variable"/>. 
	It is a variable that stands for a number value.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Numeric_variable  Where: WR1 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_variable.wr:WR1"/>

  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Numeric_variable.wr:WR1">A <b>Numeric_variable</b> can only be a real variable or an integer variable. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Or_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Or_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Or_expression">An <b>Or_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_boolean_expression"/> entity carries the semantics of the 'OR' operator defined in ISO 10303-11 and uses its associativity property to handle multiple arity. <note>The OR operator requires at least two Boolean expressions and evaluates to a Boolean value that is the inclusive disjunction of the two operands. </note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Plus_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Plus_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Plus_expression">A <b>Plus_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Multiple_arity_numeric_expression"/>. It carries the semantics of the '+' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Plus_expression</b> is an expression which evaluates to the sum of all its operands. In the <express_ref linkend="ISO13584_expressions_schema:ir_express:ISO13584_expressions_schema">ISO13584_expressions_schema</express_ref>, all these operands shall evaluate to a number in the number data type domain.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Power_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Power_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Power_expression">A <b>Power_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression"/>. It carries the semantics of the EXPRESS '**' operator, defined in ISO 10303-11, on NUMBER data type<note>
			<p>The <b>Power_expression</b> is an expression which evaluates to the first argument value modulo operation of the second argument value. Its operands shall evaluate to a number in the number data type domain. The result is an integer number. If either operand is of data type REAL, it is truncated to an INTEGER before the operation, i.e. any fractional part is lost.</p>
		</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Real_literal  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Real_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Real_literal">A <b>Real_literal</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Literal_number"/>. It is an EXPRESS REAL literal.<note>An EXPRESS REAL literal represents a real VALUE that is composed of a mantissa and an optional exponent; the mantissa shall include a decimal point. </note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Real_literal  Attribute: the_value 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Real_literal.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Real_literal.the_value">a REAL literal value.
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Real_numeric_variable  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Real_numeric_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Real_numeric_variable">A <b>Real_numeric_variable</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_variable"/>. It is a variable that stands for a real value.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Simple_boolean_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_boolean_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Simple_boolean_expression">A <b>Simple_boolean_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Simple_generic_expression"/>. It shall be one of a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_literal"/>, or a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_variable"/> and it is an unary operator for which the range is BOOLEAN, such a data type being defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Simple_numeric_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Simple_numeric_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Simple_numeric_expression">A <b>Simple_numeric_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Simple_generic_expression"/>. It shall be a subtype of either a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Literal_number"/> and <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_variable"/>. It is either a numeric literal or a numeric variable.</ext_description>

	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Slash_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Slash_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Slash_expression">A <b>Slash_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_numeric_expression"/>. It carries the semantics of the EXPRESS '/' operator, defined in ISO 10303-11, on NUMBER data type.<note>
			<p>The <b>Slash_expression</b> is an expression which evaluates to the first argument value modulo operation of the second argument value. Its operands shall evaluate to a number in the number data type domain. The result is an integer number. If either operand is of data type REAL, it is truncated to an INTEGER before the operation, i.e. any fractional part is lost.</p>
		</note>
	</ext_description>

	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Unary_boolean_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Unary_boolean_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Unary_boolean_expression">A <b>Unary_boolean_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Boolean_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Unary_generic_expression"/>. It shall be one of a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Not_expression"/>, or an <express_ref linkend="numeric_function:arm:Numeric_function_arm.Odd_function"/>. It is an unary operator for which the range is the BOOLEAN data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Unary_numeric_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Unary_numeric_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Unary_numeric_expression">A <b>Unary_numeric_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/> and <express_ref linkend="generic_expression:arm:Generic_expression_arm.Unary_generic_expression"/>.  It is an unary operator whose range is the NUMBER data type defined in ISO 10303-11.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Unary_numeric_expression  Attribute: operand 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Unary_numeric_expression.operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Unary_numeric_expression.operand">a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/> that represents the parameter of the unary operator. 
</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Xor_expression  
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Xor_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Xor_expression">A <b>Xor_expression</b> is a type of <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_boolean_expression"/>. It carries the semantics of the 'XOR' operator defined in ISO 10303-11.<note>The XOR operator requires two Boolean operands and evaluates to a Boolean value that is the exclusive disjunction of the two operands.</note>
	</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Entity: Xor_expression  Attribute: operands 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Xor_expression.operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Xor_expression.operands">the two <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_boolean_expression"/> operands of the XOR operator that shall be <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Binary_boolean_expression"/>.
</ext_description>

	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Function: Is_sql_mappable 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Is_sql_mappable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Is_sql_mappable">The <b>Is_sql_mappable</b> function checks if the acyclic graph that represents an expression only contains elements that are mappable to SQL, defined in ISO/IEC 9075:1992.
</ext_description>
	<ext_description linkend="Numeric_expression_arm.Is_sql_mappable.arg">an <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Expression"/>.</ext_description>
	<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Numeric_expression_arm  Function: Is_int_expr 
   <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Is_int_expr"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
	<ext_description linkend="Numeric_expression_arm.Is_int_expr">The <b>Is_int_expr </b>function checks if a syntactically correct expression evaluates to an integer value or not.
</ext_description>
	<ext_description linkend="Numeric_expression_arm.Is_int_expr.arg">it is a <express_ref linkend="numeric_expression:arm:Numeric_expression_arm.Numeric_expression"/>.</ext_description>

</ext_descriptions>
