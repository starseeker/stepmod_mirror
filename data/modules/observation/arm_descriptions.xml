<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="observation" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2003/01/07 10:59:51 $" rcs.revision="$Revision: 1.3 $">

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Observation_arm
   <express_ref linkend="observation:arm:Observation_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<ext_description linkend="Observation_arm">
<p>
An <b>Observation</b> is an historical record about an entity. The types of entity it may refer to are defined by a higher level module that uses <b>Observation</b>.
The observation content may consist of a description only, or may include multiple data records. The types of records are defined by a higher level module that uses <b>Observation</b>.</p>
<p>
<b>Observation</b> also enables the recording of the context, the observers, any automatic equipement generating observation data and the observation date.
An <b>Observation</b> may also be classified, authorised and associated to other observations. It may also be associated to any <express_ref linkend="work_request:arm:Work_request_arm.Work_request"/> that follows as a consequence.</p>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observation_approval 
   <express_ref linkend="observation:arm:Observation_arm.observation_approval"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observation_approval">
<b>Observation_approval</b> allows one or more approvals to be applied to the <b>Observation</b>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observation_classification_item 
   <express_ref linkend="observation:arm:Observation_arm.observation_classification_item"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observation_classification_item">
<b>Observation_classification_item</b> allows classifications to be applied to <b>Observation</b> and <b>Observation_relationship</b>.
<note>The classification of <b>Observation_relationship</b> can be used to identify structures of <b>Observations</b>, through the use of the
classification "is_composed_of". Such classifications are defined through reference data. </note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observation_contents 
   <express_ref linkend="observation:arm:Observation_arm.observation_contents"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observation_contents">
<b>Observation_contents</b> links to entities which record observation data. The set of entities that can be referred to is defined in a higher level module which uses this one.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: Observation_date_time 
   <express_ref linkend="observation:arm:Observation_arm.Observation_date_time"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_date_time">
<b>Observation_date_time</b> is used to record the date or date and time of the <b>Observation</b>.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observed_context 
   <express_ref linkend="observation:arm:Observation_arm.observed_context"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observed_context">
The <b>Observed_context</b> links to entities that define the context in which the observation is made. The entities which may be used to define the context are defined in a higher level module that uses this one.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observed_item 
   <express_ref linkend="observation:arm:Observation_arm.observed_item"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observed_item">
The <b>Observed_item</b> allows the selection of the entity about which the observation is made. The entities which may be used are defined in a higher level module that uses this one.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observing_person 
   <express_ref linkend="observation:arm:Observation_arm.observing_person"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observing_person">
<b>Observing_person</b> allows a person or person in organisation to be associated to the <b>Observation</b>.
<note>The role of the person is noted in the <express_ref linkend=
	"person_organization_assignment:arm:Person_organization_assignment_arm.Organization_or_person_in_organization_assignment.role"/>.
        The usual role will be that of "observer".</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Type: observation_recorder 
   <express_ref linkend="observation:arm:Observation_arm.observation_recorder"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.observation_recorder">
<b>Observation_recorder</b> points to the entities that can be identified as recording observational information. By default, this is an identifiable piece of equipment, represented through a 
<express_ref linkend="product_as_individual:arm:Product_as_individual_arm.Product_as_realized"/>, however the list of entities may be extended through a higher level module.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  
   <express_ref linkend="observation:arm:Observation_arm.Observation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation">
An <b>Observation</b> is an historical record of something that has occured during the life of a product or its support environment.
Its use is restricted to observations not directly represented in the data model, and should not be used where some other reporting data structure is defined.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: applies_to 
   <express_ref linkend="observation:arm:Observation_arm.Observation.applies_to"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.applies_to">
An <b>Observation</b> is always an observation about something, and that something is referenced by the <b>applies_to</b> attribute. The entities
which it may be applied to are defined using a higher level module.
<example number="1">A maintenance procedure may raise an observation on the product, the product design, the maintenence manual, the schedule, the resources (both intended and actual), the task itself, etc. </example>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: description 
   <express_ref linkend="observation:arm:Observation_arm.Observation.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.description">
The <b>description</b> provides a free text field in which to describe the <b>Observation</b>, and so allows the recording of significant information which is not otherwise allowed for.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: id 
   <express_ref linkend="observation:arm:Observation_arm.Observation.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.id">
An identifier for the <b>Observation</b>.
<note number="1">The identifier should be unique over the set of virtual, extended and real enterprises that may exchange observations. There is no useful way of formally specifying this scope.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: in_context 
   <express_ref linkend="observation:arm:Observation_arm.Observation.in_context"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.in_context">
<b>In_context</b> allows the identification of the context in which the observation is made. The entities which may be used to define the context are defined in a higher level module that uses this one.
<example number="2">A problem is found during a maintenance operation. The set of contexts can include the equipment being maintained, the end product the equipment is fitted to, the activity being undertaken, the manual that describes the activity and the resources being used.</example>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: name 
   <express_ref linkend="observation:arm:Observation_arm.Observation.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.name">
The name of the <b>Observation</b>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: observed_by 
   <express_ref linkend="observation:arm:Observation_arm.Observation.observed_by"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.observed_by">
A physical piece of equipment that recorded observation data. By default this is a piece of physical equipment, represented by <express_ref 
    linkend="product_as_individual:arm:Product_as_individual_arm.Product_as_realized"/>.
<note number="2">One use of this entity is to provide a link between health monitoring equipment and the file it produces (recorded as a <b>document</b>).</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: observed_during 
   <express_ref linkend="observation:arm:Observation_arm.Observation.observed_during"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.observed_during">
This provides a link to a defined <express_ref linkend="activity_as_realized:arm:Activity_as_realized_arm.Activity_actual"/> that was being performed when the observation was made.
<example number="3">An unexpected problem may be found during a maintenance activity, in which case the <b>Activity_actual</b> is the maintenance activity itself.</example>
<example number="4">Aircraft health monitoring data is collected during a flight. The flight profile may be recorded using the <b>Activity_actual</b>.</example>
<note number="3">Some business rules may require that an observation is always made against an <b>Activity_actual</b>, while others may not require that the activity be recorded.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation  Attribute: related_records 
   <express_ref linkend="observation:arm:Observation_arm.Observation.related_records"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation.related_records">
The <b>related_records</b> are those entities which contain information relevant to the <b>Observation</b>
<note number="4">The "Observation" entity asserts that, at the time the <b>Observation</b> was recorded, these entities and the information they contain are relevant to the <b>Observation</b>.
This creates two operational problems: firstly, what happens when the information content of the record changes, and secondly, what is the extent of the information
that the <b>observation_contents</b> applies to - just the entity pointed to, or the entity plus any other associated entities, as for example, when the entity is a product, does the <b>Observation</b>
also refer to its product structure? These issues should be addressed by business rules, and are outside the scope of this standard. </note> 
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence">
<b>Observation_consequence</b> links an observation to the consequences that follow from it, where those consequences
are in the form of a <express_ref linkend="work_request:arm:Work_request_arm.Work_request"/>.
<note>One of the uses of <b>Observation_consequence</b> is to close one of the feedback loops from the use of a product to requests for its enhancements. </note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  Attribute: id 
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence.id">
The identifier of the <b>Observation_consequence</b>.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  Attribute: infered_from 
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence.infered_from"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence.infered_from">
The <b>Observation</b> that leads to the consequence.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  Attribute: name 
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence.name">
A name for the <b>Observation_consequence</b>.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  Attribute: requests 
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence.requests"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence.requests">
The <express_ref linkend="work_request:arm:Work_request_arm.Work_request"/> that the consequence entails.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_consequence  Attribute: role 
   <express_ref linkend="observation:arm:Observation_arm.Observation_consequence.role"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_consequence.role">
The role <b>Observation_consequence</b> plays in the link between the <b>Observation</b> and the <express_ref linkend="work_request:arm:Work_request_arm.Work_request"/> it raises.
<note> The roles played by <b>Observation_consequence</b> are defined though business rules, and may be identified through reference data.</note>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_relationship  
   <express_ref linkend="observation:arm:Observation_arm.Observation_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_relationship">
<b>Observation_relationship</b> records a relationship between two observations. The nature of this relationship is identified
by the role. Where there is a structural relationship between <b>Observation</b>s, the semantics of the structure are identified by the classification of the <b>Observation_relationship</b> against reference data.
<example>The <b>Observation</b> of a persistant fault is composed of a series of <b>Observations</b> of occurances of the same fault. That is, <b>Observation_relation.related</b> points to the composite <b>Observation</b>, while
<b>Observation_relation.relating</b> points to one actual <b>Observation</b> of the occurance. The <b>role</b> of the relationship is "observed instance", while it is classified as "is composed of".
In this example, the component <b>Observations</b> will apply to <express_ref linkend="product_as_individual:arm:Product_as_individual_arm.Product_as_realized"/> and the consequence will be to rectify the individual faults,
while the composite <b>Observation</b> will apply to a <express_ref linkend="product_version:arm:Product_version_arm.Product_version"/> and the consequence will be a design change.</example>
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_relationship  Attribute: related 
   <express_ref linkend="observation:arm:Observation_arm.Observation_relationship.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_relationship.related">
The related <b>Observation</b>.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_relationship  Attribute: relating 
   <express_ref linkend="observation:arm:Observation_arm.Observation_relationship.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_relationship.relating">
The relating <b>Observation</b>.
</ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Observation_arm  Entity: Observation_relationship  Attribute: role 
   <express_ref linkend="observation:arm:Observation_arm.Observation_relationship.role"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->

<ext_description linkend="Observation_arm.Observation_relationship.role">
The role of the relationship.
</ext_description>

</ext_descriptions>
