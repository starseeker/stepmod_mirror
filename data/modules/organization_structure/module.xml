<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.14 2006/12/31 13:57:36 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- To view the module in IExplorer, open: sys/1_scope.xml -->
<module
   name="organization_structure"
   name.french=""
   part="1435"
   version="1"
   sc4.working_group="12"
   wg.number="4438"
   wg.number.arm="4439"
   wg.number.mim=""
   wg.number.supersedes="3720"
   wg.number.arm.supersedes="3721"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="WD"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2006/12/31 13:57:36 $"
   rcs.revision="$Revision: 1.14 $"
   development.folder="dvlp">
 <keywords>
    module, organization, project management
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead"/>
   <editor ref="ap233.editor"/>
 </contacts>
 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the 
     representation of information needed to manage the life cycle 
     process of developing and using a system such that qualified 
     persons and organizations can be assigned to projects.</p> 
   <p>
     This module captures information concerning organizations and 
     persons associated with those organizations along with useful 
     relationships to experience and qualifications. That information 
     is needed to manage the life cycle process of developing and 
     using a system such that qualified persons and organizations 
     can be assigned to projects.</p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
    <li>facility to assign organization type information to organization structure management data;</li>
    <li>facility to assign person an organization information to organization structure management data;</li>
    <li>facility to assign position in organization information to organization structure management data;</li>
    <li>facility to assign experience information to organization structure management data;</li>
    <li>facility to assign qualifications information to organization structure management data;</li>
    <li>facility to assign type of person to organization structure management data;</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
 </outscope>  -->
<!--
 <normrefs/>
 <definition/>
 <abbreviations/>
-->
 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->
   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/>
     <imgfile file="armexpg7.xml"/>
     <imgfile file="armexpg8.xml"/>
     <imgfile file="armexpg9.xml"/>
     <imgfile file="armexpg10.xml"/>
     <imgfile file="armexpg11.xml"/>
     <imgfile file="armexpg12.xml"/>
     <imgfile file="armexpg13.xml"/>
     <imgfile file="armexpg14.xml"/>
     <imgfile file="armexpg15.xml"/>
     <imgfile file="armexpg16.xml"/>
     <imgfile file="armexpg17.xml"/>
     <imgfile file="armexpg18.xml"/>
     <imgfile file="armexpg19.xml"/>
     <imgfile file="armexpg20.xml"/>
     <imgfile file="armexpg21.xml"/>
   </express-g>
 </arm>

 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table>
 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>
 
   <usage_guide>

	<p><b>Extensible type select lists (generic)</b></p>
	
	<p>The problem of creating extensible type lists has proven to be an extreme challenge.
	A publish and subscribe analogy is used to explain the approach used.</p>  

	<p>Schemas enable information modelling capability within a domain. The capabilities are 
	enabled by entities.  Entities use other entities directly as specified attributes or less 
	directly via extensible select types.  The associated extensible select type list can be viewed as a 
	subscription list. The list itself contains all entity names associated with entity concepts 
	that subscribe to the capability offered by the schema containing the entity that uses 
	the extensible type list as an attribute.</p>  

	<p>The complexity of the extensible select type list specification problem stems from the fact that 
	lists are relative to a sub-domain of the domain associated with the schema that defines the 
	extensible type list.</p>

	<p>This creates a list creation problem that is 3 dimensional.  The coordinate axes are:</p>
	<ul>
	<li>domain specified by all USE FROM schemas,</li> 
	<li>extensible select types defined within this domain,</li>
	<li>entities defined within a sub-domain of this domain.</li>   </ul>
	
	<p>To size this, AP233 has about 10 major domains, 1000 entities and 
	100 extensible types.  If one does not apply some organizational logic to the problem this 
	implies a yes/no cognitive decisions space containing 1,000,000 points.</p>
	
	<p>In order to penetrate this problem some logical approach that is both scalable and 
	checkable is required.  In AP233 WD1 all schemas where grouped into high level concept
	groups: program management resource information (pmri), organization structure (os),
	project breakdown (pb). schedule (ss) and work structure (ws).  As AP233 WD2 
	evolved major module restructuring occurred and the ability to group at a more 
	detail level of abstraction was enabled.  </p>

	 <p><b>Extensible type select lists - organization structure </b></p>

	 <p>The Organization_structure_arm module contains the type extend lists relative to  
	 extensible select types defined within the following modules and those that they inherit:</p>

	 <ul><li>
        <module_ref linkend="project_management_resource_information:introduction">
          Project_management_resource_information_arm</module_ref>
        (ISO 10303-1434);
	</li>
	<li>
        <module_ref linkend="organization_type:introduction">
          Organization_type_arm</module_ref>
        (ISO 10303-1240);
	</li></ul>
	
	<p>The USE FROM connectivity associated with these module are shown below in 
	Figure 1 the Project concept map.</p>
	
	   
   	<figure><title> Project Concept Map  </title>
	<img src="Project_concepts.gif"/>	
	</figure>

	
	<p>The entities defined within the extensible type lists defined within the Organization_structure_arm
	are restricted to the capability sub-domain associated with the concept of "who" as shown in the 
	"Who concepts" concept map below.</p>

   	<figure><title> Who Concept Map  </title>
	<img src="Who_concepts.gif"/>	
	</figure>
	
	<p>The entities defined within the AP233's Organization structure type extend lists are 
	obtained from the following "Who" concept modules:
	</p>

	<ul>
        <li><module_ref linkend="experience:introduction">
          Experience_arm</module_ref>
        (ISO 10303-1243);</li>
	
        <li><module_ref linkend="organization_type:introduction">
          Organization_type_arm</module_ref>
        (ISO 10303-1240);</li>
	
        <li><module_ref linkend="person_organization:introduction">
          Person_organization_arm</module_ref>
        (ISO 10303-1011);</li>
	
        <li><module_ref linkend="position_in_organization:introduction">
          Position_in_organization_arm</module_ref>
        (ISO 10303-1242);</li>
	
        <li><module_ref linkend="qualifications:introduction">
          Qualifications_arm</module_ref>
        (ISO 10303-1244);</li>
	
	<li>
        <module_ref linkend="type_of_person:introduction">
          Type_of_person_arm</module_ref>
        (ISO 10303-1245);
	</li>
	</ul>
	
	 <p>From the perspective of information cross coupling; the type extend lists 
	 identify within this module specify how all organization structure information modeling 
	 concepts defined within the schemas of the organization structure domain are coupled together 
	 via type extends within the organization structure domain.</p>
	 

</usage_guide>

</module>
