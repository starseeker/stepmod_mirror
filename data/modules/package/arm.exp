(*
   $Id: mkmodule.js,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Package - EXPRESS ARM
*)

SCHEMA Package_arm;

USE FROM Extended_geometric_tolerance_arm;

USE FROM Shape_property_assignment_arm;

USE FROM Specification_document_arm;

USE FROM Value_with_unit_extension_arm;

USE FROM Physical_unit_usage_view_arm;

USE FROM Part_feature_function_arm;

USE FROM Part_feature_location_arm;

  TYPE mounting_technology_type = ENUMERATION OF
    (surface_mount,
     through_hole);
  END_TYPE;

	SUBTYPE_CONSTRAINT part_feature_subtypes FOR Part_feature; 
		(ONEOF (Package_orientation_feature,
		Package_body));
	END_SUBTYPE_CONSTRAINT;

  TYPE predefined_lead_form = ENUMERATION OF
    (gull_wing,
     j_lead,
     reversed_j_lead,
     integral_terminal,
     undefined,
     ball,
     straight);
  END_TYPE;

  TYPE seating_plane_intersection_type = ENUMERATION OF
    (surface_intersection,
     through_intersection,
     does_not_intersect);
  END_TYPE;

  ENTITY Connection_zone_package_interface_plane_relationship;
      interface_plane          : Seating_plane;
      mating_zone              : Connection_zone_in_usage_view;
      derived_zone             : Connection_zone_in_usage_view;
      derived_zone_shape_class : STRING;
    INVERSE
      associated_package_terminal  : SET[0:1] OF package_terminal FOR seating_plane_zone;
    UNIQUE
      UR1 : interface_plane, mating_zone;
    WHERE
      WR1 : derived_zone_shape_class IN ['area','edge'];
  END_ENTITY;

  ENTITY Functional_orientation_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Primary_reference_terminal;
  END_ENTITY;

  ENTITY Guided_wave_terminal
    SUBTYPE OF (Package_terminal);
  END_ENTITY;

  ENTITY Package
    SUBTYPE OF (Part_usage_view);
      mounting_technology                        : mounting_technology_type;
      maximum_seating_plane_installation_offset  : OPTIONAL Length_data_element;
      surface_mount_lead_form                    : OPTIONAL predefined_lead_form;
      nominal_mounting_lead_pitch                : OPTIONAL Length_data_element;
      nominal_mounting_lead_span                 : OPTIONAL Length_data_element;
      maximum_body_height_above_seating_plane    : Length_data_element;
      maximum_body_height_below_seating_plane    : OPTIONAL Length_data_element;
      maximum_body_clearance_above_seating_plane : OPTIONAL Length_data_element;
      maximum_body_clearance_below_seating_plane : OPTIONAL Length_data_element;
      minimum_body_clearance_above_seating_plane : OPTIONAL Length_data_element;
      minimum_body_clearance_below_seating_plane : OPTIONAL Length_data_element;
      maximum_lead_length_below_seating_plane    : OPTIONAL Length_data_element;
      least_lead_length_below_seating_plane      : OPTIONAL Length_data_element;
    DERIVE
      maximum_package_total_vertical_extent : length_data_element := max_data_element(add_data_element(maximum_body_height_above_seating_plane,
 maximum_body_height_below_seating_plane),
 add_data_element(maximum_body_height_above_seating_plane,
 maximum_lead_length_below_seating_plane));
      cutout_required                       : BOOLEAN := (maximum_body_height_below_seating_plane\value_with_unit.value_component > 0.0);
      maximum_installed_height              : length_data_element := add_data_element(maximum_body_height_above_seating_plane,
 maximum_seating_plane_installation_offset);
    INVERSE
      body                                  : SET[0:1] OF package_body FOR associated_definition;
	  external_surface_mount_lead_form 		: SET[0:1] OF External_source_identification FOR item;            
      package_seating_plane                 : non_feature_shape_element FOR scope;
      interface_plane                       : SET[0:?] OF non_feature_shape_element FOR scope;
      package_accesses                      : SET[0:?] OF package_terminal FOR associated_definition;
      package_polarity_indication           : SET[0:1] OF Shape_element FOR containing_shape;
      package_primary_orientation_feature   : SET[0:1] OF Shape_element FOR containing_shape;
      package_secondary_orientation_feature : SET[0:1] OF Shape_element FOR containing_shape;
      package_tertiary_orientation_feature  : SET[0:1] OF Shape_element FOR containing_shape;
--      of_datum_reference_frame              : SET[0:?] OF non_feature_shape_element FOR scope;
    WHERE
      WR1  : NOT (SIZEOF(package_primary_orientation_feature) > 0) OR ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(package_primary_orientation_feature[1]));
      WR2  : NOT (SIZEOF(package_secondary_orientation_feature) > 0) OR ('PACKAGE_ARM.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(package_secondary_orientation_feature[1]));
      WR3  : NOT (SIZEOF(package_tertiary_orientation_feature) > 0) OR ('PACKAGE_ARM.TERTIARY_ORIENTATION_FEATURE' IN TYPEOF(package_tertiary_orientation_feature[1]));
      WR4  : 'PACKAGE_ARM.SEATING_PLANE' IN TYPEOF(package_seating_plane);
      WR5  : 'PACKAGE_ARM.SEATING_PLANE' IN TYPEOF(interface_plane);
      WR6  : NOT (mounting_technology = surface_mount) OR (NOT (EXISTS(maximum_lead_length_below_seating_plane) OR EXISTS(least_lead_length_below_seating_plane)));
      WR7  : NOT (EXISTS(maximum_lead_length_below_seating_plane)) OR (maximum_lead_length_below_seating_plane\value_with_unit.value_component > 0.0);
      WR8  : NOT (EXISTS(least_lead_length_below_seating_plane)) OR (least_lead_length_below_seating_plane\value_with_unit.value_component > 0.0);
      WR9  : (NOT (mounting_technology = surface_mount) AND NOT (EXISTS(surface_mount_lead_form))) OR ((mounting_technology = surface_mount) AND (EXISTS(surface_mount_lead_form)));
      WR10 : package_seating_plane\shape_element.element_name = 'package seating plane';
      WR11 : NOT (SIZEOF(interface_plane) > 0) OR (SIZEOF(QUERY(ip <* interface_plane | NOT (ip\shape_element.element_name = 'interface plane'))) = 0);
      WR12 : NOT (SIZEOF(interface_plane) > 0) OR (SIZEOF(QUERY(ip <* interface_plane | NOT (package_seating_plane <> ip))) = 0);
      WR13 : SIZEOF(QUERY(prpc <* USEDIN(SELF\product_view_definition.defined_version.of_product,
 'PACKAGE_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS') | (prpc.name = 'package'))) > 0;
--      WR14 : NOT (SIZEOF(of_datum_reference_frame) > 0) OR (SIZEOF(QUERY(odrf <* of_datum_reference_frame | NOT ('PACKAGE_ARM.DATUM_REFERENCE_FRAME' IN TYPEOF(odrf)))) = 0);
      WR14 : SIZEOF(QUERY(pa <* package_accesses | 'PACKAGE_ARM.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(pa))) = 1;
	  WR15: (EXISTS (surface_mount_lead_form)) OR ((SIZEOF(external_surface_mount_lead_form)) = 1);      
  END_ENTITY;

  ENTITY Package_body
    SUBTYPE OF (Part_feature);
      SELF\part_feature.associated_definition : Package;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_DEFINITION') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_DEFINITION') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_DEFINITION') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
  END_ENTITY;

  ENTITY Package_body_bottom_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_edge_segment_surface
    SUBTYPE OF (Package_body_surface);
      composed_surface : Package_body_edge_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Package_body_edge_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_surface
    ABSTRACT SUPERTYPE OF (ONEOF (Package_body_bottom_surface,
 Package_body_top_surface,
 Package_body_edge_segment_surface,
 Package_body_edge_surface))
    SUBTYPE OF (Part_feature);
      SELF\part_feature.associated_definition : Package_body;
  END_ENTITY;

  ENTITY Package_body_top_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_orientation_feature
    ABSTRACT SUPERTYPE OF (ONEOF(Primary_orientation_feature, Secondary_orientation_feature, Tertiary_orientation_feature))
    SUBTYPE OF (Part_feature, Datum_feature);    
           associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
  END_ENTITY;

(** attribute model_representation changed to analytical_model_assignment
*)
  ENTITY Package_terminal
    SUBTYPE OF (Part_feature);
      SELF\part_feature.associated_definition 		: Package;
      external_connection_zone                : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;
      internal_connection_zone                : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;
      seating_plane_intersection              : seating_plane_intersection_type;
      terminal_characteristic                 : OPTIONAL SET[1:?] OF characteristic;
      minimum_terminal_diametrical_extent     : OPTIONAL Length_data_element;
      maximum_terminal_diametrical_extent     : OPTIONAL Length_data_element;
      seating_plane_zone                      : OPTIONAL Connection_zone_package_interface_plane_relationship;
    DERIVE
      mates_with_substrate : BOOLEAN := (EXISTS(seating_plane_zone)) AND (associated_definition.package_seating_plane :=: seating_plane_zone.interface_plane);
    INVERSE
      SELF\part_feature.feature_shape : SET[1:?] OF usage_concept_usage_relationship FOR associated_usage;
    WHERE
      WR1 : NOT (EXISTS(seating_plane_zone)) OR (SIZEOF(QUERY(cz <* external_connection_zone | (seating_plane_zone.derived_zone = cz))) = 1);
      WR2 : NOT (EXISTS(seating_plane_zone)) OR (SIZEOF(QUERY(cz <* external_connection_zone | (seating_plane_zone.mating_zone = cz))) = 1);
      WR3 : NOT (EXISTS(seating_plane_zone)) OR ((associated_definition.package_seating_plane :=: seating_plane_zone.interface_plane) OR (associated_definition.interface_plane[1] :=: seating_plane_zone.interface_plane));
      WR4 : NOT (EXISTS(seating_plane_zone)) OR ((seating_plane_intersection = surface_intersection) OR (seating_plane_intersection = through_intersection));
      WR5 : NOT ((seating_plane_intersection = does_not_intersect) AND (EXISTS(seating_plane_zone)));
  END_ENTITY;

  ENTITY Package_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\shape_element_relationship.relating : Package_body_surface;
      SELF\shape_element_relationship.related  : Package_terminal;
  END_ENTITY;

  ENTITY Polarity_indication_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Package_terminal;
  END_ENTITY;

  ENTITY Primary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Primary_reference_terminal
    SUBTYPE OF (Package_terminal);
    WHERE
      WR1 : NOT (EXISTS(SELF\part_feature.precedent_feature));
  END_ENTITY;

  ENTITY Secondary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Tertiary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Wire_terminal
    SUBTYPE OF (Package_terminal);
      SELF\package_terminal.internal_connection_zone : SET[1:?] OF Connection_zone_in_usage_view;
      maximum_wire_terminal_length                   : Length_data_element;
      minimum_wire_terminal_length                   : Length_data_element;
  END_ENTITY;

  FUNCTION add_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

  FUNCTION max_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

END_SCHEMA;

