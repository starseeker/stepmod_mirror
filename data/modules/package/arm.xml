<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:27:09" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="package_arm schema_instance"/>
   <schema name="PACKAGE_ARM">
      <interface kind="use" schema="EXTENDED_GEOMETRIC_TOLERANCE_ARM"/>
      <interface kind="use" schema="PART_FEATURE_FUNCTION_ARM"/>
      <interface kind="use" schema="PART_FEATURE_LOCATION_ARM"/>
      <interface kind="use" schema="PHYSICAL_UNIT_USAGE_VIEW_ARM"/>
      <interface kind="use" schema="SHAPE_PROPERTY_ASSIGNMENT_ARM"/>
      <interface kind="use" schema="SPECIFICATION_DOCUMENT_ARM"/>
      <interface kind="use" schema="VALUE_WITH_UNIT_EXTENSION_ARM"/>
      <type name="mounting_technology_type">
         <enumeration items="surface_mount through_hole"/>
      </type>
      <type name="pa_material_item_select">
         <select extensible="YES" genericentity="YES" basedon="material_item_select" selectitems="package_body package_terminal"/>
      </type>
      <type name="predefined_lead_form">
         <enumeration items="gull_wing j_lead reversed_j_lead integral_terminal undefined ball straight"/>
      </type>
      <type name="seating_plane_intersection_type">
         <enumeration items="surface_intersection through_intersection does_not_intersect"/>
      </type>
      <entity name="connection_zone_package_interface_plane_relationship">
         <explicit name="interface_plane">
            <typename name="seating_plane"/>
         </explicit>
         <explicit name="mating_zone">
            <typename name="connection_zone_in_usage_view"/>
         </explicit>
         <explicit name="derived_zone">
            <typename name="connection_zone_in_usage_view"/>
         </explicit>
         <explicit name="derived_zone_shape_class">
            <builtintype type="STRING"/>
         </explicit>
         <inverse name="associated_package_terminal" entity="package_terminal" attribute="seating_plane_zone">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <unique label="ur1">
            <unique.attribute entity-ref="connection_zone_package_interface_plane_relationship" attribute="interface_plane"/>
            <unique.attribute entity-ref="connection_zone_package_interface_plane_relationship" attribute="mating_zone"/>
         </unique>
         <where label="wr1" expression=" derived_zone_shape_class in [ 'area' , 'edge' ] "/>
      </entity>
      <entity name="functional_orientation_feature" supertypes="part_feature">
         <explicit name="associated_body_vertical_extent" optional="YES">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="package_body_surface"/>
         </explicit>
         <explicit name="associated_terminal">
            <typename name="primary_reference_terminal"/>
         </explicit>
      </entity>
      <entity name="guided_wave_terminal" supertypes="package_terminal"/>
      <entity name="package" supertypes="part_usage_view">
         <explicit name="mounting_technology">
            <typename name="mounting_technology_type"/>
         </explicit>
         <explicit name="maximum_seating_plane_installation_offset" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="surface_mount_lead_form" optional="YES">
            <typename name="predefined_lead_form"/>
         </explicit>
         <explicit name="nominal_mounting_lead_pitch" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="nominal_mounting_lead_span" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_body_height_above_seating_plane">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_body_height_below_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_body_clearance_above_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_body_clearance_below_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="minimum_body_clearance_above_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="minimum_body_clearance_below_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_lead_length_below_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="least_lead_length_below_seating_plane" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <derived name="maximum_package_total_vertical_extent" expression=" max_data_element ( add_data_element ( maximum_body_height_above_seating_plane , maximum_body_height_below_seating_plane ) , add_data_element ( maximum_body_height_above_seating_plane , maximum_lead_length_below_seating_plane ) ) ">
            <typename name="length_data_element"/>
         </derived>
         <derived name="cutout_required" expression=" ( maximum_body_height_below_seating_plane \ value_with_unit . value_component &gt; 0.0 ) ">
            <builtintype type="BOOLEAN"/>
         </derived>
         <derived name="maximum_installed_height" expression=" add_data_element ( maximum_body_height_above_seating_plane , maximum_seating_plane_installation_offset ) ">
            <typename name="length_data_element"/>
         </derived>
         <inverse name="body" entity="package_body" attribute="associated_definition">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <inverse name="external_surface_mount_lead_form" entity="external_source_identification" attribute="item">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <inverse name="package_seating_plane" entity="non_feature_shape_element" attribute="scope"/>
         <inverse name="interface_plane" entity="non_feature_shape_element" attribute="scope">
            <inverse.aggregate type="SET" lower="0" upper="?"/>
         </inverse>
         <inverse name="package_accesses" entity="package_terminal" attribute="associated_definition">
            <inverse.aggregate type="SET" lower="0" upper="?"/>
         </inverse>
         <inverse name="package_polarity_indication" entity="shape_element" attribute="containing_shape">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <inverse name="package_primary_orientation_feature" entity="shape_element" attribute="containing_shape">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <inverse name="package_secondary_orientation_feature" entity="shape_element" attribute="containing_shape">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <inverse name="package_tertiary_orientation_feature" entity="shape_element" attribute="containing_shape">
            <inverse.aggregate type="SET" lower="0" upper="1"/>
         </inverse>
         <where label="wr1" expression=" not ( sizeof ( package_primary_orientation_feature ) &gt; 0 ) or ( 'package_arm.primary_orientation_feature' in typeof ( package_primary_orientation_feature [ 1 ] ) ) "/>
         <where label="wr2" expression=" not ( sizeof ( package_secondary_orientation_feature ) &gt; 0 ) or ( 'package_arm.secondary_orientation_feature' in typeof ( package_secondary_orientation_feature [ 1 ] ) ) "/>
         <where label="wr3" expression=" not ( sizeof ( package_tertiary_orientation_feature ) &gt; 0 ) or ( 'package_arm.tertiary_orientation_feature' in typeof ( package_tertiary_orientation_feature [ 1 ] ) ) "/>
         <where label="wr4" expression=" 'package_arm.seating_plane' in typeof ( package_seating_plane ) "/>
         <where label="wr5" expression=" 'package_arm.seating_plane' in typeof ( interface_plane ) "/>
         <where label="wr6" expression=" not ( mounting_technology = surface_mount ) or ( not ( exists ( maximum_lead_length_below_seating_plane ) or exists ( least_lead_length_below_seating_plane ) ) ) "/>
         <where label="wr7" expression=" not ( exists ( maximum_lead_length_below_seating_plane ) ) or ( maximum_lead_length_below_seating_plane \ value_with_unit . value_component &gt; 0.0 ) "/>
         <where label="wr8" expression=" not ( exists ( least_lead_length_below_seating_plane ) ) or ( least_lead_length_below_seating_plane \ value_with_unit . value_component &gt; 0.0 ) "/>
         <where label="wr9" expression=" ( not ( mounting_technology = surface_mount ) and not ( exists ( surface_mount_lead_form ) ) ) or ( ( mounting_technology = surface_mount ) and ( exists ( surface_mount_lead_form ) ) ) "/>
         <where label="wr10" expression=" package_seating_plane \ shape_element . element_name = 'package seating plane' "/>
         <where label="wr11" expression=" not ( sizeof ( interface_plane ) &gt; 0 ) or ( sizeof ( query ( ip &lt;* interface_plane | not ( ip \ shape_element . element_name = 'interface plane' ) ) ) = 0 ) "/>
         <where label="wr12" expression=" not ( sizeof ( interface_plane ) &gt; 0 ) or ( sizeof ( query ( ip &lt;* interface_plane | not ( package_seating_plane &lt;&gt; ip ) ) ) = 0 ) "/>
         <where label="wr13" expression=" sizeof ( query ( prpc &lt;* usedin ( self \ product_view_definition . defined_version . of_product , 'package_arm.product_category_assignment.products' ) | ( prpc . name = 'package' ) ) ) &gt; 0 "/>
         <where label="wr14" expression=" sizeof ( query ( pa &lt;* package_accesses | 'package_arm.primary_reference_terminal' in typeof ( pa ) ) ) = 1 "/>
         <where label="wr15" expression=" ( exists ( surface_mount_lead_form ) ) xor ( ( sizeof ( external_surface_mount_lead_form ) ) = 1 ) "/>
      </entity>
      <entity name="package_body" supertypes="part_feature">
         <explicit name="associated_definition">
            <typename name="package"/>
            <redeclaration entity-ref="part_feature"/>
         </explicit>
         <inverse name="body_material" entity="material_identification" attribute="items"/>
         <where label="wr1" expression=" sizeof ( query ( pf &lt;* usedin ( self , 'package_arm.package_body_surface.associated_definition' ) | ( 'package_arm.' + 'package_body_top_surface' in typeof ( pf ) ) ) ) &lt;= 1 "/>
         <where label="wr2" expression=" sizeof ( query ( pf &lt;* usedin ( self , 'package_arm.package_body_surface.associated_definition' ) | ( 'package_arm.' + 'package_body_bottom_surface' in typeof ( pf ) ) ) ) &lt;= 1 "/>
         <where label="wr3" expression=" sizeof ( query ( pf &lt;* usedin ( self , 'package_arm.package_body_surface.associated_definition' ) | ( 'package_arm.' + 'package_body_edge_surface' in typeof ( pf ) ) ) ) &lt;= 1 "/>
         <where label="wr4" expression=" 'conductivity_material_aspects.' + 'material_identification_with_conductivity_classification' in typeof ( body_material ) "/>
      </entity>
      <entity name="package_body_bottom_surface" supertypes="package_body_surface"/>
      <entity name="package_body_edge_segment_surface" supertypes="package_body_surface">
         <explicit name="composed_surface">
            <typename name="package_body_edge_surface"/>
         </explicit>
         <explicit name="start_vertex">
            <typename name="edge_segment_vertex"/>
         </explicit>
         <explicit name="end_vertex">
            <typename name="edge_segment_vertex"/>
         </explicit>
         <where label="wr1" expression=" start_vertex :&lt;&gt;: end_vertex "/>
      </entity>
      <entity name="package_body_edge_surface" supertypes="package_body_surface"/>
      <entity name="package_body_surface" abstract.supertype="YES" supertypes="part_feature" super.expression="ONEOF (package_body_bottom_surface, package_body_top_surface, package_body_edge_segment_surface, package_body_edge_surface)">
         <explicit name="associated_package_body">
            <typename name="package_body"/>
         </explicit>
      </entity>
      <entity name="package_body_top_surface" supertypes="package_body_surface"/>
      <entity name="package_orientation_feature" abstract.supertype="YES" supertypes="part_feature datum_feature" super.expression="ONEOF (primary_orientation_feature, secondary_orientation_feature, tertiary_orientation_feature)">
         <explicit name="associated_body_vertical_extent" optional="YES">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="package_body_surface"/>
         </explicit>
      </entity>
      <entity name="package_terminal" supertypes="part_feature">
         <explicit name="associated_definition">
            <typename name="package"/>
            <redeclaration entity-ref="part_feature"/>
         </explicit>
         <explicit name="external_connection_zone" optional="YES">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="connection_zone_in_usage_view"/>
         </explicit>
         <explicit name="internal_connection_zone" optional="YES">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="connection_zone_in_usage_view"/>
         </explicit>
         <explicit name="seating_plane_intersection">
            <typename name="seating_plane_intersection_type"/>
         </explicit>
         <explicit name="terminal_characteristic" optional="YES">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="characteristic"/>
         </explicit>
         <explicit name="minimum_terminal_diametrical_extent" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="maximum_terminal_diametrical_extent" optional="YES">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="seating_plane_zone" optional="YES">
            <typename name="connection_zone_package_interface_plane_relationship"/>
         </explicit>
         <derived name="mates_with_substrate" expression=" ( exists ( seating_plane_zone ) ) and ( associated_definition . package_seating_plane :=: seating_plane_zone . interface_plane ) ">
            <builtintype type="BOOLEAN"/>
         </derived>
         <derived name="terminal_core_material" expression=" query ( temp &lt;* usedin ( self , 'package_arm.material_identification.items' ) | ( sizeof ( query ( cla &lt;* usedin ( temp , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | cla . role = 'terminal core material' ) ) = 1 ) ) ">
            <aggregate type="SET" lower="0" upper="1"/>
            <typename name="material_identification"/>
         </derived>
         <derived name="terminal_surface_material" expression=" query ( temp &lt;* usedin ( self , 'package_arm.material_identification.items' ) | ( sizeof ( query ( cla &lt;* usedin ( temp , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | cla . role = 'terminal surface material' ) ) = 1 ) ) ">
            <aggregate type="SET" lower="1" upper="1"/>
            <typename name="material_identification"/>
         </derived>
         <inverse name="feature_shape" entity="usage_concept_usage_relationship" attribute="associated_usage">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
            <redeclaration entity-ref="part_feature"/>
         </inverse>
         <where label="wr1" expression=" not ( exists ( seating_plane_zone ) ) or ( sizeof ( query ( cz &lt;* external_connection_zone | ( seating_plane_zone . derived_zone = cz ) ) ) = 1 ) "/>
         <where label="wr2" expression=" not ( exists ( seating_plane_zone ) ) or ( sizeof ( query ( cz &lt;* external_connection_zone | ( seating_plane_zone . mating_zone = cz ) ) ) = 1 ) "/>
         <where label="wr3" expression=" not ( exists ( seating_plane_zone ) ) or ( ( associated_definition . package_seating_plane :=: seating_plane_zone . interface_plane ) or ( associated_definition . interface_plane [ 1 ] :=: seating_plane_zone . interface_plane ) ) "/>
         <where label="wr4" expression=" not ( exists ( seating_plane_zone ) ) or ( ( seating_plane_intersection = surface_intersection ) or ( seating_plane_intersection = through_intersection ) ) "/>
         <where label="wr5" expression=" not ( ( seating_plane_intersection = does_not_intersect ) and ( exists ( seating_plane_zone ) ) ) "/>
         <where label="wr6" expression=" sizeof ( query ( eca &lt;* external_connection_zone | not ( eca \ connection_zone . associated_definition = self \ part_feature . associated_definition ) ) ) = 0 "/>
         <where label="wr7" expression=" sizeof ( query ( ica &lt;* internal_connection_zone | not ( ica \ connection_zone . associated_definition = self \ part_feature . associated_definition ) ) ) = 0 "/>
         <where label="wr8" expression=" not ( sizeof ( terminal_core_material ) = 1 ) or 'conductivity_material_aspects.' + 'material_identification_with_conductivity_classification' in typeof ( terminal_core_material [ 1 ] ) "/>
         <where label="wr9" expression=" exists ( terminal_core_material ) "/>
         <where label="wr10" expression=" 'conductivity_material_aspects.' + 'material_identification_with_conductivity_classification' in typeof ( terminal_surface_material [ 1 ] ) "/>
      </entity>
      <entity name="package_terminal_surface_constituent_relationship" supertypes="shape_element_constituent_relationship">
         <explicit name="relating">
            <typename name="package_body_surface"/>
            <redeclaration entity-ref="shape_element_relationship"/>
         </explicit>
         <explicit name="related">
            <typename name="package_terminal"/>
            <redeclaration entity-ref="shape_element_relationship"/>
         </explicit>
      </entity>
      <entity name="polarity_indication_feature" supertypes="part_feature">
         <explicit name="associated_body_vertical_extent" optional="YES">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="package_body_surface"/>
         </explicit>
         <explicit name="associated_terminal">
            <typename name="package_terminal"/>
         </explicit>
      </entity>
      <entity name="primary_orientation_feature" supertypes="package_orientation_feature"/>
      <entity name="primary_reference_terminal" supertypes="package_terminal">
         <where label="wr1" expression=" not ( exists ( self \ part_feature . precedent_feature ) ) "/>
      </entity>
      <entity name="secondary_orientation_feature" supertypes="package_orientation_feature"/>
      <entity name="tertiary_orientation_feature" supertypes="package_orientation_feature"/>
      <entity name="wire_terminal" supertypes="package_terminal">
         <explicit name="internal_connection_zone">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="connection_zone_in_usage_view"/>
            <redeclaration entity-ref="package_terminal"/>
         </explicit>
         <explicit name="maximum_wire_terminal_length">
            <typename name="length_data_element"/>
         </explicit>
         <explicit name="minimum_wire_terminal_length">
            <typename name="length_data_element"/>
         </explicit>
      </entity>
      <subtype.constraint name="part_feature_subtypes" entity="part_feature" super.expression="ONEOF (package_orientation_feature, package_body)"/>
      <function name="add_data_element">
         <parameter name="input1">
            <typename name="length_data_element"/>
         </parameter>
         <parameter name="input2">
            <typename name="length_data_element"/>
         </parameter>
         <typename name="length_data_element"/>
         <algorithm> return ( input1 ) ; </algorithm>
      </function>
      <function name="max_data_element">
         <parameter name="input1">
            <typename name="length_data_element"/>
         </parameter>
         <parameter name="input2">
            <typename name="length_data_element"/>
         </parameter>
         <typename name="length_data_element"/>
         <algorithm> return ( input1 ) ; </algorithm>
      </function>
   </schema>
</express>
