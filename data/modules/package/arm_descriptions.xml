<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="package" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2009/04/27 21:59:53 $" rcs.revision="$Revision: 1.66 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Package_arm
   <express_ref linkend="package:arm:Package_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Package_arm">
</ext_description>

<!-- +++++++++++ TYPE mounting_technology_type +++++++++++ -->
<ext_description linkend="Package_arm.mounting_technology_type">
A <b>mounting_technology_type</b> lists the type of the mounting technology.
</ext_description>
<ext_description linkend="Package_arm.mounting_technology_type.surface_mount">
specifies that component is surface mount;
</ext_description>
<ext_description linkend="Package_arm.mounting_technology_type.through_hole">
specifies that component is through hole.
</ext_description>

<!-- +++++++++++ TYPE predefined_lead_form +++++++++++ -->
<ext_description linkend="Package_arm.predefined_lead_form">
<p>	
A <b>predefined_lead_form</b> lists the predefined classification of the lead form provided by this part of
	ISO 10303.  The form refers to the form as provided by the supplier of the component.
</p>
<note number="1">
	A externally provided classification scheme may be used to extend the lead form classification over that
	provided in this version of this part of ISO 10303.
</note>
<note number="2">
	An integral terminal form is flush with the body of the package surface.
</note>
	<example>
	A straight lead that was altered to support orientation requirements would still be classified as a straight
	lead since the component manufacturer delived the component with straight leads.
</example>	
	
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.gull_wing">
specifies that the predefined form of the lead is gull wing;
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.j_lead">
specifies that the predefined form of the lead is j lead;
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.reversed_j_lead">
specifies that the predefined form of the lead is reversed j lead;
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.integral_terminal">
<p>
specifies that the predefined form of the lead is integral terminal;
</p>
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.undefined">
specifies that the predefined form of the lead is undefined;
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.ball">
specifies that the predefined form of the lead is ball;
</ext_description>
<ext_description linkend="Package_arm.predefined_lead_form.straight">
specifies that the predefined form of the lead is straight.
</ext_description>

<!-- +++++++++++ TYPE seating_plane_intersection_type +++++++++++ -->
<ext_description linkend="Package_arm.seating_plane_intersection_type">
A <b>seating_plane_intersection_type</b> lists the types of the intersection between a feature and
	a 	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/>.
</ext_description>
<ext_description linkend="Package_arm.seating_plane_intersection_type.surface_intersection">
specifies that the surface of the feature indicated is congruent with the seating plane;
</ext_description>
<ext_description linkend="Package_arm.seating_plane_intersection_type.through_intersection">
specifies that the feature penetrates the seating plane;
</ext_description>
<ext_description linkend="Package_arm.seating_plane_intersection_type.does_not_intersect">
specifies that the feature does not intersect the seating plane.
</ext_description>

<!-- +++++++++++ Connection_zone_in_part_feature_template_definition +++++++++++ -->
<ext_description linkend="Package_arm.Connection_zone_in_part_feature_template_definition">
<p>
	A <b>Connection_zone_in_part_feature_template_definition</b> is a type of 
	<express_ref linkend="Feature_and_connection_zone:arm:Feature_and_connection_zone_arm.Connection_zone"/> 
	in which the context is a 	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature_template_definition"/>.
	A <b>Connection_zone_in_part_feature_template_definition</b> is included in a template definition to provide an explicit geometric model of the
	limited areas in the domain of a terminal that are allowed for a valid connection.  If the template definition
	contains no limitations on the connection area of the terminals associated with the template this Application Object shall
	not be provided. 	
	</p>
	<note number="1">
	In some less detailed templates, the entire point domain for features designated as terminals is considered to be available for connection and the 
	<b>Connection_zone_in_part_feature_template_definition</b> is redundant.
	</note>
	<note number="2">
	In the case where the connection area is necessary, the application shall be carefully reviewed to determine the necessity for design instances of the connection area as in most cases,
	simply using the connection area as a constraint on the allowed location of a joint is sufficient.
	</note>
	<note number="3">
	The level of detail included in a template definition may be classified by a user defined classification system which is supported by this part of
	ISO 10303 but this part of ISO 10303
	does not predefine a classification system for template detail level.
	</note>
</ext_description>

<!-- associated_definition -->
<ext_description linkend="Package_arm.Connection_zone_in_part_feature_template_definition.associated_definition">
	specifies the role of the 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature_template_definition"/>
	for the <b>Connection_zone_in_part_feature_template_definition</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Connection_zone_in_part_feature_template_definition.wr:WR1">
	The
	<express_ref linkend="Shape_property_assignment:arm:Shape_property_assignment_arm.Shape_element.element_name"/>
	shall not be populated.
</ext_description>


<!-- +++++++++++ Connection_zone_package_interface_plane_relationship +++++++++++ -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship">
	<p>
	A <b>Connection_zone_package_interface_plane_relationship</b> is a mechanism 
	to establish a derived relationship declaration between two connection areas
	using a common plane as the interface declaration.
	A <b>Connection_zone_package_interface_plane_relationship</b> 
	may be represented in a geometric context for the purpose of deriving a 2D or 3D 
	representation.
	</p>
	<example>
		A common application of this is the case where there is a three dimensional model of a terminal where that
		terminal is cut by a seating plane and it is necessary to derive a two dimensional area of that terminal for layout purposes.
		In this case, the context for both connection areas would be the same terminal definition but
		one connection area would be three dimensional and the other connection area would be two 
		dimensional.
	</example>
</ext_description>

<!-- associated_package_terminal -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship.associated_package_terminal">
	an inverse relationship that specifies that the existence of the <b>Connection_zone_package_interface_plane_relationship</b> 
	is dependent on the the existence of the 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
	that specifies the <b>Connection_zone_package_interface_plane_relationship</b> as its 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition.seating_plane_zone"/>. 
	There shall be no more than one  
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
	for a  <b>Connection_zone_package_interface_plane_relationship</b>.
</ext_description>

<!-- derived_zone_shape_class -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship.derived_zone_shape_class">
	specifies the text that describes the  <b>Connection_zone_package_interface_plane_relationship</b>.
</ext_description>

<!-- derived_zone -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship.derived_zone">
	specifies the role of the 
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	for the <b>Connection_zone_package_interface_plane_relationship</b>.
</ext_description>

<!-- interface_plane -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship.interface_plane">
	specifies the role of the 
	<express_ref linkend="Package:arm:Package_arm.interface_plane_or_seating_plane"/> 
	for the  <b>Connection_zone_package_interface_plane_relationship</b>.
</ext_description>


<!-- WR1 -->
<ext_description linkend="Package_arm.Connection_zone_package_interface_plane_relationship.wr:WR1">
<p>
	The <b>derived_zone_shape_class</b> will be 'area' or 'edge'.
</p>
</ext_description>

<!-- +++++++++++ Guided_wave_terminal +++++++++++ -->
<ext_description linkend="Package_arm.Guided_wave_terminal">
<p>
	A <b>Guided_wave_terminal</b> is a type of <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>
that is explicitly included for the purpose of providing access to the functionality of a <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part"/> using 
guided waves.

</p>
	<example>
		A Fiber-optic terminal is considered to be a <b>Guided_wave_terminal</b> in this part of ISO 10303
		because the signal is launched from the end surface of the terminal.
	</example>
</ext_description>
<!-- +++++++++++ Package +++++++++++ -->
<ext_description linkend="Package_arm.Package">
<p>
A <b>Package</b> is a type of a <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_usage_view"/>. 
A <b>Package</b> describes a subset of the physical properties of a component relevant to use of that component in an assembly.
Some items are mandatory for any instance of a Package, some items are used for assuring proper orientation and some items 
are used for analysis.
A <b>Package</b> includes no more than one package body and one or more package terminals.
A <b>Package</b> includes a seating plane when a mounting technology is specified.
</p>
<example number="1">
<p>
<module_ref linkend="package:4_entities:figure:pacax">Figures 1</module_ref> through <module_ref linkend="package:4_entities:figure:pacto">2</module_ref> illustrate types of <b>Package</b>s and parameters related to Geometric Dimensioning and Tolerancing supported by this part of ISO 10303.  ISO 10303-202 would be used in conjunction with this part of ISO 10303 to define the exchange of the presentation information (i.e., the drawings).  This part of ISO 10303 supports the direct application to application exchange of the parametric data illustrated in the drawings.
</p>
</example>
<figure id="pacax" number="1">
	<title>Axial lead</title>
	<img src="pacax.gif"/>
</figure>
<figure id="pacto" number="2">
	<title>T099</title>
	<img src="pacto.gif"/>
</figure>
<example number="2">
<p>
<module_ref linkend="package:4_entities:figure:pof7">
Figures 3</module_ref> through <module_ref linkend="package:4_entities:figure:pof1">4</module_ref> 
	illustrate parameters and features related to <b>Package</b> orientation for assembly purposes supported by this part of ISO 10303.  
	ISO 10303-202 would be used in conjunction with this part of ISO 10303 to define the exchange of the presentation information 
	(i.e., the drawings).
</p>
</example>
<figure id="pof7" number="3">
	<title>Twenty pin orientation features</title>
	<img src="pof7.gif"/>
</figure>
<figure id="pof1" number="4">
	<title>
	<express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/>  and  <express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature"/> for discrete devices</title>
	<img src="pof1.gif"/>
</figure>
<note number="1">
	The location of the <express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> as illustrated
	in <module_ref linkend="package:4_entities:figure:pof1">Figure 4</module_ref> is not constrained by electrical functionality
	unless there are visually identifiable features that indicate polarity or orientation requirements.  The top row in the Figure
	illustrates three situations where there are no visual features indicating requirements
	and the selection is arbitrary.  The polarized part in the second row in the
	Figure illustrates a case where there is a visual feature indicating a functional orientation requirement due to the nature of the part.
</note>	
<note number="2">
When used for a  <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part"/> "white box model", 
the <express_ref linkend="Packaged_part_white_box_model:arm:Packaged_part_white_box_model_arm.Part_device"/> 
is installed in the <b>Package</b> and an electrical connection is defined between each terminal on the installed  
<express_ref linkend="Packaged_part_white_box_model:arm:Packaged_part_white_box_model_arm.Part_device"/> and one or more terminals on the <b>Package</b>.
</note>
</ext_description>



<!-- package_polarity_indication -->
<ext_description linkend="Package_arm.Package.package_polarity_indication">
	specifies an inverse relationship that specifies that the existence of the  <b>Package</b> 
	is dependent on the existence of the 
	<express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature"/> 
	that specifies the <b>Package</b>
	as its 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>. 
	There shall be no more than one  
	<express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature"/>
	for a <b>Package</b> in this role.
</ext_description>

<!-- package_accesses -->
<ext_description linkend="Package_arm.Package.package_accesses">
	an inverse relationship that specifies that the existence of the <b>Package</b> is dependent on the existence of the  
	<express_ref linkend="Package:arm:Package_arm.Package_terminal"/> 
	that specifies the <b>Package</b> as its 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal.associated_definition"/>. 
	There shall be zero or more  
	<express_ref linkend="Package:arm:Package_arm.Package_terminal">Package_terminal</express_ref> 
	for a <b>Package</b>.
</ext_description>

<!-- interface_plane -->
<ext_description linkend="Package_arm.Package.interface_plane">
<p>
	specifies the role of the 
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Interface_plane"/> 
	for the <b>Package</b>.
	The  <express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Interface_plane"/> 
	simulates the interface surface of an external device. There shall exist zero or more  
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Interface_plane">Interface_planes</express_ref> 
	in the role of <b>interface_plane</b>.
</p>
<note number="3">
The <b>interface_plane</b> is typically used for connectors, but may be used for modules.
</note>
<example number="4">
A use of <b>interface_plane</b> is in the case of a fiber-optic transceiver that is mounted on a PCB but has a right angle connector to interface with a fiber.
</example>
</ext_description>

<!-- package_seating_plane -->
<ext_description linkend="Package_arm.Package.package_seating_plane">
	specifies the role of the 
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/> 
	for the <b>Package</b>.  
	The  
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/> 
	simulates the mounting surface for the terminals in the case of surface mounted parts and in the case of through-hole technology, 
	an arbitrarily established mounting surface.  Terminals are required to approach the  
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/> 
	from the top, which is the side where the values on the Z axis are positive.  
	<b>Package</b> installation is defined to be only from the top of the  
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/> 
	in order to reduce orientation errors between two-dimensional and three-dimensional models in this part of ISO 10303.
</ext_description>

<!-- body -->
<ext_description linkend="Package_arm.Package.body">
	specifies an inverse relationship that specifies that the existence of the  <b>Package</b> 
	is dependent on the existence of the 
	<express_ref linkend="Package:arm:Package_arm.Package_body"/> 
	that specifies the <b>Package</b>
	as its 
	<express_ref linkend="Package:arm:Package_arm.Package_body.associated_definition"/>. 
	There shall be no more than one  
	<express_ref linkend="Package:arm:Package_arm.Package_body"/>
	for a particular <b>Package</b>. 
</ext_description>

<!-- maximum_installed_height -->
<ext_description linkend="Package_arm.Package.maximum_installed_height">
specifies the sum of <b>maximum_body_height_above_seating_plane</b> and <b>maximum_seating_plane_installation_offset</b>.
</ext_description>

<!-- cutout_required -->
<ext_description linkend="Package_arm.Package.cutout_required">
specifies a derived value of TRUE or FALSE, depending on the existence of the optional attribute <b>maximum_body_height_below_seating_plane</b>.  If the attribute exists, the value is TRUE.  If the attribute is no present, the value is FALSE.
</ext_description>

<!-- maximum_package_total_vertical_extent -->
<ext_description linkend="Package_arm.Package.maximum_package_total_vertical_extent">
specifies maximum package vertical extent, that is a maximum of sum of <b>maximum_body_height_above_seating_plane</b> and <b>maximum_body_height_below_seating_plane</b>,
and sum of <b>maximum_body_height_above_seating_plane</b> and <b>maximum_lead_length_below_seating_plane</b>.
</ext_description>

<!-- least_lead_length_below_seating_plane -->
<ext_description linkend="Package_arm.Package.least_lead_length_below_seating_plane">
specifies the smallest lead length 
below the seating plane. The value of this attribute need not be specified.
</ext_description>

<!-- maximum_lead_length_below_seating_plane -->
<ext_description linkend="Package_arm.Package.maximum_lead_length_below_seating_plane">
specifies the maximum lead length below the seating plane. The value of this attribute need not be specified.
</ext_description>

<!-- body_clearance_below_seating_plane -->
<ext_description linkend="Package_arm.Package.body_clearance_below_seating_plane">
specifies a  <express_ref linkend="Characteristic:arm:Characteristic_arm.Length_tolerance_characteristic"/> that is the minimum length between the <b>body</b> and the  <express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/>.  The value of this attribute need not be specified.
</ext_description>

<!-- body_clearance_above_seating_plane -->
<ext_description linkend="Package_arm.Package.body_clearance_above_seating_plane">
specifies a <express_ref linkend="Characteristic:arm:Characteristic_arm.Length_tolerance_characteristic"/> that is the minimum length between the <b>body</b> and the  <express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/>.  The value of this attribute need not be specified.
</ext_description>



<!-- maximum_body_height_below_seating_plane -->
<ext_description linkend="Package_arm.Package.maximum_body_height_below_seating_plane">
specifies the maximum height of the <b>Package</b> below the seating plane. The value of this attribute need not be specified.
</ext_description>

<!-- maximum_body_height_above_seating_plane -->
<ext_description linkend="Package_arm.Package.maximum_body_height_above_seating_plane"><p>
specifies the maximum 
height of the <b>Package</b> above the seating plane.  Since there is no attribute describing the maximum terminal height above the seating plane, this attribute shall be interpreted as the furthest point away from the seating plane of either the <b>body</b> or of any <express_ref linkend="Package:arm:Package_arm.Package_terminal"/> above the seating plane.
</p>
 <example number="3">
In the case of package to be mounted in a cutout there may only be the surface mounted leads protruding above the seating  plane.
</example>
</ext_description>

<!-- nominal_mounting_lead_span -->
<ext_description linkend="Package_arm.Package.nominal_mounting_lead_span">
<p>
specifies the nominal mounting span of the <b>Package</b>. The value of this attribute need not be specified.
</p></ext_description>

<!-- nominal_mounting_lead_pitch -->
<ext_description linkend="Package_arm.Package.nominal_mounting_lead_pitch">
<p>
specifies the nominal mounting pitch of the <b>Package</b>. The value of this attribute need not be specified.
</p></ext_description>


<!-- maximum_seating_plane_installation_offset -->
<ext_description linkend="Package_arm.Package.maximum_seating_plane_installation_offset">
<p>
specifies the maximum offset of the seating plane installation of the <b>Package</b>. The value of this attribute need not be specified.
</p></ext_description>

<!-- mounting_technology -->
<ext_description linkend="Package_arm.Package.mounting_technology">
specifies a value of <express_ref linkend="Package:arm:Package_arm.mounting_technology_type"/> for the <b>Package</b>. The <express_ref linkend="Package:arm:Package_arm.mounting_technology_type">Surface_mount</express_ref> indicates that the <express_ref linkend="Package:arm:Package_arm.Package_terminal">Package_terminals</express_ref> have a  <express_ref linkend="Feature_and_connection_zone:arm:Feature_and_connection_zone_arm.Connection_zone"/> that is congruent with the <b>package_seating_plane</b> and <express_ref linkend="Package:arm:Package_arm.mounting_technology_type">through_hole</express_ref> indicates the terminals penetrate the <b>package_seating_plane</b>.
</ext_description>

<!-- orientation_feature -->
<ext_description linkend="Package_arm.Package.orientation_feature">
	specifies an inverse relationship that specifies that the existence of the  <b>Package</b> 
	is dependent on the existence of the 
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature"/> 
	that specifies the <b>Package</b>
	as its 
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature.associated_definition"/>. 
	There shall be no more than three  
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature">Package_orientation_features</express_ref>
	for a particular <b>Package</b>. 
</ext_description>

<!-- one_orientation_feature -->
<ext_description linkend="Package_arm.Package.one_orientation_feature">
	the attribute is TRUE only if the size of <b>orientation_feature</b> is one.
</ext_description>

<!-- two_orientation_features -->
<ext_description linkend="Package_arm.Package.two_orientation_features">
	the attribute is TRUE only if the size of <b>orientation_feature</b> is two.
</ext_description>

<!-- three_orientation_features -->
<ext_description linkend="Package_arm.Package.three_orientation_features">
	the attribute is TRUE only if the size of <b>orientation_feature</b> is tree.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Package.wr:WR1">
If <b>mounting_technology</b> is <express_ref linkend="package:arm:Package_arm.mounting_technology_type.surface_mount"/>, then
<b>maximum_lead_length_below_seating_plane</b> and <b>least_lead_length_below_seating_plane</b> shall not be provided.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Package_arm.Package.wr:WR2">
If <b>maximum_lead_length_below_seating_plane</b> is provided, then <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit.value_component"/>
of <b>maximum_lead_length_below_seating_plane</b> shall be greater than zero.
</ext_description>

<!-- WR3 -->
<ext_description linkend="Package_arm.Package.wr:WR3">
If <b>least_lead_length_below_seating_plane</b> is provided, then <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit.value_component"/>
of <b>least_lead_length_below_seating_plane</b> shall be greater than zero.
</ext_description>

<!-- WR4 -->
<ext_description linkend="Package_arm.Package.wr:WR4">
<p>
If <b>mounting_technology</b> is supplied, then the size of <b>package_seating_plane</b> shall be one.
</p>
</ext_description>

<!-- WR5 -->
<ext_description linkend="Package_arm.Package.wr:WR5">
The <express_ref linkend="product_identification:arm:Product_identification_arm.Product"/> refered by
<express_ref linkend="product_version:arm:Product_version_arm.Product_version.of_product"/> of
<express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition.defined_version"/> shall
be assigned by <express_ref linkend="Product_categorization:arm:Product_categorization_arm.Product_category_assignment"/>
to at least one <express_ref linkend="product_categorization:arm:Product_categorization_arm.Product_category"/> with
<express_ref linkend="product_categorization:arm:Product_categorization_arm.Product_category.name"/> 'package'.
</ext_description>

<!-- WR6 -->
<ext_description linkend="Package_arm.Package.wr:WR6">
There shall be one <express_ref linkend="package:arm:Package_arm.Primary_reference_terminal"/> in <b>package_accesses</b>.
</ext_description>

<!-- WR7 -->
<ext_description linkend="Package_arm.Package.wr:WR7">
<p>
	Each member of <b>package_accesses</b> except for one shall specify a 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/>.
</p>
	<note number="4">
	Only the 
	<express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> 
	shall not specify a <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/>.
	</note>

</ext_description>

<!-- WR8 -->
<ext_description linkend="Package_arm.Package.wr:WR8">
<p>
	Each member of <b>package_accesses</b> except for one shall specify a 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.subsequent_feature"/>.
	
</p>
 <note number="5">
  Constraints WR6, WR7 and WR8 exist to support user defined ordering because this part of ISO 10303 does not predefine an order on the terminals.
  Data that satisfies the constraints will have the properties of a list with unique entries; the list may have missing entries.
 </note>
 <example number="5">
  A BGA definition includes a set of relationships that declare that the terminal labeled "AB1" is earlier in the numbering sequence than "BC2".
  Some of the grid intersections do not have terminals so 
 </example>
 <example number="6">
  A six pin SIP definition has terminals labeled "1" through "6" inclusively. 
 </example>
</ext_description>

<!-- WR9 -->
<ext_description linkend="Package_arm.Package.wr:WR9">
<p>
	If there is one <b>orientation_feature</b> then it shall be a 
	<express_ref linkend="package:arm:Package_arm.Primary_orientation_feature"/>.
</p>
</ext_description>

<!-- WR10 -->
<ext_description linkend="Package_arm.Package.wr:WR10">
<p>
	If there are two <b>orientation_feature</b>s then one of them shall be a 
	<express_ref linkend="package:arm:Package_arm.Primary_orientation_feature"/> 
	and the other shall be a 
	<express_ref linkend="package:arm:Package_arm.Secondary_orientation_feature"/>.
	
</p>
</ext_description>

<!-- WR11 -->
<ext_description linkend="Package_arm.Package.wr:WR11">
<p>
	If there are three <b>orientation_feature</b>s then one of them shall be a 
	<express_ref linkend="package:arm:Package_arm.Primary_orientation_feature"/>, 
	one of them shall be a 
	<express_ref linkend="package:arm:Package_arm.Secondary_orientation_feature"/>, 
	and the other one shall be a 
	<express_ref linkend="package:arm:Package_arm.Tertiary_orientation_feature"/>.
</p>
</ext_description>


<!-- +++++++++++ Package_body +++++++++++ -->
<ext_description linkend="Package_arm.Package_body">
<p>
A <b>Package_body</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/> 
that is the 
encasement used in the realization of a <express_ref linkend="Package:arm:Package_arm.Package"/>.  The observer view shall be above the seating plane and 
shall be higher than the highest point of the <b>Package_body</b>.
</p></ext_description>

<!-- associated_definition -->
<ext_description linkend="Package_arm.Package_body.associated_definition">
	an attribute inherited from the
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>
	shal be redeclared as the 
	<express_ref linkend="Package:arm:Package_arm.Package"/> 
	for the <b>Package_body</b>.
</ext_description>

<!-- body_material -->
<ext_description linkend="Package_arm.Package_body.body_material">
	specifies an inverse relationship that specifies that the existence of the  <b>Package_body</b> 
	is dependent on the existence of the 
	<express_ref linkend="generic_material_aspects:arm:Generic_material_aspects_arm.Material_identification"/> 
	that specifies the <b>Package_body</b>
	as its 
	<express_ref linkend="generic_material_aspects:arm:Generic_material_aspects_arm.Material_identification.items"/>.
</ext_description>

<ext_description linkend="Package_arm.Package_body.wr:WR1">
There shall be no more than one <express_ref linkend="package:arm:Package_arm.Package_body_top_surface"/>
refering <b>Package_body</b> as <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
</ext_description>
<ext_description linkend="Package_arm.Package_body.wr:WR2">
There shall be no more than one <express_ref linkend="package:arm:Package_arm.Package_body_bottom_surface"/>
refering <b>Package_body</b> as <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
</ext_description>
<ext_description linkend="Package_arm.Package_body.wr:WR3">
There shall be no more than one <express_ref linkend="package:arm:Package_arm.Package_body_edge_surface"/>
refering <b>Package_body</b> as <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
</ext_description>
<ext_description linkend="Package_arm.Package_body.wr:WR4">
The <b>body_material</b> shall be the <express_ref linkend="conductivity_material_aspects:arm:Conductivity_material_aspects_arm.Material_identification_with_conductivity_classification"/>.
</ext_description>

<!-- +++++++++++ Package_body_bottom_surface +++++++++++ -->
<ext_description linkend="Package_arm.Package_body_bottom_surface">
<p>
	A <b>Package_body_bottom_surface</b> is a type of <express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> that is not visible from an observer located 
so as to place the component on a substrate.  The <b>Package_body_bottom_surface</b> is visible from the seating plane associated with the 	<express_ref linkend="Package:arm:Package_arm.Package"/>. 

</p>
	<note>
		In typical cases the <b>Package_body_bottom_surface</b> is the surface of the package body closest to
		 the seating plane.
	</note>

</ext_description>
<!-- +++++++++++ Package_body_edge_segment_surface +++++++++++ -->
<ext_description linkend="Package_arm.Package_body_edge_segment_surface">
<p>
	A <b>Package_body_edge_segment_surface</b> is a type of 
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface"/>.
A <b>Package_body_edge_segment_surface</b> is a segment along the edge of the body between the top and bottom
	surfaces. 
</p>
	<example>
		A BGA package may have four or five edge segments depending on whether the location of pin A2 is indicated
		by a chamfered corner.
	</example>
</ext_description>
<ext_description linkend="Package_arm.Package_body_edge_segment_surface.end_vertex">
specifies the <express_ref linkend="Extended_geometric_tolerance:arm:Extended_geometric_tolerance_arm.Edge_segment_vertex"/> for the <b>Package_body_edge_segment_surface</b>.
</ext_description>
<ext_description linkend="Package_arm.Package_body_edge_segment_surface.start_vertex">
specifies the <express_ref linkend="Extended_geometric_tolerance:arm:Extended_geometric_tolerance_arm.Edge_segment_vertex"/> for the <b>Package_body_edge_segment_surface</b>.
</ext_description>
<ext_description linkend="Package_arm.Package_body_edge_segment_surface.composed_surface">
specifies the <express_ref linkend="Package:arm:Package_arm.Package_body_edge_surface"/> for the <b>Package_body_edge_segment_surface</b>.
</ext_description>
<ext_description linkend="Package_arm.Package_body_edge_segment_surface.wr:WR1">
<p>
The <b>start_vertex</b> shall not be the <b>end_vertex</b>.
</p>
</ext_description>
<!-- +++++++++++ Package_body_edge_surface +++++++++++ -->
<ext_description linkend="Package_arm.Package_body_edge_surface">

<p>
	A <b>Package_body_edge_surface</b> is a type of 
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface"/>.
A <b>Package_body_edge_surface</b> is the surface between the top and bottom surfaces.
</p>	
	<note>
		The structural model of a package provided in this part of ISO 10303 is not intended to be exhaustive
		but to provide for coverage of typical needs in physical design, including spacing checks.  It is
		anticipated that if complex shapes are desired, then the three dimensional geometric modeling support
		provided will be used.
	</note>
	<example>
		A usual case for a structural model of a TO-99 case in two dimensions would be that the cross-section of
		maximum extent would be used to derive the edge segments, because that cross-section is where the 
		orientation tab is located.
	</example>
</ext_description>
<!-- +++++++++++ Package_body_surface +++++++++++ -->
<ext_description linkend="Package_arm.Package_body_surface">

A <b>Package_body_surface</b> is a type of <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>.
A <b>Package_body_surface</b> is one of a <express_ref linkend="Package:arm:Package_arm.Package_body_top_surface"/>, 
a <express_ref linkend="Package:arm:Package_arm.Package_body_bottom_surface"/>, 
a <express_ref linkend="Package:arm:Package_arm.Package_body_edge_segment_surface"/>, or
a <express_ref linkend="Package:arm:Package_arm.Package_body_edge_surface"/>. 
A <b>Package_body_surface</b> relationship to the seating plane may be explicitly established.
	If an explicit relationship is not established the interpretation shall be that the bottom surface
	is adjacent to or congruent with the seating plane.
</ext_description>
<ext_description linkend="Package_arm.Package_body_surface.associated_package_body">
specifies the role of the <express_ref linkend="Package:arm:Package_arm.Package_body"/> for the <b>Package_body_surface</b>.
</ext_description>
<!-- +++++++++++ Package_body_top_surface +++++++++++ -->
<ext_description linkend="Package_arm.Package_body_top_surface">

<p>
	A <b>Package_body_top_surface</b> is a type of <express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> that is visible from any observer located so as 
to place the component on a substrate.

</p>
	<note>
		In typical cases in a three dimensional model, the normal vector of the geometric item representing the 
<b>Package_body_top_surface</b>
				is parallel with the normal vector of the geometric item representing the seating plane.
	</note>
</ext_description>
<!-- +++++++++++ Package_terminal +++++++++++ -->
<ext_description linkend="Package_arm.Package_terminal">
<p>
A <b>Package_terminal</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/> and a type of <express_ref linkend="Shape_feature:arm:Shape_feature_arm.Placed_feature"/>.
When the case or package body is used as a terminal then <b>Package_terminal</b> shall be populated to specify the feature of the 
<express_ref linkend="Package:arm:Package_arm.Package_body"/> that serves that purpose.
The <b>Package_terminal</b> shall be in a sequence, with the initial member being  
<express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/>, and each member that is not a  
<express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> shall reference the previous member in the sequence 
using the <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/> 
attribute inherited from  <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>.  
The <express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition.external_connection_zone"/> shall be populated.
When the connection area inherited from the supertype of this Application Object is populated, the interpretation shall be that the inherited connection area overrides the 
<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition.external_connection_zone"/>.  
</p>
<!--Eco2-->
<note>
The <b>feature_shape</b> 
specified by the terminal or mounting feature may be the same <b>feature_shape</b> that is specified by the associated 
<express_ref linkend="Feature_and_connection_zone:arm:Feature_and_connection_zone_arm.Connection_zone"/>.  In this case the whole 
terminal is the  <express_ref linkend="Feature_and_connection_zone:arm:Feature_and_connection_zone_arm.Connection_zone"/>.
</note>
</ext_description>

<!-- feature_shape -->
<ext_description linkend="Package_arm.Package_terminal.feature_shape">
	specifies an inverse relationship that specifies that the existence of the  <b>Package_terminal</b> 
	is dependent on the existence of the 
	<express_ref linkend="Part_feature_location:arm:Part_feature_location_arm.Usage_concept_usage_relationship"/> 
	that specifies the <b>Package_terminal</b>
	as its 
	<express_ref linkend="Part_feature_location:arm:Part_feature_location_arm.Usage_concept_usage_relationship.associated_usage"/>. 
	There shall be one or more  
	<express_ref linkend="Part_feature_location:arm:Part_feature_location_arm.Usage_concept_usage_relationship">Usage_concept_usage_relationships</express_ref>
	for a particular <b>Package_terminal</b>.
</ext_description>

<!-- definition -->
<ext_description linkend="Package_arm.Package_terminal.definition">
	an attribute inherited from the 
	<express_ref linkend="Shape_feature:arm:Shape_feature_arm.Placed_feature"/> 
	shall be redeclared as  the 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
	for the <b>Package_terminal</b>. 
</ext_description>

<!-- associated_definition -->
<ext_description linkend="Package_arm.Package_terminal.associated_definition">
	an attribute inherited from the 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/> 
	shall be redeclared as  the  
	<express_ref linkend="Package:arm:Package_arm.Package"/> 
	for the <b>Package_terminal</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Package_terminal.wr:WR1">
	<p>
	On <b>Package_terminal</b>, the direct application of 
	<express_ref linkend="Feature_and_connection_zone:arm:Feature_and_connection_zone_arm.Shape_feature.surface_conditions"/> 
	shall not be provided.
	</p>
	<note>
		Surface conditions of the <b>Package_terminal</b> are inherited from the
		<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature_template_definition.surface_conditions"/> 
		attribute of the 
		<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
		that is in the role of <b>definition</b> for the <b>Package_terminal</b>.
		
	</note>
</ext_description>

<!-- ++++++++++ Package_terminal_template_definition ++++++++++ -->
<ext_description linkend="Package_arm.Package_terminal_template_definition">
A <b>Package_terminal_template_definition</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature_template_definition"/>.
The <b>seating_plane_zone</b> shall not exist if the <b>seating_plane_intersection</b> attribute is 'does not intersect'.  
The <b>seating_plane_intersection</b> attribute shall not be 'does not intersect' if the <b>seating_plane_zone</b> 
attribute exists.
	<note>
		The  
		<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/> 
		referenced indirectly by this terminal may be in the role of 
		<express_ref linkend="Package:arm:Package_arm.Package.interface_plane"/> 
		for the 
		<express_ref linkend="Package:arm:Package_arm.Package"/> 
		referenced by 
		<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
	</note>
<example>
<p>
<module_ref linkend="package:4_entities:figure:pt">Figure 5</module_ref> illustrates a cutaway view of a terminal template definition and shows 
the characteristics related to the definition.
</p>
</example>
<figure number="5" id="pt">
	<title><b>Package_terminal_template_definition characteristics</b></title>
	<img src="pt.gif" />
</figure>
</ext_description>

<!-- terminal_characteristic -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.terminal_characteristic">
	specifies the role of the 
	<express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic"/> 
	for the <b>Package_terminal_template_definition</b>. There shall exist one or more
	<express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic">characteristics</express_ref> 
	for the <b>Package_terminal_template_definition</b>.
	The value of this attribute need not be specified.
</ext_description>

<!-- external_connection_zone -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.external_connection_zone">
<p>
	specifies the 
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	on the outside surface of the <b>Package_terminal_template_definition</b>. There may be more than one  
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	for a <b>Package_terminal_template_definition</b>.  
	The value of this attribute need not be specified.  If the source system contains the data, then the 
	<b>external_connection_zone</b> shall be supplied.
</p>
</ext_description>

<!-- internal_connection_zone -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.internal_connection_zone">
	specifies the 
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	on the inside portion of the <b>Package_terminal_template_definition</b>.  There may be more than one  
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	in the role of 
	<b>internal_connection_zone</b>.  The value of this attribute need not be specified.
</ext_description>


<!-- lead_form -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.lead_form">
<p>
	specifies the 
	<express_ref linkend="Package:arm:Package_arm.predefined_lead_form"/>
	for the <b>Package_terminal_template_definition</b>. The value of this attribute need not be specified.
</p>
</ext_description>

<!-- seating_plane_intersection -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.seating_plane_intersection">
<p>
	specifies whether or not the shape of the <b>Package_terminal_template_definition</b> intersects the shape of the seating plane to within the 
	tolerance of the geometric context.  The values allowed for the attribute are 
	<express_ref linkend="Package:arm:Package_arm.seating_plane_intersection_type">'surface_intersection'</express_ref>, 
	<express_ref linkend="Package:arm:Package_arm.seating_plane_intersection_type">'through_intersection'</express_ref>, 
	<express_ref linkend="Package:arm:Package_arm.seating_plane_intersection_type">'does_not_intersect'</express_ref>.
</p>
	<note>
		Not all terminals need to intersect the seating plane.
	</note>
</ext_description>

<!-- terminal_surface_material -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.terminal_surface_material">
	specifies the role of the 
	<express_ref linkend="generic_material_aspects:arm:Generic_material_aspects_arm.Material_identification"/> for the outer surface 
	of the <b>Package_terminal_template_definition</b> surface 
	material. 
</ext_description>

<!-- terminal_characteristic -->
<ext_description linkend="Package_arm.Package_terminal.terminal_characteristic">
	specifies the <express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic"/> of the 
	<b>Package_terminal_template_definition</b>. The value of this attribute need not be specified. 
	There may be more than one  
	<express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic"/> 
	for a <b>Package_terminal_template_definition</b>.
</ext_description>

<!-- terminal_core_material -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.terminal_core_material">
	specifies the role of the 
	<express_ref linkend="generic_material_aspects:arm:Generic_material_aspects_arm.Material_identification"/> for the 
	<b>Package_terminal_template_definition</b> core material.  The value of this attribute need not be specified.
</ext_description>

<!-- terminal_diametrical_extent -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.terminal_diametrical_extent">
	specifies the  <express_ref linkend="Characteristic:arm:Characteristic_arm.Length_tolerance_characteristic"/> that 
	represents the diameter of a <b>Package_terminal_template_definition</b>. 
	The  <express_ref linkend="Characteristic:arm:Characteristic_arm.Length_tolerance_characteristic"/> is the diameter of 
	a circle that circumscribes the cross-sectional shape of the terminal.
</ext_description>

<!-- seating_plane_zone -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.seating_plane_zone">
<p>
	specifies the role of the <express_ref linkend="Package:arm:Package_arm.Connection_zone_package_interface_plane_relationship"/>
	for the <b>Package_terminal_template_definition</b>. The value of this attribute need not be specified.
</p>
</ext_description>

<!-- mates_with_substrate -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.mates_with_substrate">
	an attribute's value becomes TRUE only then <b>seating_plane_zone</b> exists and it's 
	<express_ref linkend="package:arm:Package_arm.Connection_zone_package_interface_plane_relationship.interface_plane"/>
	is <express_ref linkend="package:arm:Package_arm.Package.package_seating_plane"/> of 
	<express_ref linkend="physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
</ext_description>


<!-- external_lead_form -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.external_lead_form">
an inverse relationship that specifies that the existence of the <b>Package_terminal_template_definition</b> is dependent on the existence of the 
<express_ref linkend="External_item_identification_assignment:arm:External_item_identification_assignment_arm.External_source_identification"/> 
that specifies the <b>Package_terminal_template_definition</b> as its 
<express_ref linkend="External_item_identification_assignment:arm:External_item_identification_assignment_arm.External_source_identification.item"/>.
There shall exist not more than one
<express_ref linkend="External_item_identification_assignment:arm:External_item_identification_assignment_arm.External_source_identification"/> 
for a <b>Package_terminal_template_definition</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR1">
	If <b>seating_plane_zone</b> is provided, then it's 
	<express_ref linkend="package:arm:Package_arm.Connection_zone_package_interface_plane_relationship.derived_zone"/>
	shall be in <b>external_connection_zone</b>.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR2">
	If <b>seating_plane_zone</b> is provided, then <b>seating_plane_intersection</b> shall be 
	<express_ref linkend="package:arm:Package_arm.seating_plane_intersection_type.surface_intersection"/>
	or <express_ref linkend="package:arm:Package_arm.seating_plane_intersection_type.through_intersection"/>.
</ext_description>

<!-- WR3 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR3">
	If <b>seating_plane_zone</b> is provided, then <b>seating_plane_intersection</b> shall not be 
	<express_ref linkend="package:arm:Package_arm.seating_plane_intersection_type.does_not_intersect"/>.
</ext_description>


<!-- WR4 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR4">
	If <b>terminal_core_material</b> is provided, it shall be the
	<express_ref linkend="conductivity_material_aspects:arm:Conductivity_material_aspects_arm.Material_identification_with_conductivity_classification"/>.
</ext_description>


<!-- WR5 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR5">
	The <b>terminal_surface_material</b> shall be the
	<express_ref linkend="conductivity_material_aspects:arm:Conductivity_material_aspects_arm.Material_identification_with_conductivity_classification"/>.
</ext_description>

<!-- WR6 -->
<ext_description linkend="Package_arm.Package_terminal_template_definition.wr:WR6">
<p>
The <b>lead_form</b> or the <b>external_lead_form</b> shall be provided but not both.
</p>
</ext_description>

<!-- +++++++++++ Package_terminal_surface_constituent_relationship +++++++++++ -->
<ext_description linkend="Package_arm.Package_terminal_surface_constituent_relationship">

A <b>Package_terminal_surface_constituent_relationship</b> is a type of <express_ref linkend="Shape_composition:arm:Shape_composition_arm.Shape_element_constituent_relationship"/>.  It associates the surface of the package to a terminal via  <express_ref linkend="Shape_property_assignment:arm:Shape_property_assignment_arm.Shape_element"/>. 
</ext_description>

<!-- related -->
<ext_description linkend="Package_arm.Package_terminal_surface_constituent_relationship.related">
	an attribute inherited from the
	<express_ref linkend="Shape_property_assignment:arm:Shape_property_assignment_arm.Shape_element_relationship"/>
	shall be redeclared as the
	<express_ref linkend="Package:arm:Package_arm.Package_terminal"/> 
	for the <b>Package_terminal_surface_constituent_relationship</b>.
</ext_description>

<!-- relating -->
<ext_description linkend="Package_arm.Package_terminal_surface_constituent_relationship.relating">
	an attribute inherited from the
	<express_ref linkend="Shape_property_assignment:arm:Shape_property_assignment_arm.Shape_element_relationship"/>
	shall be redeclared as the 
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> 
	for the <b>Package_terminal_surface_constituent_relationship</b>.
</ext_description>
<!-- +++++++++++ Primary_reference_terminal +++++++++++ -->
<ext_description linkend="Package_arm.Primary_reference_terminal"><p>
A <b>Primary_reference_terminal</b> is a type of <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>.
This terminal is assigned the identifier string that is first in the 
sequence of package terminal names to be assigned to the part.  The <b>Primary_reference_terminal</b>
shall not specify a <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/> and is the first member of the sequence of  <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>.
The sort order of the names assigned to the <express_ref linkend="Package:arm:Package_arm.Package_terminal">Packaged_terminals</express_ref> is defined
by the explicit sequence established by the use of <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/> inherited from  <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>.
</p><example>
If a value of '1' is available, assigning a value of '2' to this terminal 
would be prohibited by this part of ISO 10303, due to the possibility of confusion.
</example>
<note>
The <b>Primary_reference_terminal</b> is often associated with an orientation 
feature, but it may not be the orientation feature itself.  Usually the 
<b>Primary_reference_terminal</b> and the 
 <express_ref linkend="Package:arm:Package_arm.Primary_orientation_feature"/> are
different <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature">part_features</express_ref>.
</note>
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Primary_reference_terminal.wr:WR1">
	The 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.precedent_feature"/> 
	shall not be populated.
</ext_description>

<!-- +++++++++++ Visual_orientation_feature +++++++++++ -->
 
<ext_description linkend="Package_arm.Visual_orientation_feature"><p>
A <b>Visual_orientation_feature</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>. 
A <b>Visual_orientation_feature</b> provides visible or tactile means to reduce or eliminate ambiguity of the location of a 
<express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> 
in an assembly operation. 
</p>
	<note>
	Other orientation information may be required in addition to the <b>Visual_orientation_feature</b> to totally disambiguate the correct 
	orientation.
	</note>
<example>
A mark on a component implemented with ink or a visible indentation or a formed corner may be used to indicate the fact that pin one 
of the package is in close proximity to the mark.  A vision system or a human operator will use the mark to correctly orient the 
component.
</example>
</ext_description> 

<!-- associated_terminal -->
<ext_description linkend="Package_arm.Visual_orientation_feature.associated_terminal">
	specifies the 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal"/> 
	for the <b>Visual_orientation_feature</b>.
</ext_description>

<!-- associated_body_vertical_extent -->
	<ext_description linkend="Package_arm.Visual_orientation_feature.associated_body_vertical_extent">
	specifies the 
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> 
	for the <b>Visual_orientation_feature</b>.
	There shall be one or two 
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface">package_body_surfaces</express_ref> 
	for a <b>Visual_orientation_feature</b>.  
	The value of this attribute need not be specified.
</ext_description> 

<!-- +++++++++++ Polarity_indication_feature +++++++++++ -->
<ext_description linkend="Package_arm.Polarity_indication_feature"><p>
A <b>Polarity_indication_feature</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>. A <b>Polarity_indication_feature</b> provides visible or tactile means to reduce or eliminate ambiguity of the location of a polarized part in an assembly operation.  A <b>Polarity_indication_feature</b> shall not be used to identify orientation features of non-polarized components.
</p><note>
Other orientation information may be required in addition to the <b>Polarity_indication_feature</b> to totally disambiguate the correct orientation.
</note>
</ext_description>

<ext_description linkend="Package_arm.Polarity_indication_feature.associated_terminal">
specifies the  <express_ref linkend="Package:arm:Package_arm.Package_terminal"/> for the polarity indication feature.
</ext_description>

<ext_description linkend="Package_arm.Polarity_indication_feature.associated_body_vertical_extent">
specifies a set of  <express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> for the polarity indication feature. There may be one or two <express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> for the <b>Polarity_indication_feature</b>. The value of this attribute need not be specified.
</ext_description>

<!-- associated_definition -->
<ext_description linkend="Package_arm.Polarity_indication_feature.associated_definition">
	an attribute inherited from the
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>
	shall be redeclared as the
	<express_ref linkend="Package:arm:Package_arm.Package"/>
	for the <b>Polarity_indication_feature</b>.
</ext_description>

<!-- +++++++++++ Primary_orientation_feature +++++++++++ -->
<ext_description linkend="Package_arm.Primary_orientation_feature"><p>
A <b>Primary_orientation_feature</b> is a type of 
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature"/>. 
	A <b>Primary_orientation_feature</b> is the first 
	orientation feature
	in the sequence of 
one to three orientation features
	associated with the 	<express_ref linkend="Package:arm:Package_arm.Package"/>. 
</p><note>
A <b>Primary_orientation_feature</b> is not usually also a <express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/>.
</note>
<example number="1">
<p>
<module_ref linkend="package:4_entities:figure:pof8">
Figure 6</module_ref> illustrates two of the three-dimensional geometric relationships between a component and the printed circuit board it is mounted on.  A datum system is included for reference purposes.  The Z direction is parallel to the normal of the top surface of the board.  Both the top and bottom surface normal vectors are parallel to the normal vectors of the seating plane for the components.
</p>
</example>
<figure number="6" id="pof8"><title>Three-dimensional assembly relationships</title><img src="pof8.gif"/></figure>
<example number="2">
<p>
<module_ref linkend="package:4_entities:figure:pkgxfrm">Figure 7</module_ref> illustrates two of the two-dimensional geometric relationships between a component and the printed circuit board it is mounted on.  A datum system is included for reference purposes.
</p>
</example>
<figure number="7" id="pkgxfrm"><title>Two-dimensional assembly relationships</title><img src="pkgxfrm.gif"/></figure>

<example number="3">
<p>
<module_ref linkend="package:4_entities:figure:pof7_2">Figures 8</module_ref> through 
	<module_ref linkend="package:4_entities:figure:pof3">9</module_ref> illustrates orientation details for 
	microcircuit packages. In <module_ref linkend="package:4_entities:figure:pof7_2">Figures 8</module_ref> and
	<module_ref linkend="package:4_entities:figure:pof3">9</module_ref> the bottom surface of
	the package is the 	<express_ref linkend="Package:arm:Package_arm.Primary_orientation_feature"/>.
	The assignment of Datum A indicates this fact.
</p>
</example>

	<figure number="8" id="pof7_2"><title>Twenty pin orientation features</title><img src="pof7.gif"/></figure>
<figure number="9" id="pof3"><title>Ball grid array orientation features</title><img src="pof3.gif"/></figure>
<example number="4">
<p>
<module_ref linkend="package:4_entities:figure:pof2">Figure 10</module_ref> 
	illustrates details associated with several variations of an Axial package modification and the associated  
	<express_ref linkend="Non_feature_shape_element:arm:Non_feature_shape_element_arm.Seating_plane"/>.  
	In each case	, the seating plane orientation with respect to the 
	<express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Axis_placement"/> is constant,
	 while the <express_ref linkend="Package:arm:Package_arm.Package"/> shape orientation changes 
	due to the modification.
</p>
</example>
<figure number="10" id="pof2"><title>Axial  <express_ref linkend="Package:arm:Package_arm.Package"/> modifications and resulting orientations</title><img src="pof2.gif"/></figure>
<example number="5">
<p>
<module_ref linkend="package:4_entities:figure:pof1_2">Figure 11</module_ref> illustrates <express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> assignment and also assignment of  <express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature"/>.  Knowledge of <express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature">Polarity_indication_features</express_ref> separate from the orientation feature increases the ability to determine when to use polarity indication symbols on the interconnect substrate for polarized components e.g., polarized capacitors, diodes).
</p>
</example>
<figure number="11" id="pof1_2"><title><express_ref linkend="Package:arm:Package_arm.Primary_reference_terminal"/> and  <express_ref linkend="Package:arm:Package_arm.Polarity_indication_feature"/> for discrete devices</title><img src="pof1.gif"/></figure>
<figure number="12" id="pof6"><title>Eight lead gull wing orientation features</title><img src="pof6.gif"/></figure>
<figure number="13" id="pof5"><title>Eight lead DIP orientation features</title><img src="pof5.gif"/></figure>
<figure number="14" id="pof4"><title>TO-99 orientation features</title><img src="pof4.gif"/></figure>

</ext_description>

<!-- +++++++++++ Secondary_orientation_feature +++++++++++ -->
<ext_description linkend="Package_arm.Secondary_orientation_feature">
A <b>Secondary_orientation_feature</b> is a type of 
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature"/>.
	  A <b>Secondary_orientation_feature</b>  provides anti-rotation capability for unambiguous orientation of the part in the datum reference frame.
	A <b>Secondary_orientation_feature</b> is the second 
orientation feature	in the sequence of 
one to three orientation features
	associated with the 	<express_ref linkend="Package:arm:Package_arm.Package"/>. 
	
	  If a <b>Secondary_orientation_feature</b>
	is populated for a <express_ref linkend="Package:arm:Package_arm.Package"/>
	, then a member of 
	<express_ref linkend="Package:arm:Package_arm.Primary_orientation_feature"/>
	
	shall be populated for that <express_ref linkend="Package:arm:Package_arm.Package"/>.
</ext_description>

<!-- +++++++++++ Tertiary_orientation_feature +++++++++++ -->
<ext_description linkend="Package_arm.Tertiary_orientation_feature">
A <b>Tertiary_orientation_feature</b> is a type of 
	<express_ref linkend="Package:arm:Package_arm.Package_orientation_feature"/>.
	  A <b>Tertiary_orientation_feature</b>  provides anti-rotation capability for unambiguous orientation of the part in the datum reference frame.
	A <b>Tertiary_orientation_feature</b> is the third 
	orientation feature
	in the sequence of 
one to three orientation features
	associated with the 	<express_ref linkend="Package:arm:Package_arm.Package"/>.  If a <b>Tertiary_orientation_feature</b>
	is populated for a <express_ref linkend="Package:arm:Package_arm.Package"/>, then a member of 
	<express_ref linkend="Package:arm:Package_arm.Secondary_orientation_feature"/>
	
	and a member of 
	<express_ref linkend="Package:arm:Package_arm.Primary_orientation_feature"/>
	
	shall be populated for that <express_ref linkend="Package:arm:Package_arm.Package"/>.
</ext_description>

<!-- +++++++++++ Wire_terminal +++++++++++ -->
<ext_description linkend="Package_arm.Wire_terminal">
A <b>Wire_terminal</b> is a type of <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>
	where the explicit shape of the terminal is not predefined in a library.
	A <b>Wire_terminal</b> shall reference a member of 	<express_ref linkend="Package:arm:Package_arm.Wire_terminal_template_definition"/> 
	for the 
<express_ref linkend="Package:arm:Package_arm.Package_terminal.definition"/>
inherited from <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>.
	</ext_description>
<!-- WR1 -->
<ext_description linkend="Package_arm.Wire_terminal.wr:WR1">
The size of <express_ref linkend="Package:arm:Package_arm.Package_terminal.feature_shape"/>
inherited from <express_ref linkend="Package:arm:Package_arm.Package_terminal"/>
shall be zero.
</ext_description>

<!-- +++++++++++ Wire_terminal_template_definition +++++++++++ -->
<ext_description linkend="Package_arm.Wire_terminal_template_definition">
	A <b>Wire_terminal_template_definition</b> is a type of a 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
	which 
	<express_ref linkend="Package:arm:Package_arm.Package_terminal.feature_shape"/> 
	is inherently flexible and ready for installation to a 
	<express_ref linkend="Assembly_module_design:arm:Assembly_module_design_arm.Layered_assembly_module_design_view"/>
	without prior formal preparation by shape modification. The shape of the <b>Wire_terminal_template_definition</b> is incompletely 
	defined in the library.
</ext_description>

<!-- wire_terminal_length -->
<ext_description linkend="Package_arm.Wire_terminal_template_definition.wire_terminal_length">
	specifies the 
	<express_ref linkend="Characteristic:arm:Characteristic_arm.Length_tolerance_characteristic"/> 
	for the length of the <b>Wire_terminal_template_definition</b>. 
</ext_description>

<!-- internal_connection_zone -->
<ext_description linkend="Package_arm.Wire_terminal_template_definition.internal_connection_zone">
	an attribute inherited from the
	<express_ref linkend="Package:arm:Package_arm.Package_terminal_template_definition"/> 
	shall be redeclared as the 
	<express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	for the <b>Wire_terminal_template_definition</b>.  
	There shall be one or more  <express_ref linkend="Package:arm:Package_arm.Connection_zone_in_part_feature_template_definition"/> 
	for the <b>Wire_terminal_template_definition</b>. 
	The <b>internal_connection_zone</b> is mandatory because it locates the end of the wire that is the attachment area on the package body.
</ext_description>

<!-- +++++++++++ Package_orientation_feature +++++++++++ -->
<ext_description linkend="Package_arm.Package_orientation_feature">
A <b>Package_orientation_feature</b> is a type of 
<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>. This
	permits the explicit creation of reference frames in order to support unambiguous orientation independent
	of differences between model coordinate systems because the datum reference frames are based on model
	geometry and not arbitrary coordinate systems.
	This supports easier exchange and conversion of model libraries because the mapping is not dependent on discovery of
	coordinate system orientation differences.
	A <b>Package_orientation_feature</b> participates in providing for the unambiguous orientation of a part in its next assembly.
A <b>Package_orientation_feature</b> is either a
<express_ref linkend="Package:arm:Package_arm.Primary_orientation_feature"/>
or a
<express_ref linkend="Package:arm:Package_arm.Secondary_orientation_feature"/>
or a
<express_ref linkend="Package:arm:Package_arm.Tertiary_orientation_feature"/>.
</ext_description>

<ext_description linkend="Package_arm.Package_orientation_feature.associated_body_vertical_extent">
	specifies the role of 
	the <express_ref linkend="Package:arm:Package_arm.Package_body_surface"/> 
	for the <b>Package_orientation_feature</b>. There shall exist one or two
	<express_ref linkend="Package:arm:Package_arm.Package_body_surface">Package_body_surfaces</express_ref>
	for a <b>Package_orientation_feature</b>. The value of this attribute need not be specified. 
</ext_description>

<!-- associated_definition -->
<ext_description linkend="Package_arm.Package_orientation_feature.associated_definition">
	an attribute inherited from the 
	<express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/>
	shall be redeclared as the 
	<express_ref linkend="Package:arm:Package_arm.Package"/>
	for the <b>Package_orientation_feature</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Package_arm.Package_orientation_feature.wr:WR1">
	<p>
	 A <b>Package_orientation_feature</b> shall define a 
	 <express_ref linkend="Geometric_tolerance:arm:Geometric_tolerance_arm.Datum"/>.
	</p>
</ext_description>

<!-- +++++++++++ add_data_element +++++++++++ -->
<ext_description linkend="Package_arm.add_data_element">
The <b>add_data_element</b> functions returns the <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>
that is the sum of <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element">Length_data_elements</express_ref>
specified by <b>input1</b> and <b>input2</b>.
</ext_description>
<ext_description linkend="Package_arm.add_data_element.input1">
the first specified <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>.
</ext_description>
<ext_description linkend="Package_arm.add_data_element.input2">
the second specified <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>.
</ext_description>
<!-- +++++++++++ max_data_element +++++++++++ -->
<ext_description linkend="Package_arm.max_data_element">
The <b>max_data_element</b> functions returns the <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>
that is the maximum of <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element">Length_data_elements</express_ref>
specified by <b>input1</b> and <b>input2</b>.
</ext_description>
<ext_description linkend="Package_arm.max_data_element.input1">
the first specified <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>.
</ext_description>
<ext_description linkend="Package_arm.max_data_element.input2">
the second specified <express_ref linkend="value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>.
</ext_description>


</ext_descriptions>

