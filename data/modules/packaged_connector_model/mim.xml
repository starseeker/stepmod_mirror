<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:30" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="packaged_connector_model_mim schema_instance"/>
   <schema name="PACKAGED_CONNECTOR_MODEL_MIM">
      <interface kind="use" schema="PACKAGED_PART_BLACK_BOX_MODEL_MIM"/>
      <entity name="packaged_connector" supertypes="packaged_part">
         <where label="wr1" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'packaged_connector_model_mim.' + 'property_definition.definition' ) | ( sizeof ( query ( sa &lt;* usedin ( pd , 'packaged_connector_model_mim.' + 'shape_aspect.of_shape' ) | ( 'packaged_connector_model_mim.' + 'packaged_connector_terminal_relationship' in typeof ( sa ) ) ) ) = 1 ) ) ) &gt;= 1 "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'packaged_connector_model_mim.' + 'property_definition.definition' ) | ( sizeof ( query ( sa &lt;* usedin ( pd , 'packaged_connector_model_mim.' + 'shape_aspect.of_shape' ) | ( sizeof ( query ( sar &lt;* usedin ( sa , 'packaged_connector_model_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'interface plane' ) ) = 1 ) ) ) = 1 ) ) ) &lt;= 1 "/>
         <where label="wr3" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'packaged_connector_model_mim.' + 'property_definition.definition' ) | ( sizeof ( query ( sa &lt;* usedin ( pd , 'packaged_connector_model_mim.' + 'shape_aspect.of_shape' ) | ( 'packaged_connector_model_mim.' + 'seating_plane' in typeof ( sa ) ) ) ) = 1 ) ) ) &lt;= 1 "/>
      </entity>
      <entity name="packaged_connector_terminal_relationship" supertypes="shape_aspect shape_aspect_relationship">
         <where label="wr1" expression=" ( sizeof ( typeof ( self . of_shape . definition ) * [ 'packaged_connector_model_mim.' + 'packaged_part' , 'packaged_connector_model_mim.' + 'externally_defined_packaged_part' , 'packaged_connector_model_mim.' + 'library_defined_packaged_part' ] ) = 1 ) and ( self . of_shape . definition \ product_definition . description = 'packaged connector' ) "/>
         <where label="wr2" expression=" ( ( 'packaged_connector_model_mim.' + 'packaged_part_terminal' in typeof ( self \ shape_aspect_relationship . related_shape_aspect ) ) and ( self \ shape_aspect_relationship . related_shape_aspect \ shape_aspect . description = 'interface terminal' ) ) "/>
         <where label="wr3" expression=" ( ( 'packaged_connector_model_mim.' + 'packaged_part_terminal' in typeof ( self \ shape_aspect_relationship . related_shape_aspect ) ) and ( self \ shape_aspect_relationship . related_shape_aspect \ shape_aspect . description = 'join terminal' ) ) "/>
      </entity>
      <rule name="packaged_connector_terminal_relationship_unique_constraint" appliesto="packaged_connector_terminal_relationship">
         <algorithm> local pu_bag : bag of physical_unit := [ ] ; pctr_bag : bag of packaged_connector_terminal_relationship ; it_bag : bag of packaged_part_terminal ; jt_bag : bag of packaged_part_terminal ; pass1 : boolean := true ; pass2 : boolean := true ; end_local ; repeat i := 1 to sizeof ( packaged_connector_terminal_relationship ) by 1 ; if exists ( packaged_connector_terminal_relationship [ i ] . of_shape . definition ) then if ( 'packaged_connector_model_mim.' + 'physical_unit' in typeof ( packaged_connector_terminal_relationship [ i ] . of_shape . definition ) ) then if ( not ( packaged_connector_terminal_relationship [ i ] . of_shape . definition in pu_bag ) ) then pu_bag := pu_bag + packaged_connector_terminal_relationship [ i ] . of_shape . definition ; end_if ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( pu_bag ) by 1 ; if ( not ( pass1 or pass2 ) ) then escape ; end_if ; it_bag := [ ] ; jt_bag := [ ] ; pctr_bag := query ( r &lt;* packaged_connector_terminal_relationship | ( r . of_shape . definition :=: pu_bag [ i ] ) ) ; repeat j := 1 to sizeof ( pctr_bag ) by 1 ; if ( not ( pass1 or pass2 ) ) then escape ; end_if ; if ( pass1 and ( 'packaged_connector_model_mim.' + 'packaged_part_terminal' in typeof ( pctr_bag [ j ] . relating_shape_aspect ) ) and ( pctr_bag [ j ] . relating_shape_aspect \ shape_aspect . description = 'join terminal' ) ) then if exists ( pctr_bag [ j ] . relating_shape_aspect ) then if ( pctr_bag [ j ] . relating_shape_aspect in jt_bag ) then pass1 := false ; escape ; else jt_bag := jt_bag + pctr_bag [ j ] . relating_shape_aspect ; end_if ; end_if ; end_if ; if ( pass2 and ( 'packaged_connector_model_mim.' + 'packaged_part_terminal' in typeof ( pctr_bag [ j ] . related_shape_aspect ) ) and ( pctr_bag [ j ] . related_shape_aspect \ shape_aspect . description = 'interface terminal' ) ) then if exists ( pctr_bag [ j ] . related_shape_aspect ) then if ( pctr_bag [ j ] . related_shape_aspect in it_bag ) then pass2 := false ; escape ; else it_bag := it_bag + pctr_bag [ j ] . related_shape_aspect ; end_if ; end_if ; end_if ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass1 "/>
         <where label="wr2" expression=" pass2 "/>
      </rule>
   </schema>
</express>
