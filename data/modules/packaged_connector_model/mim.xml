<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-01-24T12:02:42" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="packaged_connector_model_mim schema_instance"/>
   <schema name="Packaged_connector_model_mim">
      <interface kind="use" schema="Packaged_part_black_box_model_mim"/>
      <entity name="packaged_connector" supertypes="packaged_part">
         <where label="WR1" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF ( sa ) ) ) ) = 1 ) ) ) &gt;= 1 "/>
         <where label="WR2" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( SIZEOF ( QUERY ( sar &lt;* USEDIN ( sa , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'interface plane' ) ) = 1 ) ) ) = 1 ) ) ) &lt;= 1 "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'SEATING_PLANE' IN TYPEOF ( sa ) ) ) ) = 1 ) ) ) &lt;= 1 "/>
      </entity>
      <entity name="packaged_connector_terminal_relationship" supertypes="shape_aspect shape_aspect_relationship">
         <where label="WR1" expression=" ( SIZEOF ( TYPEOF ( SELF . of_shape . definition ) * [ 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_PART' , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'EXTERNALLY_DEFINED_PACKAGED_PART' , 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'LIBRARY_DEFINED_PACKAGED_PART' ] ) = 1 ) AND ( SELF . of_shape . definition \ product_definition . description = 'packaged connector' ) "/>
         <where label="WR2" expression=" ( ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_PART_TERMINAL' IN TYPEOF ( SELF \ shape_aspect_relationship . related_shape_aspect ) ) AND ( SELF \ shape_aspect_relationship . related_shape_aspect \ shape_aspect . description = 'interface terminal' ) ) "/>
         <where label="WR3" expression=" ( ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_PART_TERMINAL' IN TYPEOF ( SELF \ shape_aspect_relationship . related_shape_aspect ) ) AND ( SELF \ shape_aspect_relationship . related_shape_aspect \ shape_aspect . description = 'join terminal' ) ) "/>
      </entity>
      <rule name="packaged_connector_terminal_relationship_unique_constraint" appliesto="packaged_connector_terminal_relationship">
         <algorithm> LOCAL pu_bag : BAG OF physical_unit := [ ] ; pctr_bag : BAG OF packaged_connector_terminal_relationship ; it_bag : BAG OF packaged_part_terminal ; jt_bag : BAG OF packaged_part_terminal ; pass1 : BOOLEAN := TRUE ; pass2 : BOOLEAN := TRUE ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( packaged_connector_terminal_relationship ) by 1 ; IF EXISTS ( packaged_connector_terminal_relationship [ i ] . of_shape . definition ) THEN IF ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PHYSICAL_UNIT' IN TYPEOF ( packaged_connector_terminal_relationship [ i ] . of_shape . definition ) ) THEN IF ( NOT ( packaged_connector_terminal_relationship [ i ] . of_shape . definition IN pu_bag ) ) THEN pu_bag := pu_bag + packaged_connector_terminal_relationship [ i ] . of_shape . definition ; END_IF ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pu_bag ) by 1 ; IF ( NOT ( pass1 OR pass2 ) ) THEN ESCAPE ; END_IF ; it_bag := [ ] ; jt_bag := [ ] ; pctr_bag := QUERY ( r &lt;* packaged_connector_terminal_relationship | ( r . of_shape . definition :=: pu_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( pctr_bag ) by 1 ; IF ( NOT ( pass1 OR pass2 ) ) THEN ESCAPE ; END_IF ; IF ( pass1 AND ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_PART_TERMINAL' IN TYPEOF ( pctr_bag [ j ] . relating_shape_aspect ) ) AND ( pctr_bag [ j ] . relating_shape_aspect \ shape_aspect . description = 'join terminal' ) ) THEN IF EXISTS ( pctr_bag [ j ] . relating_shape_aspect ) THEN IF ( pctr_bag [ j ] . relating_shape_aspect IN jt_bag ) THEN pass1 := FALSE ; ESCAPE ; ELSE jt_bag := jt_bag + pctr_bag [ j ] . relating_shape_aspect ; END_IF ; END_IF ; END_IF ; IF ( pass2 AND ( 'PACKAGED_CONNECTOR_MODEL_MIM.' + 'PACKAGED_PART_TERMINAL' IN TYPEOF ( pctr_bag [ j ] . related_shape_aspect ) ) AND ( pctr_bag [ j ] . related_shape_aspect \ shape_aspect . description = 'interface terminal' ) ) THEN IF EXISTS ( pctr_bag [ j ] . related_shape_aspect ) THEN IF ( pctr_bag [ j ] . related_shape_aspect IN it_bag ) THEN pass2 := FALSE ; ESCAPE ; ELSE it_bag := it_bag + pctr_bag [ j ] . related_shape_aspect ; END_IF ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass1 "/>
         <where label="WR2" expression=" pass2 "/>
      </rule>
   </schema>
</express>
