<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-01-26T18:35:54" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="packaged_part_black_box_model_mim schema_instance"/>
   <schema name="Packaged_part_black_box_model_mim">
      <interface kind="use" schema="Part_external_reference_mim"/>
      <interface kind="use" schema="Conductivity_material_aspects_mim"/>
      <interface kind="use" schema="Physical_unit_usage_view_mim"/>
      <interface kind="use" schema="Functional_assignment_to_part_mim"/>
      <interface kind="use" schema="Package_mim"/>
      <interface kind="use" schema="Network_functional_usage_view_mim"/>
      <entity name="packaged_part" supertypes="physical_unit">
         <where label="WR1" expression="SIZEOF (QUERY (pd &lt;* USEDIN (SELF, &#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PROPERTY_DEFINITION.DEFINITION') |&#10;       NOT (SIZEOF (QUERY (sa &lt;* USEDIN (pd,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_ASPECT.OF_SHAPE') |&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGED_PART_TERMINAL' IN &#10;       TYPEOF (sa))) &gt;= 0))) = 0"/>
         <where label="WR2" expression="SIZEOF (USEDIN (SELF, &#10;        'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'MATERIAL_DESIGNATION.DEFINITIONS')) &lt;= 1"/>
         <where label="WR3" expression="SIZEOF (QUERY (ifu &lt;* QUERY (pdr &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |&#10;       pdr\product_definition_relationship.name = 'implemented function') |&#10;       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'FUNCTIONAL_UNIT' IN&#10;       TYPEOF (ifu.relating_product_definition)) AND&#10;       (ifu.relating_product_definition.frame_of_reference.name =&#10;       'functional design usage'))) &lt;= 1"/>
         <where label="WR4" expression="NOT(EXISTS(SELF\product_definition.description)) OR&#10;       ((NOT (SELF\product_definition.description = 'altered packaged part')) OR&#10;       (SIZEOF (QUERY (bpp &lt;* QUERY (pdr &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |&#10;       pdr\product_definition_relationship.name = 'base packaged part') |&#10;       (SIZEOF (['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGED_PART',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'EXTERNALLY_DEFINED_PACKAGED_PART',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'LIBRARY_DEFINED_PACKAGED_PART'] * &#10;       TYPEOF (bpp.relating_product_definition)) = 1) AND&#10;       (bpp.relating_product_definition.frame_of_reference.name =&#10;       'physical design usage'))) &gt;= 1))"/>
         <where label="WR5" expression="SIZEOF (QUERY (upkg &lt;* QUERY (pdr &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |&#10;       pdr\product_definition_relationship.name = 'used package') |&#10;       SIZEOF (['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGE',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'EXTERNALLY_DEFINED_PACKAGE',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'LIBRARY_DEFINED_PACKAGE'] * &#10;       TYPEOF (upkg.relating_product_definition)) = 1)) &gt;= 1"/>
         <where label="WR6" expression="SELF.frame_of_reference.name = 'physical design usage'"/>
      </entity>
      <entity name="packaged_part_terminal" supertypes="shape_aspect">
         <where label="WR1" expression="SELF\shape_aspect.description IN ['interface terminal', &#10;       'join terminal']"/>
         <where label="WR2" expression="(SIZEOF (TYPEOF (SELF.of_shape.definition) *&#10;       ['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGED_PART',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'EXTERNALLY_DEFINED_PACKAGED_PART',&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'LIBRARY_DEFINED_PACKAGED_PART']) &#10;       = 1) AND&#10;  (SELF.of_shape.definition\product_definition.frame_of_reference.name = &#10;       'physical design usage')"/>
         <where label="WR3" expression="SIZEOF (QUERY (pd &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PROPERTY_DEFINITION.DEFINITION') |&#10;       NOT (SIZEOF (QUERY (pdr &lt;* USEDIN (pd,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_REPRESENTATION' IN&#10;       TYPEOF (pdr.used_representation))) &gt;= 1))) = 0"/>
         <where label="WR4" expression="SIZEOF (QUERY (top &lt;* QUERY (sar &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |&#10;       sar\shape_aspect_relationship.name = 'terminal of package') |&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGE_TERMINAL' IN&#10;       TYPEOF (top.related_shape_aspect))) &gt;= 1"/>
         <where label="WR5" expression="SIZEOF (QUERY (mct &lt;* QUERY (sar &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |&#10;       sar\shape_aspect_relationship.name = 'member connected terminal') |&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PART_CONNECTED_TERMINALS_DEFINITION'&#10;       IN TYPEOF (mct.relating_shape_aspect))) &lt;= 1"/>
         <where label="WR6" expression="(NOT(SELF\shape_aspect.description = 'interface terminal')) OR&#10;       (SIZEOF(QUERY (sar &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |&#10;       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))&#10;       AND (sar.relating_shape_aspect\shape_aspect.description = &#10;       'join terminal'))) &gt;= 1)"/>
         <where label="WR7" expression="(NOT(SELF\shape_aspect.description = 'join terminal')) OR&#10;       (SIZEOF(QUERY (sar &lt;* USEDIN (SELF,&#10;       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |&#10;       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +&#10;       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))&#10;       AND (sar.relating_shape_aspect\shape_aspect.description = &#10;        'interface terminal'))) &lt;= 1)"/>
      </entity>
      <rule name="packaged_part_unique_constraint" appliesto="packaged_part">
         <algorithm>LOCAL
  pp : SET OF physical_unit := packaged_part; -- + externally_defined_packaged_part + library_defined_packaged_part;
  pdr_bag : BAG OF product_definition_relationship;
  pdf_bag : BAG OF product_definition_formation := [];
  pass : BOOLEAN := TRUE;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pp) by 1;
  IF ( NOT pass ) THEN ESCAPE; END_IF;
    pdf_bag := [];
    pdr_bag := QUERY( pdr &lt;* USEDIN( pp[i], 
'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | 
((pdr\product_definition_relationship.name = 'used package')
AND (('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'PACKAGE' IN TYPEOF(pdr.relating_product_definition)) (** OR
('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'EXTERNALLY_DEFINED_PACKAGE' IN TYPEOF(pdr.relating_product_definition)) OR
('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'LIBRARY_DEFINED_PACKAGE' IN TYPEOF(pdr.relating_product_definition))  *)
) ) );
    pdf_bag := pdf_bag + pdr_bag[1].relating_product_definition.formation;
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
     IF ( NOT pass ) THEN ESCAPE; END_IF;
      IF EXISTS( pdr_bag[k].relating_product_definition.formation ) THEN
        IF NOT( pdr_bag[k].relating_product_definition.formation IN pdf_bag ) THEN
          pass := FALSE;
        END_IF;
      END_IF;
    END_REPEAT;
END_REPEAT;</algorithm>
         <where label="WR1" expression="pass"/>
      </rule>
   </schema>
</express>
