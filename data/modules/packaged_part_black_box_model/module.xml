<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.49 2009/04/23 11:57:05 liutkuviene Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="packaged_part_black_box_model" 
	name.french="Mod&#232;le de bo&#238;te noire de composants encapsul&#233;s "
	part="1710" version="2" sc4.working_group="12" 
	wg.number="6461" 
	wg.number.arm="6462" 
	wg.number.mim="6463" 
	wg.number.supersedes="5730" 
	wg.number.arm.supersedes="5731" 
	wg.number.mim.supersedes="5732" 
	checklist.internal_review="6566" 
	checklist.project_leader="6567" 
	checklist.convener="6568" 
	status="TS" language="E" 
	publication.year="2009" 
	publication.date="2009-07-01" 
	published="y" 
	previous.revision.year="2006" previous.revision.cancelled="NO" revision.complete="YES" 
	rcs.date="$Date: 2009/04/23 11:57:05 $" rcs.revision="$Revision: 1.49 $" development.folder="dvlp">

 <keywords>
    module, black box, behaviour, model, analysis, design, electrical, electronic, mechanical, piece part, component
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
<abstract>
      <li>the terminals of a part;</li>
      <li>the function of a part;</li>
      <li>the simulation model for a part;</li>
      <li>the container or package for a part.</li>


</abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information necessary to describe a product as a part for the next level of assembly. The inner structure of this part isn't visible by the electronic assembly designer.  This module defines the information necessary to describe the product terminals that are directly connected for the purposes of normal usage.
   </p>

	<!-- 2nd edition -->
	<p>
		This second edition of this part of ISO 10303 incorporates the modifications to the first edition listed below.
	</p>
	
	<p>
		The following ARM EXPRESS declarations and interface specifications have been removed:
	</p>
	<ul>
		<li>single_package_version.</li>
	</ul>
	
	<p>
		The following ARM EXPRESS declarations and interface specifications have been modified:
	</p>
	<ul>
		<li>Packaged_part;</li>
		<li>Packaged_part_terminal;</li>
		<li>disjoint_package_terminals.</li>
	</ul>
	
	<p>
		The following ARM EXPRESS declarations and interface specifications have been added:
	</p>
	<ul>
		<li>single_package_product.</li>
	</ul>
	<p>
		In addition, modifications have been made to the mapping specification 
		and the EXPRESS-G diagrams to reflect and be consistent with the modifications of the ARM.
	</p>
	
 </purpose>

 <!-- Items in scope -->
 <inscope>
      <li>part terminal;</li>
      <li>part function;</li>
      <li>analysis model;</li>
      <li>packaged part;</li>
      <li>items within the scope of application module <module_ref linkend="functional_assignment_to_part:1_scope">Functional assignment to part</module_ref>, ISO/TS 10303-1674;</li>
      <li>items within the scope of application module <module_ref linkend="functional_usage_view:1_scope">Functional usage view</module_ref>, ISO/TS 10303-1705;</li>
      <li>items within the scope of application module <module_ref linkend="package:1_scope">Package</module_ref>, ISO/TS 10303-1707;</li>
      <li>items within the scope of application module <module_ref linkend="part_external_reference:1_scope">Part external reference</module_ref>, ISO/TS 10303-1711.</li>
   </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
		<ae entity="Material_identification" original_module="generic_material_aspects" extensible="NO">
			<aa attribute="items" assertion_to="Packaged_part">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath_extend extended_select="material_item_select" xml:space="preserve">
				characterized_definition
				characterized_definition = product_definition
				product_definition
				product_definition =&gt; 
				physical_unit =&gt; 
				packaged_part
				</refpath_extend>
			</aa>
		</ae>
 <ae entity="Packaged_part" extensible="NO">
            <aimelt xml:space="preserve">packaged_part</aimelt>
            <source xml:space="preserve">ISO 10303-1710</source>
            <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition
</refpath>
            <aa attribute="implemented_function" assertion_to="Functional_unit_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'implemented function'}
product_definition_relationship.relating_product_definition -&gt;
{product_definition &lt;-
product_definition_context_association.definition
product_definition_context_association
{product_definition_context_association.role -&gt;
product_definition_context_role
product_definition_context_role.name = 'part definition type'}
product_definition_context_association.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'functional design usage'}
product_definition =&gt;
functional_unit
</refpath>
            </aa>
            <aa attribute="used_package" assertion_to="Package">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'used package'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit =&gt;
package
</refpath>
            </aa>
            <aa attribute="used_package" assertion_to="Package_external_reference">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition_shape &lt;=
property_definition &lt;-
property_definition_representation.definition
{property_definition_representation.name = 'used package'}
property_definition_representation.used_representation -&gt;
representation
{representation
representation.name = 'package external reference'}
</refpath>
            </aa>
			
        </ae>		
    <ae entity="Packaged_part_join_terminal" extensible="NO">
            <aimelt xml:space="preserve">packaged_part_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1710</source>
            <refpath xml:space="preserve">packaged_part_terminal &lt;=
shape_aspect
{shape_aspect
shape_aspect.description = 'join terminal'}
</refpath>
        </ae>
    <ae entity="Packaged_part_terminal" extensible="NO">
            <aimelt xml:space="preserve">packaged_part_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1710</source>
            <refpath xml:space="preserve">packaged_part_terminal &lt;=
shape_aspect
{(shape_aspect.description = 'interface terminal')
(shape_aspect.description = 'join terminal')}
</refpath>
            <aa attribute="terminal_of_package" assertion_to="Package_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part_terminal &lt;=
shape_aspect					
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship.name = 'used package'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit
{physical_unit =&gt;
package}
physical_unit &lt;=
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect =&gt;
placed_feature =&gt;
package_terminal}
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'terminal of package'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
placed_feature =&gt;
package_terminal
</refpath>
            </aa>
            <aa attribute="associated_definition" assertion_to="Packaged_part">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part_terminal &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
physical_unit =&gt;
packaged_part
</refpath>
            </aa>
        </ae>
	<ae entity="Part_terminal" original_module="functional_assignment_to_part" extensible="NO">
		<aimelt xml:space="preserve">
			(/SUBTYPE(Packaged_part_terminal)/)
		</aimelt>
	</ae>		
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
	   <shortnames>
	   	<shortname name="PCKPRT" entity="packaged_part"/>
	   	<shortname name="PCPRTR" entity="packaged_part_terminal"/>	   	
	   </shortnames>                                 		          		               	                                                                             
 </mim>

</module>
