(*
   $Id: mkmodule.js,v 1.46 2010/02/04 16:48:02 robbod Exp $
   N - ISO/CD-TS - 10303- part_feature - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
SCHEMA Part_feature_arm;

USE FROM Feature_and_connection_zone_arm;    --  ISO/TS 10303-1671
USE FROM Part_feature_location_arm;    --  ISO/TS 10303-1714
USE FROM Physical_unit_usage_view_arm; 

REFERENCE FROM Support_resource_arm(bag_to_set);  


TYPE material_state_change_enumeration = ENUMERATION OF
  (material_addition,
   material_removal);
END_TYPE;

ENTITY Part_feature
  SUBTYPE OF (Shape_feature);
    SELF\Shape_element.containing_shape RENAMED associated_definition : Part_usage_view;
    material_state_change   : OPTIONAL material_state_change_enumeration;
    precedent_feature       : OPTIONAL Part_feature;
  INVERSE
    feature_shape           : SET [0:?] OF usage_concept_usage_relationship FOR associated_usage;
    subsequent_feature      : SET [0:1] OF Part_feature for precedent_feature;
  WHERE
    WR1:  NOT EXISTS(precedent_feature) OR
          (NOT (SIZEOF(subsequent_feature) = 1) OR
          (acyclic_part_feature_precedence_relationship(SELF,
           [subsequent_feature[1]],
           'PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE')));
    WR2 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

FUNCTION acyclic_part_feature_precedence_relationship
    (relation : Part_feature; relatives : SET[1:?] OF
    Part_feature; specific_relation : STRING) : BOOLEAN; 
  LOCAL
    x : SET OF Part_feature;
  END_LOCAL;

  IF relation.precedent_feature IN relatives THEN
    RETURN (FALSE);
  END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_feature,
      'PHYSICAL_UNIT_USAGE_VIEW_ARM.' + 'PART_FEATURE.' +
      'SUBSEQUENT_FEATURE')) | specific_relation IN TYPEOF(pd));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_part_feature_precedence_relationship(x[i], relatives +
      relation.precedent_feature, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 
  
END_SCHEMA;
