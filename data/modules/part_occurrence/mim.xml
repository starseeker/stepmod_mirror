<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:30" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="part_occurrence_mim schema_instance"/>
   <schema name="PART_OCCURRENCE_MIM">
      <interface kind="use" schema="ASSEMBLY_STRUCTURE_MIM"/>
      <interface kind="use" schema="EXTENDED_MEASURE_REPRESENTATION_MIM"/>
      <interface kind="use" schema="MEASURE_REPRESENTATION_MIM"/>
      <interface kind="use" schema="PART_VIEW_DEFINITION_MIM"/>
      <interface kind="use" schema="PRODUCT_VIEW_DEFINITION_RELATIONSHIP_MIM"/>
      <interface kind="use" schema="VALUE_WITH_UNIT_MIM"/>
      <interface kind="use" schema="PRODUCT_PROPERTY_DEFINITION_SCHEMA">
         <interfaced.item name="characterized_product_definition"/>
         <interfaced.item name="property_definition"/>
      </interface>
      <interface kind="use" schema="PRODUCT_PROPERTY_REPRESENTATION_SCHEMA">
         <interfaced.item name="property_definition_representation"/>
      </interface>
      <interface kind="use" schema="PRODUCT_STRUCTURE_SCHEMA">
         <interfaced.item name="product_definition_occurrence_relationship"/>
         <interfaced.item name="quantified_assembly_component_usage"/>
      </interface>
      <type name="product_definition_or_assembly_relationship">
         <select selectitems="assembly_component_usage product_definition"/>
      </type>
      <rule name="restrict_part_occurrence" appliesto="product_definition">
         <algorithm> local part_occurrences : set of product_definition := [ ] ; end_local ; part_occurrences := query ( pd &lt;* product_definition | ( pd . frame_of_reference . name = 'part occurrence' ) ) ; </algorithm>
         <where label="wr1" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( not ( pd . name in [ 'single instance' , 'selected instance' , 'quantified instance' , 'specified instance' ] ) ) ) ) = 0 "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( sizeof ( query ( pdr &lt;* usedin ( pd , 'part_occurrence_mim.' + 'product_definition_relationship.related_product_definition' ) | pdr . name = 'definition usage' ) ) &lt;&gt; 1 ) and ( sizeof ( query ( cd &lt;* usedin ( pd , 'part_occurrence_mim.' + 'configuration_design.design' ) | ( cd . name = 'occurrence usage definition' ) and ( not ( 'part_occurrence_mim.' + 'product_identification' in typeof ( cd . configuration ) ) ) ) ) &lt;&gt; 1 ) ) ) = 0 "/>
         <where label="wr3" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( sizeof ( query ( cd &lt;* usedin ( pd , 'part_occurrence_mim.' + 'product_definition_relationship.related_product_definition' ) | ( 'part_occurrence_mim.' + 'product_definition_usage' in typeof ( cd ) ) ) ) = 0 ) and ( sizeof ( usedin ( pd , 'part_occurrence_mim.' + 'product_definition_occurrence_relationship.occurrence' ) ) = 0 ) ) ) = 0 "/>
         <where label="wr4" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( pd . name = 'selected instance' ) and not valid_selected_instance_representation ( pd ) ) ) = 0 "/>
         <where label="wr5" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( pd . name = 'quantified instance' ) and ( sizeof ( query ( ppd &lt;* usedin ( pd , 'part_occurrence_mim.' + 'property_definition.definition' ) | ( ppd . name = 'occurrence quantity' ) and ( sizeof ( query ( pdr &lt;* usedin ( ppd , 'part_occurrence_mim.' + 'property_definition_representation.definition' ) | ( pdr . used_representation . name = 'quantity' ) and ( sizeof ( pdr . used_representation . items ) = 1 ) and ( sizeof ( query ( i &lt;* pdr . used_representation . items | ( 'part_occurrence_mim.' + 'measure_representation_item' in typeof ( i ) ) and ( i . name = 'quantity measure' ) ) ) = 1 ) ) ) = 1 ) ) ) = 0 ) ) ) = 0 "/>
         <where label="wr6" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( pd . name = 'specified instance' ) and ( sizeof ( query ( pdor &lt;* usedin ( pd , 'part_occurrence_mim.' + 'product_definition_occurrence_relationship.occurrence' ) | 'part_occurrence_mim.' + 'specified_higher_usage_occurrence' in typeof ( pdor . occurrence_usage ) ) ) = 0 ) ) ) = 0 "/>
      </rule>
      <rule name="restrict_part_occurrence_category" appliesto="product_definition">
         <algorithm> local part_occurrences : set of product_definition := [ ] ; end_local ; part_occurrences := query ( pd &lt;* product_definition | ( pd . frame_of_reference . name = 'part occurrence' ) ) ; </algorithm>
         <where label="wr1" expression=" sizeof ( query ( pd &lt;* part_occurrences | ( sizeof ( query ( prpc &lt;* usedin ( pd . formation . of_product , 'product_occurrence_mim.product_related_product_category.products' ) | prpc . name in [ 'part' , 'raw material' , 'tool' ] ) ) = 0 ) ) ) = 0 "/>
      </rule>
      <rule name="restrict_product_definitions_for_definition_usage" appliesto="product_definition_relationship">
         <where label="wr1" expression=" sizeof ( query ( pdr &lt;* product_definition_relationship | ( pdr . name = 'definition usage' ) and ( ( pdr . relating_product_definition . frame_of_reference . name &lt;&gt; 'part definition' ) or ( pdr . related_product_definition . frame_of_reference . name &lt;&gt; 'part occurrence' ) ) ) ) = 0 "/>
      </rule>
      <rule name="selected_instance_usage_requires_representation" appliesto="assembly_component_usage">
         <algorithm> local selected_instance_usages : set of assembly_component_usage := [ ] ; end_local ; selected_instance_usages := query ( acr &lt;* assembly_component_usage | ( acr . name = 'selected instance usage' ) ) ; </algorithm>
         <where label="wr1" expression=" sizeof ( query ( acr &lt;* selected_instance_usages | not valid_selected_instance_representation ( acr ) ) ) = 0 "/>
      </rule>
      <function name="valid_selected_instance_representation">
         <parameter name="pd">
            <typename name="product_definition_or_assembly_relationship"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm> local properties : set of property_definition := [ ] ; property_definition_representations : set of property_definition_representation := [ ] ; selected_representation : representation ; end_local ; properties := query ( prd &lt;* usedin ( pd , 'product_occurrence_mim.property_definition.definition' ) | ( prd . name = 'occurrence selection' ) ) ; if ( sizeof ( properties ) &lt;&gt; 1 ) then return ( false ) ; end_if ; property_definition_representations := query ( pdr &lt;* usedin ( properties [ 1 ] , 'product_occurrence_mim.property_definition_representation.definition' ) | ( pdr . used_representation . name = 'selection criteria' ) ) ; if ( sizeof ( property_definition_representations ) &lt;&gt; 1 ) then return ( false ) ; end_if ; selected_representation := property_definition_representations [ 1 ] . used_representation ; if ( sizeof ( selected_representation . items ) &lt; 1 ) or ( sizeof ( selected_representation . items ) &gt; 2 ) then return ( false ) ; end_if ; if ( sizeof ( query ( i &lt;* selected_representation . used_representation . items | ( sizeof ( [ 'product_occurrence_mim.measure_representation_item' , 'product_occurrence_mim.value_range' ] * typeof ( i ) ) = 1 ) and ( i . name = 'selection quantity' ) ) ) &lt;&gt; 1 ) then return ( false ) ; end_if ; if ( sizeof ( query ( i &lt;* selected_representation . used_representation . items | ( 'product_occurrence_mim.descriptive_representation_item' in typeof ( i ) ) and ( i . name = 'selection control' ) ) ) &gt; 1 ) then return ( false ) ; end_if ; if ( sizeof ( query ( i &lt;* selected_representation . used_representation . items | ( 'product_occurrence_mim.descriptive_representation_item' in typeof ( i ) ) and ( i . name = 'selection control' ) ) ) = 0 ) and ( sizeof ( query ( i &lt;* selected_representation . used_representation . items | ( i . name = 'selection quantity' ) and ( sizeof ( [ 'product_occurrence_mim.qualified_representation_item' , 'product_occurrence_mim.value_range' ] * typeof ( i ) ) = 0 ) ) ) &gt; 0 ) then return ( false ) ; end_if ; return ( true ) ; </algorithm>
      </function>
   </schema>
</express>
