(*
   $Id: arm.exp,v 1.65 2005/11/16 07:43:50 kovaliovas Exp $
   ISO TC184/SC4/WG12 N3519 - ISO/CD-TS 10303-1716 Part template 2d shape - EXPRESS ARM
*)

SCHEMA Part_template_2d_shape_arm;

	USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718
	USE FROM Printed_physical_layout_template_arm;	-- ISO/TS 10303-1737
	USE FROM Physical_unit_2d_shape_arm; -- ISO/TS 10303-1726

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740

    TYPE footprint_definition_shape_or_padstack_definition_shape = SELECT
      (Footprint_definition_shape,
      Padstack_definition_shape);
	END_TYPE;

	TYPE package_or_printed_part_template = SELECT
		(Package,
     	Printed_part_template);
	END_TYPE;

	TYPE package_terminal_or_printed_part_template_terminal = SELECT
		(Package_terminal,
     	Printed_part_template_terminal);
	END_TYPE;

	TYPE pt2ds_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Generic_footprint_definition,
   	Padstack_definition);
	END_TYPE; 

  	TYPE pt2ds_part_template_or_physical_unit_2d_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_2d_shape_select WITH 
    	(Part_template_planar_shape_model);
  	END_TYPE;

	TYPE pt2ds_physical_unit_or_part_template_or_fp_or_pd = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_or_part_template_or_fp_or_pd WITH 
    (Generic_footprint_definition,
     Padstack_definition);
  END_TYPE;

	TYPE pt2ds_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_shape_model_select WITH 
	    (Physical_unit_planar_shape_model);
  	END_TYPE;

  TYPE padstack_arrangement = ENUMERATION OF
    (top,
     bottom,
     symmetrical);
  END_TYPE;

  TYPE stratum_technology_occurrence_or_stratum_technology = SELECT
   (Stratum_technology_occurrence,
    Stratum_technology);
  END_TYPE;

  ENTITY Breakout_footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_footprint : Footprint_definition;
    INVERSE
        breakout_traces : SET[1:?] OF stratum_feature_template_location_in_breakout_footprint_definition FOR assembly;
    WHERE
    -- Padstack must be of type passage_padstack_definition
      WR1: SIZEOF(QUERY(ps <* padstack | NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PASSAGE_PADSTACK_DEFINITION' * TYPEOF(ps.padstack)))) = 0;
    -- (VIKTORAS: this WR is invalid and probably should go to breakout_occurrrence)
    -- Passage_technology must be of type default_via_definition for Padstack_definition
    -- WR2: SIZEOF(QUERY(ps <* padstack | NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DEFAULT_VIA_DEFINITION' * TYPEOF(ps.padstack\Passage_padstack_definition.technology_reference)))) = 0;    
  --IP1: The domain of the geometry of the Breakout_footprint_definition shall be the same domain as that of
  -- the reference_footprint.
  --IP2: Each member of breakout_traces shall have a domain that overlaps with a Land in the reference_footprint;
  --IP3: Each member of breakout_traces shall have a domain that overlaps with a Land in the padstack inherited from
  -- Generic_footprint_definition
    END_ENTITY;

  ENTITY Design_layer_type_specific_padstack_definition
    SUBTYPE OF (Padstack_definition);
      design_layer_type_reference : Design_layer_technology;
  END_ENTITY;

  ENTITY Design_specific_padstack_definition
    SUBTYPE OF (Padstack_definition);
  END_ENTITY;

  ENTITY Footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_package  : package_or_printed_part_template;
  END_ENTITY;

  ENTITY Footprint_definition_shape
    SUBTYPE OF (Multi_layer_template_definition_shape_model);
      SELF\Multi_layer_template_definition_shape_model.shape_characterized_definition : Generic_footprint_definition;
      reference_shape                          : physical_unit_shape_model_select;
    UNIQUE
    	UR1 : shape_characterized_definition;
    WHERE
      WR1 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
            NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_physical_unit)) OR
            NOT ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(shape_characterized_definition)) OR      
                 (shape_characterized_definition\Footprint_definition.reference_package :=: 
                  reference_shape\Physical_unit_shape_model.shape_characterized_physical_unit);

      WR2 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
                ('PACKAGE_ARM.PACKAGE' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_physical_unit));

      WR3 : NOT (SIZEOF(['PART_TEMPLATE_3D_SHAPE_ARM.PART_TEMPLATE_3D_SHAPE_MODEL',
                         'PART_TEMPLATE_2D_SHAPE_ARM.PART_TEMPLATE_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
            NOT ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_physical_unit)) OR
            NOT ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(shape_characterized_definition)) OR      
                 (shape_characterized_definition\Footprint_definition.reference_package :=: 
                  reference_shape\Part_template_shape_model.shape_characterized_part_template);

      WR4 : NOT (SIZEOF(['PART_TEMPLATE_3D_SHAPE_ARM.PART_TEMPLATE_3D_SHAPE_MODEL',
                         'PART_TEMPLATE_2D_SHAPE_ARM.PART_TEMPLATE_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
                ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE' 
                   IN TYPEOF(reference_shape\Part_template_shape_model.shape_characterized_part_template));

     WR5 : SIZEOF(USEDIN(SELF, 'LAYERED_2D_SHAPE_ARM.REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP.RELATED_FEATURE_SHAPE')) = 0;       
     WR6 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Generic_footprint_definition
    ABSTRACT SUPERTYPE OF (ONEOF (Footprint_definition, Breakout_footprint_definition))
    SUBTYPE OF (Multi_layer_template_definition);
    DERIVE
      footprint_location : padstack_arrangement := get_padstack_arrangement(padstack);
    INVERSE
      SELF\Multi_layer_template_definition.shape    : footprint_definition_shape FOR shape_characterized_definition;
      padstack : SET[1:?] OF padstack_location_in_footprint_definition FOR footprint;
    WHERE
      WR1 : SIZEOF(QUERY(ps <* padstack | ps.padstack.padstack_location <> footprint_location)) = 0;
      WR2 : ((footprint_location = padstack_arrangement.top) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top')) OR 
            (NOT (footprint_location = padstack_arrangement.top) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top'));
      WR3 : ((footprint_location = padstack_arrangement.bottom) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom')) OR 
            (NOT (footprint_location = padstack_arrangement.bottom) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom'));
      WR4 : ((footprint_location = padstack_arrangement.symmetrical) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical')) OR 
            (NOT (footprint_location = padstack_arrangement.symmetrical) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical'));
  END_ENTITY;

  ENTITY Inter_stratum_feature_template_location_in_multi_layer_template_definition
  	SUBTYPE OF (Part_template_location_in_multi_layer_template_definition);
      SELF\Part_template_location_in_multi_layer_template_definition.assembly : Passage_padstack_definition;  	
      SELF\Part_template_location_in_multi_layer_template_definition.template : Inter_stratum_feature_template;
    WHERE
      WR1: SIZEOF(['PART_TEMPLATE_EXTENSION_ARM.INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE',
                   'PART_TEMPLATE_EXTENSION_ARM.INTER_STRATUM_FEATURE_EDGE_TEMPLATE'] * TYPEOF(template)) = 0;
    -- Tom agrees. The board edge can't be part of the footprin_definition.
    -- WR2: this can only be used for design specific footprint
    -- WR3: perhaps there should be a rule on padstack that states that there should be
    --      only one Inter_stratum_feature_template_location_in_padstack_definition
    --      for it; or no more then one Inter_stratum_feature_template_location_in_padstack_definition
    --      for any kind of inter_stratum_feature_template
    -- What issue is this trying to address? option one sounds good to me anyway.
    -- WR4: this can only be used for design specific padstack
  END_ENTITY;

  ENTITY Layer_based_package_keepout_shape_model
    SUBTYPE OF(Physical_unit_planar_keepout_shape_model);
     kept_out_layers : SET [1:?] OF Stratum_technology;
    WHERE
     WR1: SELF\Physical_unit_keepout_shape_model.constrained_design_object_category
       IN [keepout_product_design_object_category.interconnect_module_via,
       keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
       keepout_product_design_object_category.interconnect_module_cutout,
       keepout_product_design_object_category.interconnect_module_fill_area,
       keepout_product_design_object_category.interconnect_module_stratum_feature];
  END_ENTITY;

  ENTITY Library_padstack_definition
    SUBTYPE OF (Padstack_definition);
  END_ENTITY;

  ENTITY Multi_layer_template_definition
    ABSTRACT SUPERTYPE OF (ONEOF (Padstack_definition, Generic_footprint_definition,
      Special_symbol_definition))
    SUBTYPE OF (Template_definition);
    INVERSE
      shape : Multi_layer_template_definition_shape_model FOR shape_characterized_definition;
      templates : SET [1:?] OF Part_template_location_in_multi_layer_template_definition FOR assembly;
  END_ENTITY;

  ENTITY Multi_layer_template_definition_shape_model
    ABSTRACT SUPERTYPE OF (ONEOF (Padstack_definition_shape,
      Footprint_definition_shape, Special_symbol_definition_shape))
    SUBTYPE OF (Planar_projected_shape_model);
      shape_characterized_definition : Multi_layer_template_definition;
      shape_environment : OPTIONAL application_environment;
      shape_material_condition : material_condition;
    UNIQUE
      UR1 : shape_characterized_definition;
    WHERE
      WR1: (SIZEOF(USEDIN(SELF, 'LAYERED_2D_SHAPE_ARM.' +
      'REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP.' + 'RELATED_FEATURE_SHAPE')) = 0);
  END_ENTITY;

  ENTITY Padstack_definition
    SUPERTYPE OF ((ONEOF (Design_layer_type_specific_padstack_definition, Stratum_type_independent_padstack_definition))
    ANDOR Library_padstack_definition
    ANDOR Design_specific_padstack_definition)  
    SUBTYPE OF (Multi_layer_template_definition);
      padstack_location        : padstack_arrangement;
    INVERSE
	  SELF\Multi_layer_template_definition.shape    : padstack_definition_shape FOR shape_characterized_definition;
      template : SET[1:?] OF Part_template_location_in_multi_layer_template_definition FOR assembly;
    WHERE
      WR1 : SIZEOF(QUERY(prpc <* USEDIN(SELF\Product_view_definition.defined_version.of_product,
 'PRODUCT_IDENTIFICATION_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS') | (prpc.category\Product_category.name = 'template model'))) > 0;
  END_ENTITY;

  ENTITY Padstack_definition_shape
    SUBTYPE OF (Multi_layer_template_definition_shape_model);
      SELF\Multi_layer_template_definition_shape_model.shape_characterized_definition : Padstack_definition;
    UNIQUE
    	UR1 : shape_characterized_definition;
		WHERE
			WR1 : (SIZEOF(USEDIN(SELF,
 'LAYERED_2D_SHAPE_ARM.' + 'REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP.' + 'RELATED_FEATURE_SHAPE')) = 0);       
          WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Padstack_location_in_footprint_definition;
      padstack                   : Padstack_definition;
      footprint                  : Generic_footprint_definition;
      reference_package_terminal : package_terminal_or_printed_part_template_terminal;
    INVERSE
      transform : padstack_location_in_footprint_definition_transform FOR reference_location;
    UNIQUE
      UR1: footprint, reference_package_terminal;
    WHERE
      WR1 : NOT ('PART_TEMPLATE_2D_SHAPE_ARM.PART_FEATURE' IN TYPEOF(reference_package_terminal)) OR 
                (reference_package_terminal\shape_element.containing_shape :=: footprint.reference_package);
      WR2 : NOT ('PART_TEMPLATE_2D_SHAPE_ARM.PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF(reference_package_terminal)) OR 
                (reference_package_terminal.associated_definition :=: footprint.reference_package);
      WR3 : NOT ('PART_TEMPLATE_2D_SHAPE_ARM.PRINTED_CONNECTOR_TEMPLATE' IN TYPEOF(footprint.reference_package)) OR 
                ('PART_TEMPLATE_2D_SHAPE_ARM.PRINTED_PART_TEMPLATE_INTERFACE_TERMINAL' IN TYPEOF(reference_package_terminal));
      WR4 : NOT ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(footprint)) OR 
      (footprint\Footprint_definition.reference_package = reference_package_terminal.associated_definition);                      
  END_ENTITY;

  ENTITY Padstack_location_in_footprint_definition_transform
  	SUBTYPE OF (Geometric_placement);
      SELF\Geometric_placement_operation.template_definition RENAMED padstack_shape : Padstack_definition_shape;
      footprint_shape                                                               : Footprint_definition_shape;
      reference_location                                                            : Padstack_location_in_footprint_definition;
      SELF\Geometric_placement.target RENAMED transform                             : Axis_placement_2d;
    UNIQUE 
    	UR1 : reference_location;
    WHERE
      WR1: padstack_shape.shape_characterized_definition :=: reference_location.padstack;
      WR2: footprint_shape.shape_characterized_definition :=: reference_location.footprint;      
  END_ENTITY;

  ENTITY Part_feature_based_part_template_location_in_multi_layer_template_definition
    SUBTYPE OF (Part_template_location_in_multi_layer_template_definition);
     SELF\Part_template_location_in_multi_layer_template_definition.assembly : Footprint_definition;
     reference_feature : Part_feature;
    WHERE
     WR1 : TYPEOF(SELF\Part_feature_based_part_template_location_in_multi_layer_template_definition) <> TYPEOF(SELF);
     WR2 : NOT EXISTS(reference_feature) OR 
               (reference_feature\Shape_element.containing_shape :=: assembly\Footprint_definition.reference_package);
     WR3 : NOT EXISTS(reference_feature) OR 
               ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(assembly));
 END_ENTITY;

  ENTITY Part_template_location_in_multi_layer_template_definition
    ABSTRACT SUPERTYPE OF (ONEOF
     (Inter_stratum_feature_template_location_in_multi_layer_template_definition,
     Stratum_specific_part_template_location_in_multi_layer_template_definition) ANDOR
     (Part_feature_based_part_template_location_in_multi_layer_template_definition));
       assembly : Multi_layer_template_definition;
       template : Template_definition;
       reference_designation : STRING;
    INVERSE
       transform : SET [0:1] OF Part_template_location_in_multi_layer_template_definition_transform FOR reference_location;
    UNIQUE
       UR1: assembly, reference_designation;
    WHERE
      WR1 : ((SIZEOF(transform) = 1) AND 
             (SIZEOF(['PART_TEMPLATE_2D_SHAPE_ARM.SNOWBALL_TEMPLATE',
                      'PART_TEMPLATE_2D_SHAPE_ARM.TEARDROP_BY_ANGLE_TEMPLATE',
                      'PART_TEMPLATE_2D_SHAPE_ARM.TEARDROP_BY_LENGTH_TEMPLATE'] * 
              TYPEOF(transform[1].template_shape.shape_characterized_part_template)) = 0)) OR 
            ((SIZEOF(transform) = 0) AND 
             (SIZEOF(['PART_TEMPLATE_2D_SHAPE_ARM.SNOWBALL_TEMPLATE',
                      'PART_TEMPLATE_2D_SHAPE_ARM.TEARDROP_BY_ANGLE_TEMPLATE',
                      'PART_TEMPLATE_2D_SHAPE_ARM.TEARDROP_BY_LENGTH_TEMPLATE'] * TYPEOF(template)) = 1));
  END_ENTITY;

  ENTITY Part_template_location_in_multi_layer_template_definition_transform
    SUBTYPE OF (Geometric_placement);
      SELF\Geometric_placement_operation.template_definition RENAMED template_shape : Part_template_planar_shape_model;
      reference_location : Part_template_location_in_multi_layer_template_definition;
      assembly_shape : Multi_layer_template_definition_shape_model;
      SELF\Geometric_placement.target RENAMED transform : Axis_placement_2d;
    UNIQUE
      UR1 : reference_location;
	WHERE
      WR1: template_shape.shape_characterized_part_template :=: reference_location.template;
      WR2: NOT('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION_SHAPE' IN TYPEOF(assembly_shape)) OR 
         (assembly_shape\Footprint_definition_shape.shape_characterized_definition :=: reference_location.assembly);
      WR3: NOT('PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION_SHAPE' IN TYPEOF(assembly_shape)) OR 
         (assembly_shape\Padstack_definition_shape.shape_characterized_definition :=: reference_location.assembly);
  END_ENTITY;

  ENTITY Part_template_planar_keepout_shape_model
    SUBTYPE OF (Planar_shape,
 			Non_feature_shape_definition,
 			Part_template_keepout_shape_model);
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
	WHERE
   		WR1 : NOT EXISTS (application_technology_constraint) OR (SIZEOF(application_technology_constraint) = 1);
   		WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Part_template_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model, Part_template_shape_model);
  WHERE
    WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Special_symbol_definition
    SUBTYPE OF (Multi_layer_template_definition);
   -- WHERE
   -- WR1: all templates shall be stratum_specific_part....
  END_ENTITY;

  ENTITY Special_symbol_definition_shape
    SUBTYPE OF (Multi_layer_template_definition_shape_model);
     SELF\Multi_layer_template_definition_shape_model.shape_characterized_definition : Special_symbol_definition;
  END_ENTITY;

  ENTITY Stratum_feature_template_location_in_breakout_footprint_definition
    SUBTYPE OF (Stratum_specific_part_template_location_in_multi_layer_template_definition);
      SELF\Part_template_location_in_multi_layer_template_definition.assembly : Breakout_footprint_definition;
      SELF\Part_template_location_in_multi_layer_template_definition.template  : Stratum_feature_template;
      original_padstack : Padstack_location_in_footprint_definition;
      breakout_padstack : Padstack_location_in_footprint_definition;
    WHERE
    -- Both padstacks must point to the same package_terminal
      WR1: original_padstack.reference_package_terminal = breakout_padstack.reference_package_terminal;
    -- original_padstack must belong to Footprint_definition
      WR2: original_padstack.footprint :=: assembly.reference_footprint;
    -- breakout_padstack must belong to Breakout_footprint_definition
      WR3: breakout_padstack.footprint :=: assembly;
    -- breakout padstack should be via padstack (passage_padstack_definition)
    -- Padstack must be of type passage_padstack_definition
    -- VK  WR4: SIZEOF(QUERY(ps <* breakout_padstack | NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PASSAGE_PADSTACK_DEFINITION' IN TYPEOF(ps.padstack)))) = 0;
    -- Passage_technology must be of type default_via_definition for Padstack_definition
    -- VK  WR5: SIZEOF(QUERY(ps <* breakout_padstack | NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DEFAULT_VIA_DEFINITION' IN TYPEOF(ps.padstack\Passage_padstack_definition.technology_reference)))) = 0;    
  END_ENTITY;

  ENTITY Stratum_specific_part_template_location_in_multi_layer_template_definition
  	SUBTYPE OF (Part_template_location_in_multi_layer_template_definition);
      bound_stratum : stratum_technology_occurrence_or_stratum_technology;
    WHERE
      WR1: SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_FEATURE_TEMPLATE',
                   'FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE',
                   'PART_TEMPLATE_2D_SHAPE_ARM.SPECIAL_SYMBOL_DEFINITION'] * TYPEOF(template)) = 1;
      WR2: NOT SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_FEATURE_TEMPLATE'] * TYPEOF(template)) = 1 OR
             ((NOT SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Stratum_feature_template.of_stratum_technology | st :=: bound_stratum)) = 1))
              AND
              (NOT SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Stratum_feature_template.of_stratum_technology | st :=: bound_stratum\Stratum.of_technology)) = 1)));
      WR3: NOT SIZEOF(['FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE'] * TYPEOF(template)) = 1 OR
             ((NOT SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Material_removal_feature_template.of_stratum_technology | st :=: bound_stratum)) = 1))
              AND
              (NOT SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Material_removal_feature_template.of_stratum_technology | st :=: bound_stratum\Stratum.of_technology)) = 1)));
(*               
      WR4: NOT SIZEOF(['PART_TEMPLATE_2D_SHAPE_ARM.SPECIAL_SYMBOL_DEFINITION'] * TYPEOF(template)) = 1 OR
             ((NOT SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Special_symbol_definition.of_stratum_technology | st :=: bound_stratum)) = 1))
              AND
              (NOT SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM'] * TYPEOF(bound_stratum)) = 1 OR
               (SIZEOF(QUERY(st <* template\Special_symbol_definition.of_stratum_technology | st :=: bound_stratum\Stratum.of_technology)) = 1)));
      WR5: NOT('FABRICATION_TECHNOLOGY_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(bound_stratum)) OR
           NOT EXISTS(bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           NOT(bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template));
*)          
      WR6: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_STRATUM' IN TYPEOF(bound_stratum)) OR
           NOT EXISTS(bound_stratum\Documentation_layer_stratum.of_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           NOT (bound_stratum\Documentation_layer_stratum.of_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template));
  END_ENTITY;

  ENTITY Stratum_type_independent_padstack_definition
    SUBTYPE OF (Padstack_definition);
  END_ENTITY;

  FUNCTION get_padstack_arrangement(
    input : SET OF Padstack_location_in_footprint_definition
  ) : padstack_arrangement;

    LOCAL
      pabt : BAG OF STRING := [];
      pabb : BAG OF STRING := [];
      pabs : BAG OF STRING := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input) BY 1;
      IF input[i].padstack.padstack_location = padstack_arrangement.top THEN
        pabt := pabt + 'top';
      END_IF;
      IF input[i].padstack.padstack_location = padstack_arrangement.bottom THEN
        pabb := pabb + 'bottom';
      END_IF;
      IF input[i].padstack.padstack_location = padstack_arrangement.symmetrical THEN
        pabs := pabs + 'symmetrical';
      END_IF;
    END_REPEAT;
    IF (SIZEOF(pabt) > 0) AND (SIZEOF(pabb) = 0) THEN
      RETURN(padstack_arrangement.top);
    END_IF;
    IF (SIZEOF(pabb) > 0) AND (SIZEOF(pabt) = 0) THEN
      RETURN(padstack_arrangement.bottom);
    END_IF;
    IF (SIZEOF(pabb) = 0) AND (SIZEOF(pabt) = 0) AND (SIZEOF(pabs) > 0) THEN
      RETURN(padstack_arrangement.symmetrical);
    END_IF;
    RETURN(?);
  END_FUNCTION;

END_SCHEMA;

