<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-11-25T17:42:50" rcs.revision="1.0" description.file="arm_descriptions.xml">
<application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="physical_unit_2d_design_view_arm schema_instance"/>
<schema name="Physical_unit_2d_design_view_arm">
<interface kind="use" schema="Physical_unit_2d_shape_arm"/>
<interface kind="use" schema="Physical_unit_design_view_arm"/>
<entity name="Assembly_component_2d_shape" supertypes="Planar_projected_shape_model">
<explicit name="shape_characterized_component">
<aggregate type="SET" lower="1" upper="?"/>
<typename name="Assembly_component"/>
</explicit>
<where label="WR1" expression="(SIZEOF(USEDIN(SELF,&#10; 'LAYERED_2D_SHAPE_ARM.' + 'REFERENCE_GEOMETRIC_REPRESENTATION_RELATIONSHIP.' + 'RELATED_FEATURE_SHAPE')) = 0)"/>
</entity>
<entity name="Component_2d_location" supertypes="Contextual_shape_representation Geometric_composition_with_operator_transformation">
<explicit name="placement_fixed">
<builtintype type="BOOLEAN"/>
</explicit>
<explicit name="transformation">
<typename name="Cartesian_transformation_2d"/>
<redeclaration entity-ref="Geometric_relationship_with_operator_transformation"/>
</explicit>
<explicit name="assembly_model">
<typename name="Physical_unit_planar_shape_model"/>
<redeclaration entity-ref="Geometric_model_relationship" old_name="rep_2"/>
</explicit>
<explicit name="component_model">
<typename name="Assembly_component_2d_shape"/>
<redeclaration entity-ref="Geometric_model_relationship" old_name="rep_1"/>
</explicit>
<derived name="component" expression="SELF\Contextual_shape_representation.contextual_shape.described_element">
<typename name="Next_assembly_usage"/>
</derived>
<derived name="substrate_location" expression="substrate_in_assembly(SELF)">
<builtintype type="BOOLEAN"/>
</derived>
<derived name="the_context" expression="assembly_model\Representation.context_of_items">
<typename name="Geometric_coordinate_space"/>
</derived>
<derived name="representing_relationship" expression="SELF">
<typename name="Geometric_model_relationship"/>
<redeclaration entity-ref="Contextual_shape_representation"/>
</derived>
<derived name="relation_type" expression="'component 2d location'">
<builtintype type="STRING"/>
<redeclaration entity-ref="Representation_relationship"/>
</derived>
<where label="WR1" expression="EXISTS (component)"/>
<where label="IP1"/>
<where label="IP2"/>
</entity>
<entity name="Component_part_2d_geometric_representation_relationship" supertypes="Geometric_model_relationship">
<explicit name="part_shape">
<typename name="part_template_or_physical_unit_2d_shape_select"/>
<redeclaration entity-ref="Geometric_model_relationship" old_name="rep_1"/>
</explicit>
<explicit name="component_shape">
<typename name="Assembly_component_2d_shape"/>
<redeclaration entity-ref="Geometric_model_relationship" old_name="rep_2"/>
</explicit>
<where label="WR1" expression="NOT EXISTS(SELF\Representation_relationship.relation_type)"/>
</entity>
<rule name="unique_assembly_component_2d_shape" appliesto="Assembly_component_2d_shape">
<algorithm>LOCAL
     ac : SET OF Assembly_component := [];
     pass : BOOLEAN := TRUE;
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_2d_shape) by 1;
     ac  := ac + Assembly_component_2d_shape[i].shape_characterized_component;
   END_REPEAT;  
   REPEAT i := 1 to SIZEOF(ac) by 1;
     IF (SIZEOF(USEDIN(ac[i],
       'PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE.SHAPE_CHARACTERIZED_COMPONENT')) &lt;&gt; 1) THEN 
       pass := FALSE;
       ESCAPE;
     END_IF;
   END_REPEAT;</algorithm>
<where label="WR1" expression="pass"/>
</rule>
<function name="bag_to_set">
<parameter name="the_bag">
<aggregate type="BAG" lower="0" upper="?"/>
<builtintype type="GENERIC"/>
</parameter>
<aggregate type="SET" lower="0" upper="?"/>
<builtintype type="GENERIC"/>
<algorithm>LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);</algorithm>
</function>
<function name="substrate_in_assembly">
<parameter name="c2dl">
<typename name="Component_2d_location"/>
</parameter>
<builtintype type="BOOLEAN"/>
<algorithm>RETURN(TRUE);</algorithm>
</function>
</schema>
</express>
