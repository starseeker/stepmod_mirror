<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:31" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="physical_unit_2d_design_view_mim schema_instance"/>
   <schema name="PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM">
      <interface kind="use" schema="LAYERED_2D_SHAPE_MIM"/>
      <interface kind="use" schema="PHYSICAL_UNIT_DESIGN_VIEW_MIM"/>
      <interface kind="use" schema="ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_MIM"/>
      <interface kind="use" schema="PHYSICAL_UNIT_2D_SHAPE_MIM"/>
      <interface kind="reference" schema="PHYSICAL_UNIT_USAGE_VIEW_MIM">
         <interfaced.item name="is_laminate_component"/>
      </interface>
      <interface kind="reference" schema="PHYSICAL_UNIT_DESIGN_VIEW_MIM">
         <interfaced.item name="is_interconnect_module_occurrence"/>
      </interface>
      <interface kind="reference" schema="SUPPORT_RESOURCE_SCHEMA">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <entity name="component_2d_location" supertypes="context_dependent_shape_representation shape_representation_relationship representation_relationship_with_transformation definitional_representation_relationship"/>
      <rule name="component_part_2d_geometric_representation_relationship_constraint" appliesto="shape_representation_relationship">
         <algorithm> local rr : set of representation_relationship := query ( srr &lt;* shape_representation_relationship | srr \ representation_relationship . name = 'component part planar shape' ) ; pass : boolean := true ; grc1 : geometric_representation_context := ? ; grc2 : geometric_representation_context := ? ; end_local ; repeat i := 1 to sizeof ( rr ) by 1 ; grc1 := rr [ i ] . rep_1 . context_of_items ; grc2 := rr [ i ] . rep_2 . context_of_items ; if ( ( grc1 . coordinate_space_dimension ) &lt;&gt; ( grc2 . coordinate_space_dimension ) ) then pass := false ; end_if ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <function name="component_definition_located_by_component_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <typename name="component_definition"/>
         <algorithm> local pdr : bag of property_definition_representation := usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ; pd : property_definition := ? ; end_local ; repeat i := 1 to hiindex ( pdr ) by 1 ; if ( 'product_property_definition_schema.' + 'property_definition' in typeof ( pdr [ i ] . definition ) ) then pd := pdr [ i ] . definition ; if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pd . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'component_definition' in typeof ( pd . definition \ product_definition_relationship . related_product_definition ) ) ) then return ( pd . definition \ product_definition_relationship . related_product_definition ) ; end_if ; end_if ; end_repeat ; return ( ? ) ; </algorithm>
      </function>
      <function name="cto2d_determinant_test">
         <parameter name="cto2d">
            <typename name="cartesian_transformation_operator_2d"/>
         </parameter>
         <parameter name="expected_value">
            <builtintype type="REAL"/>
         </parameter>
         <parameter name="delta">
            <builtintype type="REAL"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local det : real := 0.0 ; drs : list [ 4 : 4 ] of real := [ ] ; end_local ; drs [ 1 ] := cto2d . u [ 1 ] . direction_ratios [ 1 ] ; drs [ 2 ] := cto2d . u [ 1 ] . direction_ratios [ 2 ] ; drs [ 3 ] := cto2d . u [ 2 ] . direction_ratios [ 1 ] ; drs [ 4 ] := cto2d . u [ 2 ] . direction_ratios [ 2 ] ; det := ( drs [ 1 ] * drs [ 4 ] ) - ( drs [ 2 ] * drs [ 3 ] ) ; if ( abs ( expected_value - det ) &lt; abs ( delta ) ) then return ( true ) ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_bottom_footprint_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'footprint_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'footprint_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'bottom' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_bottom_footprint_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_bottom_footprint_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_bottom_padstack_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'padstack_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'padstack_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'bottom' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_bottom_padstack_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_bottom_padstack_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_interconnect_module_component_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_interconnect_module_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_laminate_component_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_laminate_component ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_symmetrical_footprint_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'footprint_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'footprint_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'symmetrical' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_symmetrical_footprint_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_symmetrical_footprint_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_symmetrical_padstack_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'padstack_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'padstack_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'symmetrical' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_symmetrical_padstack_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_symmetrical_padstack_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_top_footprint_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'footprint_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'footprint_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'top' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_top_footprint_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_top_footprint_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
      <function name="is_top_padstack_occurrence">
         <parameter name="pd">
            <typename name="product_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pds : set of property_definition := bag_to_set ( usedin ( pd , 'physical_unit_2d_design_view_mim.' + 'property_definition.definition' ) ) ; fo : set of shape_aspect := [ ] ; sar : set of shape_aspect_relationship := [ ] ; dri : set of descriptive_representation_item := [ ] ; pdr : set of property_definition_representation := [ ] ; pass : boolean := false ; end_local ; repeat i := 1 to sizeof ( pds ) by 1 ; fo := fo + bag_to_set ( query ( sa &lt;* ( usedin ( pds [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect.of_shape' ) ) | 'physical_unit_2d_design_view_mim.' + 'padstack_occurrence' in typeof ( sa ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( fo ) by 1 ; sar := sar + bag_to_set ( query ( sar &lt;* ( usedin ( fo [ i ] , 'physical_unit_2d_design_view_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'padstack_definition' in typeof ( sar . relating_shape_aspect . of_shape . definition ) ) and ( 'usage definition' = sar \ shape_aspect_relationship . name ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( sar ) by 1 ; pdr := pdr + bag_to_set ( query ( pdr &lt;* ( usedin ( sar [ i ] . relating_shape_aspect . of_shape . definition , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.definition' ) ) | ( 'physical_unit_2d_design_view_mim.' + 'representation' in typeof ( pdr . used_representation ) ) and ( pdr . used_representation \ representation . name = 'product definition context description' ) ) ) ; end_repeat ; repeat i := 1 to sizeof ( pdr ) by 1 ; dri := dri + ( query ( dri &lt;* pdr [ i ] . used_representation . items | ( 'physical_unit_2d_design_view_mim.' + 'descriptive_representation_item' in typeof ( dri ) ) and ( dri \ representation_item . name = 'text' ) and ( dri . description = 'top' ) ) ) ; end_repeat ; if ( sizeof ( dri ) = 1 ) then return ( true ) ; end_if ; return ( pass ) ; </algorithm>
      </function>
      <function name="is_top_padstack_occurrence_location">
         <parameter name="cl">
            <typename name="component_2d_location"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> local pdrs : set of property_definition_representation := bag_to_set ( usedin ( cl , 'physical_unit_2d_design_view_mim.' + 'property_definition_representation.used_representation' ) ) ; end_local ; if sizeof ( pdrs ) = 1 then if ( ( 'physical_unit_2d_design_view_mim.' + 'next_assembly_usage_occurrence' in typeof ( pdrs [ 1 ] . definition . definition ) ) and ( 'physical_unit_2d_design_view_mim.' + 'assembly_group_component_definition' in typeof ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) and is_top_padstack_occurrence ( pdrs [ 1 ] . definition . definition . related_product_definition ) ) then return ( true ) ; else return ( false ) ; end_if ; else return ( false ) ; end_if ; </algorithm>
      </function>
   </schema>
</express>
