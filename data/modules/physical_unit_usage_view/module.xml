<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.14 2005/01/19 14:26:02 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="physical_unit_usage_view" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/01/19 14:26:02 $" rcs.revision="$Revision: 1.14 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, part, usage, feature, template, shape, connection zone
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of part in its next assembly with sufficient detail to
     allow its use but without sufficient detail to permit its reproduction.
     The representation of distinctive aspects of part that partially support
     the choice of that part in the design.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>identification of a part usage in it's next assembly;</li>
   <li>identification of a distinctive aspect of a part;</li>
   <li>identification of a definition of a part's feature template;</li>
		<li>items within the scope of Analytical_model_arm;</li>
		<li>items within the scope of Feature_and_connection_zone_arm;</li>
		<li>items within the scope of Item_definition_structure_arm;</li>
		<li>items within the scope of Part_feature_location_arm;</li>
		<li>items within the scope of Part_view_definition_arm;</li>
		<li>items within the scope of Requirement_assignment_arm;</li>
		<li>items within the scope of Shape_composition_arm;</li>
		<li>items within the scope of Shape_property_assignment_arm.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>identification of sufficient detail to permit reproduction of a part.</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
   <imgfile file="armexpg3.xml"/>   
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>

		<ae entity="Specification_allocation" original_module="specification_document">
			<aa attribute="target_product_object" assertion_to="Part_feature">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="specification_product_object_select">
					document_reference_item
					document_reference_item = shape_aspect
					shape_aspect
					{([shape_aspect =&gt;
					composite_shape_aspect]
					[shape_aspect
					shape_aspect.description = 'part group feature'])
					(shape_aspect.description = 'part generic feature')
					(shape_aspect.description = 'polarity indication feature')
					(shape_aspect.description = 'interconnect module cavity surface')
					(shape_aspect.description = 'interconnect module cutout surface')
					(shape_aspect.description = 'interconnect module edge segment surface')
					(shape_aspect.description = 'interconnect module edge surface')
					(shape_aspect.description = 'interconnect module primary surface')
					(shape_aspect.description = 'interconnect module secondary surface')
					(shape_aspect.description = 'interconnect module surface feature')
					(shape_aspect =&gt;
					primary_orientation_feature)
					(shape_aspect =&gt;
					secondary_orientation_feature)
					(shape_aspect =&gt; 
					package_body)
					(shape_aspect =&gt; 
					part_tooling_feature)
					(shape_aspect =&gt;
					functional_orientation_feature)
					(shape_aspect =&gt; 
					thermal_feature)
					(shape_aspect =&gt; 
					part_mounting_feature)
					(shape_aspect =&gt; 
					package_terminal)
					(shape_aspect =&gt; 
					assembly_module_terminal)
					(shape_aspect =&gt; 
					interconnect_module_terminal)
					(shape_aspect =&gt; 
					minimally_defined_bare_die_terminal)
					(shape_aspect =&gt; 
					packaged_part_terminal)
					(shape_aspect =&gt; 
					package_body_surface)}
				</refpath_extend>
            </aa>
		</ae>
	
    <ae entity="Connection_zone_in_usage_view" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect</aimelt>
            <source xml:space="preserve">ISO 10303-43</source>
            <refpath xml:space="preserve">{shape_aspect
shape_aspect.name = 'connection zone'}
</refpath>
            <aa attribute="associated_definition" assertion_to="Part_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve"> shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage'}
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>   
 <ae entity="Connection_zone_map_identification" extensible="NO">
            <aimelt xml:space="preserve">connection_zone_map_identification</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{connection_zone_map_identification &lt;=
[representation_relationship]
[shape_aspect]}
{connection_zone_map_identification &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
footprint_definition}
</refpath>
            <aa attribute="reference_connection_zone_shape" assertion_to="Usage_view_connection_zone_terminal_shape_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">connection_zone_map_identification &lt;=
representation_relationship
representation_relationship.rep_1 -&gt;
representation =&gt;
usage_view_connection_zone_terminal_shape_relationship
</refpath>
            </aa>
            <aa attribute="mapped_connection_zone_shape" assertion_to="Usage_view_connection_zone_terminal_shape_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">connection_zone_map_identification &lt;=
representation_relationship
representation_relationship.rep_2 -&gt;
representation =&gt;
usage_view_connection_zone_terminal_shape_relationship
</refpath>
            </aa>
        </ae>
    <ae entity="Usage_view_connection_zone_terminal_shape_relationship" extensible="NO">
            <aimelt xml:space="preserve">usage_view_connection_zone_terminal_shape_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{[usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation]
[usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation
representation_relationship_with_transformation.name = 'usage view connection zone terminal shape relationship']
[usage_view_connection_zone_terminal_shape_relationship &lt;=
representation]}
</refpath>
            <aa attribute="associated_usage_placement" assertion_to="Axis_placement">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation
representation_relationship_with_transformation.transformation_operator -&gt;
transformation
transformation = item_defined_transformation
item_defined_transformation.transform_item_1 -&gt;
representation_item =&gt;
geometric_representation_item =&gt;
placement
</refpath>
            </aa>
            <aa attribute="associating_terminal_shape" assertion_to="Geometric_model">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation &lt;=
representation_relationship
representation_relationship.rep_1 -&gt;
representation =&gt;
shape_representation
</refpath>
            </aa>
            <aa attribute="associated_usage" assertion_to="Connection_zone_in_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation &lt;=
representation_relationship
representation_relationship.rep_2 -&gt;
{representation
representation.name = 'zone shape'}
{representation =&gt;
shape_representation}
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect
{shape_aspect
shape_aspect.description = 'connection zone'}
</refpath>
            </aa>
            <aa attribute="associated_connection_zone_shape_definition" assertion_to="Geometric_model">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">usage_view_connection_zone_terminal_shape_relationship &lt;=
representation_relationship_with_transformation &lt;=
representation_relationship
representation_relationship.rep_2 -&gt;
{representation
representation.name = 'zone shape'}
representation =&gt;
shape_representation
</refpath>
            </aa>
        </ae>
    <ae entity="Part_feature_template_shape_definition" extensible="NO">
            <aimelt xml:space="preserve">shape_representation</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_representation &lt;=
[representation
representation.description = 'part feature template shape definition']
[representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
part_feature_template_definition]}
			</refpath>
			<aa attribute="shape_characterized_template" assertion_to="Part_feature_template_definition">
			<aimelt xml:space="preserve">PATH</aimelt>
			<refpath xml:space="preserve">
				shape_representation &lt;=
				representation &lt;-
				property_definition_representation.used_representation
				property_definition_representation
				property_definition_representation.definition -&gt;
				property_definition
				property_definition.definition -&gt;
				characterized_definition = characterized_product_definition
				characterized_product_definition = product_definition
				product_definition =&gt;
				part_feature_template_definition
				</refpath>
			</aa>
        </ae>
    <ae entity="Part_feature_template_definition" extensible="NO">
            <aimelt xml:space="preserve">part_feature_template_definition</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">part_feature_template_definition &lt;=
product_definition
{[product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name = 'template model']
[product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'design usage']}
</refpath>
<!-- TOO COMPLEX to change - there's no way
            <aa attribute="bound_parameters" assertion_to="Independent_property_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">part_feature_template_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
{property_definition_representation
property_definition_representation.name = 'bound parameters'}
property_definition_representation.used_representation -&gt;
representation.items[i] -&gt;
representation_item =&gt;
model_parameter_relationship
</refpath>
            </aa> -->
        </ae>
    <ae entity="Part_usage_view" extensible="NO">
            <aimelt xml:space="preserve">physical_unit</aimelt>
            <source xml:space="preserve">ISO 10303-210 210 210</source>
            <refpath xml:space="preserve">physical_unit &lt;=
product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage'}
</refpath>
        </ae>
    <ae entity="Part_feature_make_from_relationship" extensible="NO">
            <aimelt xml:space="preserve">make_from_part_feature_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{[make_from_part_feature_relationship &lt;=
shape_aspect_relationship]
[make_from_part_feature_relationship &lt;=
shape_aspect]}
</refpath>
            <aa attribute="associated_make_from" assertion_to="View_definition_relationship">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">make_from_part_feature_relationship &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition 
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition_relationship
product_definition_relationship 
</refpath>
            </aa>
            <aa attribute="reusable_feature" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">make_from_part_feature_relationship &lt;=
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt;
package_body)
(shape_aspect =&gt;
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt;
thermal_feature)
(shape_aspect =&gt;
part_mounting_feature)
(shape_aspect =&gt;
package_terminal)
(shape_aspect =&gt;
assembly_module_terminal)
(shape_aspect =&gt;
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal)
(shape_aspect =&gt;
packaged_part_terminal)
(shape_aspect =&gt;
package_body_surface)}
</refpath>
            </aa>
            <aa attribute="resultant_feature" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">make_from_part_feature_relationship &lt;=
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt;
package_body)
(shape_aspect =&gt;
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt;
thermal_feature)
(shape_aspect =&gt;
part_mounting_feature)
(shape_aspect =&gt;
package_terminal)
(shape_aspect =&gt;
assembly_module_terminal)
(shape_aspect =&gt;
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal)
(shape_aspect =&gt;
packaged_part_terminal)
(shape_aspect =&gt;
package_body_surface)}
</refpath>
            </aa>
        </ae>
    <ae entity="Part_feature" extensible="NO">
            <aimelt xml:space="preserve">(shape_aspect) (composite_shape_aspect) (primary_orientation_feature) (secondary_orientation_feature) (package_body) (part_tooling_feature) (functional_orientation_feature) (thermal_feature) (part_mounting_feature) (package_terminal) (assembly_module_terminal) (bare_die_terminal) (interconnect_module_terminal) (minimally_defined_bare_die_terminal) (packaged_part_terminal) (package_body_surface)</aimelt>
            <source xml:space="preserve">ISO 10303-41 210</source>
            <refpath xml:space="preserve">(composite_shape_aspect &lt;=
shape_aspect
shape_aspect.description = 'part group feature')
(shape_aspect
(shape_aspect.description = 'part generic feature')

(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature'))
(primary_orientation_feature &lt;=
physical_unit_datum_feature &lt;=
shape_aspect)
(secondary_orientation_feature &lt;=
physical_unit_datum_feature &lt;=
shape_aspect)
(package_body &lt;=
shape_aspect)
(part_tooling_feature &lt;=
shape_aspect)
(functional_orientation_feature &lt;=
shape_aspect)
(thermal_feature &lt;=
shape_aspect)
(part_mounting_feature &lt;=
shape_aspect)
(package_terminal &lt;=
shape_aspect)
(assembly_module_terminal &lt;=
shape_aspect)
(interconnect_module_terminal &lt;=
shape_aspect)
(bare_die_terminal &lt;=
minimally_defined_bare_die_terminal &lt;=
shape_aspect)
(minimally_defined_bare_die_terminal &lt;=
shape_aspect)
(packaged_part_terminal &lt;=
shape_aspect)
(package_body_surface &lt;=
shape_aspect)
</refpath>
            <aa attribute="material_state_change">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt;
package_body)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt;
part_tooling_feature)
(shape_aspect =&gt;
thermal_feature)
(shape_aspect =&gt;
part_mounting_feature)
(shape_aspect =&gt;
package_terminal)
(shape_aspect =&gt;
assembly_module_terminal)
(shape_aspect =&gt;
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal)
(shape_aspect =&gt;
packaged_part_terminal)
(shape_aspect =&gt;
package_body_surface)}
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
{[representation
representation.name = 'material state change']
[representation
representation.items[i] -&gt;
representation_item 
{(representation_item.name = 'material addition')
(representation_item.name = 'material removal')}]}
</refpath>
            </aa>
            <aa attribute="precedent_feature" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt;
package_body)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt;
part_tooling_feature)
(shape_aspect =&gt;
thermal_feature)
(shape_aspect =&gt;
part_mounting_feature)
(shape_aspect =&gt;
package_terminal
{!{package_terminal =&gt;
primary_reference_terminal}})
(shape_aspect =&gt;
assembly_module_terminal)
(shape_aspect =&gt;
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal)
(shape_aspect =&gt;
packaged_part_terminal)
(shape_aspect =&gt;
package_body_surface)}
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'precedent feature'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt;
package_body)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt;
part_tooling_feature)
(shape_aspect =&gt;
thermal_feature)
(shape_aspect =&gt;
part_mounting_feature)
(shape_aspect =&gt;
package_terminal)
(shape_aspect =&gt;
assembly_module_terminal)
(shape_aspect =&gt;
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal)
(shape_aspect =&gt;
packaged_part_terminal)
(shape_aspect =&gt;
package_body_surface)}
</refpath>
            </aa>
            <aa attribute="associated_definition" assertion_to="Part_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
physical_unit_datum_feature =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
functional_orientation_feature)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt;
minimally_defined_bare_die_terminal =&gt; 
bare_die_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)}
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
{{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage'}
product_definition =&gt;
physical_unit}
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>          
   </express-g>
 </mim>

</module>
