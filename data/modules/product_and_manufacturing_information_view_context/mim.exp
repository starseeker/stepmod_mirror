(*
   $Id: mim.exp,v 1.13 2012/10/13 22:39:21 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N7934 - ISO/TS - 10303-1810 Product and manufacturing information view context - EXPRESS MIM
   Supersedes ISO TC184/SC4/WG12 N7371
*)

SCHEMA Product_and_manufacturing_information_view_context_mim;

USE FROM Part_view_definition_mim; -- ISO/TS 10303-1023
USE FROM Document_assignment_mim; -- ISO/TS 10303-1122

USE FROM basic_attribute_schema(role_association); -- ISO 10303-41

TYPE pamivc_document_reference_item = SELECT BASED_ON document_reference_item WITH (
  product_definition_context);
END_TYPE;

RULE valid_product_and_manufacturing_information_view_contexts FOR (product_definition_context);
LOCAL
  design_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.life_cycle_stage = 'design');
  gdt_representation_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'geometrical dimensioning and tolerancing representation');
  machining_feature_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'machining feature');
  material_specification_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'material specification');
  model_based_3d_annotation_presentation_view_contexts  : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'model based 3D annotation presentation');
  model_based_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'model based product geometry');
  process_state_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'process state');
  surface_finish_view_contexts : SET OF product_definition_context :=
    QUERY( pdc <* product_definition_context | pdc.frame_of_reference.application = 'surface finish');
  additional_view_contexts : SET OF product_definition_context :=
         gdt_representation_view_contexts + machining_feature_view_contexts + material_specification_view_contexts +
         model_based_3d_annotation_presentation_view_contexts + process_state_view_contexts + surface_finish_view_contexts;
  need_initial_model_based_view_contexts : SET OF product_definition_context :=
    gdt_representation_view_contexts + model_based_3d_annotation_presentation_view_contexts;
END_LOCAL;

WHERE
  WR1: SIZEOF(gdt_representation_view_contexts * design_view_contexts) = SIZEOF(gdt_representation_view_contexts);
  WR2: SIZEOF(machining_feature_view_contexts * design_view_contexts) = SIZEOF(machining_feature_view_contexts);
  WR3: SIZEOF(material_specification_view_contexts * design_view_contexts) = SIZEOF(material_specification_view_contexts);
  WR4: SIZEOF(model_based_3d_annotation_presentation_view_contexts * design_view_contexts) = SIZEOF(model_based_3d_annotation_presentation_view_contexts);
  WR5: SIZEOF(model_based_view_contexts * design_view_contexts) = SIZEOF(model_based_view_contexts);
  WR6: SIZEOF(process_state_view_contexts * design_view_contexts) = SIZEOF(process_state_view_contexts);
  WR7: SIZEOF(surface_finish_view_contexts * design_view_contexts) = SIZEOF(surface_finish_view_contexts);
  WR8: -- not used as additional_contexts
       SIZEOF(QUERY(mbvc <* model_based_view_contexts |
        (SIZEOF(USEDIN(mbvc, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.FRAME_OF_REFERENCE')) = 0)
        )) = SIZEOF(model_based_view_contexts);
  WR9: -- not used as initial_context
       SIZEOF(QUERY(avc <* additional_view_contexts |
        (SIZEOF(USEDIN(avc, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION.FRAME_OF_REFERENCE')) = 0)
       )) = SIZEOF(additional_view_contexts);
  WR10: -- initial_context shall have a Model_based_view_context
       SIZEOF(QUERY(nimbvc <* need_initial_model_based_view_contexts | NOT
        (SIZEOF(QUERY(pdca <* USEDIN(nimbvc, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.FRAME_OF_REFERENCE') | 
         (pdca\product_definition_context_association.definition\product_definition.frame_of_reference IN model_based_view_contexts)))     
        =
        SIZEOF(need_initial_model_based_view_contexts))
       )) = 0;
  WR11:  -- gdt_representation_view_contexts must have at least either ISO 1101 or ASME Y14.5 as associated dimension standard document
	SIZEOF ( QUERY( gdt_pdc <* gdt_representation_view_contexts |
  	         	SIZEOF(['ISO 1101', 'ASME Y14.5'] * get_associated_mandatory_document_ids(gdt_pdc) ) = 0 )
  	       ) = 0;          
  WR12: -- model_based_3d_annotation_presentation_view_contexts must have at least either ISO 1101, ISO 16792, ASME Y14.41 or ASME Y14.5 as associated model standard document
	SIZEOF ( QUERY( mb3d_pdc <* model_based_3d_annotation_presentation_view_contexts |
  	             SIZEOF(['ISO 1101', 'ISO 16792', 'ASME Y14.41', 'ASME Y14.5'] * get_associated_mandatory_document_ids(mb3d_pdc) ) = 0)         
  	       ) = 0;          
END_RULE;

FUNCTION get_associated_mandatory_document_ids(pdc : product_definition_context) : SET OF STRING;
	LOCAL
		result : SET OF STRING := [];
		adrs_raw : SET OF applied_document_reference := bag_to_set(USEDIN(pdc, 'DOCUMENT_ASSIGNMENT_MIM.APPLIED_DOCUMENT_REFERENCE.ITEMS'));
		adrs_filtered : SET OF applied_document_reference := [];
		ras : SET OF role_association; 
		dpas : SET OF document_product_association;
	END_LOCAL;

	-- scan adrs_raw for associated role 'mandatory' and fill adrs_filtered with results
	REPEAT i := 1 TO HIINDEX(adrs_raw);
		ras := bag_to_set(USEDIN(adrs_raw[i], 'BASIC_ATTRIBUTE_SCHEMA.ROLE_ASSOCIATION.ITEM_WITH_ROLE'));
		REPEAT j := 1 TO HIINDEX(ras);
			IF ras[j]\role_association.role\object_role.name = 'mandatory' THEN
				adrs_filtered := adrs_filtered + adrs_raw[i];
			END_IF;	
		END_REPEAT;
	END_REPEAT;
	
	-- scan through adrs_filtered and access associated product.id s
	REPEAT i := 1 TO HIINDEX(adrs_filtered);
		dpas := bag_to_set(USEDIN(adrs_filtered[i]\document_reference.assigned_document, 'DOCUMENT_SCHEMA.DOCUMENT_PRODUCT_ASSOCIATION.RELATING_DOCUMENT'));
		REPEAT j := 1 TO HIINDEX(dpas);
			IF 'DOCUMENT_ASSIGNMENT_MIM.DOCUMENT_PRODUCT_EQUIVALENCE' IN TYPEOF (dpas[j]) THEN
			   IF 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_FORMATION' IN TYPEOF (dpas[j]\document_product_association.related_product) THEN
			   		result := result + dpas[j]\document_product_association.related_product\product_definition_formation.of_product\product.id;
			   END_IF;
			   IF 'PRODUCT_DEFINITION_SCHEMA.PRODUCT' IN TYPEOF (dpas[j].related_product) THEN
			   		result := result + dpas[j]\document_product_association.related_product\product.id;
			   END_IF;
			END_IF;	
		END_REPEAT;
	END_REPEAT;
	
	RETURN (result);
END_FUNCTION;


END_SCHEMA;
