<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.18 2002/09/27 14:51:22 robbod Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<module
   name="product_breakdown"
   part="1248"
   version="1"
   status="CD-TS"
   wg.number="1372"
   wg.number.arm="1373"
   wg.number.mim="1374"
   wg.number.ballot_package=""
   wg.number.ballot_comment=""
   checklist.internal_review="1378"
   checklist.project_leader="1379"
   checklist.convener="1380"
   language="E"
   publication.year="2003"
   published="n"
   rcs.date="$Date: 2002/09/27 14:51:22 $"
   rcs.revision="$Revision: 1.18 $"
  development.folder="dvlp"
>

 <keywords>
    module
 </keywords>

 <contacts>
   <projlead ref="plcs.projlead"/>
   <editor ref="timking"/>
 </contacts>

 <purpose>
   <p>
     The Product breakdown application module supports the requirement to
     identify various breakdowns of products.  A breakdown is a partitioning of
     a product into a set of related elements to support engineering, analysis
     and other activities that may be performed in relation to the product.
     These breakdowns are explicit, parent-child views that consist of the
     product elements.
     These views are:
     <ul>
       <li>functional;</li>
       <li>physical;</li>
       <li>system;</li>
       <li>zonal;</li>
       <li>hybrid;</li>
       <li>user-defined.</li>
     </ul>
   </p>
   <p>
These views are complementary to the assembly structure and bill of materials views that are the primary focus for manufacturing (realization) of a product (see <module_ref linkend="part_definition_relationship:introduction"> Part definition relationship</module_ref>).
Breakdowns may be of designs or realized individual products. For any product, more than one breakdown may exist to support various different engineering activities.
</p>
<example number="1">
Both the MSG3 and RCMII reliability-centred maintenance methods require a functional breakdown of the product to be analyzed.
</example>
<example number="2">
Damage control onboard ships requires a zonal breakdown.
</example>
<p>
A <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown"/> is also a <express_ref linkend="product_identification:arm:Product_identification_arm.Product"/> and, thus, has identification and may have versions (<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_version"/>).
</p>

<p>
  Each version of a Breakdown (<express_ref
  linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_version"/>)
is related to the product that is the subject of the breakdown through
<express_ref
  linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_of"/>.  
</p>

<p>
  The constituent components of a breakdown are represented by 
  <express_ref
    linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>s.
</p>
<p>
  A <express_ref
  linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>
may appear in one or more breakdowns and is a 
<express_ref
  linkend="product_identification:arm:Product_identification_arm.Product"/>
with identification, versions (<express_ref
linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_version"/>)
and views (<express_ref
linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_definition"/>)
of those versions.  
</p>
<p>
A <express_ref
linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_usage"/>
identifies the parent-child relationship between a pair of <express_ref
linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>
instances in the context of the relevant breakdown.  The complete breakdown
hierarchy consists of a tree of <express_ref
linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_usage"/>
instances.
	</p>
	<p>
<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Functional_element"/>, <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Physical_element"/>, <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.System_element"/> and <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Zone_element"/> are all types of <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>.
	</p>
	<p>
This application model also supports the requirement to identify the product or relationship between products that is the realization of a <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>.  A <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_realization"/> instance provides this identification.  A further requirement is to identify products that exist in a zone (<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Zone_element"/>).  An <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.In_zone"/> instance provides this identification. 
	</p>

 </purpose>

 <inscope>
   <li>
     the identification of the breakdowns of a product or product_as_individual;
   </li>

   <li>
     the identification of the type of a breakdown as:
     <ul>
       <li>functional;</li>
       <li>physical;</li>
       <li>system;</li>
       <li>zonal;</li>
       <li>hybrid;</li>
       <li>user-defined.</li>
     </ul>
   </li>

   <li>
     the identification of the elements that comprise the breakdown;
   </li>
   
   <li>
     the identification of parent-child relationships between breakdown elements;
   </li>

   <li>
     the relationships between elements in different breakdowns.
   </li>

   <li>
     the representation of how a breakdown element is realized by a product;
     <example>
       The functional breakdown element 'provide power' is realized by
       the 'gas turbine' product.
     </example>
   </li>
   <li>
     the identification of the items within a zone;  
   </li>

</inscope>

 <outscope>
   <li>
     assembly product structure;
   </li>
   <li>
     decomposition of requirements;
   </li>
   <li>
     all product views whose components have no parent-child 
     relationship;
   </li>
   <li>
     product lists such as bill of materials.
   </li>

 </outscope>

 <normrefs>
   <normref.inc normref="ref10303-41.2000"/>
 </normrefs>


 <definition>
   <term id="breakdown">breakdown</term>
   <def>
     A breakdown is a partitioning of a product into a set of related
     elements to support engineering, analysis and other activities that may be
performed in relation to the product.  These breakdowns are explicit,
parent-child views of the product elements.  
   </def>

 </definition>

<!--
 <abbreviations/>
-->

 <arm>
   <uof name="Breakdown">
    <description>The Breakdown UoF specifies the definitional information for the concepts of breakdown identification and relationships between breakdown elements.</description>
    <uof.ae entity="Breakdown" />
    <uof.ae entity="Breakdown_element_usage" />
    <uof.ae entity="Breakdown_of" />
    <uof.ae entity="Breakdown_version" />
   </uof>
   
   <uof name="Breakdown_Element_Realization">
    <description>The Breakdown_Element_Usage UoF specifies the definitional information for the concept of identification of the way in which a breakdown element is realized.</description>
    <uof.ae entity="Breakdown_element_realization" />
   </uof>
   
   <uof name="Functional_Breakdown">
    <description>The Functional_Breakdown UoF specifies the the definitional information for the concepts of breakdown views according to the behaviour or action of a product.</description>
    <uof.ae entity="Functional_element" />
    <uof.ae entity="Functional_element_definition" />
    <uof.ae entity="Functional_element_version" />
   </uof>

   <uof name="Physical_Breakdown">
    <description>The Physical_Breakdown UoF specifies the definitional information for the concepts of breakdown views according to the physical realization of a product.</description>
    <uof.ae entity="Physical_element" />
    <uof.ae entity="Physical_element_definition" />
    <uof.ae entity="Physical_element_version" />
   </uof>

   <uof name="System_Breakdown">
    <description>The System_Breakdown UoF specifies the definitional information for the concepts of system breakdown views according to the system hierarchy of a product.</description>
    <uof.ae entity="System_element" />
    <uof.ae entity="System_element_definition" />
    <uof.ae entity="System_element_version" />
   </uof>

   <uof name="Zonal_Breakdown">
    <description>The Zonal_Breakdown UoF specifies the definitional information for the concepts of breakdown views according to the spatial layout of a product.</description>
    <uof.ae entity="In_zone" />
    <uof.ae entity="Zone_element" />
    <uof.ae entity="Zone_element_definition" />
    <uof.ae entity="Zone_element_version" />
   </uof>

   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
    </express-g>
 </arm>

 <mapping_table>
   <ae entity="Breakdown">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown'}</refpath>
   </ae>

   <ae entity="Breakdown_context">
     <aimelt>breakdown_context</aimelt>
     <source>ISO 10303-1248</source>
     <refpath>breakdown_context &lt;=
product_definition_relationship</refpath>
   <aa attribute="description">
     <aimelt>product_definition_relationship.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_context &lt;=
product_definition_relationship
product_definition_relationship.description</refpath>
   </aa>
   <aa attribute="id">
     <aimelt>product_definition_relationship.id</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_context &lt;=
product_definition_relationship
product_definition_relationship.id</refpath>
   </aa>
   <aa attribute="name">
     <aimelt>product_definition_relationship.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_context &lt;=
product_definition_relationship
product_definition_relationship.name</refpath>
   </aa>
     <aa attribute="breakdown" assertion_to="Breakdown_version">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown'}</refpath>
   </aa>
     <aa attribute="breakdown_element" assertion_to="Breakdown_element_definition">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_context &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
(product_category.name='breakdown element')
(product_category.name='conceptual product')
(product_category.name='functionality')
(product_category.name='system element')
(product_category.name='zone element')}</refpath>
   </aa>
   </ae>

   <ae entity="Breakdown_element">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown element'}</refpath>
   </ae>

   <ae entity="Breakdown_element_definition">
     <aimelt>product_definition</aimelt>
     <source>ISO 10303-41</source>
     <refpath>{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;= application_context_element
application_context_element.name = 'breakdown element definition'}</refpath>
     <aa attribute="defined_version" assertion_to="Breakdown_element_version">
     <aimelt>PATH</aimelt>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown element'}</refpath>
   </aa>
   </ae>

   <ae entity="Breakdown_element_realization">
   <alt_map id="1">
     <description>When Breakdown_element is realized as a product.</description>
     <aimelt>breakdown_element_realization</aimelt>
     <source>ISO 10303-1248</source>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship</refpath>
   </alt_map>
   <alt_map id="2">
     <description>When Breakdown_element is realized as a relationship between products.</description>
     <aimelt>[applied_group_assignment]
[group]
[id_attribute]</aimelt>
     <source>ISO 10303-1248 
ISO 10303-41
ISO 10303-41</source>
     <refpath>applied_group_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
group
group = id_attribute_select &lt;-
id_attribute.identified_item
id_attribute</refpath>
   </alt_map>
   <aa attribute="description">
   <alt_map alt_map.inc="1">
     <aimelt>product_definition_relationship.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship
product_definition_relationship.description</refpath>
   </alt_map>
   <alt_map alt_map.inc="2">
     <aimelt>group.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>applied_group_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
group
group.description</refpath>
   </alt_map>
   </aa>
   <aa attribute="id">
   <alt_map alt_map.inc="1">
     <aimelt>product_definition_relationship.id</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship
product_definition_relationship.id</refpath>
   </alt_map>
   <alt_map alt_map.inc="2">
     <aimelt>id_attribute.attribute_value</aimelt>
     <source>ISO 10303-41</source>
     <refpath>applied_group_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
group
group = id_attribute_select &lt;-
id_attribute.identified_item
id_attribute
id_attribute.attribute_value</refpath>
   </alt_map>
   </aa>
   <aa attribute="name">
   <alt_map alt_map.inc="1">
     <aimelt>product_definition_relationship.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship
product_definition_relationship.name</refpath>
   </alt_map>
   <alt_map alt_map.inc="2">
     <aimelt>group.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>applied_group_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
group
group.name</refpath>
   </alt_map>
   </aa>
     <aa attribute="item" assertion_to="Product_view_definition">
   <alt_map alt_map.inc="1">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition_formation -&gt;
product_definition</refpath>
   </alt_map>
   </aa>
     <aa attribute="item" assertion_to="View_definition_relationship">
   <alt_map alt_map.inc="2">
     <aimelt>PATH</aimelt>
     <refpath>id_attribute
id_attribute.identified_item -&gt;
id_attribute_select = group
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[1] -&gt;
group_item
group_item = product_definition_relationship
product_definition_relationship</refpath>
   </alt_map>
   </aa>
     <aa attribute="breakdown_element" assertion_to="Breakdown_element_definition">
   <alt_map alt_map.inc="1">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_element_realization &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
(product_category.name='breakdown element')
(product_category.name='conceptual product')
(product_category.name='functionality')
(product_category.name='system element')
(product_category.name='zone element')}</refpath>
   </alt_map>
   <alt_map alt_map.inc="2">
     <aimelt>PATH</aimelt>
     <refpath>id_attribute
id_attribute.identified_item -&gt;
id_attribute_select = group
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[2] -&gt;
group_item
group_item = product_definition
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
(product_category.name='breakdown element')
(product_category.name='conceptual product')
(product_category.name='functionality')
(product_category.name='system element')
(product_category.name='zone element')}</refpath>
   </alt_map>
   </aa>
   </ae>

   <ae entity="Breakdown_element_usage">
     <aimelt>breakdown_element_usage</aimelt>
     <source>ISO 10303-1248</source>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship</refpath>
   <aa attribute="description">
     <aimelt>product_definition_relationship.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship
product_definition_relationship.description</refpath>
   </aa>
   <aa attribute="id">
     <aimelt>product_definition_relationship.id</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship
product_definition_relationship.id</refpath>
   </aa>
   <aa attribute="name">
     <aimelt>product_definition_relationship.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship
product_definition_relationship.name</refpath>
   </aa>
     <aa attribute="parent_element" assertion_to="Breakdown_element_definition">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
(product_category.name='breakdown element')
(product_category.name='conceptual product')
(product_category.name='functionality')
(product_category.name='system element')
(product_category.name='zone element')}</refpath>
   </aa>
     <aa attribute="child_element" assertion_to="Breakdown_element_definition">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_element_usage &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
(product_category.name='breakdown element')
(product_category.name='conceptual product')
(product_category.name='functionality')
(product_category.name='system element')
(product_category.name='zone element')}</refpath>
   </aa>
   </ae>

   <ae entity="Breakdown_element_version">
     <aimelt>product_definition_formation</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="Breakdown_element">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown element'}</refpath>
   </aa>
   </ae>

   <ae entity="Breakdown_of">
     <aimelt>breakdown_of</aimelt>
     <source>ISO 10303-1248</source>
     <refpath>breakdown_of &lt;=
product_definition_relationship</refpath>
   <aa attribute="description">
     <aimelt>product_definition_relationship.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.description</refpath>
   </aa>
   <aa attribute="id">
     <aimelt>product_definition_relationship.id</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.id</refpath>
   </aa>
   <aa attribute="name">
     <aimelt>product_definition_relationship.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.name</refpath>
   </aa>
     <aa attribute="breakdown" assertion_to="Breakdown_version">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown'}</refpath>
   </aa>
     <aa attribute="of_view" assertion_to="Product_view_definition">
     <aimelt>PATH</aimelt>
     <refpath>breakdown_of &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition_formation -&gt;
product_definition</refpath>
   </aa>
   </ae>

   <ae entity="Breakdown_version">
     <aimelt>[product_definition_formation]
[product_definition]</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="Breakdown">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='breakdown'}</refpath>
   </aa>
   </ae>

   <ae entity="Functional_element">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='functionality'}</refpath>
   </ae>

   <ae entity="Functional_element_definition">
     <aimelt>product_definition</aimelt>
     <source>ISO 10303-41</source>
     <refpath>{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;= application_context_element
application_context_element.name = 'functional definition'}</refpath>
     <aa attribute="defined_version" assertion_to="Functional_element_version">
     <aimelt>PATH</aimelt>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='functionality'}</refpath>
   </aa>
   </ae>

   <ae entity="Functional_element_version">
     <aimelt>product_definition_formation</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="Functional_element">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='functionality'}</refpath>
   </aa>
   </ae>

   <ae entity="In_zone">
     <aimelt>in_zone</aimelt>
     <source>ISO 10303-1248</source>
     <refpath>in_zone &lt;=
product_definition_relationship</refpath>
   <aa attribute="description">
     <aimelt>product_definition_relationship.description</aimelt>
     <source>ISO 10303-41</source>
     <refpath>in_zone &lt;=
product_definition_relationship
product_definition_relationship.description</refpath>
   </aa>
   <aa attribute="id">
     <aimelt>product_definition_relationship.id</aimelt>
     <source>ISO 10303-41</source>
     <refpath>in_zone &lt;=
product_definition_relationship
product_definition_relationship.id</refpath>
   </aa>
   <aa attribute="name">
     <aimelt>product_definition_relationship.name</aimelt>
     <source>ISO 10303-41</source>
     <refpath>in_zone &lt;=
product_definition_relationship
product_definition_relationship.name</refpath>
   </aa>
     <aa attribute="zone" assertion_to="Zone_element_definition">
     <aimelt>PATH</aimelt>
     <refpath>in_zone &lt;=
product_definition_relationship
product_definition_relationship.relating_product_definition_formation -&gt;
product_definition
{product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='zone element'}</refpath>
   </aa>
     <aa attribute="located_item" assertion_to="Product_view_definition">
     <aimelt>PATH</aimelt>
     <refpath>in_zone &lt;=
product_definition_relationship
product_definition_relationship.related_product_definition_formation -&gt;
product_definition</refpath>
   </aa>
   </ae>

   <ae entity="Physical_element">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='conceptual product'}</refpath>
   </ae>

   <ae entity="Physical_element_definition">
     <aimelt>product_definition</aimelt>
     <source>ISO 10303-41</source>
     <refpath>{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;= application_context_element
application_context_element.name = 'conceptual definition'}</refpath>
     <aa attribute="defined_version" assertion_to="Physical_element_version">
     <aimelt>PATH</aimelt>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='conceptual product'}</refpath>
   </aa>
   </ae>

   <ae entity="Physical_element_version">
     <aimelt>product_definition_formation</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="Physical_element">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='conceptual product'}</refpath>
   </aa>
   </ae>

   <ae entity="System_element">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='system element'}</refpath>
   </ae>

   <ae entity="System_element_definition">
     <aimelt>product_definition</aimelt>
     <source>ISO 10303-41</source>
     <refpath>{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;= application_context_element
application_context_element.name = 'system definition'}</refpath>
     <aa attribute="defined_version" assertion_to="System_element_version">
     <aimelt>PATH</aimelt>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='system element'}</refpath>
   </aa>
   </ae>

   <ae entity="System_element_version">
     <aimelt>product_definition_formation</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="System_element">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='system element'}</refpath>
   </aa>
   </ae>

   <ae entity="Zone_element">
     <aimelt>product</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='zone element'}</refpath>
   </ae>

   <ae entity="Zone_element_definition">
     <aimelt>product_definition</aimelt>
     <source>ISO 10303-41</source>
     <refpath>{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;= application_context_element
application_context_element.name = 'zone definition'}</refpath>
     <aa attribute="defined_version" assertion_to="Zone_element_version">
     <aimelt>PATH</aimelt>
     <refpath>product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='zone element'}</refpath>
   </aa>
   </ae>

   <ae entity="Zone_element_version">
     <aimelt>product_definition_formation</aimelt>
     <source>ISO 10303-41</source>
     <refpath>product_definition_formation</refpath>
     <aa attribute="of_product" assertion_to="Zone_element">
     <aimelt>PATH</aimelt>
     <refpath>product_definition_formation
product_definition_formation.of_product -&gt;
product
{product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name='zone element'}</refpath>
   </aa>
   </ae>

 </mapping_table>


 <mim>
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
    </express-g>
    <shortnames>
      <shortname name="APGRAS" entity="applied_group_assignment"/>
      <shortname name="BRKCNT" entity="breakdown_context"/>
      <shortname name="BRELRL" entity="breakdown_element_realization"/>
      <shortname name="BRELUS" entity="breakdown_element_usage"/>
      <shortname name="BRKOF" entity="breakdown_of"/>
      <shortname name="INZN" entity="in_zone"/>
    </shortnames>
 </mim>

  <bibliography>
   <bibitem.inc ref="ISO10303-1055"/>
   <bibitem.inc ref="ISO10303-1017"/>
 </bibliography>

</module>
