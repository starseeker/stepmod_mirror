<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.72 2012/09/15 11:11:59 lothartklein Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="product_breakdown" name.french=" DÃ©composition de produit" 
	part="1248" version="2" 
	wg.number="5472" 
	wg.number.arm="5473" 
	wg.number.mim="5474" 
	wg.number.supersedes="4797" 
	wg.number.arm.supersedes="4798" 
	wg.number.mim.supersedes="4799" 
	checklist.internal_review="5268" 
	checklist.project_leader="5269" 
	checklist.convener="5270" 
	status="TS" 
	language="E" publication.year="2008" publication.date="2008-12-19" published="y" previous.revision.year="2004" previous.revision.cancelled="NO" revision.complete="YES" rcs.date="$Date: 2012/09/15 11:11:59 $" rcs.revision="$Revision: 1.72 $" development.folder="dvlp" sc4.working_group="12" xmlns:xlink="http://www.w3.org/1999/xlink">
	<keywords>
    module, breakdown
 </keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="ap203ed2.projlead"/>
		<editor ref="ap203ed2.editor"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p>
			This part of ISO 10303 specifies an application module for the representation of various breakdowns of products.  
			A breakdown is a partitioning of a product into a set of related elements to support engineering, analysis 
			and other activities that can be performed in relation to the product.
		</p>
		<p>
			The exact nature of a breakdown is determined by three different aspects of the breakdown:
		</p>
		<ul>
			<li>The items that constitute the nodes or elements in the breakdown, including whether these are heterogeneous or homogeneous;</li>
			<li>The interpretation placed on the relationships between the elements in the breakdown;</li>
			<li>The rule set being followed by the creator of the breakdown.</li>
		</ul>
		<p>
			This module does not place any constraints on these three aspects. 
			However, there are specific types of breakdowns defined in other modules that specialise the entities provided in this module.
			These breakdowns are explicit, parent-child views that are constrained to use homogeneous elements 
			and therefore provide specific breakdown types:
		</p>
		<ul>
			<li>functional [5];</li>
			<li>physical [4];</li>
			<li>system [3];</li>
			<li>zonal [6].</li>
			
		</ul>
		<p>
			A breakdown can be asserted to be a Hybrid breakdown using the specialization described 
			in [7]. Such a breakdown uses heterogeneous elements.
		</p>

		<p>
			These views are complementary to the assembly structure and bill of materials views that are the primary focus for manufacturing 
			(realization) of a product [2]. 
			Product breakdowns differ from such assembly structures in that the relationships between the nodes are often specific 
			to both the particular breakdown and the product or products to which the breakdown applies. 
			In the case of an assembly structure the meaning of the relationships between components is 
			always a variant of the idea of assembly and so any sub-tree can be used in multiple assemblies. 
			A similar sub-tree of a product breakdown can only be applicable to the breakdown of the product in which it is defined. 
			The extent to which this is the case depends on the rule set followed by the creator of the breakdown.
		</p>
		<p>
			Breakdowns can be of designs or realized individual products. For example, the functional breakdown of an individual product that 
			has been damaged will be different to the functional breakdown of the design of that product type.
			For any product, more than one breakdown can exist to support various different engineering activities.
		</p>
		<p>
			A 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown"/> 
			is a type of  
			<express_ref linkend="product_identification:arm:Product_identification_arm.Product"/> 
			and, thus, has identification and can have versions 
			(<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_version"/>).
		</p>
		<p>
			Each version of a breakdown 
			(<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_version"/>)
		       	is related to the product that is the subject of the breakdown through 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_of"/>. 
		</p>
		<p>
			The constituents of a breakdown are represented by 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/> 
			objects.
		</p>
		<p>
			A 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/>
			can appear in one or more breakdowns and is a 
			<express_ref linkend="product_identification:arm:Product_identification_arm.Product"/> 
			with identification, versions 
			(<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_version"/>)
		       	and views 
			(<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_definition"/>)
		       	of those versions.
		</p>
		<p>
			A 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_usage"/> 
			identifies the parent-child relationship between a pair of 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/> 
			objects in the context of the relevant breakdown.  
			The complete breakdown hierarchy consists of a tree of 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_usage"/> 
			objects.
		</p>
		<p>
			A 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/> 
			can be one of the allowed subtypes:
		</p>
		<ul>
			<li>a Functional_element (see in [5]);</li>
			<li>a Physical_element (see in [4]);</li>
			<li>a System_element (see in [3]);</li>
			<li>or a Zone_element (see in [6]).</li>
		</ul>
		<p>
			Other types of element can be introduced by classification of the 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element"/> entity. 
			The nature of the relationship between elements in the breakdown can also be refined by means of classification.
		</p>
		<p>
			This part of 10303 also supports the requirement to identify the product or relationship between products that is the realization of a 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_definition"/> 
			or a
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_usage"/>.  
			A 
			<express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_element_realization"/> 
			provides this identification.
		</p>
		<!-- 2nd edition -->
		<p>
			This second edition of this part of ISO 10303 incorporates the modifications to the first edition listed below.
		</p>
		
		<!-- ARM -->
		<p>
			The following ARM EXPRESS declarations and interface specifications have been removed:
		</p>
		<ul>
			<li>USE FROM Product_identification_arm;</li>
			<li>USE FROM Product_version_arm;</li>
			<li>USE FROM Product_view_definition_arm.</li>
		</ul>
		
		<p>
			In addition, modifications have been made to the mapping specification, 
			the MIM schema and the EXPRESS-G diagrams to reflect and be consistent with the modifications of the ARM.
		</p>
		
		
	</purpose>
	<!-- Items in scope -->
	<inscope>
      <li>
			the identification of a breakdown of a product or product_as_individual;
		</li>
      <li>
			the identification of the elements that comprise a breakdown;
		</li>
      <li>
			the identification of parent-child relationships between breakdown elements;
		</li>
      <li>
			the identification of relationships between elements in different breakdowns;
		</li>
      <li>items within the scope of application module <module_ref linkend="product_view_definition_relationship:1_scope">Product view definition relationship</module_ref>, ISO/TS 10303-1041;</li>
      <li>items within the scope of application module <module_ref linkend="property_assignment:1_scope">Property assignment</module_ref>, ISO/TS 10303-1030.</li>
   </inscope>
	<!-- Items out of scope -->
	<outscope>
		<li>
			assembly product structure;
		</li>
		<li>
			decomposition of requirements;
		</li>
		<li>
			all product views whose components have no parent-child relationships;
		</li>
		<li>
			product lists such as bill of materials.
		</li>
	</outscope>
	<normrefs>
		<normref.inc normref="ref10303-41"/>
		<normref.inc normref="ref10303-44"/>
	</normrefs>
	<definition>
		<term id="breakdown">breakdown</term>
		<def>
			partitioning of a product into a set of related 
			elements to support engineering, analysis and other activities that can be 
			performed in relation to the product
                  <note>These breakdowns are explicit, parent-child views of the product elements.</note>
		</def>
	</definition>
	<!--
 
 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="Breakdown">
			<description>The Breakdown UoF specifies the definitional information for the concepts of breakdown identification and relationships between breakdown elements.</description>
			<uof.ae entity="Breakdown"/>
			<uof.ae entity="Breakdown_element_usage"/>
			<uof.ae entity="Breakdown_of"/>
			<uof.ae entity="Breakdown_version"/>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<ae entity="Assigned_property" original_module="property_assignment" extensible="NO">
			<aa attribute="described_element" assertion_to="Breakdown_element_realization"> 
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath_extend extended_select="property_assignment_select" xml:space="preserve">
					characterized_definition
					characterized_definition = characterized_object
					characterized_object
					characterized_object =&gt;
					breakdown_element_realization
				</refpath_extend>
			</aa>
			<aa attribute="described_element" assertion_to="Breakdown_element_usage"> 
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath_extend extended_select="property_assignment_select" xml:space="preserve">
                                  characterized_definition
                                  characterized_definition = characterized_product_definition
                                  characterized_product_definition
                                  characterized_product_definition = product_definition_relationship
                                  product_definition_relationship =&gt; product_definition_usage
				</refpath_extend>
			</aa>

		</ae>
		<ae entity="Breakdown" extensible="NO">
			<aimelt xml:space="preserve">product
			</aimelt>
			<source xml:space="preserve">ISO 10303-41
			</source>
			<refpath xml:space="preserve">
				product
				{product &lt;-
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category
				product_category.name='breakdown'}
			</refpath>
		</ae>
		<ae entity="Breakdown_context" extensible="NO">
			<aimelt xml:space="preserve">breakdown_context
			</aimelt>
			<source xml:space="preserve">ISO 10303-1248
			</source>
			<refpath xml:space="preserve">
				breakdown_context &lt;=
				product_definition_relationship
			</refpath>
			<aa attribute="id">
				<aimelt xml:space="preserve">	product_definition_relationship.id
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_context &lt;=
					product_definition_relationship
					product_definition_relationship.id
				</refpath>
			</aa>
			<aa attribute="name">
				<aimelt xml:space="preserve">	product_definition_relationship.name
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_context &lt;=
					product_definition_relationship
					product_definition_relationship.name
				</refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">	product_definition_relationship.description
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_context &lt;=
					product_definition_relationship
					product_definition_relationship.description
				</refpath>
			</aa>
			<aa attribute="breakdown" assertion_to="Breakdown_version">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
                                 breakdown_context &lt;= 
                                 product_definition_relationship 
                                 product_definition_relationship.relating_product_definition -&gt;
                                 product_definition
					product_definition product_definition.formation -&gt;
                                 product_definition_formation
				</refpath>
			</aa>
			<aa attribute="breakdown_element" assertion_to="Breakdown_element_definition">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					breakdown_context &lt;=
					product_definition_relationship
					product_definition_relationship.related_product_definition -&gt;
					product_definition
					/SUPERTYPE(Breakdown_element_definition)/
				</refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_element" extensible="NO">
			<aimelt xml:space="preserve">product
			</aimelt>
			<source xml:space="preserve">ISO 10303-41
			</source>
			<refpath xml:space="preserve">
				product
				{product &lt;-
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category
				product_category.name='breakdown element'}
			</refpath>
		</ae>
		<ae entity="Breakdown_element_definition" extensible="NO">
			<aimelt xml:space="preserve">product_definition
			</aimelt>
			<source xml:space="preserve">ISO 10303-41
			</source>
			<refpath xml:space="preserve">
				(product_definition
				{product_definition
				product_definition.frame_of_reference -&gt;
				product_definition_context &lt;= 
				application_context_element
				application_context_element.name = 'breakdown element definition'})
			</refpath>
			<aa attribute="defined_version" assertion_to="Breakdown_element_version">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition
					product_definition.formation -&gt;
					product_definition_formation
				</refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_element_usage" extensible="NO">
			<aimelt xml:space="preserve">product_definition_usage
			</aimelt>
			<source xml:space="preserve">ISO 10303-44
			</source>
			<refpath xml:space="preserve">
				product_definition_usage &lt;=
				product_definition_relationship
				{product_definition_relationship.name = 'decomposition'}
			</refpath>
			<aa attribute="name">
				<aimelt xml:space="preserve">	product_definition_relationship.name
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					product_definition_usage &lt;=
					product_definition_relationship
					product_definition_relationship.name
				</refpath>
			</aa>
			<aa attribute="child_element" assertion_to="Breakdown_element_definition">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition_usage &lt;=
					product_definition_relationship
					product_definition_relationship.related_product_definition -&gt;
					product_definition
					/SUPERTYPE(Breakdown_element_definition)/
				</refpath>
			</aa>
			<aa attribute="parent_element" assertion_to="Breakdown_element_definition">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition_usage &lt;=
					product_definition_relationship
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					/SUPERTYPE(Breakdown_element_definition)/
				</refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_element_version" extensible="NO">
			<aimelt xml:space="preserve">product_definition_formation
			</aimelt>
			<source xml:space="preserve">ISO 10303-41
			</source>
			<aa attribute="of_product" assertion_to="Breakdown_element">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product
					{product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='breakdown element'}
				</refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_of" extensible="NO">
			<aimelt xml:space="preserve">breakdown_of
			</aimelt>
			<source xml:space="preserve">ISO 10303-1248
			</source>
			<refpath xml:space="preserve">
				breakdown_of &lt;=
				product_definition_relationship
			</refpath>
			<aa attribute="id">
				<aimelt xml:space="preserve">	product_definition_relationship.id
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_of &lt;=
					product_definition_relationship
					product_definition_relationship.id
				</refpath>
			</aa>
			<aa attribute="name">
				<aimelt xml:space="preserve">	product_definition_relationship.name
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_of &lt;=
					product_definition_relationship
					product_definition_relationship.name
				</refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">	product_definition_relationship.description
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					breakdown_of &lt;=
					product_definition_relationship
					product_definition_relationship.description
				</refpath>
			</aa>
			<aa attribute="breakdown" assertion_to="Breakdown_version">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					breakdown_of &lt;=
					product_definition_relationship
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					product_definition.formation -&gt;
					product_definition_formation
				</refpath>
			</aa>
			<aa attribute="of_target" assertion_to="breakdown_of_target">
                          <aimelt>PATH</aimelt>
			</aa>
			<aa attribute="of_target" assertion_to="Product_view_definition">
                          <description>
                            The product_definition is an artificial view on the product
                            necessary to relate the breakdown to the product version.
                          </description>
                          <aimelt xml:space="preserve">PATH</aimelt>
                          <refpath xml:space="preserve">
                            breakdown_of &lt;=
                            product_definition_relationship
                            product_definition_relationship.related_product_definition -&gt;
                            product_definition
                          </refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_version" extensible="NO">
			<aimelt xml:space="preserve">[product_definition_formation]
				[product_definition]
			</aimelt>
			<source xml:space="preserve">ISO 10303-41
			</source>
			<refpath xml:space="preserve">
				product_definition
				product_definition.formation -&gt;
				product_definition_formation
			</refpath>
			<aa attribute="of_product" assertion_to="Breakdown">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product
					{product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='breakdown'}
				</refpath>
			</aa>
		</ae>
		<ae entity="Product_definition_element_relationship" extensible="NO">
			<aimelt xml:space="preserve">(product_definition_group_assignment)
				(breakdown_element_group_assignment)
				(product_definition_usage)
			</aimelt>
			<source xml:space="preserve">ISO 10303-1248
				ISO 10303-1248
				ISO 10303-44
			</source>
			<refpath xml:space="preserve">
				{(product_definition_group_assignment &lt;=)
				(breakdown_element_group_assignment &lt;=)
				group_assignment
				group_assignment.assigned_group -&gt;
				group
				{group =&gt;
				product_definition_element_relationship}
				group = 
				id_attribute_select &lt;-
				id_attribute.identified_item
				id_attribute
				(product_definition_usage &lt;=
				 product_definition_relationship
                 product_definition_relationship.relating_product_definition -&gt;
                 product_definition
				/SUPERTYPE(Breakdown_element_definition)/)}
			</refpath>
			<aa attribute="id">
				<aimelt xml:space="preserve">	id_attribute.attribute_value product_definition_relationship.id
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41 ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					((product_definition_group_assignment &lt;=)
					(breakdown_element_group_assignment &lt;=)
					group_assignment
					group_assignment.assigned_group -&gt;
					group
					{group =&gt;
					product_definition_element_relationship}
					group = 
					id_attribute_select &lt;-
					id_attribute.identified_item
					id_attribute
					id_attribute.attribute_value)
					(product_definition_usage &lt;=
					product_definition_relationship.id)
				</refpath>
			</aa>
			<aa attribute="name">
				<aimelt xml:space="preserve">	group.name product_definition_relationship.name
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41 ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					((product_definition_group_assignment &lt;=)
					(breakdown_element_group_assignment &lt;=)
					group_assignment
					group_assignment.assigned_group -&gt;
					group
					group.name)
					(product_definition_usage &lt;=
					product_definition_relationship.name)
				</refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">	group.description
				</aimelt>
				<source xml:space="preserve">	ISO 10303-41 ISO 10303-41
				</source>
				<refpath xml:space="preserve">
					((product_definition_group_assignment &lt;=)
					(breakdown_element_group_assignment &lt;=)
					group_assignment
					group_assignment.assigned_group -&gt;
					group
					group.description)
					(product_definition_usage &lt;=
					product_definition_relationship.name)
				</refpath>
			</aa>
                        <aa attribute="breakdown" assertion_to="breakdown_item">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					breakdown_element_group_assignment
					breakdown_element_group_assignment.items[1] -&gt;
					product_definition_or_breakdown_element_usage
				</refpath>
			</aa>
                        <aa attribute="breakdown" assertion_to="Breakdown_element_definition">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					(breakdown_element_group_assignment
					breakdown_element_group_assignment.items[1] -&gt;
					product_definition_or_breakdown_element_usage =
					product_definition)
					(product_definition_usage &lt;=
					product_definition_relationship.relating_product_definition -&gt;
					product_definition)
					product_definition
					/SUPERTYPE(Breakdown_element_definition)/
				</refpath>
			</aa>
			<aa attribute="breakdown" assertion_to="Breakdown_element_usage">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					breakdown_element_group_assignment
					breakdown_element_group_assignment.items[1] -&gt;
					product_definition_or_breakdown_element_usage =
					product_definition_usage
				</refpath>
			</aa>
			<aa attribute="product" assertion_to="product_item">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition_group_assignment
					product_definition_group_assignment.items[1] -&gt;
					product_definition_or_product_definition_relationship
				</refpath>
			</aa>
			<aa attribute="product" assertion_to="Product_view_definition">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					(product_definition_group_assignment
					product_definition_group_assignment.items[1] -&gt;
					product_definition_or_product_definition_relationship =
					product_definition)
					(product_definition_usage &lt;=
					product_definition_relationship.related_product_definition -&gt;
					product_definition)
				</refpath>
			</aa>
			<aa attribute="product" assertion_to="View_definition_usage">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					product_definition_group_assignment
					product_definition_group_assignment.items[1] -&gt;
					product_definition_or_product_definition_relationship =
                    product_definition_usage 
				</refpath>
			</aa>
		</ae>
		<ae entity="Breakdown_element_realization" extensible="NO">
			<aimelt xml:space="preserve">([(product_definition_group_assignment)
				(breakdown_element_group_assignment)]
				[breakdown_element_realization])
				(product_definition_usage)
			</aimelt>
			<source xml:space="preserve">ISO 10303-1248
				ISO 10303-1248
				ISO 10303-1248
				ISO 10303-44
			</source>
			<refpath xml:space="preserve">
				((product_definition_group_assignment &lt;=)
				(breakdown_element_group_assignment &lt;=)
				group_assignment
				group_assignment.assigned_group -&gt;
				group =&gt;
				product_definition_element_relationship =&gt;
				breakdown_element_realization)
				(product_definition_usage &lt;=
				 product_definition_relationship.name = 'realization')
			</refpath>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
		</express-g>
		<shortnames>
			<shortname name="BRKCNT" entity="breakdown_context"/>
			<shortname name="BEGA" entity="breakdown_element_group_assignment"/>
			<shortname name="BRELUS" entity="breakdown_element_usage"/>
			<shortname name="BRKOF" entity="breakdown_of"/>
			<shortname name="BRELRL" entity="breakdown_element_realization"/>
			<shortname name="PDER" entity="product_definition_element_relationship"/>
			<shortname name="PDGA" entity="product_definition_group_assignment"/>
		</shortnames>
	</mim>
	<bibliography>
		<bibitem.inc ref="ref8824-1"/>
		<bibitem.inc ref="ISO10303-1026"/>
		<bibitem.inc ref="ISO10303-1214"/>
		<bibitem.inc ref="ISO10303-1215"/>
		<bibitem.inc ref="ISO10303-1216"/>
		<bibitem.inc ref="ISO10303-1217"/>
		<bibitem.inc ref="ISO10303-1218"/>
		<bibitem.inc ref="AMConGde06"/>
	</bibliography>
</module>
