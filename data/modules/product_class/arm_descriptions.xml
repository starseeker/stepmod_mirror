<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="product_class" schema_file="arm.xml" describe.selects="YES" 
rcs.date="$Date: 2002/10/03 08:45:26 $" rcs.revision="$Revision: 1.9 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Product_class_arm
   <express_ref linkend="product_class:arm:Product_class_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Product_class_arm">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: expression_operator 
   <express_ref linkend="product_class:arm:Product_class_arm.expression_operator"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.expression_operator">
 The <b>expression_operator</b> type is an enumeration of the following Boolean operators:
<ul>
<li>or_operator</li>
<li>and_operator</li>
<li>oneof_operator</li>
<li>not_operator</li></ul>
<note>These operators can be used in a <b>Specification_expression</b>.</note>
<p>In the case where these operators are used in a <b>Specification_expression</b>, evaluation of the operation is done in the context of a product.
The result depends on the operators in the expression and on whether that product, that may be represented within an instance of <b>Product_specification</b>, possesses or not the specifications that are referred to in the <b>Specification_expression</b>.
</p>
</ext_description>

<ext_description linkend="Product_class_arm.expression_operator.or_operator">
The <b>or_operator</b> specifies a logical operation that is true if at least one of the operands is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.and_operator">
The <b>and_operator</b> specifies a logical operation that is true if every operand is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.oneof_operator">
The <b>oneof_operator</b> specifies a logical operation that is true if only one of the operands is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.not_operator">
The <b>not_operator</b> specifies a logical operation that is true if none of the operands is true.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: specification_operand_select 
   <express_ref linkend="product_class:arm:Product_class_arm.specification_operand_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.specification_operand_select">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association">
A <b>Class_category_association</b> is the association of a <b>Specification_category</b> with a <b>Product_class</b>. <p>Additionally, this assignment specifies if the usage of one or more Specification objects belonging to this <b>Specification_category</b>, is mandatory or optional for all products of that <b>Product_class</b>.</p> 
<note>The assignment of a <b>Specification_category</b> to a <b>Product_class</b> does not replace the association of single members of the <b>Specification_category</b> to the <b>Product_class</b>.
</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_product_class">
The <b>associated_product_class</b> specifies the <b>Product_class</b> for which the <b>Specification_category</b> is valid.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: mandatory 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.mandatory"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.mandatory">
The <b>mandatory</b> specifies whether the Specification objects referring to the associated <b>Specification_category</b> have to be used or may be used (optional) for products within the referenced <b>Product_class</b>. A value of 'true' indicates that the usage is mandatory. 
<example>The specification category 'additional features' may be associated 'optional' to the product class of a 'generic product'; the specification category 'color' is an example for a 'mandatory' association.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_category">
The <b>associated_category</b> specifies the <b>Specification_category</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association">
A <b>Class_condition_association</b> is the association of a <b>Specification_expression</b> with a <b>Product_class</b>.
<p>The meaning of this association is specified further by the attribute <b>condition_type</b> .
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: condition_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.condition_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.condition_type">
The <b>condition_type</b> specifies the meaning of the association.
<p>Where applicable the following values shall be used:</p> 
<ul><li>'design case': The <b>Specification_expression</b> specifies a condition when a given object has to be designed and verified. 
This value of the <b>condition_type</b> is for information only and shall not be interpreted when querying design cases or usage cases.
For such a query, the value of the attribute <b>configuration_type</b> of <express_ref linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> shall be evaluated; <note>This value may be used to precise when a given <express_ref
    linkend="product_breakdown:arm:Product_breakdown_arm.Functional_element_definition"/> or a given <express_ref
    linkend="product_breakdown:arm:Product_breakdown_arm.Physical_element_definition"/> has to be studied by the design department so that it provides solutions appropriate for the case specified by associated_condition and associated_product_class</note>
</li><li>'identification:' The <b>Specification_expression</b> specifies a condition that enables to distinguish the associated <b>Product_class</b> from other Product_class instances.
This value is not applicable for a top level node in a hierarchy of Product_class instances.
This identification is part of the identification of all sub classes of this <b>Product_class</b>;</li>
<li>'part usage': The <b>Specification_expression</b> specifies a condition for the usage of the components of an <express_ref
    linkend="alternative_solution:arm:Alternative_solution_arm.Alternative_solution"/>, the usage of a <express_ref
    linkend="product_occurrence:arm:Product_occurrence_arm.Product_occurrence"/> or for the application of a <b>Process_plan</b> or a <b>Process_operation_occurrence</b> in the products of the associated <b>Product_class</b>.
In this case, the <b>Class_condition_association</b> shall be referenced by at least one <express_ref
    linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> instance;
</li><li>'validity': The <b>Specification_expression</b> specifies a condition that is used to verify a <b>Product_specification</b> for the associated <b>Product_class</b>.
That means that the <b>Specification_expression</b> evaluates to 'true' if the set of Specification objects is valid; otherwise it evaluates to 'false' with the meaning that the specified object is invalid for the <b>Product_class</b>.
It is valid for all products belonging to the associated_product_class in case of the condition types identifications and validity
</li></ul></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_product_class">
The <b>associated_product_class</b> specifies the <b>Product_class</b> for which the <b>Specification_expression</b> is valid.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.description">
The <b>description</b> specifies additional information about the <b>Class_condition_association</b>
<p>The description need not be specified for a particular Class_condition_association. 
If present, there shall be exactly one object that defines the description for a Class_condition_association.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_condition">
The <b>associated_condition</b> specifies the <b>Specification_expression</b> that is assigned to the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association">
A <b>Class_inclusion_association</b> is the assignment of a <b>Specification_inclusion</b> to a <b>Product_class</b>. This assignment contains the information that a particular <b>Specification_inclusion</b> applies for all products of that <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_product_class">
The <b>associated_product_class</b> specifies the <b>Product_class</b> for which the <b>Specification_inclusion</b> is valid.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.description">
The <b>description</b> specifies additional information about the <b>Class_inclusion_association</b>.
<p>The description need not be specified for a particular Class_inclusion_association.</p> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_inclusion 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_inclusion">
The <b>associated_inclusion</b> specifies the <b>Specification_inclusion</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association">
<b>Class_specification_association</b> is an association of a <b>Specification</b> with a <b>Product_class</b>. 
This <b>Specification</b> serves as a potential characteristic of all products belonging to the <b>Product_class</b>. 
<p>The meaning of this association is specified further by the attribute association_type.
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_product_class">
The <b>associated_product_class</b> specifies the <b>Product_class</b> for which the <b>Specification</b> is valid.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: association_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.association_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.association_type">
The <b>association_type</b> specifies the kind of availability of a particular <b>Specification</b> in a <b>Product_class</b>. 
<p>Where applicable the following values shall be used:</p>
<ul><li>'availability': The <b>Specification</b> is a potential characteristic of any product belonging to a high level <b>Product_class</b>. It is not specified if this is an option or a standard;
<example>'brown colour' or 'white colour' are available for a generic product of a product class 'Family 1'.
</example></li><li>'identification': The <b>Specification</b> is a characteristic that enables to distinguish the associated Product_class from other Product_class objects. This is a kind of non replaceable standard. This value is not applicable for a top level node in a hierarchy of Product_class objects. This identification is part of the identification of all sub classes of this <b>Product_class</b>;
<example></example></li>
<li>'non replaceable standard': The <b>Specification</b> is a characteristic of all products belonging to the <b>Product_class</b>;
<example>South East Asia climate zone is a non replaceable standard for a product that is produced for use in that particular geographic area.</example>
</li><li>'option': The <b>Specification</b> is a characteristic of a product if explicitly chosen. The Specification replaces another Specification of the same specification category if the replaced Specification is associated with the Product_class as replaceable standard; 
<example>'additional features' are common options proposed to the customer.</example></li>
<li>'part usage': The <b>Specification</b> is a characteristic the usage of the components of an <express_ref
    linkend="alternative_solution:arm:Alternative_solution_arm.Alternative_solution"/>, the usage of a <express_ref
    linkend="product_occurrence:arm:Product_occurrence_arm.Product_occurrence"/> or for the application of a <b>Process_plan</b> or a <b>Process_operation_occurrence</b> in the products of the associated <b>Product_class</b>.</li>
<li>'replaceable standard': The <b>Specification</b> is a default characteristic of the products belonging to the <b>Product_class</b> as long as no other specification of the same Specification_category is chosen.
<example> 'lack painting' is a replaceable standard for product class 'Furniture family 1'; it can be replaced by other types of painting which is another specification of the same specification category 'finishing'.</example></li></ul>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_specification">
The <b>associated_specification</b> specifies the <b>Specification</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class">
A <b>Product_class</b> is a type of <b>Product_concept</b> that may be characterized with specifications.
<example>
A marketed family of wardrobes may be characterized by specifications of color, number of doors and height.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.version_id">
The text that provides the version identifier of the <b>Product_class</b>.
<p>The version_id need not be specified for a particular Product_class.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: level_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.level_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.level_type">
The <b>level_type</b> specifies the level or category of this Product_class in a hierarchical structure of Product_class objects.<p></p>The level_type shall only be used if and only if the level_type is specified in the the context of the ApplicationProtocol, that will use this Application Module.
<example><ul><li>A high level Product_class (level_type = enterprise) may be used to define all Specification_category and Specification objects for all Product_class objects of an enterprise with several brands and companies.
</li><li>A second level Product_class (level_type = designer) may be used to group all products that are based on the same concept (for example the same designer); these products may belong to different brands.
</li><li>A third level Product_class (level_type = product family) may be used to group all products that have a common base and a fixed set of characteristics (specification categories).
</li><li>A fourth level Product_class (level_type = product type) may represent products that are offered to the market; this level of Product_class may be defined by the marketing department. A set of specifications sufficient to produce the product is associated with its <b>Product_class</b>. Within this association, a distinction is made between standard characteristics (for example 'number of doors') and options that have to be chosen (for example, 'colour') or that may be chosen by the customer (for example, 'additional features').
</li></ul></example>The <b>level_type</b> need not be specified for a particular <b>Product_class</b>.
</ext_description>

<ext_description linkend="Product_class_arm.Product_class.wr:WR1">
The target_market attribute shall not be specified.
<note>When needed, characterization of the target market for a product class can be done, as for other product features, using the Specification_category and Specification entity data types.
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship">
A <b>Product_class_relationship</b> is a relationship between two Product_class objects.
<p><b>Product_class</b> objects that are related to each other by a <b>Product_class_relationship</b> do not inherit any characteristics from each other.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relating 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relating">
The <b>relating</b> specifies the first of the two Product_class objects related by the <b>Product_class_relationship</b>.
<note>The semantics of this attribute is defined by the attribute <b>relation_type</b>.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: related 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.related">
The <b>related</b> specifies the second of the two Product_class objects related by the <b>Product_class_relationship</b>.
<note>The semantics of this attribute is defined by the attribute <b>relation_type</b>.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.description">
The <b>description</b> specifies additional information about the <b>Product_class_relationship</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relation_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relation_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relation_type">
The <b>relation_type</b> specifies the meaning of the relationship.<p> 
Where applicable the following values shall be used:</p>
<ul><li>'derivation': the <b>Product_class_relationship</b> defines a relationship where the related Product_class is derived from the relating Product_class;
</li><li>'hierarchy': the <b>Product_class_relationship</b> defines a relationship where the relating Product_class is on a higher level in the hierarchy of Product_class objects than the related Product_class;
</li><li>'substitution': The <b>Product_class_relationship</b> defines a relationship where the related Product_class replaces the relating Product_class;
</li><li>'version sequence': the <b>Product_class_relationship</b> defines a relationship where the relating Product_class is the preceding version and the related Product_class is the following version.</li></ul>
<note>The relationship does not imply inheritance of any kind between the application objects that are related.
</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification">
A <b>Specification</b> is a characteristic of products considered in a product class. 
<note number="1">A <b>Specification</b> may be used to discriminate a product from other members of the same <b>Product_class</b>. 
</note>
<p>A <b>Specification</b> refers to a <b>Specification_category</b> that completes the semantics of the <b>Specification</b>.</p>
<example>'green', 'white', or 'black' are examples for specifications belonging to the <b>Specification_category</b> of type 'colour'. 'set of 3 drawers' or 'set of 5 drawers' are examples for specifications belonging to the Specification_category of type 'additional feature'.
</example>
<note number="2">A <b>Specification</b> may be a characteristic of the members of more than one <b>Product_class</b> using Class_specification_association objects.
</note>
<note number="3">A <b>Specification</b> in combination with a <express_ref
    linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> may be used to define under which conditions a Product is used for a product of a <b>Product_class</b>.
</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.id">
The <b>id</b> specifies the identifier of the <b>Specification</b> that shall be unique within the scope of a <b>Specification_category</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: name 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.name">
The <b>name</b> specifies the word or group of words by which the <b>Specification</b> is referred to.
<p>The name need not be specified for a particular Specification. 
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.description">
The <b>description</b> specifies additional information about the <b>Specification</b>.<p>  
The description need not be specified for a particular Specification.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.category">
The <b>category</b> specifies the <b>Specification_category</b> that completes the semantics of the <b>Specification</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.version_id">
The <b>version_id</b> specifies the identification of a particular version of a <b>Specification</b>.<p> 
The version_id need not be specified for a particular Specification.
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: package 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.package"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.package">
The <b>package</b> specifies whether this Specification represents a package of Specification objects or not. Such a Specification combines those Specification objects that shall be offered to the market as a set. In the case where package is 'true', there shall be exactly one <b>Specification_inclusion</b> per <b>Product_class</b> considered, that refers to this <b>Specification</b> as <b>if_condition</b>. <p></p>The Specification objects that are members of the package, shall be specified as <b>included_specification</b>. 
<note number="1">Commercial packages may be defined by the marketing department.</note>
<note number="2">Usually the members of a package belong to distinct Specification_category objects.
</note>
<example>A sports package for a Product_class of cars contains sports seats, a special steering wheel, special tyres and wheels. A winter package contains heated front seats, heated windshield washers, heated exterior mirrors, and special tyres.
</example></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category">
A <b>Specification_category</b> is the definition of a set of Specification objects serving the same purpose. 
<example>The category 'colours' for the Specification objects 'green' and 'white' or the category level 'additional features' for the Specification objects 'set of 3 drawers', 'set of 5 drawers' are examples for a <b>Specification_category</b>.
</example></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: implicit_exclusive_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.implicit_exclusive_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.implicit_exclusive_condition">
The <b>implicit_exclusive_condition</b> specifies whether the Specification objects within the <b>Specification_category</b> are mutually exclusive for the production of one particular product. A value of 'true' indicates that the referenced objects are mutually exclusive for the production of the particular product. 
<example>'additional features' is an example for a non mutually exclusive <b>Specification_category</b> if for example 'set of 3 drawers' and 'door with mirror' are Specification objects in this category. 'colours' is an example for a <b>Specification_category</b> with an <b>implicit_exclusive_condition</b> since usually the product can have only one 'colour'.
</example>More complex conditions can be handled using Specification_expression objects.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.id">
The <b>id</b> specifies the identifier of the <b>Specification_category</b> that shall be unique. 
<note>The scope of uniqueness is usually dependent on the form of implementation.
</note><example>The scope of uniqueness may be set by the extent of a physical file or data base.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.description">
The <b>description</b> specifies information about the <b>Specification_category</b>.
<example>The description 'trim' characterizes a <b>Specification_category</b> for Specification objects that controls the quality and colour of the finishing of the product including for example door panels and upholstery. Other examples are 'colours', 'additional features', 'type of cover'.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy">
A <b>Specification_category_hierarchy</b> is used to build up hierarchical structures of Specification_category objects.
<example> To the product family sofa (furniture product), instance of <b>Product_class</b> it is associated the <b>Specification_category</b> instance "type_of_cover", to which belong the <b>Specification</b> instances: "Leather" or "Alcantara". Then there are the <b>Specification_category</b> instances: "Leather_colour" and "Alcantara_colour", that are sub_category of the <b>Specification_category</b> instances "Leather" and "Alcantara".
</example> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: sub_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.sub_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.sub_category">
The <b>sub_category</b> is the lower level of <b>Specification_category</b> in <b>Specification_category_hierarchy</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: super_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.super_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.super_category">
The <b>super_category</b> is the higher level of <b>Specification_category</b> in <b>Specification_category_hierarchy</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression">
A <b>Specification_expression</b> is a combination of Specification objects formed by Boolean operations.
<example> The colours associated with the <b>Specification</b> instance "leather", belonging to the <b>Specification_category</b> instance "type_of_cover", can be represented by the <b>Specification_expression</b> instance: "oneof: white, beige".
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.description">
The <b>description</b> specifies additional information about the <b>Specification_expression</b>.<p>
The description need not be specified for a particular Specification_expression. 
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operation 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operation">
The <b>operation</b> specifies the <b>specification_operator</b> used in the expression. 
<p>Four kinds of operations are permitted:</p><ul>
<li>'and': All of the identified Specification objects shall be used;</li>
<li>'or': A subset or all of the identified Specification objects shall be used;</li>
<li>'oneof': Exactly one of the identified Specification objects shall be used;</li>
<li>'not': The identified Specification shall not be used.</li></ul>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operand 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operand">
The <b>operand</b> specifies the operands of the Boolean operation that are either Specification objects or other Specification_expression objects. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.id">
The <b>id</b> specifies the identifier of the <b>Specification_expression</b>. 
<p>The id need not be specified for a particular Specification_expression.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion">
A <b>Specification_inclusion</b> is the representation of the statement that specifies that the application of a Specification or of a Specification_expression implies the inclusion of an additional <b>Specification</b> or <b>Specification_expression</b>. 
<note>The <b>Specification_inclusion</b> is intended to complete the set of Specification objects for a <b>Product_specification</b> in order to enable the manufacturing of the product on the basis of an initial set of Specification objects defined.
</note><example number="1"> Associated to the <b>Product_class</b> instance "sofa" there is the <b>Specification</b> instance "Leather", that implies (<b>Specification_inclusion</b>) the <b>Specification_expression</b> instance: "oneof: white,beige"</example><example number="2">The source of such a completion may be a customer order.
</example></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: if_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.if_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.if_condition">
The <b>if_condition</b> specifies the <b>Specification</b> or the <b>Specification_expression</b> that serves as the condition for the inclusion. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: included_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.included_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.included_specification">
The <b>included_specification</b> specifies the Specification or the Specification_expression objects that are to be included. 
<p>The <b>included_specification</b> shall not reference a <b>Specification_expression</b> with an operation of type 'or' or 'oneof', except for negating expressions, that mean participants in an expression preceded by a 'not' operator. 
Expressions of operator 'not' shall not be nested within each other.</p> 
<note number="1">In the case where more than one Specification is to be included a Specification_expression of type 'AND' shall be used.
</note>
<note number="2">In the case where the included_specification is a 'NOT' expression, the object actually defines an exclusion.
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.description">
The <b>description</b> specifies additional information about the <b>Specification_inclusion</b>.<p>
The description need not be specified for a particular Specification_inclusion. 
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.id">
The <b>id</b> specifies the identifier of the <b>Specification_inclusion</b>.<p> 
The id need not be specified for a particular Specification_inclusion.</p>
</ext_description>
</ext_descriptions>
