<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="product_class" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2002/07/15 08:58:01 $" rcs.revision="$Revision: 1.6 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Product_class_arm
   <express_ref linkend="product_class:arm:Product_class_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Product_class_arm">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: expression_operator 
   <express_ref linkend="product_class:arm:Product_class_arm.expression_operator"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.expression_operator">
	<description>
The Product_class_arm.expression.operator type is the ENUMERATION of the following operators:
-	or_operator
-	and_operator
-	one of_operator
-	not_operator 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: specification_operand_select 
   <express_ref linkend="product_class:arm:Product_class_arm.specification_operand_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.specification_operand_select">
	<description>
The Product_class_arm.specification_operand_select is a list of two alternate data type:
-	Specification_expression
-	Specification
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association">
	<description>
A Class_category_association is the association of a Specification_category with a Product_class Additionally, this assignment specifies if the usage of one or more Specification objects belonging to this Specification_category, is mandatory or optional for all products of that Product_class. 
NOTE     The assignment of a Specification_category to a Product_class does not replace the association of single members of the Specification_category to the Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_product_class">
	<descritpion>
The associated_product_class specifies the Product_class for which the Specification_category is valid.
	</descrition>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: mandatory 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.mandatory"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.mandatory">
	<descritpion>
The mandatory specifies whether the Specification objects referring to the associated Specification_category have to be used or may be used (optional) for products within the referenced Product_class. A value of 'true' indicates that the usage is mandatory. 
EXAMPLE : ?    
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_category">
	<description>
The associated_category specifies the Specification_category that is associated with the Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association">
	<description>
A Class_condition_association is the association of a Specification_expression with a Product_class.
The meaning of this association is specified further by the attribute condition_type 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: condition_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.condition_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.condition_type">
	<description>
The condition_type specifies the meaning of the association.
 Where applicable the following values shall be used: 
·	'design case': The Specification_expression specifies a condition when a given object has to be designed and verified. This value of the condition_type is for information only and shall not be interpreted when querying design cases or usage cases. For such a query, the value of the attribute 'configuration_type' of Configuration shall be evaluated; 
NOTE     This value may be used to precise when a given Product_function or a given Product_component has to be studied by the design department so that it provides solutions appropriate for the case specified by 'associated_condition' and 'associated_product_class'.
·	'identification': The Specification_expression specifies a condition that enables to distinguish the associated Product_class from other Product_class objects. This value is not applicable for a top level node in a hierarchy of Product_class objects. This identification is part of the identification of all sub classes of this Product_class; 
·	'part usage': The Specification_expression specifies a condition for the usage of the components of an Alternative_solution, the usage of an Item_instance or for the application of a Process_plan or a Process_operation_occurrence in the products of the associated Product_class. In this case, the Class_condition_association shall be referenced by at least one Configuration object; 
·	'validity': The Specification_expression specifies a condition that is used to verify a Product_specification for the associated Product_class. That means that the Specification_expression evaluates to 'true' if the set of Specification objects is valid; otherwise it evaluates to 'false' with the meaning that the specified object is invalid for the Product_class. 
It is valid for all products belonging to the 'associated_product_class’ in case of the condition types 'identification' and 'validity'.
	</description> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_product_class">
	<description>
The associated_product_class specifies the Product_class for which the Specification_expression is valid.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.description">
	<description>
The description specifies additional information about the Class_condition_association
.The description need not be specified for a particular Class_condition_association. 
If present, there shall be exactly one object that defines the description for a Class_condition_association
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_condition">
	<description>
The associated_condition specifies the Specification_expression that is assigned to the Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association">
	<description>
A Class_inclusion_association is the assignment of a Specification_inclusion to a Product_class. 
This assignment contains the information that a particular Specification_inclusion applies for all products of that Product_class.   
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_product_class">
	<description>
The associated_product_class specifies the Product_class for which the Specification_inclusion is valid. 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.description">
	<description>
The description specifies additional information about the Class_inclusion_association.
The description need not be specified for a particular Class_inclusion_association. 
If present, there shall be exactly one object that defines the description for a Class_inclusion_association.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_inclusion 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_inclusion">
	<description>
 The associated_inclusion specifies the Specification_inclusion that is associated with the Product_class
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association">
	<description>
Class_specification_association is an association of a Specification with a Product_class. 
This Specification serves as a potential characteristic of all products belonging to the Product_class. 
The meaning of this association is specified further by the attribute association_type
	</description> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_product_class">
	<description>
The associated_product_class specifies the Product_class for which the Specification is valid.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: association_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.association_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.association_type">
	<description>
The association_type specifies the kind of availability of a particular Specification in a Product_class.
Where applicable the following values shall be used: 
·	'availability': The Specification is a potential characteristic of any product belonging to a high level Product_class. It is not specified if this is an option or a standard; 
EXAMPLE     'front wheel drive' or 'four wheel drive' are available for a product class 'Voyager'.
·	'identification': The Specification is a characteristic that enables to distinguish the associated Product_class from other Product_class objects. This is a kind of 'non replaceable standard'. This value is not applicable for a top level node in a hierarchy of Product_class objects. This identification is part of the identification of all sub classes of this Product_class; 
EXAMPLE     The car body type 'limousine' is identifying for product class 'S40'.
·	'non replaceable standard': The Specification is a characteristic of all products belonging to the Product_class; 
EXAMPLE     'South East Asia climate zone' is a 'non replaceable standard' for a car that is produced for use in that particular geographic area.
·	'option': The Specification is a characteristic of a product if explicitly chosen. The Specification replaces another Specification of the same specification category if the replaced Specification is associated with the Product_class as 'replaceable standard'; 
EXAMPLE     'sun roof' or 'radio with CD' are common options proposed to the customer.
·	'part usage': The Specification is a characteristic for the usage of the components of an Alternative_solution, the usage of an Item_instance, or for the application of a Process_plan or a Process_operation_occurrence in the products of the associated Product_class; 
·	'replaceable standard': The Specification is a default characteristic of the products belonging to the Product_class as long as no other specification of the same Specification_category is chosen. 
EXAMPLE     'power brake' is a 'replaceable standard' for product class 'Golf'; it can be replaced by 'ABS' which is another specification of the same specification category 'brake system'
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_specification">
	<description>
The associated_specification specifies the Specification that is associated with the Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class">
	<description>
A Product_class is the identification of a set of similar products to be offered to the market. Product_class objects that are related to each other by a Product_class_relationship do not inherit any characteristics from each other.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.id">
	<description>
The id specifies the identifier of the Product_class that shall be unique. 
NOTE     The scope of the uniqueness is usually dependent on the form of implementation; it may be e.g., a physical file or a data base.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: name 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.name">
	<description>
The name specifies the word or group of words by which the Product_class is referred to. 
The name need not be specified for a particular Product_class. 
If present, there shall be exactly one object that defines the name for a Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.version_id">
	<description>
The version_id specifies the identification of a particular version of a Product_class. 
The version_id need not be specified for a particular Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: level_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.level_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.level_type">
	<description>
The level_type specifies the level or category of this Product_class in a hierarchical structure of Product_class objects.
The level_type shall only be used if and only if the level_type is specified in the the context of the unit of functionality 'specification_control' (UoF S7). 
EXAMPLE     A high level Product_class (level_type = 'enterprise') may be used to define all Specification_category and Specification objects for all Product_class objects of an enterprise with several brands and companies. 
A second level Product_class (level_type = 'platform') may be used to group all products that are based on the same technical concept (platform); these products may belong to different brands. 
A third level Product_class (level_type = 'car family') may be used to group all products that have a common base and a fixed set of characteristics (specification categories). 
A fourth level Product_class (level_type = 'car type') may represent products that are offered to the market; this level of Product_class may be defined by the marketing department. A set of specifications sufficient to produce the car is associated with its Product_class. Within this association, a distinction is made between standard characteristics (e.g. number of doors) and options that have to be chosen (e.g., outside colour) or that may be chosen by the customer (e.g., radio).
The level_type need not be specified for a particular Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.description">
	<description>
The description specifies additional information about the Product_class.
The description need not be specified for a particular Product_class. 
If present, there shall be exactly one object that defines the description for a Product_class.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship">
	<description>
A Product_class_relationship is a relationship between two Product_class objects.  
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relating 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relating">
	<description>
The relating specifies the first of the two Product_class objects related by the Product_class_relationship. 
NOTE     The semantics of this attribute are defined by the attribute relation_type
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: related 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.related">
	<description>
The related specifies the second of the two Product_class objects related by the Product_class_relationship. 
NOTE     The semantics of this attribute are defined by the attribute relation_type.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.description">
	<description>
The description specifies additional information about the Product_class_relationship.
If present, there shall be exactly one object that defines the description for a Product_class_relationship.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relation_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relation_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relation_type">
	<description>
The relation_type specifies the meaning of the relationship. 
Where applicable the following values shall be used: 
·	'derivation': the Product_class_relationship defines a relationship where the related Product_class is derived from the relating Product_class; 
·	'hierarchy': the Product_class_relationship defines a relationship where the relating Product_class is on a higher level in the hierarchy of Product_class objects than the related Product_class; 
·	'substitution': The Product_class_relationship defines a relationship where the related Product_class replaces the relating Product_class; 
·	'version sequence': the Product_class_relationship defines a relationship where the relating Product_class is the preceding version and the related Product_class is the following version. 
NOTE     The relationship does not imply inheritance of any kind between the application objects that are related.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification">
	<description>
A Specification is a characteristic of a product. A Specification discriminates one product from other members of the same Product_class. A Specification refers to a Specification_category that completes the semantics of the Specification. 
NOTE 1 -  A Specification may be a characteristic of the members of more than one Product_class using Class_specification_association objects.
NOTE 2 -  A Specification in combination with a Configuration may be used to define under which conditions an Item is used for a product of a Product_class.
EXAMPLE     'coupe', 'hatch back', or 'sedan' are examples for specifications belonging to the Specification_category of type 'car body'. 'radio 1 with CD player' and 'radio 2 without CD player' are examples for specifications belonging to the Specification_category of type 'radio equipment'. 'disk brake' and 'drum brake' are examples for specifications belonging to the Specification_category of type 'braking system'.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.id">
	<description>
The id specifies the identifier of the Specification that shall be unique within the scope of a Specification_category.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: name 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.name">
	<description>
The name specifies the word or group of words by which the Specification is referred to. . 
The name need not be specified for a particular Specification. 
If present, there shall be exactly one object that defines the name for a Specification.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.description">
	<description>
The description specifies additional information about the Specification.  
The description need not be specified for a particular Specification. 
If present, there shall be exactly one object that defines the description for a Specification
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.category">
	<description>
The category specifies the Specification_category that completes the semantics of the Specification.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.version_id">
	<description>
The version_id specifies the identification of a particular version of a Specification. 
The version_id need not be specified for a particular Specification.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: package 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.package"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.package">
	<description>
The package specifies whether this Specification represents a package of Specification objects or not. Such a Specification combines those Specification objects that shall be offered to the market as a set. In the case where package is 'true', there shall be exactly one Specification_inclusion per Product_class considered, that refers to this Specification as 'if_condition'. The Specification objects that are members of the package, shall be specified as included_specification. 
NOTE 1 -  Commercial packages may be defined by the marketing department.
NOTE 2 -  Usually the members of a package belong to distinct Specification_category objects.
EXAMPLE     A sports package contains sports seats, a special steering wheel, special tyres and wheels. A winter package contains heated front seats, heated windshield washers, heated exterior mirrors, and special tyres.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category">
	<description>
A Specification_category is the definition of a set of Specification objects serving the same purpose. 
EXAMPLE     The category 'kind of drive' for the Specification objects 'front wheel drive' and 'rear wheel drive' or the category 'level of equipment' for the Specification objects 'standard', 'comfortable', and 'luxurious' are examples for a Specification_category.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: implicit_exclusive_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.implicit_exclusive_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.implicit_exclusive_condition">
	<description>
The implicit_exclusive_condition specifies whether the Specification objects within the Specification_category are mutually exclusive for the production of one particular product. 
A value of 'true' indicates that the referenced objects are mutually exclusive for the production of the particular product. 
EXAMPLE     'safety equipment' is an example for a non mutually exclusive Specification_category if e.g. ABS and airbag are Specification objects in this category. 'engine' is an example for a Specification_category with an implicit_exclusive_condition since usually only one engine can be mounted for power supply.
NOTE     More complex conditions can be handled using Specification_expression objects 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.id">
	<description>
The id specifies the identifier of the Specification_category that shall be unique. 
NOTE     The scope of uniqueness is usually dependent on the form of implementation.
EXAMPLE     The scope of uniqueness may be set by the extent of a physical file or data base.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.description">
	<description>
The id specifies the identifier of the Specification_category that shall be unique. 
NOTE     The scope of uniqueness is usually dependent on the form of implementation.
EXAMPLE     The scope of uniqueness may be set by the extent of a physical file or data base.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy">
	<description>
A Specification_category_hierarchy is used to build up hierarchical structures of Specification_category objects. 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: sub_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.sub_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.sub_category">
	<description>
The sub_category is the lower level of Specification_category in Specification_category_hierarchy.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: super_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.super_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.super_category">
	<description>
The super_category is the higher level of Specification_category in Specification_category_hierarchy.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression">
	<description>
A Specification_expression is a combination of Specification objects formed by Boolean operations. 
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.description">
	<description>
The description specifies additional information about the Specification_expression.  
The description need not be specified for a particular Specification_expression. 
If present, there shall be exactly one object that defines the description for a Specification_expression.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operation 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operation">
	<description>
The operation specifies the kind of Boolean operation. Four kinds of operations are permitted: 
·	'and': All of the identified Specification objects shall be used; 
·	'or': A subset or all of the identified Specification objects shall be used; 
·	'oneof': Exactly one of the identified Specification objects shall be used;
'not': The identified Specification shall not be used.
	</description> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operand 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operand">
	<description>
The operand specifies the operands of the Boolean operation that are either Specification objects or other Specification_expression objects. 
There shall be at least one object that defines the operand for a Specification_expression.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.id">
	<description>
The id specifies the identifier of the Specification_expression. 
The id need not be specified for a particular Specification_expression.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion">
	<description>
A Specification_inclusion is the representation of the statement that specifies that the application of a Specification or of a Specification_expression implies the inclusion of an additional Specification or Specification_expression. 
NOTE     The Specification_inclusion is intended to complete the set of Specification objects for a Product_specification in order to enable the manufacturing of the product on the basis of an initial set of Specification objects defined.
EXAMPLE     The source of such a completion may be a customer order.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: if_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.if_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.if_condition">
	<description>
The if_condition specifies the Specification or the Specification_expression that serves as the condition for the inclusion. 
There shall be exactly one object that defines the if_condition for a Specification_inclusion.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: included_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.included_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.included_specification">
	<description>
The included_specification specifies the Specification or the Specification_expression objects that are to be included. The included_specification shall not reference a Specification_expression with an operation of type 'or' or 'oneof', except for negating expressions, i.e., as participants in an expression preceded by a 'not' operator. Expressions of operator 'not' shall not be nested within each other. 
NOTE 1 -  In the case where more than one Specification is to be included a Specification_expression of type AND shall be used.
NOTE 2 -  In the case where the included_specification is a NOT expression, the object actually defines an exclusion.
There shall be exactly one object that defines the included_specification for a Specification_inclusion.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.description">
	<description>
The description specifies additional information about the Specification_inclusion. 
The description need not be specified for a particular Specification_inclusion. 
If present, there shall be exactly one object that defines the description for a Specification_inclusion.
	</description>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.id">
	<description>
The id specifies the identifier of the Specification_inclusion. 
The id need not be specified for a particular Specification_inclusion.
	</description>
</ext_description>
</ext_descriptions>
