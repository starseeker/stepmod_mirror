<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="product_class" schema_file="arm.xml" describe.selects="YES" 
rcs.date="$Date: 2003/02/10 10:20:04 $" rcs.revision="$Revision: 1.17 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Product_class_arm
   <express_ref linkend="product_class:arm:Product_class_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Product_class_arm">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: expression_operator 
   <express_ref linkend="product_class:arm:Product_class_arm.expression_operator"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.expression_operator">
 The <b>expression_operator</b> type is an enumeration of the following Boolean operators:
<ul>
<li>or_operator;</li>
<li>and_operator;</li>
<li>oneof_operator;</li>
<li>not_operator.</li></ul>
<note>These operators can be used in a <b>Specification_expression</b>.</note>
<p>In the case where these operators are used in a <b>Specification_expression</b>, evaluation of the operation is done in the context of a product.
The result depends on the operators in the expression and on whether that product, that may be represented within an instance of  <express_ref linkend="specified_product:arm:Specified_product_arm.Product_specification"/>, possesses or not the specifications that are referred to in the <b>Specification_expression</b>.
</p>
</ext_description>

<ext_description linkend="Product_class_arm.expression_operator.or_operator">
The <b>or_operator</b> specifies a logical operation that is true if at least one of the operands is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.and_operator">
The <b>and_operator</b> specifies a logical operation that is true if every operand is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.oneof_operator">
The <b>oneof_operator</b> specifies a logical operation that is true if only one of the operands is true.
</ext_description>
<ext_description linkend="Product_class_arm.expression_operator.not_operator">
The <b>not_operator</b> specifies a logical operation that is true if none of the operands is true.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Type: specification_operand_select 
   <express_ref linkend="product_class:arm:Product_class_arm.specification_operand_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.specification_operand_select">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association">
A <b>Class_category_association</b> is the association of a <b>Specification_category</b> with a <b>Product_class</b>. 
<p>This assignment specifies that the related category of specifications is relevant for the products of the <b>Product_class</b>. In addition, it specifies if the usage of one or more specifications belonging to this <b>Specification_category</b>, is mandatory or optional for all products of that <b>Product_class</b>.</p> 
<example number="1">A category of specifications characterizing the available colours may be associated with a <b>Product_class</b> characterizing a family of seats.</example>
<note>The assignment of a <b>Specification_category</b> to a <b>Product_class</b> does not replace the association of single members of the <b>Specification_category</b> to the <b>Product_class</b>.
</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_product_class">
The <b>Product_class</b> for which the <b>Specification_category</b> is relevant.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: mandatory 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.mandatory"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.mandatory">
A boolean value that specifies whether the <b>Specification</b> instances referring to the associated <b>Specification_category</b> have to be used or may be used (optional) for products within the referenced <b>Product_class</b>. A value of 'true' indicates that the usage is mandatory. 
<example number="2">The <b>Specification_category</b> instance 'additional optional features' may be considered as optional while the <b>Specification_category</b> instance 'colour' is usually a mandatory category.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_category_association  Attribute: associated_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_category_association.associated_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_category_association.associated_category">
The <b>Specification_category</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association">
A <b>Class_condition_association</b> is the association of a <b>Specification_expression</b> with a <b>Product_class</b>.
<p>This assignment specifies that the related specification expression is relevant for the products of the <b>Product_class</b>.</p> 
<p>The meaning and context of use of this association is specified further by the attribute <b>condition_type</b> .
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: condition_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.condition_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.condition_type">
The <b>condition_type</b> specifies the meaning of the association.
<p>Where applicable, the following values shall be used:</p> 
<ul>
<li>'design case': The <b>Specification_expression</b> specifies a condition when a given object has to be designed and verified; 
<note number="1">This value of the <b>condition_type</b> may be used when the <b>Class_condition_association</b> is referred to by a <express_ref linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> with configuration_type 'design'. 
</note>
<example>This value may be used to precise when a given <express_ref
    linkend="functional_breakdown:arm:Functional_breakdown_arm.Functional_element_definition"/> or a given <express_ref
    linkend="physical_breakdown:arm:Physical_breakdown_arm.Physical_element_definition"/> has to be studied by the design department so that it provides solutions appropriate for the case specified by associated_condition and associated_product_class.
		</example>
</li>
<li>'identification': The <b>Specification_expression</b> specifies a condition that enables to distinguish the associated <b>Product_class</b> from other <b>Product_class</b> instances.
This value is not applicable for a top level node in a hierarchy of Product_class instances.
This identification is part of the identification of all sub classes of this <b>Product_class</b>;</li>
<li>'part usage': The <b>Specification_expression</b> specifies a condition for the usage of particular parts in the products of the associated <b>Product_class</b> or of particular process plans or process operations to manufacture these products;
<note number="2">The parts may be referred to as elements of an <express_ref
    linkend="alternative_solution:arm:Alternative_solution_arm.Alternative_solution"/>, or as instances of <express_ref
    linkend="product_occurrence:arm:Product_occurrence_arm.Product_occurrence"/>.
</note>
</li>
<li>'validity': The <b>Specification_expression</b> specifies a condition that is used to verify products, represented as instances of the <b>Product_specification</b> entity, belonging to the associated <b>Product_class</b>.
The actual set of specifications implemented within any <b>Product_specification</b>, member of the associated_product_class, shall be such the associated <b>Specification_expression</b> evaluates to TRUE.
If it evaluates to FALSE, those products are invalid.
</li></ul>
<p>In the cases 'part usage' and 'design case', the <b>Class_condition_association</b> shall be referenced by at least one <express_ref
    linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> instance. 
</p>
<p>In the cases 'identification' and 'validity', the associated_condition applies to all products belonging to the associated_product_class.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_product_class">
The <b>Product_class</b> for which the <b>Specification_expression</b> is valid.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.description">
A text that provides additional information about the <b>Class_condition_association</b>
<p>The description need not be specified for a particular <b>Class_condition_association</b>.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_condition_association  Attribute: associated_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_condition_association.associated_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_condition_association.associated_condition">
The <b>Specification_expression</b> that is assigned to the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association">
A <b>Class_inclusion_association</b> is the assignment of a <b>Specification_inclusion</b> to a <b>Product_class</b>. This assignment contains the information that a particular <b>Specification_inclusion</b> applies for all products of that <b>Product_class</b>.
<p>This assignment specifies that the related specification inclusion is relevant for the products of the <b>Product_class</b>.</p> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_product_class">
The <b>Product_class</b> for which the <b>Specification_inclusion</b> is relevant.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.description">
The <b>description</b> specifies additional information about the <b>Class_inclusion_association</b>.
<p>The description need not be specified for a particular <b>Class_inclusion_association</b>.</p> 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_inclusion_association  Attribute: associated_inclusion 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_inclusion_association.associated_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_inclusion_association.associated_inclusion">
The <b>Specification_inclusion</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association">
<b>Class_specification_association</b> is an association of a <b>Specification</b> with a <b>Product_class</b>. 
<p>This assignment specifies that the related specification is relevant for the products of the <b>Product_class</b>.
This <b>Specification</b> serves as a potential characteristic of all products belonging to the <b>Product_class</b>.</p>  
<p>The meaning of this association is specified further by the attribute association_type.
</p>
<note number="1">Effectivity information may be added to characterize the period when the specification is relevant within the <b>Product_class</b>, with that considered association type</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_product_class 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_product_class">
The <b>Product_class</b> for which the <b>Specification</b> is relevant.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: association_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.association_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.association_type">
The <b>association_type</b> specifies the kind of availability of a particular <b>Specification</b> in a <b>Product_class</b>. 
<p>Where applicable, the following values shall be used:</p>
<ul>
<li>'availability': The <b>Specification</b> is a potential characteristic of any product belonging to a high level <b>Product_class</b>. It is not specified if this is an option or a standard;
<example number="1">'brown colour' or 'white colour' are available for a generic product of the <b>Product_class</b> instance 'Family 1'.
</example></li>

<li>'identification': The <b>Specification</b> is a characteristic that enables to distinguish the associated <b>Product_class</b> from other <b>Product_class</b> objects. This is a kind of non replaceable standard. This value is not applicable for a top level node in a hierarchy of <b>Product_class</b> objects. This identification is part of the identification of all sub classes of this <b>Product_class</b>;
<example  number="2"> '3' is the <b>Specification</b> instance that distinguish all the sofas with 3 cushions from the 4 cushions sofas in the <b>Product_class</b> instance that includes 3 and 4 cushions sofas.</example></li>
<li>'non replaceable standard': The <b>Specification</b> is a characteristic of all products belonging to the <b>Product_class</b>;
<example number="3">South East Asia climate zone is a non replaceable standard for a product that is produced for use in that particular geographic area.</example>
</li><li>'option': The <b>Specification</b> instance is a characteristic of a product if explicitly chosen. The relevant <b>Specification</b> instance replaces another <b>Specification</b> instance of the same <b>Specification_category</b> instance if the replaced <b>Specification</b> instance is associated with the <b>Product_class</b> as replaceable standard; 
<example number="4">Additional features are common customization options proposed to the customer.</example></li>

<li>'replaceable standard': The <b>Specification</b> is a default characteristic of the products belonging to the <b>Product_class</b> as long as no other <b>Specification</b> of the same <b>Specification_category</b> is chosen;
<example number="5"> 'lack painting' is a replaceable standard for <b>Product_class</b> instance 'Furniture family 1'; it can be replaced by other types of painting which is another <b>Specification</b> instance of the same <b>Specification_category</b> instance 'finishing'.</example>
</li>

<li>'design case': The <b>Specification_expression</b> specifies a condition when a given object has to be designed and verified; 
<note number="2">This value of the condition_type may be used when the <b>Class_specification_association</b> is referred to by a <express_ref linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> with configuration_type 'design'. 
</note>
<example number="6">This value may be used to precise when a given <express_ref
    linkend="functional_breakdown:arm:Functional_breakdown_arm.Functional_element_definition"/> or a given <express_ref
    linkend="physical_breakdown:arm:Physical_breakdown_arm.Physical_element_definition"/> has to be studied by the design department so that it provides solutions appropriate for the case specified by the associated_specification and associated_product_class.
		</example>
</li>
<li>'part usage': The <b>Specification_expression</b> specifies a condition for the usage of particular parts in the products of the associated <b>Product_class</b> or of particular process plans or process operations to manufacture these products.
<note number="3">The parts may be referred to as elements of an <express_ref
    linkend="alternative_solution:arm:Alternative_solution_arm.Alternative_solution"/>, or as instances of <express_ref
    linkend="product_occurrence:arm:Product_occurrence_arm.Product_occurrence"/>.
</note>
</li>
</ul>
<p>In the cases 'part usage' and 'design case', the <b>Class_specification_association</b> shall be referenced by at least one <express_ref
    linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> instance. 
</p>

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Class_specification_association  Attribute: associated_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Class_specification_association.associated_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Class_specification_association.associated_specification">
The <b>Specification</b> that is associated with the <b>Product_class</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class">
A <b>Product_class</b> is a type of <express_ref
    linkend="product_concept_identification:arm:Product_concept_identification_arm.Product_concept"/> that may be characterized with specifications.
<example>
A marketed family of wardrobes may be characterized by specifications of colour, number of doors and height.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.version_id">
The version identifier of the <b>Product_class</b>.
<p>The version_id need not be specified for a particular Product_class.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class  Attribute: level_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class.level_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class.level_type">
The <b>level_type</b> specifies the level or category of this Product_class in a hierarchical structure of product classes.
<p>The level_type need not be specified for a particular Product_class.</p>
</ext_description>

<ext_description linkend="Product_class_arm.Product_class.wr:WR1">
The target_market attribute shall not be specified.
<note>When needed, characterization of the target market for a product class can be done, as for other product features, using the Specification_category and Specification entity data types.
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship">
A <b>Product_class_relationship</b> is a relationship between two instances of <b>Product_class</b>.
<p>Instances of <b>Product_class</b> that are related to each other by a <b>Product_class_relationship</b>, do not inherit any characteristics from each other.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relating 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relating">
The first of the two instances of <b>Product_class</b> related by the <b>Product_class_relationship</b>.
<note number="1">The semantics of this attribute is defined by the attribute relation_type.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: related 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.related">
The second of the two instances of <b>Product_class</b> related by the <b>Product_class_relationship</b>.
<note number="2">The semantics of this attribute is defined by the attribute relation_type.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.description">
A text that provides additional information about the <b>Product_class_relationship</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Product_class_relationship  Attribute: relation_type 
   <express_ref linkend="product_class:arm:Product_class_arm.Product_class_relationship.relation_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Product_class_relationship.relation_type">
The <b>relation_type</b> specifies the meaning of the relationship.<p> 
Where applicable the following values shall be used:</p>
<ul>
<li>'derivation': the related <b>Product_class</b> is derived from the relating <b>Product_class</b>;
</li><li>'hierarchy': the relating <b>Product_class</b> is on a higher level in the hierarchy of <b>Product_class</b> objects than the related Product_class;
</li><li>'substitution': the related <b>Product_class</b> replaces the relating <b>Product_class</b>;
</li><li>'version sequence': the relating <b>Product_class</b> is the preceding version and the related <b>Product_class</b> is the following version.</li>
</ul>
<example>
The following is an example of hierarchical structure of <b>Product_class</b> instances, the 
hierarchical relationships being established with 
instances of <b>Product_class_relationship</b> with relation_type 'hierarchy':
<ul>a high level <b>Product_class</b> instance (level_type = enterprise) may be used to define all 
the <b>Specification_category</b> and <b>Specification</b> instances for all <b>Product_class</b> instances of an enterprise 
with several brands and companies;<p></p>
a second level <b>Product_class</b> instance (level_type = designer) may be used to group all products 
that are based on the same concept (for example the same designer); these products may belong 
to different brands;<p></p>
a third level <b>Product_class</b> instance (level_type = product family) may be used to group all 
products that have a common base and a fixed set of characteristics (specification categories);<p></p>
a fourth level <b>Product_class</b> instance (level_type = product type) may represent products 
that are offered to the market; this level of Product_class may be defined by the 
marketing department. 
A set of specifications sufficient to produce the product is associated with this level 
of <b>Product_class</b>. Within this association, a distinction is made between standard 
characteristics (for example 'number of doors') and options that have to be chosen 
(for example, 'colour') or that may be chosen by the customer 
(for example, 'additional features').
</ul>
</example>

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification">
A <b>Specification</b> is a characteristic of products to be proposed to customers or users. 
<note number="1">A <b>Specification</b> may be used to discriminate a product from other members of the same <b>Product_class</b>. 
</note>
<p>A <b>Specification</b> refers to a <b>Specification_category</b> that completes the semantics of the <b>Specification</b>.</p>
<example number="1">'green', 'white', or 'black' are examples for specifications belonging to the <b>Specification_category</b> of type 'colour'. 'set of 3 drawers' or 'set of 5 drawers' are examples for specifications belonging to the Specification_category of type 'additional feature'.
</example>
<note number="2">A <b>Specification</b> may be a characteristic of the members of more than one <b>Product_class</b> using Class_specification_association objects.
</note>
<note number="3">A <b>Specification</b> in combination with a <express_ref
    linkend="specification_based_configuration:arm:Specification_based_configuration_arm.Configuration"/> may be used to define under which conditions a Product is used for a product of a <b>Product_class</b>.
</note></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.id">
The identifier of the <b>Specification</b>.
It shall be unique within the scope of a <b>Specification_category</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: name 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.name">
The word or group of words by which the <b>Specification</b> is referred to.
<p>The name need not be specified for a particular Specification. 
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.description">
A text that provides  additional information about the <b>Specification</b>.<p>  
The description need not be specified for a particular Specification.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.category">
The <b>Specification_category</b> which the Specification belongs to.
<note number="4">The category completes the semantics of the <b>Specification</b>.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: version_id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.version_id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.version_id">
the identification of the version of the <b>Specification</b>.<p> 
The version_id need not be specified for a particular Specification.
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification  Attribute: package 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification.package"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification.package">
A boolean value that specifies whether this Specification represents a package of specifications. 
Such a Specification combines those specifications that shall be offered to the market as a set. 
<p>In the case where package is 'true', there shall be exactly one <b>Specification_inclusion</b> per <b>Product_class</b> considered, that refers to this <b>Specification</b> as <b>if_condition</b>. 
The Specification objects that are members of the package, shall be identified within a <b>Specification_expression</b> referred to  by the <b>Specification_inclusion</b> as <b>included_specification</b>.</p> 
<note number="5">Commercial packages may be defined by the marketing department.</note>
<note number="6">Usually the members of a package belong to distinct specification categories.
</note>
<example number="2">A sports package for a Product_class of cars contains sports seats, a special steering wheel, special tires and wheels. 
A winter package contains heated front seats, heated windshield washers, heated exterior mirrors, and special tires.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category">
A <b>Specification_category</b> is the identification of a set of specifications serving the same purpose. 
<example number="1">The category 'colours', containing the specifications 'green' and 'white' and the category 'additional features', containing the specifications 'set of 3 drawers', 'set of 5 drawers', are examples for a <b>Specification_category</b>.
</example></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: implicit_exclusive_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.implicit_exclusive_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.implicit_exclusive_condition">
A boolean value that specifies whether the specifications within the <b>Specification_category</b> are mutually exclusive for the production of a particular product. 
A value of 'true' indicates that the referenced objects are mutually exclusive. 
<example number="2">'additional features' is an example for a non mutually exclusive <b>Specification_category</b> if, for example, 'set of 3 drawers' and 'door with mirror' are Specification objects in this category. 'colours' is an example for a <b>Specification_category</b> with an <b>implicit_exclusive_condition</b> since usually the product can have only one 'colour'.
</example>
More complex conditions can be handled using instances of <b>Specification_expression</b>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.id">
The identifier of the <b>Specification_category</b> that shall be unique. 
<note>The scope of uniqueness is usually dependent on the form of implementation. 
The scope of uniqueness may be, for example, constrained by the extent of a physical file or data base.
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category.description">
A text that provides additional information about the <b>Specification_category</b>.
<example number="3">
The description 'trim' may characterize a <b>Specification_category</b> for instances of Specification that control quality and colour of the finishing of the product including, for example, door panels and upholstery.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy">
A <b>Specification_category_hierarchy</b> is used to build up hierarchical structures of instances of <b>Specification_category</b>.
<example>The <b>Specification_category</b> "Type of cover", for sofas, contains the specifications: "Leather" and "Alcantara". 
The <b>Specification_category</b> "Leather cover kind", containing the specifications "Buffalo cover" and "Kidskin cover", may be a sub_category of the <b>Specification_category</b> "Type of cover".
</example> 
<p>The fact that a <b>Specification_category</b> is a sub_category of another <b>Specification_category</b> does not involve that this sub category inherits the associations of the super category with product classes.</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: sub_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.sub_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.sub_category">
The <b>Specification_category</b> that is the lower level of the considered hierarchy.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_category_hierarchy  Attribute: super_category 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_category_hierarchy.super_category"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_category_hierarchy.super_category">
The <b>Specification_category</b> that is the higher level of the considered hierarchy.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression">
A <b>Specification_expression</b> is a combination of specifications formed with Boolean operations.
<example>
If color "Light blue" of sofa when selected with "Alcantara" coating requires a special finishing operation, a Specification_expression with the expression
"Light blue" AND "Alcantara", will be created to be used to define a use case of that particular process operation.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.description">
A text that provides  additional information about the <b>Specification_expression</b>.
<p>
The description need not be specified for a particular Specification_expression. 
</p>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operation 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operation">
The <b>operation</b> specifies the <b>specification_operator</b> used in the expression. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: operand 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.operand">
The set of instances of Specification or of Specification_expression that are the operands of the Boolean operation. 
</ext_description>
<ext_description linkend="Product_class_arm.Specification_expression.wr:WR1">
There is one <b>operand</b> when the <b>operation</b> is 'not', with all the other operations the operands are more than one.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_expression  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_expression.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_expression.id">
The identifier of the <b>Specification_expression</b>. 
<p>The id need not be specified for a particular Specification_expression.</p>
</ext_description>

<ext_description linkend="Product_class_arm.Specification_expression.wr:WR1">
If the operator is the not_operator, then there shall be only one operand.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion">
A <b>Specification_inclusion</b> is the representation of the statement that specifies that the application of a Specification or of a Specification_expression implies the inclusion of an additional <b>Specification</b> or <b>Specification_expression</b>. 
<note>A <b>Specification_inclusion</b> may be used to complete the set of specifications of a <b>Product_class</b>,
introducing dependency rules between these specifications.
</note>
<example>
A <b>Specification_inclusion</b>, associated with a <b>Product_class</b> "sofa", may represent the fact that the <b>Specification</b> "Leather" implies the <b>Specification_expression</b>: "3 seats" OR ("2 seats" AND "headrests").
Such an constraint would imply that if a customer choses a leather 2-seats sofa, he would get also headrests.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: if_condition 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.if_condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.if_condition">
The <b>Specification</b> or the <b>Specification_expression</b> that serves as the condition for the inclusion. 
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: included_specification 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.included_specification"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.included_specification">
The <b>Specification</b> or the <b>Specification_expression</b> that is implied if the if_condition is met.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: description 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.description">
A text that provides additional information about the <b>Specification_inclusion</b>.<p>
The description need not be specified for a particular Specification_inclusion. 
</p></ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Product_class_arm  Entity: Specification_inclusion  Attribute: id 
   <express_ref linkend="product_class:arm:Product_class_arm.Specification_inclusion.id"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Product_class_arm.Specification_inclusion.id">
The identifier of the <b>Specification_inclusion</b>.<p> 
The id need not be specified for a particular Specification_inclusion.</p>
</ext_description>
</ext_descriptions>
