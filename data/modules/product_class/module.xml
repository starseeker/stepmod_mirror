<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.47 2014/01/22 22:49:22 thomasrthurman Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="product_class" name.french="Classe de produit" 
	part="1103" version="4" 
	wg.number="7791" 
	wg.number.arm="7792" 
	wg.number.mim="7793" 
	wg.number.supersedes="6254" 
	wg.number.arm.supersedes="6255" 
	wg.number.mim.supersedes="6256" 
	checklist.internal_review="6563" 
	checklist.project_leader="6564" 
	checklist.convener="6565" 
	status="TS" 
	language="E" 
   publication.year="2014-02"
   publication.date="2014-02-01"
	published="y" 
	previous.revision.year="2010-03" previous.revision.cancelled="NO" revision.complete="YES" 
	rcs.date="$Date: 2014/01/22 22:49:22 $" rcs.revision="$Revision: 1.47 $" development.folder="dvlp" sc4.working_group="12" xmlns:xlink="http://www.w3.org/1999/xlink">

	<keywords>     module, product class, specification, specification category, Boolean specification expression  </keywords>
	<contacts>
		<projlead ref="ap203ed2.projlead"/>
		<editor ref="ap203ed2.editor"/>
	</contacts>
	
	<changes>
		<change version="2">
			<arm.changes>
				<arm.modifications>
					<modified.object type="TYPE" name="specification_for_category"/>
				</arm.modifications>
			</arm.changes>	
		</change>
		
		<change version="3">
			<description>
					Minor editorial changes. Pages of ARM EPRESS-G diagram, which appears no longer in use, were removed.
			</description>	
		</change>
		
		<change version="4">
			<arm.changes>
				<arm.modifications>
					<modified.object type="TYPE" name="id_for_class"/>
				</arm.modifications>	
			</arm.changes>
		</change>
	</changes>
	
	<purpose> This part of ISO 10303 specifies an application module for the representation of the identification and characterization of families of similar products to be offered to the market. <example>
			<p>Many products offered to the market, which have a large number of options and variants, are grouped in families of products:</p>
			<ul>
				<li>furniture products can be grouped in collections, series, products and each type of furniture product can be offered with different finishings, different colours, different fabrics and different handles;</li>
				<li>passenger cars can be grouped in models and each model can have several options like radio, phone connection, satellite navigator, leather seats and different variants like colours.</li>
			</ul>
		</example>

	</purpose>
	<inscope>
      <li>identification, as a product class, of a set of similar products to be offered to the market;</li>
      <li>relationships between product classes;</li>
      <li>identification of categories of specifications that can be used to characterize the members of a product class;</li>
      <li>representation of Boolean expressions of specifications;</li>
      <li>representation of dependency rules between specifications;</li>
      <li>association of specification categories, of specifications, of specification expressions and of specification dependency rules with a product class;</li>
      <li>items within the scope of application module <module_ref linkend="group:1_scope">Group</module_ref>, ISO/TS 10303-1113;</li>
      <li>items within the scope of application module <module_ref linkend="identification_assignment:1_scope">Identification assignment</module_ref>, ISO/TS 10303-1021;</li>
      <li>items within the scope of application module <module_ref linkend="product_concept_identification:1_scope">Product concept identification</module_ref>, ISO/TS 10303-1060.</li>
   </inscope>
	<outscope>
		<li>identification of the parts to be used in the members of a product class;</li>
		<li>identification of process-plans to be used to manufacture, assemble or control the members of a product class.</li>
	</outscope>
	<normrefs>
		<normref.inc normref="ref10303-41"/>
		<normref.inc normref="ref10303-44"/>
		<normref.inc module.name="specification_based_configuration"/>
	</normrefs>
	<!--  <definition/>   <abbreviations/> -->
	<arm>
		<uof name="Product_class">
			<description>  The Product_class UoF specifies the data structure for the representation of families of products with a large number of variants.   Because of the large number of variants, there is no unique identification for each of the variants that could be produced.  <p>The main concepts that are used to handle this large number of variants are the following:</p>
				<ul>
					<li>product classes are used to identify sets of similar products to be offered to the market;</li>
					<li>  specifications are used to describe characteristics of the products;</li>
					<li>  specification categories are used to group similar characteristics of the products;</li>
					<li>  specification expressions are used to control the usage of a part within a product and to represent conditions for product classes.</li>
				</ul>
			</description>
			<uof.ae entity="Class_category_association"/>
			<uof.ae entity="Class_condition_association"/>
			<uof.ae entity="Class_inclusion_association"/>
			<uof.ae entity="Class_specification_association"/>
			<uof.ae entity="Product_class"/>
			<uof.ae entity="Product_class_relationship"/>
			<uof.ae entity="Specification"/>
			<uof.ae entity="Specification_category"/>
			<uof.ae entity="Specification_category_hierarchy"/>
			<uof.ae entity="Specification_expression"/>
			<uof.ae entity="Specification_inclusion"/>
		</uof>
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<mapping_table>
		<ae entity="Class_category_association" extensible="NO">
			<aimelt xml:space="preserve">product_concept_feature_category_usage</aimelt>
			<source xml:space="preserve">ISO 10303-1103</source>
			<refpath xml:space="preserve">product_concept_feature_category_usage &lt;= group_assignment</refpath>
			<aa attribute="associated_product_class" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">product_concept_feature_category_usage.items[1] -&gt; category_usage_item category_usage_item = product_class </refpath>
			</aa>
			<aa attribute="mandatory">
				<aimelt xml:space="preserve">object_role.name</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
				<refpath xml:space="preserve">product_concept_feature_category_usage &lt;= group_assignment group_assignment = role_select role_select &lt;- role_association.item_with_role role_association.role -&gt; object_role {(object_role.name = 'mandatory category usage') (object_role.name = 'optional category usage')} </refpath>
			</aa>
			<aa attribute="associated_category" assertion_to="Specification_category">
				<alt_map id="1">
					<description>if the associated specification category is not exclusive</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">product_concept_feature_category_usage &lt;= group_assignment group_assignment.assigned_group -&gt; group group =&gt; product_concept_feature_category |product_concept_feature_category| </refpath>
				</alt_map>
				<alt_map id="2">
					<description>if the associated specification category is exclusive</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">product_concept_feature_category_usage &lt;= group_assignment group_assignment.assigned_group -&gt; group group =&gt; product_concept_feature_category product_concept_feature_category =&gt; exclusive_product_concept_feature_category </refpath>
				</alt_map>
			</aa>
		</ae>
		<ae entity="Class_condition_association" extensible="NO">
			<aimelt xml:space="preserve">product_concept_feature_association</aimelt>
			<source xml:space="preserve">ISO 10303-44</source>
			<aa attribute="associated_product_class" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">  product_concept_feature_association.concept -&gt; product_concept product_concept =&gt; product_class </refpath>
			</aa>
			<aa attribute="associated_condition" assertion_to="Specification_expression">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> product_concept_feature_association.feature -&gt; product_concept_feature product_concept_feature =&gt; |conditional_concept_feature| </refpath>
			</aa>
			<aa attribute="condition_type">
				<aimelt xml:space="preserve">product_concept_feature_association.name</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve"> {(product_concept_feature_association.name)  (product_concept_feature_association.name = 'part usage') (product_concept_feature_association.name = 'identification') (product_concept_feature_association.name = 'validity') (product_concept_feature_association.name = 'design case')} </refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_feature_association.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
		</ae>
		<ae entity="Class_inclusion_association" extensible="NO">
			<aimelt xml:space="preserve">product_concept_feature_association</aimelt>
			<source xml:space="preserve">ISO 10303-44</source>
			<aa attribute="associated_product_class" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">  product_concept_feature_association.concept -&gt; product_concept product_concept =&gt; product_class </refpath>
			</aa>
			<aa attribute="associated_inclusion" assertion_to="Specification_inclusion">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> product_concept_feature_association.feature -&gt; product_concept_feature product_concept_feature =&gt; conditional_concept_feature conditional_concept_feature =&gt; inclusion_product_concept_feature </refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_feature_association.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
		</ae>
		<ae entity="Class_specification_association" extensible="NO">
			<aimelt xml:space="preserve">product_concept_feature_association</aimelt>
			<source xml:space="preserve">ISO 10303-44</source>
			<aa attribute="associated_product_class" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">  product_concept_feature_association.concept -&gt; product_concept product_concept =&gt; product_class </refpath>
			</aa>
			<aa attribute="associated_specification" assertion_to="Specification">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> product_concept_feature_association.feature -&gt; product_concept_feature product_concept_feature_association.feature -&gt; product_concept_feature {(|product_concept_feature|) (product_concept_feature =&gt; package_product_concept_feature)} </refpath>
			</aa>
			<aa attribute="association_type">
				<aimelt xml:space="preserve">product_concept_feature_association.name</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve"> {(product_concept_feature_association.name)  (product_concept_feature_association.name = 'replaceable standard') (product_concept_feature_association.name = 'non replaceable standard') (product_concept_feature_association.name = 'availability') (product_concept_feature_association.name = 'identification') (product_concept_feature_association.name = 'option') (product_concept_feature_association.name = 'part usage')} </refpath>
			</aa>
		</ae>
		<ae entity="Identification_assignment" original_module="identification_assignment" extensible="NO">
			<aa attribute="items" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath_extend extended_select="identification_item" xml:space="preserve">
					identification_item *&gt; id_for_class
					id_for_class = product_class
       			</refpath_extend>
			</aa>
		</ae>
		<ae entity="Product_class" extensible="NO">
			<aimelt xml:space="preserve">product_class</aimelt>
			<source xml:space="preserve">ISO 10303-1103</source>
			<refpath xml:space="preserve">product_class &lt;= [product_concept] [characterized_object] </refpath>
			<aa attribute="version_id">
				<aimelt xml:space="preserve">identification_assignment.assigned_id</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
				<refpath xml:space="preserve">id_for_class = product_class id_for_class &lt;* identification_item identification_item &lt;- applied_identification_assignment.items[i] applied_identification_assignment &lt;= identification_assignment {identification_assignment.role -&gt; identification_role identification_role.name = 'version'} identification_assignment.assigned_id </refpath>
			</aa>
			<aa attribute="level_type">
				<aimelt xml:space="preserve">characterized_object.name</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
				<refpath xml:space="preserve">product_class &lt;= product_concept characterized_object.name</refpath>
			</aa>
		</ae>
		<ae entity="Product_class_relationship" extensible="NO">
			<aimelt xml:space="preserve">product_concept_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-44</source>
			<aa attribute="relating" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> product_concept_relationship.relating_product_concept -&gt; product_concept =&gt; product_class </refpath>
			</aa>
			<aa attribute="related" assertion_to="Product_class">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> product_concept_relationship.related_product_concept -&gt; product_concept =&gt; product_class </refpath>
			</aa>
			<aa attribute="relation_type">
				<aimelt xml:space="preserve">product_concept_relationship.name</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve"> {(product_concept_relationship.name) (product_concept_relationship.name = 'derivation') (product_concept_relationship.name = 'hierarchy') (product_concept_relationship.name = 'version sequence') (product_concept_relationship.name = 'substitution')} </refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_relationship.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
		</ae>
		<ae entity="Specification" extensible="NO">
			<alt_map id="1">
				<description>If the specification is not a package of specifications</description>
				<aimelt xml:space="preserve">|product_concept_feature|</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</alt_map>
			<alt_map id="2">
				<description>If the specification is a package of specifications</description>
				<aimelt xml:space="preserve">package_product_concept_feature</aimelt>
				<source xml:space="preserve">ISO 10303-1103</source>
				<refpath xml:space="preserve">package_product_concept_feature &lt;= product_concept_feature</refpath>
			</alt_map>
			<aa attribute="id">
				<aimelt xml:space="preserve">product_concept_feature.id</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
			<aa attribute="name">
				<aimelt xml:space="preserve">product_concept_feature.name</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_feature.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
			</aa>
			<aa attribute="version_id">
				<aimelt xml:space="preserve">identification_assignment.assigned_id</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
				<refpath xml:space="preserve"> id_for_class = product_concept_feature id_for_class &lt;* identification_item  identification_item &lt;- applied_identification_assignment.items[i] applied_identification_assignment &lt;= identification_assignment {identification_assignment.role -&gt; identification_role identification_role.name = 'version'} identification_assignment.assigned_id</refpath>
			</aa>
			<aa attribute="category" assertion_to="Specification_category">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> specification_for_category = product_concept_feature specification_for_category &lt;* groupable_item  groupable_item &lt;- applied_group_assignment.items[i] applied_group_assignment &lt;= group_assignment {group_assignment = role_select role_select &lt;- role_association.item_with_role role_association.role -&gt; object_role object_role.name = 'specification category member'} group_assignment.assigned_group -&gt; group =&gt; product_concept_feature_category </refpath>
			</aa>
			<aa attribute="package">
				<aimelt xml:space="preserve">IDENTICAL MAPPING</aimelt>
			</aa>
		</ae>
		<ae entity="Specification_category" extensible="NO">
			<alt_map id="1">
				<description>if the associated specification category is not exclusive</description>
				<aimelt xml:space="preserve">|product_concept_feature_category|</aimelt>
				<source xml:space="preserve">ISO 10303-1103</source>
				<refpath xml:space="preserve">product_concept_feature_category &lt;= group</refpath>
			</alt_map>
			<alt_map id="2">
				<description>if the associated specification category is exclusive (implicit_exclusive_condition is true)</description>
				<aimelt xml:space="preserve">exclusive_product_concept_feature_category</aimelt>
				<source xml:space="preserve">ISO 10303-1103</source>
				<refpath xml:space="preserve">exclusive_product_concept_feature_category &lt;= product_concept_feature_category product_concept_feature_category &lt;= group</refpath>
			</alt_map>
			<aa attribute="id">
				<aimelt xml:space="preserve">group.name</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">group.description</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
			</aa>
			<aa attribute="implicit_exclusive_condition">
				<aimelt xml:space="preserve">IDENTICAL MAPPING</aimelt>
			</aa>
		</ae>
		<ae entity="Specification_category_hierarchy" extensible="NO">
			<aimelt xml:space="preserve">group_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-41</source>
			<refpath xml:space="preserve">{group_relationship.name = 'specification category hierarchy'}</refpath>
			<aa attribute="sub_category" assertion_to="Specification_category">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> group_relationship.related_group -&gt; group group =&gt; product_concept_feature_category </refpath>
			</aa>
			<aa attribute="super_category" assertion_to="Specification_category">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve"> group_relationship.relating_group -&gt; group group =&gt; product_concept_feature_category </refpath>
			</aa>
		</ae>
		<ae entity="Specification_expression" extensible="NO">
			<aimelt xml:space="preserve">|conditional_concept_feature|</aimelt>
			<source xml:space="preserve">ISO 10303-44</source>
			<aa attribute="id">
				<aimelt xml:space="preserve">product_concept_feature.id</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve">conditional_concept_feature &lt;= product_concept_feature product_concept_feature.id</refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_feature.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve">conditional_concept_feature &lt;= product_concept_feature product_concept_feature.description</refpath>
			</aa>
			<aa attribute="operation">
				<aimelt xml:space="preserve">concept_feature_relationship_with_condition.conditional_operator</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition.conditional_operator -&gt; concept_feature_operator {(concept_feature_operator.name = 'and') (concept_feature_operator.name = 'or') (concept_feature_operator.name = 'oneof') (concept_feature_operator.name = 'not')} </refpath>
			</aa>
			<aa attribute="operand" assertion_to="Specification">
				<alt_map id="1">
					<description>If the set of operands contains one element (NOT operation) <note number="1">Both relating_product_concept_feature and related_product_concept_feature shall refer to the same product_concept_feature.</note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship [concept_feature_relationship.relating_product_concept_feature -&gt;] [concept_feature_relationship.related_product_concept_feature -&gt;] product_concept_feature </refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the set of operands contains 2 elements <note number="2">There is no order nor specific semantics related to the usage of relating_product_concept_feature or related_product_concept_feature.</note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship (concept_feature_relationship.relating_product_concept_feature -&gt;) (concept_feature_relationship.related_product_concept_feature -&gt;) product_concept_feature</refpath>
				</alt_map>
				<alt_map id="3">
					<description>If the set of operands contains more than 2 elements <note number="3">A tree structure shall be built using the constructs stated in the parentheses.  In this case, all concept_feature_relationship_with_condition instances used reference the same concept_feature_operator as the conditional_operator.</note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship (concept_feature_relationship.relating_product_concept_feature -&gt;) (concept_feature_relationship.related_product_concept_feature -&gt;) product_concept_feature  {product_concept_feature =&gt; conditional_concept_feature conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition (concept_feature_relationship_with_condition &lt;= concept_feature_relationship)*}</refpath>
				</alt_map>
			</aa>
			<aa attribute="operand" assertion_to="Specification_expression">
				<alt_map id="1">
					<description>If the set of operands contains one element (NOT operation) <note number="1">Both relating_product_concept_feature and related_product_concept_feature shall refer to the same conditional_concept_feature.</note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship [concept_feature_relationship.relating_product_concept_feature -&gt;] [concept_feature_relationship.related_product_concept_feature -&gt;] product_concept_feature product_concept_feature =&gt; conditional_concept_feature </refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the set of operands contains 2 elements <note number="2">There is no order nor specific semantics related to the usage of relating_product_concept_feature or related_product_concept_feature.</note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship (concept_feature_relationship.relating_product_concept_feature -&gt;) (concept_feature_relationship.related_product_concept_feature -&gt;) product_concept_feature product_concept_feature =&gt; conditional_concept_feature </refpath>
				</alt_map>
				<alt_map id="3">
					<description>If the set of operands contains more than 2 elements <note number="3">A tree structure shall be built using the constructs stated in the parentheses.  </note>
					</description>
					<aimelt xml:space="preserve">PATH</aimelt>
					<refpath xml:space="preserve">conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition  concept_feature_relationship_with_condition &lt;= concept_feature_relationship (concept_feature_relationship.relating_product_concept_feature -&gt;) (concept_feature_relationship.related_product_concept_feature -&gt;) product_concept_feature  {product_concept_feature =&gt; conditional_concept_feature conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition (concept_feature_relationship_with_condition &lt;= concept_feature_relationship)*}</refpath>
				</alt_map>
			</aa>
		</ae>
		<ae entity="Specification_inclusion" extensible="NO">
			<aimelt xml:space="preserve">inclusion_product_concept_feature</aimelt>
			<source xml:space="preserve">ISO 10303-1103</source>
			<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition.conditional_operator -&gt; concept_feature_operator {concept_feature_operator.name = 'implication'} </refpath>
			<aa attribute="id">
				<aimelt xml:space="preserve">product_concept_feature.id</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature &lt;= product_concept_feature product_concept_feature.id</refpath>
			</aa>
			<aa attribute="description">
				<aimelt xml:space="preserve">product_concept_feature.description</aimelt>
				<source xml:space="preserve">ISO 10303-44</source>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature &lt;= product_concept_feature product_concept_feature.description</refpath>
			</aa>
			<aa attribute="if_condition" assertion_to="Specification">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition &lt;= concept_feature_relationship concept_feature_relationship.relating_product_concept_feature -&gt; product_concept_feature </refpath>
			</aa>
			<aa attribute="if_condition" assertion_to="Specification_expression">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition &lt;= concept_feature_relationship concept_feature_relationship.relating_product_concept_feature -&gt; product_concept_feature product_concept_feature =&gt; conditional_concept_feature </refpath>
			</aa>
			<aa attribute="included_specification" assertion_to="Specification">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition &lt;= concept_feature_relationship concept_feature_relationship.related_product_concept_feature -&gt; product_concept_feature </refpath>
			</aa>
			<aa attribute="included_specification" assertion_to="Specification_expression">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">inclusion_product_concept_feature &lt;= conditional_concept_feature  conditional_concept_feature.condition -&gt; concept_feature_relationship_with_condition concept_feature_relationship_with_condition &lt;= concept_feature_relationship concept_feature_relationship.related_product_concept_feature -&gt; product_concept_feature product_concept_feature =&gt; conditional_concept_feature </refpath>
			</aa>
		</ae>
	</mapping_table>
	<mim>
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
		</express-g>
		<shortnames>
			<shortname name="EPCFC" entity="exclusive_product_concept_feature_category"/>
			<shortname name="IPCF" entity="inclusion_product_concept_feature"/>
			<shortname name="PPCF" entity="package_product_concept_feature"/>
			<shortname name="PRDCLS" entity="product_class"/>
			<shortname name="PCF0" entity="product_concept_feature_category"/>
			<shortname name="PCFCU" entity="product_concept_feature_category_usage"/>
			<shortname name="CPCF" entity="characterized_product_concept_feature"/>
			<shortname name="CPCFC" entity="characterized_product_concept_feature_category"/>
		</shortnames>
	</mim>
	<!--
	<bibliography>
		<bibitem>
			<stdnumber>ISO/TS 10303-1109</stdnumber>
			<stdtitle>Industrial automation systems and integration &mdash; Product data representation and exchange &mdash; Part 1109: Application module: Alternative solution </stdtitle>
		</bibitem>
		<bibitem>
			<stdnumber>ISO/TS 10303-1063</stdnumber>
			<stdtitle>Industrial automation systems and integration &mdash; Product data representation and exchange &mdash; Part 1063: Application module: Product occurrence </stdtitle>
		</bibitem>
		<bibitem>
			<stdnumber>ISO/TS 10303-1216</stdnumber>
			<stdtitle>Industrial automation systems and integration &mdash; Product data representation and exchange &mdash; Part 1216: Application module: Functional breakdown </stdtitle>
		</bibitem>
		<bibitem>
			<stdnumber>ISO/TS 10303-1215</stdnumber>
			<stdtitle>Industrial automation systems and integration &mdash; Product data representation and exchange &mdash; Part 1215: Application module: Physical breakdown </stdtitle>
		</bibitem>
	</bibliography>
	-->
</module>
