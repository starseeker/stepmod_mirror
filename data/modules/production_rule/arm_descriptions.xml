<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="Production_rule" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2006/01/13 21:23:07 $" rcs.revision="$Revision: 1.7 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Production_rule_arm
   <express_ref linkend="Production_rule:arm:Production_rule_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Production_rule_arm">
</ext_description>

<!-- +++++++++++ built_in_functions +++++++++++ -->
<ext_description linkend="Production_rule_arm.built_in_functions">
	The <b>build_in_functions</b> is an extensible enumeration of functions. It provides a means to associate a list of available functions to a function symbol.
</ext_description>

<!-- attr_val -->
<ext_description linkend="Production_rule_arm.built_in_functions.attr_val">
	
</ext_description>

<!-- +++++++++++ expression_syntax +++++++++++ -->
<ext_description linkend="Production_rule_arm.expression_syntax">
	
</ext_description>

<!-- express -->
<ext_description linkend="Production_rule_arm.expression_syntax.express">
	
</ext_description>

<!-- +++++++++++ pr_logical +++++++++++ -->
<ext_description linkend="Production_rule_arm.pr_logical">
	
</ext_description>

<!-- +++++++++++ pr_number +++++++++++ -->
<ext_description linkend="Production_rule_arm.pr_number">
	
</ext_description>

<!-- +++++++++++ pr_string +++++++++++ -->
<ext_description linkend="Production_rule_arm.pr_string">
	
</ext_description>

<!-- +++++++++++ predicate_symbol +++++++++++ -->
<ext_description linkend="Production_rule_arm.predicate_symbol">
	
</ext_description>


<!-- +++++++++++ Abstract_variable +++++++++++ -->
<ext_description linkend="Production_rule_arm.Abstract_variable">
	An <b>Abstract_variable</b> is one of a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Scalar_variable"/>
	or a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Row_variable"/>.
</ext_description>

<!-- name -->
<ext_description linkend="Production_rule_arm.Abstract_variable.name">
	the words by which the <b>Abstract_variable</b> is known.
</ext_description>

<!-- scope -->
<ext_description linkend="Production_rule_arm.Abstract_variable.scope">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.scope_select"/>
	for the <b>Abstract_variable</b>.
</ext_description>

<!-- UR1 -->
<ext_description linkend="Production_rule_arm.Abstract_variable.ur:UR1">
	The combination of <b>name</b> and <b>scope</b> shall be unique within a population of an <b>Abstract_variable</b>.
</ext_description>

<!-- +++++++++++ Atomic_formula +++++++++++ -->
<ext_description linkend="Production_rule_arm.Atomic_formula">
	An <b>Atomic_formula</b> is one of a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_condition"/>
	or a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Ground_fact"/>.
</ext_description>

<!-- predicate_symbol -->
<ext_description linkend="Production_rule_arm.Atomic_formula.predicate_symbol">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.predicate_symbol"/>
	for the <b>Atomic_formula</b>.
</ext_description>

<!-- terms -->
<ext_description linkend="Production_rule_arm.Atomic_formula.terms">
	specifies a list of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>
	for the <b>Atomic_formula</b>.
</ext_description>

<!-- +++++++++++ Attribute_assertion +++++++++++ -->
<ext_description linkend="Production_rule_arm.Attribute_assertion">
	An <b>Attribute_assertion</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Fact_type"/>.
</ext_description>

<!-- entity_type -->
<ext_description linkend="Production_rule_arm.Attribute_assertion.entity_type">
	specifies the text that describes the <b>Attribute_assertion</b>.
</ext_description>

<!-- attribute -->
<ext_description linkend="Production_rule_arm.Attribute_assertion.attribute">
	specifies the text that describes the <b>Attribute_assertion</b>.
</ext_description>

<!-- +++++++++++ Back_chaining_rule +++++++++++ -->
<ext_description linkend="Production_rule_arm.Back_chaining_rule">
	A <b>Back_chaining_rule</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/>.
</ext_description>

<!-- head -->
<ext_description linkend="Production_rule_arm.Back_chaining_rule.head">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_condition"/>
	for the <b>Back_chaining_rule</b>.
</ext_description>

<!-- body -->
<ext_description linkend="Production_rule_arm.Back_chaining_rule.body">
	specifies a list of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_condition"/>
	for the <b>Back_chaining_rule</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Back_chaining_rule.wr:WR1">
The <express_ref linkend="production_rule:arm:Production_rule_arm.Rule_condition.positive"/>
of <b>head</b> shall be set to TRUE.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Production_rule_arm.Back_chaining_rule.wr:WR2">
The set of variable of <b>head</b> shall be a subset of set of variable of <b>body</b>.
</ext_description>

<!-- +++++++++++ Complex_clause +++++++++++ -->
<ext_description linkend="Production_rule_arm.Complex_clause">
	A <b>Complex_clause</b> is one of a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Complex_conjunctive_clause"/>
	or a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Complex_disjunctive_clause"/>.
	A <b>Complex_clause</b> is consisting of two or more simple clauses that are ANDed together.  
	The AND operator is provided by the SET aggregation in this application object.
</ext_description>

<!-- clauses -->
<ext_description linkend="Production_rule_arm.Complex_clause.clauses">
	specifies a list of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.clause_select"/>
	for the <b>Complex_clause</b>. There shall exist two or more
	<express_ref linkend="Production_rule:arm:Production_rule_arm.clause_select"/>
	for the <b>Complex_clause</b>.
</ext_description>

<!-- +++++++++++ Complex_conjunctive_clause +++++++++++ -->
<ext_description linkend="Production_rule_arm.Complex_conjunctive_clause">
	A <b>Complex_conjunctive_clause</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Complex_clause"/>.
</ext_description>

<!-- +++++++++++ Complex_disjunctive_clause +++++++++++ -->
<ext_description linkend="Production_rule_arm.Complex_disjunctive_clause">
	A <b>Complex_disjunctive_clause</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Complex_clause"/>.
</ext_description>

<!-- +++++++++++ Entity_assertion +++++++++++ -->
<ext_description linkend="Production_rule_arm.Entity_assertion">
	A <b>Entity_assertion</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Fact_type"/>. In this instance, the factual data relates to an entity, not an attribute.
</ext_description>

<!-- +++++++++++ Enum_reference_prefix +++++++++++ -->
<ext_description linkend="Production_rule_arm.Enum_reference_prefix">
	An <b>enum_reference_prefix</b> is text that can be appended to an enumeration to provide additional information about the enumeration.
</ext_description>

<!-- prefix -->
<ext_description linkend="Production_rule_arm.Enum_reference_prefix.prefix">
	specifies the text that describes the <b>Enum_reference_prefix</b>.
</ext_description>

<!-- +++++++++++ Extent +++++++++++ -->
<ext_description linkend="Production_rule_arm.Extent">
The <b>extent</b> provides information about the <b>fact_type</b> by providing the query expression and optional syntax information used to extract the <b>fact_type</b>.
</ext_description>

<!-- source -->
<ext_description linkend="Production_rule_arm.Extent.source">
	specifies the text that describes the origin of the <b>Extent</b>.
</ext_description>

<!-- query_expression -->
<ext_description linkend="Production_rule_arm.Extent.query_expression">
	specifies the text that describes the expression used to extract the <b>Extent</b>.
</ext_description>

<!-- syntax -->
<ext_description linkend="Production_rule_arm.Extent.syntax">
	specifies a role of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.expression_syntax"/>
	for the <b>Extent</b>. The value of this attribute need not be specified.
</ext_description>

<!-- +++++++++++ Fact_type +++++++++++ -->
<ext_description linkend="Production_rule_arm.Fact_type">
	A <b>Fact_type</b> is one of an
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Entity_assertion"/>
	or an 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Attribute_assertion"/>.	
</ext_description>

<!-- source -->
<ext_description linkend="Production_rule_arm.Fact_type.source">
	specifies a role of the 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Extent"/>
	for the <b>Fact_type</b>.
</ext_description>

<!-- predicate_symbol -->
<ext_description linkend="Production_rule_arm.Fact_type.predicate_symbol">
	specifies the text that describes the <b>Fact_type</b>.
</ext_description>

<!-- +++++++++++ Forward_chaining_rule +++++++++++ -->
<ext_description linkend="Production_rule_arm.Forward_chaining_rule">
	A <b>Forward_chaining_rule</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/>.	
</ext_description>

<!-- premise -->
<ext_description linkend="Production_rule_arm.Forward_chaining_rule.premise">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.clause_select"/>
	for the <b>Forward_chaining_rule</b>.
</ext_description>

<!-- conclusion -->
<ext_description linkend="Production_rule_arm.Forward_chaining_rule.conclusion">
	specifies a role of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Literal_conjunction"/>
	for the <b>Forward_chaining_rule</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Forward_chaining_rule.wr:WR1">
The set of variable of <b>conclusion</b> shall be a subset of set of variable of <b>premise</b>.
</ext_description>

<!-- +++++++++++ Func +++++++++++ -->
<ext_description linkend="Production_rule_arm.Func">
	The <b>func</b> associates a symbol to a list of terms.
</ext_description>

<!-- func_sym -->
<ext_description linkend="Production_rule_arm.Func.func_sym">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.function_symbol"/>
	for the <b>Func</b>.
</ext_description>

<!-- terms -->
<ext_description linkend="Production_rule_arm.Func.terms">
	specifies a list of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>
	for the <b>Func</b>.
</ext_description>

<!-- +++++++++++ Global_assignment +++++++++++ -->
<ext_description linkend="Production_rule_arm.Global_assignment">
	A <b>global_assignment</b> associates an <b>abstract_variable</b> with a term
</ext_description>

<!-- variable -->
<ext_description linkend="Production_rule_arm.Global_assignment.variable">
	specifies a role of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Abstract_variable"/>
	for the <b>Global_assignment</b>.
</ext_description>

<!-- val -->
<ext_description linkend="Production_rule_arm.Global_assignment.val">
	specifies the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>
	for the <b>Global_assignment</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Global_assignment.wr:WR1">
The <b>val</b> shall not contain a variable.
</ext_description>

<!-- +++++++++++ Ground_fact +++++++++++ -->
<ext_description linkend="Production_rule_arm.Ground_fact">
	A <b>Ground_fact</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Atomic_formula"/>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Ground_fact.wr:WR1">
The <express_ref linkend="production_rule:arm:Production_rule_arm.Atomic_formula.terms"/>
inherited from <express_ref linkend="production_rule:arm:Production_rule_arm.Atomic_formula"/>
shall not contain variables.
</ext_description>

<!-- +++++++++++ Literal_conjunction +++++++++++ -->
<ext_description linkend="Production_rule_arm.Literal_conjunction">
	A <b>Literal_conjunction</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Simple_clause"/>.
</ext_description>

<!-- +++++++++++ Literal_disjunction +++++++++++ -->
<ext_description linkend="Production_rule_arm.Literal_disjunction">
	A <b>Literal_disjunction</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Simple_clause"/>.
</ext_description>

<!-- +++++++++++ Row_value +++++++++++ -->
<ext_description linkend="Production_rule_arm.Row_value">
	
</ext_description>

<!-- values -->
<ext_description linkend="Production_rule_arm.Row_value.values">
	specifies a list of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>
	for the <b>Row_value</b>.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Row_value.wr:WR1">
No member of <b>values</b> shall contain variable.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Production_rule_arm.Row_value.wr:WR2">
No member if <b>values</b> shall be of type <express_ref linkend="production_rule:arm:Production_rule_arm.Row_value"/>.
</ext_description>

<!-- +++++++++++ Row_variable +++++++++++ -->
<ext_description linkend="Production_rule_arm.Row_variable">
	A <b>Row_variable</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Abstract_variable"/>.
</ext_description>

<!-- +++++++++++ Rule_action +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_action">
A <b>Rule_action</b> is one of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_adoption"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_change_request"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_creation"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_expiration"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_modification"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_rejection"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_request"/>, a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_submission"/>, or a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_supersedence"/>. A <b>Rule_action</b> is an assertion that some action has 
occurred toward management of rules.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_action.subject_rule">
specifies the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> as the 
version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>
for which some management <b>Rule_action</b> has occurred.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_action.subject_action_assignment">
specifies the role of the <express_ref linkend="Person_organization_assignment:arm:Person_organization_assignment_arm.Organization_or_person_in_organization_assignment"/> for the <b>Rule_action</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_action.ur:UR1">
The combination of the <b>subject_action_assignment</b> and the <b>subject_rule</b> shall be unique within a population 
of <b>Rule_action</b>s.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_action.wr:WR1">
<p>
<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action.subject_action_assignment"/> shall exist and it's size shall be one.
</p>
</ext_description>

<!-- +++++++++++ Rule_adoption +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_adoption">
A <b>Rule_adoption</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states a version 
of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has been adopted.
</ext_description>

<!-- +++++++++++ Rule_product +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_product">
A <b>Rule_product</b> is a type of <express_ref linkend="Software:arm:Software_arm.Software"/>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_product.wr:WR1">
The 
<express_ref linkend="Product_identification:arm:Product_identification_arm.types_of_product"/> inherited from the supertype shall be exactly one
of 'rule'.
</ext_description>

<!-- +++++++++++ Rule_change_request +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_change_request">
A <b>Rule_change_request</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states a 
request has been made for modification to a version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>. 
The change reason shall be provided as a part of the <b>Rule_change_request</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_change_request.change_reason">
specifies the human-interpretable reason for requesting a <b>Rule_change_request</b>.
</ext_description>

<!-- +++++++++++ Rule_condition +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_condition">
	A <b>Rule_condition</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Atomic_formula"/>.
</ext_description>

<!-- positive -->
<ext_description linkend="Production_rule_arm.Rule_condition.positive">
	specifies a logical value.
</ext_description>

<!-- +++++++++++ Rule_creation +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_creation">
A <b>Rule_creation</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states that a 
version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has been created.
</ext_description>

<!-- +++++++++++ Rule_definition +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_definition">
	A <b>Rule_definition</b> is a type of 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_software_definition"/>. 
	A <b>Rule_definition</b> is for one version of a rule only.
	A <b>Rule_definition</b> is one of a 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Forward_chaining_rule"/>
	or a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Back_chaining_rule"/>.
</ext_description>

<!-- +++++++++++ Rule_expiration +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_expiration">
A <b>Rule_expiration</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states that a 
version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has expired.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_expiration.expiration_rationale">
specifies the human-interpretable reason for the <b>Rule_expiration</b>.
</ext_description>

<!-- +++++++++++ Rule_justification +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_justification">
A <b>Rule_justification</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_justification.justification_rationale">
specifies the text that describes the <b>Rule_justification</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_justification.justified_action">
specifies the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that results from 
the <b>Rule_justification</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_justification.wr:WR1">
<p>
<b>justified_action</b> shall not be this <b>Rule_justification</b>.
</p>
</ext_description>

<!-- +++++++++++ Rule_modification +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_modification">
A <b>Rule_modification</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states a 
version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> is a result of a request to change an existing 
version of an  <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_modification.modification_rationale">
specifies the role of the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_change_request"/> for the <b>Rule_modification</b>.
</ext_description>

<!-- +++++++++++ Rule_priority +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_priority">
 A <b>Rule_priority</b> is a statement that an <express_ref linkend="Product_identification:arm:Product_identification_arm.Product"/> that is in the rule category has a <b>priority</b> value.  This value is used to order rules.  The <b>priority</b> is applied to the rule through the  <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/>.  It is not the  <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/> that has the <b>priority</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_priority.prioritized_rule">
specifies the role of the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/> for the <b>Rule_priority</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_priority.priority">
specifies the integer for the <b>priority</b> number of the <b>Rule_priority</b>. 
The lowest numeric value shall have the highest <b>priority</b>. </ext_description>
<ext_description linkend="Production_rule_arm.Rule_priority.wr:WR1">
A number less than zero shall not be allowed. 
</ext_description>

<!-- +++++++++++ Rule_rejection +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_rejection">
A <b>Rule_rejection</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states a version 
of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has been rejected. The rejection rationale shall be 
part of the <b>Rule_rejection</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_rejection.rejection_reason">
specifies the human-interpretable explanation for the <b>Rule_rejection</b>.
</ext_description>

<!-- +++++++++++ Rule_request +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_request">
A <b>Rule_request</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> that states a version of 
a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has been requested. The rationale for the version shall 
be part of the <b>Rule_request</b>.
</ext_description>

<!-- +++++++++++ Rule_set +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_set">
<p>
	A <b>Rule_set</b> is a type of 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_software_definition"/>. 
	A <b>Rule_set</b> is an association among 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_priority"/>.
</p>
	<note>
		The <b>purpose</b> for a <b>Rule_set</b> is renamed from the 
		<express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition.initial_context"/> 
		attribute inherited from  
		<express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/>.
	</note>
</ext_description>

<!-- engine -->
<ext_description linkend="Production_rule_arm.Rule_set.engine">
	specifies a role of the
	<express_ref linkend="Specification_document:arm:Specification_document_arm.Language_reference_manual"/>
	for the <b>Rule_set</b>.
</ext_description>

<!-- conflict_resolution_strategy -->
<ext_description linkend="Production_rule_arm.Rule_set.conflict_resolution_strategy">
	specifies the text that describes a conflict resolution strategy for the <b>Rule_set</b>.
	The value of this attribute need not be specified.
</ext_description>

<!-- rule_member -->
<ext_description linkend="Production_rule_arm.Rule_set.rule_member">
	specifies a role of the 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_priority"/> 
	for the <b>Rule_set</b>. There shall be one or more  
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_priority"/> 
	for the <b>Rule_set</b>.
</ext_description>

<!-- purpose -->
<ext_description linkend="Production_rule_arm.Rule_set.purpose">
	an inverse relationship that specifies that the existence of the <b>Rule_set</b> is dependent on the existence of the 
	<express_ref linkend="Identification_assignment:arm:Identification_assignment_arm.Identification_assignment"/> 
	that specifies the <b>Rule_set</b> as its 
	<express_ref linkend="Identification_assignment:arm:Identification_assignment_arm.Identification_assignment.items"/>. 
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Rule_set.wr:WR1">
	The 
	<express_ref linkend="name_assignment:arm:Name_assignment_arm.Name_assignment.role"/> 
	of the <b>purpose</b>
	shall be 'purpose'.
</ext_description>

<!-- +++++++++++ Rule_set_group +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_set_group">
A <b>Rule_set_group</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_software_definition"/>. A <b>Rule_set_group</b> shall have at least two <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_set">Rule_sets</express_ref>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_set_group.elements">
specifies the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_set"/> for the <b>Rule_set_group</b>. There may be more than two  <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_set"/> for the <b>Rule_set_group</b>.
</ext_description>

<!-- +++++++++++ Rule_software_definition +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_software_definition">
A <b>Rule_software_definition</b> is a type of 
<express_ref linkend="Software:arm:Software_arm.Software_definition"/> that encodes instructions for a rule.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_software_definition.defined_version">
specifies the role of the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> for the <b>Rule_software_definition</b>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_software_definition.wr:WR1">
A member of <b>Rule_software_definition</b> shall not also be a member of 
	<express_ref linkend="Information_product:arm:Information_product_arm.Information_definition_with_digital_file"/>.
</ext_description>

<!-- +++++++++++ Rule_submission +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_submission">
A <b>Rule_submission</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> stating that a 
version of a <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> has been submitted.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_submission.submission_rationale">
specifies the text that 
describes the rationale for the <b>Rule_submission</b>.
</ext_description>

<!-- +++++++++++ Rule_supersedence +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_supersedence">
A <b>Rule_supersedence</b> is a type of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> stating that one <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> has 
been superseded by another 
 <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/>. Both shall be versions of the same <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>.
</ext_description>
<ext_description linkend="Production_rule_arm.Rule_supersedence.superseded_rule">
specifies the <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> that 
has been superseded for the <b>Rule_supersedence</b>.
</ext_description>

<!-- +++++++++++ Rule_version +++++++++++ -->
<ext_description linkend="Production_rule_arm.Rule_version">
	A <b>Rule_version</b> is a type of 
	<express_ref linkend="Software:arm:Software_arm.Software_version"/>. 
	A <b>Rule_version</b> is the management of the assignment of 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/> 
	to 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>. 
	A  
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> 
	may evolve with usage for any number of reasons.
</ext_description>

<!-- product_definition -->
<ext_description linkend="Production_rule_arm.Rule_version.product_definition">
<p>
	an inverse relationship that specifies that the existence of the <b>Rule_version</b> 
	is dependent on the existence of the  
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_definition"/>.
</p>
</ext_description>

<!-- management_action -->
<ext_description linkend="Production_rule_arm.Rule_version.management_action">
	an inverse relationship that specifies that the existence of the <b>Rule_version</b> 
	is dependent on the existence of the  
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> 
	that specifies the <b>Rule_version</b> as its 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action.subject_rule"/>. 
	There shall be one or more  
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_action"/> 
	for a <b>Rule_version</b>.
</ext_description>

<!-- of_product -->
<ext_description linkend="Production_rule_arm.Rule_version.of_product">
<p>
	specifies a role of the 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> 
	for the <b>Rule_version</b>.
</p>
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.Rule_version.wr:WR1">
<p>
	The 
	<express_ref linkend="Product_version:arm:Product_version_arm.Product_version.description"/>
	shall not be populated.
</p>
</ext_description>

<!-- +++++++++++ Scalar_variable +++++++++++ -->
<ext_description linkend="Production_rule_arm.Scalar_variable">
	A <b>Scalar_variable</b> is a type of
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Abstract_variable"/>.
</ext_description>

<!-- +++++++++++ Simple_clause +++++++++++ -->
<ext_description linkend="Production_rule_arm.Simple_clause">
	A <b>Simple_clause</b> is one of a 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Literal_conjunction"/>
	or a
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Literal_disjunction"/>.
</ext_description>

<!-- formulas -->
<ext_description linkend="Production_rule_arm.Simple_clause.formulas">
	specifies a role of the
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_condition"/>
	for the <b>Simple_clause</b>. There shall exist one or more
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_condition">Rule_conditions</express_ref>
	for the <b>Simple_clause</b>.
</ext_description>

<!-- +++++++++++ Symbol +++++++++++ -->
<ext_description linkend="Production_rule_arm.Symbol">
	
</ext_description>

<!-- name -->
<ext_description linkend="Production_rule_arm.Symbol.name">
	the words by which the <b>Symbol</b> is known.
</ext_description>


<!-- +++++++++++ Rule template_definition_constraint +++++++++++ -->
<ext_description linkend="Production_rule_arm.rule_software_definition_constraint">
The rule <b>rule_software_definition_constraint</b> constrains the use of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/>
as <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition.defined_version"/>
to <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_software_definition"/> only.
</ext_description>
<ext_description linkend="Production_rule_arm.rule_software_definition_constraint.wr:WR1">
There shall not be any instance of <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/>
that refers <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> as
<express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition.defined_version"/>
and is not an instance of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_software_definition"/>.
</ext_description>

	<!-- +++++++++++ Rule rule_version_constraint +++++++++++ -->
<ext_description linkend="Production_rule_arm.rule_version_constraint">
The rule <b>rule_version_constraint</b> constrains the use of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/>
as <express_ref linkend="product_version:arm:Product_version_arm.Product_version.of_product"/>
to <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/> only.
</ext_description>	
<ext_description linkend="Production_rule_arm.rule_version_constraint.wr:WR1">
There shall not be any instance of <express_ref linkend="product_version:arm:Product_version_arm.Product_version"/>
that refers <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_product"/> as
<express_ref linkend="product_version:arm:Product_version_arm.Product_version.of_product"/>
and is not an instance of <express_ref linkend="Production_rule:arm:Production_rule_arm.Rule_version"/>.
</ext_description>

<!-- ++++++++++ bag_to_set +++++++++++ -->
<ext_description linkend="Production_rule_arm.bag_to_set">
	<p>
	A <b>bag_to_set</b> function convers a bag to set.
	</p>
	<p>
	It returns the Set containing all elements of specified Bag.
	</p>
</ext_description>
<ext_description linkend="Production_rule_arm.bag_to_set.the_bag">
	the bag that needs to be converted.
</ext_description>

<!-- +++++++++++ contains_variable +++++++++++ -->
<ext_description linkend="Production_rule_arm.contains_variable">
The <b>contains_variable</b> function checks if the specified 
<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>
contains an <express_ref linkend="production_rule:arm:Production_rule_arm.Abstract_variable"/>.
</ext_description>

<!-- x -->
<ext_description linkend="Production_rule_arm.contains_variable.x">
	the specified 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.term_select"/>.
</ext_description>

<!-- +++++++++++ local_vars_aux +++++++++++ -->
<ext_description linkend="Production_rule_arm.local_vars_aux">
The <b>local_vars_aux</b> function retrieves the set of local variables
for specified entity instance.
</ext_description>

<!-- thing -->
<ext_description linkend="Production_rule_arm.local_vars_aux.thing">
specified entity instance.
</ext_description>

<!-- accum -->
<ext_description linkend="Production_rule_arm.local_vars_aux.accum">
	the specified set of 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Scalar_variable">Scalar_variables</express_ref>.
</ext_description>

<!-- +++++++++++ local_vars_of +++++++++++ -->
<ext_description linkend="Production_rule_arm.local_vars_of">
The <b>local_vars_of</b> function retrieves the set of local variables
for specified entity instance.
</ext_description>

<!-- thing -->
<ext_description linkend="Production_rule_arm.local_vars_of.thing">
specified entity instance.
</ext_description>

<!-- +++++++++++ max_one_entity_prefix +++++++++++ -->
<ext_description linkend="Production_rule_arm.max_one_entity_prefix">
The <b>max_one_entity_prefix</b> rule constrains the population of <express_ref linkend="production_rule:arm:Production_rule_arm.Enum_reference_prefix"/>
entity instances, so that there shall be no more than one instance of that type in whole population.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Production_rule_arm.max_one_entity_prefix.wr:WR1">
There shall be no more than one instance of type <express_ref linkend="production_rule:arm:Production_rule_arm.Enum_reference_prefix"/>
in population of entity instances.
</ext_description>




</ext_descriptions>

