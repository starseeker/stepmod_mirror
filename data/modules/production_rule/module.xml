<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.35 2009/12/28 20:40:13 liutkuviene Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="production_rule" 
	name.french="RÃ¨gle de production"
	part="1739" 
	version="3" 
	sc4.working_group="12" 
	wg.number="7033" 
	wg.number.arm="7034" 
	wg.number.mim="7035" 
	wg.number.supersedes="6539" 
	wg.number.arm.supersedes="6540" 
	wg.number.mim.supersedes="6541" 
	status="TS" 
	language="E" 
	publication.year="2010" 
	publication.date="2010-04-01" 
	published="y" 
	previous.revision.year="2010" previous.revision.cancelled="NO" revision.complete="YES" 
	rcs.date="$Date: 2009/12/28 20:40:13 $" rcs.revision="$Revision: 1.35 $" development.folder="dvlp">

 <keywords>
    module rule change adoption rejection modification request supersedence submission
    function conclusion definition expiration domain range parameter justification
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>
 
 <!-- Change History -->
 <changes>
 	<change version="2">
 		<arm.changes>
 			<arm.modifications>
 				<modified.object type="ENTITY" name="Rule_product"/>
 				<modified.object type="RULE" name="max_one_entity_prefix"/>
 			</arm.modifications>
 			<arm.deletions>
 				<modified.object type="REFERENCE_FROM" name="Product_identification_arm"/>
 			</arm.deletions>
 		</arm.changes>
 	</change>
 	
 	<change version="3">
 		<arm.changes>
 			<arm.additions>
 				<modified.object type="REFERENCE_FROM" name="Support_resource_arm"/>
 			</arm.additions>
 			<arm.deletions>
 				<modified.object type="REFERENCE_FROM" name="Characterizable_object_arm"/>
 			</arm.deletions>
 		</arm.changes>
 	</change>
 </changes>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe design constraints, commonly referred to as rules.  
	   The information describes the rule's relationship to product characteristics, formal description of the functions that embody the rule, 
	   in addition to the configuration management aspects applied to the rule.  The description is suitable for an interface to a production
	   rule system.
	   The configuration management information supports rule version control and supports a formal process to making changes to an existing rule.
   </p>	
 </purpose>

 <!-- Items in scope -->
 <inscope>
      <li>rules that define a constraint by relating two elements based upon characteristics of a design;</li>
      <li>production rules structure and semantics;</li>
      <li>management of rules;</li>
      <li>items within the scope of application module <module_ref linkend="activity:1_scope">Activity</module_ref>, ISO/TS 10303-1047;</li>
      <li>items within the scope of application module <module_ref linkend="date_time_assignment:1_scope">Date time assignment</module_ref>, ISO/TS 10303-1014;</li>
      <li>items within the scope of application module <module_ref linkend="identification_assignment:1_scope">Identification assignment</module_ref>, ISO/TS 10303-1021;</li>
      <li>items within the scope of application module <module_ref linkend="product_identification:1_scope">Product identification</module_ref>, ISO/TS 10303-1017;</li>
      <li>items within the scope of application module <module_ref linkend="software:1_scope">Software</module_ref>, ISO/TS 10303-1746;</li>
      <li>items within the scope of application module <module_ref linkend="specification_document:1_scope">Specification document</module_ref>, ISO/TS 10303-1747.</li>
   </inscope>

 <!-- Items out of scope -->
 <!--
 <outscope>
   <li>xxxx</li>
 </outscope>
-->

<normrefs>
    <normref.inc normref="ref10303-41"/>
    <normref.inc normref="ref10303-43"/>
 </normrefs>

<!--
 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        <imgfile file="armexpg3.xml"/>
        <imgfile file="armexpg4.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
	<ae entity="Abstract_variable" extensible="NO">
            <aimelt xml:space="preserve">abstract_variable</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">abstract_variable &lt;=
					[property_definition]
					[property_definition_representation]
					[representation]
					[representation_item]
			</refpath>
			<aa attribute="name">
				<aimelt xml:space="preserve">property_definition.name</aimelt>
				<source xml:space="preserve">ISO 10303-41</source>
				<refpath xml:space="preserve">abstract_variable &lt;=
					property_definition
					property_definition.name
				</refpath>
			</aa>
            <aa attribute="scope" assertion_to="scope_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">abstract_variable &lt;=
                	property_definition
					property_definition.definition -&gt; 
					characterized_definition = characterized_product_definition
					characterized_product_definition = product_definition
					product_definition =&gt;
					rule_software_definition =&gt;
					(rule_definition)
					(rule_set)
					(rule_set_group)
				</refpath>
			</aa>
            <aa attribute="scope" assertion_to="Rule_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">abstract_variable &lt;=
					property_definition
					property_definition.definition -&gt; 
					characterized_definition = characterized_product_definition
					characterized_product_definition = product_definition
					product_definition =&gt;
					rule_software_definition =&gt;
					rule_definition
				</refpath>
			</aa>
            <aa attribute="scope" assertion_to="Rule_set">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">abstract_variable &lt;=
					property_definition
					property_definition.definition -&gt; 
					characterized_definition = characterized_product_definition
					characterized_product_definition = product_definition
					product_definition =&gt;
					rule_software_definition =&gt;
					rule_set
				</refpath>
			</aa>
            <aa attribute="scope" assertion_to="Rule_set_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">abstract_variable &lt;=
					property_definition
					property_definition.definition -&gt; 
					characterized_definition = characterized_product_definition
					characterized_product_definition = product_definition
					product_definition =&gt;
					rule_software_definition =&gt;
					rule_set_group
				</refpath>
			</aa>
        </ae>

	<ae entity="Atomic_formula" extensible="NO">
            <aimelt xml:space="preserve">atomic_formula</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					{compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item}
					compound_representation_item &lt;=
					representation_item
			</refpath>
            <aa attribute="predicate_symbol" assertion_to="predicate_symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item &lt;=
					representation_item
					representation_item.name
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="term_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					symbol
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="constants">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>				
            <aa attribute="terms" assertion_to="any_number_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = count_measure
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="any_string_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = descriptive_measure
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Logical_representation_item">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					descriptive_representation_item
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Func">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					func
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Scalar_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					scalar_variable
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Row_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					row_value					
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Row_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">atomic_formula &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					row_variable
				</refpath>
			</aa>
        </ae>

	<ae entity="Attribute_assertion" extensible="NO">
            <aimelt xml:space="preserve">attribute_assertion</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">attribute_assertion &lt;=
				[fact_type]
				[property_definition_representation]
				[representation]
			</refpath>
            <aa attribute="entity_type">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">attribute_assertion &lt;=
					representation
					representation.items[i] -&gt;
					representation_item
					{representation_item.name = 'entity type'}
					representation_item =&gt;
					descriptive_representation_item
					descriptive_representation_item.description
				</refpath>
			</aa>
            <aa attribute="attribute">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">attribute_assertion &lt;=
					representation
					representation.items[i] -&gt;
					representation_item
					{representation_item.name = 'attribute'}
					representation_item =&gt;
					descriptive_representation_item
					descriptive_representation_item.description
				</refpath>
			</aa>
	</ae>

	<ae entity="Back_chaining_rule" extensible="NO">
            <aimelt xml:space="preserve">back_chaining_rule</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">back_chaining_rule &lt;=
				rule_definition
			</refpath>
            <aa attribute="head" assertion_to="Rule_condition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">back_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				back_chaining_rule_body &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				atomic_formula =&gt;
				rule_condition
				</refpath>
			</aa>
            <aa attribute="body" assertion_to="Rule_condition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">back_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				back_chaining_rule_body &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item
				compound_representation_item.item_element -&gt;
				compound_item_definition = list_representation_item
				list_representation_item[i] -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				atomic_formula =&gt;
				rule_condition
				</refpath>
			</aa>
	</ae>

	<ae entity="Complex_clause" extensible="NO">
            <aimelt xml:space="preserve">complex_clause</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">complex_clause &lt;=
					compound_representation_item
					{compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item}
					compound_representation_item &lt;=
					representation_item
			</refpath>
            <aa attribute="clauses" assertion_to="Simple_clause">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">complex_clause &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					simple_clause
				</refpath>
			</aa>
            <aa attribute="clauses" assertion_to="Complex_clause">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">complex_clause &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					complex_clause
				</refpath>
			</aa>
            <aa attribute="clauses" assertion_to="clause_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">complex_clause &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item
				</refpath>
			</aa>
	</ae>

	<ae entity="Complex_conjunctive_clause" extensible="NO">
            <aimelt xml:space="preserve">complex_conjunctive_clause</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">complex_conjunctive_clause &lt;=
					complex_clause &lt;=
					compound_representation_item &lt;=
					representation_item
			</refpath>
	</ae>

	<ae entity="Complex_disjunctive_clause" extensible="NO">
            <aimelt xml:space="preserve">complex_disjunctive_clause</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">complex_disjunctive_clause &lt;=
					complex_clause &lt;=
					compound_representation_item &lt;=
					representation_item
			</refpath>
	</ae>
	<ae entity="Document_assignment" original_module="document_assignment" extensible="NO">
			<aa attribute="is_assigned_to" assertion_to="Rule_set">
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="documented_element_select" xml:space="preserve">
						document_reference_item *&gt; pr_document_reference_item
						pr_document_reference_item = rule_set
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="documented_element_select" xml:space="preserve">
						document_reference_item *&gt; pr_document_reference_item
						pr_document_reference_item = rule_set
					</refpath_extend>
				</alt_map>
			</aa>
	</ae>

	<ae entity="Entity_assertion" extensible="NO">
            <aimelt xml:space="preserve">entity_assertion</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">entity_assertion &lt;=
				fact_type &lt;=
				property_definition
			</refpath>
	</ae>
	
	<ae entity="Enum_reference_prefix" extensible="NO">
            <aimelt xml:space="preserve">enum_reference_prefix</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">enum_reference_prefix &lt;=
				descriptive_representation_item &lt;=
				representation_item
			</refpath>
            <aa attribute="prefix">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">enum_reference_prefix &lt;=
					descriptive_representation_item
					descriptive_representation_item.description
				</refpath>
			</aa>
	</ae>

	<ae entity="Extent" extensible="NO">
            <aimelt xml:space="preserve">extent</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">extent &lt;=
				characterized_object
			</refpath>
            <aa attribute="source">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">extent &lt;=
					characterized_object
					characterized_definition = characterized_object
					characterized_definition &lt;-
					property_definition.definition
					property_definition
					{property_definition.description = 'source'}
					property_definition.name
				</refpath>
			</aa>
            <aa attribute="variable_id">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">extent &lt;=
					characterized_object
					characterized_definition = characterized_object
					characterized_definition &lt;-
					property_definition.definition
					property_definition
					{property_definition.description = 'variable id '}
					property_definition.name
				</refpath>
			</aa>
            <aa attribute="query_expression">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">extent &lt;=
					characterized_object
					characterized_definition = characterized_object
					characterized_definition &lt;-
					property_definition.definition
					property_definition
					{property_definition.description = 'query expression'}
					property_definition.name
				</refpath>
			</aa>
            <aa attribute="syntax" assertion_to="expression_syntax">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">extent &lt;=
					characterized_object
					characterized_definition = characterized_object
					characterized_definition &lt;-
					property_definition.definition
					property_definition
					{property_definition.description = 'syntax'}
					property_definition.name
					(property_definition.name = 'express')
				</refpath>
			</aa>
	</ae>

	<ae entity="Fact_type" extensible="NO">
            <aimelt xml:space="preserve">fact_type</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">fact_type &lt;=
				property_definition
			</refpath>
            <aa attribute="source" assertion_to="Extent">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">fact_type &lt;=
					property_definition
					property_definition.definition -&gt;
					characterized_definition 				
					characterized_definition = characterized_object
					characterized_object =&gt;
					extent
				</refpath>
			</aa>
            <aa attribute="predicate_symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">fact_type &lt;=
					property_definition
					property_definition.name
				</refpath>
			</aa>
	</ae>


	<ae entity="Forward_chaining_rule" extensible="NO">
            <aimelt xml:space="preserve">forward_chaining_rule</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">forward_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
			</refpath>
            <aa attribute="premise" assertion_to="clause_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">forward_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				forward_chaining_rule_premise &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item
				</refpath>
			</aa>
            <aa attribute="premise" assertion_to="Complex_clause">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">forward_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				forward_chaining_rule_premise &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				complex_clause
				</refpath>
			</aa>
            <aa attribute="premise" assertion_to="Simple_clause">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">forward_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				forward_chaining_rule_premise &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				simple_clause
				</refpath>
			</aa>
            <aa attribute="conclusion" assertion_to="Literal_conjunction">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">forward_chaining_rule &lt;=
				rule_definition &lt;=
				rule_software_definition &lt;=
				product_definition
				characterized_product_definition = product_definition				
				characterized_definition = characterized_product_definition				
				characterized_definition &lt;-
				property_definition.definition 
				property_definition =&gt;
				forward_chaining_rule_premise &lt;=
				representation
				representation.items[i] -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				simple_clause =&gt;
				literal_conjunction
				</refpath>
			</aa>
	</ae>

	<ae entity="Func" extensible="NO">
            <aimelt xml:space="preserve">func</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">func &lt;=
				compound_representation_item
				{compound_representation_item.item_element -&gt;
				compound_item_definition
				compound_item_definition = list_representation_item}
				compound_representation_item &lt;=
				representation_item
			</refpath>
            <aa attribute="func_sym">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
				compound_representation_item &lt;=
				representation_item
				representation_item.name
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="term_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					symbol
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="constants">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>				
            <aa attribute="terms" assertion_to="any_number_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = count_measure
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="any_string_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = descriptive_measure
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Logical_representation_item">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					descriptive_representation_item
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Func">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					func
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Scalar_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					scalar_variable
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Row_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					row_value					
				</refpath>
			</aa>
            <aa attribute="terms" assertion_to="Row_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">func &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					row_variable
				</refpath>
			</aa>
	</ae>
  
	<ae entity="Global_assignment" extensible="NO">
            <aimelt xml:space="preserve">global_assignment</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
			</refpath>
            <aa attribute="variable" assertion_to="Abstract_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.relating_representation_item -&gt;
				representation_item =&gt;
				abstract_variable
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="term_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				symbol
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="constants">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item
				</refpath>
			</aa>				
            <aa attribute="val" assertion_to="any_number_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				measure_representation_item &lt;=
				measure_with_unit
				measure_with_unit.value_component -&gt;
				measure_value = count_measure
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="any_string_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				measure_representation_item &lt;=
				measure_with_unit
				measure_with_unit.value_component -&gt;
				measure_value = descriptive_measure
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Logical_representation_item">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				descriptive_representation_item
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Func">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				func
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Scalar_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				abstract_variable =&gt;
				scalar_variable
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Row_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				compound_representation_item =&gt;
				row_value					
				</refpath>
			</aa>
            <aa attribute="val" assertion_to="Row_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">global_assignment &lt;=
				representation_item_relationship
				representation_item_relationship.related_representation_item -&gt;
				representation_item =&gt;
				abstract_variable =&gt;
				row_variable
				</refpath>
			</aa>
	</ae>
	<ae entity="Ground_fact" extensible="NO">
            <aimelt xml:space="preserve">ground_fact</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">ground_fact &lt;=
				atomic_formula &lt;=
				compound_representation_item &lt;=
				representation_item
			</refpath>
	</ae>
	
	<ae entity="Identification_assignment" original_module="identification_assignment" extensible="NO">
			<aimelt xml:space="preserve">applied_identification_assignment</aimelt>
			<source xml:space="preserve">ISO 10303-1021</source>
			<aa attribute="items" assertion_to="Rule_set">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">
					applied_identification_assignment
					applied_identification_assignment.items[i] -&gt;
					identification_item *&gt; pr_identification_item
					pr_identification_item = rule_set
				</refpath>
			</aa>
	</ae>

	<ae entity="Literal_conjunction" extensible="NO">
            <aimelt xml:space="preserve">literal_conjunction</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">literal_conjunction &lt;=
				simple_clause &lt;=
				compound_representation_item &lt;=
				representation_item
			</refpath>
	</ae>
	<ae entity="Literal_disjunction" extensible="NO">
            <aimelt xml:space="preserve">literal_disjunction</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">literal_disjunction &lt;=
				simple_clause &lt;=
				compound_representation_item &lt;=
				representation_item
			</refpath>
	</ae>
	
<ae entity="Organization_or_person_in_organization_assignment" original_module="person_organization_assignment" extensible="NO"> 

<aa attribute="items" assertion_to="Rule_action">
	<alt_map id="1">
	  <description>if assigned_entity is an Organization</description>
<aimelt xml:space="preserve">PATH</aimelt> 
<refpath xml:space="preserve">  (applied_organization_assignment.items[i] -&gt; 
organization_item
organization_item *&gt; pr_organization_item 
pr_organization_item = rule_action)  
</refpath> 
</alt_map>
	<alt_map id="2">
	  <description>if assigned_entity is a Person_in_organization</description>
<aimelt xml:space="preserve">PATH</aimelt> 
<refpath xml:space="preserve"> (applied_person_and_organization_assignment.items[i] -&gt; 
person_and_organization_item
person_and_organization_item *&gt; pr_person_and_organization_item 
pr_person_and_organization_item = rule_action) 
</refpath> 
</alt_map>
         </aa>
	</ae>	
	
	<ae entity="Row_value" extensible="NO">
            <aimelt xml:space="preserve">row_value</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">row_value &lt;=
				compound_representation_item
				{compound_representation_item.item_element -&gt;
				compound_item_definition
				compound_item_definition = list_representation_item}
				compound_representation_item &lt;=
				representation_item
			</refpath>
            <aa attribute="values" assertion_to="term_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Symbol">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					symbol
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="constants">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
				</refpath>
			</aa>				
            <aa attribute="values" assertion_to="any_number_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = count_measure
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="any_string_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					measure_representation_item &lt;=
					measure_with_unit
					measure_with_unit.value_component -&gt;
					measure_value = descriptive_measure
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Logical_representation_item">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					descriptive_representation_item
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Func">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					func
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Scalar_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					scalar_variable
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Row_value">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					row_value					
				</refpath>
			</aa>
            <aa attribute="values" assertion_to="Row_variable">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">row_value &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					abstract_variable =&gt;
					row_variable
				</refpath>
			</aa>
	</ae>
	<ae entity="Row_variable" extensible="NO">
            <aimelt xml:space="preserve">row_variable</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">row_variable &lt;=
				abstract_variable &lt;=
				[property_definition]
				[property_definition_representation]
				[representation]
				[representation_item]
			</refpath>
	</ae>

 <ae entity="Rule_action" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
</refpath>
            <aa attribute="subject_rule" assertion_to="Rule_version">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_action &lt;=
action &lt;-
action_assignment.assigned_action
action_assignment =&gt;
applied_action_assignment
applied_action_assignment.items[i] -&gt;
action_items
action_items = product_definition_formation
product_definition_formation
{product_definition_formation.description = 'rule version'}
				</refpath>
			</aa>
        </ae>
    <ae entity="Rule_adoption" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule adoption'}
</refpath>
        </ae>
    <ae entity="Rule_change_request" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule change request'}
</refpath>
            <aa attribute="change_reason">
                <aimelt xml:space="preserve">action.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">rule_action &lt;=
action
action.description
</refpath>
            </aa>
        </ae>
	<ae entity="Rule_condition" extensible="NO">
            <aimelt xml:space="preserve">rule_condition</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_condition &lt;=
					atomic_formula &lt;=
					compound_representation_item &lt;=
					representation_item
			</refpath>
            <aa attribute="positive">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_condition &lt;=
					atomic_formula &lt;=
					compound_representation_item
					compound_representation_item &lt;=
					representation_item
					representation_item.name
					(representation_item.name = 'TRUE')
					(representation_item.name = 'FALSE')
				</refpath>
			</aa>
        </ae>		
    <ae entity="Rule_creation" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule creation'}
</refpath>
        </ae>
    <ae entity="Rule_definition" extensible="NO">
            <aimelt xml:space="preserve">rule_definition</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">{rule_definition &lt;=
rule_software_definition &lt;=				
product_definition}
</refpath>
        </ae>
    <ae entity="Rule_expiration" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule expiration'}
</refpath>
            <aa attribute="expiration_rationale">
                <aimelt xml:space="preserve">action.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">rule_action &lt;=
action
action.description
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_justification" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule justification'}
</refpath>
            <aa attribute="justification_rationale">
                <aimelt xml:space="preserve">action.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">rule_action &lt;=
action
action.description
</refpath>
            </aa>
            <aa attribute="justified_action" assertion_to="Rule_action">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_action &lt;=
action &lt;-
action_relationship.related_action
{action_relationship
action_relationship.name = 'justified action'}
action_relationship
action_relationship.relating_action -&gt;
action =&gt;
rule_action
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_modification" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule modification'}
</refpath>
            <aa attribute="modification_rationale" assertion_to="Rule_change_request">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_action &lt;=
action &lt;-
action_relationship.related_action
{action_relationship
action_relationship.name = 'modification rationale'}
action_relationship
action_relationship.relating_action -&gt;
{action
action.name = 'rule change request'}
action =&gt;
rule_action
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_priority" extensible="NO">
            <aimelt xml:space="preserve">representation</aimelt>
            <source xml:space="preserve">ISO 10303-43</source>
            <refpath xml:space="preserve">{representation
representation.name = 'rule priority'}
</refpath>
            <aa attribute="priority">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation
representation.items[i] -&gt;
representation_item =&gt;
{representation_item
representation_item.name = 'priority'}
measure_representation_item &lt;=
measure_with_unit
measure_with_unit.value_component -&gt;
measure_value = count_measure
</refpath>
            </aa>
            <aa attribute="prioritized_rule" assertion_to="Rule_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
property_definition_representation.used_representation
property_definition_representation
{property_definition_representation
property_definition_representation.name = 'prioritized rule'}
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition =  product_definition
product_definition =&gt;
rule_software_definition =&gt;
rule_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_product" extensible="NO">
            <aimelt xml:space="preserve">product</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">product
{product &lt;- 
product_related_product_category.products[i] 
product_related_product_category &lt;= 
product_category 
product_category.name = 'rule'}
</refpath>
	</ae>
    <ae entity="Rule_rejection" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule rejection'}
</refpath>
            <aa attribute="rejection_reason">
                <aimelt xml:space="preserve">action.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">rule_action &lt;=
action
action.description
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_request" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule request'}
</refpath>
        </ae>
    <ae entity="Rule_set" extensible="NO">
            <aimelt xml:space="preserve">rule_set</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_set &lt;=
rule_software_definition &lt;=
product_definition
</refpath>
            <aa attribute="rule_member" assertion_to="Rule_priority">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_set &lt;=
rule_software_definition &lt;=					
product_definition
characterized_product_definition = product_definition 
characterized_definition = characterized_product_definition 
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
{property_definition_representation
property_definition_representation.name = 'rule member'}
property_definition_representation.used_representation -&gt;
representation
{representation
representation.name = 'rule priority'}
</refpath>
            </aa>
            <aa attribute="conflict_resolution_strategy">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_set &lt;=
rule_software_definition &lt;=					
product_definition
characterized_product_definition = product_definition 
characterized_definition = characterized_product_definition 
characterized_definition &lt;-
property_definition.definition
{property_definition.description = 'conflict resolution strategy'}
property_definition.name
</refpath>
            </aa>
        </ae>

    <ae entity="Rule_set_group" extensible="NO">
            <aimelt xml:space="preserve">rule_set_group</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_set_group &lt;=
rule_software_definition &lt;=				
product_definition
</refpath>
            <aa attribute="elements" assertion_to="Rule_set">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_set_group &lt;=
rule_software_definition &lt;=					
product_definition &lt;-
product_definition_relationship.relating_product_definition
{product_definition_relationship
product_definition_relationship.name = 'rule set group element'}
product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
rule_software_definition =&gt;
rule_set
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_software_definition" extensible="NO">
            <aimelt xml:space="preserve">rule_software_definition</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_software_definition &lt;=		
product_definition
{product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt; 
product &lt;- 
product_related_product_category.products[i] 
product_related_product_category &lt;= 
product_category 
product_category.name = 'rule'}
</refpath>
            <aa attribute="defined_version" assertion_to="Rule_version">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">rule_software_definition &lt;=		
product_definition
product_definition.formation -&gt;
product_definition_formation
{product_definition_formation.description = 'rule version'}
</refpath>
            </aa>
        </ae>		
    <ae entity="Rule_submission" extensible="NO">
            <aimelt xml:space="preserve">rule_action</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_action &lt;=
action
{action
action.name = 'rule submission'}
</refpath>
            <aa attribute="submission_rationale">
                <aimelt xml:space="preserve">action.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">rule_action &lt;=
action
action.description
</refpath>
            </aa>
        </ae>
    <ae entity="Rule_supersedence" extensible="NO">
            <aimelt xml:space="preserve">rule_supersedence</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">rule_supersedence &lt;=
rule_action &lt;=
action
{action &lt;-
action_assignment.assigned_action
action_assignment =&gt;
rule_superseded_assignment
rule_superseded_assignment.items[i] -&gt;
rule_superseded_item
rule_superseded_item = product_definition_formation 
product_definition_formation
{product_definition_formation.description = 'rule version'}}
			</refpath>
			<aa attribute="superseded_rule" assertion_to="Rule_version">
			<aimelt xml:space="preserve">PATH</aimelt>
			<refpath xml:space="preserve">
rule_supersedence &lt;=
rule_action &lt;=
action &lt;-
action_assignment.assigned_action
action_assignment =&gt;
rule_superseded_assignment
rule_superseded_assignment.items[i] -&gt;
rule_superseded_item
rule_superseded_item = product_definition_formation 
product_definition_formation
{product_definition_formation.description = 'rule version'}
				</refpath>
			</aa>
        </ae>
    <ae entity="Rule_version" extensible="NO">
            <aimelt xml:space="preserve">product_definition_formation</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{product_definition_formation
product_definition_formation.description = 'rule version'}
</refpath>
            <aa attribute="of_product" assertion_to="Rule_product">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_formation
product_definition_formation.of_product -&gt; 
product
{product &lt;- 
product_related_product_category.products[i] 
product_related_product_category &lt;= 
product_category 
product_category.name = 'rule'}
</refpath>
            </aa>
        </ae>

	<ae entity="Scalar_variable" extensible="NO">
            <aimelt xml:space="preserve">scalar_variable</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">scalar_variable &lt;=
					abstract_variable &lt;=
					[property_definition]
					[property_definition_representation]
					[representation]
					[representation_item]
			</refpath>
    </ae>		
	<ae entity="Simple_clause" extensible="NO">
            <aimelt xml:space="preserve">simple_clause</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">simple_clause &lt;=
					compound_representation_item
					{compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item}
					compound_representation_item &lt;=
					representation_item
			</refpath>
            <aa attribute="formulas" assertion_to="Rule_condition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">simple_clause &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = list_representation_item
					list_representation_item[i] -&gt;
					representation_item =&gt;
					compound_representation_item =&gt;
					atomic_formula =&gt;
					rule_condition
				</refpath>
			</aa>
    </ae>					
	<ae entity="Symbol" extensible="NO">
            <aimelt xml:space="preserve">symbol</aimelt>
            <source xml:space="preserve">ISO 10303-1739</source>
            <refpath xml:space="preserve">symbol &lt;=
				representation_item
			</refpath>
    </ae>		
	
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>          
     <imgfile file="mimexpg3.xml"/>          
   </express-g>
	   <shortnames>
	   	<shortname name="ABSVRB" entity="abstract_variable"/>
	   	<shortname name="ATMFRM" entity="atomic_formula"/>
	   	<shortname name="ATTASS" entity="attribute_assertion"/>
	   	<shortname name="BCCHRL" entity="back_chaining_rule"/>
	   	<shortname name="BCRB" entity="back_chaining_rule_body"/>
	   	<shortname name="CMP0" entity="complex_clause"/>
	   	<shortname name="CMCNCL" entity="complex_conjunctive_clause"/>
	   	<shortname name="CMDSCL" entity="complex_disjunctive_clause"/>
	   	<shortname name="ENTASS" entity="entity_assertion"/>
	   	<shortname name="ENRFPR" entity="enum_reference_prefix"/>
	   	<shortname name="EXTENT" entity="extent"/>
	   	<shortname name="FCTTYP" entity="fact_type"/>
	   	<shortname name="FRCHRL" entity="forward_chaining_rule"/>
	   	<shortname name="FCRP" entity="forward_chaining_rule_premise"/>
	   	<shortname name="FUNC" entity="func"/>
	   	<shortname name="GLBASS" entity="global_assignment"/>
	   	<shortname name="GRNFCT" entity="ground_fact"/>
	   	<shortname name="LTRCNJ" entity="literal_conjunction"/>
	   	<shortname name="LTRDSJ" entity="literal_disjunction"/>
	   	<shortname name="RWVL" entity="row_value"/>
	   	<shortname name="RWVRB" entity="row_variable"/>
	   	<shortname name="RLACT" entity="rule_action"/>
	   	<shortname name="RLCND" entity="rule_condition"/>
	   	<shortname name="RLDFN" entity="rule_definition"/>
	   	<shortname name="RLSPAS" entity="rule_superseded_assignment"/>
	   	<shortname name="RLST" entity="rule_set"/>
	   	<shortname name="RLSFDF" entity="rule_software_definition"/>
	   	<shortname name="RLSTGR" entity="rule_set_group"/>
	   	<shortname name="RLSPR" entity="rule_supersedence"/>
	   	<shortname name="SCLVRB" entity="scalar_variable"/>
	   	<shortname name="SMPCLS" entity="simple_clause"/>
	   	<shortname name="SYMBOL" entity="symbol"/>
	   </shortnames>                                 		          		               	                                                                                                                             
 </mim>

</module>
