(*
   $Id: arm.exp,v 1.19 2005/01/14 16:33:54 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Requirement decomposition - EXPRESS ARM
*)

SCHEMA Requirement_decomposition_arm;

USE FROM Characteristic_arm;

USE FROM Specification_document_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM Product_rule_arm;

USE FROM Part_and_version_identification_arm;

USE FROM Requirement_assignment_arm;	

USE FROM Requirement_view_definition_arm;

USE FROM Analytical_model_arm;

USE FROM Functional_specification_arm;

USE FROM Conductivity_material_aspects_arm;



 
  TYPE material_conductivity_classification = ENUMERATION OF
    (conductive,
     resistive,
     semi_conductive,
     non_conductive);
  END_TYPE;

	TYPE rd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Requirement_definition_property);
	END_TYPE;

	SUBTYPE_CONSTRAINT rd_model_parameter_subtypes FOR Model_parameter; 
		 ONEOF (Analytical_model_parameter,
		 Category_model_parameter,
		 Rule_function_domain_parameter,
		 Rule_function_range_parameter);
	END_SUBTYPE_CONSTRAINT;

  TYPE relationship_operation = ENUMERATION OF
    (and_operation,
     derived_from,
     or_operation);
  END_TYPE;

  ENTITY Constraint_occurrence
    SUPERTYPE OF (Ee_product_definition_based_constraint_occurrence)
    SUBTYPE OF (Requirement_definition_property);
      logical_relation : OPTIONAL Rule_complex_clause;
    WHERE
      WR1 : (('REQUIREMENT_DECOMPOSITION_ARM.' + 'EE_PRODUCT_DEFINITION_BASED_CONSTRAINT_OCCURRENCE') IN TYPEOF(SELF)) OR EXISTS(logical_relation);
  END_ENTITY;

  ENTITY Design_characteristic_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Design_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Ee_product_definition_based_constraint_occurrence
    SUPERTYPE OF (Shape_and_ee_product_definition_based_constraint_occurrence)
    SUBTYPE OF (Constraint_occurrence);
      constraining_part : Product_view_definition;
  END_ENTITY;

  ENTITY Electrical_requirement_occurrence
    SUPERTYPE OF (Material_electrical_conductivity_requirement_occurrence)
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Electromagnetic_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Inspection_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Material_electrical_conductivity_requirement_occurrence
    SUBTYPE OF (Electrical_requirement_occurrence);
      electrical_conductivity_characteristic : material_conductivity_classification;
  END_ENTITY;

  ENTITY Mechanical_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Operational_requirement_occurrence_relationship;
      relationship_type               : relationship_operation;
      relating_requirement_occurrence : Requirement_view_definition;
      related_requirement_occurrence  : Requirement_view_definition;
    WHERE
      WR1 : relating_requirement_occurrence :<>: related_requirement_occurrence;
  END_ENTITY;

  ENTITY Purpose_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

  ENTITY Requirement_definition_property
	SUPERTYPE OF((ONEOF (Thermal_requirement_occurrence,
		 Electromagnetic_requirement_occurrence,
		 Electrical_requirement_occurrence,
		 Mechanical_requirement_occurrence) ANDOR
		 ONEOF (Design_requirement_occurrence,
		 Inspection_requirement_occurrence,
		 Test_requirement_occurrence,
		 Purpose_occurrence,
		 Constraint_occurrence,
		 Design_characteristic_occurrence)));
      associated_definition               : Requirement_view_definition;
      required_analytical_representation  : OPTIONAL SET[1:?] OF Analytical_model_application;
      required_functional_specification   : OPTIONAL SET[1:?] OF Functional_specification;
      required_part                       : OPTIONAL SET[1:?] OF Product;
      required_coordinated_characteristic : OPTIONAL SET[1:?] OF coordinated_characteristic;
      requirement_specification           : SET[1:?] OF Specification_definition;
      required_characteristic             : OPTIONAL SET[1:?] OF characteristic;
      reference_clause                    : OPTIONAL Structured_text_id_in_document;
   INVERSE
	  required_material : set [0:1] OF material_identification FOR items;      
    UNIQUE
      UR1 : associated_definition;
    WHERE  
	  WR1 : NOT (SIZEOF(required_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (material));
  END_ENTITY;





  ENTITY Shape_and_ee_product_definition_based_constraint_occurrence
    SUBTYPE OF (Ee_product_definition_based_constraint_occurrence);
      constraining_shape : SET[1:?] OF Geometric_model;
    WHERE
      WR1 : valid_constraining_shape(constraining_shape,
 SELF\Ee_product_definition_based_constraint_occurrence.constraining_part);
  END_ENTITY;

  ENTITY Test_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
    WHERE
      WR1 : SIZEOF(SELF\Requirement_definition_property.required_analytical_representation) + SIZEOF(SELF\Requirement_definition_property.required_functional_specification) > 0;
  END_ENTITY;

  ENTITY Thermal_requirement_occurrence
    SUBTYPE OF (Requirement_definition_property);
  END_ENTITY;

FUNCTION get_requirement_definition_property
  (ra : Requirement_assignment;
  req_type : STRING) : Requirement_definition_property;
  LOCAL
    requirements : SET[0:?] OF Requirement_definition_property;
  END_LOCAL;
	requirements := USEDIN (ra.assigned_requirement, 'REQUIREMENT_DECOMPOSITION.' + 'REQUIREMENT_DEFINTION_PROPERTY.ASSOCIATED_DEFINITION') ;
	REPEAT i := 1 to SIZEOF(requirements) by 1;
	  IF (req_type IN TYPEOF (requirements[i])) THEN
	  	RETURN (requirements[i]);
	  END_IF;
	END_REPEAT;
	RETURN (?);
END_FUNCTION;

  FUNCTION valid_constraining_shape(
    sd   : SET OF Geometric_model ;
    eepd : Product_view_definition
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

FUNCTION get_rvd(
	input : requirement_assignment_item;
	id : STRING
) : SET OF Requirement_view_definition; 

LOCAL
	rvd : SET[0:?] OF Requirement_view_definition := [];  --this gives us access to the information base
	ra : SET[0:?] OF Requirement_assignment :=[];
END_LOCAL;
	ra := (QUERY(rai <* USEDIN (input, 'REQUIREMENT_ASSIGNMENT_ARM.'+
	'REQUIREMENT_ASSIGNMENT.ASSIGNED_TO') | (rai.id = id)));

	-- iterate over ra
	REPEAT i := 1 to SIZEOF(ra) by 1;
		rvd := rvd + ra[i].assigned_requirement;
	END_REPEAT;

	RETURN(rvd);
END_FUNCTION;


END_SCHEMA;

