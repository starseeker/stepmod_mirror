<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="requirement_decomposition" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2006/01/10 14:16:31 $" rcs.revision="$Revision: 1.40 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Requirement_decomposition_arm
   <express_ref linkend="requirement_decomposition:arm:Requirement_decomposition_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm">
</ext_description>

<!-- +++++++++++ TYPE domain_context_type +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type">
A <b>domain_context_type</b> lists the types of the domain context.
</ext_description>
<!-- mechanical -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type.mechanical">
specifies the "mechanical" domain context.
</ext_description>
<!-- thermal -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type.thermal">
specifies the "thermal" domain context.
</ext_description>
<!-- electromechancial -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type.electromechancial">
specifies the "electromechancial" domain context.
</ext_description>
<!-- electromagnetic_compatibility -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type.electromagnetic_compatibility">
specifies the "electromagnetic compatibility" domain context.
</ext_description>
<!-- electrical -->
<ext_description linkend="Requirement_decomposition_arm.domain_context_type.electrical">
specifies the "electrical" domain context.
</ext_description>

<!-- +++++++++++ TYPE life_cycle_context_type +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.life_cycle_context_type">
A <b>life_cycle_context_type</b> lists the types of the life cycle context.
</ext_description>
<!-- design -->
<ext_description linkend="Requirement_decomposition_arm.life_cycle_context_type.design">
specifies that the life cycle context is "design".
</ext_description>
<!-- qualify -->
<ext_description linkend="Requirement_decomposition_arm.life_cycle_context_type.qualify">
specifies that the life cycle context is "qualify".
</ext_description>
<!-- inspect -->
<ext_description linkend="Requirement_decomposition_arm.life_cycle_context_type.inspect">
specifies that the life cycle context is "inspect".
</ext_description>
<!-- test -->
<ext_description linkend="Requirement_decomposition_arm.life_cycle_context_type.test">
specifies that the life cycle context is "test".
</ext_description>


<!-- +++++++++++ TYPE material_conductivity_classification +++++++++++ -->
<ext_description
linkend="Requirement_decomposition_arm.material_conductivity_classification">
A <b>material_conductivity_classification</b> lists the classification types of the material conductivity.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.material_conductivity_classification.conductive">
specifies that material is conductive;
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.material_conductivity_classification.resistive">
specifies that material is resistive;
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.material_conductivity_classification.semi_conductive">
specifies that material is semi conductive;
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.material_conductivity_classification.non_conductive">
specifies that material is non conductive;
</ext_description>

<!-- +++++++++++ TYPE requirement_view_relationship_type +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.requirement_view_relationship_type">
A <b>requirement_view_relationship_type</b> lists the operations of the relationship type.
</ext_description>
<!-- derived_from -->
<ext_description linkend="Requirement_decomposition_arm.requirement_view_relationship_type.derived_from">
specifies the "derived from" operation;
</ext_description>
<!-- precedence -->
<ext_description linkend="Requirement_decomposition_arm.requirement_view_relationship_type.precedence">
specifies the "precedence" operation;
</ext_description>
<!-- reference_to -->
<ext_description linkend="Requirement_decomposition_arm.requirement_view_relationship_type.reference_to">
specifies the "reference to" operation;
</ext_description>
<!-- supplemental -->
<ext_description linkend="Requirement_decomposition_arm.requirement_view_relationship_type.supplemental">
specifies the "supplemental" operation;
</ext_description>

<!-- +++++++++++ TYPE relationship_operation +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.relationship_operation">
A <b>relationship_operation</b> lists the operations of the relationship.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.relationship_operation.and_operation">
specifies the "and" operation;
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.relationship_operation.or_operation">
specifies the "or" operation;
</ext_description>

<!-- +++++++++++ Inspection_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Inspection_requirement_occurrence">

An <b>Inspection_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that specifies a production 
inspection related requirement.  
An <b>Inspection_requirement_occurrence</b> may be a <express_ref linkend="Fabrication_requirement:arm:Fabrication_requirement_arm.Layout_line_width_tolerance_requirement_occurrence"/> or 
a <express_ref linkend="Fabrication_requirement:arm:Fabrication_requirement_arm.Layout_land_width_tolerance_requirement_occurrence"/> or 
a <express_ref linkend="Fabrication_requirement:arm:Fabrication_requirement_arm.Fabrication_thickness_requirement_occurrence"/>.
</ext_description>
<!-- +++++++++++ Constraint_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Constraint_occurrence"><p>
	A <b>Constraint_occurrence</b> is a type of 
	<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> 
	that limits possible solutions to the requirements specification by identifying boundary conditions for any potential solution.
	A <b>Constraint_occurrence</b> may be a 
	<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence"/>.
</p>
	<note>
	<p>
		A constraint is simply a logical relation among several unknowns (or variables), each taking a value in a given domain. 
		A constraint thus restricts the possible values that variables can take, it represents some partial information about the 
		variables of interest. For instance, "the circle is inside the square" relates two objects without precisely specifying 
		their positions, i.e., their coordinates. Now, one may move the square or the circle and he or she is still able to maintain 
		the relation between these two objects. Also, one may want to add other object, say triangle, and introduce another constraint, 
		say "square is to the left of the triangle". From the user (human) point of view, everything remains absolutely transparent.
	</p>
	<p>
	Constraints naturally enjoy several interesting properties:
	</p>
	<ul>
	    <li>constraints may specify partial information, i.e., constraint need not uniquely specify the values of its variables;</li>
	    <li>constraints are non-directional, typically a constraint on (say) two variables X, Y can be used to infer a constraint on 
	    X given a constraint on Y and vice versa;</li>
	    <li>constraints are declarative, i.e., they specify what relationship must hold without specifying a computational procedure 
	    to enforce that relationship;</li>
	    <li>constraints are additive, i.e., the order of imposition of constraints does not matter, all that matters at the end is 
	    that the conjunction of constraints is in effect;</li>
	    <li>constraints are rarely independent, typicaly constraints in the constraint store share variables.</li> 
	</ul>
	<p>
		Constraints arise naturally in most areas of human endeavor. The three angles of a triangle sum to 180 degrees, the sum of 
		the currents floating into a node must equal zero, the position of the scroller in the window scrollbar must reflect the 
		visible part of the underlying document, these are some examples of constraints which appear in the real world. Thus, constraints 
		are a natural medium for people to express problems in many fields.
		Reference:
		http://kti.ms.mff.cuni.cz/~bartak/constraints/intro.html
	</p>
	</note>
</ext_description>

<!-- logical_relation -->
<ext_description linkend="Requirement_decomposition_arm.Constraint_occurrence.logical_relation"> 
	specifies a 
	<express_ref linkend="Production_rule:arm:Production_rule_arm.Complex_clause"/> 
	for the <b>Constraint_occurrence</b>. The value of this attribute need not be specified.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Requirement_decomposition_arm.Constraint_occurrence.wr:WR1">
	the <b>Constraint_occurrence</b> must be further defined by an 
	<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence"/>
	or must have a <b>logical_relation</b> specified.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Requirement_decomposition_arm.Constraint_occurrence.wr:WR2">
	The
	<express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition.id"/>
	shall not be populated.
</ext_description>

<!-- +++++++++++ Design_characteristic_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Design_characteristic_occurrence"><p>
A <b>Design_characteristic_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> 
that specifies the technical performance values and tolerances 
for some aspect of a design.
</p><note>
The specifications set forth in design characteristics may include such items as enterprise or customer 
specifications on preferred packaging, power design and control, design rules, and preferred design 
practices.
</note>
</ext_description>
<!-- +++++++++++ Design_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Design_requirement_occurrence">
A <b>Design_requirement_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/>. 
A <b>Design_requirement_occurrence</b> may be an 
<express_ref linkend="Assembly_physical_interface_requirement:arm:Assembly_physical_interface_requirement_arm.Interface_requirement_occurrence"/>.
</ext_description>
<!-- +++++++++++ View_based_constraint_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.View_based_constraint_occurrence">

An <b>View_based_constraint_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Constraint_occurrence"/> that has a basis in 
the characteristics of an <express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/> 
and that identifies the basis definition.  
An <b>View_based_constraint_occurrence</b> may be 
a <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Shape_and_view_based_constraint_occurrence"/>.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part">
specifies the <express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/> for the 
<b>View_based_constraint_occurrence</b>.
</ext_description>

<!-- +++++++++++ Predefined_requirement_view_definition +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition">
<p>
	A <b>Predefined_requirement_view_definition</b> is a type of 
	<express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/>.
	A <b>Predefined_requirement_view_definition</b> is one of a 
	<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Constraint_occurrence"/> 
	or a 
	<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Design_characteristic_occurrence"/>, 
	An <b>Predefined_requirement_view_definition</b> is a statement of criteria for design or manufacturing that may be derived from more 
	abstract criteria or may be a decomposition of a technical parameter associated wtih a product structure.
	Complex requirements may be associated with a product specifically for the purpose of managing the requirements.
</p>
	<note>
		This part of ISO 10303 provides generic categories for enterprise classification of requirements and includes some domain classified requirements.
	</note>
	<example>
		An inspection requirement may be derived from an electromagnetic requirement.
	</example>
</ext_description>

<!-- reference_clause -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.reference_clause">
	specifies the <express_ref linkend="Document_definition:arm:Document_definition_arm.Document_definition"/> 
	for the  <b>Predefined_requirement_view_definition</b> in a natural language. The value of this attribute need not be specified.
</ext_description>

<!-- required_material -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.required_material">
	specifies the role of the 
	<express_ref linkend="generic_material_aspects:arm:Generic_material_aspects_arm.Material_identification"/> 
	for the <b>Predefined_requirement_view_definition</b>. 
</ext_description>

<!-- requirement_specification -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.requirement_specification">
	specifies the 
	<express_ref linkend="Specification_document:arm:Specification_document_arm.Specification_definition"/> for the source of the  
	<b>Predefined_requirement_view_definition</b>. 
	There shall be one or more  
	<express_ref linkend="Specification_document:arm:Specification_document_arm.Specification_definition"/> 
	for a <b>Predefined_requirement_view_definition</b>.
</ext_description>

<!-- required_characteristic -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.required_characteristic">
	specifies the role of the 
	<express_ref linkend="Measure_representation:arm:Measure_representation_arm.Property_value_representation"/>
	or the
	<express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic"/>
	for a
	<b>Predefined_requirement_view_definition</b>. 
	There shall be one or more  
	<express_ref linkend="Measure_representation:arm:Measure_representation_arm.Property_value_representation"/>
	or
	<express_ref linkend="Characteristic:arm:Characteristic_arm.characteristic"/> 
	for a <b>Predefined_requirement_view_definition</b>. 
	The value of this attribute need not be specified.
</ext_description>

<!-- required_functional_specification -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.required_functional_specification">
	specifies the 
	<express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification"/> for the 
	<b>Predefined_requirement_view_definition</b>. 
	There shall be one or more  
	<express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification"/> 
	for a <b>Predefined_requirement_view_definition</b>. 
	The value of this attribute need not be specified.
</ext_description>

<!-- required_analytical_representation -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.required_analytical_representation">
	specifies the 
	<express_ref linkend="Analytical_model:arm:Analytical_model_arm.Analytical_model_application"/> for the 
	<b>Predefined_requirement_view_definition</b>. 
	There shall be one or more  <express_ref linkend="Analytical_model:arm:Analytical_model_arm.Analytical_model_application"/> 
	for a <b>Predefined_requirement_view_definition</b>. 
	The value of this attribute need not be specified.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.wr:WR1">
	if <b>required_material</b> is provided, it's type shall be 
	<express_ref linkend="conductivity_material_aspects:arm:Conductivity_material_aspects_arm.Material_identification_with_conductivity_classification"/>.
</ext_description>

<!-- WR2 -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.wr:WR2">
The <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.View_definition_context.application_domain"/>
of <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.View_definition_context"/>,
that is in role of <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition.initial_context"/>
of <b>Predefined_requirement_view_definition</b>, shall be set to one of:
'mechanical', 'thermal', 'electromechancial', 'electromagnetic compatibility', 'electrical'.
</ext_description>

<!-- WR3 -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.wr:WR3">
The <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.View_definition_context.life_cycle_stage"/>
of <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.View_definition_context"/>,
that is in role of <express_ref linkend="product_view_definition:arm:Product_view_definition_arm.Product_view_definition.initial_context"/>
of <b>Predefined_requirement_view_definition</b>, shall be set to one of:
'design', 'qualify', 'inspect', 'test'.
</ext_description>

<!-- WR4 -->
<ext_description linkend="Requirement_decomposition_arm.Predefined_requirement_view_definition.wr:WR4">
	The
	<express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition.name"/> 
	shall not be populated.
</ext_description>

<!-- +++++++++++ Electrical_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Electrical_requirement_occurrence">

An <b>Electrical_requirement_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> 
that is related to performance 
with respect to electrical functionality. An <b>Electrical_requirement_occurrence</b> may be 
a <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Material_electrical_conductivity_requirement_occurrence"/>.
</ext_description>
<!-- +++++++++++ Electromagnetic_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Electromagnetic_requirement_occurrence">

An <b>Electromagnetic_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that is related to performance with respect to electromagnetic 
compatibility and interference.
</ext_description>
<!-- +++++++++++ Material_electrical_conductivity_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Material_electrical_conductivity_requirement_occurrence">

A <b>Material_electrical_conductivity_requirement_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that 
specifies the requirement for conductive material.
</ext_description>
<!-- electrical_conductivity_characteristic -->
<ext_description linkend="Requirement_decomposition_arm.Material_electrical_conductivity_requirement_occurrence.electrical_conductivity_characteristic"><p>
specifies the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification"/> 
for the 
<b>Material_electrical_conductivity_requirement_occurrence</b>.  
The <b>electrical_conductivity_characteristic</b> specifies either a 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification">
conductive</express_ref>, a <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification">non_conductive</express_ref>, a <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification">resistive</express_ref>, or a 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification">
semi_conductive</express_ref> classification of material conductivity for the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.material_conductivity_classification"/>.
</p><note>
These are generic category names.  If more specific data is required, the characteristics should be associated to
the <b>Material_electrical_conductivity_requirement_occurrence</b> using the <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition.required_characteristic"/> inherited from  <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/>.
</note>
</ext_description>

<!-- +++++++++++ Mechanical_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Mechanical_requirement_occurrence">

A <b>Mechanical_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that specifies a mechanical 
bdomain related requirement.
</ext_description>

<!-- +++++++++++ Requirement_view_definition_relationship +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Requirement_view_definition_relationship">
A <b>Requirement_view_definition_relationship</b> is a type of 
<express_ref linkend="Product_view_definition_relationship:arm:Product_view_definition_relationship_arm.View_definition_relationship"/>. 
A <b>Requirement_view_definition_relationship</b> is the association between one 
<express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> and another, 
with a defined type of relationship.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Requirement_view_definition_relationship.primary">
an instance specifies the first <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> for the <b>Requirement_view_definition_relationship</b>.
The first  <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> is the dependent item if the relationship is a dependency relationship.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Requirement_view_definition_relationship.secondary">
an instance specifies the second <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> for the <b>Requirement_view_definition_relationship</b>.
The second  <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> is the independent item if the relationship is a dependency relationship.
</ext_description>

<ext_description
linkend="Requirement_decomposition_arm.Requirement_view_definition_relationship.relationship_type">
<p>specifies one of the following:</p>
<ul>
<li>an <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
PRECEDENCE</express_ref>;</li>
<li>an <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
SUPPLEMENTAL</express_ref>;</li>
<li>a <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
DERIVED_FROM</express_ref> relationship.</li></ul>
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Requirement_view_definition_relationship.wr:WR1">
<p>
<b>primary</b> shall not be <b>secondary</b>.
</p>
</ext_description>

<!-- +++++++++++ Operational_requirement_occurrence_relationship +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship">
An <b>Operational_requirement_occurrence_relationship</b> is a type of <express_ref linkend="Property_assignment:arm:Property_assignment_arm.Assigned_property"/>,  <express_ref linkend="Product_view_definition_relationship:arm:Product_view_definition_relationship_arm.View_definition_relationship"/>. An <b>Operational_requirement_occurrence_relationship</b> is the association between one <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> and another, with a defined type of relationship.  An <b>Operational_requirement_occurrence_relationship</b> is an incompletely modeled concept and shall be combined with members of <express_ref linkend="Requirement_view_definition_relationship:arm:Requirement_view_definition_relationship_arm.Requirement_collection_relationship"/> to form a complete requirement.
</ext_description>

<ext_description linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship.operand_1">
an instance specifies the first <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> for the <b>Operational_requirement_occurrence_relationship</b>.
The first  <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> is the dependent item if the relationship is a dependency relationship.
</ext_description>

<ext_description linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship.operand_2">
an instance specifies the second <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> for the <b>Operational_requirement_occurrence_relationship</b>.
The second  <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/> is the independent item if the relationship is a dependency relationship.
</ext_description>

<ext_description linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship.result">
specifies a result of the two operands after the operation. The result is of type <express_ref linkend="Requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition"/>.
</ext_description>

<ext_description
linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship.relationship_type">
<p>specifies one of the following:</p>
<ul>
<li>an <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
AND_OPERATION</express_ref>;</li>
<li>an <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
OR_OPERATION</express_ref>.</li>
</ul>
<p>The mathematical operations AND, OR shall be implemented for this <b>relationship_type</b>. The 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
AND_OPERATION</express_ref> is provided so that changes in <b>relationship_type</b> from 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
OR_OPERATION</express_ref> to 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.relationship_operation">
AND_OPERATION</express_ref> do not cause a structural change to the populated data.  
The implicit relationship between two 
member of  <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> 
that help to compose the same <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> is an AND relationship.</p>
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Operational_requirement_occurrence_relationship.wr:WR1">
<p>
<b>operand_1</b> shall not be <b>operand_2</b>.
</p>
</ext_description>
<!-- +++++++++++ Purpose_occurrence +++++++++++ -->
<!--
<ext_description linkend="Requirement_decomposition_arm.Purpose_occurrence">
A <b>Purpose_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that specifies the intended behaviour and usage of the aspect of a 
design for which the requirement is allocated.
</ext_description> 
-->
<!-- +++++++++++ Shape_and_view_based_constraint_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Shape_and_view_based_constraint_occurrence">
<p>
A <b>Shape_and_view_based_constraint_occurrence</b> is a type of 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence"/> 
that has a basis in the characteristics of one or more 
<express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/> within the context of the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part"/> 
inherited from  <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence"/>.
Each member of  <express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/> 
referenced shall reference the  
<express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/> 
referenced by the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part"/> 
attribute inherited from  
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence"/>.
</p><note>
This provides a mechanism to specify that one or more of the analysis or keepout shapes on  
<express_ref linkend="Part_view_definition:arm:Part_view_definition_arm.Part_view_definition"/> is a constraint.
</note>
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Shape_and_view_based_constraint_occurrence.constraining_shape">
specifies the role of the <express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/> for the <b>Shape_and_view_based_constraint_occurrence</b>.  The interpretation shall be that the <b>constraining_shape</b> specifies the shape representation and the <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part"/> inherited from the supertype specifies the <express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/>.  There may be one or more  <express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/> for the <b>Shape_and_view_based_constraint_occurrence</b>.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Shape_and_view_based_constraint_occurrence.wr:WR1">
the
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Shape_and_view_based_constraint_occurrence.constraining_shape"/> defined by the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part"/> 
must be a valid constraining shape.
</ext_description>
<!-- +++++++++++ Test_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Test_requirement_occurrence"><p>
A <b>Test_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that specifies a test related requirement.  The test method shall be specified in the <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition.requirement_specification"/> inherited from <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/>.  The <b>Test_requirement_occurrence</b> provides a representation of minimum bounds on behaviour.
In order to relate a <b>Test_requirement_occurrence</b> to a product, a <express_ref linkend="Test_requirement_allocation:arm:Test_requirement_allocation_arm.Test_requirement_allocation"/>is required to be exchanged that references this Application Object and the version of the product to which the test requirement is allocated.
That <express_ref linkend="Test_requirement_allocation:arm:Test_requirement_allocation_arm.Test_requirement_allocation"/> shall also specify a number of <express_ref linkend="Analytical_model:arm:Analytical_model_arm.Analytical_model_port_assignment"/> in order to specify the measurement access points for the test.  It is valid to exchange a <b>Test_requirement_occurrence</b> without a <express_ref linkend="Test_requirement_allocation:arm:Test_requirement_allocation_arm.Test_requirement_allocation"/>.

</p><note number="1">
This edition of this part of ISO 10303 does not explicitly relate the test requirement to the test setup.
</note>
<note number="2">
The <b>Test_requirement_occurrence</b> may be used as a reference for  <express_ref linkend="Planned_characteristic:arm:Planned_characteristic_arm.Planned_characteristic"/>.
</note>
<note number="3">
The <b>Test_requirement_occurrence</b> may be a derived requirement from a  <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Design_requirement_occurrence"/>, in which case production capability based margins would cause the actual characteristics to be different between the  <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Design_requirement_occurrence"/> and the <b>Test_requirement_occurrence</b>.
</note>

</ext_description>
<ext_description linkend="Requirement_decomposition_arm.Test_requirement_occurrence.wr:WR1">
Either an  <express_ref linkend="Analytical_model:arm:Analytical_model_arm.Analytical_model_application"/> shall be provided or a  <express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification"/> shall be provided.
</ext_description>
<!-- +++++++++++ Thermal_requirement_occurrence +++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.Thermal_requirement_occurrence">
A <b>Thermal_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Predefined_requirement_view_definition"/> that specifies a heat transfer related requirement.
</ext_description>
<!-- +++++++++++ Valid__constraining_shape ++++++++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.valid_constraining_shape">
The <b>valid_constraining_shape</b> function returns a boolean result indicating the validity of the 
<express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.View_based_constraint_occurrence.constraining_part"/>.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.valid_constraining_shape.sd">
the shape description being checked for validity.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.valid_constraining_shape.eepd">
the ee product definition being checked for validity.
</ext_description>


<!-- +++++++++++ get_rvd ++++++++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.get_rvd">
The <b>get_rvd</b> function returns the set of <express_ref linkend="requirement_view_definition:arm:Requirement_view_definition_arm.Requirement_view_definition">Requirement_view_definitions</express_ref>
that are assigned to the specified <b>input</b> by the <express_ref linkend="requirement_assignment:arm:Requirement_assignment_arm.Requirement_assignment">Requirement_assignments</express_ref>,
having their <express_ref linkend="requirement_assignment:arm:Requirement_assignment_arm.Requirement_assignment.id"/> set to the specified <b>id</b>,
as <express_ref linkend="requirement_assignment:arm:Requirement_assignment_arm.Requirement_assignment.assigned_requirement">assigned_requirements</express_ref>.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.get_rvd.input">
the specified <express_ref linkend="requirement_assignment:arm:Requirement_assignment_arm.requirement_assignment_item"/>.
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.get_rvd.id">
the identifier for <express_ref linkend="requirement_assignment:arm:Requirement_assignment_arm.Requirement_assignment">Requirement_assignments</express_ref>.
</ext_description>

<!-- +++++++++++ bag_to_set ++++++++++++++++ -->
<ext_description linkend="Requirement_decomposition_arm.bag_to_set">
The <b>bag_to_set</b> function converts bag to set. 
</ext_description>
<ext_description linkend="Requirement_decomposition_arm.bag_to_set.the_bag">
an aggragate.
</ext_description>

</ext_descriptions>

