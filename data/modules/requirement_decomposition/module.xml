<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<module name="requirement_decomposition" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: $" rcs.revision="$Revision: $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">
    <keywords>
    module
 </keywords>
    <abstract>
        <li>xxxxx</li>
    </abstract>
    <contacts>
        <projlead ref="AP210.projlead"/>
        <editor ref="pdmmodules.editor"/>
    </contacts>
    <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of 
   </p>
 </purpose>
    <inscope>
        <li>xxxxx</li>
    </inscope>
    <outscope>
        <li>xxxx</li>
    </outscope>
    <arm>
        <express-g>
            <imgfile file="armexpg1.xml"/>
        </express-g>
    </arm>
    <mapping_table>
        <ae original_module="Requirement_decomposition" entity="Inspection_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
(property_definition.description = `inspection requirement')
(property_definition.description = `layout land width tolerance requirement')
(property_definition.description = `layout line width tolerance requirement')}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Constraint_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
(property_definition.id = `constraint')
((property_definition.description = `shape and product definition based constraint')
(property_definition.description = `product definition based constraint'))}
</refpath>
            <aa assertion_to="Rule_complex_clause" attribute="logical_relation">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirements_property &lt;=
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
{property_definition_representation.name = `logical relation'}
property_definition_representation.used_representation -&gt;
representation =&gt;
rule_complex_clause
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Design_characteristic_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = `design characteristic'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Design_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = `design requirement'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Ee_product_definition_based_constraint_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
(property_definition.description = `shape and product definition based constraint')
(property_definition.description = `product definition based constraint')}
</refpath>
            <aa assertion_to="Ee_product_definition" attribute="constraining_part">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirements_property &lt;=
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = `constraining product definition'}
property_definition_relationship.relating_property_definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
(characterized_product_definition = product_definition)
(characterized_product_definition = product_definition =&gt;
product_definition_with_associated_documents)
(characterized_product_definition = product_definition =&gt;
physical_unit)
(characterized_product_definition = product_definition =&gt;
externally_defined_physical_unit)
(characterized_product_definition = product_definition =&gt;
externally_defined_physical_unit =&gt;
library_defined_physical_unit)
(characterized_product_definition = product_definition =&gt;
analytical_model_definition)
(characterized_product_definition = product_definition =&gt;
footprint_definition)
(characterized_product_definition = product_definition =&gt;
padstack_definition)
(characterized_product_definition = product_definition =&gt;
physical_unit_network_definition)
(characterized_product_definition = product_definition =&gt;
requirement_definition)
(characterized_product_definition = product_definition =&gt;
stratum)
(characterized_product_definition = product_definition =&gt;
functional_unit)
(characterized_product_definition = product_definition =&gt;
functional_unit =&gt;
externally_defined_functional_unit)
(characterized_product_definition = product_definition =&gt;
functional_unit =&gt;
externally_defined_functional_unit =&gt;
library_defined_functional_unit)
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Requirement_definition_property" extensible="NO"/>
        <ae original_module="Requirement_decomposition" entity="Electrical_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.name = `electrical requirement'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Electromagnetic_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.name = `electromagnetic requirement'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Material_electrical_conductivity_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.name = `material electrical conductivity classification'}
</refpath>
            <aa attribute="electrical_conductivity_characteristic">
                <aimelt xml:space="preserve">material_electrical_conductivity_category</aimelt>
                <source xml:space="preserve">ISO 10303-210</source>
                <refpath xml:space="preserve">requirements_property
classification_assigned_item = requirements_property
classification_assigned_item &lt;-
applied_classification_assignment.items[i]
applied_classification_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
{group
(group.name = `conductive')
(group.name = `non conductive')
(group.name =  `resistive')
(group.name =  `semi conductive')}
group =&gt;
material_electrical_conductivity_category
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Mechanical_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.name = `mechanical requirement'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Operational_requirement_occurrence_relationship" extensible="NO">
            <aimelt xml:space="preserve">product_definition_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-45</source>
            <refpath xml:space="preserve">{product_definition_relationship
product_definition_relationship.description = `operational requirement occurrence relationship'}
</refpath>
            <aa attribute="relationship_type">
                <aimelt xml:space="preserve">product_definition_relationship.name</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">product_definition_relationship
{product_definition_relationship.name
(product_definition_relationship.name = `and operation')
(product_definition_relationship.name = `derived from operation')
(product_definition_relationship.name = `or operation')}
</refpath>
            </aa>
            <aa assertion_to="Requirement_definition" attribute="related_requirement_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
requirement_definition
</refpath>
            </aa>
            <aa assertion_to="Requirement_definition" attribute="relating_requirement_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
requirement_definition
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Purpose_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = `purpose'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Shape_and_ee_product_definition_based_constraint_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = `shape and product definition based constraint'}
</refpath>
            <aa assertion_to="Shape_definition" attribute="constraining_shape">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirements_property &lt;=
property_definition &lt;-
property_definition_representation.definition
property_definition_representation.used_representation -&gt;
representation &lt;-
representation_relationship.rep_1
{representation_relationship
representation_relationship.name = `constraint shape reference'}
representation_relationship.rep_2 -&gt;
representation
{representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
{property_definition =&gt;
product_definition_shape}
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
{(characterized_product_definition = product_definition)
(characterized_product_definition = product_definition =&gt;
product_definition_with_associated_documents)
(characterized_product_definition = product_definition =&gt;
physical_unit)
(characterized_product_definition = product_definition =&gt;
externally_defined_physical_unit)
(characterized_product_definition = product_definition =&gt;
externally_defined_physical_unit =&gt;
library_defined_physical_unit)
(characterized_product_definition = product_definition =&gt;
analytical_model_definition)
(characterized_product_definition = product_definition =&gt;
footprint_definition)
(characterized_product_definition = product_definition =&gt;
padstack_definition)
(characterized_product_definition = product_definition =&gt;
physical_unit_network_definition)
(characterized_product_definition = product_definition =&gt;
requirement_definition)
(characterized_product_definition = product_definition =&gt;
stratum)
(characterized_product_definition = product_definition =&gt;
functional_unit)
(characterized_product_definition = product_definition =&gt;
functional_unit =&gt;
externally_defined_functional_unit)
(characterized_product_definition = product_definition =&gt;
functional_unit =&gt;
externally_defined_functional_unit =&gt;
library_defined_functional_unit)}}
representation =&gt;
shape_representation
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Structured_text_id_in_document" extensible="NO">
            <aimelt xml:space="preserve">applied_document_reference</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{applied_document_reference &lt;=
document_reference.role -&gt;
object_role.name = `text identifier in document'}
</refpath>
            <aa attribute="identifier">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">applied_document_reference &lt;=
document_reference.source
</refpath>
            </aa>
            <aa assertion_to="Ee_document" attribute="document">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">applied_document_reference &lt;=
document_reference.assigned_document
</refpath>
            </aa>
            <aa assertion_to="Structured_text" attribute="text">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">applied_document_reference.items[i] -&gt;
document_assigned_item
document_assigned_item = representation
{representation
representation.name = `text usage'}
representation =&gt;
structured_text_representation_item
</refpath>
            </aa>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Test_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = `test requirement'}
</refpath>
        </ae>
        <ae original_module="Requirement_decomposition" entity="Thermal_requirement_occurrence">
            <aimelt>requirements_property</aimelt>
            <source>ISO 10303-210</source>
            <refpath>requirements_property &lt;=
property_definition
{property_definition
property_definition.name = `thermal requirement'}
</refpath>
        </ae>
    </mapping_table>
    <mim>
        <express-g>
            <imgfile file="mimexpg1.xml"/>
        </express-g>
    </mim>
</module>
