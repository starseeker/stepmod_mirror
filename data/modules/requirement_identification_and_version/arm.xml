<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/express.xsl"
?> <!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express language_version="2" rcs.date="$Date: $" rcs.revision="$Revision: $">
<application name="GraphicalEXPRESS" owner="Eurostep" url="www.eurostep.com" version="1.3" source="requirement_identification_and_version.vsd" />
<schema name="Requirement_identification_and_version_arm">
<interface kind="use" schema="Alias_identification_arm">
</interface>
<interface kind="use" schema="Product_identification_arm">
</interface>
<interface kind="use" schema="Product_version_arm">
</interface>
<interface kind="use" schema="Product_version_relationship_arm">
</interface>
<type name="requirement_identification_and_version_alias_identification_item">
<select extensible="YES" basedon="alias_identification_item" selectitems="Requirement Requirement_version" />
<graphic.element page="2" xcoord="155" ycoord="552" />
</type>
<entity name="Requirement" supertypes="Product">
<description>
        The Requirement entity is used to uniquely identify a requirement. There may be many versions of that
requirement (requirement_version). There may also be more than one domain-specific view of a given
requirement_version (using the requirement_view_definition entity). The requirement entity is really just a
placeholder for holding a unique requirement. Most associations and properties are defined at the
requirement_view_definition level - i.e. they are in context of a domain. For example, a requirement may
be identified as "NOx emissions requirement", and uniquely identified as "Req2". There may be versions
of this requirement (requirement_version). Systems engineering tools and organizations may use differing
identification mechanisms. Multiple identifiers may be assigned to a requirement using the Alias_identifier
entity.
      </description>
<graphic.element page="2" xcoord="127" ycoord="630" />
</entity>
<entity name="Requirement_version" supertypes="Product_version">
<description>
        The Requirement_version entity represents a version of a requirement. This entity is used to record the
different versions of a requirement. In this case, the word "version" implies "revision" - i.e. a particular
release of a requirement. For example, a given requirement might have versions 1.0, 1.1, 1.2 and 2.0
      </description>
<explicit name="of_product">
<typename name="Requirement" />
<redeclaration entity-ref="Product_version" />
</explicit>
<graphic.element page="2" xcoord="467" ycoord="630" />
</entity>
<entity name="Requirement_version_relationship" supertypes="Version_relationship">
<description>
        The Requirement_version_sequence entity is used to relate a previous version (predecessor) of a
requirement to the version that replaces it (successor).
      </description>
<explicit name="predecessor">
<typename name="Requirement_version" />
<redeclaration entity-ref="Version_relationship" old_name="relating_version" />
</explicit>
<explicit name="successor">
<typename name="Requirement_version" />
<redeclaration entity-ref="Version_relationship" old_name="related_version" />
</explicit>
<graphic.element page="2" xcoord="467" ycoord="545" />
</entity>
<graphic.element page="1" xcoord="255" ycoord="758" />
</schema>
</express>
