<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.20 2003/12/05 07:50:12 robbod Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module name="requirement_management" part="1348" version="1" sc4.working_group="12" wg.number="2350" wg.number.supersedes="1934" wg.number.arm="2351" wg.number.arm.supersedes="1935" wg.number.mim="2352" wg.number.mim.supersedes="1936" checklist.internal_review="2248" checklist.project_leader="2249" checklist.convener="2250" status="TS" language="E" publication.year="2004" published="y" rcs.date="$Date: 2003/12/05 07:50:12 $" rcs.revision="$Revision: 1.20 $" development.folder="dvlp">
	<keywords>
		module, information management, requirement
	</keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="ap233.projlead"/>
		<editor ref="ap233.editor"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p>
			This part of ISO 10303 specifies an application module for the representation, assignment and management of requirements.  It provides the means to represent requirement definitions, requirement versions, requirement assignments and requirement sources and to specify and manage, over time, the various relationships between these.  It also provides the means to assign management data to requirements and requirement relationships, including date and time, approval, identification, person and organization, contract, security, and language data.
		</p>
		<p>
			This part of ISO 10303 acts as a collector for requirement capabilities. It uses other application modules to: identify requirements and versions of requirements; characterize views of requirement versions; define relationships between requirement definitions; assign requirements; and specify the management data noted above.
		</p>
	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>
			representation of the data that identify a requirement and its versions;
		</li>
		<li>
			the assignment of a requirement to a product or other item;
		</li>
		<li>
			the identification of the source of a requirement;
		</li>
		<li>
			relationships between requirements;
		</li>
		<li>
			characterization of a version of a requirement, suitable for one or more application domains and one or more life-cycle stages;
		</li>
		<li>
			identification of a universe of discourse suitable for the description of requirements;
		</li>
		<li>
			relationships between requirements that are expressed at the view definition level;
		</li>
		<li>
			assignment of date and time properties to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of approval data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of identification and alias identification data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of person and organization data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;

		</li>
		<li>
			assignment of contract data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of security classification data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of language data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments.
		</li>
	</inscope>
	<!-- Items out of scope	
	<outscope/>
	
	 -->
	<normrefs>
		<normref.inc normref="ref10303-41.e3"/>
	</normrefs>
	<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="Requirement_Management">
			<description>
				<p>
         This unit of functionality provides for the representation of requirement
         management information. It includes information for identification of
         requirements, versions and views of requirements, information about
         persons and dates, and information resulting from release and
         approval processes.
       </p>
				<p>
         Additionally, this unit of functionality provides for the 
	representation of descriptive information about requirements expressed in different
         languages and for the assignment of alias identifiers to requirements. 
       </p>
			</description>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
			<imgfile file="armexpg3.xml"/>
			<imgfile file="armexpg4.xml"/>
			<imgfile file="armexpg5.xml"/>
			<imgfile file="armexpg6.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<!-- APPROVAL -->
		<ae entity="Approval_assignment" original_module="approval">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category 
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					rm_mri_approval_item
					rm_mri_approval_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category 
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- DATE -->
		<ae entity="Date_or_date_time_assignment" original_module="date_time_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category 
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category  &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						rm_mri_date_item
						rm_mri_date_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						rm_mri_date_and_time_item
						rm_mri_date_and_time_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
		</ae>
		<!-- ALIAS -->
		<ae entity="Identification_assignment" original_module="identification_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt; 
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt; 
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						requirement_assignment
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						requirement_assignment]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						requirement_assignment]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						requirement_source
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						requirement_source]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						requirement_source]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}] 
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						rm_mri_identification_item
						rm_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						rm_aliasable_item
						rm_aliasable_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
		</ae>
		<!-- CONTRACT -->
		<ae entity="Contract_assignment" original_module="contract">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item =
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					rm_contract_item
					rm_contract_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- SECURITY -->
		<ae entity="Security_classification_assignment" original_module="security_classification">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item =
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					rm_security_classification_item
					rm_security_classification_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- PERSON ORG -->
		<ae entity="Organization_or_person_in_organization_assignment" original_module="person_organization_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						requirement_assignment
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						rm_mri_organization_item
						rm_mri_organization_item =  
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						rm_mri_person_and_organization_item
						rm_mri_person_and_organization_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
		</ae>
		<!-- LANGUAGE -->
		<ae entity="Language_indication" original_module="multi_linguism">
			<aa attribute="considered_instances" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					rm_mri_attribute_language_item
					rm_mri_attribute_language_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- MULTI LANGUAGE -->
		<ae entity="Attribute_translation_assignment" original_module="multi_linguism">
			<aa attribute="considered_instances" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instances" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					rm_mri_multi_language_attribute_item
					rm_mri_multi_language_attribute_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
			<imgfile file="mimexpg3.xml"/>
			<imgfile file="mimexpg4.xml"/>
			<imgfile file="mimexpg5.xml"/>
			<imgfile file="mimexpg6.xml"/>
			<imgfile file="mimexpg7.xml"/>
		</express-g>
	</mim>
</module>
