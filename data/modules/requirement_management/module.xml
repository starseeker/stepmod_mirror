<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.51 2009/02/07 17:09:01 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
    <!--  This module supersedes same named module in sc4.working_group="12" -->
<!--
	Note:
    wg.number.supersedes="3129(wg12)" 
    wg.number.arm.supersedes="2130(wg12)" 
    wg.number.mim.supersedes="3131(wg12)" 
-->
<module 
    name="requirement_management"
    name.french="Gestion de sp&#233;cifications"
    part="1348" 
    version="2" 
    sc4.working_group="3" 
    wg.number="2505"
    wg.number.arm="2506"
    wg.number.mim="2507"
    wg.number.arm_lf="2508"
    wg.number.mim_lf="2509"
    wg.number.supersedes="2414"
    wg.number.arm.supersedes="2415"
    wg.number.mim.supersedes="2416"
    wg.number.arm_lf.supersedes="2420"
    wg.number.mim_lf.supersedes="2421"
    checklist.convener="2530"
    checklist.internal_review="2531"
    checklist.project_leader="2532"
    status="TS"
    language="E"
    publication.year="2009"
    publication.date="" 
    published="n" 
    rcs.date="$Date: 2009/02/07 17:09:01 $" 
    rcs.revision="$Revision: 1.51 $" 
    development.folder="dvlp">
	<keywords>
		module, information management, requirement
	</keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
	   <projlead ref="ap233.projlead2"/>
	   <editor ref="ap233.editor2"/>  
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p>
			This part of ISO 10303 specifies an application module for the representation, assignment 
			and management of requirements.  It provides the means to represent requirement definitions, 
			requirement versions, requirement assignments and requirement sources and to specify and 
			manage, over time, the various relationships between these.  It also provides the means 
			to assign management data to requirements and requirement relationships, including date 
			and time, approval, identification, person and organization, contract, security, and 
			language data.
		</p>
		<p>
			This part of ISO 10303 acts as a collector for requirement capabilities. It uses other 
			application modules to: identify requirements and versions of requirements; characterize 
			views of requirement versions; define relationships between requirement definitions; 
			assign requirements; and specify the management data noted above.
		</p>
		   <p>Hyperlink to Annex <module_ref linkend="requirement_management:f_usage_guide">F</module_ref>  
		  for AP233 concept model introductory material associated with requirement management capabilities 
		  enabled within AP233 and its connectivity to modules used.</p> 

	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>
			representation of the data that identify a requirement and its versions;
		</li>
		<li>
			the assignment of a requirement to a product or other item;
		</li>
		<li>
			the identification of the source of a requirement;
		</li>
		<li>
			relationships between requirements;
		</li>
		<li>
			characterization of a version of a requirement, suitable for one or more application domains and one or more life-cycle stages;
		</li>
		<li>
			identification of a universe of discourse suitable for the description of requirements;
		</li>
		<li>
			relationships between requirements that are expressed at the view definition level;
		</li>
		<li>
			assignment of date and time properties to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of approval data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of identification and alias identification data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of person and organization data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;

		</li>
		<li>
			assignment of contract data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of security classification data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
		</li>
		<li>
			assignment of language data to requirements, requirement definitions, requirement versions, relationships between requirement versions, sources, relationships between requirement collections, requirement tracing relationships, and  requirement assignments.
		</li>
	</inscope>
	<!-- Items out of scope	
	<outscope/>
	
	 -->
	<normrefs>
		<normref.inc normref="ref10303-41.e3"/>
	</normrefs>
	<!--
 <normrefs/>

 <definition/>
-->

 <abbreviations>

 <abbreviation id="MOE">
	     <acronym>MOE</acronym>
	     <term>measure of effectiveness</term>
	   </abbreviation>
      
 </abbreviations>

	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="Requirement_Management">
			<description>
				<p>
         This unit of functionality provides for the representation of requirement
         management information. It includes information for identification of
         requirements, versions and views of requirements, information about
         persons and dates, and information resulting from release and
         approval processes.
       </p>
				<p>
         Additionally, this unit of functionality provides for the 
	representation of descriptive information about requirements expressed in different
         languages and for the assignment of alias identifiers to requirements. 
       </p>
			</description>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
<!--			<imgfile file="armexpg3.xml"/>
			<imgfile file="armexpg4.xml"/>
			<imgfile file="armexpg5.xml"/>
			<imgfile file="armexpg6.xml"/>
			<imgfile file="armexpg7.xml"/>
			<imgfile file="armexpg8.xml"/>
			<imgfile file="armexpg9.xml"/>
			<imgfile file="armexpg10.xml"/>
			<imgfile file="armexpg11.xml"/>
			<imgfile file="armexpg12.xml"/>
			<imgfile file="armexpg13.xml"/>
			<imgfile file="armexpg14.xml"/>
			<imgfile file="armexpg15.xml"/>	-->
		</express-g>
	</arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<!-- APPROVAL -->
		<ae entity="Approval_assignment" original_module="approval">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category 
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="approval_item">
					approval_item *&gt;
					mri_approval_item
					mri_approval_item *&gt; 
					requirement_mri_approval_item
					requirement_mri_approval_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category 
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- DATE -->
		<ae entity="Date_or_date_time_assignment" original_module="date_time_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category 
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category  &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="date_or_date_time_item">
						date_item *&gt;
						mri_date_item
						mri_date_item *&gt; 
						requirement_mri_date_item
						requirement_mri_date_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="date_or_date_time_item">
						date_and_time_item *&gt;
						mri_date_and_time_item
						mri_date_and_time_item *&gt; 
						requirement_mri_date_and_time_item
						requirement_mri_date_and_time_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
		</ae>
		<!-- ALIAS -->
		<ae entity="Identification_assignment" original_module="identification_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt; 
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt; 
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						requirement_assignment
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						requirement_assignment]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						requirement_assignment]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						requirement_source
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						requirement_source]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						requirement_source]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}] 
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<alt_map id="1">
					<description>If the identification is not an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						applied_identification_assignment
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath>
				</alt_map>
				<alt_map id="2">
					<description>If the identification is an alias identification.</description>
					<aimelt>PATH</aimelt>
					<refpath>
						[applied_identification_assignment
						{applied_identification_assignment &lt;= 
						identification_assignment
						identification_assignment.role -&gt;
						identification_role
						identification_role.name='alias'}
						applied_identification_assignment.items[i] *&gt;
						identification_item
						identification_item *&gt;
						mri_identification_item
						mri_identification_item *&gt; 
						requirement_mri_identification_item
						requirement_mri_identification_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
						[aliasable_item *&gt;
						requirement_aliasable_item
						requirement_aliasable_item =
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}]
					</refpath>
				</alt_map>
			</aa>
		</ae>
		<!-- CONTRACT -->
		<ae entity="Contract_assignment" original_module="contract">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item =
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="contract_item">
					contract_item *&gt;
					requirement_contract_item
					requirement_contract_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- SECURITY -->
		<ae entity="Security_classification_assignment" original_module="security_classification">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item =
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="security_classification_item">
					security_classification_item *&gt;
					requirement_security_classification_item
					requirement_security_classification_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- PERSON ORG -->
		<ae entity="Organization_or_person_in_organization_assignment" original_module="person_organization_assignment">
			<aa attribute="items" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product
						{product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						requirement_assignment
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						requirement_assignment
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						requirement_source
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement collection relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'} 
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product_definition_formation
						{product_definition_formation.of_product -&gt;
						product
						product &lt;-
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product_definition_formation_relationship
						product_definition_formation_relationship.relating_product_definition_formation -&gt;
						product_definition_formation
						{product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i] 
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
			<aa attribute="items" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<alt_map alt_map.inc="1">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						organization_item *&gt;
						mri_organization_item
						mri_organization_item =
						requirement_mri_organization_item
						requirement_mri_organization_item =  
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
				<alt_map alt_map.inc="2">
					<refpath_extend extended_select="organization_or_person_in_organization_item">
						person_and_organization_item *&gt;
						mri_person_and_organization_item
						mri_person_and_organization_item =
						requirement_mri_person_and_organization_item
						requirement_mri_person_and_organization_item = 
						product_definition_relationship
						{product_definition_relationship
						product_definition_relationship.description='requirement tracing relationship'}
						product_definition_relationship.relating_product_definition -&gt;
						product_definition
						{product_definition
						product_definition.formation -&gt;
						product_definition_formation
						product_definition_formation.of_product -&gt;
						product &lt;- 
						product_related_product_category.products[i]
						product_related_product_category &lt;=
						product_category
						product_category.name='requirement'}
					</refpath_extend>
				</alt_map>
			</aa>
		</ae>
		<!-- LANGUAGE -->
		<ae entity="Language_indication" original_module="multi_linguism">
			<aa attribute="considered_instance" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					attribute_language_item *&gt;
					mri_attribute_language_item
					mri_attribute_language_item *&gt; 
					requirement_mri_attribute_language_item
					requirement_mri_attribute_language_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
		<!-- MULTI LANGUAGE -->
		<ae entity="Attribute_translation_assignment" original_module="multi_linguism">
			<aa attribute="considered_instance" assertion_to="Requirement">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_assignment">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					requirement_assignment
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_source">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					requirement_source
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_collection_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement collection relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_view_definition">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'} 
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_version">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product_definition_formation
					{product_definition_formation.of_product -&gt;
					product
					product &lt;-
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Requirement_version_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
			<aa attribute="considered_instance" assertion_to="Tracing_relationship">
				<aimelt>PATH</aimelt>
				<refpath_extend extended_select="string_select">
					multi_language_attribute_item *&gt;
					mri_multi_language_attribute_item
					mri_multi_language_attribute_item *&gt; 
					requirement_mri_multi_language_attribute_item
					requirement_mri_multi_language_attribute_item = 
					product_definition_relationship
					{product_definition_relationship
					product_definition_relationship.description='requirement tracing relationship'}
					product_definition_relationship.relating_product_definition -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='requirement'}
				</refpath_extend>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
<!--			<imgfile file="mimexpg3.xml"/>
			<imgfile file="mimexpg4.xml"/>
			<imgfile file="mimexpg5.xml"/>
			<imgfile file="mimexpg6.xml"/>
			<imgfile file="mimexpg7.xml"/>   -->
		</express-g>
	</mim>
 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>
 
<usage_guide>

	   <p>A requirement is an imperative statement of reproducible observable 
	   characteristics that a system shall exhibit. Requirements serve as the basis 
	   for agreement between acquirer and supplier both legally and technically. They 
	   are the basis for reviews. Reviews examine technical progress against the 
	   requirements to be met. Review examination of expenditures 
	   versus budget and progress versus schedule is meaningless unless technical 
	   progress is meeting requirements.</p>
	   
	   <p> Requirements are the basis of both validation 
	   and verification. When systems are modeled, the requirements serve as a "data 
	   dictionary" for the meaning of many entities in the models. For example, 
	   interface requirements are allocated to interface entities in the models. Such 
	   capability is essential for the success of large projects with many cooperating 
	   project organizations, hundreds of engineers and a large supply chain. </p>
	   
	   <p>Requirements are derived from other requirements and traceability among them is essential to 
	   analyze the impact of changes to requirements or to the system. They may need to 
	   be collected together in particular groups to support particular engineering tasks. 
	   Requirements are created from information about the market that the system is to 
	   serve, frequently from marketing and sales information. This information is 
	   characterized as "stakeholder needs" in much of the systems engineering literature. 
	   Measures of effectiveness (MOE), a special subclass of requirements, are those that are 
	   so important that the system will succeed or fail based on them. These MOE’s are 
	   used as or optimization criteria in deciding among design alternatives.</p>


	<p>Figure <module_ref linkend="requirement_management:f_usage_guide:figure:Project_concepts">F.1</module_ref>
	below entitled <b>Project Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for requirement management representation.</p> 
	
	<p>The following color code is used in all concept maps shown in this Annex:</p>
	<ul>
	<li>Yellow implies all USE FROM's are shown for the module identified;</li> 
	<li>Green implies more USE FROM's exist in the module identified;</li>
	<li>Blue identifies the extensible select type defined by the module shown.</li></ul> 
	
   	<figure id="Project_concepts" number="F.1">
	<title> Project Concepts  </title>
	<img src="cm_prj.png"/>	
	</figure>
	
	<p>The capabilities associated with the requirement management modules provide for:</p>

   <ol>
	<li>representation of the data that identify a requirement and its versions;
	</li>
	<li>the assignment of a requirement to a product or other item;
	</li>
	<li>the identification of the source of a requirement;
	</li>
	<li>relationships between requirements;
	</li>
	<li>characterization of a version of a requirement, suitable for one or more application 
	domains and one or more life-cycle stages;
	</li>
	<li>identification of a universe of discourse suitable for the description of requirements;
	</li>
	<li>relationships between requirements that are expressed at the view definition level;
	</li>
	<li>assignment of date and time properties to requirements, requirement definitions, 
	requirement versions, relationships between requirement versions, sources, relationships 
	between requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of approval data to requirements, requirement definitions, requirement 
	versions, relationships between requirement versions, sources, relationships between 
	requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of identification and alias identification data to requirements, requirement 
	definitions, requirement versions, relationships between requirement versions, sources, 
	relationships between requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of person and organization data to requirements, requirement definitions, 
	requirement versions, relationships between requirement versions, sources, relationships 
	between requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of contract data to requirements, requirement definitions, requirement 
	versions, relationships between requirement versions, sources, relationships between 
	requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of security classification data to requirements, requirement definitions, 
	requirement versions, relationships between requirement versions, sources, relationships 
	between requirement collections, requirement tracing relationships, and  requirement assignments;
	</li>
	<li>assignment of language data to requirements, requirement definitions, requirement 
	versions, relationships between requirement versions, sources, relationships between 
	requirement collections, requirement tracing relationships, and  requirement assignments.</li>
   </ol>

   	<p>The following modules provide top level requirement management modelling support.</p>

	<ul>
        <li><module_ref linkend="classification_assignment:introduction">
          Classification_assignment_arm</module_ref>
        (ISO 10303-1114);</li>
	
	<li>
        <module_ref linkend="document_assignment:introduction">
          Document_assignment_arm</module_ref>
        (ISO 10303-1122);
	</li>
	
	<li>
        <module_ref linkend="document_properties:introduction">
          Document_properties_arm</module_ref>
        (ISO 10303-1126);
	</li>
	
	<li>
        <module_ref linkend="effectivity_application:introduction">
          Effectivity_application_arm</module_ref>
        (ISO 10303-1059);
	</li>
	
	<li>
        <module_ref linkend="information_rights:introduction">
          Information_rights_arm</module_ref>
        (ISO 10303-1241);
	</li>
	
	<li>
        <module_ref linkend="product_view_definition_properties:introduction">
          Product_view_definition_properties_arm</module_ref>
        (ISO 10303-1034);
	</li>
	
	<li>
        <module_ref linkend="requirement_assignment:introduction">
          Requirement_assignment_arm</module_ref>
        (ISO 10303-1233);
	</li>
	
	<li>
        <module_ref linkend="requirement_view_definition_relationship:introduction">
          Requirement_view_definition_relationship_arm</module_ref>
        (ISO 10303-1142)
	</li>
	</ul>

	<p>The series of Concept maps to follow provide the next lower level of 
	USE FROM abstraction detail for these primary modules.  These provide a view 
	into the complexity of module USE FROM and extensible select networking.
	</p>
	
	<p>The USE FROM connectivity between the modules associated with the "Authorization" concept of 
	<module_ref linkend="information_rights:introduction"/>
	is shown below in Figure <module_ref linkend="requirement_management:f_usage_guide:figure:Authorization_concepts">F.2</module_ref>.</p>
	
	
   	<figure id="Authorization_concepts" number="F.2">
	<title> Authorization Concepts  </title>
	<img src="cm_aut.png"/>	
	</figure>

	<p>The USE FROM connectivity between the modules associated with the "Representation" concept of 
	<module_ref linkend="document_properties:introduction"/> and <module_ref linkend="product_view_definition_properties:introduction"/>
	are shown below in Figure <module_ref linkend="requirement_management:f_usage_guide:figure:Representation_concepts">F.3</module_ref>.</p>
	
   	<figure id="Representation_concepts" number="F.3">
	<title> Representation Concepts  </title>
	<img src="cm_rep.png"/>	
	</figure>
	
	<p>The USE FROM connectivity between the modules associated with the "When" concept of 
	<module_ref linkend="effectivity_application:introduction"/>
	is shown below in Figure <module_ref linkend="requirement_management:f_usage_guide:figure:cm_whn">F.4</module_ref>.</p>
	
   	<figure id="When_concepts" number="F.4">
	<title> When Concepts  </title>
	<img src="cm_whn.png"/>	
	</figure>
	
	<p>The USE FROM connectivity between the modules associated with the "Where" concept of 
	<module_ref linkend="classification_assignment:introduction"/>
	is shown below in Figure <module_ref linkend="requirement_management:f_usage_guide:figure:cm_whr">F.5</module_ref>.</p>
	
   	<figure id="Where_concepts" number="F.5">
	<title> Where Concepts  </title>
	<img src="cm_whr.png"/>	
	</figure>
	
	<p>The USE FROM connectivity between the modules associated with the "Why" concept of 
	<module_ref linkend="document_assignment:introduction"/>
	is shown below in Figure <module_ref linkend="requirement_management:f_usage_guide:figure:cm_whr">F.6</module_ref>.</p>
	
   	<figure id="Why_concepts" number="F.6">
	<title> Why Concepts  </title>
	<img src="cm_why.png"/>	
	</figure>

	<p><b>Extensible type select lists - requirement management</b></p> 
	 
	<p>All extensible select types and entities used in the associated type extend lists 
	defined within this module are defined within the following modules:
	</p>
	
	<ul>
        <li><module_ref linkend="Alias_identification:introduction">
          Alias_identification_arm</module_ref>
        (ISO 10303-1025);</li>
	
        <li><module_ref linkend="Approval:introduction">
          Approval_arm</module_ref>
        (ISO 10303-1012);</li>
	
        <li><module_ref linkend="Certification:introduction">
          Certification_arm</module_ref>
        (ISO 10303-1044);</li>
	
        <li><module_ref linkend="Class:introduction">
          Class_arm</module_ref>
        (ISO 10303-1070);</li>
	
        <li><module_ref linkend="Classification_assignment:introduction">
          Classification_assignment_arm</module_ref>
        (ISO 10303-1114);</li>
	
	<li><module_ref linkend="Contract:introduction">
          Contract_arm</module_ref>
        (ISO 10303-1062);
	</li>

	<li><module_ref linkend="Date_time:introduction">
          Date_time_arm</module_ref>
        (ISO 10303-1010);
	</li>
	
	<li><module_ref linkend="Date_time_assignment:introduction">
          Date_time_assignment_arm</module_ref>
        (ISO 10303-1014);
	</li>
	
	<li><module_ref linkend="Document_and_version_identification:introduction">
          Document_and_version_identification_arm</module_ref>
        (ISO 10303-1121);
	</li>
	
	<li><module_ref linkend="Document_assignment:introduction">
          Document_assignment_arm</module_ref>
        (ISO 10303-1122);
	</li>
	
	<li><module_ref linkend="Effectivity:introduction">
          Effectivity_arm</module_ref>
        (ISO 10303-1057);
	</li>
	
	<li><module_ref linkend="Effectivity_application:introduction">
          Effectivity_application_arm</module_ref>
        (ISO 10303-1059);
	</li>
	
	<li><module_ref linkend="Event:introduction">
          Event_arm</module_ref>
        (ISO 10303-1064);
	</li>
	
	<li><module_ref linkend="Event_assignment:introduction">
          Event_assignment_arm</module_ref>
        (ISO 10303-1364);
	</li>
	
	<li><module_ref linkend="External_item_identification_assignment:introduction">
          External_item_identification_assignment_arm</module_ref>
        (ISO 10303-1128);
	</li>
	
	<li><module_ref linkend="File_identification:introduction">
          File_identification_arm</module_ref>
        (ISO 10303-1127);
	</li>
	
	<li><module_ref linkend="Foundation_representation:introduction">
          Foundation_representation_arm</module_ref>
        (ISO 10303-1006);
	</li>

	<li><module_ref linkend="Identification_assignment:introduction">
          Identification_assignment_arm</module_ref>
        (ISO 10303-1021);
	</li>
	
	<li><module_ref linkend="Independent_property:introduction">
          Independent_property_arm</module_ref>
        (ISO 10303-1036);
	</li>
	
	<li><module_ref linkend="Information_rights:introduction">
          Information_rights_arm</module_ref>
        (ISO 10303-1241);
	</li>
	
	<li><module_ref linkend="Multi_linguism:introduction">
          Multi_linguism_arm</module_ref>
        (ISO 10303-1105);
	</li>
	
	<li><module_ref linkend="Person_organization:introduction">
          Person_organization_arm</module_ref>
        (ISO 10303-1011);
	</li>
	
	<li><module_ref linkend="Person_organization_assignment:introduction">
          Person_organization_assignment_arm</module_ref>
        (ISO 10303-1013);
	</li>
	
	<li><module_ref linkend="Product_categorization:introduction">
          Product_categorization_arm</module_ref>
        (ISO 10303-1016);
	</li>
	
	<li><module_ref linkend="Product_identification:introduction">
          Product_identification_arm</module_ref>
        (ISO 10303-1017);
	</li>
	
	<li><module_ref linkend="Product_version:introduction">
          Product_version_arm</module_ref>
        (ISO 10303-1018);
	</li>
	
	<li><module_ref linkend="Product_version_relationship:introduction">
          Product_version_relationship_arm</module_ref>
        (ISO 10303-1020);
	</li>
	
	<li><module_ref linkend="Product_view_definition:introduction">
          Product_view_definition_arm</module_ref>
        (ISO 10303-1019);
	</li>
	
	<li><module_ref linkend="Product_view_definition_relationship:introduction">
          Product_view_definition_relationship_arm</module_ref>
        (ISO 10303-1041);
	</li>
	
	<li><module_ref linkend="Project:introduction">
          Project_arm</module_ref>
        (ISO 10303-1061);
	</li>
	
	<li><module_ref linkend="Property_assignment:introduction">
          Property_assignment_arm</module_ref>
        (ISO 10303-1030);
	</li>
	
	<li><module_ref linkend="Requirement_assignment:introduction">
          Requirement_assignment_arm</module_ref>
        (ISO 10303-1233);
	</li>
	
	<li><module_ref linkend="Requirement_identification_and_version:introduction">
          Requirement_identification_and_version_arm</module_ref>
        (ISO 10303-1140);
	</li>
	
	<li><module_ref linkend="Requirement_view_definition:introduction">
          Requirement_view_definition_arm</module_ref>
        (ISO 10303-1141);
	</li>
	
	<li><module_ref linkend="Requirement_view_definition_relationship:introduction">
          Requirement_view_definition_relationship_arm</module_ref>
        (ISO 10303-1142);
	</li>
	
	<li><module_ref linkend="Security_classification:introduction">
          Security_classification_arm</module_ref>
        (ISO 10303-1015);
	</li>
	
	<li><module_ref linkend="Time_interval:introduction">
          Time_interval_arm</module_ref>
        (ISO 10303-1065);
	</li>
	
	<li><module_ref linkend="Value_with_unit:introduction">
          Value_with_unit_arm</module_ref>
        (ISO 10303-1054).
	</li>
	</ul>

	 <p>From the perspective of information cross coupling; the type extend lists 
	 identified within this module specify how all requirement management information modelling 
	 concepts defined within the schemas of the requirement management domain are coupled together 
	 via type extends within the requirement management domain.</p>
	 
	 <note>A large repository of information relevant to users and implementers of the STEP capabilities used 
	 in common by Ap239 and 70% of AP233 is at <a href="http://docs.oasis-open.org/plcs/dexlib/oasis_cover.htm"/>.</note>	 
	
</usage_guide>

</module>
