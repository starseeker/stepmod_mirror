<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/express.xsl"
?> <!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express language_version="2" rcs.date="$Date: $" rcs.revision="$Revision: $">
<application name="GraphicalEXPRESS" owner="Eurostep" url="www.eurostep.com" version="1.3" source="requirement_view_definition_relationship.vsd" />
<schema name="Requirement_view_definition_relationship_arm">
<interface kind="use" schema="Product_view_definition_relationship_arm">
</interface>
<interface kind="use" schema="Requirement_view_definition_arm">
</interface>
<entity name="Requirement_collection_relationship" supertypes="View_definition_relationship">
<description>
        The Requirement_collection_relationship is used to relate a parent (collection) requirement to its member requirements. This provides a method for collecting together a set of requirements and treating them as a single requirement, whilst still being able to refer to the individual requirements. Note that the inherited "relating_view" and "related_view" attributes have been renamed for purposes of clarity.
      </description>
<explicit name="collection">
<description>
          The collection atribute points to the view definition of the requirement which collects together the member requirements
        </description>
<typename name="Requirement_view_definition" />
<redeclaration entity-ref="View_definition_relationship" old_name="relating_view" />
</explicit>
<explicit name="member">
<description>
          The member attribute points to the view definition of a requirement which constitutes a part of the collection.
        </description>
<typename name="Requirement_view_definition" />
<redeclaration entity-ref="View_definition_relationship" old_name="related_view" />
</explicit>
<graphic.element page="3" xcoord="85" ycoord="574" />
</entity>
<entity name="Tracing_relationship" supertypes="View_definition_relationship">
<description>
        The Tracing_relationship shows tracing from (traces_from) one requirement to another (traces_to). For example a requirement on the performance of a catalytic converter in a car may be traced from a more general emissions requirement. A requirement may trace to many other requirements and vice versa - this is achieved by creating multiple instances of the tracing relationship entity. Note that the inherited "view_1" and "view_2" attributes have been renamed for purposes of clarity . Properties may be attached to tracing relationships - this is intended to handle "user defined" attributes which are common on tracing relationships in requirements tools.
      </description>
<explicit name="traces_from">
<description>
          The traces_from attribute points to the view definition of the requirement which traces to another requirement.
        </description>
<typename name="Requirement_view_definition" />
<redeclaration entity-ref="View_definition_relationship" old_name="relating_view" />
</explicit>
<explicit name="traces_to">
<description>
          The traces_to attribute points to the view definition of the requirement which traces from another requirement.
        </description>
<typename name="Requirement_view_definition" />
<redeclaration entity-ref="View_definition_relationship" old_name="related_view" />
</explicit>
<graphic.element page="3" xcoord="510" ycoord="574" />
</entity>
<graphic.element page="1" xcoord="297" ycoord="772" />
</schema>
</express>
