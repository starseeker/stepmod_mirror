<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd" >
<ext_descriptions module_directory="scan_data_3d_shape" schema_file="arm.xml" 
rcs.date="$Date: 2016/06/21 09:12:11 $" rcs.revision="$Revision: 1.5 $">


  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Scan_data_3d_shape_arm 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
   <ext_description linkend="Scan_data_3d_shape_arm"/>

 <!--	Scan_data_3d_shape_arm types begin here -->
<!-- +++++++++++ point_cloud_set_or_superset +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.point_cloud_set_or_superset">
<p>	The <b>point_cloud_set_or_superset</b>  select type collects together for reference when constructing more
  complex models,  sets and supersets of point clouds. </p>
</ext_description>


<!-- Entity definitions -->

<!-- +++++++++++ Scanned_data_item +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanned_data_item">
	<p>A <b>Scanned_data_item</b> is a type of
	<express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Detailed_geometric_model_element"/> that represents an element of geometric data produced by a scanner. A <b>Scanned_data_item</b> is required to be used in a <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scan_data_shape_representation"/>.  </p>
</ext_description>	

<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanned_data_item.wr:WR1">
	 Each <b>Scanned_data_item</b>,shall be used in a <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scan_data_shape_representation"/>.
</ext_description>


<!-- +++++++++++ Point_cloud_dataset +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset">
	<p>A <b>Point_cloud_dataset</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/> and represents the geometry of a cloud of points produced by a scanner. </p>
<note number="1"> The <b>Point_cloud_dataset</b> has subtypes with additional attributes to permit the creation of instances of a <b>Point_cloud_dataset</b> with normals, with colours, or with intensities.</note>
<example>The and/or relationship between these subtypes enables, for example, the creation as a complex instance, of a <b>Point_cloud_dataset</b> with normals and colours attached to each point.</example>
</ext_description>	
<!-- point_coordinates -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset.point_coordinates">
<p> the list of real triples defining the coordinates of the points. </p>
<note number="2"> These real triples have the semantics of <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.length_measure"/>s, but are not formally defined as such. 
	  The units for these coordinates are defined since a <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/> is required to be used in a 
	  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scan_data_shape_representation"/> having as context a  
	  <express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_coordinate_space"/>.
 </note>
</ext_description>
 

<!-- +++++++++++ Point_cloud_dataset_with_normals +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_normals">
	A <b>Point_cloud_dataset_with_normals</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> which has a normal defined at each point of the dataset.
 </ext_description>	

<!-- normals -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_normals.normals">
a list of real triples defining the direction ratios of the normals at each point of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>.
</ext_description>


<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_normals.wr:WR1">
	The size of the <b>normals</b> list shall be the same as the size of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset.point_coordinates"/> list.
</ext_description>

<!-- +++++++++++ Point_cloud_dataset_with_colours +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_colours">
	A <b>Point_cloud_dataset_with_colours</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>,  which has a colour defined at each point of the dataset.
 </ext_description>	

<!-- colour_inices -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_colours.colour_indices">
a list of integer triples defining the RGB integer values of the colours at each point of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>.
</ext_description>


<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_colours.wr:WR1">
	The size of the <b>colour_indices</b> list shall be the same as the size of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset.point_coordinates"/> list.
</ext_description>


<!-- +++++++++++ Point_cloud_dataset_with_intensities +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_intensities">
	A <b>Point_cloud_dataset_with_intensities</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> which has an intensity defined at each point of the dataset.
 </ext_description>	

<!-- normals -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_intensities.intensities">
a list of real numbers defining the intensity value at each point of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>.
</ext_description>


<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_dataset_with_intensities.wr:WR1">
	The size of the <b>intensities</b> list shall be the same as the size of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset.point_coordinates"/> list.
</ext_description>


<!-- +++++++++++ Point_cloud_superdataset +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_superdataset">
	A <b>Point_cloud_superdataset</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/> which contains a list of <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>s. Each of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>s, except, possibly, the last is required to contain the same number of points. 
 </ext_description>	


<!-- pts_per_sublist -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_superdataset.pts_per_sublist">
the number of points in each listed <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>, except for the last.
</ext_description>

<!-- sublists -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_superdataset.sublists">
a list of two or more  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>s.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Point_cloud_superdataset.wr:WR1">
	The number of points in each  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> in <b>sublists</b>, except for the last shall be <b>pts_per_sublist</b> the last element of the <b>sublists</b> shall not contain more than this number of points. These conditions are verified by the   <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.consistent_sizes_point_clouds"/> function.
</ext_description>

<!-- +++++++++++ Triangulated_point_cloud_dataset +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset">
	A <b>Triangulated_point_cloud_dataset</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/> in which the points of the dataset are arranged into triangles.
 </ext_description>	

<!-- points -->
<ext_description linkend="Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points">
the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> or <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_superdataset"/> containing the coordinates of the points used to construct the triangles.
</ext_description>

<!-- triangles -->
<ext_description linkend="Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.triangles">
 <p> a list of integer triples defining the locations in <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points"/> of the coordinate values for the three vertices of each triangle. If <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points"/> is of type  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> the integer directly gives the position in <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset. point_coordinates"/> of the coordinates of the vertex point. If <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points"/> is of type   <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_superdataset"/> it is necessary to first determine, by dividing the integer value by <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_superdataset.pts_per_sublist"/>, the particular <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/> in which to find the coordinates position. The remainder from this division is then the required address.</p>
 <example number="1">In the case of a superdataset, if the integer value is 5927 and if the value of <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_superdataset.pts_per_sublist"/> is 2000, then the required point coordinates will be in position 1927 of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points"/> coordinates list of the 3rd. <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>. If the integer value is exactly 2000 then the required point coordinates are in the last position  in the first <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>. <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Triangulated_point_cloud_dataset.points"/> list. 
</example>
</ext_description>

<!-- +++++++++++ Scan_3d_model +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_3d_model">
	A <b>Scan_3d_model</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/> which represents the data produced by scanning a 3D shape. It contains scanner properties and a set of <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/>s. Each of the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/>s includes point cloud data.
 </ext_description>	

<!-- scanner_info -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_3d_model.scanner_info">
a set of one or more <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanner_property"/>.
</ext_description>

<!-- scanned_points -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_3d_model.scanned_points">
a set of one or more <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/>s which contains the point cloud data produced by the scanning operation.
</ext_description>
<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_3d_model.wr:WR1">
	The <b>scanned_points</b> set shall not contain a  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scan_3d_model"/>.
</ext_description>


<!-- +++++++++++ Scanner_property -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_property">
	A <b>Scanner_property</b> is a type of
	<express_ref linkend="Foundation_representation:arm:Foundation_representation_arm.Representation_item"/> which represents one or more properties of a scanner. 
 </ext_description>	

<!-- +++++++++++ Scanner_basic_properties +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_basic_properties">
	<p> A <b>Scanner_basic_properties</b> is a type of
	<express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanner_property"/> which represents the basic properties of a scanner. </p>
<note number="1"> More advanced properties of a scanner may be represented by further subtypes of <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanner_property"/>
</note>
 </ext_description>	

<!-- scanner_identification -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_basic_properties.scanner_identification">
a label which identifies the scanner.
</ext_description>

<!-- scanner_location -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_basic_properties.scanner_location">
a <express_ref linkend="geometry_schema:ir_express:geometry_schema.axis2_placement_3d"/> which is the location and orientation of the scanner.
</ext_description>

<!-- scanner_uncertainty -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_basic_properties.scanner_uncertainty">
an optional  positive <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.length_measure"/> which gives the possible error in the coordinate values measured by the scanner.
</ext_description>

<!-- WR1 -->
<ext_description linkend="Scan_data_3d_shape_arm.Scanner_basic_properties.wr:WR1">
	The <b>scanner_uncertainty</b>, if present, shall be positive. 
</ext_description>


<!-- +++++++++++ Scan_data_shape_representation +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_data_shape_representation">
	<p>A <b>Scan_data_shape_representation</b> is a type of
	 <express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/>
	in which the geometry of a 3D shape is approximately represented by a set of point cloud data produced by a scanner.    
  </p>
</ext_description>	

<!-- items -->
<ext_description linkend="Scan_data_3d_shape_arm.Scan_data_shape_representation.items">
	 the <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Scanned_data_item"/>s defining the shape.
</ext_description>





<!-- +++++++++++ consistent_sizes_point_clouds +++++++++++ -->
<ext_description linkend="Scan_data_3d_shape_arm.consistent_sizes_point_clouds">
	 The <b>consistent_sizes_point_clouds</b> function checks the sizes of the  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset.point_coordinates"/> lists of the input  <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>s and returns true if all but the last are of size <b>max</b> and the last has a size which is not greater than <b>max</b>,
</ext_description>

<!-- max -->
<ext_description linkend="Scan_data_3d_shape_arm.consistent_sizes_point_clouds.max">
	(input) the maxinum permitted size of any of the point coordinate lists;
</ext_description>

<!-- point_lists -->
<ext_description linkend="Scan_data_3d_shape_arm.consistent_sizes_point_clouds.point_lists">
	 (input) a list of <express_ref linkend="scan_data_3d_shape:arm:Scan_data_3d_shape_arm.Point_cloud_dataset"/>s  whose sizes are to be checked.
</ext_description>



 </ext_descriptions>
