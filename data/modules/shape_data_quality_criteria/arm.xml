<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date: 2012/09/10 13:45:39 $" rcs.revision="$Revision: 1.7 $" reference="ISO/TS 10303-11523">
   <application name="JSDAI" owner="LKSoft" source="shape_data_quality_criteria_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Shape_data_quality_criteria_arm">
      <interface kind="use" schema="Product_data_quality_criteria_arm"/>
      <interface kind="use" schema="Qualified_measure_arm"/>
      <interface kind="use" schema="Shape_data_quality_inspection_result_arm"/>
      <interface kind="reference" schema="Support_resource_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <type name="shape_data_quality_assessment_specification_select">
         <select selectitems="Shape_data_quality_assessment_by_numerical_test Shape_data_quality_assessment_by_logical_test"/>
      </type>
      <type name="shape_data_quality_value_limit_type_select">
         <select selectitems="Shape_data_quality_value_range Shape_data_quality_value_limit"/>
      </type>
      <entity name="Abrupt_change_of_surface_normal" supertypes="Geometry_with_local_irregularity">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="small_vector_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="test_point_distance_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',&#10;             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Curve_with_excessive_segments" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_OR_COMPOSITE_CURVE_SELECT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Curve_with_small_curvature_radius" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Disconnected_face_set" supertypes="Erroneous_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity abstract.supertype="YES" name="Discontinuous_geometry" super.expression="ONEOF (G1_discontinuous_curve, G2_discontinuous_curve, G1_discontinuous_surface, G2_discontinuous_surface)" supertypes="Inapt_geometry"/>
      <entity name="Edge_with_excessive_segments" supertypes="Overcomplex_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Entirely_narrow_face" supertypes="Topology_related_to_nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="width_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Entirely_narrow_solid" supertypes="Inapt_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="width_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Entirely_narrow_surface" supertypes="Nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="width_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.BOUNDED_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Erroneous_b_spline_curve_definition" supertypes="Erroneous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Erroneous_b_spline_surface_definition" supertypes="Erroneous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity abstract.supertype="YES" name="Erroneous_data" super.expression="ONEOF (Erroneous_topology, Erroneous_geometry, Erroneous_topology_and_geometry_relationship, Erroneous_manifold_solid_brep)" supertypes="Shape_data_quality_criterion"/>
      <entity abstract.supertype="YES" name="Erroneous_geometry" super.expression="ONEOF (Inconsistent_curve_transition_code, Erroneous_b_spline_curve_definition, Inconsistent_surface_transition_code, Erroneous_b_spline_surface_definition)" supertypes="Erroneous_data"/>
      <entity abstract.supertype="YES" name="Erroneous_manifold_solid_brep" super.expression="ONEOF (Wrongly_oriented_void, Wrongly_placed_void, Intersecting_shells_in_solid, Solid_with_wrong_number_of_voids)" supertypes="Erroneous_data"/>
      <entity abstract.supertype="YES" name="Erroneous_topology" super.expression="ONEOF (Open_edge_loop, Open_closed_shell, Inconsistent_adjacent_face_normals, Disconnected_face_set)" supertypes="Erroneous_data"/>
      <entity abstract.supertype="YES" name="Erroneous_topology_and_geometry_relationship" super.expression="ONEOF (Inconsistent_edge_and_curve_directions, Inconsistent_face_and_surface_normals, Inconsistent_face_and_closed_shell_normals, Intersecting_loops_in_face, Wrongly_placed_loop)" supertypes="Erroneous_data"/>
      <entity name="Excessively_high_degree_curve" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Excessively_high_degree_surface" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Extreme_patch_width_variation" supertypes="Geometry_with_local_irregularity">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.RATIO_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_KNOT_LOCATOR'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Face_surface_with_excessive_patches_in_one_direction" supertypes="Overcomplex_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Free_edge" supertypes="Inapt_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
         <where expression="SIZEOF(QUERY(sdqr &lt;* bag_to_set(USEDIN(SELF,&#10;             'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'DATA_QUALITY_INSPECTION_RESULT.'+&#10;             'CRITERION_INSPECTED'))|&#10;             ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'&#10;              IN TYPEOF(sdqr)) AND&#10;              (SIZEOF(QUERY(sdqiir &lt;* bag_to_set(USEDIN(sdqr,&#10;                 'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;                 'DATA_QUALITY_INSPECTION_REPORT.'+&#10;                 'INSPECTION_RESULT'))|&#10;                 ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'&#10;                   IN TYPEOF(sdqiir)) AND&#10;                 (SIZEOF(QUERY(sdqiri &lt;* sdqiir.inspected_instances|&#10;                          ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.CLOSED_SHELL'&#10;                   IN TYPEOF(sdqiri.inspected_elements[1])))) = 0)&#10;               )) = 0)&#10;            )) = 0" label="WR5"/>
      </entity>
      <entity name="G1_discontinuity_between_adjacent_faces" supertypes="Non_smooth_geometry_transition_across_edge">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="G1_discontinuous_curve" supertypes="Discontinuous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_CURVE_KNOT_LOCATOR'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="G1_discontinuous_surface" supertypes="Discontinuous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_KNOT_LOCATOR'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="G2_discontinuity_between_adjacent_faces" supertypes="Non_smooth_geometry_transition_across_edge">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="assessment_specification_2">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
         </explicit>
         <explicit name="flat_curvature_radius_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF.assessment_specification_2.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'&#10;            IN value_limit_type(SELF.assessment_specification_2.threshold))" label="WR2"/>
         <where expression="validate_measured_data_type(SELF,&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'PLANE_ANGLE_AND_RATIO_PAIR')" label="WR3"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR4"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR5"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.RATIO_MEASURE'])" label="WR6"/>
      </entity>
      <entity name="G2_discontinuous_curve" supertypes="Discontinuous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="assessment_specification_2">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
         </explicit>
         <explicit name="flat_curvature_radius_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF.assessment_specification_2.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'&#10;            IN value_limit_type(SELF.assessment_specification_2.threshold))" label="WR2"/>
         <where expression="validate_measured_data_type(SELF,&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'PLANE_ANGLE_AND_RATIO_PAIR')" label="WR3"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR4"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_CURVE_KNOT_LOCATOR'])" label="WR5"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR6"/>
      </entity>
      <entity name="G2_discontinuous_surface" supertypes="Discontinuous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="assessment_specification_2">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
         </explicit>
         <explicit name="flat_curvature_radius_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF.assessment_specification_2.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'&#10;            IN value_limit_type(SELF.assessment_specification_2.threshold))" label="WR2"/>
         <where expression="validate_measured_data_type(SELF,&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'PLANE_ANGLE_AND_RATIO_PAIR')" label="WR3"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR4"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_KNOT_LOCATOR'])" label="WR5"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.RATIO_MEASURE'])" label="WR6"/>
      </entity>
      <entity name="Gap_between_adjacent_edges_in_loop" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Gap_between_edge_and_base_surface" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Gap_between_faces_related_to_an_edge" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Gap_between_pcurves_related_to_an_edge" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',&#10;             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Gap_between_vertex_and_base_surface" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Gap_between_vertex_and_edge" supertypes="Geometric_gap_in_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Geometric_gap_in_topology" super.expression="ONEOF (Gap_between_adjacent_edges_in_loop, Gap_between_vertex_and_base_surface, Gap_between_vertex_and_edge, Gap_between_edge_and_base_surface, Gap_between_pcurves_related_to_an_edge, Gap_between_faces_related_to_an_edge)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity abstract.supertype="YES" name="Geometry_with_local_irregularity" super.expression="ONEOF (Extreme_patch_width_variation, Zero_surface_normal, Abrupt_change_of_surface_normal)" supertypes="Inapt_geometry"/>
      <entity abstract.supertype="YES" name="Geometry_with_local_near_degeneracy" super.expression="ONEOF (Curve_with_small_curvature_radius, Short_length_curve_segment, Surface_with_small_curvature_radius, Small_area_surface_patch, Narrow_surface_patch, Indistinct_surface_knots, Indistinct_curve_knots, Nearly_degenerate_surface_boundary, Nearly_degenerate_surface_patch)" supertypes="Inapt_geometry"/>
      <entity name="High_degree_axi_symmetric_surface" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="approximation_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="High_degree_conic" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="approximation_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="High_degree_linear_curve" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="approximation_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="High_degree_planar_surface" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="approximation_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Inapt_data" super.expression="ONEOF (Inapt_topology, Inapt_geometry, Inapt_topology_and_geometry_relationship, Inapt_manifold_solid_brep)" supertypes="Shape_data_quality_criterion"/>
      <entity abstract.supertype="YES" name="Inapt_geometry" super.expression="ONEOF (Nearly_degenerate_geometry, Discontinuous_geometry, Self_intersecting_geometry, Geometry_with_local_near_degeneracy, Overlapping_geometry, Multiply_defined_geometry, Geometry_with_local_irregularity, Overcomplex_geometry)" supertypes="Inapt_data"/>
      <entity abstract.supertype="YES" name="Inapt_manifold_solid_brep" super.expression="ONEOF (Partly_overlapping_solids, Small_volume_solid, Multiply_defined_solids, Entirely_narrow_solid, Solid_with_excessive_number_of_voids)" supertypes="Inapt_data"/>
      <entity abstract.supertype="YES" name="Inapt_topology" super.expression="ONEOF (Free_edge, Non_manifold_at_edge, Non_manifold_at_vertex, Over_used_vertex)" supertypes="Inapt_data"/>
      <entity abstract.supertype="YES" name="Inapt_topology_and_geometry_relationship" super.expression="ONEOF (Topology_related_to_nearly_degenerate_geometry, Geometric_gap_in_topology, Non_smooth_geometry_transition_across_edge, Topology_related_to_self_intersecting_geometry, Steep_geometry_transition_across_edge, Topology_related_to_overlapping_geometry, Topology_related_to_multiply_defined_geometry, Overcomplex_topology_and_geometry_relationship)" supertypes="Inapt_data"/>
      <entity name="Inconsistent_adjacent_face_normals" supertypes="Erroneous_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'CLOSED_OR_OPEN_SHELL_SELECT'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Inconsistent_curve_transition_code" supertypes="Erroneous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="angle_tolerance">
            <typename name="plane_angle_measure"/>
         </explicit>
         <explicit name="curvature_ratio_tolerance">
            <typename name="ratio_measure"/>
         </explicit>
         <explicit name="distance_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="flat_curvature_radius_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_CURVE_ARM.COMPOSITE_CURVE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'COMPOSITE_CURVE_TRANSITION_LOCATOR'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Inconsistent_edge_and_curve_directions" supertypes="Erroneous_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="distance_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Inconsistent_face_and_closed_shell_normals" supertypes="Erroneous_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Inconsistent_face_and_surface_normals" supertypes="Erroneous_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Inconsistent_surface_transition_code" supertypes="Erroneous_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="angle_tolerance">
            <typename name="plane_angle_measure"/>
         </explicit>
         <explicit name="curvature_ratio_tolerance">
            <typename name="ratio_measure"/>
         </explicit>
         <explicit name="distance_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="flat_curvature_radius_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['COMPOSITE_SURFACE_ARM.RECTANGULAR_COMPOSITE_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'RECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Indistinct_curve_knots" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_CURVE_KNOT_LOCATOR'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Indistinct_surface_knots" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_KNOT_LOCATOR'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Intersecting_connected_face_sets" supertypes="Topology_related_to_self_intersecting_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET',&#10;             'ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Intersecting_loops_in_face" supertypes="Erroneous_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.FACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Intersecting_shells_in_solid" supertypes="Erroneous_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Multiply_defined_cartesian_points" supertypes="Multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.CARTESIAN_POINT','ELEMENTAL_GEOMETRIC_SHAPE_ARM.CARTESIAN_POINT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_curves" supertypes="Multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE','BASIC_GEOMETRY_ARM.CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_directions" supertypes="Multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.DIRECTION','ELEMENTAL_GEOMETRIC_SHAPE_ARM.DIRECTION'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_edges" supertypes="Topology_related_to_multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE',&#10;             'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_faces" supertypes="Topology_related_to_multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE',&#10;             'BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Multiply_defined_geometry" super.expression="ONEOF (Multiply_defined_curves, Multiply_defined_surfaces, Multiply_defined_cartesian_points, Multiply_defined_directions, Multiply_defined_placements)" supertypes="Inapt_geometry"/>
      <entity name="Multiply_defined_placements" supertypes="Multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="assessment_specification_2">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF.assessment_specification_2.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF.assessment_specification_2.threshold))" label="WR2"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;            'PLANE_ANGLE_AND_LENGTH_PAIR')" label="WR3"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.AXIS_PLACEMENT','ELEMENTAL_GEOMETRIC_SHAPE_ARM.AXIS_PLACEMENT'])" label="WR4"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR5"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR6"/>
         <where expression="SIZEOF(QUERY(sdqr &lt;* bag_to_set(USEDIN(SELF,&#10;             'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'DATA_QUALITY_INSPECTION_RESULT.'+&#10;             'CRITERION_INSPECTED'))|&#10;             ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'&#10;              IN TYPEOF(sdqr)) AND&#10;              (SIZEOF(QUERY(sdqiir &lt;* bag_to_set(USEDIN(sdqr,&#10;                 'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;                 'DATA_QUALITY_INSPECTION_REPORT.'+&#10;                 'INSPECTION_RESULT'))|&#10;                 ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'&#10;                   IN TYPEOF(sdqiir)) AND&#10;                 (SIZEOF(QUERY(sdqiri &lt;* sdqiir.inspected_instances|&#10;                          (TYPEOF(sdqiri.inspected_elements[1])&#10;                           &lt;&gt;TYPEOF(sdqiri.inspected_elements[2])))) = 0)&#10;               )) = 0)&#10;            )) = 0" label="WR7"/>
      </entity>
      <entity name="Multiply_defined_solids" supertypes="Inapt_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP',&#10;             'ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_surfaces" supertypes="Multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND&#10;            ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE','BASIC_GEOMETRY_ARM.SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Multiply_defined_vertices" supertypes="Topology_related_to_multiply_defined_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND&#10;            ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',&#10;             'BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Narrow_surface_patch" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="width_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_PATCH'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity abstract.supertype="YES" name="Nearly_degenerate_geometry" super.expression="ONEOF (Small_area_surface, Short_length_curve, Entirely_narrow_surface)" supertypes="Inapt_geometry"/>
      <entity name="Nearly_degenerate_surface_boundary" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_VALUE_RANGE'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'BOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Nearly_degenerate_surface_patch" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_VALUE_RANGE'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_PATCH'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Non_manifold_at_edge" supertypes="Inapt_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Non_manifold_at_vertex" supertypes="Inapt_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity abstract.supertype="YES" name="Non_smooth_geometry_transition_across_edge" super.expression="ONEOF (G1_discontinuity_between_adjacent_faces, G2_discontinuity_between_adjacent_faces)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity name="Open_closed_shell" supertypes="Erroneous_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.CLOSED_SHELL'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Open_edge_loop" supertypes="Erroneous_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Over_used_vertex" supertypes="Inapt_topology">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Overcomplex_geometry" super.expression="ONEOF (Excessively_high_degree_curve, Excessively_high_degree_surface, Surface_with_excessive_patches_in_one_direction, Curve_with_excessive_segments, High_degree_linear_curve, High_degree_planar_surface, High_degree_conic, High_degree_axi_symmetric_surface)" supertypes="Inapt_geometry"/>
      <entity abstract.supertype="YES" name="Overcomplex_topology_and_geometry_relationship" super.expression="ONEOF (Unused_patches, Edge_with_excessive_segments, Face_surface_with_excessive_patches_in_one_direction)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity abstract.supertype="YES" name="Overlapping_geometry" super.expression="ONEOF (Partly_overlapping_curves, Partly_overlapping_surfaces)" supertypes="Inapt_geometry"/>
      <entity name="Partly_overlapping_curves" supertypes="Overlapping_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE','BASIC_GEOMETRY_ARM.CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_CURVE_ARM.TRIMMED_CURVE','BASIC_CURVE_ARM.TRIMMED_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Partly_overlapping_edges" supertypes="Topology_related_to_overlapping_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE',&#10;             'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.EDGE','ELEMENTAL_TOPOLOGY_ARM.EDGE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Partly_overlapping_faces" supertypes="Topology_related_to_overlapping_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE',&#10;             'BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.FACE','ELEMENTAL_TOPOLOGY_ARM.FACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Partly_overlapping_solids" supertypes="Inapt_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;             AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP',&#10;             'ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.FACE','ELEMENTAL_TOPOLOGY_ARM.FACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Partly_overlapping_surfaces" supertypes="Overlapping_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE','BASIC_GEOMETRY_ARM.SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['GEOMETRICALLY_BOUNDED_SURFACE_ARM.CURVE_BOUNDED_SURFACE',&#10;             'GEOMETRICALLY_BOUNDED_SURFACE_ARM.CURVE_BOUNDED_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Self_intersecting_curve" supertypes="Self_intersecting_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="arc_length_separation_factor">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_CURVE','BASIC_GEOMETRY_ARM.POINT_ON_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity abstract.supertype="YES" name="Self_intersecting_geometry" super.expression="ONEOF (Self_intersecting_curve, Self_intersecting_surface)" supertypes="Inapt_geometry"/>
      <entity name="Self_intersecting_loop" supertypes="Topology_related_to_self_intersecting_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="arc_length_distance_factor">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Self_intersecting_shell" supertypes="Topology_related_to_self_intersecting_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="geodesic_separation_factor">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE',&#10;             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Self_intersecting_surface" supertypes="Self_intersecting_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <explicit name="geodesic_separation_factor">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="interference_tolerance">
            <typename name="length_measure"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',&#10;             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Shape_criteria_representation_with_accuracy" supertypes="Shape_data_quality_criteria_representation">
         <explicit name="required_general_accuracy">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Shape_measurement_accuracy"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_assessment_by_logical_test" supertypes="Data_quality_assessment_specification"/>
      <entity name="Shape_data_quality_assessment_by_numerical_test" supertypes="Data_quality_assessment_specification">
         <explicit name="threshold">
            <typename name="shape_data_quality_value_limit_type_select"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_criteria_representation" supertypes="Data_quality_criteria_representation">
         <where expression="SIZEOF( QUERY( q &lt;* SELF\representation.items|&#10;                               'SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;                               'SHAPE_DATA_QUALITY_CRITERION' IN TYPEOF(q))) &gt; 0" label="WR1"/>
         <where expression="'FOUNDATION_REPRESENTATION_ARM.NUMERICAL_REPRESENTATION_CONTEXT' &#10;            IN TYPEOF(context_of_items)" label="WR2"/>
      </entity>
      <entity name="Shape_data_quality_criterion" super.expression="ONEOF (Erroneous_data, Inapt_data)" supertypes="Data_quality_criterion Data_quality_measurement_requirement">
         <explicit name="assessment_specification">
            <typename name="shape_data_quality_assessment_specification_select"/>
         </explicit>
         <where expression="SIZEOF(USEDIN(SELF,&#10;            'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+&#10;            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+&#10;            'CRITERION'&#10;            )) = 0" label="WR1"/>
         <where expression="SIZEOF(USEDIN(SELF,&#10;                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+&#10;                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+&#10;                    'RELATING_REPRESENTATION_ITEM')) = 0" label="WR2"/>
      </entity>
      <entity name="Shape_data_quality_criterion_and_accuracy_association">
         <explicit name="required_specific_accuracy">
            <typename name="Shape_measurement_accuracy"/>
         </explicit>
         <explicit name="shape_data_quality_criterion">
            <typename name="Shape_data_quality_criterion"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_lower_value_limit" supertypes="Shape_data_quality_value_limit">
         <where expression="SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'minimum'" label="WR1"/>
      </entity>
      <entity name="Shape_data_quality_upper_value_limit" supertypes="Shape_data_quality_value_limit">
         <where expression="SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'maximum'" label="WR1"/>
      </entity>
      <entity abstract.supertype="YES" name="Shape_data_quality_value_limit" super.expression="ONEOF (Shape_data_quality_upper_value_limit, Shape_data_quality_lower_value_limit)" supertypes="Numerical_item_with_unit Qualified_representation_item">
         <explicit name="qualifiers">
            <aggregate lower="1" type="SET" upper="1"/>
            <typename name="Pre_defined_type_qualifier"/>
            <redeclaration entity-ref="Qualified_representation_item"/>
         </explicit>
         <where expression="SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum']" label="WR1"/>
      </entity>
      <entity name="Shape_data_quality_value_range" supertypes="Measure_item">
         <explicit name="lower_limit">
            <typename name="Numerical_item_with_unit"/>
         </explicit>
         <explicit name="upper_limit">
            <typename name="Numerical_item_with_unit"/>
         </explicit>
      </entity>
      <entity name="Shape_measurement_accuracy">
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="range">
            <typename name="shape_data_quality_value_limit_type_select"/>
         </explicit>
      </entity>
      <entity name="Shape_summary_request_with_representative_value" supertypes="Summary_report_request"/>
      <entity name="Short_length_curve" supertypes="Nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Short_length_curve_segment" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_CURVE_SEGMENT'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Short_length_edge" supertypes="Topology_related_to_nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;             AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Small_area_face" supertypes="Topology_related_to_nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Small_area_surface" supertypes="Nearly_degenerate_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Small_area_surface_patch" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.AREA_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_PATCH'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Small_volume_solid" supertypes="Inapt_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.VOLUME_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.VOLUME_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.VOLUME_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Solid_with_excessive_number_of_voids" supertypes="Inapt_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Solid_with_wrong_number_of_voids" supertypes="Erroneous_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Steep_angle_between_adjacent_edges" supertypes="Steep_geometry_transition_across_edge">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'])" label="WR5"/>
      </entity>
      <entity name="Steep_angle_between_adjacent_faces" supertypes="Steep_geometry_transition_across_edge">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'POINT_ON_EDGE_CURVE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Steep_geometry_transition_across_edge" super.expression="ONEOF (Steep_angle_between_adjacent_edges, Steep_angle_between_adjacent_faces)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity name="Surface_with_excessive_patches_in_one_direction" supertypes="Overcomplex_geometry">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            [])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Surface_with_small_curvature_radius" supertypes="Geometry_with_local_near_degeneracy">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'&#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR5"/>
      </entity>
      <entity abstract.supertype="YES" name="Topology_related_to_multiply_defined_geometry" super.expression="ONEOF (Multiply_defined_faces, Multiply_defined_vertices, Multiply_defined_edges)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity abstract.supertype="YES" name="Topology_related_to_nearly_degenerate_geometry" super.expression="ONEOF (Short_length_edge, Small_area_face, Entirely_narrow_face)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity abstract.supertype="YES" name="Topology_related_to_overlapping_geometry" super.expression="ONEOF (Partly_overlapping_faces, Partly_overlapping_edges)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity abstract.supertype="YES" name="Topology_related_to_self_intersecting_geometry" super.expression="ONEOF (Self_intersecting_loop, Self_intersecting_shell, Intersecting_connected_face_sets)" supertypes="Inapt_topology_and_geometry_relationship"/>
      <entity name="Unused_patches" supertypes="Overcomplex_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;             AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;             'B_SPLINE_SURFACE_STRIP'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR5"/>
      </entity>
      <entity name="Wrongly_oriented_void" supertypes="Erroneous_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Wrongly_placed_loop" supertypes="Erroneous_topology_and_geometry_relationship">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.FACE'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ELEMENTAL_TOPOLOGY_ARM.FACE_BOUND'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'])" label="WR4"/>
      </entity>
      <entity name="Wrongly_placed_void" supertypes="Erroneous_manifold_solid_brep">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_logical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="validate_measured_data_type(SELF,&#10;            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE')" label="WR1"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP'])" label="WR2"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL'])" label="WR3"/>
         <where expression="validate_accuracy_types(SELF,&#10;            [])" label="WR4"/>
      </entity>
      <entity name="Zero_surface_normal" supertypes="Geometry_with_local_irregularity">
         <explicit name="assessment_specification">
            <typename name="Shape_data_quality_assessment_by_numerical_test"/>
            <redeclaration entity-ref="Shape_data_quality_criterion"/>
         </explicit>
         <where expression="('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +&#10;            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' &#10;            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))&#10;            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'&#10;            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))" label="WR1"/>
         <where expression="validate_measured_data_type(SELF,&#10;            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE')" label="WR2"/>
         <where expression="validate_inspected_elements_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.SURFACE'])" label="WR3"/>
         <where expression="validate_locations_of_extreme_value_type(SELF,&#10;            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE'])" label="WR4"/>
         <where expression="validate_accuracy_types(SELF,&#10;            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'])" label="WR5"/>
      </entity>
      <function name="validate_accuracy_types">
         <parameter name="ei">
            <typename name="Shape_data_quality_criterion"/>
         </parameter>
         <parameter name="type_list">
            <aggregate lower="0" type="BAG" upper="?"/>
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
       sdqca: BAG OF
        SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION:=[];
       sma: BAG OF SHAPE_MEASUREMENT_ACCURACY:=[];
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       scraa: BAG OF
        SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION:=[];
       t_logic:BOOLEAN;
     END_LOCAL;
     -- STEP-1
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_data_criterion_and_accuracy_association 
     -- that refers to given shape_data_quality_criterion.
     sdqca := USEDIN(ei,
               'SHAPE_DATA_QUALITY_CRITERIA_ARM.'+
               'SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_CRITERION');
     IF(SIZEOF(sdqca) &lt;&gt; 0) THEN
       REPEAT i:= 1 TO SIZEOF(sdqca);
         sma := sma + sdqca[i].required_specific_accuracy;
       END_REPEAT;
  
       -- STEP-2
       -- check whether the collected types include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
       IF(SIZEOF(type_list) &lt; SIZEOF(sma)) THEN
         RETURN(FALSE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sma);
         t_logic := FALSE;
         REPEAT j:= 1 TO SIZEOF(type_list);
           IF(type_list[j] IN value_limit_type(sma[i].range)) THEN
             t_logic := TRUE;
             ESCAPE;
           END_IF;
         END_REPEAT;
         IF(NOT(t_logic)) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    END_IF;
  
     -- STEP-3
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_inspection_result_accuracy_association
     -- that refers to shape_data_quality_inspection_result
     -- for the given shape_data_quality_criterion.
     sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     REPEAT i:= 1 TO SIZEOF(sdqir);
       scraa := USEDIN(sdqir[i],
               'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
               'SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_RESULT');
       IF(SIZEOF(scraa) &lt;&gt; 0) THEN
         sma := [];
         REPEAT j:= 1 TO SIZEOF(scraa);
           sma := sma + scraa[j].applied_specific_accuracy;
         END_REPEAT;
  
         -- STEP-4
         -- check whether the collected types include all the type
         -- names in the type list given as an input argument of
         -- this function and they do not include any other type names.
         IF(SIZEOF(type_list) &lt; SIZEOF(sma)) THEN
           RETURN(FALSE);
         END_IF;
  
         REPEAT j:= 1 TO SIZEOF(sma);
           t_logic := FALSE;
           REPEAT k:= 1 TO SIZEOF(type_list);
             IF(type_list[k] IN value_limit_type(sma[j].range)) THEN
               t_logic := TRUE;
               ESCAPE;
             END_IF;
           END_REPEAT;
           IF(NOT(t_logic)) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_IF;
     END_REPEAT;
  
     RETURN(TRUE);</algorithm>
      </function>
      <function name="validate_inspected_elements_type">
         <parameter name="ei">
            <typename name="Shape_data_quality_criterion"/>
         </parameter>
         <parameter name="type_list">
            <aggregate lower="0" type="BAG" upper="?"/>
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdiri: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_instance_report_item
       -- instances associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report
  
       sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       IF(SIZEOF(sdir) = 0) THEN
         RETURN(TRUE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdiri := sdiri + QUERY(q &lt;* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
  
       -- STEP-2
       -- check whether the types of inspected_elements attribute
       -- of collected instances include all the type names 
       -- in the type list given as an input argument of this 
       -- function and they do not include any other type names. 
  
       -- If there is no instance_report_item, then return true.
       IF(SIZEOF(sdiri) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- When reports exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdiri);
         -- If size of inspected_elements is not equal to the size of
         -- type_list, then return false.
         IF(SIZEOF(sdiri[i].inspected_elements) &lt;&gt; 
            SIZEOF(type_list)) THEN
           RETURN(FALSE);
         END_IF;
         -- check all elements of type_lists 
         -- for each elements of inspected_elements.
         t_type_list := type_list;
         REPEAT j:= 1 TO SIZEOF(sdiri[i].inspected_elements);
           REPEAT k:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[k] IN
                TYPEOF(sdiri[i].inspected_elements[j])) THEN
              t_type_list := t_type_list - t_type_list[k];
              ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) &gt; 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
      RETURN(TRUE);</algorithm>
      </function>
      <function name="validate_locations_of_extreme_value_type">
         <parameter name="ei">
            <typename name="Shape_data_quality_criterion"/>
         </parameter>
         <parameter name="type_list">
            <aggregate lower="0" type="BAG" upper="?"/>
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdei: SET OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report.
  
       sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q &lt;* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- STEP-2
       -- check whether the types of locations_of_extreme_value attributes of
       -- all extreme_instances of collected instances include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
  
       -- If there is no instace report, then return true.
       IF(SIZEOF(sdei) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- If the type_list is empty and 
       -- instance_report_item_with_extreme_instances exists, then return false.
       IF((SIZEOF(type_list) = 0) AND (SIZEOF(sdei) &lt;&gt; 0)) THEN
         RETURN(FALSE);
       END_IF;
    
       -- When report_items exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           -- If size of locations_of_extreme_value is not equal to
           -- the size of type_list, then return false.
           IF(SIZEOF(sdei[i].extreme_instances[j].
                             locations_of_extreme_value) &lt;&gt;
              SIZEOF(type_list)) THEN
              RETURN(FALSE);
           END_IF;
           t_type_list := type_list;
           -- check all elements of type_lists 
           --  for each elements of locations_of_extreme_value.
           REPEAT k:= 1 TO SIZEOF(sdei[i].extreme_instances[j]
                                    .locations_of_extreme_value);
             REPEAT l:= 1 TO SIZEOF(t_type_list);
               IF(t_type_list[l] IN
                 TYPEOF(sdei[i].extreme_instances[j].
                         locations_of_extreme_value[k])) THEN
                 t_type_list := t_type_list - t_type_list[l];
                 ESCAPE;
               END_IF;
             END_REPEAT;
           END_REPEAT;
           IF(SIZEOF(t_type_list) &gt; 0) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);</algorithm>
      </function>
      <function name="validate_measured_data_type">
         <parameter name="ei">
            <typename name="Shape_data_quality_criterion"/>
         </parameter>
         <parameter name="type_string">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdcr: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdii: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         sdei: BAG OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_criterion_report instances,
       -- all shape_data_quality_inspection_instance_report_item instances, and
       -- instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result.
    
       sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdcr := sdcr + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- If there is no report, then return true.
       IF((SIZEOF(sdcr) = 0) AND (SIZEOF(sdir) = 0)) THEN
         RETURN(TRUE);
       END_IF;
    
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdii := sdii + QUERY(q &lt;* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q &lt;* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- When reports exist, then perform checking process.
    
       -- Check representative_measured_value of 
       -- shape_data_quality_inspection_criterion_report
       REPEAT i:= 1 TO SIZEOF(sdcr);
        IF(NOT(type_string IN
           TYPEOF(sdcr[i].representative_measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of shape_data_quality_inspection_
       -- instance_report_item
       REPEAT i:= 1 TO SIZEOF(sdii);
         IF(NOT(type_string IN
           TYPEOF(sdii[i].measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of extreme_instances of
       -- instance_report_item_with_extreme_instance
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           IF(NOT(type_string IN
             TYPEOF(sdei[i].extreme_instances[j].measured_value)))
           THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);</algorithm>
      </function>
      <function name="value_limit_type">
         <parameter name="iv">
            <typename name="shape_data_quality_value_limit_type_select"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <builtintype type="STRING"/>
         <algorithm>LOCAL
      retval  : SET OF STRING := [];
    END_LOCAL;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_ARM.'
       +'SHAPE_DATA_QUALITY_VALUE_RANGE') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\shape_data_quality_value_range.upper_limit\Value_with_unit.value_component);
    END_IF;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_ARM.'
       +'SHAPE_DATA_QUALITY_VALUE_LIMIT') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\Value_with_unit.value_component);
    END_IF;
    RETURN(retval);</algorithm>
      </function>
   </schema>
</express>
