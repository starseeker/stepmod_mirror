<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" reference="">
   <application name="JSDAI" owner="LKSoft" source="shape_data_quality_inspection_result_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Shape_data_quality_inspection_result_arm">
      <interface kind="use" schema="Advanced_boundary_representation_arm"/>
      <interface kind="use" schema="Basic_curve_arm"/>
      <interface kind="use" schema="Basic_geometric_topology_arm"/>
      <interface kind="use" schema="B_spline_geometry_arm"/>
      <interface kind="use" schema="Composite_surface_arm"/>
      <interface kind="use" schema="Manifold_surface_arm"/>
      <interface kind="use" schema="Product_data_quality_inspection_result_arm"/>
      <interface kind="use" schema="Shape_data_quality_criteria_arm"/>
      <interface kind="use" schema="Shape_property_assignment_arm"/>
      <interface kind="reference" schema="Foundation_representation_arm">
         <interfaced.item name="using_representations"/>
      </interface>
      <interface kind="reference" schema="Support_resource_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <interface kind="reference" schema="Product_data_quality_inspection_result_arm">
         <interfaced.item name="inspected_product_view_definition"/>
      </interface>
      <type name="b_spline_or_composite_curve_select">
         <select selectitems="B_spline_curve Composite_curve"/>
      </type>
      <type name="b_spline_or_rectangular_composite_surface_select">
         <select selectitems="B_spline_surface Rectangular_composite_surface"/>
      </type>
      <type name="boolean_value">
         <builtintype type="BOOLEAN"/>
      </type>
      <type name="closed_or_open_shell_select">
         <select selectitems="Closed_shell Open_shell"/>
      </type>
      <type name="inspected_shape_element_select">
         <select selectitems="Edge_loop Edge_curve Face_surface Curve Surface Vertex_point closed_or_open_shell_select b_spline_or_rectangular_composite_surface_select point_select Connected_face_set Manifold_solid_brep Direction Axis_placement b_spline_or_composite_curve_select"/>
      </type>
      <type name="location_of_extreme_value_select">
         <select selectitems="inspected_shape_element_select B_spline_surface_knot_locator B_spline_curve_knot_locator B_spline_curve_segment B_spline_surface_strip B_spline_surface_patch Composite_curve_transition_locator Rectangular_composite_surface_transition_locator Boundary_curve_of_b_spline_or_rectangular_composite_surface Oriented_edge Face_bound Point_on_edge_curve Point_on_face_surface"/>
      </type>
      <type name="measured_value_select">
         <select selectitems="boolean_value measure_value Plane_angle_and_ratio_pair Plane_angle_and_length_pair"/>
      </type>
      <type name="surface_boundary_type">
         <enumeration items="u_parameter_min v_parameter_min u_parameter_max v_parameter_max"/>
      </type>
      <type name="u_or_v_parameter">
         <enumeration items="u_parameter v_parameter"/>
      </type>
      <entity name="B_spline_curve_knot_locator">
         <explicit name="basis_curve">
            <typename name="B_spline_curve"/>
         </explicit>
         <explicit name="knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_curve) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="B_spline_curve_segment">
         <explicit name="basis_curve">
            <typename name="B_spline_curve"/>
         </explicit>
         <explicit name="start_knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_curve) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="B_spline_surface_knot_locator">
         <explicit name="basis_surface">
            <typename name="B_spline_surface"/>
         </explicit>
         <explicit name="knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="surface_parameter">
            <typename name="u_or_v_parameter"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="B_spline_surface_patch">
         <explicit name="basis_surface">
            <typename name="B_spline_surface"/>
         </explicit>
         <explicit name="u_start_knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="v_start_knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="B_spline_surface_strip">
         <explicit name="basis_surface">
            <typename name="B_spline_surface"/>
         </explicit>
         <explicit name="start_knot_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="surface_parameter">
            <typename name="u_or_v_parameter"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Boundary_curve_of_b_spline_or_rectangular_composite_surface">
         <explicit name="basis_surface">
            <typename name="b_spline_or_rectangular_composite_surface_select"/>
         </explicit>
         <explicit name="boundary_type">
            <typename name="surface_boundary_type"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Composite_curve_transition_locator">
         <explicit name="basis_curve">
            <typename name="Composite_curve"/>
         </explicit>
         <explicit name="transition_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_curve) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Extreme_instance">
         <explicit name="locations_of_extreme_value">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="location_of_extreme_value_select"/>
         </explicit>
         <explicit name="measured_value">
            <typename name="measured_value_select"/>
         </explicit>
      </entity>
      <entity name="Instance_report_item_with_extreme_instances" supertypes="Shape_data_quality_inspection_instance_report_item">
         <explicit name="extreme_instances">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="Extreme_instance"/>
         </explicit>
      </entity>
      <entity name="Plane_angle_and_length_pair">
         <explicit name="plane_angle_value">
            <typename name="plane_angle_measure"/>
         </explicit>
         <explicit name="length_value">
            <typename name="length_measure"/>
         </explicit>
      </entity>
      <entity name="Plane_angle_and_ratio_pair">
         <explicit name="plane_angle_value">
            <typename name="plane_angle_measure"/>
         </explicit>
         <explicit name="ratio_value">
            <typename name="ratio_measure"/>
         </explicit>
      </entity>
      <entity name="Point_on_edge_curve" supertypes="Point_on_curve">
         <explicit name="basis_edge_curve">
            <typename name="Edge_curve"/>
         </explicit>
         <derived expression="SELF.basis_edge_curve.edge_geometry" name="supporting_curve">
            <typename name="Curve"/>
            <redeclaration entity-ref="Point_on_curve"/>
         </derived>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_edge_curve) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Point_on_face_surface" supertypes="Point_on_surface">
         <explicit name="basis_face_surface">
            <typename name="Face_surface"/>
         </explicit>
         <derived expression="SELF.basis_face_surface.face_geometry" name="supporting_surface">
            <typename name="Surface"/>
            <redeclaration entity-ref="Point_on_surface"/>
         </derived>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_face_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Rectangular_composite_surface_transition_locator">
         <explicit name="basis_surface">
            <typename name="Rectangular_composite_surface"/>
         </explicit>
         <explicit name="surface_parameter">
            <typename name="u_or_v_parameter"/>
         </explicit>
         <explicit name="u_transition_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="v_transition_index">
            <builtintype type="INTEGER"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_representations(SELF.basis_surface) *&#10;            relating_geometric_models_of_extreme_values(SELF))&gt;0" label="WR1"/>
      </entity>
      <entity name="Shape_data_quality_inspected_shape_and_result_relationship" supertypes="Representation_relationship">
         <explicit name="rep_1">
            <typename name="Geometric_model"/>
            <redeclaration entity-ref="Representation_relationship"/>
         </explicit>
         <explicit name="rep_2">
            <typename name="Shape_data_quality_inspection_result_representation"/>
            <redeclaration entity-ref="Representation_relationship"/>
         </explicit>
         <where expression="SIZEOF(&#10;            using_product_view_definition_of_geometric_model(SELF.rep_1)&#10;            *&#10;            bag_to_set(inspected_product_view_definition(SELF.rep_2))&#10;            ) &gt; 0" label="WR1"/>
         <where expression="SELF.rep_1\representation.context_of_items :=: &#10;            SELF.rep_2\representation.context_of_items" label="WR2"/>
      </entity>
      <entity name="Shape_data_quality_inspection_criterion_report" supertypes="Data_quality_inspection_criterion_report">
         <explicit name="representative_measured_value">
            <typename name="measured_value_select"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_inspection_instance_report" supertypes="Data_quality_inspection_instance_report">
         <explicit name="inspected_instances">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="Shape_data_quality_inspection_instance_report_item"/>
            <redeclaration entity-ref="Data_quality_inspection_instance_report"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_inspection_instance_report_item" supertypes="Data_quality_inspection_instance_report_item">
         <explicit name="inspected_elements">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="inspected_shape_element_select"/>
         </explicit>
         <explicit name="measured_value">
            <typename name="measured_value_select"/>
         </explicit>
      </entity>
      <entity name="Shape_data_quality_inspection_result" supertypes="Data_quality_inspection_result">
         <where expression="'SHAPE_DATA_QUALITY_CRITERIA_ARM.'+&#10;            'SHAPE_DATA_QUALITY_CRITERION' IN TYPEOF&#10;            (SELF\data_quality_inspection_result.criterion_inspected)" label="WR1"/>
      </entity>
      <entity name="Shape_data_quality_inspection_result_representation" supertypes="Data_quality_inspection_result_representation">
         <where expression="SIZEOF( QUERY( q &lt;* SELF\representation.items|&#10;                               'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +&#10;                               'SHAPE_DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) &gt; 0" label="WR1"/>
         <where expression="'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_COORDINATE_SPACE' IN&#10;            TYPEOF(SELF\representation.context_of_items)" label="WR2"/>
         <where expression="SIZEOF(USEDIN(SELF,&#10;                   'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+&#10;                   'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+&#10;                   'REP_2'))&gt;0" label="WR3"/>
      </entity>
      <entity name="Shape_inspection_result_accuracy_association">
         <explicit name="applied_specific_accuracy">
            <typename name="Shape_measurement_accuracy"/>
         </explicit>
         <explicit name="shape_data_quality_result">
            <typename name="Shape_data_quality_inspection_result"/>
         </explicit>
      </entity>
      <entity name="Shape_inspection_result_representation_with_accuracy" supertypes="Shape_data_quality_inspection_result_representation">
         <explicit name="applied_general_accuracy">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Shape_measurement_accuracy"/>
         </explicit>
      </entity>
      <function name="relating_geometric_models_of_extreme_values">
         <parameter name="item">
            <typename name="location_of_extreme_value_select"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Geometric_model"/>
         <algorithm>LOCAL
    results   : SET OF Geometric_model:=[];
    exti      : SET OF extreme_instance:=[];
    ii_ei     : SET OF 
         instance_report_item_with_extreme_instances:=[];
    sdiir        : SET OF 
         shape_data_quality_inspection_instance_report:=[];
    sdqr      : SET OF 
         shape_data_quality_inspection_result_representation:=[];
    sdisr     : SET OF 
         shape_data_quality_inspected_shape_and_result_relationship:=[];
  END_LOCAL;
  -- find extreme_instances 
  exti := exti + 
     bag_to_set( USEDIN(item,
       'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
       'EXTREME_INSTANCE.'+
       'LOCATIONS_OF_EXTREME_VALUE')); 
  
  -- find instance_report_item_with_extreme_instances 
  REPEAT i := 1 TO HIINDEX (exti);
    ii_ei := ii_ei + 
      bag_to_set( USEDIN(exti[i],
        'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
        'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES.'+
        'EXTREME_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_instance_report
  REPEAT i := 1 TO HIINDEX (ii_ei);
    sdiir := sdiir + 
      bag_to_set( USEDIN(ii_ei[i],
        'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
        'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'+
        'INSPECTED_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_result_representation
  REPEAT i := 1 TO HIINDEX (sdiir);
   sdqr := sdqr + 
     QUERY(i1&lt;* bag_to_set( USEDIN(sdiir[i].inspection_result,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))|
     'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
     'SHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION' 
      IN TYPEOF(i1)); 
  END_REPEAT;
  
  -- find shape_data_quality_inspected_shape_and_result_relationship
  REPEAT i := 1 TO HIINDEX (sdqr);
    sdisr := sdisr +  bag_to_set(USEDIN(sdqr[i],
       'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
       'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+
       'REP_2')); 
  END_REPEAT;
  
  -- find shape_representation
  REPEAT i := 1 TO HIINDEX (sdisr);
    results := results + sdisr[i].rep_1;
  END_REPEAT;
  
  RETURN (results);</algorithm>
      </function>
      <function name="using_product_view_definition_of_geometric_model">
         <parameter name="item">
            <typename name="Geometric_model"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="Product_view_definition"/>
         <algorithm>LOCAL
    local_s_d_a: SET OF Shape_description_association := [];
 --   local_p_d_s: SET OF Item_shape := [];
    local_p_d: SET OF Product_view_definition := [];
    i : INTEGER;
  END_LOCAL;
(*
Elemental_geometric_shape_arm.Geometric_model&lt;=
Foundation_representation_arm.Representation&lt;-
Property_assignment_arm.Property_definition_representation.rep
Property_assignment_arm.Property_definition_representation
Property_assignment_arm.Property_definition_representation.definition -&gt;
Property_assignment_arm.represented_definition = Property_assignment_arm.Assigned_property
Property_assignment_arm.Assigned_property.described_element -&gt;
Property_assignment_arm.property_assignment_select =&gt; Product_view_definition_properties_arm.product_property_assignment
Product_view_definition_properties_arm.product_property_assignment = Product_view_definition_arm.Product_view_definition
Product_view_definition_arm.Product_view_definition

---- Another Path
Elemental_geometric_shape_arm.Geometric_model
Elemental_geometric_shape_arm.Geometric_model = Shape_property_assignment_arm.shape_model &lt;-
Shape_property_assignment_arm.Shape_description_association.representation
Shape_property_assignment_arm.Shape_description_association
Shape_property_assignment_arm.Shape_description_association.represented_characteristic -&gt;
Shape_property_assignment_arm.shape_select = Shape_property_assignment_arm.Item_shape
Shape_property_assignment_arm.Item_shape
Shape_property_assignment_arm.Item_shape.described_element -&gt;
Shape_property_assignment_arm.shapeable_item = Product_view_definition_arm.Product_view_definition
Product_view_definition_arm.Product_view_definition
*)
  -- find Shape_description_association 
   local_s_d_a  := bag_to_set (USEDIN (item, 
   'SHAPE_PROPERTY_ASSIGNMENT_ARM.' +
   'SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION')); 
  
  -- find Product_view_definitions
  REPEAT i := 1 TO HIINDEX (local_s_d_a);
     IF (('SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE' IN 
       TYPEOF (local_s_d_a[i].represented_characteristic))
       AND
       ('PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF
         (local_s_d_a[i].represented_characteristic.described_element))) 
     THEN local_p_d := local_p_d + local_s_d_a[i].represented_characteristic.described_element;
(*
     ELSE IF (('PRODUCT_PROPERTY_DEFINITION_SCHEMA.PROPERTY_DEFINITION' IN 
       TYPEOF (local_s_d_r[i].definition))
       AND
       ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF
         (local_s_d_r[i].definition.definition)))
     THEN local_p_d := local_p_d + local_s_d_r[i].definition.definition;
     END_IF;
*)
     END_IF;
  END_REPEAT;

  RETURN (local_p_d);</algorithm>
      </function>
   </schema>
</express>
