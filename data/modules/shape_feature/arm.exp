(*
   $Id: arm.exp,v 1.4 2006/01/02 16:27:26 liutkus Exp $
   ISO TC184/SC4/WG12 N4236 - ISO/TS 10303-1764 Shape feature - EXPRESS ARM
*)

SCHEMA Shape_feature_arm;
USE FROM Contextual_shape_positioning_arm;

  ENTITY Feature_definition
    SUBTYPE OF (Characterizable_object);
    DERIVE
      feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
    INVERSE
      of_shape : Item_shape FOR described_element;
    WHERE
      WR1: EXISTS(feature_model);
  END_ENTITY;

ENTITY Feature_occurrence 
  ABSTRACT SUPERTYPE OF (ONEOF (Instanced_feature, Placed_feature))
  SUBTYPE OF (Shape_element);
END_ENTITY;

ENTITY Instanced_feature  
  SUBTYPE OF ( Feature_occurrence, Feature_definition);
END_ENTITY;

ENTITY Placed_feature  
  SUBTYPE OF ( Feature_occurrence);
   definition : Feature_definition;
  INVERSE
   feature_shape : SET[0:?] OF geometric_model_constituent_relationship FOR constituent_element;
END_ENTITY;

ENTITY Geometric_model_constituent_relationship
  ABSTRACT SUPERTYPE
  SUBTYPE OF (Geometric_placement_operation);
  constituent_element : Shape_element;
  SELF\Geometric_placement_operation.template_definition RENAMED constituent_model : Geometric_model;
INVERSE
  composed_model : SET[1:1] OF Geometric_model FOR items;
WHERE  
  WR1 : ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT' IN TYPEOF(SELF)) OR
   ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_OPERATOR_TRANSFORMATION' IN TYPEOF(SELF));
  WR2 : NOT('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_MODEL' IN TYPEOF(composed_model[1]));
(*  WR2: -- update for new structure
  WR3: -- new: Target shall be at 0.0.0 with no roation *)
END_ENTITY;

  FUNCTION bag_to_set(
    the_bag : BAG OF GENERIC : intype
  ) : SET OF GENERIC : intype;

    LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);
  END_FUNCTION;

 FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
 LOCAL
  sda : SET OF Shape_description_association := [];
  gm : SET OF Geometric_model := [];
 END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'SHAPE_PROPERTY_ASSIGNMENT_ARM.' + 
	 	'SHAPE_DESCRIPTION_ASSOCIATION.' + 'REPRESENTED_CHARACTERISTIC'));
 
 REPEAT i := 1 to SIZEOF(sda) BY 1;
  gm := gm + sda[i].representation;
 END_REPEAT;
 RETURN(gm);
END_FUNCTION;

END_SCHEMA;
