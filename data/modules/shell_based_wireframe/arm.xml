<?xml version="1.0"?>
<!-- $Id: arm.xml,v 1.3 2002/01/16 14:25:40 robbod Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: 2002/01/16 14:25:40 $"
  rcs.revision="$Revision: 1.3 $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.6"
    source="../data/modules/shell_based_wireframe/arm.exp"/>

  <schema name="Shell_based_wireframe_arm">
    <interface
      kind="use"
      schema="Geometric_shape_with_topology_arm">
    </interface>

    <entity
      name="Shell_based_wireframe_shape_representation"
      supertypes="Geometric_model">
      <description>
A shell_based_wireframe_shape_representation is a three dimensional shape_representation that represents the shape, or a portion of the shape, of a product by wireframes that defined an implicit volume. This includes all three-dimensional curves and topological entities that define a graph of vertices and edges.
      </description>

      <where label="IP1">
        <description>
The items in a shell_based_wireframe_shape_representation shall be an shell_based_wireframe_model, mapped_item, or axis2_placement_3d.
        </description>
      </where>
      <where label="IP2">
        <description>
At least one of the items in a shell_based_wireframe_shape_representation shall be either an shell_based_wireframe_model or a mapped_item.
        </description>
      </where>
      <where label="IP3">
        <description>
Every edge defined for an edge_loop in a shell_based_wireframe_model shall be an edge_curve.
        </description>
      </where>
      <where label="IP4">
        <description>
Every polyline that underlies an edge of a shell_based_wireframe_model shall be defined by more than two distinct points.
        </description>
      </where>
      <where label="IP5">
        <description>
The edge_geometry that underlies an edge for a shell_based_wireframe_model shall be a line, conic, b_spline_curve, offset_curve_3d, polyline, or curve_replica and the curves that have a basis defined by other curves are done so consistently. In the case of an offset_curve_3d or curve_replica the curve referenced as basis_curve shall be one of the above types.
        </description>
      </where>
      <where label="IP6">
        <description>
Every vertex defined as the start or end vertex for an edge in a shell_based_wireframe_model shall be a vertex_point.
        </description>
      </where>
      <where label="IP7">
        <description>
The vertex_geometry that underlies the vertices that define the boundaries of the edges in an edge_loop for a shell_based_wireframe_model shall be a cartesian_point or point_replica, and the point_replica shall replicate either another point_replica or a cartesian_point.
        </description>
      </where>
      <where label="IP8">
        <description>
The vertex that defines the vertex_loop that is used as a boundary in a shell_based_wireframe_model shall be a vertex_point.
        </description>
      </where>
      <where label="IP9">
        <description>
The vertex that defines the vertex_loop that is used as a boundary in a shell_based_wireframe_-model shall be underlaid by a cartesian_point or point_replica, and the point_replica shall replicate either another point_replica or a cartesian_point.
        </description>
      </where>
      <where label="IP10">
        <description>
The vertex that defines the vertex_loop that is used as the vertex_shell_extent for a vertex_shell in a shell_based_wireframe_model shall be a vertex_point.
        </description>
      </where>
      <where label="IP11">
        <description>
The vertex that defines the vertex_loop that is used as the vertex_shell_extent for a vertex_shell in a shell_based_wireframe_model shall be underlaid by a cartesian_point or point_replica, and the point_replica shall replicate either another point_replica or a cartesian_point.
        </description>
      </where>
      <where label="IP12">
        <description>
If there is a mapped_item in a shell_based_wireframe_shape_representation, the source of the mapped_item shall be a shell_based_wireframe_shape_representation.
        </description>
      </where>
      <where label="IP13">
        <description>
The shell_based_wireframe_shape_representation shall have coordinate_space_dimension equal to three.
        </description>
      </where>
    </entity>

  </schema>

</express>
