<?xml version="1.0"?>
<!-- $Id: express2xml.js,v 1.22 2002/08/14 06:43:41 goset1 Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  description.file="arm_descriptions.xml"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.22"
    source="../data/modules/specification_based_configuration/arm.exp"/>

  <schema name="Specification_based_configuration_arm">
    <interface
      kind="use"
      schema="Effectivity_application_arm">
    </interface>

    <interface
      kind="use"
      schema="Part_occurrence_arm">
    </interface>

    <interface
      kind="use"
      schema="Product_class_arm">
    </interface>

    <interface
      kind="use"
      schema="Product_breakdown_arm">
    </interface>

    <type name="configured_item_select">
      <select
        extensible="YES"
        genericentity="YES"
        selectitems="part_occurrence_select">
      </select>

    </type>
    <type name="configuration_kind">
      <enumeration
        items="usage design">
      </enumeration>


    </type>
    <type name="configuration_inheritance_types">
      <enumeration
        items="exception_case full_inheritance no_inheritance">
      </enumeration>


    </type>
    <type name="configured_specification_select">
      <select
        selectitems="Class_condition_association Class_specification_association">
      </select>

    </type>
    <type name="effectivity_for_configuration">
      <select
        basedon="effectivity_item"
        selectitems="Configuration">
      </select>

    </type>
    <entity
      name="Configuration">
      <explicit
        name="configured_element">
        <typename
          name="configured_item_select"/>
      </explicit>
      <explicit
        name="is_solution_for">
        <typename
          name="configured_specification_select"/>
      </explicit>
      <explicit
        name="configuration_type">
        <typename
          name="configuration_kind"/>
      </explicit>
      <explicit
        name="inheritance_type">
        <typename
          name="configuration_inheritance_types"/>
      </explicit>
      <where
        label="WR1"
        expression="consistent_configuration_type(SELF)">
      </where>
    </entity>

    <rule
      name="restrict_to_dated_effectivity"
      appliesto="Effectivity_assignment">
      <algorithm>
LOCAL
  ndea_set : SET OF Effectivity_assignment := [];
END_LOCAL;
  ndea_set := QUERY(ea &lt;* Effectivity_assignment | 
	NOT ('SPECIFICATION_BASED_CONFIGURATION_ARM.DATED_EFFECTIVITY' IN TYPEOF(ea.assigned_effectivity)));
      </algorithm>

      <where
        label="WR1"
        expression="SIZEOF(QUERY(ea &lt;* ndea_set | 		(SIZEOF(['SPECIFICATION_BASED_CONFIGURATION_ARM.CONFIGURATION']*type_of_set(ea.items))&gt;0) )) =0">
      </where>

    </rule>

    <function
      name="type_of_set">
      <parameter
        name="items">
        <aggregate
          type="SET"/>
        <typename
          name="GENERIC_ENTITY"/>
      </parameter>
      <aggregate
        type="SET"/>
      <typename
        name="STRING"/>
      <algorithm>
LOCAL
  result: SET OF STRING:= [];
END_LOCAL;

REPEAT FOR i:= 1 TO HIINDEX(items);
  result := result + TYPEOF(items[i]);
END_REPEAT;
RETURN(result);
      </algorithm>

    </function>

    <function
      name="consistent_configuration_type">
      <parameter
        name="config">
        <typename
          name="Configuration"/>
      </parameter>
      <builtintype
        type="BOOLEAN"/>
      <algorithm>
IF ('SPECIFICATION_BASED_CONFIGURATION_ARM.CLASS_CONDITION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(is_solution_for\Class_condition_association.condition_type ='part usage');
  ELSE
    RETURN(is_solution_for\Class_condition_association.condition_type ='design case');
  END_IF;
END_IF

IF ('SPECIFICATION_BASED_CONFIGURATION_ARM.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(is_solution_for\Class_specification_association.association_type ='part usage');
  ELSE 
    RETURN(is_solution_for\Class_specification_association.association_type ='design case');
  END_IF;
END_IF;

RETURN(FALSE);
      </algorithm>

    </function>

  </schema>

</express>
