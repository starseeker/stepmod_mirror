<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:27:10" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="specification_document_arm schema_instance"/>
   <schema name="SPECIFICATION_DOCUMENT_ARM">
      <interface kind="use" schema="CHARACTERISTIC_ARM"/>
      <interface kind="use" schema="CONFIGURATION_ITEM_ARM"/>
      <interface kind="use" schema="DOCUMENT_ASSIGNMENT_ARM"/>
      <interface kind="use" schema="ENCODED_TEXT_REPRESENTATION_ARM"/>
      <interface kind="use" schema="PERSON_ORGANIZATION_ASSIGNMENT_ARM"/>
      <type name="specification_product_object_select">
         <select extensible="YES" genericentity="YES" selectitems="product_configuration product_view_definition product_version product"/>
      </type>
      <entity name="design_specification" supertypes="specification_definition" super.expression="interface_specification"/>
      <entity name="fabrication_technology_specification" supertypes="process_specification"/>
      <entity name="interface_specification" supertypes="design_specification"/>
      <entity name="language_reference_manual" supertypes="specification_definition"/>
      <entity name="material_specification" supertypes="specification_definition"/>
      <entity name="process_specification" supertypes="specification_definition"/>
      <entity name="specification_allocation">
         <explicit name="allocated_specification">
            <typename name="specification_definition"/>
         </explicit>
         <explicit name="target_product_object">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="specification_product_object_select"/>
         </explicit>
         <explicit name="purpose">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="identifier_in_target_context" optional="YES">
            <builtintype type="STRING"/>
         </explicit>
         <derived name="the_context" expression=" target_product_object [ 1 ] ">
            <typename name="specification_product_object_select"/>
         </derived>
         <unique label="ur1">
            <unique.attribute entity-ref="specification_allocation" attribute="identifier_in_target_context"/>
            <unique.attribute entity-ref="specification_allocation" attribute="the_context"/>
         </unique>
         <where label="wr1" expression=" not exists ( identifier_in_target_context ) or ( sizeof ( target_product_object ) = 1 ) "/>
      </entity>
      <entity name="specification_definition" supertypes="document_definition" super.expression="ONEOF (design_specification, process_specification, material_specification, test_specification, language_reference_manual)">
         <derived name="source" expression=" query ( temp &lt;* usedin ( self , 'person_organization_assignment_arm.' + 'organization_or_person_in_organization_assignment.items' ) | ( temp . role = 'document source' ) ) ">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="organization_or_person_in_organization_assignment"/>
         </derived>
         <where label="wr1" expression=" exists ( source ) and sizeof ( source ) = 1 "/>
      </entity>
      <entity name="surface_finish_specification" supertypes="material_specification"/>
      <entity name="test_specification" supertypes="specification_definition"/>
      <function name="get_document_definition">
         <parameter name="input">
            <typename name="documented_element_select"/>
         </parameter>
         <parameter name="role">
            <builtintype type="STRING"/>
         </parameter>
         <parameter name="type_name">
            <builtintype type="STRING"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="document_definition"/>
         <algorithm> local dd : set [ 0 : ? ] of document_definition := [ ] ; da : set [ 0 : ? ] of document_assignment := [ ] ; end_local ; da := ( query ( dr &lt;* usedin ( input , 'document_assignment_arm.' + 'document_assignment.is_assigned_to' ) | ( dr . role = role ) ) ) ; repeat i := 1 to sizeof ( da ) by 1 ; if ( type_name in typeof ( da [ i ] . assigned_document ) ) then dd := dd + da [ i ] . assigned_document ; end_if ; end_repeat ; return ( dd ) ; </algorithm>
      </function>
   </schema>
</express>
