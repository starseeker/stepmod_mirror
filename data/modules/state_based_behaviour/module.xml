<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.39 2008/11/24 17:59:34 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
      <module
          name="state_based_behaviour"
          part="1371"
          version="1"
          sc4.working_group="3"
	  wg.number="2510"
	  wg.number.arm="2511"
	  wg.number.mim="2512"
	  wg.number.arm_lf="2513"
	  wg.number.mim_lf="2514"
  	  wg.number.rd='9999'
	  wg.number.supersedes="2326"
	  wg.number.arm.supersedes="2327"
	  wg.number.mim.supersedes="2328"
	  wg.number.arm_lf.supersedes="2329"
	  wg.number.mim_lf.supersedes="2330"
	  checklist.convener="2530"
	  checklist.internal_review="2531"
	  checklist.project_leader="2532"
	  status="TS"
	  language="E"
	  publication.year="2009"
          publication.date=""
          published="n"
          rcs.date="$Date: 2008/11/24 17:59:34 $"
          rcs.revision="$Revision: 1.39 $"
          development.folder="dvlp">

 <keywords>
    module, state based, behaviour, statechart, behaviour, behavior, state machine
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead2"/>  
   <editor ref="ap233.editor2"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of state-based behaviour.
   </p>
   
         <p>Hyperlink to Annex <module_ref linkend="State_based_behaviour:f_usage_guide">F</module_ref>  
  for AP233 concept model introductory material associated with state based behaviour capabilities 
  enabled within AP233.</p> 

 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>the definition of a versioned behaviour;</li>
	 <li>the state-based behaviour representation of a versioned behaviour.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>function-based behaviour.</li>
 </outscope>

  <normrefs>
 <normref.inc normref="uml2.-" ></normref.inc>
   <normref.inc normref="owl.-" ></normref.inc>
 <normref.inc normref="ietf3986.-" ></normref.inc>
 </normrefs>

 
 <abbreviations>
 <abbreviation.inc linkend="OMG" ></abbreviation.inc >
 <abbreviation.inc linkend="OWL" ></abbreviation.inc >
 <abbreviation.inc linkend="UML" ></abbreviation.inc >
 <abbreviation.inc linkend="URI" ></abbreviation.inc >
 <abbreviation.inc linkend="W3C" ></abbreviation.inc >
 </abbreviations>
 

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
 <!--     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/> -->
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
     <!-- page 1 -->
     <ae entity="Applied_state_definition_assignment" original_module="foundation_state_definition">
         <aa attribute="assigned_to" assertion_to="Product_view_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="state_definition_of_item">
                 state_type_of_item  *&gt; sbb_state_type_of_item
                 sbb_state_type_of_item = product_definition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Parameter_value_representation_item" original_module="general_model_parameter">
         <aa attribute="parameter_value" assertion_to="Product_view_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="parameter_value_select">
                 parameter_value_select *&gt; sbb_parameter_value_select
                 sbb_parameter_value_select  = product_definition
                 product_definition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Expression_assignment" original_module="expression_assignment">
         <aa attribute="items" assertion_to="Condition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="expression_assignment_item">
                 assignment_target_select *&gt; sbb_assignment_target_select
                 sbb_assignment_target_select = condition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Condition_assignment" original_module="condition">
         <aa attribute="item" assertion_to="State_transition_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="condition_item">
                 condition_action_method_items *&gt; sbb_condition_action_method_items
                 sbb_condition_action_method_items = state_type_relationship
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Condition_parameter" original_module="condition">
         <aa attribute="parameter" assertion_to="parameter_value_select">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="condition_parameter_item">
                 condition_action_method_items *&gt; sbb_condition_action_method_items
                 sbb_condition_action_method_items = parameter_value_select
             </refpath_extend>
         </aa>
     </ae>
     
     
     <!-- page 2 -->
     <ae entity="Assigned_property" original_module= "property_assignment" >
         <aa attribute="described_element" assertion_to="Activity_method">
             <aimelt>PATH</aimelt>
             <refpath>
                 property_definition
                 property_definition.definition ->
                 characterized_definition = characterized_product_definition
                 characterized_object =&gt;
                 characterized_action_method &lt;=
                 action_method
             </refpath>
         </aa>
         <aa attribute="described_element" assertion_to="Behaviour_view_definition">
             <aimelt>PATH</aimelt>
             <refpath>
                 property_definition
                 property_definition.definition ->
                 characterized_definition
                 characterized_definition = 
                 characterized_product_definition
                 characterized_product_definition =
                 product_definition =&gt;
                 behaviour_definition
             </refpath>
         </aa>
         <aa attribute="described_element" assertion_to="Product_view_definition">
             <aimelt>PATH</aimelt>
             <refpath>
                 property_definition
                 property_definition.definition ->
                 characterized_definition
                 characterized_definition = 
                 characterized_product_definition
                 characterized_product_definition =
                 product_definition
             </refpath>
         </aa>
     </ae>
     
     <ae entity="Behaviour_description_association" original_module="behaviour_description_assignment">
         <aa attribute="representation" assertion_to="State_based_behaviour_model">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="behaviour_model">
                 behaviour_model_groupable_item *&gt; sbb_behaviour_model_groupable_item
                 sbb_behaviour_model_groupable_item =
                 state_based_behaviour_model
             </refpath_extend>
         </aa>
     </ae>
     
     <!-- page 3 -->
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Activity_method">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = action_method
                 action_method
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Condition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = condition
                 condition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Product">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = product
                 product
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Product_view_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = product_definition
                 product_definition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Product_version">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = product_definition_formation
                 product_definition_formation
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="State_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = state_type
                 state_type
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Description_text">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = description_attribute
                 description_attribute
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Representation">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = representation
                 representation
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="External_source_identification">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = applied_external_identification_assignment
                 applied_external_identification_assignment
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="File">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = document_file
                 document_file
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="State_definition_relationship">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = state_type_relationship
                 state_type_relationship
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="General_model_parameter">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = general_model_parameter
                 general_model_parameter
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Behaviour">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = behaviour
                 behaviour
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Behaviour_view_definition">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = behaviour_definition
                 behaviour_definition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Applied_state_definition_assignment">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = state_type_assignment
                 state_type_assignment
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="State_based_behaviour_model">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = state_based_behaviour_model
                 state_based_behaviour_model
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Classification_assignment" original_module="classification_assignment">
         <aa attribute="items" assertion_to="Description_text_assignment">
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="classification_item">
                 classification_item *&gt; sbb_classification_item
                 sbb_classification_item = description_attribute
                 description_attribute
             </refpath_extend>
         </aa>
     </ae>
     
     <!-- page 4 -->
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Activity_method">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 action_method
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Condition">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 condition
             </refpath>
             
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Product">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 product
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Product_version">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 product_definition_formation
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Product_view_definition">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 product_definition
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="State_definition">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 state_type
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Representation">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 representation
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Behaviour">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 behaviour
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Behaviour_version">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 behaviour_definition_formation
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="Behaviour_view_definition">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 behaviour_definition
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="State_based_behaviour_model">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 state_based_behaviour_model
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="General_model_parameter">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 general_model_parameter
             </refpath>
         </aa>
     </ae>
     <ae entity="Description_text_assignment" original_module="description_assignment">
         <aa attribute="items" assertion_to="State_definition_relationship">
             <aimelt>PATH</aimelt>
             <refpath>
                 description_attribute
                 description_attribute.described_item -&gt;
                 state_type_relationship
             </refpath>
         </aa>
     </ae>
     
     
     <!-- page 5 -->
   <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Activity_method">
                 <description></description>
                 <aimelt>PATH</aimelt>
                 <refpath_extend extended_select="identification_item">
                     identification_item  *&gt; sbb_identification_item
                     sbb_identification_item = action_method
                 </refpath_extend>
         </aa>
   </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="State_definition">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = state_type
                 state_type
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="State_transition_definition">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = state_type_relationship
                 state_type_relationship
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Description_text_assignment">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = description_attribute
                 description_attribute
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Product_version">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = product_definition_formation
                 product_definition_formation
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="File">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = document_file
                 document_file
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Condition">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = condition
                 condition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="General_model_parameter">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = general_model_parameter
                 general_model_parameter
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Product_view_definition">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = product_definition
                 product_definition
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Product">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = product
                 product
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="State_based_behaviour_model">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = state_based_behaviour_model
                 state_based_behaviour_model
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="External_source_identification">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = applied_external_identification_assignment
                 applied_external_identification_assignment
             </refpath_extend>
         </aa>
     </ae>
     <ae entity="Identification_assignment" original_module="identification_assignment">
         <aa attribute="items" assertion_to="Representation">
             <description></description>
             <aimelt>PATH</aimelt>
             <refpath_extend extended_select="identification_item">
                 identification_item  *&gt; sbb_identification_item
                 sbb_identification_item = representation
                 representation
             </refpath_extend>
         </aa>
     </ae>
   
 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
       <imgfile file="mimexpg1.xml"/>
       <imgfile file="mimexpg2.xml"/>
<!--       <imgfile file="mimexpg3.xml"/>
       <imgfile file="mimexpg4.xml"/>
       <imgfile file="mimexpg5.xml"/>
       <imgfile file="mimexpg6.xml"/> -->
   </express-g>
    <shortnames>   
    <shortname name="SCAM" entity="sbb_characterized_action_method"/>
    <shortname name="SCA0" entity="sbb_characterized_applied_action_method_assignment"/>
    <shortname name="SCDF" entity="sbb_characterized_document_file"/>
    <shortname name="SCGP" entity="sbb_characterized_general_property"/>
    <shortname name="SCGPR" entity="sbb_characterized_general_property_relationship"/>
    <shortname name="SCGE" entity="sbb_characterized_generic_expression"/>
    <shortname name="SBCHPR" entity="sbb_characterized_product"/>
    <shortname name="SCPC" entity="sbb_characterized_product_category"/>
    <shortname name="SCPD" entity="sbb_characterized_product_definition"/>
    <shortname name="SCPDF" entity="sbb_characterized_product_definition_formation"/>
    <shortname name="SCPDFR" entity="sbb_characterized_product_definition_formation_relationship"/>
    <shortname name="SCP0" entity="sbb_characterized_property_definition"/>
    <shortname name="SCPDR" entity="sbb_characterized_property_definition_representation"/>
    <shortname name="SBCHRP" entity="sbb_characterized_representation"/>
    <shortname name="SCRC" entity="sbb_characterized_representation_context"/>
    <shortname name="SCRI" entity="sbb_characterized_representation_item"/>
    </shortnames>   
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>

 <refdata>

<refdata_subclause title="Classifications of State_definition">
<p>A <express_ref linkend="foundation_state_definition:arm:Foundation_state_definition_arm.State_definition"/> may be classified
in order to specify its detailed semantics. 
For the purpose of specifying those semantics, the OMG UML 2.1 concept of a State Machine is used. The following terms represent 
the same concepts from the UML 2.1 specification and are referenced using the specified URIs.
</p>
<figure id="f61" number="6.1" >
<title>State_definition Taxonomy</title>
<img src="State_definition-taxonomy.jpg"></img>
</figure>
<refdata_subclause title="ConnectionPointReference">
<b>ConnectionPointReference</b> is defined in section 15.3.1 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/ConnectionPointReference
</screen>
</refdata_subclause>
<refdata_subclause title="FinalState">
<b>FinalState</b> is defined in section 15.3.2 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/FinalState
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate">
<b>Pseudostate</b> is defined in section 15.3.8 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-initial">
<b>initial</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-initial
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-deepHistory">
<b>deepHistory</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-deepHistory
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-shallowHistory">
<b>shallowHistory</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-shallowHistory
</screen>
</refdata_subclause>


<refdata_subclause title="Pseudostate-join">
<b>join</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-join
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-fork">
<b>fork</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-fork
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-junction">
<b>junction</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-junction
</screen>
</refdata_subclause>

<refdata_subclause title="Pseudostate-choice">
<b>choice</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-choice
</screen>
</refdata_subclause>


<refdata_subclause title="Pseudostate-entryPoint">
<b>entryPoint</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-entryPoint
</screen>
</refdata_subclause>



<refdata_subclause title="Pseudostate-exitPoint">
<b>exitPoint</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-exitPoint
</screen>
</refdata_subclause>



<refdata_subclause title="Pseudostate-terminate">
<b>terminate</b> Pseudostate is defined in section 15.3.9 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Pseudostate-terminate
</screen>
</refdata_subclause>

<refdata_subclause title="Region">
<b>Region</b> is defined in section 15.3.10 of the UML 2 specification.
<p>URI Specification</p>
<screen>
http://schema.omg.org/spec/UML/2.1/Region
</screen>
</refdata_subclause>

<refdata_subclause title="Examples">
<example>
<p>The following shows how the four direction kinds would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('http://schema.omg.org/spec/UML/2.1','OMG UML 2.1');
#2=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/FinalState','Final State',$,#1);
#3=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-initial','intial Pseudostate',$,#1);
#4=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-deepHistory','deepHistory Pseudostate',$,#1);    
#5=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-shallowHistory','shallowHistory Pseudostate',$,#1);    
#6=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-join','join Pseudostate',$,#1);    
#7=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-fork','fork Pseudostate',$,#1);    
#8=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-junction','junction Pseudostate',$,#1);    
#9=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-choice','choice Pseudostate',$,#1);    
#10=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-entryPoint','entryPoint Pseudostate',$,#1);    
#11=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-exitPoint','exitPoint Pseudostate',$,#1);    
#12=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Pseudostate-terminate','terminate Pseudostate',$,#1);    
#13=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/ConnectionPointReference','Connection Point Reference',$,#1);
#14=EXTERNAL_CLASS('http://schema.omg.org/spec/UML/2.1/Region','Region',$,#1);
#50=CLASSIFICATION_ASSIGNMENT(#2,#51,$);
#51=STATE_DEFINITION('state one',$);
</screen>
</example>
<example>
<p>The following shows how the UML 2.1 State Machine concepts can be
represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="http://schema.omg.org/spec/UML/2.1/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
  xml:base="http://schema.omg.org/spec/UML/2.1/"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Region"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/FinalState"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/ConnectionPointReference"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-deepHistory"&gt;
    &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-shallowHistory"&gt;
    &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-join"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-fork"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-junction"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-choice"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-entryPoint"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-exitPoint"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-terminate"&gt;
	  &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
  &lt;owl:Class rdf:about="http://schema.omg.org/spec/UML/2.1/Pseudostate-initial"&gt;
    &lt;rdfs:subClassOf rdf:resource="http://schema.omg.org/spec/UML/2.1/Pseudostate"/&gt;
  &lt;/owl:Class&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>
</refdata_subclause>
</refdata_subclause>
<refdata_subclause title="Classifications of state_type">
<p>A <express_ref linkend="state_type_schema:ir_express:state_type_schema.state_type"/> may be classified
in order to specify its detailed semantics. 
For the purpose of specifying those semantics, the OMG UML 2.1 concept of a State Machine is used. The same terms and URIs
as specified for <b>State_definition</b> are applicable.</p>
<figure id="f62" number="6.2" >
<title>state_type Taxonomy</title>
<img src="state_type-taxonomy.jpg"></img>
</figure>
</refdata_subclause>
</refdata>

   <usage_guide>
	<guide_subclause title="Introduction">   
	<p>State Based Behavior is a representation of what a system is to do based on descriptions of 
	its relevant characteristics or conditions at particular intervals. What a thing does can be 
	described by citing a set of significant conditions. What a car does can be described by a set of 
	conditions and how one condition proceeds to the next. The conditions might be: off, running, 
	stopped, accelerating, cruising, decelerating, etc. Something happens, an event, to cause 
	change from one condition to the next. </p>
	
	<figure id="SEHandBk6" number="F-1">
	<title>Definitions concerning state based behaviour - SE Handbook Chapter 33 Figure 6</title>
	<img src="SEHandBk6.gif"/>
	</figure>
	
	<p>Figure <module_ref linkend="state_based_behaviour:f_usage_guide:figure:SEHandBk6">F-1</module_ref> and 
	the (numbered) definitions below provide the relationships for the state based 
	behaviour representation problem.</p>
	
	<p>An engineering thing is that for which observable, measurable, and reproducible properties or 
	attributes can be obtained.</p>
	
	<p><b>State </b>(29) is the relevant configuration, attributes, condition, or information content 
	characteristics or conditions of an engineering thing. Persons and things can be described in 
	terms of their past, present, and future conditions.</p>

	<p><b>Transition </b>(30) is the connection between one condition of an engineering thing and a 
	different condition of that engineering thing. A Transition is the concept applied to 
	getting from one State or set of conditions to another. In the digital approximation this is 
	assumed to take zero time. In real physical things this is an approximation because going from 
	one condition to another always takes time even thought the time may be very short. Each 
	transition connects an initial state to a final state. A state can exist that is unchanging over 
	the period of interest and hence has no transitions. Mathematical representations of state and 
	transition  make use of directed graphs.</p>

	<p><b>Function </b>(31) is a transformation that consumes one set of engineering things and generates or 
	transforms them into another set of engineering things.</p>
	
	<p><b>I/O </b>(32) is the output from one Function and an input to another Function.</p>
	
	<p><b>Event </b>(33) is the subset of I/O that causes a Transition from one State to another. Some, but not all,
	I/O result in a Transition because they represent a change in the condition of an engineering thing. </p>

	<p><b>Transition_condition </b> (34)is a condition that would need to be fulfilled to enable the Transition. 
	Some of the outputs of a Function are a special kind of Event that must necessarily be present 
	(produced by the function) for the Transition to take place.</p>

	<p><b>Guard_expression </b>(35) is a condition that must be true for the Transition to be triggered. Some of 
	the outputs of a function are a special kind of event that must necessarily be true for the 
	transition to take place.</p>
	
	<p><b>Time_interval </b>(36) is a period of time during which a Function produces its I/O. In some disciplines 
	the transitions are found to be fast enough that they can be considered to be instantaneous. 
	Transformation of inputs into outputs takes a finite amount of time. The Time_intervals can be 
	assigned to a complex set of functions and then the time line for the behavior can be calculated 
	from the model. In this manner an overall required time response can be calculated from a 
	design behavior model. That prediction can then be verified by measurement when the system is 
	built. </p>
		</guide_subclause>
	<guide_subclause title="Assigning Behaviour to a State Definition">
	<p>There are several relationships possible between various representations or definitions of behaviour specified in
	this part of ISO 10303. For the purpose of specifying the behaviour that occurs while in a state or when entering or exiting
	a state, the particular approach to be used depends on the usage scenario or state machine tool capability. 
	The <b>Behaviour_description_association</b> concept is used in all cases. This allows for a single, consistent approach.
	This is also the concept used to relate a behaviour model representation to the behaviour view is defined. The possibilities follow.</p>
	<ul>
	<li>In the case that the behaviour management capabilites are used, then the behaviour model is assigned to the <b>State_definition</b>.</li>
	<li>In the case that the behaviour is defined by a simple name, the behaviour is represented as an <b>Activity_method</b> and that is
	assigned to the <b>State_definition</b>. An <b>Activity_method_assignment</b> is not used for this purpose for the 
	sake of consistency with the assignment of any kind of definition of behaviour.</li>
	<li>In the case that the behaviour also has a state definition itself, then one <b>State_definition</b> is assigned to the other. 
	A <b>State_definition_relationship</b> is not used for this purpose for the sake of consistency with the assignment of
	any kind of definition of behaviour.</li>
	</ul>
	</guide_subclause>
</usage_guide>

</module>
