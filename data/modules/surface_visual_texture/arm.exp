(*
   $Id: arm.exp,v 1.3 2016/12/13 10:37:17 kevletu Exp $
   N - ISO/CD-TS - 10303- surface_visual_texture - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
SCHEMA Surface_visual_texture_arm;

USE FROM Tessellated_geometry_arm;
USE FROM Support_resource_arm; -- to get label

TYPE tessellated_face_or_tessellated_surface_set = SELECT
    (Tessellated_face,
     Tessellated_surface_set);
END_TYPE; 

TYPE texture_file_type = ENUMERATION OF
    (JPEG, 
    PNG,
    GIF,
    TIFF,
    BMP,
    DDS,
    TGA,
    other);
END_TYPE;

TYPE zero_to_one_bounded_non_negative_real = REAL;
  WHERE
      WR1: { 0. <= SELF <= 1. };
END_TYPE;

(*ENTITY texture_style_specification
    SUBTYPE OF (founded_item)
    ABSTRACT SUPERTYPE;
END_ENTITY; *)

ENTITY Texture_style_tessellation_specification
   ABSTRACT SUPERTYPE
   -- SUBTYPE OF ();  Founded_item in ARM ? 
END_ENTITY;

-- NO NEED use 1001 Appearance assignment or 1007 General surface appearance  or surface condition 1110 

ENTITY Single_texture_style_tessellation_specification
   SUBTYPE OF (Texture_style_tessellation_specification);
   texture_image: label;
   texture_coordinates: LIST [1:?] OF LIST [2:2] OF zero_to_one_bounded_non_negative_real;
   texture_format: texture_file_type;
   repeating_pattern: BOOLEAN;
END_ENTITY;


-- TO DO: add equivalentENTITY tessellated_styled_item_with_texture
--  I think this meas that you do at least need the Appearace assigment module sice this will import the Arm oject Styled_elemet (the equivent in the MIM is styled_item).


(*
ENTITY tessellated_styled_item_with_texture
	SUBTYPE OF (styled_item);  
  		SELF\styled_item.styles : SET [1:1] OF presentation_style_assignment;
		SELF\styled_item.item   : tessellated_face_or_tessellated_surface_set;
    DERIVE
      texture_style_specification : texture_style_tessellation_specification := styles[LOINDEX(styles)]\presentation_style_assignment.styles[LOINDEX(styles)];
    WHERE
     WR1: SIZEOF(styles[LOINDEX(styles)]\presentation_style_assignment.styles) = 1;
     WR2: NOT ('GEOMETRIC_MODEL_SCHEMA.TRIANGULATED_FACE' IN TYPEOF(item))
          OR
          NOT('PRESENTATION_APPEARANCE_SCHEMA.SINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION' IN TYPEOF(texture_style_specification))
          OR
           (
            ((SIZEOF(item\triangulated_face.pnindex) > 0) AND (SIZEOF(single_texture_style_tessellation_specification.texture_coordinates = SIZEOF(item\triangulated_face.pnindex))))
            OR
            ((SIZEOF(item\triangulated_face.pnindex) = 0) AND (SIZEOF(single_texture_style_tessellation_specification.texture_coordinates = SIZEOF(item\tessellated_face.coordinates))))
           );
    WR3: NOT ('GEOMETRIC_MODEL_SCHEMA.COMPLEX_TRIANGULATED_FACE' IN TYPEOF(item))
         OR
         NOT('PRESENTATION_APPEARANCE_SCHEMA.SINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION' IN TYPEOF(texture_style_specification))
         OR
           (
            ((SIZEOF(item\complex_triangulated_face.pnindex) > 0) AND (SIZEOF(single_texture_style_tessellation_specification.texture_coordinates = SIZEOF(item\complex_triangulated_face.pnindex))))
            OR
            ((SIZEOF(item\complex_triangulated_face.pnindex) = 0) AND (SIZEOF(single_texture_style_tessellation_specification.texture_coordinates = SIZEOF(item\tessellated_face.coordinates))))
           );
    WR4: NOT ('GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SURFACE_SET' IN TYPEOF(item))
         OR
         NOT('PRESENTATION_APPEARANCE_SCHEMA.SINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION' IN TYPEOF(texture_style_specification))
         OR
         (SIZEOF(single_texture_style_tessellation_specification.texture_coordinates = SIZEOF(item\tessellated_surface_set.coordinates)));
  END_ENTITY;*)

END_SCHEMA;
