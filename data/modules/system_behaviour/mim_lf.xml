<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: mim_lf.xml,v 1.5 2007/08/25 00:11:03 abhpf Exp $ -->
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<?xml-stylesheet type="text/xsl"
href="../../../xsl/express.xsl" ?>

<express
  language_version="2"
  rcs.date="$Date: 2007/08/25 00:11:03 $"
  rcs.revision="$Revision: 1.5 $">

  <application
    name=" Eurostep EXPRESS Parser (Eep!)"
    owner="Eurostep Limited"
    url="www.eurostep.com"
    version="1, 3, 30, 37"
    source="mim_sb2LF.exp"/>

  <schema name="System_behaviour_mim_LF">
    <type name="role_select">
      <select
        selectitems="document_reference group_assignment name_assignment"
      />
    </type>

    <type name="groupable_item">
      <select
        selectitems="functional_model generic_expression named_variable_semantics parameter_value_representation_item parameter_value_select product_definition state_based_behaviour_model state_based_behaviour_representation_item state_type state_type_relationship"
      />
      <where
        label="WR1"
        expression="NOT (&apos;SYSTEM_BEHAVIOUR_MIM_LF.GROUP&apos; IN TYPEOF(SELF))">
      </where>
    </type>

    <type name="assignment_target_select">
      <select
        selectitems="condition"
      />
    </type>

    <type name="text_based_item_select">
      <select
        selectitems="included_text_based_representation textual_expression_composition textual_expression_representation_item"
      />
    </type>

    <type name="identification_item">
      <select
        selectitems="action_method action_method_relationship action_resource action_resource_requirement action_resource_requirement_relationship applied_action_method_assignment applied_external_identification_assignment condition description_attribute document_file external_class_library general_model_parameter general_property general_property_relationship product product_category product_definition product_definition_context product_definition_formation representation resource_property state_based_behaviour_model state_type state_type_assignment state_type_relationship task_element task_element_relationship task_step"
      />
    </type>

    <type name="classification_item">
      <select
        selectitems="action_method action_method_relationship action_resource action_resource_relationship action_resource_requirement action_resource_requirement_relationship applied_action_method_assignment applied_external_identification_assignment applied_identification_assignment class condition constrained_general_parameter_relationship context_dependent_unit conversion_based_unit derived_unit description_attribute document_file external_class_library general_model_parameter general_property general_property_relationship measure_with_unit named_unit parameter_value_representation_item product product_category product_definition product_definition_context product_definition_formation product_definition_formation_relationship property_definition representation representation_context representation_item resource_property resource_property_representation state_based_behaviour_model state_type state_type_assignment state_type_relationship text_based_representation uncertainty_measure_with_unit"
      />
    </type>

    <type name="action_method_items">
      <select
        selectitems="action_method action_method_assignment_relationship action_method_relationship action_resource action_resource_relationship action_resource_requirement action_resource_requirement_relationship applied_action_method_assignment applied_classification_assignment applied_identification_assignment condition document_file group parameter_value_select product product_definition product_definition_formation product_definition_formation_relationship product_related_product_category property_definition property_definition_representation representation resource_property resource_property_representation state_type state_type_relationship task_element task_element_relationship task_step"
      />
    </type>

    <type name="name_item">
      <select
        selectitems="applied_action_method_assignment external_class_library named_variable_semantics"
      />
    </type>

    <type name="description_item">
      <select
        selectitems="action_method condition general_model_parameter product product_definition product_definition_formation representation state_based_behaviour_model state_type state_type_relationship"
      />
    </type>

    <type name="description_attribute_select">
      <select
        selectitems="application_context effectivity external_source property_definition_representation representation"
      />
    </type>

    <type name="external_identification_item">
      <select
        selectitems="document_file product product_definition"
      />
    </type>

    <type name="identifier">
      <builtintype type="STRING"
      />
    </type>

    <type name="document_reference_item">
      <select
        selectitems="external_state_based_behaviour_model"
      />
    </type>

    <type name="id_attribute_select">
      <select
        selectitems="action application_context group product_category property_definition representation"
      />
    </type>

    <type name="state_type_of_item">
      <select
        selectitems="product_definition"
      />
    </type>

    <type name="parameter_value_select">
      <select
        selectitems="generic_expression measure_with_unit product_definition representation representation_item state_type"
      />
    </type>

    <type name="name_attribute_select">
      <select
        selectitems="derived_unit effectivity product_definition property_definition_representation"
      />
    </type>

    <type name="characterized_action_definition">
      <select
        selectitems="action action_method action_method_relationship action_relationship"
      />
    </type>

    <type name="characterized_resource_definition">
      <select
        selectitems="action_resource action_resource_relationship action_resource_requirement action_resource_requirement_relationship"
      />
    </type>

    <type name="derived_property_select">
      <select
        selectitems="property_definition resource_property"
      />
    </type>

    <type name="list_representation_item">
      <aggregate type="LIST"
        lower="1"
        upper="?"
      />
      <typename name="representation_item"/>
    </type>

    <type name="set_representation_item">
      <aggregate type="SET"
        lower="1"
        upper="?"
      />
      <typename name="representation_item"/>
    </type>

    <type name="amount_of_substance_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="area_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="celsius_temperature_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="context_dependent_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="count_measure">
      <builtintype type="NUMBER"
      />
    </type>

    <type name="descriptive_measure">
      <builtintype type="STRING"
      />
    </type>

    <type name="electric_current_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="length_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="luminous_intensity_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="mass_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="measure_value">
      <select
        selectitems="amount_of_substance_measure area_measure celsius_temperature_measure context_dependent_measure count_measure descriptive_measure electric_current_measure length_measure luminous_intensity_measure mass_measure numeric_measure parameter_value plane_angle_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure ratio_measure solid_angle_measure thermodynamic_temperature_measure time_measure volume_measure"
      />
    </type>

    <type name="numeric_measure">
      <builtintype type="NUMBER"
      />
    </type>

    <type name="parameter_value">
      <builtintype type="REAL"
      />
    </type>

    <type name="plane_angle_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="positive_length_measure">
      <typename name="length_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="positive_plane_angle_measure">
      <typename name="plane_angle_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="positive_ratio_measure">
      <typename name="ratio_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="ratio_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="si_prefix">
      <enumeration
        items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto"
      />
    </type>

    <type name="si_unit_name">
      <enumeration
        items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_Celsius lumen lux becquerel gray sievert"
      />
    </type>

    <type name="solid_angle_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="thermodynamic_temperature_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="time_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="unit">
      <select
        selectitems="derived_unit named_unit"
      />
    </type>

    <type name="volume_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="relationship_with_condition">
      <select
        selectitems="action_method_relationship action_relationship context_dependent_action_method_relationship context_dependent_action_relationship"
      />
    </type>

    <type name="process_or_process_relationship">
      <select
        selectitems="relationship_with_condition"
      />
    </type>

    <type name="supported_item">
      <select
        selectitems="action action_method"
      />
    </type>

    <type name="label">
      <builtintype type="STRING"
      />
    </type>

    <type name="text">
      <builtintype type="STRING"
      />
    </type>

    <type name="characterized_definition">
      <select
        selectitems="characterized_object"
      />
    </type>

    <type name="represented_definition">
      <select
        selectitems="general_property property_definition"
      />
    </type>

    <type name="source_item">
      <select
        selectitems="identifier"
      />
    </type>

    <type name="product_or_formation_or_definition">
      <select
        selectitems="product product_definition_formation product_definition"
      />
    </type>

    <type name="founded_item_select">
      <select
        selectitems="representation_item"
      />
    </type>

    <type name="compound_item_definition">
      <select
        selectitems="list_representation_item set_representation_item"
      />
    </type>

    <entity name="representation"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="representation_item"/>
      </explicit>
      <explicit
        name="context_of_items">
        <typename name="representation_context"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="fbb_characterized_property_definition"
      supertypes="characterized_object property_definition"
    >
    </entity>

    <entity name="fbb_characterized_applied_action_method_assignment"
      supertypes="characterized_object applied_action_method_assignment"
    >
    </entity>

    <entity name="fbb_characterized_generic_expression"
      supertypes="characterized_object generic_expression"
    >
    </entity>

    <entity name="fbb_characterized_general_property"
      supertypes="characterized_object general_property"
    >
    </entity>

    <entity name="fbb_characterized_general_property_relationship"
      supertypes="characterized_object general_property_relationship"
    >
    </entity>

    <entity name="fbb_characterized_product"
      supertypes="characterized_object product"
    >
    </entity>

    <entity name="fbb_characterized_product_category"
      supertypes="characterized_object product_category"
    >
    </entity>

    <entity name="fbb_characterized_product_definition_formation"
      supertypes="characterized_object product_definition_formation"
    >
    </entity>

    <entity name="fbb_characterized_product_definition_formation_relationship"
      supertypes="characterized_object product_definition_formation_relationship"
    >
    </entity>

    <entity name="fbb_characterized_property_definition_representation"
      supertypes="characterized_object property_definition_representation"
    >
    </entity>

    <entity name="fbb_characterized_representation"
      supertypes="characterized_object representation"
    >
    </entity>

    <entity name="fbb_characterized_representation_context"
      supertypes="characterized_object representation_context"
    >
    </entity>

    <entity name="fbb_characterized_representation_item"
      supertypes="characterized_object representation_item"
    >
    </entity>

    <entity name="object_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="role_association"
    >
      <explicit
        name="role">
        <typename name="object_role"/>
      </explicit>
      <explicit
        name="item_with_role">
        <typename name="role_select"/>
      </explicit>
    </entity>

    <entity name="applied_group_assignment"
      supertypes="group_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="groupable_item"/>
      </explicit>
    </entity>

    <entity name="and_expression"
      supertypes="multiple_arity_boolean_expression"
    >
    </entity>

    <entity name="binary_boolean_expression"
      abstract.supertype="YES"
      supertypes="boolean_expression binary_generic_expression"
      super.expression="ONEOF(xor_expression, equals_expression)"
    >
    </entity>

    <entity name="binary_function_call"
      abstract.supertype="YES"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="binary_numeric_expression"
      abstract.supertype="YES"
      supertypes="numeric_expression binary_generic_expression"
      super.expression="ONEOF(minus_expression, div_expression, mod_expression, slash_expression, power_expression, binary_function_call)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="numeric_expression"/>
        <redeclaration
          entity-ref="binary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="boolean_defined_function"
      abstract.supertype="YES"
      supertypes="defined_function boolean_expression"
    >
    </entity>

    <entity name="boolean_expression"
      abstract.supertype="YES"
      supertypes="expression"
      super.expression="ONEOF(simple_boolean_expression, unary_boolean_expression, binary_boolean_expression, multiple_arity_boolean_expression, comparison_expression, interval_expression, boolean_defined_function)"
    >
    </entity>

    <entity name="boolean_literal"
      supertypes="simple_boolean_expression generic_literal"
    >
      <explicit
        name="the_value">
        <builtintype type="BOOLEAN"
        />
      </explicit>
    </entity>

    <entity name="boolean_variable"
      supertypes="simple_boolean_expression variable"
    >
    </entity>

    <entity name="comparison_equal"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="comparison_expression"
      abstract.supertype="YES"
      supertypes="boolean_expression binary_generic_expression"
      super.expression="ONEOF(comparison_equal, comparison_greater, comparison_greater_equal, comparison_less, comparison_less_equal, comparison_not_equal, like_expression)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="expression"/>
        <redeclaration
          entity-ref="binary_generic_expression"/>
      </explicit>
      <where
        label="WR1"
        expression="((&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[2]))) OR ((&apos;SYSTEM_BEHAVIOUR_MIM_LF.BOOLEAN_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.BOOLEAN_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[2]))) OR ((&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[2])))">
      </where>
    </entity>

    <entity name="comparison_greater"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="comparison_greater_equal"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="comparison_less"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="comparison_less_equal"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="comparison_not_equal"
      supertypes="comparison_expression"
    >
    </entity>

    <entity name="concat_expression"
      supertypes="string_expression multiple_arity_generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="string_expression"/>
        <redeclaration
          entity-ref="multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="defined_function"
      abstract.supertype="YES"
      super.expression="(ONEOF(numeric_defined_function, string_defined_function, boolean_defined_function)) ANDOR SQL_mappable_defined_function"
    >
    </entity>

    <entity name="div_expression"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="equals_expression"
      supertypes="binary_boolean_expression"
    >
    </entity>

    <entity name="expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
      super.expression="ONEOF(numeric_expression, boolean_expression, string_expression)"
    >
    </entity>

    <entity name="format_function"
      supertypes="string_expression binary_generic_expression"
    >
      <derived
        name="value_to_format"
        expression="SELF\binary_generic_expression.operands[1]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="format_string"
        expression="SELF\binary_generic_expression.operands[2]">
        <typename name="generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="((&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos;) IN TYPEOF(value_to_format)) AND ((&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos;) IN TYPEOF(format_string))">
      </where>
    </entity>

    <entity name="index_expression"
      supertypes="string_expression binary_generic_expression"
    >
      <derived
        name="operand"
        expression="SELF\binary_generic_expression.operands[1]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="index"
        expression="SELF\binary_generic_expression.operands[2]">
        <typename name="generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(operand)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index))">
      </where>
      <where
        label="WR2"
        expression="is_int_expr(index)">
      </where>
    </entity>

    <entity name="int_literal"
      supertypes="literal_number"
    >
      <explicit
        name="the_value">
        <builtintype type="INTEGER"
        />
        <redeclaration
          entity-ref="literal_number"/>
      </explicit>
    </entity>

    <entity name="int_numeric_variable"
      supertypes="numeric_variable"
    >
    </entity>

    <entity name="interval_expression"
      supertypes="boolean_expression multiple_arity_generic_expression"
    >
      <derived
        name="interval_low"
        expression="SELF\multiple_arity_generic_expression.operands[1]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="interval_item"
        expression="SELF\multiple_arity_generic_expression.operands[2]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="interval_high"
        expression="SELF\multiple_arity_generic_expression.operands[3]">
        <typename name="generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;SYSTEM_BEHAVIOUR_MIM_LF.EXPRESSION&apos; IN TYPEOF(interval_low)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.EXPRESSION&apos; IN TYPEOF(interval_item)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.EXPRESSION&apos; IN TYPEOF(interval_high))">
      </where>
      <where
        label="WR2"
        expression="((&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_low)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_high)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_item))) OR ((&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_low)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF.interval_item)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF.interval_high)))">
      </where>
    </entity>

    <entity name="like_expression"
      supertypes="comparison_expression"
    >
      <where
        label="WR1"
        expression="(&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\binary_generic_expression.operands[2]))">
      </where>
    </entity>

    <entity name="literal_number"
      abstract.supertype="YES"
      supertypes="simple_numeric_expression generic_literal"
      super.expression="ONEOF(int_literal, real_literal)"
    >
      <explicit
        name="the_value">
        <builtintype type="NUMBER"
        />
      </explicit>
    </entity>

    <entity name="minus_expression"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="mod_expression"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="mult_expression"
      supertypes="multiple_arity_numeric_expression"
    >
    </entity>

    <entity name="multiple_arity_boolean_expression"
      abstract.supertype="YES"
      supertypes="boolean_expression multiple_arity_generic_expression"
      super.expression="ONEOF(and_expression, or_expression)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="boolean_expression"/>
        <redeclaration
          entity-ref="multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="multiple_arity_function_call"
      abstract.supertype="YES"
      supertypes="multiple_arity_numeric_expression"
      super.expression="ONEOF(maximum_function, minimum_function)"
    >
    </entity>

    <entity name="multiple_arity_numeric_expression"
      abstract.supertype="YES"
      supertypes="numeric_expression multiple_arity_generic_expression"
      super.expression="ONEOF(plus_expression, mult_expression, multiple_arity_function_call)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="numeric_expression"/>
        <redeclaration
          entity-ref="multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="not_expression"
      supertypes="unary_boolean_expression"
    >
      <explicit
        name="operand">
        <typename name="boolean_expression"/>
        <redeclaration
          entity-ref="unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="numeric_expression"
      abstract.supertype="YES"
      supertypes="expression"
      super.expression="ONEOF(simple_numeric_expression, unary_numeric_expression, binary_numeric_expression, multiple_arity_numeric_expression, length_function, value_function, numeric_defined_function)"
    >
      <derived
        name="is_int"
        expression="is_int_expr(SELF)">
        <builtintype type="BOOLEAN"
        />
      </derived>
      <derived
        name="sql_mappable"
        expression="is_SQL_mappable(SELF)">
        <builtintype type="BOOLEAN"
        />
      </derived>
    </entity>

    <entity name="numeric_variable"
      supertypes="simple_numeric_expression variable"
      super.expression="ONEOF(int_numeric_variable, real_numeric_variable)"
    >
      <where
        label="WR1"
        expression="(&apos;SYSTEM_BEHAVIOUR_MIM_LF.INT_NUMERIC_VARIABLE&apos; IN TYPEOF(SELF)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.REAL_NUMERIC_VARIABLE&apos; IN TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="or_expression"
      supertypes="multiple_arity_boolean_expression"
    >
    </entity>

    <entity name="plus_expression"
      supertypes="multiple_arity_numeric_expression"
    >
    </entity>

    <entity name="power_expression"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="real_literal"
      supertypes="literal_number"
    >
      <explicit
        name="the_value">
        <builtintype type="REAL"
        />
        <redeclaration
          entity-ref="literal_number"/>
      </explicit>
    </entity>

    <entity name="real_numeric_variable"
      supertypes="numeric_variable"
    >
    </entity>

    <entity name="simple_boolean_expression"
      abstract.supertype="YES"
      supertypes="boolean_expression simple_generic_expression"
      super.expression="ONEOF(boolean_literal, boolean_variable)"
    >
    </entity>

    <entity name="simple_numeric_expression"
      abstract.supertype="YES"
      supertypes="numeric_expression simple_generic_expression"
      super.expression="ONEOF(literal_number, numeric_variable)"
    >
    </entity>

    <entity name="simple_string_expression"
      abstract.supertype="YES"
      supertypes="string_expression simple_generic_expression"
      super.expression="ONEOF(string_literal, string_variable)"
    >
    </entity>

    <entity name="slash_expression"
      supertypes="binary_numeric_expression"
    >
    </entity>

    <entity name="SQL_mappable_defined_function"
      abstract.supertype="YES"
      supertypes="defined_function"
    >
    </entity>

    <entity name="string_defined_function"
      abstract.supertype="YES"
      supertypes="defined_function string_expression"
    >
    </entity>

    <entity name="string_expression"
      abstract.supertype="YES"
      supertypes="expression"
      super.expression="ONEOF(simple_string_expression, index_expression, substring_expression, concat_expression, format_function, string_defined_function)"
    >
    </entity>

    <entity name="string_literal"
      supertypes="simple_string_expression generic_literal"
    >
      <explicit
        name="the_value">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="string_variable"
      supertypes="simple_string_expression variable"
    >
    </entity>

    <entity name="substring_expression"
      supertypes="string_expression multiple_arity_generic_expression"
    >
      <derived
        name="operand"
        expression="SELF\multiple_arity_generic_expression.operands[1]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="index1"
        expression="SELF\multiple_arity_generic_expression.operands[2]">
        <typename name="generic_expression"/>
      </derived>
      <derived
        name="index2"
        expression="SELF\multiple_arity_generic_expression.operands[3]">
        <typename name="generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_EXPRESSION&apos; IN TYPEOF(operand)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index1)) AND (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index2))">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(SELF\multiple_arity_generic_expression.operands) = 3">
      </where>
      <where
        label="WR3"
        expression="is_int_expr(index1)">
      </where>
      <where
        label="WR4"
        expression="is_int_expr(index2)">
      </where>
    </entity>

    <entity name="unary_boolean_expression"
      abstract.supertype="YES"
      supertypes="boolean_expression unary_generic_expression"
      super.expression="ONEOF(not_expression, odd_function)"
    >
    </entity>

    <entity name="unary_numeric_expression"
      abstract.supertype="YES"
      supertypes="numeric_expression unary_generic_expression"
    >
      <explicit
        name="operand">
        <typename name="numeric_expression"/>
        <redeclaration
          entity-ref="unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="xor_expression"
      supertypes="binary_boolean_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="boolean_expression"/>
        <redeclaration
          entity-ref="binary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="expression_assignment"
    >
      <explicit
        name="assigned_expression">
        <typename name="expression"/>
      </explicit>
      <explicit
        name="assigned_to_object">
        <typename name="assignment_target_select"/>
      </explicit>
      <explicit
        name="role">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="document_file"
      supertypes="document characterized_object"
    >
      <where
        label="WR1"
        expression="SELF\characterized_object.name = &apos;&apos;">
      </where>
      <where
        label="WR2"
        expression="NOT EXISTS(SELF\characterized_object.description)">
      </where>
      <where
        label="WR3"
        expression="SIZEOF(QUERY(drt &lt;* SELF\document.representation_types | drt.name IN [&apos;digital&apos;, &apos;physical&apos;])) = 1">
      </where>
    </entity>

    <entity name="property_definition"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="definition">
        <typename name="characterized_definition"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="property_definition_representation"
    >
      <explicit
        name="definition">
        <typename name="represented_definition"/>
      </explicit>
      <explicit
        name="used_representation">
        <typename name="representation"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="constrained_general_parameter_relationship"
      supertypes="general_property_relationship"
    >
      <explicit
        name="related_property">
        <typename name="general_model_parameter"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
      <explicit
        name="relating_property">
        <typename name="general_model_parameter"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
    </entity>

    <entity name="general_model_parameter"
      supertypes="general_property"
    >
    </entity>

    <entity name="parameter_value_representation_item"
      supertypes="representation_item"
    >
    </entity>

    <entity name="included_text_based_representation"
      supertypes="representation_item"
    >
    </entity>

    <entity name="text_based_representation"
      supertypes="representation"
    >
      <explicit
        name="context_of_items">
        <typename name="text_based_representation_context"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="text_based_item_select"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
    </entity>

    <entity name="text_based_representation_context"
      supertypes="representation_context"
    >
    </entity>

    <entity name="textual_expression_composition"
      supertypes="compound_representation_item"
    >
    </entity>

    <entity name="textual_expression_representation_item"
      supertypes="descriptive_representation_item"
    >
    </entity>

    <entity name="condition"
      supertypes="action_method"
    >
    </entity>

    <entity name="applied_external_identification_assignment"
      supertypes="external_identification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="external_identification_item"/>
      </explicit>
    </entity>

    <entity name="task_element"
      supertypes="action_method"
      super.expression="ONEOF(concurrent_task_element, end_task, exit_loop, looping_element, task_element_sequence, task_step)"
    >
    </entity>

    <entity name="task_element_relationship"
      supertypes="action_method_relationship"
    >
    </entity>

    <entity name="task_step"
      supertypes="task_element"
    >
    </entity>

    <entity name="sbb_characterized_action_method"
      supertypes="action_method characterized_object"
    >
    </entity>

    <entity name="sbb_characterized_applied_action_method_assignment"
      supertypes="characterized_object applied_action_method_assignment"
    >
    </entity>

    <entity name="sbb_characterized_generic_expression"
      supertypes="characterized_object generic_expression"
    >
    </entity>

    <entity name="sbb_characterized_general_property"
      supertypes="characterized_object general_property"
    >
    </entity>

    <entity name="sbb_characterized_general_property_relationship"
      supertypes="characterized_object general_property_relationship"
    >
    </entity>

    <entity name="sbb_characterized_product"
      supertypes="characterized_object product"
    >
    </entity>

    <entity name="sbb_characterized_product_category"
      supertypes="characterized_object product_category"
    >
    </entity>

    <entity name="sbb_characterized_product_definition_formation"
      supertypes="characterized_object product_definition_formation"
    >
    </entity>

    <entity name="sbb_characterized_product_definition_formation_relationship"
      supertypes="characterized_object product_definition_formation_relationship"
    >
    </entity>

    <entity name="sbb_characterized_property_definition_representation"
      supertypes="characterized_object property_definition_representation"
    >
    </entity>

    <entity name="sbb_characterized_representation"
      supertypes="characterized_object representation"
    >
    </entity>

    <entity name="sbb_characterized_representation_context"
      supertypes="characterized_object representation_context"
    >
    </entity>

    <entity name="sbb_characterized_representation_item"
      supertypes="characterized_object representation_item"
    >
    </entity>

    <entity name="action_method"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="consequence">
        <typename name="text"/>
      </explicit>
      <explicit
        name="purpose">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="applied_identification_assignment"
      supertypes="identification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="identification_item"/>
      </explicit>
    </entity>

    <entity name="description_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="text"/>
      </explicit>
      <explicit
        name="described_item">
        <typename name="description_attribute_select"/>
      </explicit>
    </entity>

    <entity name="class"
      supertypes="group"
    >
    </entity>

    <entity name="class_by_extension"
      supertypes="class"
    >
    </entity>

    <entity name="class_by_intension"
      supertypes="class"
    >
    </entity>

    <entity name="group"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="applied_classification_assignment"
      supertypes="classification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="classification_item"/>
      </explicit>
    </entity>

    <entity name="classification_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_class">
        <typename name="group"/>
      </explicit>
      <explicit
        name="role">
        <typename name="classification_role"/>
      </explicit>
    </entity>

    <entity name="action_method_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_method">
        <typename name="action_method"/>
      </explicit>
      <explicit
        name="related_method">
        <typename name="action_method"/>
      </explicit>
    </entity>

    <entity name="applied_action_method_assignment"
      supertypes="action_method_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="action_method_items"/>
      </explicit>
    </entity>

    <entity name="action_method_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_action_method">
        <typename name="action_method"/>
      </explicit>
      <explicit
        name="role">
        <typename name="action_method_role"/>
      </explicit>
    </entity>

    <entity name="action_method_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="name_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_name">
        <typename name="label"/>
      </explicit>
      <derived
        name="role"
        expression="get_role(SELF)">
        <typename name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.ITEM_WITH_ROLE&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="applied_name_assignment"
      supertypes="name_assignment"
    >
      <explicit
        name="item">
        <typename name="name_item"/>
      </explicit>
    </entity>

    <entity name="applied_description_text_assignment"
      supertypes="description_text_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="description_item"/>
      </explicit>
    </entity>

    <entity name="external_class_library"
      supertypes="external_source"
    >
    </entity>

    <entity name="externally_defined_class"
      supertypes="class externally_defined_item"
    >
    </entity>

    <entity name="external_source"
    >
      <explicit
        name="source_id">
        <typename name="source_item"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="externally_defined_item"
    >
      <explicit
        name="item_id">
        <typename name="source_item"/>
      </explicit>
      <explicit
        name="source">
        <typename name="external_source"/>
      </explicit>
    </entity>

    <entity name="external_identification_assignment"
      abstract.supertype="YES"
      supertypes="identification_assignment"
    >
      <explicit
        name="source">
        <typename name="external_source"/>
      </explicit>
    </entity>

    <entity name="external_state_based_behaviour_model"
      supertypes="state_based_behaviour_model"
    >
    </entity>

    <entity name="applied_document_reference"
      supertypes="document_reference"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="document_reference_item"/>
      </explicit>
    </entity>

    <entity name="applied_document_usage_constraint_assignment"
      supertypes="document_usage_constraint_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="document_reference_item"/>
      </explicit>
    </entity>

    <entity name="document_product_equivalence"
      supertypes="document_product_association"
    >
      <where
        label="WR1"
        expression="SELF\document_product_association.name = &apos;equivalence&apos;">
      </where>
      <where
        label="WR2"
        expression="NOT (&apos;SYSTEM_BEHAVIOUR_MIM_LF.PRODUCT&apos; IN TYPEOF(SELF\document_product_association.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = &apos;configuration controlled document&apos;) AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF\document_product_association.related_product, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS&apos;) | prpc.name = &apos;document&apos;)) = 1))">
      </where>
      <where
        label="WR3"
        expression="NOT (&apos;SYSTEM_BEHAVIOUR_MIM_LF.PRODUCT_DEFINITION_FORMATION&apos; IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = &apos;configuration controlled document version&apos;) AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF.related_product\product_definition_formation.of_product, &apos;SYSTEM_BEHAVIOUR_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS&apos;) | prpc.name = &apos;document&apos;)) = 1))">
      </where>
      <where
        label="WR4"
        expression="NOT (&apos;SYSTEM_BEHAVIOUR_MIM_LF.PRODUCT_DEFINITION&apos; IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = &apos;configuration controlled document definition&apos;) AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, &apos;SYSTEM_BEHAVIOUR_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS&apos;) | prpc.name = &apos;document&apos;)) = 1))">
      </where>
    </entity>

    <entity name="document_product_association"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_document">
        <typename name="document"/>
      </explicit>
      <explicit
        name="related_product">
        <typename name="product_or_formation_or_definition"/>
      </explicit>
    </entity>

    <entity name="document_reference"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_document">
        <typename name="document"/>
      </explicit>
      <explicit
        name="source">
        <typename name="label"/>
      </explicit>
      <derived
        name="role"
        expression="get_role(SELF)">
        <typename name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.ITEM_WITH_ROLE&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="document_usage_constraint_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_document_usage">
        <typename name="document_usage_constraint"/>
      </explicit>
      <explicit
        name="role">
        <typename name="document_usage_role"/>
      </explicit>
    </entity>

    <entity name="state_based_behaviour_model"
      supertypes="representation"
    >
      <explicit
        name="context_of_items">
        <typename name="state_based_behaviour_representation_context"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="state_based_behaviour_representation_item"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
    </entity>

    <entity name="state_based_behaviour_representation_context"
      supertypes="representation_context"
    >
    </entity>

    <entity name="state_based_behaviour_representation_item"
      supertypes="representation_item"
    >
    </entity>

    <entity name="document"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="kind">
        <typename name="document_type"/>
      </explicit>
      <inverse
        name="representation_types"
        entity="document_representation_type"
        attribute="represented_document">
        <inverse.aggregate
          type="SET"
          lower="0"
          upper="?"
        />
      </inverse>
    </entity>

    <entity name="document_representation_type"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="represented_document">
        <typename name="document"/>
      </explicit>
    </entity>

    <entity name="characterized_object"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="id_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="identified_item">
        <typename name="id_attribute_select"/>
      </explicit>
    </entity>

    <entity name="global_unit_assigned_context"
      supertypes="representation_context"
    >
      <explicit
        name="units">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="unit"/>
      </explicit>
    </entity>

    <entity name="descriptive_representation_item"
      supertypes="representation_item"
    >
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="global_uncertainty_assigned_context"
      supertypes="representation_context"
    >
      <explicit
        name="uncertainty">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="uncertainty_measure_with_unit"/>
      </explicit>
    </entity>

    <entity name="characterized_action_method"
      supertypes="action_method characterized_object"
    >
    </entity>

    <entity name="representation_context"
    >
      <explicit
        name="context_identifier">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="context_type">
        <typename name="text"/>
      </explicit>
      <inverse
        name="representations_in_context"
        entity="representation"
        attribute="context_of_items">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
    </entity>

    <entity name="representation_item"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(using_representations(SELF)) &gt; 0">
      </where>
    </entity>

    <entity name="representation_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="rep_1">
        <typename name="representation"/>
      </explicit>
      <explicit
        name="rep_2">
        <typename name="representation"/>
      </explicit>
    </entity>

    <entity name="uncertainty_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <where
        label="WR1"
        expression="valid_measure_value(SELF\measure_with_unit.value_component)">
      </where>
    </entity>

    <entity name="applied_state_type_assignment"
      supertypes="state_type_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="state_type_of_item"/>
      </explicit>
    </entity>

    <entity name="state_type"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="state_type_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_state_type">
        <typename name="state_type"/>
      </explicit>
      <explicit
        name="role">
        <typename name="state_type_role"/>
      </explicit>
    </entity>

    <entity name="state_type_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_state_type">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="state_type"/>
      </explicit>
      <explicit
        name="related_state_type">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="state_type"/>
      </explicit>
    </entity>

    <entity name="general_property"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="general_property_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_property">
        <typename name="general_property"/>
      </explicit>
      <explicit
        name="related_property">
        <typename name="general_property"/>
      </explicit>
    </entity>

    <entity name="binary_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="environment"
    >
      <explicit
        name="syntactic_representation">
        <typename name="generic_variable"/>
      </explicit>
      <explicit
        name="semantics">
        <typename name="variable_semantics"/>
      </explicit>
    </entity>

    <entity name="generic_expression"
      abstract.supertype="YES"
      super.expression="ONEOF(simple_generic_expression, unary_generic_expression, binary_generic_expression, multiple_arity_generic_expression)"
    >
      <where
        label="WR1"
        expression="is_acyclic(SELF)">
      </where>
    </entity>

    <entity name="generic_literal"
      abstract.supertype="YES"
      supertypes="simple_generic_expression"
    >
    </entity>

    <entity name="generic_variable"
      abstract.supertype="YES"
      supertypes="simple_generic_expression"
    >
      <inverse
        name="interpretation"
        entity="environment"
        attribute="syntactic_representation">
      </inverse>
    </entity>

    <entity name="multiple_arity_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="simple_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
      super.expression="ONEOF(generic_literal, generic_variable)"
    >
    </entity>

    <entity name="unary_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operand">
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="variable_semantics"
      abstract.supertype="YES"
    >
    </entity>

    <entity name="variable"
      abstract.supertype="YES"
      supertypes="generic_variable"
      super.expression="ONEOF(numeric_variable, boolean_variable, string_variable)"
    >
    </entity>

    <entity name="identification_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="role">
        <typename name="identification_role"/>
      </explicit>
    </entity>

    <entity name="identification_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="abs_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="acos_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="asin_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="atan_function"
      supertypes="binary_function_call"
    >
    </entity>

    <entity name="cos_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="exp_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="int_value_function"
      supertypes="value_function"
    >
    </entity>

    <entity name="integer_defined_function"
      abstract.supertype="YES"
      supertypes="numeric_defined_function"
    >
    </entity>

    <entity name="length_function"
      supertypes="numeric_expression unary_generic_expression"
    >
      <explicit
        name="operand">
        <typename name="string_expression"/>
        <redeclaration
          entity-ref="unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="log_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="log10_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="log2_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="maximum_function"
      supertypes="multiple_arity_function_call"
    >
    </entity>

    <entity name="minimum_function"
      supertypes="multiple_arity_function_call"
    >
    </entity>

    <entity name="minus_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="numeric_defined_function"
      abstract.supertype="YES"
      supertypes="numeric_expression defined_function"
      super.expression="ONEOF(integer_defined_function, real_defined_function)"
    >
    </entity>

    <entity name="odd_function"
      supertypes="unary_boolean_expression"
    >
      <explicit
        name="operand">
        <typename name="numeric_expression"/>
        <redeclaration
          entity-ref="unary_generic_expression"/>
      </explicit>
      <where
        label="WR1"
        expression="is_int_expr(SELF\numeric_expression)">
      </where>
    </entity>

    <entity name="real_defined_function"
      abstract.supertype="YES"
      supertypes="numeric_defined_function"
    >
    </entity>

    <entity name="sin_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="square_root_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="tan_function"
      supertypes="unary_function_call"
    >
    </entity>

    <entity name="unary_function_call"
      abstract.supertype="YES"
      supertypes="unary_numeric_expression"
      super.expression="ONEOF(abs_function, minus_function, sin_function, cos_function, tan_function, asin_function, acos_function, exp_function, log_function, log2_function, log10_function, square_root_function)"
    >
    </entity>

    <entity name="value_function"
      supertypes="numeric_expression unary_generic_expression"
      super.expression="int_value_function"
    >
      <explicit
        name="operand">
        <typename name="string_expression"/>
        <redeclaration
          entity-ref="unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="named_variable_semantics"
      supertypes="variable_semantics"
    >
    </entity>

    <entity name="measure_with_unit"
      super.expression="ONEOF(length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit)"
    >
      <explicit
        name="value_component">
        <typename name="measure_value"/>
      </explicit>
      <explicit
        name="unit_component">
        <typename name="unit"/>
      </explicit>
      <where
        label="WR1"
        expression="valid_units(SELF)">
      </where>
    </entity>

    <entity name="product_category"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="product_category_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="category">
        <typename name="product_category"/>
      </explicit>
      <explicit
        name="sub_category">
        <typename name="product_category"/>
      </explicit>
      <where
        label="WR1"
        expression="acyclic_product_category_relationship(SELF, [SELF.sub_category])">
      </where>
    </entity>

    <entity name="product"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="product_context"/>
      </explicit>
    </entity>

    <entity name="product_definition"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="formation">
        <typename name="product_definition_formation"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename name="product_definition_context"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="product_definition_formation"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="of_product">
        <typename name="product"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="id"/>
        <unique.attribute
          attribute="of_product"/>
      </unique>
    </entity>

    <entity name="product_related_product_category"
      supertypes="product_category"
    >
      <explicit
        name="products">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="product"/>
      </explicit>
    </entity>

    <entity name="product_definition_formation_relationship"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_definition_formation"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_definition_formation"/>
      </explicit>
    </entity>

    <entity name="product_definition_context"
      supertypes="application_context_element"
    >
      <explicit
        name="life_cycle_stage">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="name_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="label"/>
      </explicit>
      <explicit
        name="named_item">
        <typename name="name_attribute_select"/>
      </explicit>
    </entity>

    <entity name="product_definition_context_association"
    >
      <explicit
        name="definition">
        <typename name="product_definition"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename name="product_definition_context"/>
      </explicit>
      <explicit
        name="role">
        <typename name="product_definition_context_role"/>
      </explicit>
    </entity>

    <entity name="general_property_association"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="base_definition">
        <typename name="general_property"/>
      </explicit>
      <explicit
        name="derived_definition">
        <typename name="derived_property_select"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(derived_definition, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;GENERAL_PROPERTY_ASSOCIATION.&apos; + &apos;DERIVED_DEFINITION&apos;)) = 1">
      </where>
      <where
        label="WR2"
        expression="derived_definition.name = base_definition.name">
      </where>
    </entity>

    <entity name="group_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_group">
        <typename name="group"/>
      </explicit>
      <explicit
        name="related_group">
        <typename name="group"/>
      </explicit>
    </entity>

    <entity name="group_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_group">
        <typename name="group"/>
      </explicit>
      <derived
        name="role"
        expression="get_role(SELF)">
        <typename name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.ITEM_WITH_ROLE&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="concurrent_task_element"
      supertypes="task_element"
    >
    </entity>

    <entity name="end_task"
      supertypes="task_element"
    >
    </entity>

    <entity name="exit_loop"
      supertypes="task_element"
    >
    </entity>

    <entity name="looping_element"
      supertypes="task_element"
    >
    </entity>

    <entity name="task_element_sequence"
      supertypes="task_element"
    >
    </entity>

    <entity name="action_method_assignment_relationship"
    >
      <explicit
        name="relating_assignment">
        <typename name="action_method_assignment"/>
      </explicit>
      <explicit
        name="related_assignment">
        <typename name="action_method_assignment"/>
      </explicit>
    </entity>

    <entity name="functional_model"
      supertypes="representation"
    >
      <explicit
        name="context_of_items">
        <typename name="functional_representation_context"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="functional_representation_item"/>
        <redeclaration
          entity-ref="representation"/>
      </explicit>
    </entity>

    <entity name="functional_representation_context"
      supertypes="representation_context"
    >
    </entity>

    <entity name="functional_representation_item"
      supertypes="representation_item"
    >
      <explicit
        name="item">
        <typename name="action_method"/>
      </explicit>
    </entity>

    <entity name="action_resource_requirement"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="kind">
        <typename name="resource_requirement_type"/>
      </explicit>
      <explicit
        name="operations">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="characterized_action_definition"/>
      </explicit>
    </entity>

    <entity name="action_resource_requirement_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_action_resource_requirement">
        <typename name="action_resource_requirement"/>
      </explicit>
      <explicit
        name="related_action_resource_requirement">
        <typename name="action_resource_requirement"/>
      </explicit>
      <where
        label="WR1"
        expression="relating_action_resource_requirement :&lt;&gt;: related_action_resource_requirement">
      </where>
    </entity>

    <entity name="requirement_for_action_resource"
      supertypes="action_resource_requirement"
    >
      <explicit
        name="resources">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="action_resource"/>
      </explicit>
    </entity>

    <entity name="resource_property"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="resource">
        <typename name="characterized_resource_definition"/>
      </explicit>
    </entity>

    <entity name="resource_requirement_type"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="resource_property_representation"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="property">
        <typename name="resource_property"/>
      </explicit>
      <explicit
        name="representation">
        <typename name="representation"/>
      </explicit>
    </entity>

    <entity name="compound_representation_item"
      supertypes="representation_item"
    >
      <explicit
        name="item_element">
        <typename name="compound_item_definition"/>
      </explicit>
    </entity>

    <entity name="representation_map"
    >
      <explicit
        name="mapping_origin">
        <typename name="representation_item"/>
      </explicit>
      <explicit
        name="mapped_representation">
        <typename name="representation"/>
      </explicit>
      <inverse
        name="map_usage"
        entity="mapped_item"
        attribute="mapping_source">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
      <where
        label="WR1"
        expression="item_in_context(SELF.mapping_origin, SELF.mapped_representation.context_of_items)">
      </where>
    </entity>

    <entity name="product_definition_with_associated_documents"
      supertypes="product_definition"
    >
      <explicit
        name="documentation_ids">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="document"/>
      </explicit>
    </entity>

    <entity name="amount_of_substance_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="amount_of_substance_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="area_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.AREA_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="area_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 2.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="celsius_temperature_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="context_dependent_unit"
      supertypes="named_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="conversion_based_unit"
      supertypes="named_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="conversion_factor">
        <typename name="measure_with_unit"/>
      </explicit>
    </entity>

    <entity name="derived_unit"
    >
      <explicit
        name="elements">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="derived_unit_element"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="(SIZEOF(elements) &gt; 1) OR ((SIZEOF(elements) = 1) AND (elements[1].exponent &lt;&gt; 1.000000))">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="derived_unit_element"
    >
      <explicit
        name="unit">
        <typename name="named_unit"/>
      </explicit>
      <explicit
        name="exponent">
        <builtintype type="REAL"
        />
      </explicit>
    </entity>

    <entity name="dimensional_exponents"
    >
      <explicit
        name="length_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="mass_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="time_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="electric_current_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="thermodynamic_temperature_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="amount_of_substance_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="luminous_intensity_exponent">
        <builtintype type="REAL"
        />
      </explicit>
    </entity>

    <entity name="electric_current_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.ELECTRIC_CURRENT_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="electric_current_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="length_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.LENGTH_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="length_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 1.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="luminous_intensity_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.LUMINOUS_INTENSITY_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="luminous_intensity_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.000000)">
      </where>
    </entity>

    <entity name="mass_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.MASS_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="mass_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 1.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="named_unit"
      super.expression="ONEOF(si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF(length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit)"
    >
      <explicit
        name="dimensions">
        <typename name="dimensional_exponents"/>
      </explicit>
    </entity>

    <entity name="plane_angle_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.PLANE_ANGLE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="plane_angle_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="ratio_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.RATIO_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="ratio_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="si_unit"
      supertypes="named_unit"
    >
      <explicit
        name="prefix"
        optional="YES">
        <typename name="si_prefix"/>
      </explicit>
      <explicit
        name="name">
        <typename name="si_unit_name"/>
      </explicit>
      <derived
        name="dimensions"
        expression="dimensions_for_si_unit(name)">
        <typename name="dimensional_exponents"/>
        <redeclaration
          entity-ref="named_unit"/>
      </derived>
    </entity>

    <entity name="solid_angle_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.SOLID_ANGLE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="solid_angle_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="thermodynamic_temperature_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="thermodynamic_temperature_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="time_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.TIME_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="time_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 1.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="volume_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;SYSTEM_BEHAVIOUR_MIM_LF.VOLUME_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="volume_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="action_method_with_associated_documents"
      supertypes="action_method"
    >
      <explicit
        name="documents">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="document"/>
      </explicit>
    </entity>

    <entity name="action_method_with_associated_documents_constrained"
      supertypes="action_method_with_associated_documents"
    >
      <explicit
        name="usage_constraints">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="document_usage_constraint"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(QUERY(item &lt;* usage_constraints | NOT (item.source IN SELF\action_method_with_associated_documents.documents))) = 0">
      </where>
    </entity>

    <entity name="action_method_to_select_from"
      supertypes="action_method"
    >
      <explicit
        name="number_of_elements">
        <typename name="count_measure"/>
      </explicit>
      <where
        label="WR1"
        expression="number_of_elements &gt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.ACTION_METHOD_RELATIONSHIP.RELATING_METHOD&apos;)) &gt;= number_of_elements">
      </where>
    </entity>

    <entity name="process_or_process_relationship_effectivity"
      supertypes="effectivity"
    >
      <explicit
        name="effective_process_or_process_relationship">
        <typename name="process_or_process_relationship"/>
      </explicit>
    </entity>

    <entity name="serial_action_method"
      supertypes="action_method_relationship"
    >
    </entity>

    <entity name="sequential_method"
      supertypes="serial_action_method"
    >
      <explicit
        name="sequence_position">
        <typename name="count_measure"/>
      </explicit>
    </entity>

    <entity name="concurrent_action_method"
      supertypes="action_method_relationship"
    >
    </entity>

    <entity name="context_dependent_action_method_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="relating_relationship">
        <typename name="action_method_relationship"/>
      </explicit>
      <explicit
        name="related_relationship">
        <typename name="action_method_relationship"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="relating_relationship"/>
        <unique.attribute
          attribute="related_relationship"/>
      </unique>
      <where
        label="WR1"
        expression="relating_relationship.relating_method :=: related_relationship.relating_method">
      </where>
    </entity>

    <entity name="context_dependent_action_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="relating_relationship">
        <typename name="action_relationship"/>
      </explicit>
      <explicit
        name="related_relationship">
        <typename name="action_relationship"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="relating_relationship"/>
        <unique.attribute
          attribute="related_relationship"/>
      </unique>
      <where
        label="WR1"
        expression="relating_relationship.relating_action :=: related_relationship.relating_action">
      </where>
    </entity>

    <entity name="relationship_condition"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="applicable_relationships">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="relationship_with_condition"/>
      </explicit>
      <explicit
        name="condition_description">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="action_resource"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="usage">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="supported_item"/>
      </explicit>
      <explicit
        name="kind">
        <typename name="action_resource_type"/>
      </explicit>
    </entity>

    <entity name="action_resource_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_resource">
        <typename name="action_resource"/>
      </explicit>
      <explicit
        name="related_resource">
        <typename name="action_resource"/>
      </explicit>
    </entity>

    <entity name="action_resource_type"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="value_representation_item"
      supertypes="representation_item"
    >
      <explicit
        name="value_component">
        <typename name="measure_value"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(QUERY(rep &lt;* using_representations(SELF) | NOT (&apos;SYSTEM_BEHAVIOUR_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT&apos; IN TYPEOF(rep.context_of_items)))) = 0">
      </where>
    </entity>

    <entity name="classification_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="description_text_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="description">
        <typename name="description_text"/>
      </explicit>
    </entity>

    <entity name="description_text"
    >
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="document_usage_constraint"
    >
      <explicit
        name="source">
        <typename name="document"/>
      </explicit>
      <explicit
        name="subject_element">
        <typename name="label"/>
      </explicit>
      <explicit
        name="subject_element_value">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="document_usage_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="document_type"
    >
      <explicit
        name="product_data_type">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="state_type_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="product_context"
      supertypes="application_context_element"
    >
      <explicit
        name="discipline_type">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="application_context_element"
      super.expression="ONEOF(product_context, product_definition_context)"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename name="application_context"/>
      </explicit>
    </entity>

    <entity name="application_context"
    >
      <explicit
        name="application">
        <typename name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <inverse
        name="context_elements"
        entity="application_context_element"
        attribute="frame_of_reference">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="product_definition_context_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="mapped_item"
      supertypes="representation_item"
    >
      <explicit
        name="mapping_source">
        <typename name="representation_map"/>
      </explicit>
      <explicit
        name="mapping_target">
        <typename name="representation_item"/>
      </explicit>
      <where
        label="WR1"
        expression="acyclic_mapped_representation(using_representations(SELF), [SELF])">
      </where>
    </entity>

    <entity name="effectivity"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="action_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_action">
        <typename name="action"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="action"/>
      </explicit>
    </entity>

    <entity name="action"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="chosen_method">
        <typename name="action_method"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <function name="valid_measure_value">
      <parameter name="m">
        <typename name="measure_value"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  IF (&apos;REAL&apos; IN TYPEOF(m)) THEN
    RETURN (m &gt; 0.000000);
  ELSE
    IF (&apos;INTEGER&apos; IN TYPEOF(m)) THEN
      RETURN (m &gt; 0);
    ELSE
      RETURN (TRUE);
    END_IF;
  END_IF;
      </algorithm>
    </function>

    <function name="is_SQL_mappable">
      <parameter name="arg">
        <typename name="expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    i : INTEGER;
  END_LOCAL;

  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SIMPLE_NUMERIC_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SQL_MAPPABLE_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.MINUS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (is_SQL_mappable(arg\unary_numeric_expression.operand));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ABS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.TAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ASIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ACOS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ATAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.EXP_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG2_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG10_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SQUARE_ROOT_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.VALUE_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LENGTH_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.PLUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MULT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MAXIMUM_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MINIMUM_FUNCTION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.operands);
      IF NOT is_SQL_mappable(arg\multiple_arity_numeric_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MINUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SLASH_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (is_SQL_mappable(arg\binary_numeric_expression.operands[1]) AND is_SQL_mappable(arg\binary_numeric_expression.operands[2]));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.DIV_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MOD_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.POWER_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SIMPLE_BOOLEAN_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.NOT_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (is_SQL_mappable(arg\unary_generic_expression.operand));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ODD_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.XOR_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.AND_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.OR_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\multiple_arity_boolean_expression.operands);
      IF NOT is_SQL_mappable(arg\multiple_arity_boolean_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.EQUALS_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (is_SQL_mappable(arg\binary_generic_expression.operands[1]) AND is_SQL_mappable(arg\binary_generic_expression.operands[2]));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_GREATER&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_GREATER_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_LESS&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_LESS_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COMPARISON_NOT_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LIKE_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (is_SQL_mappable(arg\comparison_expression.operands[1]) AND is_SQL_mappable(arg\comparison_expression.operands[2]));
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.INTERVAL_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (is_SQL_mappable(arg\interval_expression.interval_low) AND is_SQL_mappable(arg\interval_expression.interval_high) AND is_SQL_mappable(arg\interval_expression.interval_item));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.NUMERIC_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.BOOLEAN_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SIMPLE_STRING_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.INDEX_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SUBSTRING_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.CONCAT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.FORMAT_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  RETURN (FALSE);
      </algorithm>
    </function>

    <function name="get_id_value">
      <parameter name="obj">
        <typename name="id_attribute_select"/>
      </parameter>
      <typename name="identifier"/>
      <algorithm>
  LOCAL
    id_bag : BAG OF id_attribute := (USEDIN(obj, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.&apos; + &apos;IDENTIFIED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(id_bag) = 1 THEN
    RETURN (id_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_description_value">
      <parameter name="obj">
        <typename name="description_attribute_select"/>
      </parameter>
      <typename name="text"/>
      <algorithm>
  LOCAL
    description_bag : BAG OF description_attribute := (USEDIN(obj, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.&apos; + &apos;DESCRIBED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(description_bag) = 1 THEN
    RETURN (description_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_name_value">
      <parameter name="obj">
        <typename name="name_attribute_select"/>
      </parameter>
      <typename name="label"/>
      <algorithm>
  LOCAL
    name_bag : BAG OF name_attribute := (USEDIN(obj, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.&apos; + &apos;NAMED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(name_bag) = 1 THEN
    RETURN (name_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_role">
      <parameter name="obj">
        <typename name="role_select"/>
      </parameter>
      <typename name="object_role"/>
      <algorithm>
  LOCAL
    role_bag : BAG OF role_association := (USEDIN(obj, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.&apos; + &apos;ITEM_WITH_ROLE&apos;));
  END_LOCAL;

  IF SIZEOF(role_bag) = 1 THEN
    RETURN (role_bag[1].role);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="using_representations">
      <parameter name="item">
        <typename name="founded_item_select"/>
      </parameter>
      <aggregate type="SET"
      />
      <typename name="representation"/>
      <algorithm>
  LOCAL
    results : SET OF representation;
    result_bag : BAG OF representation;
    intermediate_items : SET OF founded_item_select;
  END_LOCAL;

  results := [];
  result_bag := USEDIN(item, &apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION.ITEMS&apos;);
  IF SIZEOF(result_bag) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(result_bag);
      results := results + result_bag[i];
    END_REPEAT;
  END_IF;
  intermediate_items := using_items(item, []);
  IF SIZEOF(intermediate_items) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(intermediate_items);
      result_bag := USEDIN(intermediate_items[i], &apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION.ITEMS&apos;);
      IF SIZEOF(result_bag) &gt; 0 THEN
        REPEAT j := 1 TO HIINDEX(result_bag);
          results := results + result_bag[j];
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (results);
      </algorithm>
    </function>

    <function name="using_items">
      <parameter name="item">
        <typename name="founded_item_select"/>
      </parameter>
      <parameter name="checked_items">
        <aggregate type="SET"
        />
        <typename name="founded_item_select"/>
      </parameter>
      <aggregate type="SET"
      />
      <typename name="founded_item_select"/>
      <algorithm>
  LOCAL
    new_check_items : SET OF founded_item_select;
    result_items : SET OF founded_item_select;
    next_items : SET OF founded_item_select;
  END_LOCAL;

  result_items := [];
  new_check_items := checked_items + item;
  next_items := QUERY(z &lt;* bag_to_set(USEDIN(item, &apos;&apos;)) | (&apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION_ITEM&apos; IN TYPEOF(z)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.FOUNDED_ITEM&apos; IN TYPEOF(z)));
  IF SIZEOF(next_items) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(next_items);
      IF NOT (next_items[i] IN new_check_items) THEN
        result_items := result_items + next_items[i] + using_items(next_items[i], new_check_items);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (result_items);
      </algorithm>
    </function>

    <function name="bag_to_set">
      <parameter name="the_bag">
        <aggregate type="BAG"
        />
        <builtintype type="GENERIC"
          typelabel="intype"
        />
      </parameter>
      <aggregate type="SET"
      />
      <builtintype type="GENERIC"
        typelabel="intype"
      />
      <algorithm>
  LOCAL
    the_set : SET OF GENERIC:intype := [];
  END_LOCAL;

  IF SIZEOF(the_bag) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN (the_set);
      </algorithm>
    </function>

    <function name="is_int_expr">
      <parameter name="arg">
        <typename name="numeric_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    i : INTEGER;
  END_LOCAL;

  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.INT_LITERAL&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.REAL_LITERAL&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.INT_NUMERIC_VARIABLE&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.REAL_NUMERIC_VARIABLE&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.ABS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (is_int_expr(arg\unary_numeric_expression.operand));
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.MINUS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (is_int_expr(arg\unary_numeric_expression.operand));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.COS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.TAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ASIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ACOS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.ATAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.EXP_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG2_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.LOG10_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SQUARE_ROOT_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.PLUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MULT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MAXIMUM_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MINIMUM_FUNCTION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.operands);
      IF NOT is_int_expr(arg\multiple_arity_numeric_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MINUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.POWER_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (is_int_expr(arg\binary_numeric_expression.operands[1]) AND is_int_expr(arg\binary_numeric_expression.operands[2]));
  END_IF;
  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.DIV_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;SYSTEM_BEHAVIOUR_MIM_LF.MOD_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SLASH_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.LENGTH_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.VALUE_FUNCTION&apos; IN TYPEOF(arg) THEN
    IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.INT_VALUE_FUNCTION&apos; IN TYPEOF(arg) THEN
      RETURN (TRUE);
    ELSE
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.INTEGER_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.REAL_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.BOOLEAN_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.STRING_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  RETURN (FALSE);
      </algorithm>
    </function>

    <function name="is_acyclic">
      <parameter name="arg">
        <typename name="generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  RETURN (acyclic(arg, []));
      </algorithm>
    </function>

    <function name="acyclic">
      <parameter name="arg1">
        <typename name="generic_expression"/>
      </parameter>
      <parameter name="arg2">
        <aggregate type="SET"
        />
        <typename name="generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    result : BOOLEAN;
  END_LOCAL;

  IF (&apos;SYSTEM_BEHAVIOUR_MIM_LF.SIMPLE_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1)) THEN
    RETURN (TRUE);
  END_IF;
  IF arg1 IN arg2 THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.UNARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (acyclic(arg1\unary_generic_expression.operand, arg2 + [arg1]));
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.BINARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (acyclic(arg1\binary_generic_expression.operands[1], arg2 + [arg1]) AND acyclic(arg1\binary_generic_expression.operands[2], arg2 + [arg1]));
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    result := TRUE;
    REPEAT i := 1 TO SIZEOF(arg1\multiple_arity_generic_expression.operands);
      result := result AND acyclic(arg1\multiple_arity_generic_expression.operands[i], arg2 + [arg1]);
    END_REPEAT;
    RETURN (result);
  END_IF;
      </algorithm>
    </function>

    <function name="valid_units">
      <parameter name="m">
        <typename name="measure_with_unit"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.LENGTH_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.MASS_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.TIME_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.ELECTRIC_CURRENT_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.CELSIUS_TEMPERATURE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.LUMINOUS_INTENSITY_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.PLANE_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.SOLID_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.AREA_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.VOLUME_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.RATIO_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.POSITIVE_LENGTH_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="derive_dimensional_exponents">
      <parameter name="x">
        <typename name="unit"/>
      </parameter>
      <typename name="dimensional_exponents"/>
      <algorithm>
  LOCAL
    result : dimensional_exponents := dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
  END_LOCAL;

  IF &apos;SYSTEM_BEHAVIOUR_MIM_LF.DERIVED_UNIT&apos; IN TYPEOF(x) THEN
    REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
      result.length_exponent := result.length_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.length_exponent);
      result.mass_exponent := result.mass_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.mass_exponent);
      result.time_exponent := result.time_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.time_exponent);
      result.electric_current_exponent := result.electric_current_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.electric_current_exponent);
      result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.thermodynamic_temperature_exponent);
      result.amount_of_substance_exponent := result.amount_of_substance_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.amount_of_substance_exponent);
      result.luminous_intensity_exponent := result.luminous_intensity_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.luminous_intensity_exponent);
    END_REPEAT;
  ELSE
    result := x.dimensions;
  END_IF;
  RETURN (result);
      </algorithm>
    </function>

    <function name="acyclic_product_category_relationship">
      <parameter name="relation">
        <typename name="product_category_relationship"/>
      </parameter>
      <parameter name="children">
        <aggregate type="SET"
        />
        <typename name="product_category"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    x : SET OF product_category_relationship;
    local_children : SET OF product_category;
  END_LOCAL;

  REPEAT i := 1 TO HIINDEX(children);
    IF relation.category :=: children[i] THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  x := bag_to_set(USEDIN(relation.category, &apos;SYSTEM_BEHAVIOUR_MIM_LF.&apos; + &apos;PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY&apos;));
  local_children := children + relation.category;
  IF SIZEOF(x) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="acyclic_mapped_representation">
      <parameter name="parent_set">
        <aggregate type="SET"
        />
        <typename name="representation"/>
      </parameter>
      <parameter name="children_set">
        <aggregate type="SET"
        />
        <typename name="representation_item"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    x : SET OF representation_item;
    y : SET OF representation_item;
  END_LOCAL;

  x := QUERY(z &lt;* children_set | &apos;SYSTEM_BEHAVIOUR_MIM_LF.MAPPED_ITEM&apos; IN TYPEOF(z));
  IF SIZEOF(x) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      IF x[i]\mapped_item.mapping_source.mapped_representation IN parent_set THEN
        RETURN (FALSE);
      END_IF;
      IF NOT acyclic_mapped_representation(parent_set + x[i]\mapped_item.mapping_source.mapped_representation, x[i]\mapped_item.mapping_source.mapped_representation.items) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  x := children_set - x;
  IF SIZEOF(x) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      y := QUERY(z &lt;* bag_to_set(USEDIN(x[i], &apos;&apos;)) | &apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION_ITEM&apos; IN TYPEOF(z));
      IF NOT acyclic_mapped_representation(parent_set, y) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="item_in_context">
      <parameter name="item">
        <typename name="representation_item"/>
      </parameter>
      <parameter name="cntxt">
        <typename name="representation_context"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    y : BAG OF representation_item;
  END_LOCAL;

  IF SIZEOF(USEDIN(item, &apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION.ITEMS&apos;) * cntxt.representations_in_context) &gt; 0 THEN
    RETURN (TRUE);
  ELSE
    y := QUERY(z &lt;* USEDIN(item, &apos;&apos;) | &apos;SYSTEM_BEHAVIOUR_MIM_LF.REPRESENTATION_ITEM&apos; IN TYPEOF(z));
    IF SIZEOF(y) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(y);
        IF item_in_context(y[i], cntxt) THEN
          RETURN (TRUE);
        END_IF;
      END_REPEAT;
    END_IF;
  END_IF;
  RETURN (FALSE);
      </algorithm>
    </function>

    <function name="dimensions_for_si_unit">
      <parameter name="n">
        <typename name="si_unit_name"/>
      </parameter>
      <typename name="dimensional_exponents"/>
      <algorithm>
  CASE n OF 
    metre:
      RETURN (dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    gram:
      RETURN (dimensional_exponents(0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    second:
      RETURN (dimensional_exponents(0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    ampere:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    kelvin:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000));
    mole:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000));
    candela:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    radian:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    steradian:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    hertz:
      RETURN (dimensional_exponents(0.000000, 0.000000,  - 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    newton:
      RETURN (dimensional_exponents(1.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    pascal:
      RETURN (dimensional_exponents( - 1.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    joule:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    watt:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    coulomb:
      RETURN (dimensional_exponents(0.000000, 0.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    volt:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    farad:
      RETURN (dimensional_exponents( - 2.000000,  - 1.000000, 4.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    ohm:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000,  - 2.000000, 0.000000, 0.000000, 0.000000));
    siemens:
      RETURN (dimensional_exponents( - 2.000000,  - 1.000000, 3.000000, 2.000000, 0.000000, 0.000000, 0.000000));
    weber:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    tesla:
      RETURN (dimensional_exponents(0.000000, 1.000000,  - 2.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    henry:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000,  - 2.000000, 0.000000, 0.000000, 0.000000));
    degree_Celsius:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000));
    lumen:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    lux:
      RETURN (dimensional_exponents( - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    becquerel:
      RETURN (dimensional_exponents(0.000000, 0.000000,  - 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    gray:
      RETURN (dimensional_exponents(2.000000, 0.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    sievert:
      RETURN (dimensional_exponents(2.000000, 0.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    OTHERWISE:
      RETURN (?);
  END_CASE;
      </algorithm>
    </function>

    <function name="dependently_instantiated">
      <parameter name="set_of_input_instances">
        <aggregate type="SET"
        />
        <builtintype type="GENERIC"
          typelabel="igen"
        />
      </parameter>
      <parameter name="set_of_input_types">
        <aggregate type="SET"
        />
        <builtintype type="STRING"
        />
      </parameter>
      <parameter name="previous_in_chain">
        <aggregate type="LIST"
        />
        <builtintype type="GENERIC"
          typelabel="cgen"
        />
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    number_of_input_instances : INTEGER;
    number_of_referring_instances : INTEGER;
    bag_of_referring_instances : BAG OF GENERIC:igen := [];
    dependently_instantiated_flag : BOOLEAN;
    previous_in_chain_plus : LIST OF GENERIC:cgen := [];
    result : BOOLEAN := TRUE;
    set_of_types : SET OF STRING := [];
  END_LOCAL;

  IF EXISTS(set_of_input_instances) THEN
    number_of_input_instances := SIZEOF(set_of_input_instances);
    set_of_input_types := set_of_input_types + &apos;GENERIC&apos;;
    REPEAT i := 1 TO number_of_input_instances;
      bag_of_referring_instances := USEDIN(set_of_input_instances[i], &apos;&apos;);
      IF EXISTS(bag_of_referring_instances) THEN
        number_of_referring_instances := SIZEOF(bag_of_referring_instances);
        dependently_instantiated_flag := FALSE;
        REPEAT j := 1 TO number_of_referring_instances;
          set_of_types := TYPEOF(bag_of_referring_instances[j]);
          IF set_of_types &lt;= set_of_input_types THEN
            IF NOT (bag_of_referring_instances[j] IN previous_in_chain) THEN
              previous_in_chain_plus := previous_in_chain + set_of_input_instances[i];
              IF dependently_instantiated([bag_of_referring_instances[j]], set_of_input_types, previous_in_chain_plus) THEN
                dependently_instantiated_flag := TRUE;
                ESCAPE;
              ELSE
                SKIP;
              END_IF;
            END_IF;
          ELSE
            dependently_instantiated_flag := TRUE;
            ESCAPE;
          END_IF;
        END_REPEAT;
        IF NOT dependently_instantiated_flag THEN
          RETURN (FALSE);
        END_IF;
      ELSE
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  ELSE
    RETURN (FALSE);
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <rule name="validate_dependently_instantiable_entity_data_types"
      appliesto="action action_relationship application_context application_context_element classification_role description_text description_text_assignment document_type document_usage_constraint document_usage_role effectivity mapped_item product_context product_definition_context_role state_type_role">
      <algorithm>
  LOCAL
    number_of_input_instances : INTEGER;
    previous_in_chain : LIST OF GENERIC := [];
    set_of_input_types : SET OF STRING := [];
    all_instances : SET OF GENERIC := [];
  END_LOCAL;

  all_instances := ;
  number_of_input_instances := SIZEOF(all_instances);
  REPEAT i := 1 TO number_of_input_instances;
    set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
  END_REPEAT;
      </algorithm>
      <where
        label="WR1"
        expression="dependently_instantiated(all_instances, set_of_input_types, previous_in_chain)">
      </where>
    </rule>

  </schema>

</express>
