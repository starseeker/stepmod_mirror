<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.10 2007/05/15 14:59:49 abf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="system_behaviour"
   part="1448"
   version="1"
   sc4.working_group="3"
   wg.number="2334"
   wg.number.arm="2335"
   wg.number.mim="2336"
   wg.number.arm_lf="2337"
   wg.number.mim_lf="2338"
   checklist.internal_review="2356"
   checklist.project_leader="2357"
   checklist.convener="2355"
   status="CD-TS"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2007/05/15 14:59:49 $"
   rcs.revision="$Revision: 1.10 $"
   development.folder="dvlp">

 <keywords>
    module. systems engineering, system behaviour, function based behaviour, state based behaviour
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead2"/>
   <editor ref="ap233.editor2"/>  
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of System behaviour which covers both Function Based behaviour and State Based Behaviour. This may be extended in later editions.
   </p>  
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>Function based behaviour</li>
   <li>State based behaviour</li>
   <li>Functional breakdown</li>
 </inscope>

 <!-- Items out of scope -->

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   </express-g>
 </arm>

<!-- ARM long form (optional) --> 
<!-- If not required, delete this section and the following files: 
           arm_lf.xml 
           armexpg_lf1.gif 
           armexpg_lf1.xml --> 
<arm_lf> 
 <!-- Note ARM long form EXPRESS is in arm_lf.xml --> 
 <express-g> 
  <imgfile file="armexpg_lf1.xml"/> 
 </express-g> 
</arm_lf> 

 <!-- Clause 5.1 Mapping specification
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table>
 -->
 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

<!-- MIM long form (optional) --> 
<!-- If not required, delete this section and the following files: 
          mim_lf.xml 
          mimexpg_lf1.gif 
          mimexpg_lf1.xml --> 
<mim_lf> 
 <!-- Note MIM long form EXPRESS is in mim_lf.xml --> 
 <express-g> 
  <imgfile file="mimexpg_lf1.xml"/> 
 </express-g> 
</mim_lf> 

   <usage_guide>
   
   <p>Behaviour is the dynamic response to excitation of an engineering thing. The emergent properties 
   of the associated response can be either dynamic, what it does in response to excitation, or 
   static, associated with its composition and structure. Behaviour is the subclass of emergent property.
   that includes what it does in response to excitation and excludes static properties.</p>

   <p>Function Based Behaviour and  State Based Behaviour are two different and complimentary views of 
   what a system is to do in response to excitation, (J. Long, 1994). Each has advantages for modeling 
   particular problems and engineers have personal preferences about the two representations. </p>

   <p>State Based Behaviour is a representation of what a system is to do based on descriptions 
   of its relevant characteristics or conditions at particular intervals. What a thing does 
   can be described by citing a set of significant conditions.</p>

   <p>Function Based Behaviour is a representation of what a system is to do based on descriptions 
   of the transformations it performs. What a thing does can be described by citing a set of significant 
   transformations it performs. In science and engineering all changes can be represented by transformations 
   that follow well known transformation laws like conservation of matter and energy.</p>
   
   <p>The AP233 EXPRESS model for system behaviour is very complex.</p>
   
   	<p>The modules used and all of their associated USE FROM relationships for system behaviour representation 
	within AP233 are shown below.  Code 
	yellow implies all USE FROM's are shown for the module identified, Code green implies more 
	USE FROM's exist in the 
	module identified, Code blue identifies the extensible select type defined by the
	module shown.</p>
	
	<p>In Annex F of 
	<express_ref linkend="function_based_behaviour:arm:Function_based_behaviour_arm"/>
	and Annex F of
	<express_ref linkend="state_based_behaviour:arm:State_based_behaviour_arm"/>
	and effort to identify what has been enabled by this EXPRESS model is provided.  No attempt is 
	made therein to provide a mapping between what is enabled vs. enabling elements.
	</p>
	
	<figure>
	<title>Module USE FROM relationships for AP233 Behaviour representation </title>
	<img src="BehaviourConcepts.jpg"/>		</figure>
	
	<p>The following modules have been developed to support AP233's system behaviour modeling needs.
	Their associated USE FROM connectivity is shown in the above figure.
	</p>
	
	<ul>
	<li>
        <module_ref linkend="behaviour_description_assignment:introduction">
          Behaviour_description_assignment_arm</module_ref>
        (ISO 10303-1483);
        </li>

	<li>
        <module_ref linkend="behaviour_identification_and_version:introduction">
          Behaviour_identification_and_version_arm</module_ref>
        (ISO 10303-1482);
        </li>

	<li>
        <module_ref linkend="behaviour_view_definition:introduction">
          Behaviour_view_definition_arm</module_ref>
        (ISO 10303-1481);
        </li>

	<li>
        <module_ref linkend="description_assignment:introduction">
          Description_assignment_arm</module_ref>
        (ISO 10303-1473);
        </li>

	<li>
        <module_ref linkend="expression_assignment:introduction">
          Expression_assignment_arm</module_ref>
        (ISO 10303-1491);
        </li>

	<li>
        <module_ref linkend="extended_task_element:introduction">
          Extended_task_element_arm</module_ref>
        (ISO 10303-1479);
        </li>

	<li>
        <module_ref linkend="external_functional_model:introduction">
          External_functional_model_arm</module_ref>
        (ISO 10303-1478);
        </li>

	<li>
        <module_ref linkend="external_state_based_behaviour_model:introduction">
          External_state_based_behaviour_model_arm</module_ref>
        (ISO 10303-1468);
        </li>

	<li>
        <module_ref linkend="foundation_state_definition:introduction">
          Foundation_state_definition_arm</module_ref>
        (ISO 10303-1469);
        </li>

	<li>
        <module_ref linkend="function_based_behaviour_representation:introduction">
          Function_based_behaviour_representation_arm</module_ref>
        (ISO 10303-1492);
        </li>

	<li>
        <module_ref linkend="general_model_parameter:introduction">
          General_model_parameter_arm</module_ref>
        (ISO 10303-1472);
        </li>

	<li>
        <module_ref linkend="parameter_value_specification:introduction">
          Parameter_value_specification_arm</module_ref>
        (ISO 10303-1470);
        </li>

	<li>
        <module_ref linkend="state_based_behaviour_representation:introduction">
          State_based_behaviour_representation_arm</module_ref>
        (ISO 10303-1471);
        </li>

	<li>
        <module_ref linkend="task_element:introduction">
          Task_element_arm</module_ref>
        (ISO 10303-1480);
        </li>

	<li>
        <module_ref linkend="textual_expression_representation:introduction">
          Textual_expression_representation_arm</module_ref>
        (ISO 10303-1367);
        </li>
	</ul>
	
	<p><b>Note:</b></p>
	
	<p>There are no type extends lists placed in this module.  The reason for 
	this is that the modelling paradigms of Function Based and State Based 
	Behaviour are very different and hence are rarely used in a closely coupled 
	manner at the abstraction level of "system behaviour".  All necessary type 
	extends are placed in the respective Function Based and State Based 
	Behaviour modules.</p>
	
</usage_guide>

</module>
