<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: issues.xml,v 1.7 2004/09/24 05:39:07 robbod Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../../xsl/projmg/issues_file.xsl"?>
<!DOCTYPE issues SYSTEM "../../../../dtd/projmg/issues.dtd">
<issues module="system_breakdown">
	<!--
Description of how the issues files is given in: stepmod\help\issues.htm
 id - an identifer of the isssue unique to this file
 type - the primary XML element in module.xml that the issue is against.
        Either: 
            general | keywords | contacts | purpose |
            inscope | outscope | normrefs | definition |
            abbreviations | arm | armexpg | arm_lf |
            armexpg_lf | mapping_table | mim  | mimexpg |
            mim_lf | mimexpg_lf | usage_guide | bibliography
 linkend - the target of the comment 
 category - editorial | minor_technical | major_technical | repository 
 by - person raising the issue
 date - date issue raised yy-mm-dd
 status - status of issue. Either "open" or "closed"

Comment - is a comment raised by someone about the issue

<issue
  id=""
  type=""
  linkend=""
  category=""
  by=""
  date=""
  status="open">
  <description>

   </description>

<comment
   by="" 
   date="">
<description>
</description>
</comment>
 </issue>
-->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- +++++++++++++++++++   ISSUES                  ++++++++++++++ -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<issue id="nks-1" type="arm" linkend="system_breakdown:arm:System_breakdown_arm.System_element_usage" category="minor_technical" by="Nigel Shaw" date="2003-05-28" status="closed">
		<description>
	  The order of the inherited attributes specified here is the reverse of that in the supertype attributes. Not sure what effect this would have apart from confusing the algorithm used for part 21. Better if not reversed.
   </description>
		<comment by="Sean Barker" date="2003-06-04">
			<description>
Changed as suggested
</description>
		</comment>
	</issue>
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<issue id="IDB-1" type="outscope" linkend="" status="closed" category="major_technical" by="Ian bailey" date="03-09-04" seds="no">
		<description>
This module declares out of scope; "all system views whose components have no parent-child relationships".
By doing this, it makes it impossible to declare a single system - i.e. the module is 
rendered useless for any kind of systems engineering design process.
</description>
	</issue>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<issue
   id="UK-DPE-2"
   type="general"
   linkend=""
   status="open"
   category="minor_technical"
   by="David Price"
   date="2004-09-21"
   seds="no"
   ballot="PLCS DIS ballot"
   ballot_comment="yes"
   ballot_comment_id="UK-DPE-1"
   member_body="UK"
   resolution="TBD">
   <issue_management
    owner="Rob Bodington"
    priority="low"
    category="breakdown"/>
<description>
   <p>
     ISSUE: System breakdown
   </p>
   <p>
     In STEP, Breakdowns seems to be thought of as quite different from
     Assemblies and that's why the Product_breakdown module and System_breakdown
     module do not use the entity type Next_assembly_usage but instead created a
     separate entity type called Breakdown_element_usage. 
   </p>
   <p>
     The use of Breakdown_element_usage is one reason why System_breakdown
     cannot be used for the SysML to STEP mapping - because there is quantity
     attribute.  
   </p>
   <p>
     A second reason seems to stem from the text found in the
     Product_breakdown introduction which says "These views are complementary to
     the assembly structure and bill of materials views that are the primary
     focus for manufacturing (realization) of a product (see Part definition
     relationship ). Breakdowns may be of designs or realized individual
     products. For any product, more than one breakdown may exist to support
     various different engineering activities." where I added the bold. If
     Systems engineers create "assembly structure" then this seems to say they
     should not use Product_breakdown. 
   </p>
   <p>
     Is the intent for the current Breakdown modules to be
     harmonized/reusable between AP239 and AP233? If so, they seem not to
     satisfy AP233 requirements in this area. 
   </p>
   <p>PROPOSED SOLUTION:</p>
   <p>
     Here are a few options... there may be more:
   </p>
   <p>
   1) Change System_breakdown (and perhaps all Breakdowns to use the same structures as STEP Assembly uses);
   </p>
   <p>
   2) Create modules for System_definition or something like that which  works for AP233 but not AP239;
   </p>
   <p>
   3) Use Product, Product_view_definition,etc. and categorize/classify
them as a "System" and "System engineering view" etc;
</p>
   <p>
   4) Create a patch module that allows Next_assembly_usage or similar to apply to System_breakdown_element saying not to use Breakdown_element_usage  in AP233.
   </p>
 </description>
<comment
   by="Nigel Shaw"
   date="04-10-05">
   <description>
	   <p>
	Discussed in ISO mtg session. Agreed that quantity is needed - include a note suggesting that quantities are handled by properties.
	   </p>
   	   <p>
		   Clarify text concerning  "These views are complementary to
     the assembly structure and bill of materials views that are the primary
     focus for manufacturing (realization) of a product (see Part definition
     relationship ). Breakdowns may be of designs or realized individual
     products. For any product, more than one breakdown may exist to support
     various different engineering activities."
	   </p>
</description>
</comment>

</issue>


</issues>
