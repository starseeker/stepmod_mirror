(*
   $Id: arm_lf.exp,v 1.11 2007/11/06 14:18:06 abhpf Exp $
   ISO TC184/SC4/WG3 N2345 - ISO/CD-TS 10303-1477 System modelling -  EXPRESS ARM Long form
*)


(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.7.1B.20070802*)
(* Mon Jun 16 10:53:08 2008                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)

SCHEMA System_modelling_arm_LF;


(*
USE FROM Decision_support_arm;

USE FROM Group_arm;

USE FROM System_behaviour_arm;

USE FROM System_structure_arm;
*)

CONSTANT

(* Implicit interfaced from: Qualified_measure_arm *)
    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];

END_CONSTANT;

(* Pruned unused type: behaviour_and_version_identification_item  *)


(* Pruned unused type: sysm_activity_method_item  *)


(* Pruned unused type: sysm_affected_item_select  *)


(* Pruned unused type: sysm_alias_identification_item  *)


(* Pruned unused type: sysm_analysed_item  *)


(* Pruned unused type: sysm_approval_item  *)


(* Pruned unused type: sysm_assigned_name_select  *)


(* Pruned unused type: sysm_behaviour_item  *)


(* Pruned unused type: sysm_breakdown_item  *)


(* Pruned unused type: sysm_certification_item  *)


(* Pruned unused type: sysm_characterized_activity_definition  *)


(* Pruned unused type: sysm_condition_item  *)


(* Pruned unused type: sysm_condition_parameter_item  *)


(* Pruned unused type: sysm_contract_item  *)


(* Pruned unused type: sysm_date_or_date_time_item  *)


(* Pruned unused type: sysm_description_item  *)


(* Pruned unused type: sysm_documented_element_select  *)


(* Pruned unused type: sysm_effectivity_item  *)


(* Pruned unused type: sysm_event_item  *)


(* Pruned unused type: sysm_external_identification_item  *)


(* Pruned unused type: sysm_groupable_item  *)


(* Pruned unused type: sysm_identification_item  *)


(* Pruned unused type: sysm_information_usage_right_item  *)


(* Pruned unused type: sysm_justification_item  *)


(* Pruned unused type: sysm_justification_support_item  *)


(* Pruned unused type: sysm_organization_or_person_in_organization_item  *)


(* Pruned unused type: sysm_project_item  *)


(* Pruned unused type: sysm__property_assignment_select  *)


(* Pruned unused type: sysm_required_resource_item  *)


(* Pruned unused type: sysm_requirement_assignment_item  *)


(* Pruned unused type: sysm_requirement_source_item  *)


(* Pruned unused type: sysm_resource_assignment_item  *)


(* Pruned unused type: sysm_resource_item_select  *)


(* Pruned unused type: sysm_security_classification_item  *)


(* Pruned unused type: sysm_state_definition_of_item  *)


(* Pruned unused type: sysm_string_select  *)


(* Pruned unused type: sysm_verification_evidence_item  *)


(* Pruned unused type: ds_activity_item  *)


(* Pruned unused type: ds_alias_identification_item  *)


(* Pruned unused type: ds_analysed_item  *)


(* Pruned unused type: ds_approval_item  *)


(* Pruned unused type: ds_certification_item  *)


(* Pruned unused type: ds_classification_item  *)


(* Pruned unused type: ds_contract_item  *)


(* Pruned unused type: ds_date_or_date_time_item  *)


(* Pruned unused type: ds_documented_element_select  *)


(* Pruned unused type: ds_effectivity_item  *)


(* Pruned unused type: ds_event_item  *)


(* Pruned unused type: ds_external_identification_item  *)


(* Pruned unused type: ds_identification_item  *)


(* Pruned unused type: ds_information_usage_right_item  *)


(* Pruned unused type: ds_justification_item  *)


(* Pruned unused type: ds_justification_support_item  *)


(* Pruned unused type: ds_organization_or_person_in_organization_item  *)


(* Pruned unused type: ds_project_item  *)


(* Pruned unused type: ds_property_assignment_select  *)


(* Pruned unused type: ds_requirement_assignment_item  *)


(* Pruned unused type: ds_requirement_source_item  *)


(* Pruned unused type: ds_security_classification_item  *)


(* Pruned unused type: ds_string_select  *)


(* Pruned unused type: ds_verification_evidence_item  *)

(* USED FROM (Activity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_item = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_state_definition_assignment,
   Approval,
   Assigned_document_property,
   Assigned_property,
   Behaviour_description_association,
   Certification,
   Contract,
   Descriptive_document_property,
   Document,
   Document_definition,
   Document_version,
   Effectivity,
   Event,
   File,
   Independent_property,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Item_usage_effectivity,
   Justification,
   Numerical_document_property,
   Organization,
   Person,
   Person_in_organization,
   Product,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Required_resource,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version_relationship,
   Resource_item,
   Resource_property,
   Task_element,
   Task_io,
   Task_io_hierarchy,
   Tracing_relationship,
   Verification,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Analysis_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE analysed_item = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Activity_relationship,
   Alternate_product_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour_description_association,
   behaviour_item,
   behaviour_model,
   Condition,
   Condition_relationship,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Interface_definition_for,
   Organization,
   Organization_relationship,
   Product,
   Product_concept,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_relationship,
   Requirement_assignment,
   Resource_item_relationship,
   Resource_property,
   Task_io,
   Verification,
   Verification_evidence,
   Verification_relationship,
   View_definition_context,
   View_definition_relationship);
END_TYPE;


(* Pruned unused type: analysis_identification_item  *)


(* Pruned unused type: analysis_approval_item  *)


(* Pruned unused type: analysis_classification_item  *)


(* Pruned unused type: analysis_contract_item  *)


(* Pruned unused type: analysis_date_or_date_time_item  *)


(* Pruned unused type: analysis_organization_or_person_in_organization_item  *)


(* Pruned unused type: analysis_security_classification_item  *)

(* USED FROM (Approval_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE approval_item = SELECT (
   Activity,
   Activity_actual,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Address_assignment,
   Affected_items_assignment,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_information_usage_right,
   Applied_state_definition_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Breakdown,
   Breakdown_element,
   Breakdown_element_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Breakdown_version,
   Certification,
   Certification_assignment,
   Classification_assignment,
   Condition,
   Condition_assignment,
   Contract,
   Contract_assignment,
   Date_or_date_time_assignment,
   Digital_document_definition,
   Directed_activity,
   Document_assignment,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Effectivity_assignment,
   Event,
   Event_assignment,
   Group,
   Group_relationship,
   Identification_assignment,
   In_zone,
   Independent_property,
   Independent_property_relationship,
   Information_usage_right,
   Interface_connection,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Item_usage_effectivity,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Product_category_assignment,
   Product_concept,
   Product_configuration,
   Product_definition_element_relationship,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Security_classification,
   Security_classification_assignment,
   State_definition,
   State_definition_relationship,
   Supplied_part_relationship,
   Task_element,
   Task_element_relationship,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   Verification_relationship,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Classification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Activity_property_representation,
   Activity_relationship,
   Activity_status,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_information_usage_right,
   Applied_state_definition_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assembly_relationship_substitution,
   Assigned_property,
   Attribute_translation_assignment,
   Behaviour,
   Behaviour_view_definition,
   Breakdown,
   Breakdown_context,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Breakdown_of,
   Calendar_date,
   Certification,
   Certification_assignment,
   Characterizable_object,
   Class,
   Condition,
   Condition_assignment,
   Condition_parameter,
   Condition_relationship,
   Constrained_general_parameter_relationship,
   Context_dependent_unit,
   Contract,
   Contract_assignment,
   Conversion_based_unit,
   Date_or_date_time_assignment,
   Date_time,
   Derived_unit,
   Description_text,
   Description_text_assignment,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document,
   Document_assignment,
   Document_location_identification,
   Document_version,
   Effectivity,
   Effectivity_assignment,
   Effectivity_relationship,
   Event,
   Event_assignment,
   Event_relationship,
   External_class_library,
   External_item_identification,
   External_source_identification,
   File,
   File_location_identification,
   File_relationship,
   General_model_parameter,
   Hardcopy,
   Identification_assignment,
   In_zone,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Interface_connection,
   Interface_connector,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Item_design_association,
   Item_shape,
   Item_usage_effectivity,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Language,
   Language_indication,
   Local_time,
   Market,
   Numerical_item_with_unit,
   Organization,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Parameter_value_representation_item,
   Part,
   Part_version,
   Part_view_definition,
   Partial_document_assignment,
   Person,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Property_representation,
   Representation,
   Representation_context,
   Representation_item,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Resource_property_representation,
   Security_classification,
   Security_classification_assignment,
   State_based_behaviour_model,
   State_definition,
   State_definition_relationship,
   String_representation_item,
   Supplied_part_relationship,
   Text_based_representation,
   Time_interval_relationship,
   Tracing_relationship,
   Uncertainty_with_unit,
   Unit,
   Value_with_unit,
   Verification,
   Verification_evidence,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Contract_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE contract_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Breakdown,
   Breakdown_element,
   Breakdown_version,
   Document,
   Document_version,
   External_class,
   External_class_library,
   Information_usage_right,
   Interface_connector_version,
   Interface_specification_version,
   Justification,
   Organization,
   organization_or_person_in_organization_item,
   Part,
   Part_version,
   Person_in_organization,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Product_configuration,
   Product_version,
   Project,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Security_classification,
   Task_element,
   Task_element_relationship,
   Task_io,
   Tracing_relationship,
   Verification,
   Work_order);
END_TYPE;

(* USED FROM (Date_time_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_or_date_time_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_property_representation,
   Activity_relationship,
   Address_assignment,
   Affected_items_assignment,
   Alias_identification,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_assignment,
   Analysis_discipline_definition,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_information_usage_right,
   Approval,
   Approving_person_organization,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Breakdown,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Certification,
   Certification_assignment,
   Classification_assignment,
   Condition,
   Condition_assignment,
   Contract,
   Contract_assignment,
   Date_or_date_time_assignment,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document,
   Document_assignment,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Effectivity_assignment,
   Event_assignment,
   Hardcopy,
   Hierarchical_interface_connection,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_usage_right,
   Interface_connection,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification_definition,
   Interface_specification_version,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Person_in_organization,
   Physical_document_definition,
   Product_as_planned,
   Product_as_realized,
   Product_category_assignment,
   Product_concept,
   Product_configuration,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Property_representation,
   Representation,
   Required_resource,
   Required_resource_assignment,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Resource_item_assignment,
   Resource_property,
   Resource_property_representation,
   Security_classification,
   Security_classification_assignment,
   Task_element,
   Task_element_relationship,
   Task_io,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   View_definition_context,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Person_organization_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE organization_or_person_in_organization_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Activity_property_representation,
   Activity_relationship,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Alias_identification,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_independent_activity_property,
   Approval,
   Approval_status,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour_version,
   Breakdown,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_version,
   Certification,
   Certification_assignment,
   Classification_assignment,
   Condition,
   Condition_assignment,
   Contract,
   Contract_assignment,
   Date_or_date_time_assignment,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document,
   Document_assignment,
   Document_definition,
   Document_version,
   Effectivity,
   Effectivity_assignment,
   Event,
   Event_assignment,
   Hardcopy,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_usage_right,
   Interface_connection,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Organization,
   Organization_or_person_in_organization_assignment,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_category_assignment,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Project_assignment,
   Property_representation,
   Representation,
   Required_resource,
   Required_resource_assignment,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Resource_item_assignment,
   Resource_property,
   Resource_property_representation,
   Security_classification,
   Security_classification_assignment,
   Shape_element_relationship,
   Supplied_part_relationship,
   System,
   System_version,
   System_view_definition,
   Task_element,
   Task_element_relationship,
   Task_io,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Security_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE security_classification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Affected_items_assignment,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Breakdown,
   Breakdown_element_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document,
   Document_assignment,
   Document_version,
   Event,
   Hardcopy,
   Hierarchical_interface_connection,
   In_zone,
   Interface_connection,
   Interface_connector,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification_definition,
   Interface_specification_version,
   Part,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_configuration,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_version,
   Product_view_definition,
   Project_relationship,
   Promissory_usage,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Task_element,
   Task_element_relationship,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Justification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE justification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Affected_items_assignment,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_information_usage_right,
   Approval,
   Approval_assignment,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour_description_association,
   Breakdown,
   Breakdown_of,
   Certification,
   Classification_assignment,
   Condition,
   Contract,
   Description_text,
   Descriptive_document_property,
   Directed_activity,
   Document_assignment,
   Document_definition,
   Document_definition_relationship,
   Effectivity,
   File_relationship,
   Independent_property,
   Independent_property_relationship,
   Information_usage_right,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Numerical_document_property,
   Product,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_assignment,
   Property_value_representation,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement_assignment,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Security_classification,
   Task_element,
   Task_element_relationship,
   Task_io,
   Task_io_hierarchy,
   Verification,
   Verification_evidence,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Justification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE justification_support_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_state_definition_assignment,
   Approval,
   Assigned_property,
   Certification,
   Contract,
   Descriptive_document_property,
   Document,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Event,
   File_relationship,
   Independent_property,
   Independent_property_relationship,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Numerical_document_property,
   Product,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Resource_property,
   State_definition,
   State_definition_relationship,
   Verification,
   Verification_evidence,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Measure_of_effectiveness_arm); *)
TYPE maximize_or_minimize = ENUMERATION OF 
  (maximize,
   minimize);
END_TYPE;

(* Pruned unused type: requirement_alias_idenfication_item  *)


(* Pruned unused type: requirement_certification_item  *)


(* Pruned unused type: requirement_classification_item  *)


(* Pruned unused type: requirement_contract_item  *)


(* Pruned unused type: requirement_documented_element_select  *)


(* Pruned unused type: requirement_effectivity_item  *)


(* Pruned unused type: requirement_event_item  *)


(* Pruned unused type: requirement_information_usage_right_item  *)


(* Pruned unused type: requirement_mri_approval_item  *)


(* Pruned unused type: requirement_mri_date_or_date_time_item  *)


(* Pruned unused type: requirement_mri_identification_item  *)


(* Pruned unused type: requirement_mri_organization_or_person_in_organization_item  *)


(* Pruned unused type: requirement_mri_string_select  *)


(* Pruned unused type: requirement_project_item  *)


(* Pruned unused type: requirement_security_classification_item  *)


(* Pruned unused type: rm_requirement_assignment_item  *)


(* Pruned unused type: rm_requirement_source_item  *)

(* USED FROM (Verification_and_validation_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE verification_evidence_item = SELECT (
   Activity_actual,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_relationship,
   Activity_status,
   Affected_items_assignment,
   Alternate_product_relationship,
   Analysis_assignment,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_independent_property,
   Applied_information_usage_right,
   Approval_assignment,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour_description_association,
   behaviour_model,
   Breakdown_of,
   Certification_assignment,
   Classification_assignment,
   Condition_assignment,
   Contract_assignment,
   Date_or_date_time_assignment,
   Description_text_assignment,
   Directed_activity,
   Effectivity_assignment,
   Event_assignment,
   Expression_assignment,
   Interface_connector_definition,
   Interface_definition_connection,
   Interface_definition_for,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Organization_or_person_in_organization_assignment,
   Person,
   Person_in_organization,
   Product,
   Product_design_to_individual,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_assignment,
   Representation,
   Representation_context,
   Representation_item,
   Required_resource_assignment,
   Resource_item_assignment,
   Security_classification_assignment,
   Task_io_hierarchy,
   Time_interval_assignment,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Group_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE groupable_item = SELECT (
   Activity,
   Activity_method,
   Approval,
   Breakdown_of,
   Certification,
   Condition,
   Contract,
   Effectivity,
   Event,
   File,
   Group,
   Group_relationship,
   Interface_connection,
   Interface_definition_for,
   Justification,
   Product,
   Project,
   Required_resource,
   Resource_item,
   Task_io,
   Verification,
   Work_order,
   Work_request);
   WHERE
  WR1: NOT ('SYSTEM_MODELLING_ARM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; 

(* Pruned unused type: fbb_activity_method_item  *)


(* Pruned unused type: fbb_characterized_resource_select  *)


(* Pruned unused type: fbb_classification_item  *)


(* Pruned unused type: fbb_condition_item  *)


(* Pruned unused type: fbb_condition_parameter_item  *)


(* Pruned unused type: fbb_expression_assignment_item  *)


(* Pruned unused type: fbb_identification_item  *)


(* Pruned unused type: fbb_property_assignment_select  *)


(* Pruned unused type: fbb_required_resource_item  *)


(* Pruned unused type: fbb_resource_assignment_item  *)


(* Pruned unused type: fbb_resource_item_select  *)


(* Pruned unused type: fbb_task_item  *)


(* Pruned unused type: functional_behaviour_model  *)

(* USED FROM (Behaviour_description_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE behaviour_item = SELECT (
   Behaviour_view_definition);
END_TYPE;

(* USED FROM (Behaviour_description_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE behaviour_model = SELECT (
   Function_based_behaviour_model,
   State_based_behaviour_model);
END_TYPE;


(* Pruned unused type: behaviour_view_definition_identification_item  *)

(* USED FROM (Expression_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE expression_assignment_item = SELECT (
   Condition);
END_TYPE;


(* Pruned unused type: located_select  *)


(* Pruned unused type: gmp_classification_item  *)


(* Pruned unused type: required_resource_classification_item  *)

(* USED FROM (Required_resource_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE required_resource_item = SELECT (
   Activity,
   Activity_method,
   Analysis_assignment,
   Applied_activity_assignment,
   Certification_assignment,
   Contract_assignment,
   Event,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Interface_definition_for,
   Justification,
   Organization,
   Person_in_organization,
   Product,
   Product_version,
   Product_view_definition,
   Project,
   State_definition,
   Task_element,
   Task_step,
   Verification,
   Work_order);
END_TYPE;

(* USED FROM (Resource_property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE characterized_resource_select = SELECT (
   Required_resource,
   Resource_item,
   Resource_item_relationship);
END_TYPE;

(* USED FROM (Textual_expression_representation_arm); *)
TYPE list_of_text_based_item = LIST [1 : ?] OF Textual_expression_representation_item;
END_TYPE;
(* USED FROM (Textual_expression_representation_arm); *)
TYPE list_or_set_of_text_based_item = SELECT 
  (list_of_text_based_item,
   set_of_text_based_item);
END_TYPE;
(* USED FROM (Textual_expression_representation_arm); *)
TYPE set_of_text_based_item = SET [1 : ?] OF Textual_expression_representation_item;
END_TYPE;

(* Pruned unused type: ter_classification_item  *)

(* USED FROM (Textual_expression_representation_arm); *)
TYPE text_based_item_select = SELECT 
  (Included_text_based_representation,
   Textual_expression_composition,
   Textual_expression_representation_item);
END_TYPE;

(* Pruned unused type: sbb_behaviour_model  *)


(* Pruned unused type: sbb_classification_item  *)


(* Pruned unused type: sbb_condition_item  *)


(* Pruned unused type: sbb_condition_parameter_item  *)


(* Pruned unused type: sbb_description_item  *)


(* Pruned unused type: sbb_expression_assignment_item  *)


(* Pruned unused type: sbb_external_identification_item  *)


(* Pruned unused type: sbb_identification_item  *)


(* Pruned unused type: sbb_parameter_value_select  *)


(* Pruned unused type: sbb_property_assignment_select  *)


(* Pruned unused type: sbb_state_definition_of_item  *)

(* USED FROM (Alias_identification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE alias_identification_item = identification_item;
WHERE
  wr1 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_METHOD' IN TYPEOF(SELF));
  wr3 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_METHOD_RELATIONSHIP' IN TYPEOF(SELF));
  wr4 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_PROPERTY' IN TYPEOF(SELF));
  wr5 : NOT ('SYSTEM_MODELLING_ARM.AFFECTED_ITEMS_ASSIGNMENT' IN TYPEOF(SELF));
  wr6 : NOT ('SYSTEM_MODELLING_ARM.ANALYSIS' IN TYPEOF(SELF));
  wr7 : NOT ('SYSTEM_MODELLING_ARM.ANALYSIS_DISCIPLINE_DEFINITION' IN TYPEOF(SELF));
  wr8 : NOT ('SYSTEM_MODELLING_ARM.ANALYSIS_VERSION' IN TYPEOF(SELF));
  wr9 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr10 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_ACTIVITY_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr11 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_STATE_DEFINITION_ASSIGNMENT' IN TYPEOF(SELF));
  wr12 : NOT ('SYSTEM_MODELLING_ARM.ASSEMBLY_RELATIONSHIP_SUBSTITUTION' IN TYPEOF(SELF));
  wr13 : NOT ('SYSTEM_MODELLING_ARM.ASSIGNED_PROPERTY' IN TYPEOF(SELF));
  wr14 : NOT ('SYSTEM_MODELLING_ARM.BEHAVIOUR' IN TYPEOF(SELF));
  wr15 : NOT ('SYSTEM_MODELLING_ARM.BEHAVIOUR_VERSION' IN TYPEOF(SELF));
  wr16 : NOT ('SYSTEM_MODELLING_ARM.BEHAVIOUR_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr17 : NOT ('SYSTEM_MODELLING_ARM.CLASS' IN TYPEOF(SELF));
  wr18 : NOT ('SYSTEM_MODELLING_ARM.CONDITION' IN TYPEOF(SELF));
  wr19 : NOT ('SYSTEM_MODELLING_ARM.DESCRIPTION_TEXT_ASSIGNMENT' IN TYPEOF(SELF));
  wr20 : NOT ('SYSTEM_MODELLING_ARM.DESCRIPTIVE_DOCUMENT_PROPERTY' IN TYPEOF(SELF));
  wr21 : NOT ('SYSTEM_MODELLING_ARM.DIRECTED_ACTIVITY' IN TYPEOF(SELF));
  wr22 : NOT ('SYSTEM_MODELLING_ARM.DOCUMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr23 : NOT ('SYSTEM_MODELLING_ARM.EFFECTIVITY' IN TYPEOF(SELF));
  wr24 : NOT ('SYSTEM_MODELLING_ARM.EXTERNAL_CLASS_LIBRARY' IN TYPEOF(SELF));
  wr25 : NOT ('SYSTEM_MODELLING_ARM.EXTERNAL_SOURCE_IDENTIFICATION' IN TYPEOF(SELF));
  wr26 : NOT ('SYSTEM_MODELLING_ARM.FILE' IN TYPEOF(SELF));
  wr27 : NOT ('SYSTEM_MODELLING_ARM.GENERAL_MODEL_PARAMETER' IN TYPEOF(SELF));
  wr28 : NOT ('SYSTEM_MODELLING_ARM.GROUP' IN TYPEOF(SELF));
  wr29 : NOT ('SYSTEM_MODELLING_ARM.GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr30 : NOT ('SYSTEM_MODELLING_ARM.INDEPENDENT_PROPERTY' IN TYPEOF(SELF));
  wr31 : NOT ('SYSTEM_MODELLING_ARM.INDEPENDENT_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr32 : NOT ('SYSTEM_MODELLING_ARM.INFORMATION_RIGHT' IN TYPEOF(SELF));
  wr33 : NOT ('SYSTEM_MODELLING_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr34 : NOT ('SYSTEM_MODELLING_ARM.MARKET' IN TYPEOF(SELF));
  wr35 : NOT ('SYSTEM_MODELLING_ARM.NUMERICAL_DOCUMENT_PROPERTY' IN TYPEOF(SELF));
  wr36 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT' IN TYPEOF(SELF));
  wr37 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_AS_INDIVIDUAL_VERSION' IN TYPEOF(SELF));
  wr38 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr39 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr40 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr41 : NOT ('SYSTEM_MODELLING_ARM.REPRESENTATION' IN TYPEOF(SELF));
  wr42 : NOT ('SYSTEM_MODELLING_ARM.REQUIRED_RESOURCE' IN TYPEOF(SELF));
  wr43 : NOT ('SYSTEM_MODELLING_ARM.REQUIRED_RESOURCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr44 : NOT ('SYSTEM_MODELLING_ARM.REQUIREMENT' IN TYPEOF(SELF));
  wr45 : NOT ('SYSTEM_MODELLING_ARM.REQUIREMENT_VERSION' IN TYPEOF(SELF));
  wr46 : NOT ('SYSTEM_MODELLING_ARM.REQUIREMENT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr47 : NOT ('SYSTEM_MODELLING_ARM.RESOURCE_ITEM' IN TYPEOF(SELF));
  wr48 : NOT ('SYSTEM_MODELLING_ARM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr49 : NOT ('SYSTEM_MODELLING_ARM.STATE_BASED_BEHAVIOUR_MODEL' IN TYPEOF(SELF));
  wr50 : NOT ('SYSTEM_MODELLING_ARM.STATE_DEFINITION' IN TYPEOF(SELF));
  wr51 : NOT ('SYSTEM_MODELLING_ARM.STATE_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr52 : NOT ('SYSTEM_MODELLING_ARM.STATE_TRANSITION_DEFINITION' IN TYPEOF(SELF));
  wr53 : NOT ('SYSTEM_MODELLING_ARM.SYSTEM' IN TYPEOF(SELF));
  wr54 : NOT ('SYSTEM_MODELLING_ARM.SYSTEM_VERSION' IN TYPEOF(SELF));
  wr55 : NOT ('SYSTEM_MODELLING_ARM.SYSTEM_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr56 : NOT ('SYSTEM_MODELLING_ARM.TASK_ELEMENT' IN TYPEOF(SELF));
  wr57 : NOT ('SYSTEM_MODELLING_ARM.TASK_ELEMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr58 : NOT ('SYSTEM_MODELLING_ARM.TASK_IO' IN TYPEOF(SELF));
  wr59 : NOT ('SYSTEM_MODELLING_ARM.TASK_STEP' IN TYPEOF(SELF));
  wr60 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION' IN TYPEOF(SELF));
  wr61 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION_EVIDENCE' IN TYPEOF(SELF));
  wr62 : NOT ('SYSTEM_MODELLING_ARM.VIEW_DEFINITION_CONTEXT' IN TYPEOF(SELF));
  wr63 : NOT ('SYSTEM_MODELLING_ARM.VIEW_DEFINITION_USAGE' IN TYPEOF(SELF));
  wr64 : NOT ('SYSTEM_MODELLING_ARM.WORK_ORDER' IN TYPEOF(SELF));
  wr65 : NOT ('SYSTEM_MODELLING_ARM.WORK_REQUEST' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Activity_property,
   Address,
   Affected_items_assignment,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_state_definition_assignment,
   Approval,
   Approval_status,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour,
   Behaviour_version,
   Behaviour_view_definition,
   Breakdown,
   Breakdown_element,
   Breakdown_element_definition,
   Breakdown_element_version,
   Breakdown_version,
   Certification,
   Class,
   Condition,
   Contract,
   Description_text_assignment,
   Descriptive_document_property,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document,
   Document_assignment,
   Document_version,
   Effectivity,
   Event,
   External_class_library,
   External_source_identification,
   File,
   General_model_parameter,
   Group,
   Group_relationship,
   Hardcopy,
   Independent_property,
   Independent_property_relationship,
   Information_right,
   Information_usage_right,
   Interface_connection,
   Interface_connector,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Item_shape,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Market,
   Numerical_document_property,
   Organization,
   Organization_or_person_in_organization_assignment,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Representation,
   Required_resource,
   Required_resource_relationship,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Resource_property,
   Security_classification,
   Security_classification_assignment,
   Shape_element_relationship,
   State_based_behaviour_model,
   State_definition,
   State_definition_relationship,
   State_transition_definition,
   System,
   System_version,
   System_view_definition,
   Task_element,
   Task_element_relationship,
   Task_io,
   Task_step,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   View_definition_context,
   View_definition_relationship,
   View_definition_usage,
   Work_order,
   Work_request);
END_TYPE;


(* Pruned unused type: sysm_activity_item  *)


(* Pruned unused type: condition_classification_item  *)

(* USED FROM (Condition_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE condition_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Activity_property,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Approval,
   Approval_assignment,
   Assigned_property,
   Certification_assignment,
   Contract_assignment,
   Date_or_date_time_assignment,
   Document_assignment,
   Effectivity,
   Event_assignment,
   Hierarchical_interface_connection,
   Interface_connection,
   Interface_definition_connection,
   Justification_assignment,
   Product_definition_element_relationship,
   Project_assignment,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement_assignment,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Security_classification_assignment,
   State_definition,
   State_definition_relationship,
   State_transition_definition,
   Task_element_relationship,
   Verification_evidence,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Condition_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE condition_parameter_item = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Activity_property_representation,
   Analysis,
   Approval,
   Approval_assignment,
   Assigned_property,
   Calendar_date,
   Certification_assignment,
   Classification_assignment,
   Condition_relationship,
   Contract_assignment,
   Date_or_date_time_assignment,
   Date_time,
   Document_assignment,
   Hierarchical_interface_connection,
   Identification_assignment,
   Independent_property,
   Independent_property_representation,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Organization,
   Organization_or_person_in_organization_assignment,
   parameter_value_select,
   Product,
   Product_as_individual,
   Product_category_assignment,
   Product_concept,
   Product_configuration,
   Product_definition_element_relationship,
   Product_version,
   Product_view_definition,
   Property_representation,
   Representation,
   Required_resource,
   Resource_property,
   Resource_property_representation,
   State_definition,
   View_definition_relationship,
   Work_request);
END_TYPE;

(* USED FROM (Description_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE description_item = SELECT (
   Activity_method,
   analysed_item,
   Analysis,
   Behaviour,
   behaviour_model,
   Behaviour_version,
   Behaviour_view_definition,
   Condition,
   Event,
   General_model_parameter,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Interface_definition_for,
   Product,
   Product_version,
   Product_view_definition,
   Representation,
   State_based_behaviour_model,
   State_definition,
   State_definition_relationship,
   Task_io);
END_TYPE;


(* Pruned unused type: external_class_assigned_name_select  *)

(* USED FROM (Name_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE assigned_name_select = SELECT (
   Analysis,
   Breakdown_element_realization,
   Event,
   External_class_library,
   Group,
   Group_relationship,
   Product,
   Product_view_definition);
END_TYPE;

(* USED FROM (External_item_identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE external_identification_item = SELECT (
   Document_definition,
   File,
   Person_in_organization,
   Product,
   Project,
   Required_resource);
END_TYPE;

(* USED FROM (State_based_behaviour_representation_arm); *)
TYPE state_based_behaviour_element = SELECT 
  (State_definition,
   State_definition_relationship);
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
TYPE any_number_value = NUMBER;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_string_value = STRING;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE length_measure = REAL;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   length_measure,
   plane_angle_measure);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE plane_angle_measure = REAL;
END_TYPE; 
(* USED FROM (Foundation_state_definition_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE state_definition_of_item = SELECT (
   Activity,
   Activity_method,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Behaviour_description_association,
   Breakdown,
   Breakdown_element,
   Breakdown_element_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Certification,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_version,
   Event,
   File,
   File_location_identification,
   Hardcopy,
   Interface_connection,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Resource_group_relationship,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Security_classification,
   Task_io_hierarchy,
   Verification,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Parameter_value_specification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE parameter_value_select = SELECT (
   Generic_expression,
   Product_view_definition,
   Representation,
   Representation_item,
   State_definition,
   Value_with_unit);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE property_assignment_select = SELECT (
   Activity,
   Activity_happening,
   Activity_method,
   Activity_property,
   Address,
   Alternate_product_relationship,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Assigned_property,
   Behaviour_view_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Condition_parameter,
   Document_assignment,
   Document_definition,
   File,
   Generic_expression,
   Hierarchical_interface_connection,
   In_zone,
   Independent_property,
   Independent_property_relationship,
   Information_usage_right,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Organization_or_person_in_organization_assignment,
   Part_view_definition,
   Person,
   Person_in_organization,
   Product,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Property_definition_representation,
   Representation,
   Representation_context,
   Representation_item,
   Required_resource,
   Requirement_source,
   Resource_property,
   Security_classification,
   Task_io_hierarchy,
   Verification,
   Verification_evidence,
   Verification_relationship,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE represented_definition = SELECT (
   Assigned_property,
   Independent_property);
END_TYPE;


(* Pruned unused type: syss_activity_item  *)


(* Pruned unused type: syss_affected_item_select  *)


(* Pruned unused type: syss_alias_identification_item  *)


(* Pruned unused type: syss_approval_item  *)


(* Pruned unused type: syss_assigned_name_select  *)


(* Pruned unused type: syss_certification_item  *)


(* Pruned unused type: syss_characterized_activity_definition  *)


(* Pruned unused type: syss_classification_item  *)


(* Pruned unused type: syss_contract_item  *)


(* Pruned unused type: syss_date_or_date_time_item  *)


(* Pruned unused type: syss_documented_element_select  *)


(* Pruned unused type: syss_effectivity_item  *)


(* Pruned unused type: syss_event_item  *)


(* Pruned unused type: syss_external_identification_item  *)


(* Pruned unused type: syss_identification_item  *)


(* Pruned unused type: syss_in_zone_item  *)


(* Pruned unused type: syss_organization_or_person_in_organization_item  *)


(* Pruned unused type: syss_product_item  *)


(* Pruned unused type: syss_project_item  *)


(* Pruned unused type: syss_property_assignment_select  *)


(* Pruned unused type: syss_security_classification_item  *)


(* Pruned unused type: syss_string_select  *)


(* Pruned unused type: syss_time_interval_item  *)

(* USED FROM (Person_organization_arm); *)
TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE date_or_date_time_select = SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE year_number = INTEGER;
END_TYPE; 

(* Pruned unused type: requirement_view_definition_identification_item  *)

(* USED FROM (Document_assignment_arm); *)
TYPE assigned_document_select = SELECT 
  (Document,
   Document_definition,
   Document_version,
   File);
END_TYPE;
(* USED FROM (Document_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE documented_element_select = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Activity_property,
   Activity_property_representation,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Approval,
   Approval_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Behaviour_version,
   Breakdown,
   Breakdown_context,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Certification,
   Certification_assignment,
   Class,
   Condition,
   Condition_assignment,
   Condition_parameter,
   Contract,
   Contract_assignment,
   Document,
   Document_assignment,
   Document_definition,
   Document_version,
   Effectivity,
   Effectivity_assignment,
   External_item_identification,
   Group,
   Group_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Interface_connection,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_specification,
   Interface_specification_version,
   Justification,
   Market,
   Organization,
   Organization_or_person_in_organization_assignment,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Product,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_concept,
   Product_configuration,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Property_representation,
   Representation,
   Representation_item,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement,
   Requirement_assignment,
   Requirement_source,
   Requirement_version,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Resource_property_representation,
   Security_classification,
   Security_classification_assignment,
   Shape_element,
   Shape_element_relationship,
   State_definition,
   Task_element,
   Task_element_relationship,
   Task_io,
   Verification,
   Verification_evidence,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;


(* Pruned unused type: document_location_select  *)

(* USED FROM (Document_properties_arm); *)
TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 
(* USED FROM (Document_properties_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE document_property_item = property_assignment_select;
WHERE
  wr1 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_HAPPENING' IN TYPEOF(SELF));
  wr3 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_METHOD' IN TYPEOF(SELF));
  wr4 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_PROPERTY' IN TYPEOF(SELF));
  wr5 : NOT ('SYSTEM_MODELLING_ARM.ADDRESS' IN TYPEOF(SELF));
  wr6 : NOT ('SYSTEM_MODELLING_ARM.ALTERNATE_PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr7 : NOT ('SYSTEM_MODELLING_ARM.ANALYSIS_ASSIGNMENT' IN TYPEOF(SELF));
  wr8 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr9 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_ACTIVITY_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr10 : NOT ('SYSTEM_MODELLING_ARM.ASSIGNED_PROPERTY' IN TYPEOF(SELF));
  wr11 : NOT ('SYSTEM_MODELLING_ARM.BEHAVIOUR_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr12 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT_REALIZATION' IN TYPEOF(SELF));
  wr13 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT_USAGE' IN TYPEOF(SELF));
  wr14 : NOT ('SYSTEM_MODELLING_ARM.CONDITION_PARAMETER' IN TYPEOF(SELF));
  wr15 : NOT ('SYSTEM_MODELLING_ARM.DOCUMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr16 : NOT ('SYSTEM_MODELLING_ARM.GENERIC_EXPRESSION' IN TYPEOF(SELF));
  wr17 : NOT ('SYSTEM_MODELLING_ARM.HIERARCHICAL_INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr18 : NOT ('SYSTEM_MODELLING_ARM.IN_ZONE' IN TYPEOF(SELF));
  wr19 : NOT ('SYSTEM_MODELLING_ARM.INDEPENDENT_PROPERTY' IN TYPEOF(SELF));
  wr20 : NOT ('SYSTEM_MODELLING_ARM.INDEPENDENT_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr21 : NOT ('SYSTEM_MODELLING_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr22 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr23 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_CONNECTOR_OCCURRENCE' IN TYPEOF(SELF));
  wr24 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_DEFINITION_CONNECTION' IN TYPEOF(SELF));
  wr25 : NOT ('SYSTEM_MODELLING_ARM.ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr26 : NOT ('SYSTEM_MODELLING_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr27 : NOT ('SYSTEM_MODELLING_ARM.PERSON' IN TYPEOF(SELF));
  wr28 : NOT ('SYSTEM_MODELLING_ARM.PERSON_IN_ORGANIZATION' IN TYPEOF(SELF));
  wr29 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT' IN TYPEOF(SELF));
  wr30 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr31 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr32 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr33 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr34 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VERSION_RELATIONSHIP' IN TYPEOF(SELF));
  wr35 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr36 : NOT ('SYSTEM_MODELLING_ARM.PROJECT' IN TYPEOF(SELF));
  wr37 : NOT ('SYSTEM_MODELLING_ARM.PROPERTY_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr38 : NOT ('SYSTEM_MODELLING_ARM.REPRESENTATION' IN TYPEOF(SELF));
  wr39 : NOT ('SYSTEM_MODELLING_ARM.REPRESENTATION_CONTEXT' IN TYPEOF(SELF));
  wr40 : NOT ('SYSTEM_MODELLING_ARM.REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr41 : NOT ('SYSTEM_MODELLING_ARM.REQUIRED_RESOURCE' IN TYPEOF(SELF));
  wr42 : NOT ('SYSTEM_MODELLING_ARM.REQUIREMENT_SOURCE' IN TYPEOF(SELF));
  wr43 : NOT ('SYSTEM_MODELLING_ARM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr44 : NOT ('SYSTEM_MODELLING_ARM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr45 : NOT ('SYSTEM_MODELLING_ARM.TASK_IO_HIERARCHY' IN TYPEOF(SELF));
  wr46 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION' IN TYPEOF(SELF));
  wr47 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION_EVIDENCE' IN TYPEOF(SELF));
  wr48 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr49 : NOT ('SYSTEM_MODELLING_ARM.VIEW_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr50 : NOT ('SYSTEM_MODELLING_ARM.WORK_ORDER' IN TYPEOF(SELF));
  wr51 : NOT ('SYSTEM_MODELLING_ARM.WORK_REQUEST' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Effectivity_application_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE effectivity_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_property_representation,
   Address_assignment,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_assignment,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Applied_information_usage_right,
   Applied_state_definition_assignment,
   Approval_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Attribute_translation_assignment,
   Breakdown,
   Breakdown_element,
   Breakdown_element_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Breakdown_of,
   Breakdown_version,
   Certification_assignment,
   Classification_assignment,
   Condition_assignment,
   Condition_relationship,
   Constrained_general_parameter_relationship,
   Contract_assignment,
   Date_or_date_time_assignment,
   Document,
   Document_assignment,
   Document_definition,
   Document_definition_relationship,
   Document_location_identification,
   Document_version,
   Effectivity_assignment,
   Event,
   Event_assignment,
   External_source_identification,
   File,
   File_relationship,
   Identification_assignment,
   Independent_property_representation,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_for,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Make_from_relationship,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_configuration,
   Product_design_to_individual,
   Product_design_version_to_individual,
   Product_planned_to_realized,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_assignment,
   Required_resource_assignment,
   Required_resource_relationship,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Resource_property_representation,
   Security_classification_assignment,
   State_definition_relationship,
   Verification,
   Verification_evidence,
   View_definition_relationship,
   View_definition_usage,
   Work_order);
END_TYPE;

(* USED FROM (Information_rights_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE information_usage_right_item = SELECT (
   Activity_method,
   Activity_property,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_assignment,
   Analysis_discipline_definition,
   Applied_information_usage_right,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Breakdown,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_version,
   Certification,
   Certification_assignment,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_version,
   External_item_identification,
   Hardcopy,
   In_zone,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Interface_connection,
   Interface_connector,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Interface_specification,
   Interface_specification_definition,
   Interface_specification_version,
   Justification,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_view,
   Product_as_planned,
   Product_as_realized,
   Product_category,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Representation_item,
   Required_resource,
   Requirement,
   Requirement_assignment,
   Requirement_version,
   Requirement_view_definition,
   Resource_item,
   Security_classification,
   Security_classification_assignment,
   Supplied_part_relationship,
   Task_element,
   Task_io,
   Verification_evidence,
   View_definition_relationship);
END_TYPE;


(* Pruned unused type: right_approval_item  *)


(* Pruned unused type: right_contract_item  *)


(* Pruned unused type: right_date_item  *)


(* Pruned unused type: right_person_organization_item  *)


(* Pruned unused type: mri_alias_identification_item  *)


(* Pruned unused type: mri_approval_item  *)


(* Pruned unused type: mri_date_or_date_time_item  *)


(* Pruned unused type: mri_identification_item  *)


(* Pruned unused type: mri_organization_or_person_in_organization_item  *)


(* Pruned unused type: mri_string_select  *)


(* Pruned unused type: product_property_assignment  *)

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_assignment_item = SELECT (
   Activity_method,
   Activity_property,
   Alternate_part_relationship,
   Alternate_product_relationship,
   Analysis_discipline_definition,
   Applied_activity_method_assignment,
   Applied_state_definition_assignment,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Breakdown,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Breakdown_version,
   Document_version,
   In_zone,
   Interface_connector_occurrence,
   Interface_definition_for,
   Interface_specification,
   Part_version,
   Product,
   Product_as_individual_version,
   Product_as_planned,
   Product_as_realized,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Required_resource_by_specification,
   State_definition,
   Verification,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_source_item = SELECT (
   Activity_method,
   Alternate_product_relationship,
   Analysis_discipline_definition,
   Applied_activity_method_assignment,
   Applied_state_definition_assignment,
   Approval_assignment,
   Approving_person_organization,
   Certification_assignment,
   Characterizable_object,
   Contract_assignment,
   Directed_activity,
   Document_version,
   In_zone,
   Interface_connector_occurrence,
   Interface_definition_for,
   Organization_or_person_in_organization_assignment,
   Part_version,
   Product,
   Product_as_individual_version,
   Product_concept,
   Product_version,
   Product_view_definition,
   Project_assignment,
   Shape_element,
   State_definition,
   Verification,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Task_element_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE task_item = activity_method_item;
WHERE
  wr1 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_METHOD' IN TYPEOF(SELF));
  wr3 : NOT ('SYSTEM_MODELLING_ARM.ACTIVITY_PROPERTY' IN TYPEOF(SELF));
  wr4 : NOT ('SYSTEM_MODELLING_ARM.ANALYSIS_ASSIGNMENT' IN TYPEOF(SELF));
  wr5 : NOT ('SYSTEM_MODELLING_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr6 : NOT ('SYSTEM_MODELLING_ARM.APPROVAL_ASSIGNMENT' IN TYPEOF(SELF));
  wr7 : NOT ('SYSTEM_MODELLING_ARM.ASSIGNED_DOCUMENT_PROPERTY' IN TYPEOF(SELF));
  wr8 : NOT ('SYSTEM_MODELLING_ARM.ASSIGNED_PROPERTY' IN TYPEOF(SELF));
  wr9 : NOT ('SYSTEM_MODELLING_ARM.BEHAVIOUR_DESCRIPTION_ASSOCIATION' IN TYPEOF(SELF));
  wr10 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT' IN TYPEOF(SELF));
  wr11 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT_DEFINITION' IN TYPEOF(SELF));
  wr12 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT_USAGE' IN TYPEOF(SELF));
  wr13 : NOT ('SYSTEM_MODELLING_ARM.BREAKDOWN_ELEMENT_VERSION' IN TYPEOF(SELF));
  wr14 : NOT ('SYSTEM_MODELLING_ARM.CERTIFICATION' IN TYPEOF(SELF));
  wr15 : NOT ('SYSTEM_MODELLING_ARM.CONDITION' IN TYPEOF(SELF));
  wr16 : NOT ('SYSTEM_MODELLING_ARM.CONTRACT' IN TYPEOF(SELF));
  wr17 : NOT ('SYSTEM_MODELLING_ARM.DATE_OR_DATE_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr18 : NOT ('SYSTEM_MODELLING_ARM.DOCUMENT' IN TYPEOF(SELF));
  wr19 : NOT ('SYSTEM_MODELLING_ARM.DOCUMENT_VERSION' IN TYPEOF(SELF));
  wr20 : NOT ('SYSTEM_MODELLING_ARM.EVENT' IN TYPEOF(SELF));
  wr21 : NOT ('SYSTEM_MODELLING_ARM.FILE' IN TYPEOF(SELF));
  wr22 : NOT ('SYSTEM_MODELLING_ARM.IN_ZONE' IN TYPEOF(SELF));
  wr23 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr24 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_CONNECTOR_OCCURRENCE' IN TYPEOF(SELF));
  wr25 : NOT ('SYSTEM_MODELLING_ARM.INTERFACE_DEFINITION_CONNECTION' IN TYPEOF(SELF));
  wr26 : NOT ('SYSTEM_MODELLING_ARM.JUSTIFICATION' IN TYPEOF(SELF));
  wr27 : NOT ('SYSTEM_MODELLING_ARM.ORGANIZATION' IN TYPEOF(SELF));
  wr28 : NOT ('SYSTEM_MODELLING_ARM.PART' IN TYPEOF(SELF));
  wr29 : NOT ('SYSTEM_MODELLING_ARM.PART_VERSION' IN TYPEOF(SELF));
  wr30 : NOT ('SYSTEM_MODELLING_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr31 : NOT ('SYSTEM_MODELLING_ARM.PERSON' IN TYPEOF(SELF));
  wr32 : NOT ('SYSTEM_MODELLING_ARM.PERSON_IN_ORGANIZATION' IN TYPEOF(SELF));
  wr33 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_AS_INDIVIDUAL' IN TYPEOF(SELF));
  wr34 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_AS_INDIVIDUAL_VERSION' IN TYPEOF(SELF));
  wr35 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_AS_INDIVIDUAL_VIEW' IN TYPEOF(SELF));
  wr36 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr37 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr38 : NOT ('SYSTEM_MODELLING_ARM.PRODUCT_VERSION_RELATIONSHIP' IN TYPEOF(SELF));
  wr39 : NOT ('SYSTEM_MODELLING_ARM.PROJECT' IN TYPEOF(SELF));
  wr40 : NOT ('SYSTEM_MODELLING_ARM.REQUIRED_RESOURCE' IN TYPEOF(SELF));
  wr41 : NOT ('SYSTEM_MODELLING_ARM.REQUIRED_RESOURCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr42 : NOT ('SYSTEM_MODELLING_ARM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr43 : NOT ('SYSTEM_MODELLING_ARM.RESOURCE_ITEM' IN TYPEOF(SELF));
  wr44 : NOT ('SYSTEM_MODELLING_ARM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr45 : NOT ('SYSTEM_MODELLING_ARM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr46 : NOT ('SYSTEM_MODELLING_ARM.STATE_DEFINITION' IN TYPEOF(SELF));
  wr47 : NOT ('SYSTEM_MODELLING_ARM.TASK_IO' IN TYPEOF(SELF));
  wr48 : NOT ('SYSTEM_MODELLING_ARM.TASK_IO_HIERARCHY' IN TYPEOF(SELF));
  wr49 : NOT ('SYSTEM_MODELLING_ARM.VERIFICATION' IN TYPEOF(SELF));
  wr50 : NOT ('SYSTEM_MODELLING_ARM.VIEW_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Resource_item_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE resource_assignment_item = SELECT (
   Activity_method,
   Analysis_assignment,
   Contract,
   Event,
   Interface_connector_occurrence,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_version,
   Product_view_definition,
   Project,
   Verification_evidence,
   Work_order);
END_TYPE;


(* Pruned unused type: resource_item_classification_item  *)

(* USED FROM (Resource_item_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE resource_item_select = SELECT (
   Document,
   Document_definition,
   Document_version,
   File,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Person_in_organization,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_version,
   Product_view_definition,
   Work_order);
END_TYPE;

(* USED FROM (Interface_arm); *)
TYPE connection_definition_items = SELECT
   (Interface_connector_definition, 
    Product_view_definition);
END_TYPE; 
(* USED FROM (Interface_arm); *)
TYPE connection_items = SELECT
   (connection_definition_items, 
    Interface_connector_occurrence, 
    View_definition_relationship);
END_TYPE; 
(* USED FROM (Interface_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE connector_on_item = SELECT (
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Interface_arm); *)
TYPE interface_definition_item = SELECT
   (Interface_connector_occurrence, 
    Product_view_definition);
END_TYPE; 

(* Pruned unused type: breakdown_element_realization_property_assignment_select  *)

(* USED FROM (Product_breakdown_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE breakdown_item = SELECT (
   Breakdown_element_definition,
   Breakdown_element_usage);
END_TYPE;

(* USED FROM (Product_breakdown_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE product_item = SELECT (
   Interface_connector_occurrence,
   Product_view_definition,
   View_definition_usage);
END_TYPE;


(* Pruned unused type: product_as_individual_identification_item  *)


(* Pruned unused type: pdm_activity_item  *)


(* Pruned unused type: pdm_affected_item_select  *)


(* Pruned unused type: pdm_approval_item  *)


(* Pruned unused type: pdm_certification_item  *)


(* Pruned unused type: pdm_classification_item  *)


(* Pruned unused type: pdm_date_or_date_time_item  *)


(* Pruned unused type: pdm_documented_element_select  *)


(* Pruned unused type: pdm_effectivity_item  *)


(* Pruned unused type: pdm_event_item  *)


(* Pruned unused type: pdm_external_class_assigned_name_select  *)


(* Pruned unused type: pdm_identification_item  *)


(* Pruned unused type: pdm_organization_or_person_in_organization_item  *)


(* Pruned unused type: pdm_project_item  *)


(* Pruned unused type: pdm_security_classification_item  *)


(* Pruned unused type: pdm_string_select  *)


(* Pruned unused type: pdm_time_interval_item  *)

(* USED FROM (Configuration_item_arm); *)
TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

(* Pruned unused type: document_management_alias_identification_item  *)


(* Pruned unused type: document_management_approval_item  *)


(* Pruned unused type: document_management_contract_item  *)


(* Pruned unused type: document_management_date_or_date_time_item  *)


(* Pruned unused type: document_management_identification_item  *)


(* Pruned unused type: document_management_person_and_organization_item  *)


(* Pruned unused type: document_management_security_classification_item  *)


(* Pruned unused type: document_management_string_select  *)


(* Pruned unused type: idrm_marked_item  *)

(* USED FROM (Process_property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE characterized_activity_definition = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Condition,
   Condition_relationship,
   Required_resource_assignment,
   Resource_item_assignment);
END_TYPE;


(* Pruned unused type: ps_product_property_assignment  *)

(* USED FROM (Time_interval_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE time_interval_item = SELECT (
   Activity,
   Activity_method_assignment,
   Affected_items_assignment,
   Directed_activity,
   Work_order,
   Work_request);
END_TYPE;


(* Pruned unused type: system_view_definition_identification_item  *)

(* USED FROM (Zonal_breakdown_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE in_zone_item = SELECT (
   Hierarchical_interface_connection,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: requirement_identification_and_version_identification_item  *)

(* USED FROM (Certification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE certification_item = SELECT (
   Activity,
   Activity_method,
   Alternate_product_relationship,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_method_assignment,
   Approving_person_organization,
   Assembly_relationship_substitution,
   Assigned_property,
   behaviour_model,
   Breakdown,
   Document,
   Document_version,
   Interface_connection,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_specification_version,
   Justification,
   Part,
   Part_version,
   Product,
   Product_as_individual,
   Product_as_planned,
   Product_as_realized,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Project,
   Resource_item,
   State_definition,
   Task_element,
   Task_io,
   Verification_evidence,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Multi_linguism_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE string_select = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_method_relationship,
   Activity_property,
   Activity_relationship,
   Alternate_part_relationship,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Approval,
   Approval_relationship,
   Approval_status,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Breakdown,
   Breakdown_element,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_element_version,
   Certification,
   Condition,
   Condition_parameter,
   Condition_relationship,
   Contract,
   Date_or_date_time_assignment,
   Digital_document_definition,
   Document,
   Document_assignment,
   Document_definition_relationship,
   Document_version,
   Event,
   External_item_identification,
   External_source_identification,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Information_right,
   Information_usage_right,
   Interface_connection,
   Interface_connector,
   Interface_connector_definition,
   Interface_connector_occurrence,
   Interface_connector_version,
   Interface_definition_connection,
   Interface_definition_for,
   Justification,
   Justification_assignment,
   Justification_relationship,
   Justification_support_assignment,
   Organization_relationship,
   Part,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_category,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation_item,
   Required_resource,
   Required_resource_relationship,
   Requirement,
   Requirement_assignment,
   Requirement_collection_relationship,
   Requirement_source,
   Requirement_version,
   Requirement_version_relationship,
   Requirement_view_definition,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship,
   Resource_property,
   Task_element,
   Task_element_relationship,
   Tracing_relationship,
   Verification,
   Verification_evidence,
   View_definition_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Project_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE project_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_relationship,
   Alternate_product_relationship,
   Applied_activity_assignment,
   Applied_activity_method_assignment,
   Assembly_relationship_substitution,
   Breakdown,
   Independent_property,
   Interface_connection,
   Interface_definition_connection,
   Product,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Representation,
   Task_element,
   Task_io,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Activity_method_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_method_item = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Analysis_assignment,
   Applied_activity_assignment,
   Approval_assignment,
   Assigned_document_property,
   Assigned_property,
   Behaviour_description_association,
   Breakdown_element,
   Breakdown_element_definition,
   Breakdown_element_usage,
   Breakdown_element_version,
   Certification,
   Condition,
   Contract,
   Date_or_date_time_assignment,
   Document,
   Document_version,
   Event,
   File,
   In_zone,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Justification,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Person,
   Person_in_organization,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   Product_as_individual_view,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Required_resource,
   Required_resource_assignment,
   Requirement_assignment,
   Resource_item,
   Resource_property,
   Security_classification,
   State_definition,
   Task_io,
   Task_io_hierarchy,
   Verification,
   View_definition_relationship);
END_TYPE;


(* Pruned unused type: template_instance  *)

(* USED FROM (Contextual_shape_positioning_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE template_definition_select = SELECT (
   Geometric_model);
END_TYPE;

(* USED FROM (Shape_property_assignment_arm); *)
  TYPE described_element_select = SELECT (
    View_definition_usage,
    Product_occurrence_definition_relationship);
  END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE geometric_item_specific_usage_select = SELECT (
    Shape_element,
    Shape_element_relationship);
  END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_dependent_select = SELECT
    (Item_shape, 
     Shape_element);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_model = SELECT
    (External_geometric_model, 
     Geometric_model);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_select = SELECT
    (Item_shape, 
     Shape_element, 
     Shape_element_relationship);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shapeable_item = SELECT
    (Characterizable_object,
     Product_occurrence_definition_relationship, 
     Product_view_definition, 
     View_definition_usage);
  END_TYPE; 

(* Pruned unused type: spr_documented_element_select  *)


(* Pruned unused type: spr_product_property_assignment  *)


(* Pruned unused type: spr_organization_or_person_in_organization_item  *)

(* USED FROM (Event_arm); *)
TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 
(* USED FROM (Work_request_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE affected_item_select = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Analysis_assignment,
   Approval_assignment,
   Assigned_property,
   Behaviour_description_association,
   Certification_assignment,
   Contract,
   Document,
   Document_assignment,
   Document_definition,
   Document_version,
   Event_assignment,
   File,
   Information_usage_right,
   Interface_connection,
   Interface_connector_occurrence,
   Interface_definition_connection,
   Justification_assignment,
   Organization,
   Person,
   Person_in_organization,
   Product,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Project_assignment,
   Resource_item,
   Resource_property,
   State_definition,
   Verification,
   View_definition_relationship,
   Work_request);
END_TYPE;


(* Pruned unused type: system_and_version_identification_item  *)

(* USED FROM (Event_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE event_item = SELECT (
   Activity,
   Approval,
   Certification,
   Contract,
   Group,
   Justification,
   Product,
   Project,
   Required_resource,
   Verification,
   Work_request);
END_TYPE;


(* Pruned unused type: constructive_element_select  *)


(* Pruned unused type: point_select  *)

(* USED FROM (Elemental_geometric_shape_arm); *)
  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
	Cartesian_transformation_3d);
  END_TYPE;

(* Pruned unused type: geometric_mapping_target  *)

(* USED FROM (Qualified_measure_arm); *)
  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier);
  END_TYPE;
(* USED FROM (Date_time_arm); *)
ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;
(* USED FROM (Activity_as_realized_arm); *)
ENTITY Activity_happening
  SUBTYPE OF (Activity_relationship);
  SELF\Activity_relationship.relating_activity : Activity_actual;  -- actual : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

  (* removed : SELF\Activity_relationship.predicted :  ACTIVITY *)
    DERIVE
      actual : ACTIVITY_ACTUAL := SELF\Activity_relationship.relating_activity;  -- RELATING_ACTIVITY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      predicted : ACTIVITY := SELF\Activity_relationship.related_activity;  -- RELATED_ACTIVITY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

WHERE
  WR1: NOT ('ACTIVITY_AS_REALIZED.ACTIVITY_ACTUAL' IN TYPEOF(predicted));
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Activity_method_arm); *)
ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_assignment;
  analysis : Analysis_version;
  applied_to : analysed_item;
END_ENTITY;
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_design_version_relationship
SUBTYPE OF (Analysis_assignment);
  SELF\Analysis_assignment.applied_to : Product_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_discipline_definition
SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Analysis_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Analysis;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version_sequence
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Analysis_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Analysis_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : ANALYSIS_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : ANALYSIS_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval;
    actual_date  : OPTIONAL date_or_date_time_select;
    planned_date : OPTIONAL date_or_date_time_select;
    purpose      : STRING;
    status       : Approval_status;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_assignment;
    assigned_approval : Approval;
    items             : SET[1:?] OF approval_item;
    role              : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_relationship;
    relation_type     : STRING;
    description       : OPTIONAL STRING;
    relating_approval : Approval;
    related_approval  : Approval;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approval_status;
    status_name : STRING;
  END_ENTITY;
(* USED FROM (Approval_arm); *)
  ENTITY Approving_person_organization;
    approval_date       : OPTIONAL date_or_date_time_select;
    authorized_approval : Approval;
    person_organization : organization_or_person_in_organization_select;
    role                : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Classification_assignment_arm); *)
ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract;
  id             : STRING;
  purpose        : STRING;
  kind	     : STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_assignment;
  assigned_contract  : Contract;
  items              : SET [1:?] OF contract_item;
END_ENTITY;
(* USED FROM (Date_time_assignment_arm); *)
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
(* USED FROM (Person_organization_assignment_arm); *)
ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role            : STRING;
  items           : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;
(* USED FROM (External_analysis_representation_arm); *)
ENTITY External_analysis_model
SUBTYPE OF (Analysis_model);
  external_file : Digital_file;
END_ENTITY;
(* USED FROM (Justification_arm); *)
ENTITY Justification;
  id : STRING;
  name : OPTIONAL STRING;
  description : STRING;
  context_description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Justification_arm); *)
ENTITY Justification_assignment;
  justification : Justification;
  description : OPTIONAL STRING;
  item : justification_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Justification_arm); *)
ENTITY Justification_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_justification : Justification;
  related_justification : Justification;
END_ENTITY;
(* USED FROM (Justification_arm); *)
ENTITY Justification_support_assignment;
  justification : Justification;
  description : OPTIONAL STRING;
  support_item : justification_support_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Measure_of_effectiveness_arm); *)
ENTITY Measure_of_effectiveness
SUBTYPE OF (Requirement_view_definition);
  optimization_direction : maximize_or_minimize;
END_ENTITY;
(* USED FROM (Verification_and_validation_arm); *)
ENTITY Verification;
  verifies : Requirement_assignment;
INVERSE
  verified_by : SET [1 : ?] OF Verification_evidence FOR for_verification;
END_ENTITY;
(* USED FROM (Verification_and_validation_arm); *)
ENTITY Verification_evidence;
  for_verification : Verification;
  items : SET [1 : ?] OF verification_evidence_item;
END_ENTITY;
(* USED FROM (Verification_and_validation_arm); *)
ENTITY Verification_relationship;
  relating : Verification;
  related : Verification;
END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;
(* USED FROM (Behaviour_description_assignment_arm); *)
ENTITY Behaviour_description_association;
  description : OPTIONAL STRING;
  representation : behaviour_model;
  represented_item : behaviour_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Behaviour_view_definition_arm); *)
ENTITY Behaviour_view_definition
SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Behaviour_version;
END_ENTITY;
(* USED FROM (Expression_assignment_arm); *)
ENTITY Expression_assignment;
  expression : Expression;
  item : expression_assignment_item;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY And_expression
SUBTYPE OF (Multiple_arity_boolean_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Binary_boolean_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        XOR_EXPRESSION,
                        EQUALS_EXPRESSION))

SUBTYPE OF (Boolean_expression, Binary_generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Binary_numeric_expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        MINUS_EXPRESSION,
                        DIV_EXPRESSION,
                        MOD_EXPRESSION,
                        SLASH_EXPRESSION,
                        POWER_EXPRESSION))

SUBTYPE OF (Numeric_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands : LIST [2:2] OF Numeric_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Boolean_defined_function 
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Defined_function, Boolean_expression);
END_ENTITY ;
(* USED FROM (Expression_arm); *)
ENTITY Boolean_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_BOOLEAN_EXPRESSION,
                        UNARY_BOOLEAN_EXPRESSION,
                        BINARY_BOOLEAN_EXPRESSION,
                        MULTIPLE_ARITY_BOOLEAN_EXPRESSION,
                        COMPARISON_EXPRESSION,
                        INTERVAL_EXPRESSION,
                        BOOLEAN_DEFINED_FUNCTION))

SUBTYPE OF (Expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Boolean_literal
SUBTYPE OF (Simple_boolean_expression, Generic_literal);
	the_value: BOOLEAN;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Boolean_variable
SUBTYPE OF (Simple_boolean_expression, Variable);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_equal
SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPARISON_EQUAL,
                        COMPARISON_GREATER,
                        COMPARISON_GREATER_EQUAL,
                        COMPARISON_LESS,
                        COMPARISON_LESS_EQUAL,
                        COMPARISON_NOT_EQUAL,
                        LIKE_EXPRESSION))

SUBTYPE OF (Boolean_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands	: LIST [2:2] OF Expression; 
WHERE 
	WR1: (
	('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION' 
		IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
AND 
 	('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION' 
		IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
OR
 	(('BOOLEAN_EXPRESSION_ARM.BOOLEAN_EXPRESSION' 
		IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
AND 
	('BOOLEAN_EXPRESSION_ARM.BOOLEAN_EXPRESSION'
		IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
OR
	(('STRING_EXPRESSION_ARM.STRING_EXPRESSION'
		IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
AND 
	('STRING_EXPRESSION_ARM.STRING_EXPRESSION' 
		IN TYPEOF(SELF\Binary_generic_expression.operands[2])));
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_greater
SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_greater_equal
SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_less
SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_less_equal
SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Comparison_not_equal
	SUBTYPE OF (Comparison_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Concat_expression
SUBTYPE OF (String_expression, Multiple_arity_generic_expression);
	SELF\Multiple_arity_generic_expression.operands: LIST [2 : ?] OF String_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Defined_function
	 ABSTRACT SUPERTYPE;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Div_expression
	SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Equals_expression
SUBTYPE OF (Binary_boolean_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        NUMERIC_EXPRESSION,
                        BOOLEAN_EXPRESSION,
                        STRING_EXPRESSION))

	SUBTYPE OF (Generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Format_function
SUBTYPE OF (String_expression, Binary_generic_expression);
DERIVE
	value_to_format: Generic_expression:=SELF\Binary_generic_expression.operands[1];
	format_string:Generic_expression:=SELF\Binary_generic_expression.operands[2];
WHERE
	WR1: (('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION') 
					IN TYPEOF(value_to_format)) 
			AND (('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION') 
					IN TYPEOF(format_string));
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Index_expression
SUBTYPE OF (String_expression, Binary_generic_expression);

DERIVE
	operand:Generic_expression:= SELF\Binary_generic_expression.operands[1];
	index:Generic_expression:= SELF\Binary_generic_expression.operands[2];
WHERE
WR1: ('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' IN TYPEOF(operand))
		AND ('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF(index));
	WR2: is_int_expr (index);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Int_literal
SUBTYPE OF (Literal_number);
	SELF\Literal_number.the_value: INTEGER;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Int_numeric_variable
SUBTYPE OF (Numeric_variable);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Interval_expression
SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression) ;
DERIVE
	interval_low: Generic_expression
			:= SELF\Multiple_arity_generic_expression.operands[1];
	interval_item: Generic_expression
			:= SELF\Multiple_arity_generic_expression.operands[2];
	interval_high: Generic_expression
			:= SELF\Multiple_arity_generic_expression.operands[3];
WHERE
	WR1:('SYSTEM_MODELLING_ARM_LF.EXPRESSION' 
				IN TYPEOF(interval_low))
		AND ('SYSTEM_MODELLING_ARM_LF.EXPRESSION' 
				IN TYPEOF(interval_item) )
		AND ('SYSTEM_MODELLING_ARM_LF.EXPRESSION' 
				IN TYPEOF(interval_high));
	WR2:(('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
				IN TYPEOF (SELF.Interval_low)) 
			AND ('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION'  
				IN TYPEOF (SELF.Interval_high)) 
			AND ('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
				IN TYPEOF (SELF.Interval_item))) 
		OR
		(('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
			IN TYPEOF(SELF.Interval_low)) 
			AND ('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION' 
				IN TYPEOF(SELF.Interval_item)) 
			AND ('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION' 
				IN TYPEOF(SELF.Interval_high)));
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Like_expression
SUBTYPE OF (Comparison_expression);
WHERE
	WR1: ('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
		IN TYPEOF(SELF\Comparison_expression.operands[1])) AND 
		('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
		IN TYPEOF(SELF\Comparison_expression.operands[2]));
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Literal_number 
 ABSTRACT SUPERTYPE OF (ONEOF (
                        INT_LITERAL,
                        REAL_LITERAL))

SUBTYPE OF (Simple_numeric_expression, Generic_literal);
	the_value: NUMBER;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Minus_expression
	SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Mod_expression
	SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Mult_expression
	SUBTYPE OF (Multiple_arity_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Multiple_arity_boolean_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        AND_EXPRESSION,
                        OR_EXPRESSION))

SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression);
	SELF\Multiple_arity_generic_expression.operands : LIST [2:?] OF Boolean_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Multiple_arity_function_call
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Multiple_arity_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Multiple_arity_numeric_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        PLUS_EXPRESSION,
                        MULT_EXPRESSION,
                        MULTIPLE_ARITY_FUNCTION_CALL))

SUBTYPE OF (Numeric_expression, Multiple_arity_generic_expression);
	SELF\Multiple_arity_generic_expression.operands	: LIST [2:?] OF Numeric_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Not_expression
SUBTYPE OF (Unary_boolean_expression);
SELF\Unary_generic_expression.operand: Boolean_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Numeric_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF (Expression);
DERIVE
	is_int: BOOLEAN := Is_int_expr (SELF);
	sql_mappable: BOOLEAN := Is_sql_mappable (SELF);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Numeric_variable
SUPERTYPE OF (ONEOF (
              INT_NUMERIC_VARIABLE,
              REAL_NUMERIC_VARIABLE))

SUBTYPE OF (Simple_numeric_expression, Variable);


WHERE 
WR1:	('SYSTEM_MODELLING_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF(SELF) ) OR
	('SYSTEM_MODELLING_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF(SELF) );
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Or_expression
SUBTYPE OF (Multiple_arity_boolean_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Plus_expression
	SUBTYPE OF (Multiple_arity_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Power_expression
SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Real_literal
SUBTYPE OF (Literal_number); 
	SELF\Literal_number.the_value: REAL;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Real_numeric_variable
SUBTYPE OF (Numeric_variable);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Simple_boolean_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        BOOLEAN_LITERAL,
                        BOOLEAN_VARIABLE))

SUBTYPE OF (Boolean_expression, Simple_generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Simple_numeric_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        LITERAL_NUMBER,
                        NUMERIC_VARIABLE))

SUBTYPE OF (Numeric_expression, Simple_generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Simple_string_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        STRING_LITERAL,
                        STRING_VARIABLE))

SUBTYPE OF (String_expression, Simple_generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Slash_expression
	SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Sql_mappable_defined_function
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Defined_function);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY String_defined_function 
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Defined_function, String_expression);
END_ENTITY ;
(* USED FROM (Expression_arm); *)
ENTITY String_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_STRING_EXPRESSION,
                        INDEX_EXPRESSION,
                        SUBSTRING_EXPRESSION,
                        CONCAT_EXPRESSION,
                        FORMAT_FUNCTION,
                        STRING_DEFINED_FUNCTION))

SUBTYPE OF (Expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY String_literal
SUBTYPE OF (Simple_string_expression, Generic_literal);
	the_value: STRING;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY String_variable
SUBTYPE OF (Simple_string_expression, Variable);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Substring_expression
SUBTYPE OF (String_expression, Multiple_arity_generic_expression);

DERIVE
	operand:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[1];
	index1:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[2];
	index2:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[3]; 
WHERE
	WR1: ('SYSTEM_MODELLING_ARM_LF.STRING_EXPRESSION' 
					IN TYPEOF(operand))
			AND ('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION' 
					IN TYPEOF(index1))
			AND ('SYSTEM_MODELLING_ARM_LF.NUMERIC_EXPRESSION' 
					IN TYPEOF(index2));
	WR2: SIZEOF(SELF\Multiple_arity_generic_expression.operands)=3;
	WR3: is_int_expr (index1);
	WR4: is_int_expr (index2);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Unary_boolean_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF (Boolean_expression, Unary_generic_expression);
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Unary_numeric_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF (Numeric_expression, Unary_generic_expression);	
  SELF\Unary_generic_expression.operand	: Numeric_expression;
END_ENTITY;
(* USED FROM (Expression_arm); *)
ENTITY Xor_expression
SUBTYPE OF (Binary_boolean_expression);
	SELF\Binary_generic_expression.operands: LIST [2:2] OF Boolean_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Binary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:2] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Environment;
	syntactic_representation: Generic_variable;
	semantics: Variable_semantics;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_GENERIC_EXPRESSION,
                        UNARY_GENERIC_EXPRESSION,
                        BINARY_GENERIC_EXPRESSION,
                        MULTIPLE_ARITY_GENERIC_EXPRESSION));
WHERE 
WR1: Is_Acyclic(SELF);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_literal
 ABSTRACT SUPERTYPE

SUBTYPE OF (Simple_generic_expression);
END_ENTITY; 
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_variable
 ABSTRACT SUPERTYPE OF (
                        VARIABLE)

SUBTYPE OF (Simple_generic_expression);
INVERSE
	interpretation : Environment FOR syntactic_representation;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Multiple_arity_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:?] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Simple_generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERIC_LITERAL,
                        GENERIC_VARIABLE))

SUBTYPE OF (Generic_expression);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Unary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operand: Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_variable);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable_semantics
 ABSTRACT SUPERTYPE;
END_ENTITY;
(* USED FROM (External_functional_model_arm); *)
ENTITY External_functional_model
SUBTYPE OF (Function_based_behaviour_model);
  external_file : Digital_file;
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Digital_file
SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File
 ABSTRACT SUPERTYPE OF (ONEOF (
                        DIGITAL_FILE,
                        HARDCOPY));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Hardcopy
SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File_location_identification
SUBTYPE OF (External_item_identification);
WHERE
WR1: 'SYSTEM_MODELLING_ARM_LF.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (Function_based_behaviour_representation_arm); *)
ENTITY Function_based_behaviour_model
SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Function_based_behaviour_representation_context;
  SELF\Representation.items : SET [1 : ?] OF Function_based_behaviour_representation_item;
END_ENTITY;
(* USED FROM (Function_based_behaviour_representation_arm); *)
ENTITY Function_based_behaviour_representation_context
SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Function_based_behaviour_representation_arm); *)
ENTITY Function_based_behaviour_representation_item
SUBTYPE OF (Representation_item);
  item : Task_element;
END_ENTITY;
(* USED FROM (General_model_parameter_arm); *)
ENTITY Constrained_general_parameter_relationship
SUBTYPE OF (Independent_property_relationship);
  SELF\Independent_property_relationship.relating : General_model_parameter;
  SELF\Independent_property_relationship.related : General_model_parameter;
  required_class : Class;
WHERE
    WR1: (required_class.id IN CLASSOF(related)) AND (required_class.id IN CLASSOF(relating));
END_ENTITY;
(* USED FROM (General_model_parameter_arm); *)
ENTITY General_model_parameter
SUBTYPE OF (Independent_property);
END_ENTITY;
(* USED FROM (General_model_parameter_arm); *)
ENTITY Parameter_value_representation_item
SUBTYPE OF (Representation_item);
  parameter_value : parameter_value_select;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource
   ABSTRACT SUPERTYPE OF (ONEOF (
                        REQUIRED_RESOURCE_BY_RESOURCE_ITEM,
                        REQUIRED_RESOURCE_BY_SPECIFICATION));
  name : STRING;
  description : OPTIONAL STRING;
  required_quantity : OPTIONAL Value_with_unit;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_assignment;
  assigned_resource : Required_resource;
  item : required_resource_item;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_by_resource_item
  SUBTYPE OF (Required_resource);
  resource_item : Resource_item;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_by_specification
  SUBTYPE OF (Required_resource);
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : Required_resource;
  related : Required_resource;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property;
  name : STRING;
  description : STRING;
  described_element : characterized_resource_select;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;
(* USED FROM (Textual_expression_representation_arm); *)
ENTITY Included_text_based_representation
SUBTYPE OF (Representation_item);
  source : Text_based_representation;
END_ENTITY;
(* USED FROM (Textual_expression_representation_arm); *)
ENTITY Text_based_representation
SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Text_based_representation_context;
  SELF\Representation.items : SET [1 : 1] OF text_based_item_select;
END_ENTITY;
(* USED FROM (Textual_expression_representation_arm); *)
ENTITY Text_based_representation_context
SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Textual_expression_representation_arm); *)
ENTITY Textual_expression_composition
SUBTYPE OF (Representation_item);
  content : list_or_set_of_text_based_item;
END_ENTITY;
(* USED FROM (Textual_expression_representation_arm); *)
ENTITY Textual_expression_representation_item
SUBTYPE OF (String_representation_item);
END_ENTITY;
(* USED FROM (Alias_identification_arm); *)
  ENTITY Alias_identification
    SUBTYPE OF (Identification_assignment);
      SELF\Identification_assignment.items : SET [1:?] OF alias_identification_item;
    DERIVE
      SELF\Identification_assignment.role : STRING := 'alias';
  END_ENTITY;
(* USED FROM (Identification_assignment_arm); *)
ENTITY Identification_assignment;
  identifier  : STRING;
  role        : STRING;
  description : OPTIONAL STRING;
  items       : SET [1:?] OF identification_item;
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
ENTITY Behaviour
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
ENTITY Behaviour_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Behaviour;
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
ENTITY Behaviour_version_sequence
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Behaviour_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Behaviour_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : BEHAVIOUR_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : BEHAVIOUR_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'SYSTEM_MODELLING_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'SYSTEM_MODELLING_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class
  SUPERTYPE OF (ONEOF (
              CLASS_BY_EXTENSION,
              CLASS_BY_INTENSION));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_assignment;
  assigned_condition : Condition;
  item : condition_item;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition : Condition;
  parameter : OPTIONAL condition_parameter_item;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_condition : Condition;
  related_condition : Condition;
END_ENTITY;
(* USED FROM (Description_assignment_arm); *)
ENTITY Description_text;
  description : STRING;
END_ENTITY;
(* USED FROM (Description_assignment_arm); *)
ENTITY Description_text_assignment;
  description : Description_text;
  items : SET [1 : ?] OF description_item;
END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class
    SUBTYPE OF (Class);
      external_source : External_class_library;
  END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class_library
    SUBTYPE OF (External_source);
  END_ENTITY;
(* USED FROM (External_source_arm); *)
  ENTITY External_source; 
    id          : STRING;
    description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Name_assignment_arm); *)
ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (External_state_based_behaviour_model_arm); *)
ENTITY External_state_based_behaviour_model
SUBTYPE OF (State_based_behaviour_model);
  external_file : Digital_file;
END_ENTITY;
(* USED FROM (State_based_behaviour_representation_arm); *)
ENTITY State_based_behaviour_model
SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : State_based_behaviour_representation_context;
  SELF\Representation.items : SET [1 : ?] OF State_based_behaviour_representation_item;
END_ENTITY;
(* USED FROM (State_based_behaviour_representation_arm); *)
ENTITY State_based_behaviour_representation_context
SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (State_based_behaviour_representation_arm); *)
ENTITY State_based_behaviour_representation_item
SUBTYPE OF (Representation_item);
  item : State_based_behaviour_element;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation;
  id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_item
   ABSTRACT SUPERTYPE;
  name : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit
  SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'SYSTEM_MODELLING_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY Applied_state_definition_assignment;
  assigned_to : state_definition_of_item;
  described_state_definition : State_definition;
  role : State_definition_role;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY Composition_of_state_definition
SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.part :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.whole :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      part :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      whole :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_relationship;
  name : STRING;
  relating : SET [1 : ?] OF State_definition;
  description : OPTIONAL STRING;
  related : SET [1 : ?] OF State_definition;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_transition_definition
SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.end_state :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.start_state :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      end_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      start_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;
(* USED FROM (Independent_property_representation_arm); *)
ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Independent_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : INDEPENDENT_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Parameter_value_specification_arm); *)
ENTITY Named_variable_semantics
SUBTYPE OF (Variable_semantics);
  name : STRING;
  variable_context : Generic_expression;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_definition_representation
   ABSTRACT SUPERTYPE;
    description : OPTIONAL STRING;
    definition : represented_definition;
    rep : Representation;
    role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Assigned_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : ASSIGNED_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Abs_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Acos_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Asin_function
	SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Atan_function
	SUBTYPE OF (Binary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Binary_function_call
 ABSTRACT SUPERTYPE OF (
                        ATAN_FUNCTION)

SUBTYPE OF (Binary_numeric_expression);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Cos_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Exp_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Function_parameter_value
	SUPERTYPE OF (
              INT_VALUE_FUNCTION)

	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Int_value_function
	SUBTYPE OF (Function_parameter_value);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Integer_defined_function 
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Numeric_defined_function);
END_ENTITY ;
(* USED FROM (Numeric_function_arm); *)
ENTITY Length_function
	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Log10_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Log2_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Log_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Maximum_function
	SUBTYPE OF (Multiple_arity_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Minimum_function
	SUBTYPE OF (Multiple_arity_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Minus_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Numeric_defined_function
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        INTEGER_DEFINED_FUNCTION,
                        REAL_DEFINED_FUNCTION))

	SUBTYPE OF (Numeric_expression, Defined_function);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Odd_function
SUBTYPE OF (Unary_boolean_expression);
	SELF\Unary_generic_expression.operand: Numeric_expression;
WHERE
	WR1: Is_int_expr(SELF\Numeric_expression);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Real_defined_function 
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Numeric_defined_function);
END_ENTITY ;
(* USED FROM (Numeric_function_arm); *)
ENTITY Sin_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Square_root_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Tan_function
SUBTYPE OF (Unary_function_call);
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
ENTITY Unary_function_call
 ABSTRACT SUPERTYPE OF (ONEOF (
                        ABS_FUNCTION,
                        MINUS_FUNCTION,
                        SIN_FUNCTION,
                        COS_FUNCTION,
                        TAN_FUNCTION,
                        ASIN_FUNCTION,
                        ACOS_FUNCTION,
                        EXP_FUNCTION,
                        LOG_FUNCTION,
                        LOG2_FUNCTION,
                        LOG10_FUNCTION,
                        SQUARE_ROOT_FUNCTION))

	SUBTYPE OF (Unary_numeric_expression);
END_ENTITY;
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category;  
  id		: OPTIONAL STRING;
  name	: STRING;
  description : OPTIONAL STRING;  
END_ENTITY;   
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category_hierarchy;  
  super_category : Product_category;  
  sub_category   : Product_category;
END_ENTITY;   
(* USED FROM (Product_identification_arm); *)
ENTITY Product;
  id : STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product_category_assignment;
  category : Product_category;
  products : SET[1:?] OF Product;
END_ENTITY;
(* USED FROM (Product_version_arm); *)
ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
(* USED FROM (Activity_as_realized_arm); *)
ENTITY Activity_actual
  SUBTYPE OF (Activity);
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_model
SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Analysis_representation_context;
  SELF\Representation.items : SET [1 : ?] OF Analysis_representation_item;
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_representation_context
SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_representation_item  ABSTRACT SUPERTYPE

SUBTYPE OF (Representation_item);
END_ENTITY;
(* USED FROM (Requirement_view_definition_arm); *)
ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
    SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : documented_element_select;
  role : STRING;
END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Partial_document_assignment
SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_definition
  SUPERTYPE OF (ONEOF (
              DIGITAL_DOCUMENT_DEFINITION,
              PHYSICAL_DOCUMENT_DEFINITION))
  SUBTYPE OF (Product_view_definition);

  (* removed : SELF\Product_view_definition.description :  STRING *)
  SELF\Product_view_definition.defined_version : Document_version;  -- associated_document_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_document_version : DOCUMENT_VERSION := SELF\Product_view_definition.defined_version;  -- DEFINED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      description : STRING := SELF\Product_view_definition.name;  -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'SYSTEM_MODELLING_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Assigned_document_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : document_property_item;
DERIVE
  SELF\Assigned_property.name : STRING := 'document property';
UNIQUE
  UR1: SELF\Assigned_property.described_element;
WHERE
  WR1: SIZEOF(['SYSTEM_MODELLING_ARM_LF.DOCUMENT_DEFINITION', 'SYSTEM_MODELLING_ARM_LF.FILE']*TYPEOF(SELF\Assigned_property.described_element)) = 1;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Descriptive_document_property
  SUBTYPE OF (String_representation_item);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Document_property_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF descriptive_or_numerical;
WHERE
  WR1: SIZEOF(QUERY( pr <* USEDIN(SELF, 'SYSTEM_MODELLING_ARM_LF.PROPERTY_DEFINITION_REPRESENTATION.REP') | 'SYSTEM_MODELLING_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF (pr\Property_representation.property)))> 0;
  WR2: SELF\Representation.context_of_items.kind = 'document parameters';
  WR3: valid_document_property_representation(SELF);
  WR4: SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name)) > 1 ))= 0;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Numerical_document_property
  SUBTYPE OF (Numerical_item_with_unit);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Measure_item
    ABSTRACT SUPERTYPE OF (ONEOF (
                        MEASURE_ITEM_WITH_PRECISION,
                        NUMERICAL_ITEM_WITH_GLOBAL_UNIT,
                        NUMERICAL_ITEM_WITH_UNIT,
                        VALUE_LIST,
                        VALUE_RANGE,
                        VALUE_RANGE_WITH_GLOBAL_UNIT,
                        VALUE_SET,
                        VALUE_WITH_TOLERANCES) ) 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'SYSTEM_MODELLING_ARM_LF.REPRESENTATION.ITEMS'))>0;
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'SYSTEM_MODELLING_ARM_LF.REPRESENTATION.ITEMS')| 'SYSTEM_MODELLING_ARM_LF.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Property_value_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;
(* USED FROM (Effectivity_application_arm); *)
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : date_or_event;
  end_bound   : OPTIONAL date_or_event;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity
  SUPERTYPE OF (ONEOF (
              SERIAL_EFFECTIVITY,
              DATED_EFFECTIVITY,
              LOT_EFFECTIVITY,
              TIME_INTERVAL_EFFECTIVITY));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
(* USED FROM (Information_rights_arm); *)
ENTITY Applied_information_usage_right;
  item : SET[1:?] OF information_usage_right_item;
  right_applied : Information_usage_right;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right;
  id : STRING;
  name : STRING;
  comment : OPTIONAL STRING;
  grants_right : SET[1:?] OF Information_right;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right_relationship;
  relating : Information_usage_right;
  related : Information_usage_right;
  relation_type : STRING;
END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : Product_view_definition;
  related_view : Product_view_definition;
END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
  ENTITY Requirement_assignment;
    id                   : STRING;
    description          : OPTIONAL STRING;
    assigned_requirement : Requirement_view_definition;
    assigned_to          : requirement_assignment_item;
  END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
  ENTITY Requirement_source;
    id                  : STRING;
    description         : OPTIONAL STRING;
    source              : requirement_source_item;
    sourced_requirement : Requirement_view_definition;
  END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_collection_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Requirement_view_definition;  -- collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\View_definition_relationship.related_view : Requirement_view_definition;  -- member : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      collection : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      member : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Tracing_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Requirement_view_definition;  -- traces_from : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\View_definition_relationship.related_view : Requirement_view_definition;  -- traces_to : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      traces_from : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      traces_to : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Decision_path;
  condition : Condition;
  defined_in : Multiple_decision_point;
  path_element : Task_element;
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Multiple_decision_point
SUBTYPE OF (Structured_task_element);
INVERSE
  paths : SET [2 : ?] OF Decision_path FOR defined_in;
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Task_io
SUBTYPE OF (Task_element_assignment);
  SELF\Applied_activity_method_assignment.assigned_activity_method : Task_step;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Task_io_hierarchy;
  child : Task_io;
  parent : Task_io;
WHERE
  wr1: child.role = parent.role;
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Task_step_hierarchy
SUBTYPE OF (Task_element_relationship);
  SELF\Task_element_relationship.related_method : Task_step;  -- child : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Task_element_relationship.relating_method : Task_step;  -- parent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      child : TASK_STEP := SELF\Task_element_relationship.related_method;  -- RELATED_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent : TASK_STEP := SELF\Task_element_relationship.relating_method;  -- RELATING_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Concurrent_elements
SUBTYPE OF (Structured_task_element);
  elements : SET [2 : ?] OF Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Decision_point
SUBTYPE OF (Structured_task_element);
  condition : Condition;
  true_case_element : OPTIONAL Task_element;
  false_case_element : OPTIONAL Task_element;
  unknown_case_element : OPTIONAL Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY End_task
SUBTYPE OF (Task_element);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Exit_loop
SUBTYPE OF (Task_element);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Looping_element
SUPERTYPE OF (ONEOF (
              REPEAT_COUNT,
              REPEAT_UNTIL,
              REPEAT_WHILE))

SUBTYPE OF (Structured_task_element);
  repeated_element : Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_count
SUBTYPE OF (Looping_element);
  count : INTEGER;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_until
SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_while
SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Structured_task_element
 ABSTRACT SUPERTYPE OF (ONEOF (
                        CONCURRENT_ELEMENTS,
                        DECISION_POINT,
                        LOOPING_ELEMENT,
                        TASK_ELEMENT_SEQUENCE))

SUBTYPE OF (Task_element);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element
 ABSTRACT SUPERTYPE OF (ONEOF (
                        END_TASK,
                        EXIT_LOOP,
                        STRUCTURED_TASK_ELEMENT,
                        TASK_STEP))

SUBTYPE OF (Activity_method);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element_assignment
SUBTYPE OF (Applied_activity_method_assignment);
  SELF\Applied_activity_method_assignment.assigned_activity_method : Task_element;  -- assigned_task_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Applied_activity_method_assignment.items : SET [1 : ?] OF task_item;
    DERIVE
      assigned_task_element : TASK_ELEMENT := SELF\Applied_activity_method_assignment.assigned_activity_method;  -- ASSIGNED_ACTIVITY_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element_relationship
SUBTYPE OF (Activity_method_relationship);
  SELF\Activity_method_relationship.relating_method : Task_element;
  SELF\Activity_method_relationship.related_method : Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element_sequence
SUBTYPE OF (Structured_task_element);
  elements : LIST [2 : ?] OF Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_step
SUBTYPE OF (Task_element);
  SELF\Activity_method.description : STRING;                  -- step_text : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      step_text : STRING := SELF\Activity_method.description;  -- DESCRIPTION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_group_relationship
  SUBTYPE OF (Resource_item_relationship);
  quantity : OPTIONAL Value_with_unit;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item;
  name : STRING;
  description : OPTIONAL STRING;
  resource_items : OPTIONAL SET[0:?] OF resource_item_select;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item_assignment;
  assigned_resource : Resource_item;
  item : resource_assignment_item;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : Resource_item;
  related : Resource_item;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Hierarchical_interface_connection
  SUBTYPE OF (Interface_connection);
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_connection;
  id : STRING;
  description : OPTIONAL STRING;
  connection_type : STRING;
  connecting : connection_items;
  connected : connection_items;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_connector
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_connector_definition
  SUBTYPE OF (Product_view_definition);
  connector_on : Product_view_definition;
  SELF\Product_view_definition.defined_version : Interface_connector_version;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_connector_occurrence;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  occurrence_of : Interface_connector_definition;
  connector_on : connector_on_item;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_connector_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Interface_connector;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_definition_connection;
  id : STRING;
  description : OPTIONAL STRING;
  connection_type : STRING;
  connecting : connection_definition_items;
  connected : connection_definition_items;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_definition_for;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  interface : Interface_specification_definition;
  interface_component : interface_definition_item;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_specification
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_specification_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Interface_specification_version;
END_ENTITY;
(* USED FROM (Interface_arm); *)
ENTITY Interface_specification_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Interface_specification;
END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown         : Physical_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Physical_element_definition;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_version
    SUBTYPE OF (Breakdown_version);
      SELF\Breakdown_version.of_product : Physical_breakdown;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Physical_element_version;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\View_definition_relationship.relating_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\View_definition_relationship.related_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Physical_element;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_context;
    id                : STRING;
    name              : STRING;
    description       : OPTIONAL STRING;
    breakdown         : Breakdown_version;
    breakdown_element : Breakdown_element_definition;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_definition
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Breakdown_element_version;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_realization
    SUBTYPE OF (Product_definition_element_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_usage
    SUBTYPE OF (View_definition_usage);
      name : STRING;

      SELF\View_definition_relationship.relating_view : Breakdown_element_definition;  -- parent_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.related_view : Breakdown_element_definition;  -- child_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      child_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown_element;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_of;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : Breakdown_version;
    of_view     : Product_view_definition;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown;
    INVERSE
      breakdown_of : SET[1:?] OF Breakdown_of FOR breakdown;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Product_definition_element_relationship;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : breakdown_item;
    product     : product_item;
  END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_version
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_AS_PLANNED,
                        PRODUCT_AS_REALIZED))
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_view
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_planned
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_realized
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_to_individual;
  product_design : Product;
  individual_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_version_to_individual;
  product_design_version : Product_version;
  individual_product : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_planned_to_realized;
  planned_product : Product_as_planned;
  realized_product : Product_as_realized;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Assembly_component_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
                        NEXT_ASSEMBLY_USAGE,
                        PROMISSORY_USAGE,
                        COMPONENT_UPPER_LEVEL_IDENTIFICATION) ) 
  SUBTYPE OF (Product_occurrence_definition_relationship);
    location_indicator : OPTIONAL STRING;
    quantity : OPTIONAL Value_with_unit;
 WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN
TYPEOF(quantity.value_component))) XOR
(quantity.value_component > 0));
END_ENTITY; 
(* USED FROM (Assembly_structure_arm); *)
ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Product_occurrence_definition_relationship
   ABSTRACT SUPERTYPE; 
    relating_view : Product_view_definition;
    related_view  : Product_view_definition;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship ;
  WR2: SELF\Product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\Product_occurrence_definition_relationship.relating_view;
  WR3: SELF\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view , 'SYSTEM_MODELLING_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['SYSTEM_MODELLING_ARM_LF.NEXT_ASSEMBLY_USAGE', 'SYSTEM_MODELLING_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;
(* USED FROM (Configuration_effectivity_arm); *)
ENTITY Item_usage_effectivity;
  effectivity_domain : Effectivity;
  item_usage_relationship : View_definition_usage;
  resolved_configuration : Item_design_association;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;
(* USED FROM (Incomplete_data_reference_mechanism_arm); *)
  ENTITY Incomplete_reference_marking
    SUBTYPE OF (Classification_assignment);
    WHERE
      WR1: SIZEOF(QUERY(item <* SELF\Classification_assignment.items |  NOT ('SYSTEM_MODELLING_ARM_LF.IDRM_MARKED_ITEM' IN TYPEOF(item)))) = 0;
      WR2: SELF\Classification_assignment.assigned_class.id = 'reference';
  END_ENTITY;
(* USED FROM (Part_view_definition_arm); *)
ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property;
    name              : STRING;
    description       : STRING;
    described_element : characterized_activity_definition;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property_representation;
    description : OPTIONAL STRING;
    property    : Activity_property;
    rep         : Representation;
    role        : STRING;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Applied_independent_activity_property
    SUBTYPE OF (Activity_property);
      base_element_property : Independent_property;
    DERIVE
      SELF\Activity_property.name : STRING := base_element_property.property_type;
  END_ENTITY;
(* USED FROM (Product_structure_arm); *)
ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_assignment;
  assigned_time_interval : Time_interval;
  role : Time_interval_role;
  items : SET[1:?] OF time_interval_item;
END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_role;
  name : STRING;
  description : STRING;
END_ENTITY;
(* USED FROM (Work_order_arm); *)
ENTITY Directed_activity
  SUBTYPE OF (Activity);
  directive : Work_order;
END_ENTITY;
(* USED FROM (Work_order_arm); *)
ENTITY Work_order;
  name : STRING;
  description : OPTIONAL STRING;
  in_response_to : SET[0:?] OF Work_request;
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_breakdown
  SUBTYPE OF (Breakdown);
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_breakdown_context
  SUBTYPE OF (Breakdown_context);
  SELF\Breakdown_context.breakdown : System_breakdown_version;
  SELF\Breakdown_context.breakdown_element : System_element_definition;
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_breakdown_version
  SUBTYPE OF (Breakdown_version);
  SELF\Breakdown_version.of_product : System_breakdown;
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_element
  SUBTYPE OF (Breakdown_element);
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_element_definition
  SUBTYPE OF (Breakdown_element_definition);
  SELF\Breakdown_element_definition.defined_version : System_element_version;
END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_element_usage
  SUBTYPE OF (Breakdown_element_usage);
  SELF\View_definition_relationship.relating_view : System_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
  SELF\View_definition_relationship.related_view : System_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

END_ENTITY;
(* USED FROM (System_breakdown_arm); *)
ENTITY System_element_version
  SUBTYPE OF (Breakdown_element_version);
  SELF\Breakdown_element_version.of_product : System_element;
END_ENTITY;
(* USED FROM (System_view_definition_arm); *)
ENTITY System_view_definition
SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : System_version;
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY In_zone;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  located_item : in_zone_item;
  zone : Zone_element_definition;
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_breakdown
  SUBTYPE OF (Breakdown);
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_breakdown_context
  SUBTYPE OF (Breakdown_context);
  SELF\Breakdown_context.breakdown : Zone_breakdown_version;
  SELF\Breakdown_context.breakdown_element : Zone_element_definition;
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_breakdown_version
  SUBTYPE OF (Breakdown_version);
  SELF\Breakdown_version.of_product : Zone_breakdown;
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_element
  SUBTYPE OF (Breakdown_element);
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_element_definition
  SUBTYPE OF (Breakdown_element_definition);
  SELF\Breakdown_element_definition.defined_version : Zone_element_version;
END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_element_usage
  SUBTYPE OF (Breakdown_element_usage);
  SELF\View_definition_relationship.relating_view : Zone_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
  SELF\View_definition_relationship.related_view : Zone_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

END_ENTITY;
(* USED FROM (Zonal_breakdown_arm); *)
ENTITY Zone_element_version
  SUBTYPE OF (Breakdown_element_version);
  SELF\Breakdown_element_version.of_product : Zone_element;
END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
  ENTITY Requirement
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
  ENTITY Requirement_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Requirement;
  END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
  ENTITY Requirement_version_relationship
    SUBTYPE OF (Product_version_relationship);
      SELF\Product_version_relationship.relating_version : Requirement_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\Product_version_relationship.related_version : Requirement_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : REQUIREMENT_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : REQUIREMENT_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part
  SUBTYPE OF (Product);
WHERE
  WR1: SIZEOF(['part', 'raw material', 'tool']*types_of_product(SELF))=1;
END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Contextual_shape_representation;
      contextual_shape          : Contextual_item_shape;
      representing_relationship : Geometric_model_relationship;
    DERIVE
      context_representation    : Geometric_model := representing_relationship.rep_2 ;
      positioned_representation : Geometric_model := representing_relationship.rep_1 ;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_operator_transformation
    SUBTYPE OF (Geometric_relationship_with_operator_transformation,
      Definitional_representation_relationship);
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_placement_transformation
    SUBTYPE OF (Geometric_relationship_with_placement_transformation,
      Definitional_representation_relationship);
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement_operation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_PLACEMENT,
                        GEOMETRIC_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_model_relationship_with_transformation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_RELATIONSHIP_WITH_PLACEMENT_TRANSFORMATION,
                        GEOMETRIC_RELATIONSHIP_WITH_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Geometric_model_relationship);
    WHERE  
      WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_operator_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: cartesian_transformation;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_placement_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: Axis_placement_mapping;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Shape_placement_association
    SUBTYPE OF (Shape_description_association);
      SELF\Shape_description_association.representation             : Geometric_placement_model;
      SELF\Shape_description_association.represented_characteristic : Contextual_item_shape;
END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Definitional_representation_relationship
    SUBTYPE OF (Representation_relationship);
      WHERE
        WR1: acyclic_representation_relationship(SELF,
          [SELF\representation_relationship.rep_2],
          'SYSTEM_MODELLING_ARM_LF.'+
          'REPRESENTATION');
  END_ENTITY;  
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Geometric_model_relationship
   SUBTYPE OF (Representation_relationship);
      SELF\Representation_relationship.rep_1 : Geometric_model;
      SELF\Representation_relationship.rep_2 : Geometric_model;
    WHERE
      WR1 : rep_1 <> rep_2;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Contextual_item_shape
    SUBTYPE OF (Item_shape);
      SELF\Item_shape.described_element : described_element_select;
    DERIVE
      shaped_product : Product_view_definition := spa_get_definition(SELF);
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Geometric_item_specific_usage;
      name            : STRING;
      description     : OPTIONAL STRING;
      definition      : geometric_item_specific_usage_select;
      identified_item : Detailed_geometric_model_element;
      used_model      : shape_model;      
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Item_shape;
    id                : OPTIONAL STRING;
    description       : OPTIONAL STRING;
    described_element : shapeable_item;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_dependent_property_representation;
    characteristic_type     : STRING;
    description             : OPTIONAL STRING;
    described_element       : shape_dependent_select;
    property_representation : Representation;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_description_association;
    represented_characteristic : shape_select;
    representation             : shape_model;
    role                       : OPTIONAL STRING;
    description                : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_element;
      id               : OPTIONAL STRING;
      element_name     : OPTIONAL STRING;
      description      : OPTIONAL STRING;
      containing_shape : Item_shape;
    WHERE
      WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_element_relationship;
      relation_type : OPTIONAL STRING;
      description   : OPTIONAL STRING;
      relating      : Shape_element;
      related       : Shape_element;
    WHERE
      WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Part_definition_relationship_arm); *)
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request;
  request_id : STRING;
  version_id : STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request_status;
  status : STRING;
  work_request : Work_request;
END_ENTITY;
(* USED FROM (System_identification_and_version_arm); *)
ENTITY System
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (System_identification_and_version_arm); *)
ENTITY System_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : System;
END_ENTITY;
(* USED FROM (System_identification_and_version_arm); *)
ENTITY System_version_sequence
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : System_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : System_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : SYSTEM_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : SYSTEM_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Event_assignment_arm); *)
ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Curve
       SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Line
       SUBTYPE OF (Curve);
     END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Plane
       SUBTYPE OF (Surface);
     END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Point_on_curve
       SUBTYPE OF (Detailed_geometric_model_element);
       supporting_curve : Curve;
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Point_on_surface
       SUBTYPE OF (Detailed_geometric_model_element);
       supporting_surface : Surface;
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
     ENTITY Surface
       SUBTYPE OF (Detailed_geometric_model_element);
--     WHERE
--       WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (
              AXIS_PLACEMENT_2D,
              AXIS_PLACEMENT_3D))
  SUBTYPE OF (Detailed_geometric_model_element);
      origin : Cartesian_point;
      x_axis : Direction;
      y_axis : Direction;
    DERIVE
      dim: INTEGER := SIZEOF(origin.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(x_axis.coordinates);
      WR3: dim = SIZEOF(y_axis.coordinates);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_2d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_3d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_point
    SUBTYPE OF (Detailed_geometric_model_element);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.coordinates)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Detailed_geometric_model_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D) )ANDOR( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        GEOMETRIC_MODEL_ELEMENT_RELATIONSHIP,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE,
                        SURFACE,
                        VECTOR) )ANDOR( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE,
                        SURFACE) )  ) 
  SUBTYPE OF (Representation_item);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      coordinates : LIST[2:3] OF length_measure;  
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_coordinate_space
    SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF Detailed_geometric_model_element;
  END_ENTITY;
(* USED FROM (Characterizable_object_arm); *)
ENTITY Characterizable_object;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (External_model_arm); *)
ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Measure_item_with_precision
    SUBTYPE OF (Measure_item);
      significant_digits : INTEGER;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_list
    SUBTYPE OF (Measure_item);
      values : LIST[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range_with_global_unit
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_global_unit;
      upper_limit : Numerical_item_with_global_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_set
    SUBTYPE OF (Measure_item);
      values : SET[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
    WHERE
      WR1 : NOT('SYSTEM_MODELLING_ARM_LF.'+'NUMERICAL_ITEM_WITH_UNIT' IN TYPEOF(qualified_measure));
      WR2 : SIZEOF(QUERY(temp <* qualifiers | 
        'SYSTEM_MODELLING_ARM_LF.PRECISION_QUALIFIER' IN TYPEOF(temp))) < 2;      
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Precision_qualifier;
    precision_value : INTEGER;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_representation_item 
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'SYSTEM_MODELLING_ARM_LF.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Standard_uncertainty
    SUPERTYPE OF (
              EXPANDED_UNCERTAINTY)
  SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Type_qualifier
     ABSTRACT SUPERTYPE OF (
                        PRE_DEFINED_TYPE_QUALIFIER);
    name : STRING;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (
              STANDARD_UNCERTAINTY,
              QUALITATIVE_UNCERTAINTY));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;

(* Implicit interfaced from: Document_properties_arm *)
FUNCTION valid_document_property_representation
 (rep : Document_property_representation) : LOGICAL; 

CASE rep.name OF
'document content': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['detail level', 'geometry type', 'real world scale'])))= 0
 );
   END;

'document creation': 
   BEGIN
IF NOT (SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['creating interface', 'creating system', 'operating system'])))= 0
 ) THEN
  RETURN(FALSE);
END_IF;
IF NOT (SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['creating system'])))= 1
 ) THEN
  RETURN(FALSE);
ELSE
  RETURN(TRUE);
END_IF;

   END;

'document format': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['character code', 'data format', 'size format', 'size format standard'])))= 0
 );
   END;

'document size': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['file size', 'page count'])))= 0
 );
   END;

OTHERWISE:
  RETURN(UNKNOWN);
END_CASE;
        END_FUNCTION; 

(* Implicit interfaced from: Expression_arm *)
FUNCTION Is_sql_mappable (arg: expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'SYSTEM_MODELLING_ARM_LF.SIMPLE_NUMERIC_EXPRESSION' 
								IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.SQL_MAPPABLE_DEFINED_FUNCTION' 
								IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.ABS_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.SIN_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COS_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.TAN_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.ASIN_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.ACOS_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.ATAN_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.EXP_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.LOG_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.LOG2_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.LOG10_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.SQUARE_ROOT_FUNCTION' 
								IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.VALUE_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.LENGTH_FUNCTION' 
								IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.PLUS_EXPRESSION' IN TYPEOF(arg)) 
		OR('SYSTEM_MODELLING_ARM_LF.MULT_EXPRESSION' IN TYPEOF(arg)) 
		OR('SYSTEM_MODELLING_ARM_LF.MAXIMUM_FUNCTION' 
								IN TYPEOF(arg)) 
		OR('SYSTEM_MODELLING_ARM_LF.MAXIMUM_FUNCTION' 
								IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (
			arg\Multiple_arity_numeric_expression.operands);
		IF NOT Is_sql_mappable(
			arg\Multiple_arity_numeric_expression.operands[i])
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
RETURN (TRUE);
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.MINUS_EXPRESSION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.SLASH_EXPRESSION' IN 
								TYPEOF(arg))
THEN
		RETURN (Is_sql_mappable(
			arg\Binary_numeric_expression.operands[1])
		AND Is_sql_mappable(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.DIV_EXPRESSION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.MOD_EXPRESSION' IN TYPEOF(arg)) 
		OR('SYSTEM_MODELLING_ARM_LF.POWER_EXPRESSION' 
								IN TYPEOF(arg))
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.SIMPLE_BOOLEAN_EXPRESSION' 
								IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.NOT_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (Is_sql_mappable (arg\UNARY_GENERIC_EXPRESSION.OPERAND));
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.ODD_FUNCTION'IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.XOR_EXPRESSION' 
								IN TYPEOF (arg)) 
THEN	
	RETURN (FALSE);
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.AND_EXPRESSION' IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.OR_EXPRESSION' IN TYPEOF (arg)) 
THEN
	REPEAT i:=1 TO SIZEOF (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS);
		IF NOT Is_sql_mappable (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS[i]) 
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.EQUALS_EXPRESSION' IN TYPEOF (arg) 
THEN
	RETURN(Is_sql_mappable (
			arg\Binary_generic_expression.OPERANDS [1])
		AND Is_sql_mappable(
			arg\Binary_generic_expression.OPERANDS [2]));
END_IF;
IF	('SYSTEM_MODELLING_ARM_LF.COMPARISON_EQUAL' IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COMPARISON_GREATER' 
								IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COMPARISON_GREATER_EQUAL'
								IN TYPEOF (arg))
		OR ('SYSTEM_MODELLING_ARM_LF.COMPARISON_LESS' 
								IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COMPARISON_LESS_EQUAL' 
								IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COMPARISON_NOT_EQUAL' 
								IN TYPEOF (arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.LIKE_EXPRESSION' 
								IN TYPEOF (arg)) 
THEN
	RETURN (Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[1])
		AND Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[2]));
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.INTERVAL_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Interval_expression.interval_low) 
		AND Is_sql_mappable(arg\Interval_expression.interval_high)
		AND Is_sql_mappable(arg\Interval_expression.interval_item));
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.NUMERIC_DEFINED_FUNCTION' 
								IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.BOOLEAN_DEFINED_FUNCTION' 
								IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.STRING_DEFINED_FUNCTION' 
								IN TYPEOF(arg))  
THEN 
		RETURN (FALSE) ;
END_IF;

IF 'SYSTEM_MODELLING_ARM_LF.SIMPLE_STRING_EXPRESSION' 
								IN TYPEOF(ARG) 
THEN 
	RETURN (TRUE);
END_IF;
IF 	('SYSTEM_MODELLING_ARM_LF.INDEX_EXPRESSION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.SUBSTRING_EXPRESSION' 
								IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.CONCAT_EXPRESSION' 
								IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.FORMAT_FUNCTION' 
								IN TYPEOF(arg)) 
THEN 
	RETURN (FALSE);
END_IF;

	RETURN (FALSE);
END_FUNCTION; 

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Is_Acyclic (arg: Generic_expression): BOOLEAN;
RETURN (Acyclic (arg, []));
END_FUNCTION ; 

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Acyclic (arg1: Generic_expression; 
			arg2: SET OF Generic_expression): BOOLEAN;
LOCAL
	result: BOOLEAN;
END_LOCAL;

IF ('SYSTEM_MODELLING_ARM_LF.SIMPLE_GENERIC_EXPRESSION'
	IN TYPEOF (arg1)) 
THEN
	RETURN (TRUE);
END_IF;

IF arg1 IN arg2 
THEN 
	RETURN (FALSE);
END_IF;

IF 'SYSTEM_MODELLING_ARM_LF.UNARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Unary_generic_expression.operand,arg2+[arg1]));
END_IF;

IF 'SYSTEM_MODELLING_ARM_LF.BINARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Binary_generic_expression.operands[1],arg2+[arg1])
	AND
	Acyclic(arg1\Binary_generic_expression.operands[2],arg2+[arg1]));
END_IF;

IF 
'SYSTEM_MODELLING_ARM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	result := TRUE;
	REPEAT i := 1 TO 
			SIZEOF (arg1\Multiple_arity_generic_expression.operands);
		result := result AND
		Acyclic(arg1\Multiple_arity_generic_expression.operands[i], arg2+[arg1]);
	END_REPEAT;

	RETURN (result);
END_IF;

END_FUNCTION; 

(* Implicit interfaced from: General_model_parameter_arm *)
FUNCTION CLASSOF(the_instance : GENERIC       :ininst) : SET OF STRING;

  LOCAL
    result : SET OF STRING;
    classifications : BAG OF Classification_assignment;
  END_LOCAL;

  result := TYPEOF(the_instance);
  classifications := USEDIN(the_instance,'SYSTEM_MODELLING_ARM_LF.CLASSIFICATION_ASSIGNMENT.ITEMS');

  REPEAT i := LOINDEX(classifications) TO HIINDEX(classifications);
    result := result + classifications[i].ASSIGNED_CLASS.ID;
  END_REPEAT;

  RETURN (result);

END_FUNCTION;

(* Implicit interfaced from: Expression_arm *)
FUNCTION Is_int_expr (arg: Numeric_expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'SYSTEM_MODELLING_ARM_LF.INT_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.REAL_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.ABS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand));
END_IF;
IF 'NUMERIC_FUNCTION.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('SYSTEM_MODELLING_ARM_LF.SIN_FUNCTION' IN TYPEOF(arg)) 
		OR ('SYSTEM_MODELLING_ARM_LF.COS_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.TAN_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.ASIN_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.ACOS_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.Atan_function' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.EXP_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.LOG_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.LOG2_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.LOG10_FUNCTION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.SQUARE_ROOT_FUNCTION' 
								IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF 	('SYSTEM_MODELLING_ARM_LF.PLUS_EXPRESSION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.MULT_EXPRESSION' 
								IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.MAXIMUM_FUNCTION'
								IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.MINIMUM_FUNCTION'
								IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (
			arg\Multiple_arity_numeric_expression.operands);
	IF NOT 
		Is_int_expr(arg\Multiple_arity_numeric_expression.operands[i]) 
	THEN 
		RETURN (FALSE);
	END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 	('SYSTEM_MODELLING_ARM_LF.MINUS_EXPRESSION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.POWER_EXPRESSION' 
								IN TYPEOF(arg))
THEN 
	RETURN (Is_int_expr(arg\Binary_numeric_expression.operands[1])
		AND Is_int_expr(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF	('SYSTEM_MODELLING_ARM_LF.DIV_EXPRESSION' IN TYPEOF(arg))
		OR ('SYSTEM_MODELLING_ARM_LF.MOD_EXPRESSION' IN TYPEOF(arg))
THEN 
	RETURN(TRUE);	
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.SLASH_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.LENGTH_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.VALUE_FUNCTION' IN TYPEOF(arg) 
THEN 
	IF 'SYSTEM_MODELLING_ARM_LF.INT_VALUE_FUNCTION' 
								IN TYPEOF(arg) 
	THEN 
		RETURN (TRUE); 
	ELSE 
		RETURN (FALSE); 
	END_IF;
END_IF;
IF 'SYSTEM_MODELLING_ARM_LF.INTEGER_DEFINED_FUNCTION' 
								IN TYPEOF(arg)
THEN 
	RETURN(TRUE) ;
END_IF;
IF'SYSTEM_MODELLING_ARM_LF.REAL_DEFINED_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'SYSTEM_MODELLING_ARM_LF.BOOLEAN_DEFINED_FUNCTION' 
								IN TYPEOF(arg)
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'SYSTEM_MODELLING_ARM_LF.STRING_DEFINED_FUNCTION' 
								IN TYPEOF(arg)
THEN 
	RETURN (FALSE) ;
END_IF ;

RETURN (FALSE);

END_FUNCTION; 
(* REFERENCE FROM (Product_identification_arm); *)
FUNCTION types_of_product
 (obj : Product) : SET OF STRING; 
 LOCAL
 	category_assignments: BAG OF Product_category_assignment;
 	categories: SET OF STRING:=[];
 	i: INTEGER;
 END_LOCAL;
 
 category_assignments := USEDIN(obj,'SYSTEM_MODELLING_ARM_LF.' + 'PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS');
    
 REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments) BY 1;
       categories := categories + category_assignments[i].category.name;
 END_REPEAT;
 
 RETURN(categories);
       END_FUNCTION; 

(* Implicit interfaced from: Extended_basic_geometry_arm *)
  FUNCTION acyclic_representation_relationship
    (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;

    IF relation.rep_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'SYSTEM_MODELLING_ARM_LF.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
(* REFERENCE FROM (Characterizable_object_arm); *)
  FUNCTION bag_to_set(
    the_bag : BAG OF GENERIC : intype
  ) : SET OF GENERIC : intype;

    LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);
  END_FUNCTION;

(* Implicit interfaced from: Shape_property_assignment_arm *)
  FUNCTION spa_get_definition ( input : Contextual_item_shape ): Product_view_definition;
    IF ('SYSTEM_MODELLING_ARM_LF.VIEW_DEFINITION_USAGE'
      IN TYPEOF(input\Item_shape.described_element))
      THEN
        RETURN(input\Item_shape.described_element\View_definition_relationship.related_view);
    END_IF;
    IF ('SYSTEM_MODELLING_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN
        TYPEOF(input\Item_shape.described_element))
      THEN
        RETURN(input\Item_shape.described_element\Product_occurrence_definition_relationship.related_view);
    END_IF;    
    RETURN(?);
  END_FUNCTION;

(* Implicit interfaced from: Document_and_version_identification_arm *)
RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'SYSTEM_MODELLING_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'SYSTEM_MODELLING_ARM_LF.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

(* Implicit interfaced from: Part_and_version_identification_arm *)
RULE part_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'SYSTEM_MODELLING_ARM_LF.' + 'PART_VERSION' IN TYPEOF ( pv) ) ) AND ( 'SYSTEM_MODELLING_ARM_LF.' + 'PART' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Part_view_definition_arm *)
RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'SYSTEM_MODELLING_ARM_LF.' + 'PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'SYSTEM_MODELLING_ARM_LF.' + 'PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Document_definition_arm *)
RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'SYSTEM_MODELLING_ARM_LF.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'SYSTEM_MODELLING_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

(* Implicit interfaced from: Extended_basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Extended_measure_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_measure_items FOR MEASURE_ITEM; *)

(* Implicit interfaced from: Assembly_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR ASSEMBLY_COMPONENT_RELATIONSHIP; *)
-- generated from SUBTYPE_CONSTRAINT assembly_component_relationship_constraint

RULE total_over_assembly_component_relationship_constraint FOR( ASSEMBLY_COMPONENT_RELATIONSHIP);
WHERE
  wr1 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['System_modelling_arm.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(p) ) = 0)) = 0;
  wr2 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['System_modelling_arm.NEXT_ASSEMBLY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
  wr3 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['System_modelling_arm.PROMISSORY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
END_RULE;


END_SCHEMA;


