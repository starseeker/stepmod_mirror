<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.25 2008/04/26 12:08:34 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!--      To view the module in IExplorer, open: sys/1_scope.xml      -->
<module
   name="system_modelling"
   part="1477"
   version="1"
   sc4.working_group="3"
   wg.number="2342"
   wg.number.arm="2343"
   wg.number.mim="2344"
   wg.number.arm_lf="2345"
   wg.number.mim_lf="2346"
   checklist.internal_review="2356"
   checklist.project_leader="2357"
   checklist.convener="2355"
   status="CD-TS"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2008/04/26 12:08:34 $"
   rcs.revision="$Revision: 1.25 $"
   development.folder="dvlp">
<keywords>module, systems engineering, system behavior, system structure, trade study </keywords>
<!-- the abstract for the module. If not provided, the XSL will use the in scope --> 
<abstract>
    <li>This part of ISO 10303 specifies an application module for the
     representation of the variety of general model classifications used to
      support model-based systems engineering.  This includes all models used to
      characterize the physical structure and its behavior and the full range of
      models used to support systems engineering trade studies.</li>
</abstract> 
<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml --> 
<contacts>
   <projlead ref="ap233.projlead2"/>  
   <editor ref="ap233.editor2"/> 
</contacts> 
<!-- Introduction --> 
<!-- The introduction should start as shown: --> 
<purpose>
  <p>
    This part of ISO 10303 specifies an application module for the
    Representation of the variety of general model classifications used to
    support model-based systems engineering.  This includes all models used to
    characterize the physical structure and its behavior and the full range of
    models used to support systems engineering trade studies.
  </p> 
  
  <p><b>Hyperlink to Annex F for AP233 concept model introductory material associated 
  with system modelling capabilities enabled within AP233 and its connectivity to 
  modules used.</b></p> 
  
</purpose> 
 <!-- Items in scope --> 
 <inscope>
	<li>items within the scope of application module <module_ref linkend="Decision_support:1_scope"/>;</li>
	<li>items within the scope of application module <module_ref linkend="Group:1_scope"/>;</li>
	<li>items within the scope of application module <module_ref linkend="Product_data_management:1_scope"/>;</li>
	<li>items within the scope of application module <module_ref linkend="Requirement_management:1_scope"/>;</li>
	<li>items within the scope of application module <module_ref linkend="System_behaviour:1_scope"/>;</li>
	<li>items within the scope of application module <module_ref linkend="System_structure:1_scope"/>;</li>
        <li>analysis and analysis representation;</li>
        <li>trade studies with measures of effectiveness;</li>
	<li>verification and validation;</li>
	<li>facility to assign decision support information to system modelling data;</li>
	<li>facility to assign group information to system modelling data;</li>
	<li>facility to assign system behaviour information to system modelling data;</li>
	<li>facility to assign system structure information to system modelling data.</li>
 </inscope>
 <!-- Items out of scope -->
 <outscope>
 	<li>program management.</li>
 </outscope>

 <!-- <normrefs/> -->
 
<definition>
   <term id="sysm_anything">anything</term>
   <def>that which can be observed, conceived, or imagined
   <note>This definition includes 
   not just observable reality, but also the subjects of dreams, hallucinations, stories, and 
   imagination.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_engineering_thing">engineering thing</term>
   <def>that for which observable, measurable, and reproducible properties 
   or attributes can be obtained
   <note>An engineering thing is a subclass of anything.  Responsible 
   engineering is based on the ability to predict performance from the observable properties of 
   the things engineers will use. The advance of technology is the expansion of our knowledge of 
   these properties.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_observable_characteristic">observable characteristic</term>
   <def>observable, measurable and reproducible properties of an 
   engineering thing
   <note>An engineering thing has observable characteristic. The advances of science 
   and engineering in the last 300 years are based on careful observation and measurement. The 
   reproducibility of the results is checked by independent experimentation. The rapidity of 
   advance follows from rapid and widespread publication of result with rapid independent 
   confirmation or denial of the results.  The observable characteristic associated with an interface also needs discussion. 
   Current passing through the electrical interfaces of a battery in a flashlight is not a 
   property of those interfaces but rather the result of the EMF of the batteries and the 
   impedance of the circuit. The spring force holding the batteries in place is an 
   observable characteristic. This spring force only exists when the batteries are 
   installed in place. When you plug a laptop into an electric outlet, the value of 
   current that flows is not a property of the interface. The maximum safe current through 
   the interface is such a property as is the force required to plug and unplug the connector. 
   These are emergent properties that come into existence when two things are interconnected.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_emergent_property">emergent property</term>
   <def>a synonym for observable characteristic
   <note>It is used in the context 
   quantifying the observable, measurable and reproducible properties of a system.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_environment">environment</term>
   <def>all of the engineering things that need to be considered for a 
   particular problem
   <note>The environment contains some of the totality of engineering things. 
   It contains just those that need to be considered for the problem at hand. It is a decomposition of the 
   whole into some of its parts. For any engineering problem it is essential to consider everything 
   that is important to the problem and to exclude things from consideration that would be a waste 
   of resources to investigate. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_boundary">boundary</term>
   <def>a separation of a space (solution space or mathematical space) of 
   engineering things into regions
   <note>The boundary partitions environment into regions of interest 
   to the engineer. Problems can be simplified and solutions found more quickly if they can be 
   partitioned into strongly interacting, weakly interacting or independently acting parts. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_system">system</term>
   <def>an engineering thing that exhibits a well defined boundary
   <note>A system is a 
   subclass of an engineering thing.  It inherits a relationship to observable characteristic.
   A system has a boundary; systems are built from systems (systems of systems form a hierarchy) and 
   systems connect with systems. For a thing to be a system it must exhibit observable and 
   reproducible properties and have a boundary that separates it from all the other things in 
   the environment. It is essential to know what is inside the system and what is outside.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_interface">interface</term>
   <def>a region (e.g. point, surface or volume) of connection between two 
   engineering things
   <note>A system has interface and interface has observable characteristic.
   There are points, surfaces, and volumes of any system that connect it to other 
   things. These interfaces are important for maintenance, for moving it during manufacture, 
   for logistics and installation, for testing, and for attaching to larger systems.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_system/system_interface">system/system interface</term>
   <def>an interface between two systems
   <note>A system/system interface is a subclass of interface.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_environment/system_interface">environment/system interface</term>
   <def>a interface between a system and an engineering thing in 
   the environment
   <note>An  environment/system interface is a subclass of interface.  A boundary is 
   built from (composed of) all the environment/system interface.  A system has many interfaces 
   for many different purposes. The total or collection of all these important interfaces 
   defines the boundary of the system.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_system_view">system view</term>
   <def>a partial description of a system using some of the associated 
   observable characteristic
   <note>A system view is part of observable characteristic.  A
   system view describes system.  Most engineering problems consider only some portion of a 
   system, relative to some small set of engineering domains and some particular issues. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_context">context</term>
   <def>the point of view or focus of interest taken in dealing with a system
   <note>A system view has a context. Most engineering problems consider only 
   some portion of a 
   system and particular issues associated with those portions. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_analysis">analysis</term>
   <def>the observation, measurement, or calculation of the emergent property of 
   a whole based on the emergent property of the parts
   <note>Emergent property is a synonym for
   observable characteristic.  Analysis determines the emergent property of a system because 
   of its inheritance from engineering thing. It is the progress of science in providing 
   rigorous laws and models for determining the reproducible and observable characteristics of 
   engineering thing that has given us our analysis capabilities.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_stakeholder">stakeholder</term>
   <def>the people, organizations and institutions that receive some benefit from a 
   system and have an interest in the system
   <note>A stakeholder is a part of the environment.
   A stakeholder is an engineering thing. They include, for example, the producers, 
   producer employees, competitors, sellers, advertisers, transporters, owners, customers, 
   regulators, operators, users, maintainers, and disposers of the system.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_stakeholder_need">stakeholder need</term>
   <def>the benefits the stakeholder desires to receive from or to be 
   delivered by the system when it is implemented and functioning
   <note>The Stakeholder has 
   stakeholder need. At the top level of development these stakeholder needs drive the 
   requirements for the system and the optimization criteria for its development.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_business">buisness</term>
   <def>the purposeful activity of a person or group of persons to supply products 
   and services to themselves or others
   <note>Both local and global commerce are based on the existence 
   of a multitude of businesses engaged in the exchange of products and services.  </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_business_strategy">business strategy</term>
   <def>the science, art, and plan for employing the economic, sales, 
   marketing, contracting, development, purchasing, advertising, logistics, sourcing, 
   psychological, and  political, capabilities of a business or a consortium of 
   businesses to achieve a set of goals
   <note>A business has a business strategy. How successfully 
   a business meets its goals in a competitive marketplace is dependent on the completeness 
   and efficiency of its business strategy. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_system_alternative">system alternative</term>
   <def>the many different solutions to the problem of designing 
   and implementing the system
   <note>The system is a subclass of system alternative. In the 
   development of a system there are many system alternatives that could be used. The 
   solution space is large. The design problem is to pick a nearly optimal solution that 
   will succeed in the marketplace. It is this choice from among the system alternatives 
   that is the system.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_requirement">requirement</term>
   <def>a statement of an emergent property that a system alternative shall 
   exhibit to be considered as a solution for a system
   <note>A requirement is a statement of an 
   emergent property that a system shall exhibit. This follows logically from the definition 
   of requirement and a particular system alternative becoming the system. A requirement is 
   derived from stakeholder need.  A requirement is derived from business strategy
   A child requirement is derived from a parent requirement and traces to it.  A requirement 
   is evaluated with analysis.  A requirement is a statement about a solution for a system 
   or one of its interfaces that describes a response to excitation, a time duration for the 
   response or a physical property value like mass that shall be met by the solution. Since 
   the system will be one of these solutions, it is both the collection of alternative 
   solutions and the one picked to be the system that shall “meet” the requirements. 
   The interaction with the stakeholders may be very informal, it may be a summary of 
   sales and marketing data, or it may be the result of a formal interaction with 
   stakeholders using a mathematical based process like Analytical Hierarchical Process.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_measure_of_effectiveness">measure of effectiveness</term>
   <def>a requirement for the optimization of the system
   <note>Measure of effectiveness is a requirement. Measure of effectiveness provides the optimization 
   criteria for selecting a single solution from among all system alternatives. As a result of 
   inheritance  a  measure of effectiveness  is derived from stakeholder need.  It is also 
   derived from business strategy.  A child measure of effectiveness  is derived from a parent 
    measure of effectiveness  and traces to it.  A measure of effectiveness is evaluated with 
   analysis.The optimization of the whole system by choosing the “best” among 
   system alternatives is a most important aspect of measures of effectiveness. The fact that 
   measures of effectiveness are derived 
   from parent measures of effectiveness means that the subsystems are optimized for optimization of the entire 
   system to fit the marketplace. This is not optimization the subsystems themselves 
   independent of the whole system. System optimization for the marketplace is a major purpose 
   of systems engineering and a significant competitive advantage. The measure of effectiveness 
   has the same relationships as requirement by inheritance. Modeling the measures of effectiveness as a 
   subclass of requirement provides these relationships. It also provides for 
   traceability and identification of parent-child derived relationships. </note>
   </def>
</definition>
   
<definition>
   <term id="sysm_weight">weight</term>
   <def>a numerical factor that gives a relative importance to each item in a set of items
   <note>Each measure of effectiveness has weight. Many decisions involve several decision criteria. 
   In the general case these are not of equal importance. A numerical weight is often assigned 
   to the decision criteria to specify their relative importance. Usually a larger number 
   implies greater importance.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_optimization_direction">optimization direction</term>
   <def>a statement of whether the optimization direction associated 
   with a particular measure of effectiveness is to maximize or minimize
   <note>Each measure of effectiveness has 
   optimization direction. Every measure of effectiveness will need to be either maximized or minimized.</note>
   </def>
</definition>
   
<definition>
   <term id="sysm_regularization_function">regularization function</term>
   <def>an analytical function that for each system alternative 
   combines measures of effectiveness with their weight and optimization direction to calculate a single 
   optimization figure of merit for each system alternative
   <note>A measure of effectiveness is 
   evaluated for system alternative. Once the elderly couple has established their home 
   buying criteria and the compromise weights for these, they need to apply them to the 
   many homes they see offered for sale. The analytical approach is to apply a regularization 
   function for each of these homes. The resulting value for each home is its figure of 
   merit. Note that many decisions are made without this analytical approach by applying 
   an intuitive figure of merit, “I like this one best”, to the homes offered, the 
   system alternatives.</note>
   </def>
</definition>
 
<!--  <abbreviations/>
-->
 
<!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->
   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <!-- <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/> -->
   </express-g>
 </arm>
 
 <!-- ARM long form (optional) --> 
<!-- If not required, delete this section and the following files: 
           arm_lf.xml 
           armexpg_lf1.gif 
           armexpg_lf1.xml --> 
<arm_lf> 
 <!-- Note ARM long form EXPRESS is in arm_lf.xml --> 
 <express-g> 
  <imgfile file="armexpg_lf1.xml"/> 
 </express-g> 
</arm_lf> 


<!-- Clause 5.1 Mapping specification
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table> -->
 
<!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
   <shortnames>
    <shortname name="SPCADR" entity="smpushup_pmri_characterizable_applied_document_reference"/>
    <shortname name="SPCADU" entity="smpushup_pmri_characterizable_applied_document_usage_constraint_assignment"/>
    <shortname name="SPCAOA" entity="smpushup_pmri_characterizable_applied_organization_assignment"/>
    <shortname name="SPCAPA" entity="smpushup_pmri_characterizable_applied_person_and_organization_assignment"/>
    <shortname name="SPCOP" entity="smpushup_pmri_characterizable_organizational_project"/>
    <shortname name="SPCPD" entity="smpushup_pmri_characterizable_product_definition"/>
    <shortname name="SOCA" entity="smpushup_os_characterizable_address"/>
    <shortname name="SOCP" entity="smpushup_os_characterizable_person"/>
    <shortname name="SOCPAO" entity="smpushup_os_characterizable_person_and_organization"/>
    <shortname name="SPCHIC" entity="smpushup_pb_characterizable_hierarchical_interface_connection"/>
    <shortname name="SPCIC" entity="smpushup_pb_characterizable_interface_connection"/>
    <shortname name="SPCICO" entity="smpushup_pb_characterizable_interface_connector_occurrence"/>
    <shortname name="SPCIDC" entity="smpushup_pb_characterizable_interface_definition_connection"/>
    <shortname name="SSSCAAA" entity="smpushup_ss_characterizable_applied_action_assignment"/>
    <shortname name="SSCAAM" entity="smpushup_ss_characterizable_applied_action_method_assignment"/>
    <shortname name="SACAM" entity="smpushup_ap233_characterizable_action_method"/>
    <shortname name="SACAP" entity="smpushup_ap233_characterizable_action_property"/>
    <shortname name="SACAR" entity="smpushup_ap233_characterizable_action_relationship"/>
    <shortname name="SACARR" entity="smpushup_ap233_characterizable_action_resource_requirement"/>
    <shortname name="SACAPR" entity="smpushup_ap233_characterizable_alternate_product_relationship"/>
    <shortname name="SACAAM" entity="smpushup_ap233_characterizable_applied_action_method_assignment"/>
    <shortname name="SACCI" entity="smpushup_ap233_characterizable_configuration_item"/>
    <shortname name="SACEA" entity="smpushup_ap233_characterizable_executed_action"/>
    <shortname name="SACGP" entity="smpushup_ap233_characterizable_general_property"/>
    <shortname name="SACGPR" entity="smpushup_ap233_characterizable_general_property_relationship"/>
    <shortname name="SACGE" entity="smpushup_ap233_characterizable_generic_expression"/>
    <shortname name="SACIZ" entity="smpushup_ap233_characterizable_in_zone"/>
    <shortname name="SACIUR" entity="smpushup_ap233_characterizable_information_usage_right"/>
    <shortname name="SACP" entity="smpushup_ap233_characterizable_product"/>
    <shortname name="SACPC" entity="smpushup_ap233_characterizable_product_category"/>
    <shortname name="SAC0" entity="smpushup_ap233_characterizable_product_concept"/>
    <shortname name="VPDF" entity="vcharacterizable_product_definition_formation"/>
    <shortname name="SACPDF" entity="smpushup_ap233_characterizable_product_definition_formation_relationship"/>
    <shortname name="SACPD" entity="smpushup_ap233_characterizable_property_definition"/>
    <shortname name="SACPDR" entity="smpushup_ap233_characterizable_property_definition_representation"/>
    <shortname name="SACR" entity="smpushup_ap233_characterizable_representation"/>
    <shortname name="SACRC" entity="smpushup_ap233_characterizable_representation_context"/>
    <shortname name="SACRI" entity="smpushup_ap233_characterizable_representation_item"/>
    <shortname name="SACRS" entity="smpushup_ap233_characterizable_requirement_source"/>
    <shortname name="SACRP" entity="smpushup_ap233_characterizable_resource_property"/>
    <shortname name="SACSC" entity="smpushup_ap233_characterizable_security_classification"/>
    <shortname name="SACVAR" entity="smpushup_ap233_characterizable_versioned_action_request"/>
    <shortname name="SACAA" entity="smpushup_ap233_characterizable_analysis_assignment"/>
    <shortname name="SACAMA" entity="smpushup_ap233_characterizable_action_method_assignment_relationship"/>
    <shortname name="SACV" entity="smpushup_ap233_characterizable_verification"/>
    <shortname name="SACVE" entity="smpushup_ap233_characterizable_verification_evidence"/>
    <shortname name="SACVR" entity="smpushup_ap233_characterizable_verification_relationship"/>
   </shortnames>
 </mim>

<!-- MIM long form (optional) --> 
<!-- If not required, delete this section and the following files: 
          mim_lf.xml 
          mimexpg_lf1.gif 
          mimexpg_lf1.xml --> 
<mim_lf> 
 <!-- Note MIM long form EXPRESS is in mim_lf.xml --> 
 <express-g> 
  <imgfile file="mimexpg_lf1.xml"/> 
 </express-g> 
</mim_lf> 
 
  <usage_guide>
  
    <p>
    This module is one of AP233's two top level modules.  Its focus is on the
    variety of modeling paradigms used to represent the physical and functional
    system along capabilities used to support associated verification, validation and
    trade studies. It links to but does not include capabilities that support the
    management activities of systems engineering.
   </p>
      
  
	<p>Figure <module_ref linkend="system_modelling:f_usage_guide:figure:AP233_arm_Concept_Map">F-1</module_ref> 
	shows the hierarchy of modules used to enable the system modelling capability.</p> 
	
	<p>The following color code is used in all concept maps shown in this Annex:</p>
	<ul>
	<li>Orange implies a top level Wg3 implementation module;</li>
	<li>Yellow implies all USE FROM's are shown for the module identified;</li> 
	<li>Green implies more USE FROM's exist in the module identified;</li>
	<li>Blue identifies the extensible select type defined by the module shown;</li>
	<li>Pink implies a collection of modules.</li></ul> 
	
	<figure id="AP233_arm_Concept_Map" number="F-1">
	<title> AP233_arm_Concept_Map </title>
	<img src="cm_ap233.png"/>	
	</figure>
	
   <p>Relative to the concept of system modelling, the top level modules that enable all of 
   AP233's current capability are listed below.  Within each see Annex F for additional 
   discussion and follow hyperlinks
   provided down to the most atomic level of detail:</p>
   <ul>
   <li><module_ref linkend="decision_support:introduction"/>;</li>
   <li><module_ref linkend="function_based_behaviour:introduction"/>;</li>
   <li><module_ref linkend="requirement_management:introduction"/>;</li>
   <li><module_ref linkend="state_based_behaviour:introduction"/>;</li>
   <li><module_ref linkend="system_behaviour:introduction"/>;</li>
   <li><module_ref linkend="system_modelling:introduction"/>;</li>
   <li><module_ref linkend="system_structure:introduction"/>.</li>
   </ul>
   
   <p>At the next concept modelling level of abstraction down, the following modules are
   of prime importance to enabling AP233's system modeling capability.  Within each see scope 
   statements and Clause 4.</p>

   <ul>
   <li><module_ref linkend="activity_as_realized:introduction"/>;</li>
   <li><module_ref linkend="analysis_assignment:introduction"/>;</li>
   <li><module_ref linkend="behaviour_description_assignment:introduction"/>;</li>
   <li><module_ref linkend="extended_task_element:introduction"/>;</li>
   <li><module_ref linkend="group:introduction"/>;</li>
   <li><module_ref linkend="interface:introduction"/>;</li>
   <li><module_ref linkend="measure_of_effectiveness:introduction"/>;</li>
   <li><module_ref linkend="product_as_individual:introduction"/>;</li>
   <li><module_ref linkend="product_breakdown:introduction"/>;</li>
   <li><module_ref linkend="task_element:introduction"/>;</li>
   <li><module_ref linkend="verification_and_validation:introduction"/>;</li>
   <li><module_ref linkend="system_identification_and_version:introduction"/>;</li>
   <li><module_ref linkend="verification_and_validation:introduction"/>.</li>
   </ul>
   
   <p>Like all other engineering disciplines, Systems Engineering uses special terms with 
   particular meanings. If special terms are to support Model Based Systems Engineering, there 
   definitions must be rigorous and unambiguous to a greater extent than required by text centric 
   systems engineering and currently existing in the Systems Engineering standards. For example, 
   in electrical and electronic engineering there exist the concepts and special terms for 
   resistor, capacitor, and inductor. They are rigorously defined in terms of their observable 
   current, voltage, and time characteristics. Differential equation elements can be assigned 
   to represent them. The values associated with them are based on primary standards for current, 
   voltage and impedance derived from time, length and distance standards. This web of 
   definition and related measurement standards are the foundation for the elaborate modeling 
   of electronic and electrical systems through complex performance simulations.</p>
   
   <p>What follows is a set of definitions and a model that closely aligns with how systems are 
   modeled by engineers, how they are treated in science, and how they are represented in 
   differential and partial differential equations.  This provides the highest level view of 
   AP233.  If defines AP233's information modelling requirements from the perspective of hindsight.  
   It is the high level view of the framework that has been enabled.</p>
   
   <p>Figure <module_ref linkend="system_modelling:f_usage_guide:figure:SE_Handbook_Slide3">F-2</module_ref>
   below and associated definition list provides a graphical model that captures 
   the definitions and relationships associated with a system model.</p>
   
      
   	<figure id="SE_Handbook_Slide3" number="F-2"> 
	<title>Definitions concerning system - SE Handbook Chapter 33 Figure 3</title>
			<img src="SE_Handbook_Slide3.gif"/>	
	</figure>
	
   <p>Anything <i>(1)</i> is that which can be observed, conceived, or imagined.  This definition includes 
   not just observable reality, but also the subjects of dreams, hallucinations, stories, and 
   imagination.</p>
   
   <p>An Engineering thing <i>(2)</i> is that for which observable, measurable, and reproducible properties 
   or attributes can be obtained. An engineering thing is a subclass of anything.  Responsible 
   engineering is based on the ability to predict performance from the observable properties of 
   the things engineers will use. The advance of technology is the expansion of our knowledge of 
   these properties</p>

   <p>An Observable Characteristic are observable, measurable and reproducible properties of an 
   engineering thing. An engineering thing has observable characteristic. The advances of science 
   and engineering in the last 300 years are based on careful observation and measurement. The 
   reproducibility of the results is checked by independent experimentation. The rapidity of 
   advance follows from rapid and widespread publication of result with rapid independent 
   confirmation or denial of the results.</p>

   <p>An Emergent property <i>(3)</i> is a synonym for observable characteristic.  It is used in the context 
   quantifying the observable, measurable and reproducible properties of a system</p>

   <p>The Environment <i>(4)</i> is all of the engineering things that need to be considered for a 
   particular problem. The environment contains some of the totality of engineering things. 
   It contains just those that need to be considered for the problem at hand. It is a decomposition of the 
   whole into some of its parts. For any engineering problem it is essential to consider everything 
   that is important to the problem and to exclude things from consideration that would be a waste 
   of resources to investigate. </p>

   <p>A Boundary <i>(5)</i> is a separation of a space (solution space or mathematical space) of 
   Engineering things into regions. The boundary partitions environment into regions of interest 
   to the engineer. Problems can be simplified and solutions found more quickly if they can be 
   partitioned into strongly interacting, weakly interacting or independently acting parts. </p>

   <p>A System <i>(6)</i> is an engineering thing that exhibits a well defined boundary. A system is a 
   subclass of an engineering thing.  It inherits a relationship to observable characteristic.
   A system has a boundary; systems are built from systems (systems of systems form a hierarchy) and 
   systems connect with systems. For a thing to be a system it must exhibit observable and 
   reproducible properties and have a boundary that separates it from all the other things in 
   the environment. It is essential to know what is inside the system and what is outside.</p>

   <p>An Interface <i>(7)</i> is a region ( e.g. point, surface or volume) of connection between two 
   engineering things. A system has interface and interface has observable characteristic.
   There are points, surfaces, and volumes of any system that connect it to other 
   things. These interfaces are important for maintenance, for moving it during manufacture, 
   for logistics and installation, for testing, and for attaching to larger systems.</p>

   <p>The observable characteristic associated with an interface also needs discussion. 
   Current passing through the electrical interfaces of a battery in a flashlight is not a 
   property of those interfaces but rather the result of the EMF of the batteries and the 
   impedance of the circuit. The spring force holding the batteries in place is an 
   observable characteristic. This spring force only exists when the batteries are 
   installed in place. When you plug your laptop into an electric outlet, the value of 
   current that flows is not a property of the interface. The maximum safe current through 
   the interface is such a property as is the force required to plug and unplug the connector. 
   These are emergent properties that come into existence when two things are interconnected.</p>

   <p>A System/System_Interface <i>(8)</i> is an interface between two systems.  
   A system/system interface is a subclass of interface.</p>

   <p>Environment/System_Interface <i>(9)</i> is a interface between a system and an engineering thing in 
   the environment. An  environment/system interface is a subclass of interface.  A boundary is 
   built from (composed of) all the environment/system interface.  A system has many interfaces 
   for many different purposes. The total or collection of all these important interfaces 
   defines the boundary of the system.</p>

   <p>A System View <i>(10)</i> is a partial description of a system using some of the associated 
   observable characteristic. A system view is part of observable characteristic.  A
   system view describes system.  Most engineering problems consider only some portion of a 
   system, relative to some small set of engineering domains and some particular issues.</p>

   <p>Context <i>(11)</i> is the point of view or focus of interest taken in dealing with a 
   system. A system view has a context. Most engineering problems consider only some portion of a 
   system and particular issues associated with those portions.</p>

   <p>Analysis <i>(12)</i> is the observation, measurement, or calculation of the emergent property of 
   a whole based on the emergent property of the parts.  Emergent property is a synonym for
   observable characteristic.  Analysis determines the emergent property of a system because 
   of its inheritance from engineering thing. It is the progress of science in providing 
   rigorous laws and models for determining the reproducible and observable characteristics of 
   engineering thing that has given us our analysis capabilities.</p>

      <p>Figure <module_ref linkend="system_modelling:f_usage_guide:figure:SE_Handbook_Slide4">F-3</module_ref>
   below and associated definition list provides a graphical model that captures 
   the definitions and relationships associated with a requirements and trades model.</p>
         
   	<figure id="SE_Handbook_Slide4" number="F-3"> 
	<title>Definitions concerning requirements and trades - SE Handbook Chapter 33 Figure 4</title>
			<img src="SE_Handbook_Slide4.gif"/>	
	</figure>
	
   <p>Stakeholder <i>(13)</i> is the people, organizations and institutions that receive some benefit from a 
   System and have an interest in the system. A stakeholder is a part of the environment.
   A stakeholder is an engineering thing. They include, for example, the producers, 
   producer employees, competitors, sellers, advertisers, transporters, owners, customers, 
   regulators, operators, users, maintainers, and disposers of the system.</p>

   <p>Stakeholder need <i>(14)</i> defines the benefits the stakeholder desires to receive from or to be 
   delivered by the system when it is implemented and functioning. The stakeholder has 
   stakeholder need. At the top level of development these stakeholder needs drive the 
   requirements for the system and the optimization criteria for its development.</p>

   <p>A Business <i>(15)</i> is the purposeful activity of a person or group of persons to supply products 
   and services to themselves or others. Both local and global commerce are based on the existence 
   of a multitude of businesses engaged in the exchange of products and services.  </p>

   <p>A Business strategy <i>(16)</i> is the science, art, and plan for employing the economic, sales, 
   marketing, contracting, development, purchasing, advertising, logistics, sourcing, 
   psychological, and  political, capabilities of a business or a consortium of 
   businesses to achieve a set of goals.  A business has a business strategy. How successfully 
   a business meets its goals in a competitive marketplace is dependent on the completeness 
   and efficiency of its business strategy. </p>

   <p>A System alternative <i>(17)</i> defines the many different solutions to the problem of designing 
   and implementing the system. The system is a subclass of system alternative. In the 
   development of a system there are many system alternatives that could be used. The 
   solution space is large. The design problem is to pick a nearly optimal solution that 
   will succeed in the marketplace. It is this choice from among the system alternatives 
   that is the system.</p>

   <p>A Requirement <i>(18)</i> is a statement of an emergent property that a system alternative shall 
   exhibit to be considered as a solution for a system.  A requirement is a statement of an 
   emergent property that a system shall exhibit. This follows logically from the definition 
   of requirement and a particular system alternative becoming the system. A requirement is 
   derived from stakeholder need.  A requirement is derived from business strategy
   A child requirement is derived from a parent requirement and traces to it.  A requirement 
   is evaluated with analysis.  A requirement is a statement about a solution for a system 
   or one of its interfaces that describes a response to excitation, a time duration for the 
   response or a physical property value like mass that shall be met by the solution. Since 
   the system will be one of these solutions, it is both the collection of alternative 
   solutions and the one picked to be the system that shall “meet” the requirements. 
   The interaction with the stakeholders may be very informal, it may be a summary of 
   sales and marketing data, or it may be the result of a formal interaction with 
   stakeholders using a mathematical based process like Analytical Hierarchical Process.</p>

   <p>A Measure_of_effectiveness (MOE) <i>(19)</i> is a requirement for the optimization of the system. 
   Measure of effectiveness is a requirement. Measure of effectiveness provides the optimization 
   criteria for selecting a single solution from among all system alternatives. As a result of 
   inheritance  a  measure of effectiveness  is derived from stakeholder need.  It is also 
   derived from business strategy.  A child measure of effectiveness  is derived from a parent 
    measure of effectiveness  and traces to it.  A measure of effectiveness is evaluated with 
   analysis. The optimization of the whole system by choosing the “best” among 
   system alternatives is a most important aspect of measures of effectiveness. The fact that 
   measures of effectiveness are derived 
   from parent measures of effectiveness means that the subsystems are optimized for optimization of the entire 
   system to fit the marketplace. This is not optimization the subsystems themselves 
   independent of the whole system. System optimization for the marketplace is a major purpose 
   of systems engineering and a significant competitive advantage. The measure of effectiveness 
   has the same relationships as requirement by inheritance. Modeling the measures of effectiveness as a 
   subclass of requirement provides these relationships. It also provides for 
   traceability and identification of parent-child derived relationships. </p>

   <p>Weight <i>(20)</i> is a numerical factor that gives a relative importance to each item in a set of items. 
   Each measure of effectiveness has weight. Many decisions involve several decision criteria. 
   In the general case these are not of equal importance. A numerical weight is often assigned 
   to the decision criteria to specify their relative importance. Usually a larger number 
   implies greater importance.</p>

   <p>Optimization direction <i>(21)</i> is a statement of whether the optimization direction associated 
   with a particular measure of effectiveness is to maximize or minimize. Each measure of 
   effectiveness has optimization direction. Every measure of effectiveness will need to be 
   either maximized or minimized.</p>

   <p>A Regularization function <i>(22)</i> is an analytical function that for each system alternative 
   combines measures of effectiveness with their weight and optimization direction to calculate a single 
   optimization figure of merit for each system alternative. A measure of effectiveness is 
   evaluated for system alternative. Once the elderly couple has established their home 
   buying criteria and the compromise weights for these, they need to apply them to the 
   many homes they see offered for sale. The analytical approach is to apply a regularization 
   function for each of these homes. The resulting value for each home is its figure of 
   merit. Note that many decisions are made without this analytical approach by applying 
   an intuitive figure of merit, “I like this one best”, to the homes offered, the 
   system alternatives.</p>

   <p>The Analytical Hierarchical Process analytical formulation is very similar to that of optimal control theory and 
   statistical optimization that use a function, often called a cost function, to fulfill
   a similar role. In all three of these cases: selection of  system alternative, 
   optimal control and statistical optimization, the optimum solution found depends upon 
   the form of the regularization function that is used.</p>

  </usage_guide>
 
</module>