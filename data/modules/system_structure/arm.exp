(*
   $Id: mkmodule.js,v 1.43 2004/11/12 07:49:20 robbod Exp $
   N - ISO/CD-TS - 10303- system_structure - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)


SCHEMA System_structure_arm;
  USE FROM Product_identification_arm;
  USE FROM Product_version_arm;
  USE FROM Product_view_definition_arm;
  USE FROM Product_view_definition_relationship_arm;
  USE FROM Part_and_version_identification_arm;
  USE FROM Part_definition_relationship_arm;
  USE FROM Part_view_definition_arm;
  USE FROM Interface_arm;
  USE FROM Product_as_individual_arm;

--  Begin USE FROM's for "Product_interface"
	  USE FROM Assembly_structure_arm;
--  End USE FROM's for "Product_interface"

--  Begin USE FROM's for "System_engineering_system_breakdown"
	  USE FROM Property_assignment_arm;
--  End USE FROM's for "System_engineering_system_breakdown"

--  Begin USE FROM's for "Analytic_model_lite"
	  USE FROM Document_structure_arm;
--  End USE FROM's for "Analytic_model_lite"

--  Begin USE FROM's for "Characteristic_lite"
	  USE FROM Document_assignment_arm;
	  USE FROM Extended_measure_representation_arm;
--		USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753

--  End USE FROM's for "Characteristic_lite"

--  Begin USE FROM's for "Model_parameter_lite"
	  USE FROM Document_definition_arm;
	  USE FROM Independent_property_arm;
	  USE FROM Independent_property_representation_arm;
--  End USE FROM's for "Model_parameter_lite"

--  Begin USE FROM's for "Software_lite"
	  USE FROM Document_and_version_identification_arm;
--  End USE FROM's for "Software_lite"

-- Begin TYPE's for "System_engineering_system_breakdown"
	  TYPE product_item = SELECT (Product_view_definition, View_definition_usage);
	  END_TYPE;
	
	  TYPE system_element_realization_property_assignment_select = SELECT (Assigned_property, System_element_realization);
	  END_TYPE;
	
	  TYPE system_item = SELECT (System_element_definition, System_element_usage);
	  END_TYPE;
-- End TYPE's for "System_engineering_system_breakdown"


-- Begin TYPE's for "Characteristic_lite"
	  TYPE characteristic = SELECT (Value_list, Value_set, String_representation_item, Numerical_item_with_unit);
	  END_TYPE;
	
	  TYPE c_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (Characteristic_representation, Property_value_representation);
	  END_TYPE;
	
	  TYPE coordinated_characteristic = SELECT (Characteristic_representation, Property_value_representation);
	  END_TYPE;
	
	  TYPE list_characteristic = LIST [1:?] OF characteristic;
	  END_TYPE;
	
	  TYPE range_class = ENUMERATION OF (closed, lower_open, upper_open, open);
	  END_TYPE;
	
	  TYPE scalar_or_coordinated_characteristics = SELECT (coordinated_characteristic, characteristic);
	  END_TYPE;
	
	  TYPE value_qualifier = SELECT (Precision_qualifier, Type_qualifier, Uncertainty_qualifier);
	  END_TYPE;
-- End TYPE's for "Characteristic_lite"

-- Begin TYPE's for "Model_parameter_lite"
	  TYPE mp_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (Model_parameter);
	  END_TYPE;
-- End TYPE's for "Model_parameter_lite"


-- Begin TYPE's for "Product_rule_lite"
   	TYPE parameter_assignment_or_rule_general_clause = SELECT
		(Parameter_assignment,
     	Rule_general_clause);
	END_TYPE;

	TYPE rule_complex_or_simple = SELECT
	    (Rule_complex_clause,
	     Rule_simple_clause);
	END_TYPE;
-- End TYPE's for "Product_rule_lite"


-- Begin ENTITY's for "Product_interface
	  ENTITY Port_based_interconnect_definition;
	    name : STRING;
	    associated_definition : Product_interconnect_definition;
	    component_1 : Next_assembly_usage;
	    component_2 : Next_assembly_usage;
	    port_in_uv_1 : Next_assembly_usage;
	    port_in_uv_2 : Next_assembly_usage;
	  END_ENTITY;
	
	  ENTITY Product_interconnect_definition
	    SUBTYPE OF (Product_view_definition);
	  END_ENTITY;
-- End ENTITY's for "Product_interface

-- Begin ENTITY's for "System_engineering_system_breakdown"
	  ENTITY Breakdown
	    SUBTYPE OF (Product);
	  END_ENTITY;
	
	  ENTITY Breakdown_context;
	    id : STRING;
	    name : STRING;
	    description : OPTIONAL STRING;
	    breakdown : Breakdown_version;
	    system_element : System_element_definition;
	  END_ENTITY;
	
	  ENTITY Breakdown_of;
	    id : STRING;
	    name : STRING;
	    description : OPTIONAL STRING;
	    breakdown : Breakdown_version;
	    of_view : Product_view_definition;
	  END_ENTITY;
	
	  ENTITY Breakdown_version
	    SUBTYPE OF (Product_version);
	    of_product : Breakdown;
	  END_ENTITY;
	
	  ENTITY System_definition_element_relationship;
	    id : STRING;
	    name : STRING;
	    description : OPTIONAL STRING;
	    breakdown : system_item;
	    product : product_item;
	  END_ENTITY;
	
	  ENTITY System_element
	    SUBTYPE OF (Product);
	  END_ENTITY;
	
	  ENTITY System_element_definition
	    SUBTYPE OF (Product_view_definition);
	    defined_version : System_element_version;
	  END_ENTITY;
	
	  ENTITY System_element_realization
	    SUBTYPE OF (System_definition_element_relationship);
	  END_ENTITY;
	
	  ENTITY System_element_usage
	    SUBTYPE OF (View_definition_usage);
	    name : STRING;
	    parent_element : System_element_definition;
	    child_element : System_element_definition;
	  END_ENTITY;
	
	  ENTITY System_element_version
	    SUBTYPE OF (Product_version);
	    of_product : System_element;
	  END_ENTITY;
-- End ENTITY's for "System_engineering_system_breakdown"

-- Begin ENTITY's for "Analytical_model_lite"
	  ENTITY Analytical_model
	    SUBTYPE OF (Software);
	  END_ENTITY;
	
	  ENTITY Analytical_model_application
	    SUBTYPE OF (Representation);
	    model_parameter_assignment : SET [1:?] OF Parameter_assignment;
	    model_representation : Analytical_model_definition;
	    analytical_model_application_name : STRING;
	  UNIQUE
	    UR1: analytical_model_application_name;
	  END_ENTITY;
	
	  ENTITY Analytical_model_definition
	    SUBTYPE OF (Software_definition);
	    SELF\Product_view_definition.defined_version : Analytical_model_version;
--	      representation_language 		: Language_reference_manual;
	    source_code : Software_definition;
	  END_ENTITY;
	
	  ENTITY Analytical_model_make_from_relationship
	    SUBTYPE OF (Document_definition_relationship);
	    reusable_model : Analytical_model_definition;
	    resultant_model : Analytical_model_definition;
--		    UNIQUE
--		    	UR1 : reusable_model,
	  END_ENTITY;
	
	  ENTITY Analytical_model_parameter
	    SUBTYPE OF (Model_parameter);
	    accessed_analytical_model : Analytical_model_definition;
	  UNIQUE
	    UR1: SELF\Independent_property.id, accessed_analytical_model;
	  END_ENTITY;
	
	  ENTITY Analytical_model_version
	    SUBTYPE OF (Software_version);
	    SELF\Product_version.of_product : Analytical_model;
	  END_ENTITY;
-- End ENTITY's for "Analytical_model_lite"

-- Begin ENTITY's for "Characteristic_lite"
	  ENTITY Characteristic_data_table
	    SUBTYPE OF (Measure_item);
	    property_value : LIST [1:?] OF list_characteristic;
	  END_ENTITY;
	
	  ENTITY Characteristic_representation
	    SUBTYPE OF (Representation);
	  END_ENTITY;
	
	  ENTITY Expanded_uncertainty
	    SUBTYPE OF (Standard_uncertainty);
	    coverage_factor : REAL;
	  END_ENTITY;
	
	  ENTITY Maximum_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	    SELF\Representation.items : SET [1:1] OF Numerical_item_with_unit;
	  END_ENTITY;
	
	  ENTITY Measure_qualification;
	    name : STRING;
	    description : STRING;
	    qualified_measure : Value_with_unit;
	    qualifiers : SET [1:?] OF value_qualifier;
	  END_ENTITY;
	
	  ENTITY Minimum_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	    SELF\Representation.items : SET [1:1] OF Numerical_item_with_unit;
	  END_ENTITY;
	
	  ENTITY Nominal_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	  END_ENTITY;
	
	  ENTITY Plus_minus_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	    SELF\Representation.items : SET [3:3] OF Numerical_item_with_unit;
	  END_ENTITY;
	
	  ENTITY Precision_qualifier;
	    precision_value : INTEGER;
	  END_ENTITY;
	
	  ENTITY Qualitative_uncertainty
	    SUBTYPE OF (Uncertainty_qualifier);
	    uncertainty_value : STRING;
	  END_ENTITY;
	
	  ENTITY Range_characteristic
	    SUBTYPE OF (Characteristic_representation);
	    SELF\Representation.items : SET [2:2] OF Numerical_item_with_unit;
	    range_type : range_class;
	  WHERE
	    WR1: TYPEOF(SELF\Representation.items[1]) = TYPEOF(SELF\Representation.items[2]);
	    WR2: TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) = TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
	    WR3: valid_range(SELF\Representation.items[1], SELF\Representation.items[2]);
	  END_ENTITY;
	
	  ENTITY Standard_uncertainty
	    SUPERTYPE OF (Expanded_uncertainty)
	    SUBTYPE OF (Uncertainty_qualifier);
	    uncertainty_value : REAL;
	  END_ENTITY;
	
	  ENTITY Statistical_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	  END_ENTITY;
	
	  ENTITY Symmetrical_tolerance_characteristic
	    SUBTYPE OF (Tolerance_characteristic);
	    SELF\Representation.items : SET [2:2] OF Numerical_item_with_unit;
	  END_ENTITY;
	
	  ENTITY Text_representation_item
	    SUBTYPE OF (String_representation_item);
	  DERIVE
	    SELF\Representation_item.name : STRING := 'text';
	  END_ENTITY;
	
	  ENTITY Tolerance_characteristic
	    SUPERTYPE OF (ONEOF(Minimum_tolerance_characteristic, Statistical_tolerance_characteristic, Symmetrical_tolerance_characteristic, Maximum_tolerance_characteristic, Plus_minus_tolerance_characteristic, Nominal_tolerance_characteristic))
	    SUBTYPE OF (Characteristic_representation);
	    SELF\Representation.items : SET [1:?] OF Numerical_item_with_unit;
	  END_ENTITY;
	
	  ENTITY Type_qualifier;
	    name : STRING;
	  END_ENTITY;
	
	  ENTITY Uncertainty_qualifier
	    SUPERTYPE OF (ONEOF(Standard_uncertainty, Qualitative_uncertainty));
	    measure_name : STRING;
	    description : STRING;
	  END_ENTITY;
	
	  FUNCTION valid_range (input1 : Numerical_item_with_unit; input2 : Numerical_item_with_unit):BOOLEAN;
	    RETURN (TRUE);
	  END_FUNCTION;
	--This function returns true if input1 is less than input2 e.g,. on the real number line                       
	--comment only for now.

-- End ENTITY's for "Characteristic_lite"

-- Begin ENTITY's for "Model_parameter_lite"
	  ENTITY Category_model_parameter
	    SUBTYPE OF (Model_parameter);
	  END_ENTITY;
	
	  ENTITY Model_parameter
	    SUBTYPE OF (Independent_property);
	    unit_of_measure : OPTIONAL Unit;
	    valid_range : OPTIONAL SET [1:?] OF Value_range;
	  END_ENTITY;
	
	  ENTITY Parameter_assignment
	    SUBTYPE OF (Independent_property_representation);
	    SELF\Independent_property_representation.property : Model_parameter;
	  END_ENTITY;
	
	  ENTITY Parameter_assignment_override;
	    overridden_parameter_assignment : Parameter_assignment;
	    overriding_parameter_assignment : Parameter_assignment;
	  END_ENTITY;
	
	  ENTITY Schema_based_model_parameter
	    SUBTYPE OF (Model_parameter);
	    entity_name : STRING;
	    attribute_name : OPTIONAL STRING;
	    SELF\Independent_property.property_type RENAMED schema_identifier : STRING;
	  UNIQUE
	    UR1: entity_name, attribute_name, schema_identifier;
	  END_ENTITY;
	
	  ENTITY Product_specific_parameter_value_assignment;
	    of_product : Product;
	    assigned_parameter : Parameter_assignment;
	  DERIVE
	    the_model_parameter : Model_parameter := assigned_parameter\Independent_property_representation.property;
	  UNIQUE
	    UR1: the_model_parameter, of_product;
	  END_ENTITY;
-- End ENTITY's for "Model_parameter_lite"

-- Begin ENTITY's for "Software_lite"
	  ENTITY Software
	    SUBTYPE OF (Document);
	  END_ENTITY;
	
	  ENTITY Software_definition
	    SUBTYPE OF (Digital_document_definition);
	    SELF\Product_view_definition.defined_version : Software_version;
	  END_ENTITY;
	
	  ENTITY Software_version
	    SUBTYPE OF (Document_version);
	    SELF\Product_version.of_product : Software;
	  END_ENTITY;
-- End ENTITY's for "Software_lite"


-- Begin ENTITY's for "Product_rule_lite"

  ENTITY Rule_action
    ABSTRACT SUPERTYPE OF (ONEOF (Rule_submission,
 Rule_adoption,
 Rule_rejection,
 Rule_supersedence,
 Rule_creation,
 Rule_expiration,
 Rule_change_request,
 Rule_request,
 Rule_modification));
      subject_rule              : Rule_version;
  END_ENTITY;

  ENTITY Rule_adoption
    SUBTYPE OF (Rule_action);
  END_ENTITY;

  ENTITY Rule_boolean_function
    SUBTYPE OF (Rule_function);
  END_ENTITY;

  ENTITY Rule_change_request
    SUBTYPE OF (Rule_action);
      change_reason : STRING;
  END_ENTITY;

  ENTITY Rule_complex_clause;
      identifier          : STRING;  
      conjunctive_content : SET[1:?] OF Rule_simple_clause;
    UNIQUE
      UR1 : identifier;
  END_ENTITY;

  ENTITY Rule_conclusion_definition;
      identifier          : STRING;  
      rule_definition     : Rule_definition;
      conjunctive_content : SET[1:?] OF Rule_simple_clause;
    UNIQUE
      UR1 : Rule_definition,
 identifier;
  END_ENTITY;

  ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
  END_ENTITY;

  ENTITY Rule_definition
    SUBTYPE OF (Rule_software_definition);
    INVERSE
      premise    : rule_premise_definition FOR rule_definition;
      conclusion : rule_conclusion_definition FOR rule_definition;
  END_ENTITY;

  ENTITY Rule_expiration
    SUBTYPE OF (Rule_action);
      expiration_rationale : STRING;
  END_ENTITY;

  ENTITY Rule_function
    SUPERTYPE OF (Rule_boolean_function);
      identifier              : STRING;
   END_ENTITY;

  ENTITY Rule_function_domain_parameter
    SUBTYPE OF (Model_parameter);
      accessed_rule_function : Rule_function;
    UNIQUE
      UR1 : SELF\Independent_property.id,
 accessed_rule_function;
  END_ENTITY;

  ENTITY Rule_function_range_parameter
    SUBTYPE OF (Model_parameter);
      accessed_rule_function : Rule_function;
    UNIQUE
      UR1 : SELF\Independent_property.id,
 accessed_rule_function;
  END_ENTITY;

  ENTITY Rule_general_clause;
      rule_function : Rule_function;
      parameter     : SET[1:?] OF parameter_assignment_or_rule_general_clause;
  END_ENTITY;

  ENTITY Rule_justification
  	SUBTYPE OF (Rule_action);
      justified_action        : Rule_action;
      justification_rationale : STRING;
    WHERE
	  WR1: SELF <> justified_action;  
  END_ENTITY;

  ENTITY Rule_modification
    SUBTYPE OF (Rule_action);
      modification_rationale : Rule_change_request;
  END_ENTITY;

  ENTITY Rule_premise_definition;
      identifier          : STRING;  
      rule_definition     : Rule_definition;
      disjunctive_content : SET[1:?] OF rule_complex_or_simple;
    UNIQUE
      UR1 : Rule_definition,
 identifier;
  END_ENTITY;

  ENTITY Rule_priority;
      priority         : INTEGER;
      prioritized_rule : Rule_definition;
    WHERE
      WR1 : priority >= 0;
  END_ENTITY;
  
  ENTITY Rule_product
  	SUBTYPE OF (Software);
  END_ENTITY;

  ENTITY Rule_rejection
    SUBTYPE OF (Rule_action);
      rejection_reason : STRING;
  END_ENTITY;

  ENTITY Rule_request
    SUBTYPE OF (Rule_action);
  END_ENTITY;

  ENTITY Rule_set
    SUBTYPE OF (Rule_software_definition);
      rule_member : SET[1:?] OF Rule_priority;
  END_ENTITY;

  ENTITY Rule_set_group
    SUBTYPE OF (Rule_software_definition);
      elements : SET[2:?] OF Rule_set;
  END_ENTITY;

  ENTITY Rule_simple_clause;
      rule_function : Rule_boolean_function;
      parameter     : SET[1:?] OF parameter_assignment_or_rule_general_clause;
  END_ENTITY;

  ENTITY Rule_software_definition 
    SUPERTYPE OF (ONEOF (Rule_definition,
 			Rule_set_group, Rule_set))
    SUBTYPE OF (Software_definition); 			
    SELF\Product_view_definition.defined_version : Rule_version;
  END_ENTITY;

  ENTITY Rule_submission
    SUBTYPE OF (Rule_action);
      submission_rationale : STRING;
  END_ENTITY;

  ENTITY Rule_supersedence
    SUBTYPE OF (Rule_action);
      superseded_rule : Rule_version;
  END_ENTITY;

  ENTITY Rule_version
    SUBTYPE OF (Software_version);
			SELF\Product_version.of_product : Rule_product;    
    INVERSE
      management_action		: SET[1:?] OF rule_action FOR subject_rule;
      product_definition	: SET[1:?] OF rule_definition FOR defined_version;
  END_ENTITY;

RULE rule_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'PRODUCT_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'PRODUCT_RULE_ARM.' + 'RULE_PRODUCT' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE rule_software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PRODUCT_RULE_ARM.' + 'RULE_SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PRODUCT_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 
-- End ENTITY's for "Product_rule_lite"


END_SCHEMA;


