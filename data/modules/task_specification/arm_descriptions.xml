<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="task_specification" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2003/06/30 03:19:00 $" rcs.revision="$Revision: 1.14 $"
  describe.subtype_constraints="YES"	>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Task_specification_arm
   <express_ref linkend="task_specification:arm:Task_specification_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <ext_description linkend="Task_specification_arm">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Type: condition_select 
   <express_ref linkend="task_specification:arm:Task_specification_arm.condition_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.condition_select">
        A condition or test that when evaluated shall return a logical value (where logical is as defined by the EXPRESS logical type).
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Type: constraint_context
   <express_ref linkend="task_specification:arm:Task_specification_arm.constraint_context"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.constraint_context">
	  A <b>constraint_context</b> specifies the allowed contexts in which a <express_ref linkend="task_specification:arm:Task_specification_arm.Method_constraint"/> may apply.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Type: returned_value 
   <express_ref linkend="task_specification:arm:Task_specification_arm.returned_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.returned_value">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Type: task_classified_select 
   <express_ref linkend="task_specification:arm:Task_specification_arm.task_classified_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.task_classified_select">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Advisory_task_step  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Advisory_task_step"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Advisory_task_step"> An <b>Advisory_task_step</b> is
a type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_step"/>. It conveys information. <note>Some <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>s

 may not require any action to be undertaken.</note>
<example> "Beware of hot exhausts", "do not use tool X this way" and similar messages.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Concurrent_methods  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Concurrent_methods"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Concurrent_methods"> A <b>Concurrent_methods</b>
        is a type of <express_ref linkend="task_specification:arm:Task_specification_arm.Structured_task_method"/>

 that comprises a set of actions to be performed during the time required for the longest task. No specific order is required.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Concurrent_methods  Attribute: methods 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Concurrent_methods.methods"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Concurrent_methods.methods">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>s to be performed.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Decision_point  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Decision_point"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Decision_point"> 
        A <b>Decision_point</b> is  a type of <express_ref linkend="task_specification:arm:Task_specification_arm.Structured_task_method"/>.

It  requires a decision that determines which further <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/> is to be followed. <note>The condition on which the decision is based optionally allows a further <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 to be invoked to provide the basis for the decision.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Decision_point  Attribute: condition 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Decision_point.condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Decision_point.condition">
          the condition to be tested in order to make a decision.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Decision_point  Attribute: true_case_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Decision_point.true_case_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Decision_point.true_case_method">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  to be performed if the test condition is satisfied.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Decision_point  Attribute: false_case_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Decision_point.false_case_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Decision_point.false_case_method">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  to be performed if the test condition is not satisfied.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Decision_point  Attribute: unknown_case_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Decision_point.unknown_case_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Decision_point.unknown_case_method">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  to be performed if the test condition can not be evaluated or returns unknown.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: End_task  
   <express_ref linkend="task_specification:arm:Task_specification_arm.End_task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.End_task">
        An <b>End_task</b> is a  type of <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>.

It signifies a point at which to end the task.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Exit_loop  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Exit_loop"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Exit_loop">
        An <b>Exit_loop</b> is  a type of <express_ref linkend="task_specification:arm:Task_specification_arm.Structured_task_method"/>.

It signifies a point at which to exit from a loop. 
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Looping_method  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Looping_method">
        A <b>Looping_method</b> is a type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>.

It invokes a specified number of repetitions of a further task method.

      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Looping_method  Attribute: repeated_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method.repeated_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Looping_method.repeated_method">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/> to be repeated in the looping method.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Method_constraint  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Method_constraint"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Method_constraint">
	A <b>Method_constraint</b> is a type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_state_relationship"/>

 that signifies a constraint between <express_ref linkend="activity_method:arm:Activity_method_arm.Activity_method"/>s. The constraint may only apply within the context of a <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>

 or <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

, specified as the context.

      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Method_constraint  Attribute: applies_in 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Method_constraint.applies_in"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Method_constraint.applies_in">
          the task method within which the constraint applies.<example>Within a specific method, use of test equipment must be preceded by callibration. Or a 30 minute wait is required between stages of a method.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_count  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_count"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_count">
        A <b>Repeat_count</b> is a  type of <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>

. It invokes a specified number of repetitions of the <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method.repeated_method"/>

  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 inherited from the <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>

  supertype.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_count  Attribute: count 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_count.count"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_count.count">
          the number of time the <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method.repeated_method"/>

 is to be executed.
<note> If the <b>Repeat_count</b> entity is combined with the other subtypes of <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>, this becomes the maximum number of repetitions.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_until  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_until"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_until">
        A <b>Repeat_until</b> is a  type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>.

It invokes repetitions of a further <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  and is repeated until the specified condition is satisfied.  The method being repeated shall be executed at least once and the condition tested after the first execution.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_until  Attribute: condition 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_until.condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_until.condition">
          the condition to be tested in order to determine that the looping method shall be exited.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_while  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_while"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_while">
        A <b>Repeat_while</b> is a  type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>.

It  invokes repetitions of a further <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 and is repeated while the specified condition is satisfied.  The test condition shall be evaluated prior to invoking the method and may result in the <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>

  not being executed at all.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Repeat_while  Attribute: condition 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Repeat_while.condition"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Repeat_while.condition">
          the condition to be tested in order to determine that the <express_ref linkend="task_specification:arm:Task_specification_arm.Looping_method"/>

 shall be continued.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Simultaneous_methods  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Simultaneous_methods"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Simultaneous_methods">
        A <b>Simultaneous_methods</b>  is a type of <express_ref linkend="task_specification:arm:Task_specification_arm.Concurrent_methods"/>

 that represents  two or more actions to be performed together.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Structured_task_method  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Structured_task_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Structured_task_method">
        A <b>Structured_task_method</b> is a  type of <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>. It  is made up of other <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>s.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task">
        A <b>Task</b> is a type of <express_ref linkend="activity_method:arm:Activity_method_arm.Activity_method"/>.
It is a specification of work. <note>The task may be implemented using people, machines or a combination.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task  Attribute: name 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task.name">
          a name for the task.<note> Identifiers can be assigned to the task</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task  Attribute: description 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task.description">
          a description of the task.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task  Attribute: objective 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task.objective"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task.objective">
          the intended result or results of the task. 
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task  Attribute: method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task.method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task.method">
          the way in which the task is to be carried out.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_invocation  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_invocation"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_invocation">
	A <b>Task_invocation</b> is a  type of <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>.

It is an instruction to perform  another task. <example> A <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 calls  a pre-defined task to perform an instrument calibration.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_invocation  Attribute: task 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_invocation.task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_invocation.task">
          the task to be invoked.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method">
A <b>Task_method</b> is a type of <express_ref linkend="activity_method:arm:Activity_method_arm.Activity_method"/>.

It is a representation of        all or part of how to undertake a task.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method  Attribute: name 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method.name">
          the name for the <b>Task_method</b>.<note> Identifiers can be assigned to the task method.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method  Attribute: description 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method.description">
          the description of the <b>Task_method</b>.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method  Attribute: notes 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method.notes"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method.notes">
          additional advisory task steps associated to a <b>Task_method</b> as a whole. <note> These are ordered by means of a list.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_levels  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_levels"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_levels">
        A <b>Task_method_levels</b> is a  type of <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  that provides two or more different descriptions in place of a single method.  The actual work will be the same whichever alternative <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

  is followed.<note>This can be used to provide defferent levels of description of a task for people with varying levels of experience or expertise.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_levels  Attribute: alternatives 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_levels.alternatives"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_levels.alternatives">
         the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>s describing two or more ways in which the same work may be undertaken.
        </ext_description>
	
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_relationship  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_relationship">
	A <b>Task_method_relationship</b> is a type of <express_ref linkend="activity_method_assignment:arm:Activity_method_assignment_arm.Activity_method_relationship"/>.

It  relates two instances of <express_ref linkend="scheme:arm:Scheme_arm.Scheme_entry"/>
. <example>Can be used to capture a time dependency that cuts across the structure of the method.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_relationship  Attribute: relating_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_relationship.relating_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_relationship.relating_method">
          one instance of <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 that is part of relationship.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_relationship  Attribute: related_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_relationship.related_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_relationship.related_method">
          the other instance of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 that is part of relationship. If one element of the relationship is dependent upon the other then this attribute shall be the dependent one.

        </ext_description>
	
	
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_sequence  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_sequence"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_sequence">
        A <b>Task_method_sequence</b> is a type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 that comprises a sequence of steps to be followed in a specified order.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_sequence  Attribute: methods 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_sequence.methods"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_sequence.methods">
          the  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>s

 to be followed in the order specified in the list.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_state_relationship  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_state_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_state_relationship">
       A <b>Task_method_state_relationship</b> is an  type of <express_ref linkend="activity_method_assignment:arm:Activity_method_assignment_arm.Activity_method_relationship"/>.

 It is an association between  a <express_ref linkend="state_observed:arm:State_observed_arm.State"/>

or a <express_ref linkend="state_definition:arm:State_definition_arm.State_definition"/>

 and a <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>. The meaning of the entity is determined by classification. Candidate meanings include<ul>
<li> assumed starting state, and</li>
<li>required starting state.</li>
</ul>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_state_relationship  Attribute: state 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_state_relationship.state"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_state_relationship.state">
          the  <express_ref linkend="state_observed:arm:State_observed_arm.State"/>

or <express_ref linkend="state_definition:arm:State_definition_arm.State_definition"/>
 being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_state_relationship  Attribute: task_method 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_state_relationship.task_method"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_state_relationship.task_method">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_with_result  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_with_result"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_with_result">
        A <b>Task_method_with_result</b> is a  type of  <b>Task_method</b> that returns one or more values.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_method_with_result  Attribute: returns 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method_with_result.returns"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_method_with_result.returns">
          the values to be returned by the task step.
        </ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_relationship  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_relationship">
	A <b>Task_relationship</b> is a type of  <express_ref linkend="activity_method_assignment:arm:Activity_method_assignment_arm.Activity_method_relationship"/>

. It relates two tasks. <note> The nature of the relationship is determined from its classification.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_relationship  Attribute: relating_task 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_relationship.relating_task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_relationship.relating_task">
          one of the <express_ref linkend="task_specification:arm:Task_specification_arm.Task">Tasks</express_ref> participating in the relationship. 
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_relationship  Attribute: related_task 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_relationship.related_task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_relationship.related_task">
          the other of the <express_ref linkend="task_specification:arm:Task_specification_arm.Task">Tasks</express_ref> participating in the relationship. If one <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/> participating in the relationship is dependent upon the other, this attribute shall be the dependent one. 

        </ext_description>

	
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_result">
        A <b>Task_result</b> is a result or objective that is reached by undertaking a task. <note>More than one task may be  defined for a given result, if there can be several ways to accomplish the  result.</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result  Attribute: name 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_result.name">
          a name for the <b>Task_result</b>.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result  Attribute: description 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_result.description">
          a description of the <b>Task_result</b>.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result_state_relationship  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result_state_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Task_result_state_relationship">A <b>Task_result_state_relationship</b>
is a        relationship between a state and a <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result"/>. <note>The meaning of the entity is determined by classification. Candidate meanings include<ul>
<li> Intended finishing state.</li>
<li>Alternative finishing state</li>
</ul>
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result_state_relationship  Attribute: state 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result_state_relationship.state"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_result_state_relationship.state">
          the state being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_result_state_relationship  Attribute: task_result 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result_state_relationship.task_result"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_result_state_relationship.task_result">
          the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_result"/>

 being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_state_relationship  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_state_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_state_relationship">
A <b>Task_state_relationship</b> is a        relationship between a state and a <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>

. <note>The meaning of the entity is determined by classification. Candidate meanings include<ul>
<li> Assumed starting state.</li>
<li>Required starting state</li>
</ul>
</note>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_state_relationship  Attribute: state 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_state_relationship.state"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_state_relationship.state">
          the state being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_state_relationship  Attribute: task 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_state_relationship.task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_state_relationship.task">
          the task being related.
        </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_step  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_step"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_step">
        A <b>Task_step</b> is a type of  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_method"/>

 that is not further sub-divided.
      </ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_step  Attribute: step_text 
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_step.step_text"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_step.step_text">
          text describing what is to be done to accomplish the <express_ref linkend="task_specification:arm:Task_specification_arm.Task_step"/>.
        </ext_description>


<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Task_specification_arm  Entity: Task_assignment  
   <express_ref linkend="task_specification:arm:Task_specification_arm.Task_assignment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Task_specification_arm.Task_assignment">
	A <b>Task_assignment</b> is a type of <express_ref linkend="activity_method_assignment:arm:Activity_method_assignment_arm.Applied_activity_method_assignment"/>.

It  is an association of a <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>

 with product or activity data.</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Task_specification_arm  Entity: Task_assignment  Attribute: assigned_task 
  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_assignment.assigned_task"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Task_assignment.assigned_task">
	  the <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>

 being assigned.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Task_specification_arm  Entity: Task_assignment  Attribute: items 
  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_assignment.items"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Task_assignment.items">
	  the items that are associated to the <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>. 
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Task_specification_arm  Entity: Task_assignment  Attribute: roles
  <express_ref linkend="task_specification:arm:Task_specification_arm.Task_assignment.role"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="Task_specification_arm.Task_assignment.role">
the text that specifies the purpose of the association of the <express_ref linkend="task_specification:arm:Task_specification_arm.Task"/>

 with product or activity data.
</ext_description>

</ext_descriptions>
