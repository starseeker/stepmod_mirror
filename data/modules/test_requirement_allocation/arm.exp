(*
   $Id: arm.exp,v 1.12 2005/02/02 14:44:52 budreckytej Exp $
   ISO TC184/SC4/WG12 N3624 - ISO/CD-TS 10303-1751 Test requirement allocation - EXPRESS ARM
*)

SCHEMA Test_requirement_allocation_arm;

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Network_functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
	REFERENCE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740

REFERENCE FROM Requirement_decomposition_arm (get_requirement_definition_property);	-- ISO/TS 10303-1740


  ENTITY Test_requirement_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Product_version;
      (** Need a rule to capture particular type for analytical_model_based_test_access *)
      analytical_model_based_test_access                : OPTIONAL SET[1:?] OF Analytical_model_port_assignment; --part_feature_model_port_assignment;
      functional_specification_based_test_access        : OPTIONAL SET[1:?] OF Functional_usage_view_to_part_terminal_assignment;
    DERIVE
    	assigned_requirement_property :  requirement_definition_property := get_requirement_definition_property(SELF, 'REQUIREMENT_DECOMPOSITION_ARM.'+'TEST_REQUIREMENT_OCCURRENCE');
    WHERE
      WR1 : NOT (EXISTS(analytical_model_based_test_access)) OR (SIZEOF(QUERY(ta <* analytical_model_based_test_access | NOT (ta.source.associated_definition.defined_version = SELF\Requirement_assignment.assigned_to))) = 0);
      WR2 : NOT (EXISTS(analytical_model_based_test_access)) OR (SIZEOF(QUERY(ta <* analytical_model_based_test_access | NOT (ta.target.accessed_analytical_model = SELF\Requirement_assignment.assigned_requirement.required_analytical_representation[1].model_representation))) = 0);
      WR3 : EXISTS(analytical_model_based_test_access) XOR EXISTS(functional_specification_based_test_access);
      WR4 : NOT (EXISTS(analytical_model_based_test_access)) OR (EXISTS(SELF\Requirement_assignment.assigned_requirement\Requirement_definition_property.required_analytical_representation));
      WR5 : NOT (EXISTS(functional_specification_based_test_access)) OR (SIZEOF(QUERY(fa <* functional_specification_based_test_access | NOT (fa.physical_usage_view_terminal\Shape_element.containing_shape.defined_version = SELF\Requirement_assignment.assigned_to))) = 0);
      WR6 : NOT (EXISTS(functional_specification_based_test_access)) OR (EXISTS(SELF\Requirement_assignment.assigned_requirement\Requirement_definition_property.required_functional_specification));
      WR7 : NOT (EXISTS(functional_specification_based_test_access)) OR (SIZEOF(QUERY(fa <* functional_specification_based_test_access | NOT (fa.functional_usage_view_terminal\Functional_unit_usage_view_terminal_definition.associated_functional_unit_definition = SELF\Requirement_assignment.assigned_requirement\Requirement_definition_property.required_functional_specification[1].characterizing_functional_unit.definition))) = 0);
  END_ENTITY;

END_SCHEMA;  

