<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:27:10" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="test_requirement_allocation_arm schema_instance"/>
   <schema name="TEST_REQUIREMENT_ALLOCATION_ARM">
      <interface kind="use" schema="FUNCTIONAL_ASSIGNMENT_TO_PART_ARM"/>
      <interface kind="use" schema="NETWORK_FUNCTIONAL_USAGE_VIEW_ARM"/>
      <interface kind="use" schema="REQUIREMENT_ASSIGNMENT_ARM"/>
      <interface kind="use" schema="REQUIREMENT_DECOMPOSITION_ARM"/>
      <interface kind="reference" schema="REQUIREMENT_DECOMPOSITION_ARM">
         <interfaced.item name="get_requirement_definition_property"/>
      </interface>
      <entity name="test_requirement_allocation" supertypes="requirement_assignment">
         <explicit name="assigned_to">
            <typename name="product_version"/>
            <redeclaration entity-ref="requirement_assignment"/>
         </explicit>
         <explicit name="analytical_model_based_test_access" optional="YES">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="analytical_model_port_assignment"/>
         </explicit>
         <explicit name="functional_specification_based_test_access" optional="YES">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="functional_usage_view_to_part_terminal_assignment"/>
         </explicit>
         <derived name="assigned_requirement_property" expression=" get_requirement_definition_property ( self , 'requirement_decomposition_arm.' + 'test_requirement_occurrence' ) ">
            <typename name="requirement_definition_property"/>
         </derived>
         <where label="wr1" expression=" not ( exists ( analytical_model_based_test_access ) ) or ( sizeof ( query ( ta &lt;* analytical_model_based_test_access | not ( ta . source . associated_definition . defined_version = self \ requirement_assignment . assigned_to ) ) ) = 0 ) "/>
         <where label="wr2" expression=" not ( exists ( analytical_model_based_test_access ) ) or ( sizeof ( query ( ta &lt;* analytical_model_based_test_access | not ( ta . target . accessed_analytical_model = self \ requirement_assignment . assigned_requirement . required_analytical_representation [ 1 ] . model_representation ) ) ) = 0 ) "/>
         <where label="wr3" expression=" exists ( analytical_model_based_test_access ) xor exists ( functional_specification_based_test_access ) "/>
         <where label="wr4" expression=" not ( exists ( analytical_model_based_test_access ) ) or ( exists ( self \ requirement_assignment . assigned_requirement \ requirement_definition_property . required_analytical_representation ) ) "/>
         <where label="wr5" expression=" not ( exists ( functional_specification_based_test_access ) ) or ( sizeof ( query ( fa &lt;* functional_specification_based_test_access | not ( fa . physical_usage_view_terminal \ shape_element . containing_shape . defined_version = self \ requirement_assignment . assigned_to ) ) ) = 0 ) "/>
         <where label="wr6" expression=" not ( exists ( functional_specification_based_test_access ) ) or ( exists ( self \ requirement_assignment . assigned_requirement \ requirement_definition_property . required_functional_specification ) ) "/>
         <where label="wr7" expression=" not ( exists ( functional_specification_based_test_access ) ) or ( sizeof ( query ( fa &lt;* functional_specification_based_test_access | not ( fa . functional_usage_view_terminal \ functional_unit_usage_view_terminal_definition . associated_functional_unit_definition = self \ requirement_assignment . assigned_requirement \ requirement_definition_property . required_functional_specification [ 1 ] . characterizing_functional_unit . definition ) ) ) = 0 ) "/>
      </entity>
   </schema>
</express>
