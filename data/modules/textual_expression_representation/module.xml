<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.5 2003/11/21 14:38:51 ianbailey Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module name="textual_expression_representation" part="1367" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2003/11/21 14:38:51 $" rcs.revision="$Revision: 1.5 $" development.folder="dvlp">
	<keywords>
    module, expression, text, representation
 </keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="ap233.projlead"/>
		<editor ref="ap233.editor"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p>
     This part of ISO 10303 specifies an application module for the
     representation of expressions in their native text format.
   </p>
	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>definition of a representation item which is an expression, algorithm, function or computable code represented as text </li>
		<li>definition of the format of the textual expression</li>
		<li>definition of parameters and expressions described as text</li>
	</inscope>
	<!-- Items out of scope -->
	<outscope>
		<li>identification of the property represented by the expression</li>
		<li>the presentation of the expression</li>
	</outscope>
	<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="-">
			<description/>
			<uof.ae entity="-"/>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<ae entity="Parameter_representation_item">
			<aimelt>
				parameter_representation_item
			</aimelt>
			<source>ISO10303-1367</source>
			<refpath>
				compound_representation_item =&gt;
				textual_expression_representation_item =&gt;
				parameter_representation_item
			</refpath>
		</ae>
		<ae entity="Textual_expression_representation_item">
			<aimelt>
				textual_expression_representation_item
			</aimelt>
			<source>ISO10303-1367</source>
			<refpath>
				compound_representation_item =&gt;
				textual_expression_representation_item
			</refpath>
			<aa attribute="my_value" assertion_to="Representation_item">
				<aimelt>PATH</aimelt>
				<refpath>
					textual_expression_representation_item &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = set_representation_item
					set_representation_item
					set_representation_item = representation_item
					representation_item
				</refpath>
			</aa>
			<aa attribute="encoding">
				<aimelt>representation_item.name</aimelt>
				<source>ISO 10303-43</source>
				<refpath>
					textual_expression_representation_item &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = set_representation_item
					set_representation_item
					set_representation_item = representation_item
					representation_item.name
					{representation_item =&gt;
					textual_expression_encoding_representation_item}
				</refpath>
			</aa>
			<aa attribute="description">
				<aimelt>representation_item.name</aimelt>
				<source>ISO 10303-43</source>
				<refpath>
					textual_expression_representation_item &lt;=
					compound_representation_item &lt;=
					representation_item
					representation_item.name
				</refpath>
			</aa>
		</ae>
		<ae entity="Textual_function_representation_item">
			<aimelt>textual_function_representation_item</aimelt>
			<source>ISO10303-1367</source>
			<refpath>
				compound_representation_item =&gt;
				textual_expression_representation_item =&gt;
				textual_function_representation_item
			</refpath>
			<aa attribute="function_text">
				<aimelt>representation_item.name</aimelt>
				<source>ISO 10303-43</source>
				<refpath>
					textual_function_representation_item &lt;=
					textual_expression_representation_item  &lt;=
					compound_representation_item &lt;=
					representation_item
					representation_item.name
				</refpath>
			</aa>
			<aa attribute="parameters" assertion_to="Textual_expression_representation_item">
				<aimelt>PATH</aimelt>
				<refpath>
					textual_function_representation_item &lt;=
					textual_expression_representation_item &lt;=
					compound_representation_item
					compound_representation_item.item_element -&gt;
					compound_item_definition
					compound_item_definition = set_representation_item
					set_representation_item
					set_representation_item = representation_item
					representation_item
					representation_item =&gt;
					compound_representation_item =&gt;
					textual_expression_representation_item
				</refpath>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
		</express-g>
		<shortnames>
			<shortname name="PRRPIT" entity="parameter_representation_item"/>
			<shortname name="TEERI" entity="textual_expression_encoding_representation_item"/>
			<shortname name="TERI" entity="textual_expression_representation_item"/>
			<shortname name="TFRI" entity="textual_function_representation_item"/>
		</shortnames>
	</mim>
	<usage_guide>
		<p>
This annex describes usages of this module.
</p>
		<example number="1">
			<p>
A simple system "car" which has two components "car body" and "engine". We calculate the mass of the car (mc) by adding the mass of the engine (me) to the mass of the body (mcb). The equation (me + mcb) is to be represented in (simplified) MathML as follows: "&lt;mrow&gt;&lt;mi&gt;m&lt;msub&gt;cb&lt;/sub&gt;&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;m&lt;msub&gt;e&lt;/sub&gt;&lt;/mi&gt;&lt;/mrow&gt;". In addition, the engine is made up of an engine block and a crank train. The mass of the engine is given by meb + mct 
</p>
			<p>
The example instances below show how this could be achieved:

</p>
			<figure id="f1">
				<title>Car Example</title>
				<img src="example1.png"/>
			</figure>
		</example>
	</usage_guide>
</module>
