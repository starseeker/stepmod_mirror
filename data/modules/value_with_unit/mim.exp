   SCHEMA Value_with_unit_mim;
  USE FROM iso13584_generic_expressions_schema  -- ISO unset
      (variable_semantics);
  USE FROM measure_schema                       -- ISO 10303-41
      (amount_of_substance_measure,
       amount_of_substance_measure_with_unit,
       amount_of_substance_unit,
       area_measure,
       area_measure_with_unit,
       area_unit,
       context_dependent_measure,
       context_dependent_unit,
       conversion_based_unit,
       count_measure,
       derived_unit,
       descriptive_measure,
       electric_current_measure,
       electric_current_measure_with_unit,
       electric_current_unit,
       length_measure,
       length_measure_with_unit,
       length_unit,
       luminous_intensity_measure,
       luminous_intensity_measure_with_unit,
       luminous_intensity_unit,
       mass_measure,
       mass_measure_with_unit,
       mass_unit,
       measure_value,
       measure_with_unit,
       named_unit,
       numeric_measure,
       parameter_value,
       plane_angle_measure,
       plane_angle_measure_with_unit,
       plane_angle_unit,
       positive_length_measure,
       positive_plane_angle_measure,
       positive_ratio_measure,
       ratio_measure,
       ratio_measure_with_unit,
       ratio_unit,
       si_unit,
       solid_angle_measure,
       solid_angle_measure_with_unit,
       solid_angle_unit,
       thermodynamic_temperature_measure,
       thermodynamic_temperature_measure_with_unit,
       thermodynamic_temperature_unit,
       time_measure,
       time_measure_with_unit,
       time_unit,
       unit,
       volume_measure,
       volume_measure_with_unit,
       volume_unit);
  USE FROM qualified_measure_schema             -- ISO 10303-45
      (measure_representation_item,
       precision_qualifier,
       qualified_representation_item,
       type_qualifier,
       value_qualifier);
  USE FROM representation_schema                -- ISO 10303-43
      (compound_representation_item,
       representation_item,
       set_representation_item,
       value_representation_item);
   

ENTITY derived_unit_variable
  SUBTYPE OF (derived_unit,variable_semantics);
  INVERSE 
     associated_variable_environment : environment FOR semantics;
END_ENTITY;

   
ENTITY value_range
  SUBTYPE OF (compound_representation_item);
WHERE
 WR1: ( 'value_with_unit_mim.'+ 'SET_REPRESENTATION_ITEM' IN
     TYPEOF ( item_element ) ) AND value_range_wr1 (
     item_element ) ;
 WR2:value_range_wr2 ( item_element ) ;
 WR3:value_range_wr3 ( item_element ) ;
END_ENTITY;

   
FUNCTION value_range_wr1(
     agg: AGGREGATE OF representation_item): BOOLEAN;
  BEGIN
    IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY ( i1 <* agg | (
    'value_with_unit_mim.MEASURE_REPRESENTATION_ITEM' IN TYPEOF
    (i1)) ))
    = 2) OR (SIZEOF(QUERY ( i2 <* agg | (
    'value_with_unit_mim.VALUE_REPRESENTATION_ITEM' IN TYPEOF
    (i2)) ))
    = 2)) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;
  END;
END_FUNCTION;

   
FUNCTION value_range_wr2(
      agg: AGGREGATE OF representation_item): BOOLEAN;
  BEGIN
    IF (SIZEOF(QUERY ( i <* agg | (i.name = 'upper limit')
        )) = 1)
    AND (SIZEOF(QUERY ( i <* agg | (i.name = 'lower limit')
         )) = 1)
     THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;
  END;
END_FUNCTION;

   
FUNCTION value_range_wr3(
    agg: AGGREGATE OF representation_item): BOOLEAN;
  BEGIN
    IF (SIZEOF(QUERY ( i <* agg | (
    'value_with_unit_mim.MEASURE_REPRESENTATION_ITEM' IN 
    TYPEOF(i)) ))
    <> 2) OR (SIZEOF(QUERY ( i1 <* agg | 
     ('value_with_unit_mim.MEASURE_REPRESENTATION_ITEM' 
     IN TYPEOF (i1))
     AND
     (SIZEOF(QUERY ( i2 <* agg
     | ((i1\measure_with_unit.unit_component
    :=: i2\measure_with_unit.unit_component) OR
     (i1\measure_with_unit.unit_component :=:
     i2\measure_with_unit.unit_component)) ))
    = 2) )) = 2) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;
  END;
END_FUNCTION;

   END_SCHEMA;
(* Last update -  5 Oct 2001 *)
