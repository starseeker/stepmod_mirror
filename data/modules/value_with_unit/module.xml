<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.3 U (http://www.xmlspy.com) by David Ferguson (Boeing Shared Services Group) -->
<!-- $Id: module.xml,v 1.2 2002/03/20 03:45:12 thendrix Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<module name="value_with_unit" part="1054" version="1" wg.number="00000" status="WD" language="E" publication.year="-" published="n" rcs.date="$Date: 2002/03/20 03:45:12 $" rcs.revision="$Revision: 1.2 $">
  <keywords>
    module, value, unit, measure, range, maximum, minimum
 </keywords>
  <contacts>
    <projlead ref="pdmmodules.projlead"/>
    <editor ref="pdmmodules.editor"/>
  </contacts>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <purpose>The purpose is to specify numbers, ranges of numbers,  and
their units of measure
 </purpose>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <inscope>
    <li>values that are single numbers;</li>
    <li>values that are all numbers in a range;</li>
    <li>units.</li>
  </inscope>
  <outscope>
    <li>all things which are not involved in the specification of the
concepts of value with unit.</li>
  </outscope>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <normrefs>
    <!-- list the normative references explicitly detailed 
    Note: rather than explicitly detailing the normative reference
    here, it would be better to add the reference to 
    data/basic/normrefs.xml and then use normref.inc as shown below.
    -->
    <!-- list the normative references to be included. 
    The normative reference is detailed in data/basic/normrefs.xml
    Note: this is a repetition of the reference specified above.
    -->
    <normref.inc normref="ref10303-41.2000"/>
    <normref.inc normref="ref10303-43.2000"/>
    <normref.inc normref="ref10303-45.1998"/>
    <!-- If a term defined in a normative reference is to be used, then the
    term must be specified in the definition of the normative reference,
    and then identified by term.ref in when including the normative
    reference through the use normref.inc
    Note: This reference is already included as a default in
    data/basic/normrefs_default.xml

    <normref.inc module.name="example">
    <term.ref linkend="ttt"/>
  </normref.inc>
    -->
  </normrefs>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <arm>
    <uof name="Value_With_Unit">
      <description> This UoF supports the specification of numerical
values with units of measure.
			</description>
      <uof.ae entity="Numerical_value"/>
      <uof.ae entity="Unit"/>
      <uof.ae entity="Value_limit"/>
      <uof.ae entity="Value_range"/>
      <uof.ae entity="Value_with_unit"/>
    </uof>
    <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
    </express-g>
  </arm>
  <mapping_table>
    <ae entity="NUMERICAL_VALUE">
      <alt>
 #1: If significant digits are given for the value_with_unit. #2: If
no significant digits are given for the value_with_unit. #3: If the
unit is not assigned globally. #4: If the unit is assigned
globally.</alt>
      <aimelt>#3: ( #1:
([measure_representation_item]
[qualified_representation_item])
#2:(measure_representation_item))
 #4: ( #1:
([value_representation_item]
[qualified_representation_item]) #2:
(value_representation_item))</aimelt>
      <source>45 
45 
45 
43 
45 
43</source>
      <aa attribute="value_component">
	<alt>
 #1: If significant digits are given for the value_with_unit. #2: If
no significant digits are given for the value_with_unit. #3: If the
unit is not assigned globally. #4: If the unit is assigned
globally.</alt>
	<aimelt>#3: (measure_with_unit.value_component)
#4:(value_representation_item.value_component)</aimelt>
	<source>41
43</source>
	<refpath>#3: ({measure_representation_item &lt;=
measure_with_unit
{(|measure_with_unit|)
(measure_with_unit =&gt;
(amount_of_substance_measure_with_unit)
(area_measure_with_unit)
(celsius_temperature_measure_with_unit)
(electric_current_measure_with_unit) 
(length_measure_with_unit)
(luminous_intensity_measure_with_unit)
 (mass_measure_with_unit)
(plane_angle_measure_with_unit) 
(ratio_measure_with_unit)
(solid_angle_measure_with_unit)
(thermodynamic_temperature_measure_with_unit) 
(time_measure_with_unit)
(volume_measure_with_unit))} 
measure_with_unit.value_component
{measure_with_unit.value_component -&gt; measure_value 
(measure_value = area_measure area_measure) 
(measure_value = amount_of_substance_measure amount_of_substance_measure)
(measure_value = celsius_temperature_measure
celsius_temperature_measure) 
(measure_value = length_measure
length_measure) 
(measure_value = electric_current_measure
electric_current_measure) 
(measure_value = plane_angle_measure
plane_angle_measure) 
(measure_value = ratio_measure ratio_measure)
(measure_value = parameter_value parameter_value) 
(measure_value = descriptive_measure descriptive_measure) 
(measure_value = positive_plane_angle_measure 
positive_plane_angle_measure)
(measure_value = count_measure 
count_measure) 
(measure_value = mass_measure 
mass_measure) 
(measure_value = time_measure 
time_measure)
(measure_value = thermodynamic_temperature_measure
thermodynamic_temperature_measure) 
(measure_value = luminous_intensity_measure luminous_intensity_measure) 
(measure_value = solid_angle_measure solid_angle_measure) 
(measure_value = volume_measure 
volume_measure) 
(measure_value = numeric_measure
numeric_measure) 
(measure_value = context_dependent_measure
context_dependent_measure) 
(measure_value = positive_length_measure
positive_length_measure) 
(measure_value = positive_ratio_measure
positive_ratio_measure)}}) 
#4: (value_representation_item
value_representation_item.value_component)</refpath>
      </aa>
    </ae>
    <ae entity="UNIT">
      <alt>
 #1: If the unit has a commonly used descriptor. #2: If the unit
descriptor is constructed of more than one unit name. #3: If the unit
is defined with respect to the system of units defined in ISO
10403-41. #4: If the unit is defined with respect to another
named_unit by means of a conversion factor. #5: If the unit is
dependent on the context of its usage. #6: In order to express a
distance. #7: In order to express an amount of matter. #8: In order to
express the duration of periods. #9: In order to express the movement
of electrically charged particles. #10: In order to express the degree
of heat of a body. #11: In order to express a quantity of substance in
numbers of atoms. #12: In order to express the brightness of a body.
#13: In order to express angles in planes. #14: In order to express
solid angles. #15: In order to express the extent of a surface. #16:
In order to express the solid content of a body. #17: In order to
express the ratio between two quantities of the same kind. #18: If the
named unit is represented by an explicit expression. #19: If the
context dependent unit is represented by an explicit expression. #20:
If the derived unit is represented by an explicit expression.</alt>
      <aimelt>#1: (named_unit) #2: (derived_unit)</aimelt>
      <source>41
41</source>
      <refpath>
 { #1: (named_unit) #18: (named_unit =&gt; named_unit_variable &lt;=
variable_semantics) #19: (named_unit =&gt; context_dependent_unit
=&gt; expression_conversion_based_unit &lt;= variable_semantics)
{named_unit =&gt; #3: (si_unit) #4: (conversion_based_unit) #5:
(context_dependent_unit)> #6: (length_unit) #7: (mass_unit) #8:
(time_unit) #9: (electric_current_unit) #10:
(thermodynamic_temperature_unit) #11: (amount_of_substance_unit) #12:
(luminous_intensity_unit) #13: (plane_angle_unit) #14:
(solid_angle_unit) #15: (area_unit) #16: (volume_unit) #17:
(ratio_unit)>} #2: (derived_unit) #20: (derived_unit =&gt;
derived_unit_variable &lt;= variable_semantics)}</refpath>
      <aa attribute="unit_name">
	<alt>
 #1: If the unit has a commonly used descriptor. #2: If the unit
descriptor is constructed of more than one unit name. #3: If the unit
is defined with respect to the system of units defined in ISO
10403-41. #4: If the unit is defined with respect to another
named_unit by means of a conversion factor. #5: If the unit is
dependent on the context of its usage. #6: In order to express a
distance. #7: In order to express an amount of matter. #8: In order to
express the duration of periods. #9: In order to express the movement
of electrically charged particles. #10: In order to express the degree
of heat of a body. #11: In order to express a quantity of substance in
numbers of atoms. #12: In order to express the brightness of a body.
#13: In order to express angles in planes. #14: In order to express
solid angles. #15: In order to express the extent of a surface. #16:
In order to express the solid content of a body. #17: In order to
express the ratio between two quantities of the same kind. #18: If the
named unit is represented by an explicit expression. #19: If the
context dependent unit is represented by an explicit expression. #20:
If the derived unit is represented by an explicit expression.</alt>
	<aimelt>#1: ( #3: (si_unit.name) #4:
(conversion_based_unit.name) #5: (context_dependent_unit.name)) #2:
(derived_unit.name)</aimelt>
	<source>41
41
41
41</source>
	<refpath>#1: (named_unit =&gt; #3: (si_unit si_unit.name) #4:
(conversion_based_unit conversion_based_unit.name) #6:
(context_dependent_unit context_dependent_unit.name)) #2:
(derived_unit derived_unit.name)</refpath>
      </aa>
    </ae>
    <ae entity="VALUE_LIMIT">
      <alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
limit is an upper bound. #4: If the limit is a lower bound. #5: If the
unit is assigned globally. #6: If the unit is not assigned
globally.</alt>
      <aimelt>#6: ( #1: (measure_representation_item) #2:
([qualified_representation_item][measure_representation_item])) #5: (
#1: (value_representation_item) #2:
([value_representation_item][qualified_representation_item]))</aimelt>
      <source>45
45
45
43
43
45</source>
      <aa attribute="limit">
	<alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
limit is an upper bound. #4: If the limit is a lower bound. #5: If the
unit is assigned globally. #6: If the unit is not assigned
globally.</alt>
	<aimelt>#5: (value_representation_item.value_component) #6:
(measure_with_unit.value_component)</aimelt>
	<source>43
41</source>
	<refpath>#5: (value_representation_item
value_representation_item.value_component) #6:
({measure_representation_item &lt;= measure_with_unit
{(|measure_with_unit|) (measure_with_unit =&gt;
(amount_of_substance_measure_with_unit) (area_measure_with_unit)
(electric_current_measure_with_unit) (length_measure_with_unit)
(luminous_intensity_measure_with_unit) (mass_measure_with_unit)
(plane_angle_measure_with_unit) (ratio_measure_with_unit)
(solid_angle_measure_with_unit)
(thermodynamic_temperature_measure_with_unit) (time_measure_with_unit)
(volume_measure_with_unit))} measure_with_unit.value_component
{measure_with_unit.value_component -&gt; measure_value (measure_value
= area_measure area_measure) (measure_value =
amount_of_substance_measure amount_of_substance_measure)
(measure_value = length_measure length_measure) (measure_value =
electric_current_measure electric_current_measure) (measure_value =
plane_angle_measure plane_angle_measure) (measure_value =
ratio_measure ratio_measure) (measure_value = parameter_value
parameter_value) (measure_value = descriptive_measure
descriptive_measure) (measure_value = positive_plane_angle_measure
positive_plane_angle_measure) (measure_value = count_measure
count_measure) (measure_value = mass_measure mass_measure)
(measure_value = time_measure time_measure) (measure_value =
thermodynamic_temperature_measure thermodynamic_temperature_measure)
(measure_value = luminous_intensity_measure
luminous_intensity_measure) (measure_value = solid_angle_measure
solid_angle_measure) (measure_value = volume_measure volume_measure)
(measure_value = numeric_measure numeric_measure) (measure_value =
context_dependent_measure context_dependent_measure) (measure_value =
positive_length_measure positive_length_measure) (measure_value =
positive_ratio_measure positive_ratio_measure)}})</refpath>
      </aa>
      <aa attribute="limit_qualifier">
	<alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
limit is an upper bound. #4: If the limit is a lower bound. #5: If the
unit is assigned globally. #6: If the unit is not assigned
globally.</alt>
	<aimelt>type_qualifier.name</aimelt>
	<source>45</source>
	<refpath>qualified_representation_item
qualified_representation_item.qualifiers[i] -&gt; value_qualifier =
type_qualifier type_qualifier { #3: (type_qualifier.name = 'maximum')
#4: (type_qualifier.name = 'minimum')}</refpath>
      </aa>
    </ae>
    <ae entity="VALUE_RANGE">
      <alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
unit is not assigned globally. #4: If the unit is assigned
globally.</alt>
      <aimelt>#1: (value_range) #2:
([value_range][qualified_representation_item])</aimelt>
      <source>214
214
45</source>
      <refpath>
 {value_range &lt;= compound_representation_item}</refpath>
      <aa attribute="lower_limit">
	<alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
unit is not assigned globally. #4: If the unit is assigned
globally.</alt>
	<aimelt>#3: (measure_with_unit.value_component) #4:
(value_representation_item.value_component)</aimelt>
	<source>41
</source>
	<refpath>value_range &lt;= compound_representation_item
compound_representation_item.item_element -&gt;
set_representation_item #3: (set_representation_item[i] -&gt;
representation_item =&gt; {representation_item.name = 'lower limit'}
measure_representation_item measure_representation_item &lt;=
measure_with_unit {(|measure_with_unit|) (measure_with_unit =&gt;
(amount_of_substance_measure_with_unit) (area_measure_with_unit)
(electric_current_measure_with_unit) (length_measure_with_unit)
(luminous_intensity_measure_with_unit) (mass_measure_with_unit)
(plane_angle_measure_with_unit) (ratio_measure_with_unit)
(solid_angle_measure_with_unit)
(thermodynamic_temperature_measure_with_unit) (time_measure_with_unit)
(volume_measure_with_unit))} measure_with_unit.value_component
{measure_with_unit.value_component -&gt; measure_value (measure_value
= area_measure area_measure) (measure_value =
amount_of_substance_measure amount_of_substance_measure)
(measure_value = length_measure length_measure) (measure_value =
electric_current_measure electric_current_measure) (measure_value =
plane_angle_measure plane_angle_measure) (measure_value =
ratio_measure ratio_measure) (measure_value = parameter_value
parameter_value) (measure_value = descriptive_measure
descriptive_measure) (measure_value = positive_plane_angle_measure
positive_plane_angle_measure) (measure_value = count_measure
count_measure) (measure_value = mass_measure mass_measure)
(measure_value = time_measure time_measure) (measure_value =
thermodynamic_temperature_measure thermodynamic_temperature_measure)
(measure_value = luminous_intensity_measure
luminous_intensity_measure) (measure_value = solid_angle_measure
solid_angle_measure) (measure_value = volume_measure volume_measure)
(measure_value = numeric_measure numeric_measure) (measure_value =
context_dependent_measure context_dependent_measure) (measure_value =
positive_length_measure positive_length_measure) (measure_value =
positive_ratio_measure positive_ratio_measure)}) #4:
(set_representation_item[i] -&gt; representation_item =&gt;
{representation_item.name = 'lower limit'} value_representation_item
value_representation_item.value_component)</refpath>
      </aa>
      <aa attribute="upper_limit">
	<alt>
 #1: If no significant digits are given for the value_with_unit. #2:
If significant digits are given for the value_with_unit. #3: If the
unit is not assigned globally. #4: If the unit is assigned
globally.</alt>
	<aimelt>#3: (measure_with_unit.value_component) #4:
(value_representation_item.value_component)</aimelt>
	<source>41
43</source>
	<refpath>value_range &lt;= compound_representation_item
compound_representation_item.item_element -&gt;
set_representation_item #3: (set_representation_item[i] -&gt;
representation_item =&gt; {representation_item.name = 'upper limit'}
measure_representation_item measure_representation_item &lt;=
measure_with_unit {(|measure_with_unit|) (measure_with_unit =&gt;
(amount_of_substance_measure_with_unit) (area_measure_with_unit)
(electric_current_measure_with_unit) (length_measure_with_unit)
(luminous_intensity_measure_with_unit) (mass_measure_with_unit)
(plane_angle_measure_with_unit) (ratio_measure_with_unit)
(solid_angle_measure_with_unit)
(thermodynamic_temperature_measure_with_unit) (time_measure_with_unit)
(volume_measure_with_unit))} measure_with_unit.value_component
{measure_with_unit.value_component -&gt; measure_value (measure_value
= area_measure area_measure) (measure_value =
amount_of_substance_measure amount_of_substance_measure)
(measure_value = length_measure length_measure) (measure_value =
electric_current_measure electric_current_measure) (measure_value =
plane_angle_measure plane_angle_measure) (measure_value =
ratio_measure ratio_measure) (measure_value = parameter_value
parameter_value) (measure_value = descriptive_measure
descriptive_measure) (measure_value = positive_plane_angle_measure
positive_plane_angle_measure) (measure_value = count_measure
count_measure) (measure_value = mass_measure mass_measure)
(measure_value = time_measure time_measure) (measure_value =
thermodynamic_temperature_measure thermodynamic_temperature_measure)
(measure_value = luminous_intensity_measure
luminous_intensity_measure) (measure_value = solid_angle_measure
solid_angle_measure) (measure_value = volume_measure volume_measure)
(measure_value = numeric_measure numeric_measure) (measure_value =
context_dependent_measure context_dependent_measure) (measure_value =
positive_length_measure positive_length_measure) (measure_value =
positive_ratio_measure positive_ratio_measure)}) #4:
(set_representation_item[i] -&gt; representation_item =&gt;
{representation_item.name = 'upper limit'} value_representation_item
value_representation_item.value_component)</refpath>
      </aa>

    <!--
    #1: (#3: (measure_representation_item)
    #4: ([measure_representation_item][qualified_representation_item]))
    #2: (#3: (value_range)
    #4: ([value_range][qualified_representation_item]))
    #7: (#3: (value_representation_item)
    #4: ([value_representation_item][qualified_representation_item]))
    -->
    </ae>
      <ae entity="VALUE_WITH_UNIT">
	<alt>
#1: If the value_with_unit is a numerical_value or a
value_limit and the unit is not assigned globally.
#2: If the
value_with_unit is a value_range.
#3: If no significant digits are
given for the value_with_unit.
#4: If significant digits are given
for the value_with_unit.
#5: If the unit has a commonly used
descriptor.
#6: If the unit descriptor is constructed of more than
one unit name.
#7: If the value_with_unit is a numerical_value or a
value_limit and the unit is specified globally.</alt>
	<aimelt>#1:
(
#3:
(measure_representation_item)
#4:
([measure_representation_item]\n[qualified_representation_item]))
#2:
(
#3:
(value_range)
#4:
([value_range]\n[qualified_representation_item]))
#7:
(
#3:
(value_representation_item)
#4:
([value_representation_item]\n[qualified_representation_item]))</aimelt>
	<source>45
45
45
1054
1054
45
43
43
45</source>
	<refpath>#2:
({value_range &lt;=
compound_representation_item})</refpath>
	<aa attribute="significant_digits">
	  <alt>
#1: If the value_with_unit is a numerical_value or
a value_limit and the unit is not assigned globally.
#2: If the
value_with_unit is a value_range.
#3: If no significant digits are
given for the value_with_unit.
#4: If significant digits are given
for the value_with_unit.
#5: If the unit has a commonly used
descriptor.
#6: If the unit descriptor is constructed of more than
one unit name.
#7: If the value_with_unit is a numerical_value or a
value_limit and the unit is specified globally.</alt>
	  <aimelt>precision_qualifier.precision_value</aimelt>
	  <source>45</source>
	  <refpath>qualified_representation_item
qualified_representation_item.qualifiers[i] -&gt; value_qualifier
value_qualifier = precision_qualifier precision_qualifier
precision_qualifier.precision_value</refpath>
	</aa>
	<aa attribute="unit_component"   assertion_to="unit">
	  <alt>
#1: If the value_with_unit is a numerical_value or
a value_limit and the unit is not assigned globally.
#2: If the
value_with_unit is a value_range.
#3: If no significant digits are
given for the value_with_unit.
#4: If significant digits are given
for the value_with_unit.
#5: If the unit has a commonly used
descriptor.
#6: If the unit descriptor is constructed of more than
one unit name.
#7: If the value_with_unit is a numerical_value or a
value_limit and the unit is specified globally.</alt>
	  <aimelt>PATH</aimelt>
	  <source>
</source>
	  <refpath>#1:
(measure_representation_item &lt;=)
#2:
(compound_representation_item
compound_representation_item.item_element -&gt;
compound_item_definition compound_item_definition =
set_representation_item set_representation_item
set_representation_item[i] -&gt; representation_item =&gt;
measure_representation_item &lt;=) measure_with_unit
measure_with_unit.unit_component -&gt; unit #5:
(unit = named_unit
named_unit) #6:
(unit = derived_unit derived_unit)</refpath>
	</aa>
    
      </ae>
    </mapping_table>
  <mim>
    <express-g>
      <imgfile file="mimexpg1.xml"/>
    </express-g>
  </mim>
  <bibliography>
    <!-- include a bibliographic entry -->
    <bibitem>
			<orgname>ISO TC 184/SC4</orgname>
<pubdate>1997</pubdate> <stdtitle>Proposed Standing Document -
Guidelines for application module development, revision 0.6</stdtitle>
<ulink url="http://wg10step.aticorp.org/Deliverables/Guidelines/AMConGde06.html"/>
		</bibitem>
    <!-- include a bibliographic entry from ../data/basic/bibliography.xml -->
    <bibitem.inc ref="AMConGde06"/>
  </bibliography>
</module>
