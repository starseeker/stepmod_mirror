
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <TITLE>1054 :- value_with_unit  (Date: 2002/03/20 03:45:12  Revision: 1.2 )</TITLE>
   </HEAD>
   <BODY>
      <table cellspacing="0" border="0">
         <tr>
            <td><font size="-2">module.xml</font></td>
            <td><font size="-2">(Date: 2002/03/20 03:45:12  Revision: 1.2 )</font></td>
            <td>&nbsp;&nbsp;</td>
            <td><font size="-2">arm.xml</font></td>
            <td><font size="-2">(Date: 2002/03/15 00:23:26  Revision: 1.1 )</font></td>
            <td>&nbsp;&nbsp;</td>
            <td><font size="-2">mim.xml</font></td>
            <td><font size="-2">(Date: 2002/03/15 00:23:26  Revision: 1.1 )</font></td>
         </tr>
      </table>
      <TABLE cellspacing="0" border="0" width="100%">
         <TR>
            <TD valign="MIDDLE"><B>
                  application module: 
                  value_with_unit</B></TD>
            <TD valign="MIDDLE"><b>ISO/WD 10303-1054:2001(E)</b></TD>
         </TR>
      </TABLE>
      <TABLE border="1" cellspacing="1" width="100%">
         <TR>
            <TD valign="TOP"><A HREF="../../../../repository_index.htm">
                  Module repository
                  </A><BR><A HREF="cover.htm">Cover page</A><BR><A HREF="foreword.htm#foreword">Foreword</A><BR><A HREF="introduction.htm#intro">Introduction</A><BR><A HREF="1_scope.htm#scope">1 Scope</A><BR><A HREF="2_refs.htm#nref">2 Normative references</A><BR><A HREF="3_defs.htm#defns">3 Definitions and abbreviations</A></TD>
            <TD valign="TOP"><A HREF="4_info_reqs.htm#arm">4 Information requirements</A><BR><small><A HREF="4_info_reqs.htm#uof">&nbsp;&nbsp; 4.1 Units of functionality</A><BR><A HREF="4_info_reqs.htm#entities">&nbsp; &nbsp;4.2 ARM entity definitions</A><BR></small><A HREF="5_mim.htm#mim">5 Module interpreted model</A><BR><small><A HREF="5_mim.htm#mapping">&nbsp; &nbsp;5.1 Mapping specification</A><BR><A HREF="5_mim.htm#mim_express">&nbsp; &nbsp;5.2 MIM EXPRESS short listing</A><BR><A HREF="5_mim.htm#entities">&nbsp; &nbsp; &nbsp;5.2.1 MIM EXPRESS entitys</A><BR><A HREF="5_mim.htm#functions">&nbsp; &nbsp; &nbsp;5.2.2 MIM EXPRESS functions</A><BR></small></TD>
            <TD valign="TOP"><A HREF="a_short_names.htm#annexa">A AM MIM short names</A><BR><A HREF="b_obj_reg.htm#annexb">B Information requirements object
                  registration</A><BR><A HREF="c_arm_expg.htm#annexc">C ARM EXPRESS-G</A><BR><A HREF="d_mim_expg.htm#annexd">D MIM EXPRESS-G</A><BR><A HREF="e_exp.htm#annexe">E AM ARM and MIM EXPRESS
                  listings</A><BR><A HREF="biblio.htm#biblio">Bibliography</A></TD>
         </TR>
      </TABLE>
      <H3><A NAME="annexe-mim_lf-express">Annex E - MIM Long form EXPRESS</A></H3><code><br><br>
         SCHEMA <b>value_with_unit_mim</b>;
         <br><br><br><A NAME="value_with_unit_mim.amount_of_substance_measure">TYPE </A><b>amount_of_substance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.area_measure">TYPE </A><b>area_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.compound_item_definition">TYPE </A><b>compound_item_definition</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.set_representation_item">set_representation_item</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.context_dependent_measure">TYPE </A><b>context_dependent_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.count_measure">TYPE </A><b>count_measure</b> =
         NUMBER;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.description_attribute_select">TYPE </A><b>description_attribute_select</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.representation">representation</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.descriptive_measure">TYPE </A><b>descriptive_measure</b> =
         STRING;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.electric_current_measure">TYPE </A><b>electric_current_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.founded_item_select">TYPE </A><b>founded_item_select</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.representation_item">representation_item</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.id_attribute_select">TYPE </A><b>id_attribute_select</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.representation">representation</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.identifier">TYPE </A><b>identifier</b> =
         STRING;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.label">TYPE </A><b>label</b> =
         STRING;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.length_measure">TYPE </A><b>length_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.luminous_intensity_measure">TYPE </A><b>luminous_intensity_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.mass_measure">TYPE </A><b>mass_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.measure_value">TYPE </A><b>measure_value</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.length_measure">length_measure</A>, <A HREF="#value_with_unit_mim.mass_measure">mass_measure</A>, <A HREF="#value_with_unit_mim.time_measure">time_measure</A>, <A HREF="#value_with_unit_mim.electric_current_measure">electric_current_measure</A>, <A HREF="#value_with_unit_mim.thermodynamic_temperature_measure">thermodynamic_temperature_measure</A>, <A HREF="#value_with_unit_mim.amount_of_substance_measure">amount_of_substance_measure</A>, <A HREF="#value_with_unit_mim.luminous_intensity_measure">luminous_intensity_measure</A>, <A HREF="#value_with_unit_mim.plane_angle_measure">plane_angle_measure</A>, <A HREF="#value_with_unit_mim.solid_angle_measure">solid_angle_measure</A>, <A HREF="#value_with_unit_mim.area_measure">area_measure</A>, <A HREF="#value_with_unit_mim.volume_measure">volume_measure</A>, <A HREF="#value_with_unit_mim.ratio_measure">ratio_measure</A>, <A HREF="#value_with_unit_mim.parameter_value">parameter_value</A>, <A HREF="#value_with_unit_mim.numeric_measure">numeric_measure</A>, <A HREF="#value_with_unit_mim.context_dependent_measure">context_dependent_measure</A>, <A HREF="#value_with_unit_mim.descriptive_measure">descriptive_measure</A>, <A HREF="#value_with_unit_mim.positive_length_measure">positive_length_measure</A>, <A HREF="#value_with_unit_mim.positive_plane_angle_measure">positive_plane_angle_measure</A>, <A HREF="#value_with_unit_mim.positive_ratio_measure">positive_ratio_measure</A>, <A HREF="#value_with_unit_mim.count_measure">count_measure</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.name_attribute_select">TYPE </A><b>name_attribute_select</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.derived_unit">derived_unit</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.numeric_measure">TYPE </A><b>numeric_measure</b> =
         NUMBER;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.parameter_value">TYPE </A><b>parameter_value</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.plane_angle_measure">TYPE </A><b>plane_angle_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.positive_length_measure">TYPE </A><b>positive_length_measure</b> =
         <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.length_measure">length_measure</A>
               ;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.positive_plane_angle_measure">TYPE </A><b>positive_plane_angle_measure</b> =
         <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.plane_angle_measure">plane_angle_measure</A>
               ;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.positive_ratio_measure">TYPE </A><b>positive_ratio_measure</b> =
         <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.ratio_measure">ratio_measure</A>
               ;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.ratio_measure">TYPE </A><b>ratio_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.set_representation_item">TYPE </A><b>set_representation_item</b> =
         SET[1:?] OF <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.representation_item">representation_item</A>;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.si_prefix">TYPE </A><b>si_prefix</b> =
         
         ENUMERATION OF 
         <br>
         &nbsp;&nbsp; 
         (exa,peta,tera,giga,mega,kilo,hecto,deca,deci,centi,milli,micro,nano,pico,femto,atto);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.si_unit_name">TYPE </A><b>si_unit_name</b> =
         
         ENUMERATION OF 
         <br>
         &nbsp;&nbsp; 
         (metre,gram,second,ampere,kelvin,mole,candela,radian,steradian,hertz,newton,pascal,joule,watt,coulomb,volt,farad,ohm,siemens,weber,tesla,henry,degree_celsius,lumen,lux,becquerel,gray,sievert);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.solid_angle_measure">TYPE </A><b>solid_angle_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.text">TYPE </A><b>text</b> =
         STRING;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.thermodynamic_temperature_measure">TYPE </A><b>thermodynamic_temperature_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.time_measure">TYPE </A><b>time_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.unit">TYPE </A><b>unit</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>, <A HREF="#value_with_unit_mim.derived_unit">derived_unit</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.value_qualifier">TYPE </A><b>value_qualifier</b> =
         
         
         SELECT
         
         
         WITH (<A HREF="#value_with_unit_mim.precision_qualifier">precision_qualifier</A>, <A HREF="#value_with_unit_mim.type_qualifier">type_qualifier</A>);<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.volume_measure">TYPE </A><b>volume_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br><br><A NAME="value_with_unit_mim.amount_of_substance_measure_with_unit">ENTITY <b>amount_of_substance_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.amount_of_substance_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.amount_of_substance_unit">ENTITY <b>amount_of_substance_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.amount_of_substance_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 1) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.area_measure_with_unit">ENTITY <b>area_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.area_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.AREA_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.area_unit">ENTITY <b>area_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.area_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 2) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.compound_representation_item">ENTITY <b>compound_representation_item</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.representation_item">representation_item</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.compound_representation_item.item_element">item_element : </A><A HREF="#value_with_unit_mim.compound_item_definition">compound_item_definition</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.context_dependent_unit">ENTITY <b>context_dependent_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.context_dependent_unit.name">name : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.conversion_based_unit">ENTITY <b>conversion_based_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.conversion_based_unit.name">name : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.conversion_based_unit.conversion_factor">conversion_factor : </A><A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.derived_unit">ENTITY <b>derived_unit</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.derived_unit.elements">elements : </A>SET[1:?] OF <A HREF="#value_with_unit_mim.derived_unit_element">derived_unit_element</A>;<br>
         &nbsp;&nbsp;DERIVE<br>
         &nbsp;&nbsp;&nbsp;
         
         <A NAME="value_with_unit_mim.derived_unit.name">name : </A><A HREF="#value_with_unit_mim.label">label</A> : get_name_value(SELF);<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.derived_unit.wr:wr1">wr1: ((SIZEOF(elements) &gt; 1) OR ((SIZEOF(elements) = 1) AND (               elements[1].exponent &lt;&gt; 1)));</A><br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.derived_unit.wr:wr2">wr2: (SIZEOF(USEDIN(SELF,'VALUE_WITH_UNIT_MIM.' +                'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.derived_unit_element">ENTITY <b>derived_unit_element</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.derived_unit_element.unit">unit : </A><A HREF="#value_with_unit_mim.named_unit">named_unit</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.derived_unit_element.exponent">exponent : </A>REAL;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.description_attribute">ENTITY <b>description_attribute</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.description_attribute.attribute_value">attribute_value : </A><A HREF="#value_with_unit_mim.text">text</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.description_attribute.described_item">described_item : </A><A HREF="#value_with_unit_mim.description_attribute_select">description_attribute_select</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.dimensional_exponents">ENTITY <b>dimensional_exponents</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.length_exponent">length_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.mass_exponent">mass_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.time_exponent">time_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.electric_current_exponent">electric_current_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.thermodynamic_temperature_exponent">thermodynamic_temperature_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.amount_of_substance_exponent">amount_of_substance_exponent : </A>REAL;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.dimensional_exponents.luminous_intensity_exponent">luminous_intensity_exponent : </A>REAL;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.electric_current_measure_with_unit">ENTITY <b>electric_current_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.electric_current_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.electric_current_unit">ENTITY <b>electric_current_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.electric_current_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 1) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.id_attribute">ENTITY <b>id_attribute</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.id_attribute.attribute_value">attribute_value : </A><A HREF="#value_with_unit_mim.identifier">identifier</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.id_attribute.identified_item">identified_item : </A><A HREF="#value_with_unit_mim.id_attribute_select">id_attribute_select</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.length_measure_with_unit">ENTITY <b>length_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.length_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.LENGTH_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.length_unit">ENTITY <b>length_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.length_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 1) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.luminous_intensity_measure_with_unit">ENTITY <b>luminous_intensity_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.luminous_intensity_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.luminous_intensity_unit">ENTITY <b>luminous_intensity_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.luminous_intensity_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            1));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.mass_measure_with_unit">ENTITY <b>mass_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.mass_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.MASS_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.mass_unit">ENTITY <b>mass_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.mass_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 1) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.measure_representation_item">ENTITY <b>measure_representation_item</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.representation_item">representation_item</A>, <A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.measure_with_unit">ENTITY <b>measure_with_unit</b></A><br>
         &nbsp; SUPERTYPE OF (ONEOF (length_measure_with_unit,mass_measure_with_unit,        time_measure_with_unit,electric_current_measure_with_unit,
         thermodynamic_temperature_measure_with_unit,        amount_of_substance_measure_with_unit,        luminous_intensity_measure_with_unit,plane_angle_measure_with_unit,
         solid_angle_measure_with_unit,area_measure_with_unit,        volume_measure_with_unit,ratio_measure_with_unit))
         )
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.measure_with_unit.value_component">value_component : </A><A HREF="#value_with_unit_mim.measure_value">measure_value</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.measure_with_unit.unit_component">unit_component : </A><A HREF="#value_with_unit_mim.unit">unit</A>;<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.measure_with_unit.wr:wr1">wr1: valid_units(SELF);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.name_attribute">ENTITY <b>name_attribute</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.name_attribute.attribute_value">attribute_value : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.name_attribute.named_item">named_item : </A><A HREF="#value_with_unit_mim.name_attribute_select">name_attribute_select</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.named_unit">ENTITY <b>named_unit</b></A><br>
         &nbsp; SUPERTYPE OF (ONEOF (si_unit,conversion_based_unit,        context_dependent_unit) ANDOR ONEOF (length_unit,mass_unit,        time_unit,electric_current_unit,thermodynamic_temperature_unit,
         amount_of_substance_unit,luminous_intensity_unit,plane_angle_unit,        solid_angle_unit,area_unit,volume_unit,ratio_unit))
         )
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.named_unit.dimensions">dimensions : </A><A HREF="#value_with_unit_mim.dimensional_exponents">dimensional_exponents</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.plane_angle_measure_with_unit">ENTITY <b>plane_angle_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.plane_angle_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.plane_angle_unit">ENTITY <b>plane_angle_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.plane_angle_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.precision_qualifier">ENTITY <b>precision_qualifier</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.precision_qualifier.precision_value">precision_value : </A>INTEGER;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.qualified_representation_item">ENTITY <b>qualified_representation_item</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.representation_item">representation_item</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.qualified_representation_item.qualifiers">qualifiers : </A>SET[1:?] OF <A HREF="#value_with_unit_mim.value_qualifier">value_qualifier</A>;<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.qualified_representation_item.wr:wr1">wr1: (SIZEOF(QUERY ( temp &lt;* qualifiers | (               'VALUE_WITH_UNIT_MIM.PRECISION_QUALIFIER' IN TYPEOF(temp)) ))  
            &lt; 2);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.ratio_measure_with_unit">ENTITY <b>ratio_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.ratio_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.RATIO_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.ratio_unit">ENTITY <b>ratio_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.ratio_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.representation">ENTITY <b>representation</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation.name">name : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation.items">items : </A>SET[1:?] OF <A HREF="#value_with_unit_mim.representation_item">representation_item</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation.context_of_items">context_of_items : </A><A HREF="#value_with_unit_mim.representation_context">representation_context</A>;<br>
         &nbsp;&nbsp;DERIVE<br>
         &nbsp;&nbsp;&nbsp;
         
         <A NAME="value_with_unit_mim.representation.id">id : </A><A HREF="#value_with_unit_mim.identifier">identifier</A> : get_id_value(SELF);<br>
         &nbsp;&nbsp;&nbsp;
         
         <A NAME="value_with_unit_mim.representation.description">description : </A><A HREF="#value_with_unit_mim.text">text</A> : get_description_value(SELF);<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.representation.wr:wr1">wr1: (SIZEOF(USEDIN(SELF,'VALUE_WITH_UNIT_MIM.' +                'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1);</A><br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.representation.wr:wr2">wr2: (SIZEOF(USEDIN(SELF,'VALUE_WITH_UNIT_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.representation_context">ENTITY <b>representation_context</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation_context.context_identifier">context_identifier : </A><A HREF="#value_with_unit_mim.identifier">identifier</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation_context.context_type">context_type : </A><A HREF="#value_with_unit_mim.text">text</A>;<br>
         &nbsp;&nbsp;INVERSE<br>
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.representation_context.representations_in_context">representations_in_context : </A>SET[1:?] OF <A HREF="#value_with_unit_mim.representation">representation</A> FOR context_of_items;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.representation_item">ENTITY <b>representation_item</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.representation_item.name">name : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.representation_item.wr:wr1">wr1: (SIZEOF(using_representations(SELF)) &gt; 0);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.si_unit">ENTITY <b>si_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.si_unit.prefix">prefix : </A>
         OPTIONAL 
         <A HREF="#value_with_unit_mim.si_prefix">si_prefix</A>;<br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.si_unit.name">name : </A><A HREF="#value_with_unit_mim.si_unit_name">si_unit_name</A>;<br>
         &nbsp;&nbsp;DERIVE<br>
         &nbsp;&nbsp;&nbsp;
         
         <A NAME="value_with_unit_mim.si_unit.self\named_unit.dimensions">SELF\named_unit.dimensions : </A><A HREF="#value_with_unit_mim.dimensional_exponents">dimensional_exponents</A> : dimensions_for_si_unit(name);<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.solid_angle_measure_with_unit">ENTITY <b>solid_angle_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.solid_angle_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.solid_angle_unit">ENTITY <b>solid_angle_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.solid_angle_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.thermodynamic_temperature_measure_with_unit">ENTITY <b>thermodynamic_temperature_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.thermodynamic_temperature_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.THERMODYNAMIC_TEMPERATURE_UNIT' IN                TYPEOF(SELF\measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.thermodynamic_temperature_unit">ENTITY <b>thermodynamic_temperature_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.thermodynamic_temperature_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 1) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.time_measure_with_unit">ENTITY <b>time_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.time_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.TIME_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.time_unit">ENTITY <b>time_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.time_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 1) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.type_qualifier">ENTITY <b>type_qualifier</b></A>;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.type_qualifier.name">name : </A><A HREF="#value_with_unit_mim.label">label</A>;<br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.value_representation_item">ENTITY <b>value_representation_item</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.representation_item">representation_item</A>)
         ;    
         <br>
         
         &nbsp;&nbsp; 
         <A NAME="value_with_unit_mim.value_representation_item.value_component">value_component : </A><A HREF="#value_with_unit_mim.measure_value">measure_value</A>;<br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.value_representation_item.wr:wr1">wr1: (SIZEOF(QUERY ( rep &lt;* using_representations(SELF) | (NOT (               'VALUE_WITH_UNIT_MIM.GLOBAL_UNIT_ASSIGNED_CONTEXT'
            IN                TYPEOF(rep.context_of_items))) )) = 0);</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.volume_measure_with_unit">ENTITY <b>volume_measure_with_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.volume_measure_with_unit.wr:wr1">wr1: ('VALUE_WITH_UNIT_MIM.VOLUME_UNIT' IN TYPEOF(SELF\               measure_with_unit.unit_component));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.volume_unit">ENTITY <b>volume_unit</b></A><br>
         &nbsp; SUBTYPE OF (<A HREF="#value_with_unit_mim.named_unit">named_unit</A>)
         ;    
         <br>
         &nbsp;&nbsp;WHERE<br>  
         &nbsp;&nbsp;&nbsp;
         <A NAME="value_with_unit_mim.volume_unit.wr:wr1">wr1: ((SELF\named_unit.dimensions.length_exponent = 3) AND (SELF\               named_unit.dimensions.mass_exponent = 0) AND
            (SELF\               named_unit.dimensions.time_exponent = 0) AND (SELF\               named_unit.dimensions.electric_current_exponent
            = 0) AND (               SELF\named_unit.dimensions.               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
            .dimensions.amount_of_substance_exponent = 0) AND (SELF\               named_unit.dimensions.luminous_intensity_exponent =
            0));</A><br>
         END_ENTITY;<br><br><A NAME="value_with_unit_mim.bag_to_set">FUNCTION <b>bag_to_set</b></A><br>&nbsp;(the_bag : BAG OF GENERICintype) : GENERICintype;
         <pre>

    LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;
    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag) BY 1;
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.derive_dimensional_exponents">FUNCTION <b>derive_dimensional_exponents</b></A><br>&nbsp;(x : <A HREF="#value_with_unit_mim.unit">unit</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.dimensional_exponents">dimensional_exponents</A>;
         <pre>

    LOCAL
      result : dimensional_exponents := dimensional_exponents(0,0,0,0,0,0,
                0);
    END_LOCAL;
    IF 'VALUE_WITH_UNIT_MIM.DERIVED_UNIT' IN TYPEOF(x) THEN
      REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements) BY 1;
        result.length_exponent := result.length_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.length_exponent);
        result.mass_exponent := result.mass_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.mass_exponent);
        result.time_exponent := result.time_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.time_exponent);
        result.electric_current_exponent := result.
            electric_current_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.electric_current_exponent);
        result.thermodynamic_temperature_exponent := result.
            thermodynamic_temperature_exponent + (x.elements[i].exponent * 
            x.elements[i].unit.dimensions.
            thermodynamic_temperature_exponent);
        result.amount_of_substance_exponent := result.
            amount_of_substance_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.amount_of_substance_exponent);
        result.luminous_intensity_exponent := result.
            luminous_intensity_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.luminous_intensity_exponent);
      END_REPEAT;
    ELSE
      result := x.dimensions;
    END_IF;
    RETURN(result);

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.dimensions_for_si_unit">FUNCTION <b>dimensions_for_si_unit</b></A><br>&nbsp;(n : <A HREF="#value_with_unit_mim.si_unit_name">si_unit_name</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.dimensional_exponents">dimensional_exponents</A>;
         <pre>
    CASE n OF
      metre         :         RETURN(dimensional_exponents(1,0,0,0,0,0,0));
      gram          :         RETURN(dimensional_exponents(0,1,0,0,0,0,0));
      second        :         RETURN(dimensional_exponents(0,0,1,0,0,0,0));
      ampere        :         RETURN(dimensional_exponents(0,0,0,1,0,0,0));
      kelvin        :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      mole          :         RETURN(dimensional_exponents(0,0,0,0,0,1,0));
      candela       :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      radian        :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      steradian     :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      hertz         :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      newton        :         RETURN(dimensional_exponents(1,1,-2,0,0,0,0));
      pascal        :         RETURN(dimensional_exponents(-1,1,-2,0,0,0,0));
      joule         :         RETURN(dimensional_exponents(2,1,-2,0,0,0,0));
      watt          :         RETURN(dimensional_exponents(2,1,-3,0,0,0,0));
      coulomb       :         RETURN(dimensional_exponents(0,0,1,1,0,0,0));
      volt          :         RETURN(dimensional_exponents(2,1,-3,-1,0,0,0));
      farad         :         RETURN(dimensional_exponents(-2,-1,4,1,0,0,0));
      ohm           :         RETURN(dimensional_exponents(2,1,-3,-2,0,0,0));
      siemens       :         RETURN(dimensional_exponents(-2,-1,3,2,0,0,0));
      weber         :         RETURN(dimensional_exponents(2,1,-2,-1,0,0,0));
      tesla         :         RETURN(dimensional_exponents(0,1,-2,-1,0,0,0));
      henry         :         RETURN(dimensional_exponents(2,1,-2,-2,0,0,0));
      degree_celsius  :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      lumen         :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      lux           :         RETURN(dimensional_exponents(-2,0,0,0,0,0,1));
      becquerel     :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      gray          :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      sievert       :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      OTHERWISE     :         RETURN(?);
      END_CASE;

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.get_description_value">FUNCTION <b>get_description_value</b></A><br>&nbsp;(obj : <A HREF="#value_with_unit_mim.description_attribute_select">description_attribute_select</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.text">text</A>;
         <pre>

    LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj,
                         'VALUE_WITH_UNIT_MIM.' + 'DESCRIPTION_ATTRIBUTE.' 
                         + 'DESCRIBED_ITEM');
    END_LOCAL;
    IF SIZEOF(description_bag) = 1 THEN
      RETURN(description_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.get_id_value">FUNCTION <b>get_id_value</b></A><br>&nbsp;(obj : <A HREF="#value_with_unit_mim.id_attribute_select">id_attribute_select</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.identifier">identifier</A>;
         <pre>

    LOCAL
      id_bag : BAG OF id_attribute := USEDIN(obj,'VALUE_WITH_UNIT_MIM.' + 
                'ID_ATTRIBUTE.' + 'IDENTIFIED_ITEM');
    END_LOCAL;
    IF SIZEOF(id_bag) = 1 THEN
      RETURN(id_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.get_name_value">FUNCTION <b>get_name_value</b></A><br>&nbsp;(obj : <A HREF="#value_with_unit_mim.name_attribute_select">name_attribute_select</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.label">label</A>;
         <pre>

    LOCAL
      name_bag : BAG OF name_attribute := USEDIN(obj,
                  'VALUE_WITH_UNIT_MIM.' + 'NAME_ATTRIBUTE.' + 'NAMED_ITEM');
    END_LOCAL;
    IF SIZEOF(name_bag) = 1 THEN
      RETURN(name_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.using_items">FUNCTION <b>using_items</b></A><br>&nbsp;(item : <A HREF="#value_with_unit_mim.founded_item_select">founded_item_select</A>, checked_items : SET OF <A HREF="#value_with_unit_mim.founded_item_select">founded_item_select</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.founded_item_select">founded_item_select</A>;
         <pre>

    LOCAL
      next_items      : SET OF founded_item_select;
      new_check_items : SET OF founded_item_select;
      result_items    : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    next_items := QUERY ( z &lt;* bag_to_set(USEDIN(item,'')) | ((
        'VALUE_WITH_UNIT_MIM.REPRESENTATION_ITEM' IN TYPEOF(z)) OR (
        'VALUE_WITH_UNIT_MIM.FOUNDED_ITEM' IN TYPEOF(z))) );
    IF SIZEOF(next_items) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(next_items) BY 1;
        IF NOT (next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] + using_items(
              next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(result_items);

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.using_representations">FUNCTION <b>using_representations</b></A><br>&nbsp;(item : <A HREF="#value_with_unit_mim.founded_item_select">founded_item_select</A>) : <A HREF="../../../../data/modules/value_with_unit/sys/e_exp_mim.htm#value_with_unit_mim.representation">representation</A>;
         <pre>

    LOCAL
      results            : SET OF representation;
      intermediate_items : SET OF founded_item_select;
      result_bag         : BAG OF representation;
    END_LOCAL;
    results := [];
    result_bag := USEDIN(item,'VALUE_WITH_UNIT_MIM.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag) BY 1;
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    intermediate_items := using_items(item,[]);
    IF SIZEOF(intermediate_items) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(intermediate_items) BY 1;
        result_bag := USEDIN(intermediate_items[i],
            'VALUE_WITH_UNIT_MIM.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) &gt; 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag) BY 1;
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(results);

      </pre>
         END_FUNCTION;
         <br><br><A NAME="value_with_unit_mim.valid_units">FUNCTION <b>valid_units</b></A><br>&nbsp;(m : <A HREF="#value_with_unit_mim.measure_with_unit">measure_with_unit</A>) : BOOLEAN;
         <pre>
    IF 'VALUE_WITH_UNIT_MIM.LENGTH_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.MASS_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,1,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.TIME_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,1,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.ELECTRIC_CURRENT_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,1,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.THERMODYNAMIC_TEMPERATURE_MEASURE' IN TYPEOF(m
        .value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,1,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.AMOUNT_OF_SUBSTANCE_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,1,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.LUMINOUS_INTENSITY_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,0,1) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.PLANE_ANGLE_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.SOLID_ANGLE_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.AREA_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(2,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.VOLUME_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(3,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.RATIO_MEASURE' IN TYPEOF(m.value_component)
         THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.POSITIVE_LENGTH_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'VALUE_WITH_UNIT_MIM.POSITIVE_PLANE_ANGLE_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    RETURN(TRUE);

      </pre>
         END_FUNCTION;
         <br><br>
         END_SCHEMA; <br></code></BODY>
</HTML>