(*
   $Id: mim.exp 1654 2007-10-24 06:10:30Z GiedriusLiutkus $
   ISO TC184/SC4/WG12 N4207 - ISO/TS 10303-1753 Value with unit extension - EXPRESS MIM
   Supersedes ISO TC184/SC4/WG12 N3631
*)


SCHEMA Value_with_unit_extension_mim;
	USE FROM Value_with_unit_mim;	-- ISO/TS 10303-1054

	USE FROM Iso13584_generic_expressions_schema
		(environment,
		generic_literal,
		variable_semantics);

	USE FROM basic_attribute_schema
		(name_attribute);
	
	USE FROM measure_schema
	    (non_negative_length_measure,
	     si_unit_name);

	REFERENCE FROM measure_schema
	(derive_dimensional_exponents,
	     dimensions_for_si_unit);
	
ENTITY absorbed_dose_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = gray);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.gray);          
END_ENTITY;

ENTITY activity_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = becquerel);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.becquerel);          
END_ENTITY;

ENTITY capacitance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = farad);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.farad);          
END_ENTITY;

ENTITY conductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = siemens);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.siemens);          
END_ENTITY;

ENTITY dose_equivalent_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = sievert);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.sievert);          
END_ENTITY;

ENTITY electric_charge_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = coulomb);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.coulomb);          
END_ENTITY;

ENTITY electromotive_force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = volt);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.volt);          
END_ENTITY;

ENTITY energy_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = joule);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.joule);          
END_ENTITY;

ENTITY expression_conversion_based_unit
  SUBTYPE OF (context_dependent_unit, variable_semantics); 
INVERSE
  associated_variable_environment: environment FOR semantics; 
END_ENTITY;

ENTITY force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = newton);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.newton);          
END_ENTITY;

ENTITY frequency_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = hertz);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.hertz);          
END_ENTITY;

ENTITY illuminance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = lux);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.lux);          
END_ENTITY;

ENTITY inductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = henry);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.henry);          
END_ENTITY;

ENTITY luminous_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = lumen);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.lumen);          
END_ENTITY;

ENTITY magnetic_flux_density_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = tesla);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.tesla);          
END_ENTITY;

ENTITY magnetic_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = weber);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.weber);          
END_ENTITY;

ENTITY polar_complex_number_literal
  SUBTYPE OF (generic_literal);
  radius    : REAL;
  angle     : REAL;
WHERE
  WR1: radius >= 0;
  WR2: { 0 <= angle < 2*PI };
END_ENTITY;

ENTITY power_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = watt);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.watt);          
END_ENTITY;

ENTITY pressure_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = pascal);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.pascal);          
END_ENTITY;

ENTITY resistance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
   SELF\measure_with_unit.value_component : numeric_measure;
WHERE
  WR1: NOT('MEASURE_SCHEMA.SI_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)) OR
          (SELF\measure_with_unit.unit_component\si_unit.name = ohm);
  WR2: NOT('MEASURE_SCHEMA.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component));
  WR3: derive_dimensional_exponents(SELF\measure_with_unit.unit_component) = dimensions_for_si_unit(si_unit_name.ohm);          
END_ENTITY;

ENTITY scattering_parameter
 SUBTYPE OF (polar_complex_number_literal);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\polar_complex_number_literal ||
       SELF\scattering_parameter))) = 0;
END_ENTITY;

RULE subtype_exclusive_measure_with_unit FOR (measure_with_unit);
WHERE
  WR1: SIZEOF (QUERY (mwu <* measure_with_unit |
       NOT (SIZEOF ([
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ABSORBED_DOSE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ACTIVITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'AMOUNT_OF_SUBSTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CAPACITANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CELSIUS_TEMPERATURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CONDUCTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'DOSE_EQUIVALENT_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTRIC_CHARGE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTRIC_CURRENT_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTROMOTIVE_FORCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ENERGY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'FORCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'FREQUENCY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ILLUMINANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'INDUCTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LUMINOUS_FLUX_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LUMINOUS_INTENSITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MAGNETIC_FLUX_DENSITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MAGNETIC_FLUX_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MASS_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'PLANE_ANGLE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'POWER_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'PRESSURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'RATIO_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'RESISTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'SOLID_ANGLE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'THERMODYNAMIC_TEMPERATURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'TIME_MEASURE_WITH_UNIT'] *
       TYPEOF(mwu)) <= 1))) = 0;
END_RULE;
	
END_SCHEMA;


