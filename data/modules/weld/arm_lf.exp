
(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.9.1B 20140211*)
(* Mon Nov 17 17:16:16 2014                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)

SCHEMA Weld_arm_LF;

CONSTANT

    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];

END_CONSTANT;

TYPE property_assignment_select = SELECT (
   Assembly_bond_definition,
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;


  TYPE arrow_or_other = ENUMERATION OF
    (arrow_side,
     other_side);
  END_TYPE;

  TYPE intermittent_or_chain_intermittent_or_staggered_intermittent = ENUMERATION OF
    (intermittent,
     chain_intermittent,
     staggered_intermittent);
  END_TYPE;

TYPE supplemental_information = ENUMERATION OF (
   back_run,
   backing_weld,
   concave,
   convex,
   field_weld,
   flat_finished_flush,
   specified_root_reinforcement,
   staggered_intermittent_weld,
   toes_blended_smoothly,
   weld_all_around,
   weld_between_two_points);
END_TYPE;


  TYPE weld_auxiliary_material_role = ENUMERATION OF
     (consumable_insert,
      permanent_backing,
      removable_backing,
      spacer,
      unspecified_backing);
  END_TYPE;

(* Pruned unused type: weld_dimension_target  *)


(* Pruned unused type: weld_shapeable_item  *)


TYPE advanced_brep_shape_representation_item = SELECT (
  Axis_placement_3d,
  Geometric_placement_operation,
  Manifold_solid_brep);
END_TYPE;

TYPE constructive_element_select = SELECT (
   Axis_placement,
   Curve,
   Point,
   Surface);
END_TYPE;


  TYPE constructive_geometry_select = SELECT
    (Constructive_geometry, 
     Geometric_model);
  END_TYPE; 

TYPE curve_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  

(* Pruned unused type: closed_curve  *)


TYPE external_identification_item = SELECT (
   Assembly_bond_definition,
   Document_definition,
   Generic_product_view_definition_reference);
END_TYPE;


  TYPE manifold_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Shell_based_surface_model);
  END_TYPE;

  TYPE manifold_subsurface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Connected_face_set);
  END_TYPE;

  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

TYPE organization_or_person_in_organization_item = SELECT (
   Specification_definition);
END_TYPE;


TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 

TYPE count_measure = NUMBER;
END_TYPE;

TYPE knot_specification = ENUMERATION OF
  (bezier,
   quasi_uniform,
   uniform);
 END_TYPE;  

TYPE parameter_value = REAL;
END_TYPE;

  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
 Cartesian_transformation_3d);
  END_TYPE;

(* Pruned unused type: egs_identification_item  *)


  TYPE geometric_model_item = SELECT 
    (Detailed_geometric_model_element,
     Detailed_topological_model_element);
  END_TYPE;

TYPE template_definition_select = SELECT (
   Geometric_model);
END_TYPE;


TYPE identification_item = SELECT (
   Geometric_model);
END_TYPE;


TYPE identifier = STRING;
END_TYPE;

TYPE label = STRING;
END_TYPE;

TYPE text = STRING;
END_TYPE; 

TYPE any_number_value = NUMBER;
END_TYPE; 

TYPE any_string_value = STRING;
END_TYPE; 

TYPE length_measure = REAL;
END_TYPE; 

TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   area_measure,
   count_measure,
   length_measure,
   plane_angle_measure,
   ratio_measure,
   volume_measure);
END_TYPE;


TYPE plane_angle_measure = REAL;
END_TYPE; 

TYPE ratio_measure = REAL;
END_TYPE;

TYPE area_measure = REAL;
END_TYPE;

TYPE volume_measure = REAL;
END_TYPE;

TYPE dimension_target = SELECT (
   Nominal_3d_feature);
END_TYPE;


(* Pruned unused type: feature_or_non_feature_usage  *)


TYPE shapeable_item = SELECT (
   Characterizable_object,
   Product_occurrence_definition_relationship,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;


  TYPE resistance_or_fusion_weld = ENUMERATION OF
    (resistance_weld,
     fusion_weld);
  END_TYPE;

TYPE assigned_shape_property_select = SELECT (
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;


  TYPE shaped_element_select = SELECT
    (Shape_element, Item_shape);
  END_TYPE;

TYPE represented_definition = SELECT (
   Assigned_property,
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;


TYPE product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

TYPE bond_feature = SELECT (
   General_part_feature);
END_TYPE;


TYPE value_qualifier = SELECT (
   Type_qualifier);
END_TYPE;


TYPE dimension_value_select = SELECT (
   Numerical_item_with_unit,
   Value_limit);
END_TYPE;


TYPE tolerance_principle_type = ENUMERATION OF (
  envelope_requirement, 
  independency, 
  default);
END_TYPE;

TYPE geometric_dimension_modifier = ENUMERATION OF (
   any_cross_section,
   any_part_of_the_feature,
   area_diameter_calculated_size,
   average_rank_order_size,
   circumference_diameter_calculated_size,
   common_tolerance,
   continuous_feature,
   controlled_radius,
   free_state_condition,
   least_square_association_criteria,
   local_size_defined_by_a_sphere,
   maximum_inscribed_association_criteria,
   maximum_rank_order_size,
   median_rank_order_size,
   mid_range_rank_order_size,
   minimum_circumscribed_association_criteria,
   minimum_rank_order_size,
   range_rank_order_size,
   specific_fixed_cross_section,
   square,
   statistical,
   two_point_size,
   volume_diameter_calculated_size);
END_TYPE;


TYPE diameter_qualifier_enumeration = ENUMERATION OF (
  centre_outer,
  centre_inner,
  outer_centre,
  outer_outer,
  outer_inner,
  inner_centre,
  inner_outer,
  inner_inner);
END_TYPE;

TYPE material_item_select = SELECT (
   Assembly_bond_definition);
END_TYPE;


TYPE geometric_item_specific_usage_select = SELECT (
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

TYPE shape_model = SELECT (
   Geometric_model);
END_TYPE;


TYPE geometric_tolerance_target = SELECT (
   Dimensional_location,
   Dimensional_size,
   Nominal_3d_feature);
END_TYPE;


TYPE geometric_tolerance_modifier = ENUMERATION OF (
   any_cross_section,
   common_zone,
   each_radial_element,
   free_state,
   least_material_requirement,
   line_element,
   major_diameter,
   maximum_material_requirement,
   minor_diameter,
   not_convex,
   pitch_diameter,
   reciprocity_requirement,
   separate_requirement,
   statistical_tolerance,
   tangent_plane);
END_TYPE;


TYPE area_unit_type = ENUMERATION OF (
   circular,
   rectangular,
   square);
END_TYPE;


TYPE advanced_face_model = SELECT (
  Advanced_brep_shape_representation,
  Manifold_surface_shape_representation,
  Manifold_subsurface_model);
END_TYPE;

TYPE nominal_3d_integral_feature_geometry = SELECT (
  Advanced_face,
  Edge_curve,
  Vertex_point,
  Connected_face_set,
  Edge_loop);
END_TYPE;

TYPE measure_qualification_or_value_with_unit = SELECT (
   Value_with_unit);
END_TYPE;


TYPE as_product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

(* Pruned unused type: at_external_identification_item  *)


(* Pruned unused type: at_material_item_select  *)


(* Pruned unused type: at_property_assignment_select  *)


(* Pruned unused type: mb3gdtsr_geometric_tolerance_target  *)


(* Pruned unused type: mb3gdtsr_dimension_target  *)


(* Pruned unused type: mbgdt_documented_element_select  *)


(* Pruned unused type: at_requirement_assignment_item  *)


(* Pruned unused type: spa_property_assignment_select  *)


(* Pruned unused type: shape_element_or_relationship_select  *)


(* Pruned unused type: spa_represented_definition  *)


(* Pruned unused type: cf_groupable_item  *)


(* Pruned unused type: pie_external_identification_item  *)


(* Pruned unused type: datum_or_common_datum  *)


(* Pruned unused type: tolerance_zone_target  *)


(* Pruned unused type: sd_organization_or_person_in_organization_item  *)


(* Pruned unused type: document_location_select  *)


(* Pruned unused type: documented_element_select  *)


(* Pruned unused type: requirement_assignment_item  *)


(* Pruned unused type: groupable_item  *)


(* Pruned unused type: requirement_satisfaction_item  *)


ENTITY Product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

  ENTITY Butt_joint
    SUPERTYPE OF (ONEOF (Flanged_Butt_joint, Inclined_Butt_joint))
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Butt_joint_welding_definition;
  END_ENTITY;

  ENTITY Butt_joint_welding_definition
    SUBTYPE OF(Welding_definition);
      SELF\Welding_definition.welds : set [1:?] OF Butt_weld_definition;
    INVERSE
    welded_joints : SET [1:?] OF Butt_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Butt_weld_definition
    SUPERTYPE OF (ONEOF(
     Square_butt_weld_definition,
     Single_v_butt_weld_definition,
     Single_bevel_butt_weld_definition,
     Single_u_butt_weld_definition,
     Single_j_butt_weld_definition,
     Flare_v_weld_definition,
     Flare_bevel_weld_definition))
    SUBTYPE OF(Weld_definition);
      partial_penetration_depth   : OPTIONAL Length_tolerance_characteristic;
      intermittent_data           : OPTIONAL Weld_intermittent_position_data;
      full_penetration            : BOOLEAN;
      joint_preparation_depth     : OPTIONAL Length_tolerance_characteristic;
      root_gap                    : OPTIONAL Length_tolerance_characteristic;
      included_angle              : OPTIONAL Angle_tolerance_characteristic;
      joint_preparation_defined   : BOOLEAN;
    WHERE
      WR1 : full_penetration XOR EXISTS(partial_penetration_depth);
  END_ENTITY;

  ENTITY Corner_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Corner_joint_welding_definition;
  END_ENTITY;

  ENTITY Corner_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF Corner_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Double_bevel_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_bevel_butt_weld_definition;
        other_side : OPTIONAL Single_bevel_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Double_bevel_butt_with_broad_root_face_and_fillet_welds_weld_definition
       SUBTYPE OF (Double_bevel_butt_weld_definition);
        arrow_side_fillet : fillet_weld_definition;
        other_side_fillet : OPTIONAL fillet_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side_fillet);
  END_ENTITY;

  ENTITY Double_u_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_u_butt_weld_definition;
        other_side : OPTIONAL Single_u_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Double_v_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_v_butt_weld_definition;
        other_side : OPTIONAL Single_v_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Edge_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Edge_joint_welding_definition;
  END_ENTITY;

  ENTITY Edge_joint_welding_definition SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF Edge_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Edge_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_metal_thickness : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Fillet_weld_definition
    SUBTYPE OF(Weld_definition);
      leg_length                        : OPTIONAL Length_tolerance_characteristic;
      nominal_throat_thickness          : OPTIONAL Length_data_element;
      deep_penetration_throat_thickness : OPTIONAL Length_data_element;
      unequal_legs                      : OPTIONAL LIST [2:2] OF Leg_based_on_surface;
      intermittent_data                 : OPTIONAL Weld_intermittent_position_data;
  END_ENTITY;

  ENTITY Flanged_Butt_joint
    SUBTYPE OF(Butt_joint);
  END_ENTITY;

  ENTITY Flanged_butt_or_corner_weld_definition
       SUBTYPE OF (Weld_definition);
  END_ENTITY;

  ENTITY Flanged_Corner_joint
    SUBTYPE OF(Corner_joint);
  END_ENTITY;

  ENTITY Flare_bevel_weld_definition
    SUBTYPE OF (Butt_weld_definition);
      flare_bevel                 : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Flare_v_weld_definition
    SUBTYPE OF (Butt_weld_definition);
      flare_v                     : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Inclined_Butt_joint
    SUBTYPE OF(Butt_joint);
  END_ENTITY;

  ENTITY Single_bevel_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_bevel_butt_with_broad_root_face_weld_definition
    SUBTYPE OF (Single_bevel_butt_weld_definition);
  END_ENTITY;

  ENTITY Single_u_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_v_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_v_butt_with_broad_root_face_weld_definition
    SUBTYPE OF (Single_v_butt_weld_definition);
  END_ENTITY;

  ENTITY Lap_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Lap_joint_welding_definition;
  END_ENTITY;

  ENTITY Lap_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
     welded_joints : SET [1:?] OF Lap_joint FOR default_bond_definition;
 END_ENTITY;

  ENTITY Leg_based_on_surface;
      leg_length         : Length_tolerance_characteristic;
      leg_reference_face : OPTIONAL Face_shape_element;
  END_ENTITY;

  ENTITY Overlay_weld_definition
    SUBTYPE OF(Weld_definition);
      overlay_thickness : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Path_element_with_ends
   SUBTYPE OF(Path_element);
    start_point	:	Axis_placement_shape_element;
    end_point	:	Axis_placement_shape_element;
  WHERE
   WR1 : start_point :<>: end_point;
   WR2 : (NOT EXISTS(start_point) AND NOT EXISTS(end_point)) OR
         (EXISTS(start_point) AND EXISTS(end_point));
  END_ENTITY;

  ENTITY Plug_weld_in_circular_holes_definition
    SUBTYPE OF(Weld_definition);
      full_penetration                                : BOOLEAN;
      plug_diameter                                   : Length_tolerance_characteristic;
      partial_fill_depth                               : OPTIONAL Length_tolerance_characteristic;
      centre_to_centre_distance_between_weld_elements : OPTIONAL Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Plug_weld_in_slot_definition
    SUBTYPE OF(Weld_definition);
      full_penetration   : BOOLEAN;
      slot_width         : OPTIONAL Length_tolerance_characteristic;
      partial_fill_depth : OPTIONAL Length_tolerance_characteristic;
      intermittent_data  : OPTIONAL Weld_intermittent_position_data;
      countersink_angle  : OPTIONAL Angle_tolerance_characteristic;
    WHERE
     WR1 : intermittent_data\Weld_intermittent_position_data.intermittent_type = intermittent_or_chain_intermittent_or_staggered_intermittent.intermittent;
  END_ENTITY;

  ENTITY Pre_defined_combined_weld_definition
     SUPERTYPE OF (ONEOF(
       Double_v_butt_weld_definition,
       Double_bevel_butt_weld_definition,
       Double_u_butt_weld_definition))
     SUBTYPE OF (Weld_definition);
       symmetrical : BOOLEAN;
  END_ENTITY;

  ENTITY Seam_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_type         : resistance_or_fusion_weld;
      intermittent_data : OPTIONAL Weld_intermittent_position_data;
      weld_width        : Length_tolerance_characteristic;
    WHERE
     WR1 : intermittent_data\Weld_intermittent_position_data.intermittent_type = intermittent_or_chain_intermittent_or_staggered_intermittent.intermittent;
  END_ENTITY;

  ENTITY Single_j_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Spot_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_diameter          : Length_tolerance_characteristic;
      distance_between_welds : OPTIONAL Length_tolerance_characteristic;
      number_of_welds        : OPTIONAL count_measure;
      weld_type              : resistance_or_fusion_weld;
    WHERE
      WR1 : (NOT EXISTS(distance_between_welds) AND NOT EXISTS(number_of_welds)) OR
            (EXISTS(distance_between_welds) AND EXISTS(number_of_welds));
  END_ENTITY;

  ENTITY Square_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Stake_weld_definition
       SUBTYPE OF (Weld_definition);
  END_ENTITY;

  ENTITY Steep_flanked_single_v_butt_weld_definition
    SUBTYPE OF (Single_v_butt_weld_definition);
  END_ENTITY;

  ENTITY Stud_weld_definition
    SUBTYPE OF(Weld_definition);
      distance_between_studs : Length_tolerance_characteristic;
      stud_diameter          : Length_tolerance_characteristic;
      number_of_studs        : count_measure;
  END_ENTITY;

  ENTITY T_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : T_joint_welding_definition;
  END_ENTITY;

  ENTITY T_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF T_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Weld_auxiliary_material
    SUBTYPE OF (Material_identification);
      role : weld_auxiliary_material_role;
      shape : OPTIONAL Associated_shape_element;
     SELF\Material_identification.items : SET [1:1] OF Welding_definition;
  END_ENTITY;

  ENTITY Weld_context
    SUBTYPE OF (Part_view_definition_context);
  DERIVE
    SELF\View_definition_context.application_domain : STRING := 'weld';
    SELF\View_definition_context.life_cycle_stage : STRING := 'design';
  WHERE
    WR1: SIZEOF ( USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; 
  END_ENTITY;

  ENTITY Weld_definition
    SUPERTYPE OF (ONEOF(
        Fillet_weld_definition,
        Butt_weld_definition,
        Flanged_butt_or_corner_weld_definition,
        Plug_weld_in_circular_holes_definition,
        Plug_weld_in_slot_definition,
        Spot_weld_definition,
        Seam_weld_definition,
        Edge_weld_definition,
        Overlay_weld_definition,
        Stake_weld_definition,
        Stud_weld_definition,
        Pre_defined_combined_weld_definition))
    SUBTYPE OF (Characterizable_object);
  END_ENTITY;

  ENTITY Weld_element
    SUBTYPE OF (Characterizable_object);
     precedent_element : OPTIONAL Weld_element;
     identifier : count_measure;
     side : arrow_or_other;
     derived_from : Weld_intermittent_position_data;
    INVERSE
     subsequent_element : SET [0:1] OF Weld_element for precedent_element;
    UNIQUE
     UR1 : identifier, derived_from;
    WHERE
     WR1 : identifier > 0;
     WR2 : identifier <= derived_from\Weld_intermittent_position_data.number_of_weld_elements;
     WR3 :  NOT EXISTS(precedent_element) OR
            (NOT (SIZEOF(subsequent_element) = 1) OR
            (acyclic_weld_element_precedence_relationship(SELF,
             [subsequent_element[1]],
             'WELD_ARM_LF.WELD_ELEMENT')));
  END_ENTITY;

ENTITY B_spline_surface
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SURFACE_WITH_EXPLICIT_KNOTS,
                        SURFACE_WITH_IMPLICIT_KNOTS)
                        ANDOR 
                        RATIONAL_B_SPLINE_SURFACE)
  SUBTYPE OF (Bounded_surface);        
  u_degree : INTEGER;
  v_degree : INTEGER;
  control_points : LIST [2:?] OF LIST [2:?] OF Cartesian_point;
  u_closed : LOGICAL;
  v_closed : LOGICAL;
 WHERE
  WR1 : ('WELD_ARM_LF.SURFACE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('WELD_ARM_LF.SURFACE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));

END_ENTITY;

  ENTITY Welded_joint
     ABSTRACT SUPERTYPE OF (ONEOF (
                        BUTT_JOINT,
                        CORNER_JOINT,
                        T_JOINT,
                        LAP_JOINT,
                        EDGE_JOINT))
  SUBTYPE OF(Assembled_with_bonding);
    SELF\Assembled_with_bonding.default_bond_definition : Welding_definition;
  END_ENTITY;

  ENTITY Welding_definition
     ABSTRACT SUPERTYPE OF (ONEOF (
                        BUTT_JOINT_WELDING_DEFINITION,
                        CORNER_JOINT_WELDING_DEFINITION,
                        T_JOINT_WELDING_DEFINITION,
                        LAP_JOINT_WELDING_DEFINITION,
                        EDGE_JOINT_WELDING_DEFINITION))
  SUBTYPE OF(Assembly_bond_definition);
      supplemental_information : SET [0:?] OF supplemental_information;
      surface_texture          : OPTIONAL Surface_texture;
      welds                    : SET [1:?] OF Weld_definition;
      process_specification    : SET [0:?] OF Process_specification;
      path                     : OPTIONAL Path_element_with_ends;
      arrow_side               : Associated_shape_element;
      other_side               : OPTIONAL Associated_shape_element;
--used Associated_shape_element to get easy access to geometric face but use generic rather than specific for more flexibility.
   INVERSE
      welded_joint             : SET [1:?] OF Welded_joint FOR default_bond_definition;
      auxiliary_material       : SET [0:?] OF Weld_auxiliary_material FOR items;
  WHERE
   WR1 : arrow_side :<>: other_side;
   WR2 : NOT EXISTS(SELF\Assembly_bond_definition.bonded_feature_1) AND NOT EXISTS(SELF\Assembly_bond_definition.bonded_feature_2);
  END_ENTITY;

  ENTITY Welding_definition_sequence_relationship;
    precedent_welding_definition : Welding_definition;
    subsequent_welding_definition : Welding_definition;
   WHERE
     WR1 : w_acyclic_sequence (precedent_welding_definition, subsequent_welding_definition);
  END_ENTITY;

ENTITY Curve_with_implicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_type : knot_specification;
 END_ENTITY;

ENTITY Closed_shell
  SUBTYPE OF (Connected_face_set);
END_ENTITY;

ENTITY Curve_with_explicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_multiplicities : LIST [2:?] OF INTEGER;
   knot_values : LIST [2:?] OF parameter_value;
 WHERE
  WR1: SIZEOF(knot_multiplicities) = SIZEOF(knot_values);
END_ENTITY;

ENTITY Oriented_closed_shell
   SUBTYPE OF (Closed_shell);
   shell       : Closed_shell;
   orientation : BOOLEAN;
WHERE
   WR1: NOT ('WELD_ARM_LF.ORIENTED_CLOSED_SHELL'
              IN TYPEOF (SELF.shell));
END_ENTITY;

ENTITY Advanced_face
  SUBTYPE OF (Face_surface);
END_ENTITY;

ENTITY Solid_model
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

  ENTITY Assembly_bond_definition;
      name                                    : STRING;
--      analytical_assembly_bond_representation : OPTIONAL SET[1:?] OF Analytical_model_application;
      associated_definition                   : Product_view_definition_reference_with_local_representation;
      bonded_feature_1                        : OPTIONAL bond_feature;
      bonded_feature_2                        : OPTIONAL bond_feature;
    INVERSE
      default_shape : SET[0:1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
	  bond_category	: External_source_identification FOR item;
	  bond_material : material_identification FOR items;
    UNIQUE
      UR1 : name;
      UR2 : associated_definition;
    WHERE
      WR1 : bonded_feature_1 <> bonded_feature_2;
(*
      WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (bond_material);
      WR3 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF(bonded_feature_2)));
      WR4 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF(bonded_feature_2)));
      WR5 : NOT((('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN
        TYPEOF (bonded_feature_1)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2)))
        XOR
        (('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN TYPEOF(bonded_feature_2)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2))));
*)
  END_ENTITY;

  ENTITY Single_instance
    SUBTYPE OF (Product_occurrence);
  END_ENTITY;

  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'maximum';      
  END_ENTITY;

  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'minimum';      
  END_ENTITY;

  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.items[1]\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'nominal';
  END_ENTITY;

  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;

ENTITY Assembly_component_relationship
    ABSTRACT SUPERTYPE
  SUBTYPE OF (Product_occurrence_definition_relationship);
  location_indicator : OPTIONAL STRING;
  quantity : OPTIONAL Value_with_unit;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;

ENTITY Surface_with_explicit_knots
 SUBTYPE OF (B_spline_surface);
   u_knot_multiplicities : LIST [2:?] OF INTEGER;
   u_knot_values : LIST [2:?] OF parameter_value;
   v_knot_multiplicities : LIST [2:?] OF INTEGER;
   v_knot_values : LIST [2:?] OF parameter_value;
  WHERE
  WR1: SIZEOF(u_knot_multiplicities) = SIZEOF(u_knot_values);
  WR2: SIZEOF(v_knot_multiplicities) = SIZEOF(v_knot_values);
 END_ENTITY;

  ENTITY Tolerance_characteristic
     ABSTRACT SUPERTYPE OF ((ONEOF (
                        MAXIMUM_TOLERANCE_CHARACTERISTIC,
                        MINIMUM_TOLERANCE_CHARACTERISTIC,
                        NOMINAL_TOLERANCE_CHARACTERISTIC,
                        PLUS_MINUS_TOLERANCE_CHARACTERISTIC,
                        QUALIFIED_TOLERANCE_CHARACTERISTIC,
                        STATISTICAL_TOLERANCE_CHARACTERISTIC,
                        SYMMETRICAL_TOLERANCE_CHARACTERISTIC,
                        TYPICAL_TOLERANCE_CHARACTERISTIC))
                        ANDOR 
                        LENGTH_TOLERANCE_CHARACTERISTIC)
  SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Typical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'typical';      
  END_ENTITY;

ENTITY Characterizable_object;
  name : label;
  description : OPTIONAL text;
END_ENTITY;

  ENTITY Constructive_geometry
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items : SET [1:?] OF constructive_element_select;
  END_ENTITY;

  ENTITY Constructive_geometry_association;
      auxiliary_geometry : Constructive_geometry;
      base_geometry      : constructive_geometry_select;
      description        : STRING;
    WHERE
      WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
  END_ENTITY;

ENTITY Closed_composite_curve
  SUBTYPE OF (Composite_curve);
END_ENTITY;

ENTITY Composite_curve
  SUBTYPE OF (Bounded_curve);
  curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
END_ENTITY;

ENTITY Composite_curve_segment;
  transition   : curve_transition_code;
  same_sense   : BOOLEAN;
  segment_curve : Bounded_curve;
INVERSE
  using_curves : SET[1:?] OF Composite_curve FOR curve_segment;
END_ENTITY;

ENTITY Trimmed_curve
  SUBTYPE OF (Bounded_curve);
  basis_curve : Curve;
  start_point : Cartesian_point;
  end_point : Cartesian_point;
END_ENTITY;

ENTITY Bounded_curve
     ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPOSITE_CURVE,
                        TRIMMED_CURVE) ) 
  SUBTYPE OF (Curve);
END_ENTITY;

ENTITY Bounded_surface
    ABSTRACT SUPERTYPE
  SUBTYPE OF (Surface);
END_ENTITY;

ENTITY Circle
   SUBTYPE OF (Conic);
   radius   : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Conic
   SUPERTYPE OF (ONEOF (
              CIRCLE,
              ELLIPSE,
              HYPERBOLA,
              PARABOLA))
  SUBTYPE OF (Curve);
   position: Axis_placement;
END_ENTITY;

 ENTITY  Conical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
WHERE
   WR1: radius >= 0.0;
END_ENTITY;

ENTITY Curve
  SUPERTYPE OF (ONEOF (
              CONIC,
              LINE))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Cylindrical_surface
   SUBTYPE OF (Surface);
    position : Axis_placement_3d;
   radius : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Ellipse
   SUBTYPE OF(Conic);
   first_semi_axis: length_measure;
   second_semi_axis: length_measure;
WHERE
   WR1: first_semi_axis > 0.0;
   WR2: first_semi_axis > 0.0;
END_ENTITY;

ENTITY Extruded_surface
   SUBTYPE OF (Swept_surface);
   extrusion_axis      : Direction;
END_ENTITY;

ENTITY Hyperbola
   SUBTYPE OF(Conic);
   semi_axis: length_measure;
   imaginary_semi_axis: length_measure;
WHERE
   WR1: semi_axis > 0.0;
   WR2: imaginary_semi_axis > 0.0;
END_ENTITY;

ENTITY Line
  SUBTYPE OF (Curve);
   point: Cartesian_point;
   line_direction: Direction;
END_ENTITY;

ENTITY Parabola
   SUBTYPE OF(Conic);
   focal_distance: length_measure;
WHERE
   WR1: focal_distance <> 0.0;
END_ENTITY;

ENTITY Plane
  SUBTYPE OF (Surface);
  position: Axis_placement_3d;
END_ENTITY;

ENTITY Point_on_curve
  SUBTYPE OF (Point);
  supporting_curve : Curve;
END_ENTITY;

ENTITY Point_on_surface
  SUBTYPE OF (Point);
  supporting_surface : Surface;
END_ENTITY;

ENTITY Spherical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius   : length_measure;
WHERE
    WR1: radius > 0.0;
END_ENTITY;

ENTITY Surface
  SUPERTYPE OF (ONEOF (
              CONICAL_SURFACE,
              CYLINDRICAL_SURFACE,
              PLANE,
              SPHERICAL_SURFACE,
              SWEPT_SURFACE,
              TOROIDAL_SURFACE))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Surface_of_revolution
  SUBTYPE OF (Swept_surface);
      axis_direction : Direction;
      axis_point :     Cartesian_point;
END_ENTITY;

ENTITY Swept_surface
   SUPERTYPE OF (ONEOF (
              EXTRUDED_SURFACE,
              SURFACE_OF_REVOLUTION))
  SUBTYPE OF (Surface);
   swept_curve : Curve;
END_ENTITY;

ENTITY Toroidal_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius : length_measure;
   minor_radius : length_measure;
WHERE
    WR1: radius > 0.0;
    WR2: minor_radius > 0.0;
END_ENTITY;

ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;

ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Thickness_size
  SUBTYPE OF (Dimensional_size);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Linear_distance
  SUBTYPE OF (Dimensional_location);
  orientation : OPTIONAL Axis_placement;
  diameter_qualifier : OPTIONAL diameter_qualifier_enumeration;
END_ENTITY;

  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;

ENTITY Representation;
  id : OPTIONAL identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;

 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;

ENTITY Axis_placement_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Axis_placement := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Dimensional_location_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_location);
END_ENTITY;

ENTITY Flatness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Face_shape_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Path_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

  ENTITY Manifold_surface_shape_representation
    SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        manifold_surface_shape_representation_item;
  END_ENTITY;

  ENTITY Open_shell
     SUBTYPE OF (Connected_face_set);
  END_ENTITY;

  ENTITY Shell_based_surface_model
    SUBTYPE OF (Detailed_geometric_model_element);
     boundary : SET[1: ?] OF Connected_face_set;
  END_ENTITY;

  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    SELF\Representation.items : SET [1:?] OF
        manifold_subsurface_shape_representation_item;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;

ENTITY Nominal_3d_feature
   ABSTRACT SUPERTYPE
  SUBTYPE OF (Associated_shape_element, Part_shape_element);
  SELF\Shape_element.containing_shape : Gdt_representation_shape;
END_ENTITY;

ENTITY Nominal_3d_integral_feature
  SUBTYPE OF (General_part_feature, Nominal_3d_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_integral_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;

ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET[1:?] OF organization_or_person_in_organization_item;
END_ENTITY;

ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;

ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;

ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;

ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;

ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;

ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;

  ENTITY Physical_component_feature
    SUBTYPE OF (Component_feature);
  END_ENTITY;

ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Material_specification_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'material specification';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Model_based_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based product geometry';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;

ENTITY Surface_finish_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'surface finish';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;

ENTITY General_part_feature
  SUBTYPE OF (Definitional_shape_element, Part_shape_element);
END_ENTITY;  

ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;

ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'WELD_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'WELD_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;

ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;

ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Associated_shape_element 
  
      SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Associated_item_shape;
DERIVE
  associated_item : geometric_model_item := association\Geometric_item_specific_usage.identified_item;
INVERSE 
  association : Geometric_item_specific_usage FOR definition;
WHERE
  WR1: EXISTS(associated_item);
  WR2: association\Geometric_item_specific_usage.used_model\Geometric_model.context_of_items = 
  SELF\Shape_element.containing_shape\Associated_item_shape.association\Property_definition_representation.used_representation\Geometric_model.context_of_items;
END_ENTITY;

  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Surface_texture
    SUBTYPE OF (Surface_condition);
      measuring_method    : STRING;
      measuring_direction : OPTIONAL Measurement_path;
      parameters : SET[0:?] OF Surface_texture_parameter;
  DERIVE
    SELF\Assigned_property.name : STRING := 'surface texture';
  END_ENTITY;

ENTITY Edge_curve
  SUBTYPE OF (Detailed_geometric_model_element, Edge);
    edge_geometry : Curve;
    same_sense    : BOOLEAN;
END_ENTITY;

ENTITY Face_surface
  SUBTYPE OF(Detailed_geometric_model_element, Face);
    face_geometry :  Surface;
    same_sense    :  BOOLEAN;
END_ENTITY;

ENTITY Poly_loop
  SUBTYPE OF (Detailed_geometric_model_element,Loop);
    polygon : LIST [3:?] OF UNIQUE cartesian_point;
END_ENTITY;

ENTITY Vertex_point
  SUBTYPE OF (Detailed_geometric_model_element, Vertex);
    vertex_position : Cartesian_point;
END_ENTITY;

ENTITY Connected_edge_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_edges : SET [1:?] OF Edge;
 END_ENTITY;

 ENTITY Connected_face_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_faces : SET [1:?] OF Face;
 END_ENTITY;

ENTITY Connected_face_sub_set
  SUBTYPE OF (Connected_face_set);
  parent_face_set : Connected_face_set;
END_ENTITY; 

ENTITY Detailed_topological_model_element
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CONNECTED_EDGE_SET,
                        CONNECTED_FACE_SET,
                        EDGE,
                        FACE,
                        FACE_BOUND,
                        VERTEX,(
                        LOOP
                        ANDOR 
                        PATH)))
  SUBTYPE OF (Representation_item);
END_ENTITY;

ENTITY Edge
   SUBTYPE OF (Detailed_topological_model_element);
   edge_start : Vertex;
   edge_end   : Vertex;
 END_ENTITY;

ENTITY Edge_loop
   SUBTYPE OF (Loop,Path);
 DERIVE
   ne : INTEGER := SIZEOF(SELF\Path.edge_list);
 WHERE
   WR1: (SELF\Path.edge_list[1].edge_start) :=:
        (SELF\Path.edge_list[ne].edge_end);
 END_ENTITY;

ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;

 ENTITY Face_bound
   SUBTYPE OF(Detailed_topological_model_element);
   bound       :  Loop;
   orientation :  BOOLEAN;
 END_ENTITY;

  ENTITY Face_outer_bound
    SUBTYPE OF (Face_bound);
  END_ENTITY;

ENTITY Loop
   SUPERTYPE OF (ONEOF (
              VERTEX_LOOP,
              EDGE_LOOP))
  SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;

ENTITY Oriented_edge
   SUBTYPE OF (Edge);
   edge_definition : Edge;
   orientation  : BOOLEAN;
 DERIVE
   SELF\Edge.edge_start : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_start,
                                            SELF.edge_definition.edge_end);
   SELF\Edge.edge_end   : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_end,
                                            SELF.edge_definition.edge_start);
 WHERE
   WR1: NOT ('TOPOLOGY_SCHEMA.ORIENTED_EDGE' IN TYPEOF (SELF.edge_definition));
 END_ENTITY;

ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;

ENTITY Vertex
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;

ENTITY Vertex_loop
   SUBTYPE OF (Loop);
   loop_vertex : vertex;
END_ENTITY;

ENTITY B_spline_curve
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CURVE_WITH_EXPLICIT_KNOTS,
                        CURVE_WITH_IMPLICIT_KNOTS)
                        ANDOR 
                        RATIONAL_B_SPLINE_CURVE)
  SUBTYPE OF (Bounded_curve);        
  degree : INTEGER;
  control_points : LIST [2:?] OF Cartesian_point;
  closed : LOGICAL;
 WHERE
  WR1 : ('WELD_ARM_LF.CURVE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('WELD_ARM_LF.CURVE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));
END_ENTITY;

ENTITY Volume_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

ENTITY Part_occurrence_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Definition_based_product_occurrence;
END_ENTITY;  

  ENTITY Surface_texture_parameter;
    parameter_value : measure_qualification_or_value_with_unit;
    parameter_name : STRING;
  END_ENTITY;

ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : as_product_view_definition_or_reference;
  related_view : as_product_view_definition_or_reference;
END_ENTITY;

ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;

ENTITY Document_definition
  
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Document_version;  -- associated_document_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_document_version : DOCUMENT_VERSION := SELF\Product_view_definition.defined_version;  -- DEFINED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      description : STRING := SELF\Product_view_definition.name;  -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
END_ENTITY;

ENTITY Surface_with_implicit_knots
 SUBTYPE OF (B_spline_surface);
   knot_type : knot_specification;
 END_ENTITY;

  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'WELD_ARM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'WELD_ARM_LF.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (
              AXIS_PLACEMENT_2D,
              AXIS_PLACEMENT_3D))
  SUBTYPE OF (Detailed_geometric_model_element);
      location      : Cartesian_point;
      axis          : OPTIONAL Direction;
      ref_direction : OPTIONAL Direction;
    DERIVE
      dim: INTEGER := SIZEOF(location\Cartesian_point.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(axis\Direction.direction_ratios);
      WR3: dim = SIZEOF(ref_direction\Direction.direction_ratios);
  END_ENTITY;

  ENTITY Axis_placement_2d
    SUBTYPE OF ( Axis_placement );
    WHERE
      WR1: NOT EXISTS(axis);
      WR2: SELF\Axis_placement.dim = 2;
  END_ENTITY;

  ENTITY Axis_placement_3d
    SUBTYPE OF ( Axis_placement );
    WHERE
      WR1: SELF\Axis_placement.dim = 3;
-- convert to IP
--     wr4: NOT EXISTS( axis ) OR NOT EXISTS( ref_direction ) OR ( cross_product( axis, ref_direction ).magnitude > 0 );
  END_ENTITY;

  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;

  ENTITY Point
      ABSTRACT SUPERTYPE OF (ONEOF (
                        CARTESIAN_POINT,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE) ) 
  SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Cartesian_point
    SUBTYPE OF (Point);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;

  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;

  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.direction_ratios)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;

  ENTITY Detailed_geometric_model_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        GEOMETRIC_PLACEMENT_OPERATION) )ANDOR( ONEOF (
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        SURFACE) )  ) 
  SUBTYPE OF (Representation_item);
  END_ENTITY;

  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      direction_ratios : LIST[2:3] OF REAL;  
  END_ENTITY;

  ENTITY Geometric_coordinate_space
    SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;

  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF geometric_model_item;
  END_ENTITY;

  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 

  ENTITY Geometric_placement_operation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_PLACEMENT,
                        GEOMETRIC_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 

  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 

ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;

ENTITY Representation_context;
  id : identifier;
  kind : text;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;

ENTITY Representation_item
   ABSTRACT SUPERTYPE;
  name : OPTIONAL label;
END_ENTITY;

ENTITY Representation_relationship;
  relation_type : OPTIONAL label;
  description : OPTIONAL text;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;

ENTITY Identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET[1:?] OF identification_item;
END_ENTITY;

ENTITY Area_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Assembly_shape
  SUBTYPE OF (Part_shape);
  SELF\Item_shape.described_element : Assembly_definition;
END_ENTITY;  

ENTITY Derived_unit
 SUPERTYPE OF (ONEOF (
              AREA_UNIT,
              VOLUME_UNIT))

 SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;

ENTITY Part_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Part_view_definition;
END_ENTITY;  

ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'WELD_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;

ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;

ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Product_occurrence_definition_relationship
   ABSTRACT SUPERTYPE;
  relating_view : product_view_definition_or_reference;
  related_view : product_view_definition_or_reference;
END_ENTITY;

ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

  ENTITY Product_view_definition_reference_with_local_representation
    SUBTYPE OF (Generic_product_view_definition_reference, Product_view_definition);
  END_ENTITY;

ENTITY Value_with_unit  SUPERTYPE OF (ONEOF (
               ANGLE_DATA_ELEMENT,
               LENGTH_DATA_ELEMENT) ) ;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;

  ENTITY Generic_product_view_definition_reference
     ABSTRACT SUPERTYPE;
    source : External_source_identification;
  END_ENTITY;

  ENTITY Default_assembly_bond_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : Assembly_bond_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
      WR2 : SIZEOF(USEDIN(SELF, 'WELD_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'))=0;
  END_ENTITY;

ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;

  ENTITY Component_feature_joint
      ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature_relationship, Shape_element);
    DERIVE
      associated_definition : ITEM_SHAPE := SELF\Shape_element.containing_shape;  -- CONTAINING_SHAPE : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      feature_1 : COMPONENT_FEATURE := SELF\Component_feature_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      feature_2 : COMPONENT_FEATURE := SELF\Component_feature_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : feature_1 <> feature_2;
      WR2 : 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION' in TYPEOF(associated_definition);
      WR3 : associated_definition :=: feature_1\Shape_element.containing_shape;      
      WR4 : associated_definition :=: feature_2\Shape_element.containing_shape;      
  END_ENTITY;

  ENTITY Component_feature_relationship
    
 	SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Component_feature;  	
      SELF\Shape_element_relationship.related  : Component_feature;
  END_ENTITY;

ENTITY Shape_element_relationship;
    relation_type : OPTIONAL STRING;
    description   : OPTIONAL STRING;
    relating      : Shape_element;
    related       : Shape_element;
  WHERE
    WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Shape_element;
    id               : OPTIONAL STRING;
    element_name     : STRING;
    description      : OPTIONAL STRING;
    containing_shape : Item_shape;
UNIQUE
    UR1: id, containing_shape;    
WHERE
    WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Item_shape;
  id                : OPTIONAL STRING;
  description       : OPTIONAL STRING;
  described_element : shapeable_item;
UNIQUE
  UR1: described_element;
END_ENTITY;

  ENTITY Component_feature
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Definitional_shape_element);
      definition           : OPTIONAL General_part_feature;

      SELF\Shape_element.containing_shape : Assembly_component;  -- associated_component : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_component : ASSEMBLY_COMPONENT := SELF\Shape_element.containing_shape;  -- CONTAINING_SHAPE : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
    UNIQUE
      UR1 : definition,associated_component;
      UR2 : SELF\Shape_element.element_name, associated_component;
  END_ENTITY;

ENTITY Definitional_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (
                        PATH_ELEMENT,
                        FACE_SHAPE_ELEMENT) ) 
  SUBTYPE OF (Shape_element);
  connection_area : OPTIONAL SET[1:?] OF Connection_zone;
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
UNIQUE
  UR1 : SELF\Shape_element.element_name, 
        SELF\shape_element.containing_shape;
END_ENTITY;

ENTITY Connection_zone
  SUBTYPE OF (Shape_element);
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
WHERE
  WR1 : NOT EXISTS (SELF\Shape_element.description);
  WR2 : NOT EXISTS (SELF\Shape_element.element_name);
END_ENTITY;

  ENTITY Surface_condition
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Assigned_shape_property);
    value_determination : OPTIONAL STRING;
    SELF\Assigned_property.described_element : shaped_element_select;
  INVERSE
    generic_representation : SET[0:0] OF Property_definition_representation FOR definition; 
  END_ENTITY;

ENTITY Assigned_shape_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : assigned_shape_property_select;
END_ENTITY; 

ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;

ENTITY Property_definition_representation
    ABSTRACT SUPERTYPE;
    name : OPTIONAL STRING;
    description : OPTIONAL STRING;
    definition : represented_definition;
    used_representation : Representation;
END_ENTITY;

  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 

  ENTITY Type_qualifier
     ABSTRACT SUPERTYPE OF (
                        PRE_DEFINED_TYPE_QUALIFIER);
    name : STRING;
  END_ENTITY;

ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
  SELF\Product_view_definition.initial_context: Part_view_definition_context;
  SELF\Product_view_definition.additional_contexts: SET [0:?] OF Part_view_definition_context;
END_ENTITY;

ENTITY Shape_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Associated_item_shape;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;

ENTITY Part
  SUBTYPE OF (Product);
END_ENTITY;

  ENTITY Assembly_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;

ENTITY Property_value_representation
  
      SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;

ENTITY Associated_item_shape
  SUBTYPE OF (Item_shape);
DERIVE
  associated_model : shape_model := association\Property_definition_representation.used_representation;
INVERSE  
  association : Shape_description_association FOR definition;
END_ENTITY;  

ENTITY Gdt_representation_shape
  SUBTYPE OF (Nominal_3d_model_shape, Part_shape);
WHERE
  WR1: 'WELD_ARM_LF.GDT_REPRESENTATION_VIEW_CONTEXT' IN TYPEOF(SELF\Item_shape.described_element\Product_view_definition.additional_contexts);
END_ENTITY;

ENTITY Part_shape_element
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Part_shape; 
END_ENTITY;  

  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   

ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;

ENTITY Measure_item
    ABSTRACT SUPERTYPE OF (ONEOF (
                        NUMERICAL_ITEM_WITH_UNIT,
                        VALUE_WITH_TOLERANCES) ) 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'WELD_ARM_LF.REPRESENTATION.ITEMS'))>0;
END_ENTITY;

ENTITY Dimensional_size
   ABSTRACT SUPERTYPE
  SUBTYPE OF (Geometric_dimension);
  is_applied_to : dimension_target;
END_ENTITY;

  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;

ENTITY Nominal_3d_model_shape
  SUBTYPE OF (Associated_item_shape);
DERIVE
   SELF\Associated_item_shape.associated_model : advanced_face_model := SELF\Associated_item_shape.association\Property_definition_representation.used_representation;
WHERE
  WR1: 'WELD_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(SELF\Item_shape.described_element\Product_view_definition.initial_context);
  WR2: EXISTS(associated_model);
END_ENTITY;

ENTITY Datum
   SUBTYPE OF (Shape_element);
   identification : identifier;
END_ENTITY;

ENTITY Geometric_tolerance
    ABSTRACT SUPERTYPE;
   id : OPTIONAL identifier;
   name : OPTIONAL label;
   applied_to : geometric_tolerance_target;
   modifiers : SET[1:?] OF geometric_tolerance_modifier;
   qualifying_note : OPTIONAL STRING;
   first_unit_size : OPTIONAL Length_data_element;
   area_unit_type : OPTIONAL area_unit_type;
   second_unit_size : OPTIONAL Length_data_element;
   tolerance_value : Value_with_unit;
   unequally_disposed_tolerance_zone_displacement : OPTIONAL Length_data_element;
WHERE
   WR1: (NOT (EXISTS(first_unit_size))) OR ('WELD_ARM_LF.LENGTH_MEASURE' IN TYPEOF(first_unit_size.value_component));
END_ENTITY;

ENTITY Geometric_dimension
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DIMENSIONAL_LOCATION,
                        DIMENSIONAL_SIZE));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
  theoretical_exact : BOOLEAN;
  auxiliary : BOOLEAN;
  tolerance_principle : tolerance_principle_type;
  modifiers : LIST [0:?] of geometric_dimension_modifier;
  unit_length : OPTIONAL Length_data_element;
END_ENTITY;

ENTITY Measurement_path;
  defined_by : Curve;
  defined_in : Geometric_coordinate_space;
END_ENTITY;

ENTITY Dimensional_location
   ABSTRACT SUPERTYPE
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : dimension_target;
  target : dimension_target;
END_ENTITY;

ENTITY Geometric_item_specific_usage;
    name            : STRING;
    description     : OPTIONAL STRING;
    definition      : geometric_item_specific_usage_select;
    identified_item : geometric_model_item;
    used_model      : shape_model;      
END_ENTITY;

ENTITY Datum_feature
   
  SUBTYPE OF (Definitional_shape_element);
   of_datum : Datum;
UNIQUE
   UR1: of_datum;
END_ENTITY;

  ENTITY Qualified_representation_item 
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'WELD_ARM_LF.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 

  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'WELD_ARM_LF.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;

  ENTITY Weld_intermittent_position_data
    SUBTYPE OF (Characterizable_object);
      intermittent_type : intermittent_or_chain_intermittent_or_staggered_intermittent;
      number_of_weld_elements                : count_measure;
      nominal_length_of_weld_element         : Length_data_element;
      nominal_distance_between_weld_elements : Length_data_element;
    INVERSE
     weld_elements : SET [0:?] OF Weld_element FOR derived_from;
    WHERE
     WR1 : number_of_weld_elements > 1;
     WR2 : NOT (SIZEOF(weld_elements) > 0) OR (SIZEOF(weld_elements) = number_of_weld_elements);
     WR3 : NOT (SIZEOF(weld_elements) > 0) OR 
               (SIZEOF(QUERY(we <* weld_elements | EXISTS(we\Weld_element.precedent_element))) = (number_of_weld_elements -1));
  END_ENTITY;

ENTITY Path
   SUBTYPE OF (Detailed_topological_model_element);
   edge_list  : LIST [1:?] OF UNIQUE Oriented_edge;
 WHERE
   WR1: path_aligned(SELF);
 END_ENTITY;

ENTITY Face
   SUBTYPE OF (Detailed_topological_model_element);
   bounds : SET[1:?] OF face_bound;
 WHERE
     WR1: SIZEOF(QUERY(temp <* bounds | 'WELD_ARM_LF.FACE_OUTER_BOUND' IN
                                               TYPEOF(temp))) <= 1;
 END_ENTITY;

  ENTITY Angle_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('WELD_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('WELD_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('WELD_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('WELD_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('WELD_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('WELD_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('WELD_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('WELD_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('WELD_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('WELD_ARM_LF.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('WELD_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

ENTITY Part_view_definition_context
    SUPERTYPE OF (ONEOF (
               GDT_REPRESENTATION_VIEW_CONTEXT,
               MODEL_BASED_VIEW_CONTEXT,
               SURFACE_FINISH_VIEW_CONTEXT,
               MATERIAL_SPECIFICATION_VIEW_CONTEXT) ) 
      SUBTYPE OF (View_definition_context);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')
                        |  NOT ( 'WELD_ARM_LF.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
  WR2: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')
                        |  NOT ( 'WELD_ARM_LF.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
END_ENTITY;

ENTITY Gdt_representation_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'geometrical dimensioning and tolerancing representation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
--  dimensioning_standard : dimensioning_document := ISO; -- some expression through the documents, see wr4, may help writing further rules
-- note: when we write the rules we will decide which derived attribute to use
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'WELD_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('WELD_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101 or ASME Y14.5 as associated dimension standard document
END_ENTITY;

  ENTITY Specification_definition
  	
  SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'WELD_ARM_LF.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;

ENTITY Assembly_component
  SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence_shape);
DERIVE
  SELF\Item_shape.described_element : Assembly_component := SELF;
  assemblies : SET OF Product_view_definition := ac_get_assemblies(SELF);
  groups : SET OF Assembly_group_component := ac_get_groups(SELF);
  versions : SET OF Product_version := ac_get_versions(assemblies);
  product : SET OF Product := ac_get_products(versions);
INVERSE
  SELF\Product_occurrence.occurrence_contexts : SET[1:?] OF Assembly_component_relationship FOR related_view;
WHERE
  WR1 : NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) XOR ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(derived_from))) OR 
        NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) XOR ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from)));
  WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
  WR3 : SIZEOF(assemblies) = SIZEOF(versions);
  WR4 : SIZEOF(product) = 1;
  WR5 : (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1])) OR
         (SIZEOF(groups) = 0) OR 
         (ac_get_group_assemblies(groups) = assemblies));
END_ENTITY;

  ENTITY Qualified_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:4] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: valid_qualified_tolerance_characteristic(SELF);
  END_ENTITY;

  ENTITY Assembly_joint
    SUPERTYPE OF (
              ASSEMBLED_WITH_BONDING)
  SUBTYPE OF (Component_feature_joint);
      SELF\Shape_element_relationship.relating : Physical_component_feature;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\Shape_element_relationship.related : Physical_component_feature;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\Shape_element.containing_shape : Assembly_shape;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
    DERIVE
      assembly_feature_1 : PHYSICAL_COMPONENT_FEATURE := SELF\Component_feature_joint.feature_1;  -- FEATURE_1 : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      assembly_feature_2 : PHYSICAL_COMPONENT_FEATURE := SELF\Component_feature_joint.feature_2;  -- FEATURE_2 : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      associated_assembly : ASSEMBLY_SHAPE := SELF\Component_feature_joint.associated_definition;  -- ASSOCIATED_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1 : assembly_feature_1 :<>: assembly_feature_2;
      WR2 : ('WELD_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR
             (('WELD_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1)) AND
             (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <>
             associated_assembly\Item_shape.described_element)) = 0));
      WR3 : ('WELD_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR
             (('WELD_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2)) AND
             (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <>
             associated_assembly\Item_shape.described_element)) = 0));
  END_ENTITY;

  ENTITY Assembled_with_bonding
    SUBTYPE OF (Assembly_joint);
      default_bond_definition : Assembly_bond_definition;
(*
    WHERE
      WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
*)
  END_ENTITY;

  ENTITY Definition_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      derived_from: Part_view_definition;
    WHERE
      WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
  END_ENTITY;

  ENTITY Product_occurrence
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Part_version;
    DERIVE
      SELF\Product_view_definition.initial_context : View_definition_context := View_definition_context('','',?);
    INVERSE
      occurrence_contexts : SET [0:?] OF Product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0:?] OF View_definition_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(occurrence_contexts) + SIZEOF(view_definition_contexts) >= 1;
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
      WR3: SIZEOF(QUERY( oc <* occurrence_contexts |
            NOT( NOT('WELD_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(oc)) OR
                 NOT EXISTS(oc\Assembly_component_relationship.quantity))
               )) = 0;
  END_ENTITY;

  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('WELD_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('WELD_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('WELD_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('WELD_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('WELD_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('WELD_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('WELD_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('WELD_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('WELD_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('WELD_ARM_LF.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('WELD_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

ENTITY Rational_b_spline_surface
 SUBTYPE OF (B_spline_surface);
  weight_values : LIST [2:?] OF LIST [2:?] OF REAL;
 WHERE 
    WR1: (SIZEOF(weight_values) =
                     SIZEOF(SELF\B_spline_surface.control_points))
           AND (SIZEOF(weight_values[1]) =
                  SIZEOF(SELF\B_spline_surface.control_points[1]));
     WR2: positive_surface_weights(SELF);
END_ENTITY;

ENTITY Advanced_brep_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] of
advanced_brep_shape_representation_item;
WHERE
  WR1: SIZEOF(QUERY ( msb <* QUERY ( it <* SELF.items |
                ('WELD_ARM_LF.MANIFOLD_SOLID_BREP' IN TYPEOF(it)) ) |
               ( NOT (SIZEOF(QUERY ( csh <* collect_shells(msb) |
                                (NOT (SIZEOF(QUERY ( fcs <* csh\
                connected_face_set.connected_faces | (NOT (
                'WELD_ARM_LF.ADVANCED_FACE' IN TYPEOF(fcs))) )) = 0)) ))
              = 0)) )) = 0;
END_ENTITY;

  ENTITY Assembly_group_component
    SUBTYPE OF (Assembly_component, Single_instance);
    INVERSE
      components : SET[1:?] OF next_assembly_usage FOR relating_view;
    WHERE
      WR1: SIZEOF(QUERY(co <* components | NOT(('WELD_ARM_LF.ASSEMBLY_COMPONENT') IN TYPEOF(co\Product_occurrence_definition_relationship.related_view)))) = 0;
  END_ENTITY;

ENTITY Manifold_solid_brep 
  SUBTYPE OF (Solid_model);
  outer : Closed_shell;
  voids : OPTIONAL SET[1:?] OF Oriented_closed_shell;
WHERE
  WR1: (NOT EXISTS(voids)) OR (SIZEOF(QUERY ( ocs <* SELF.voids |                
                      ( NOT (ocs.orientation = FALSE)))) = 0);
END_ENTITY;

ENTITY Rational_b_spline_curve
 SUBTYPE OF (B_spline_curve);
  weight_values : LIST [2:?]  OF REAL;
 WHERE 
    WR1: SIZEOF(weight_values) = SIZEOF(SELF\B_spline_curve.control_points);
    WR2: positive_curve_weights(SELF);
END_ENTITY;

FUNCTION positive_curve_weights(bsc: Rational_b_spline_curve) : BOOLEAN;
   LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT i := 1 TO SIZEOF(bsc.weight_values);
     IF bsc.weight_values[i] <= 0.0  THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

  FUNCTION acyclic_weld_element_precedence_relationship
      (relation : Weld_element; relatives : SET[1:?] OF
      Weld_element; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF Weld_element;
    END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
        'WELD_ARM_LF.' + 'WELD_ELEMENT.' +
        'SUBSEQUENT_ELEMENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_weld_element_precedence_relationship(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

FUNCTION collect_shells(brep : Manifold_solid_brep)    
               : SET[1:?] OF Closed_shell;   
    LOCAL   
      return_set: SET[1:?] OF closed_shell := [brep.outer];   
    END_LOCAL;   

    IF SIZEOF(brep.voids)  >= 1    
          THEN   
       return_set := return_set + brep.voids;   
    END_IF;   
   RETURN(return_set);   
END_FUNCTION; 

  FUNCTION valid_qualified_tolerance_characteristic (input : Qualified_tolerance_characteristic) : BOOLEAN;
 --no more than one of the Type_qualifier.name shall be 'nominal'
 --no more than one of the Type_qualifier.name shall be 'typical'
 --no more than one of the Type_qualifier.name shall be 'maximium'
 --no more than one of the Type_qualifier.name shall be 'minimum'
 --Type_qualifier.name shall be drawn only from 'nominal', 'typical' , 'maximium', 'minimum'
  LOCAL
     bag_data : BAG OF STRING := [];
     valid_set : SET OF STRING := ['nominal', 'typical' , 'maximium', 'minimum'];
  END_LOCAL;
  REPEAT i := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items);
    REPEAT j := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers);
     IF 'WELD_ARM_LF.TYPE_QUALIFIER' IN TYPEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j])
      THEN
        bag_data := bag_data + input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j]\Type_qualifier.name;
     END_IF;
    END_REPEAT;
  END_REPEAT;

  IF (SIZEOF(bag_to_set(bag_data)) = SIZEOF(bag_data)) AND
     (VALUE_UNIQUE(bag_data)) AND 
     (SIZEOF(valid_set * bag_data) = SIZEOF(bag_data)) 
  THEN RETURN(TRUE);
  END_IF;
    
   RETURN(FALSE);
  END_FUNCTION; 

FUNCTION bag_to_set
   (the_bag : BAG [0:?] OF GENERIC:intype) : SET [0:?] OF GENERIC:intype;

LOCAL the_set : SET OF GENERIC : intype := [];
  i : INTEGER;
END_LOCAL;
  IF SIZEOF(the_bag)> 0 THEN 
  	REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN(the_set);
END_FUNCTION;

FUNCTION boolean_choice (b : boolean;
            choice1, choice2 : generic : item)  : generic : item;
 
     IF b THEN
       RETURN (choice1);
     ELSE
       RETURN (choice2);
     END_IF;
   END_FUNCTION;

FUNCTION path_aligned(a_path : Path) : LOGICAL;
   LOCAL
     n : INTEGER;
     p : LOGICAL := TRUE;
   END_LOCAL;
     
     n := SIZEOF (a_path.edge_list);
     REPEAT i := 2 TO n;
       p := p AND (a_path.edge_list[i-1].edge_end :=:
                   a_path.edge_list[i].edge_start);
     END_REPEAT;
     
     RETURN (p);
 END_FUNCTION;

FUNCTION w_acyclic_sequence ( input1 : Welding_definition; input2 : Welding_definition) : BOOLEAN;
RETURN (TRUE);
END_FUNCTION;

FUNCTION positive_surface_weights(bss: Rational_b_spline_surface) : BOOLEAN;
   LOCAL
     result        : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT i := 1 TO SIZEOF(bss.weight_values);
     REPEAT j := 0 TO SIZEOF(bss.weight_values[1]);
       IF (bss.weight_values[i][j] <= 0.0)  THEN
         result := FALSE;
         RETURN(result);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

  FUNCTION ac_get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('WELD_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;

    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
        'STRUCTURED_LAYOUT_COMPONENT' IN
        TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;

    RETURN (pvd);
  END_FUNCTION;

  FUNCTION ac_get_groups(input : Assembly_component) : SET OF Assembly_group_component;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      agc : SET OF Assembly_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF ('WELD_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        agc := agc + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      END_IF;
    END_REPEAT;
    RETURN (agc);
  END_FUNCTION;

  FUNCTION ac_get_versions(input : SET OF Product_view_definition) : SET OF Product_version;
    LOCAL
      pv : SET OF Product_version := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      pv := pv + input[i]\Product_view_definition.defined_version; 
    END_REPEAT;
    RETURN (pv);
  END_FUNCTION;

  FUNCTION ac_get_products(input : SET OF Product_version) : SET OF Product;
    LOCAL
      p : SET OF Product := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      p := p + input[i]\Product_version.of_product; 
    END_REPEAT;
    RETURN (p);
  END_FUNCTION;

  FUNCTION ac_get_group_assemblies(input : SET OF Assembly_group_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := [];
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      acr := input[i]\Assembly_component.occurrence_contexts;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('WELD_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

(* E2: SUBTYPE_CONSTRAINT mf_shape_element_subtypes FOR DEFINITIONAL_SHAPE_ELEMENT; *)

(* E2: SUBTYPE_CONSTRAINT curve_subtypes FOR BOUNDED_CURVE; *)

(* E2: SUBTYPE_CONSTRAINT alternate_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* E2: SUBTYPE_CONSTRAINT point_subtypes FOR POINT; *)

(* E2: SUBTYPE_CONSTRAINT alternate_measure_items FOR MEASURE_ITEM; *)

(* E2: SUBTYPE_CONSTRAINT gl_associated_shape_element_subtypes FOR ASSOCIATED_SHAPE_ELEMENT; *)

(* E2: SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR PROPERTY_VALUE_REPRESENTATION; *)

(* E2: SUBTYPE_CONSTRAINT pmi_part_view_definition_context FOR PART_VIEW_DEFINITION_CONTEXT; *)

(* E2: SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR VALUE_WITH_UNIT; *)

(* E2: SUBTYPE_CONSTRAINT fac_shape_element FOR SHAPE_ELEMENT; *)

(* E2: SUBTYPE_CONSTRAINT property_definition_representation_subtype FOR PROPERTY_DEFINITION_REPRESENTATION; *)

(* E2: SUBTYPE_CONSTRAINT gl_shape_element_subtypes FOR SHAPE_ELEMENT; *)

(* E2: SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR ASSEMBLY_COMPONENT_RELATIONSHIP; *)
-- generated from SUBTYPE_CONSTRAINT assembly_component_relationship_constraint

RULE total_over_assembly_component_relationship_constraint FOR( ASSEMBLY_COMPONENT_RELATIONSHIP);
WHERE
  wr1 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Weld_arm.NEXT_ASSEMBLY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
END_RULE;

(*** 2003=>1994 conversion: insert a rule to control if instances are legal according to USE/REF clauses ***)

RULE validate_dependently_instantiable_entity_data_types FOR
      (Assembly_joint,Component_feature,Component_feature_relationship,Connection_zone,Datum,Datum_feature,Default_assembly_bond_shape_model,Dimensional_location,Dimensional_size,Document,Gdt_representation_shape,Generic_product_view_definition_reference,Geometric_dimension,Geometric_tolerance,Item_shape,Measure_item,Measurement_path,Part,Product_occurrence,Shape_description_association,Shape_element,Specification_definition,Surface_texture_parameter,Type_qualifier --<list this first and all subsequent relevant referencedentity data types here>
      );
LOCAL
  number_of_input_instances : INTEGER;
  previous_in_chain : LIST OF GENERIC := [];
  set_of_input_types : SET OF STRING := [];
  all_instances : SET OF GENERIC := [];
END_LOCAL;

  all_instances := all_instances + Assembly_joint;
  all_instances := all_instances + Component_feature;
  all_instances := all_instances + Component_feature_relationship;
  all_instances := all_instances + Connection_zone;
  all_instances := all_instances + Datum;
  all_instances := all_instances + Datum_feature;
  all_instances := all_instances + Default_assembly_bond_shape_model;
  all_instances := all_instances + Dimensional_location;
  all_instances := all_instances + Dimensional_size;
  all_instances := all_instances + Document;
  all_instances := all_instances + Gdt_representation_shape;
  all_instances := all_instances + Generic_product_view_definition_reference;
  all_instances := all_instances + Geometric_dimension;
  all_instances := all_instances + Geometric_tolerance;
  all_instances := all_instances + Item_shape;
  all_instances := all_instances + Measure_item;
  all_instances := all_instances + Measurement_path;
  all_instances := all_instances + Part;
  all_instances := all_instances + Product_occurrence;
  all_instances := all_instances + Shape_description_association;
  all_instances := all_instances + Shape_element;
  all_instances := all_instances + Specification_definition;
  all_instances := all_instances + Surface_texture_parameter;
  all_instances := all_instances + Type_qualifier;
;--<make a union of all implicit populations of the FOR-clause>
number_of_input_instances := SIZEOF(all_instances);
(* Collect all type strings of all FOR instances into one set. *)
REPEAT i:=1 TO number_of_input_instances;
  set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
END_REPEAT;

WHERE
  WR1: dependently_instantiated(all_instances, set_of_input_types,
                                previous_in_chain);
END_RULE;

FUNCTION dependently_instantiated(
            set_of_input_instances : SET OF GENERIC:igen;
            set_of_input_types     : SET OF STRING;
            previous_in_chain      : LIST OF GENERIC:cgen): BOOLEAN;
(*'dependently_instantiated' To test whether all instances in the
  input set_of_input_instances are referenced by independently
  instantiable instances. If so, this function returns true.
  Set_of_input_types includes the type strings for all input instances.
  The instances in previous_in_chain are used to detect cyclic
  references during recursive calls to this function. The parameter
  lists already tested instances in a chain of references.
*)
LOCAL
  number_of_input_instances     : INTEGER;
  number_of_referring_instances : INTEGER;
  bag_of_referring_instances    : BAG OF GENERIC:igen := [];
  dependently_instantiated_flag : BOOLEAN;
  previous_in_chain_plus        : LIST OF GENERIC:cgen := [];
  result                        : BOOLEAN := true;
  set_of_types                  : SET OF STRING := [];
END_LOCAL;

IF EXISTS(set_of_input_instances) THEN
  number_of_input_instances := SIZEOF(set_of_input_instances);
  (* Add the declared type of bag_of_referring_instances to the set of
     types of the REFERENCEd instances for the subset comparison later.
   *)
  set_of_input_types := set_of_input_types + 'GENERIC';
  REPEAT i:=1 TO number_of_input_instances;
    (* Determine all references to the current input instance. *)
    bag_of_referring_instances := USEDIN (set_of_input_instances[i] , '');
    IF EXISTS(bag_of_referring_instances) THEN
      number_of_referring_instances := SIZEOF(bag_of_referring_instances);
      dependently_instantiated_flag := false;
      REPEAT j:=1 TO number_of_referring_instances;
        (* Determine the type strings of the current referencing instance.
         *)
        set_of_types := TYPEOF(bag_of_referring_instances[j]);
        (* If the referencing instance is of one of the types of the
           only dependently instantiable select items, the current input
           instance may still be invalidly instantiated.
           Otherwise it is OK, and the next input instance is tested.
         *)
        IF set_of_types <= set_of_input_types THEN -- subset operator
          (* The referring instance is of one of the restricted types.
             However, it may itself be referred to by a valid instance;
             then also the current instance would be valid.
             Thus, call this function recursively with the referring
             instance as input.
             To avoid an infinite loop in case a set of instances
             reference each other in a closed loop, test first whether
             the current referencing instance is in the list of
             previously processed chain members.
           *)
          IF NOT (bag_of_referring_instances[j] IN previous_in_chain) THEN
            previous_in_chain_plus := previous_in_chain +
            set_of_input_instances[i];
            IF dependently_instantiated([bag_of_referring_instances[j]],
              set_of_input_types,
              previous_in_chain_plus) THEN
              dependently_instantiated_flag := true;
              ESCAPE; -- dependently instantiated; next input instance
            ELSE
              (* Not dependently instantiated: go to next referring
              instance. *)
              SKIP;
            END_IF;
          END_IF;
        ELSE
          dependently_instantiated_flag := true;
          ESCAPE; -- dependently instantiated; take next input instance
        END_IF;
      END_REPEAT;
      IF NOT dependently_instantiated_flag THEN
        RETURN(false);
      END_IF;
    ELSE
      RETURN(false); -- not referenced at all => invalidly instantiated
    END_IF;
  END_REPEAT;
ELSE
  RETURN(false); -- no input
END_IF;

RETURN(true);
END_FUNCTION; -- end dependently_instantiated



END_SCHEMA;

