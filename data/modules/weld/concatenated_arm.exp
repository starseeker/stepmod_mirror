(*
$Id: arm.exp,v 1.18 2009/12/11 13:39:31 mikeward Exp $
ISO TC184/SC4/WG12 N2941 - ISO/TS 10303-1047 Activity - EXPRESS ARM
*) 


SCHEMA Activity_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;

ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;

ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;

ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_arm

(*
 $Id: arm.exp,v 1.11 2004/10/28 18:02:36 darla Exp $
 ISO TC184/SC4/WG12 N2943 - ISO/TS 10303-1049 Activity method - EXPRESS ARM
*)


SCHEMA Activity_method_arm; 


ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_arm

(*
 $Id: arm.exp,v 1.5 2004/11/19 21:37:33 robbod Exp $
 ISO TC184/SC4/WG12 N2998 - ISO/TS 10303-1249 Activity method assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2306
*) 


SCHEMA Activity_method_assignment_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;

ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_assignment_arm
(*
 $Id: arm.exp,v 1.18 2010/01/21 20:45:00 lothartklein Exp $
 ISO TC184/SC4/WG12 N6857 - ISO/TS 10303-1514 Advanced boundary representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5272
*)

SCHEMA Advanced_boundary_representation_arm;

USE FROM Topologically_bounded_surface_arm; -- ISO/TS 10303-1511:2004
USE FROM Solid_model_arm;

TYPE advanced_brep_shape_representation_item = SELECT (
  Axis_placement_3d,
  Geometric_placement_operation,
  Manifold_solid_brep);
END_TYPE;

ENTITY Advanced_brep_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] of
advanced_brep_shape_representation_item;
WHERE
  WR1: SIZEOF(QUERY ( msb <* QUERY ( it <* SELF.items |
                ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP' IN TYPEOF(it)) ) |
               ( NOT (SIZEOF(QUERY ( csh <* collect_shells(msb) |
                                (NOT (SIZEOF(QUERY ( fcs <* csh\
                connected_face_set.connected_faces | (NOT (
                'ADVANCED_BOUNDARY_REPRESENTATION_ARM.ADVANCED_FACE' IN TYPEOF(fcs))) )) = 0)) ))
              = 0)) )) = 0;
END_ENTITY;

ENTITY Closed_shell
  SUBTYPE OF (Connected_face_set);
END_ENTITY;

ENTITY Manifold_solid_brep 
  SUBTYPE OF (Solid_model);
  outer : Closed_shell;
  voids : OPTIONAL SET[1:?] OF Oriented_closed_shell;
WHERE
  WR1: (NOT EXISTS(voids)) OR (SIZEOF(QUERY ( ocs <* SELF.voids |                
                      ( NOT (ocs.orientation = FALSE)))) = 0);
END_ENTITY;

ENTITY Oriented_closed_shell
   SUBTYPE OF (Closed_shell);
   shell       : Closed_shell;
   orientation : BOOLEAN;
WHERE
   WR1: NOT ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL'
              IN TYPEOF (SELF.shell));
END_ENTITY;

FUNCTION collect_shells(brep : Manifold_solid_brep)    
               : SET[1:?] OF Closed_shell;   
    LOCAL   
      return_set: SET[1:?] OF closed_shell := [brep.outer];   
    END_LOCAL;   

    IF SIZEOF(brep.voids)  >= 1    
          THEN   
       return_set := return_set + brep.voids;   
    END_IF;   
   RETURN(return_set);   
END_FUNCTION; 

END_SCHEMA;


(*
   $Id: arm.exp,v 1.26 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8080 - ISO/TS 10303-1601 Altered package - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7484
*)

SCHEMA Altered_package_arm;

	USE FROM Package_arm;	-- ISO/TS 10303-1707

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE ap_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Surface_prepped_terminal);
	END_TYPE; 

 	TYPE ap_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Altered_package);
	END_TYPE;

  TYPE predefined_geometric_status = ENUMERATION OF
    (undefined,
     standard_datum_condition,
     perpendicular_primary_datum_axis,
     perpendicular_primary_datum_plane);
  END_TYPE;

  ENTITY Altered_package
    SUBTYPE OF (Package);
      of_geometric_status          : OPTIONAL predefined_geometric_status;
      modified_terminal_separation : OPTIONAL Length_data_element;
      package_to_be_altered        : Package;
    INVERSE
	  of_external_geometric_status : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (of_geometric_status)) XOR ((SIZEOF(of_external_geometric_status)) = 1);
	  WR2: NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Altered_package_terminal
    ABSTRACT SUPERTYPE OF ((shape_formed_terminal ANDOR
 Surface_prepped_terminal) ANDOR
 Length_trimmed_terminal)
    SUBTYPE OF (Package_terminal);
      terminal_to_be_altered                  : Package_terminal;
      SELF\Part_feature.associated_definition : Altered_package;
  END_ENTITY;

  ENTITY Length_trimmed_terminal
    SUBTYPE OF (Altered_package_terminal);
      trimmed_length : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Shape_formed_terminal
    SUBTYPE OF (Altered_package_terminal);
  END_ENTITY;

  ENTITY Surface_prepped_terminal
    SUBTYPE OF (Altered_package_terminal);
	DERIVE
	  surface_preparation: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'surface preparation', 
  			'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.66 2014/02/08 18:01:09 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8418 - ISO/TS 10303-1603 Analytical model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N8301
*)

SCHEMA Analytical_model_arm;

USE FROM Model_parameter_arm;	-- ISO/TS 10303-1703
USE FROM Software_arm;	-- ISO/TS 10303-1746
USE FROM Document_structure_arm;	-- ISO/TS 10303-1124
USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

  TYPE am_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH
    (Digital_analytical_model_vector_port);
  END_TYPE;

  TYPE am_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH
    (Analytical_model_definition);
  END_TYPE;

  TYPE am_parameter_assignment_select = SELECT BASED_ON parameter_assignment_select WITH
    (Analytical_model_parameter);
  END_TYPE;

  TYPE am_property_assignment_select = SELECT BASED_ON property_assignment_select WITH
    (Analytical_model_definition);
  END_TYPE;

  TYPE analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE port_property_type = ENUMERATION OF
    (string_property_type,
     boolean_property_type,
     logical_property_type,
     numeric_property_type,
     physical_property_type);
  END_TYPE;

  TYPE signal_flow_direction = ENUMERATION OF
    (unknown_direction,
     not_applicable,
     output_direction,
     input_direction,
     bidirectional);
  END_TYPE;

  ENTITY Across_port_variable
    SUBTYPE OF (Port_variable);
    WHERE
      WR1 : EXISTS(SELF\Port_variable.unit_of_measure);
  END_ENTITY;

  ENTITY Analog_analytical_model_port
    SUBTYPE OF (Analytical_model_port);
    INVERSE
      signal_variable : SET[1:?] OF Port_variable FOR associated_port;
  END_ENTITY;

  ENTITY Port_variable
    SUPERTYPE OF (ONEOF (Through_port_variable,
 Across_port_variable,
 Transform_port_variable));
      associated_port : Analog_analytical_model_port;
      variable_name   : STRING;
      unit_of_measure : OPTIONAL Unit; --STRING;
    UNIQUE
      UR1 : variable_name,
 associated_port;
  END_ENTITY;

  ENTITY Analytical_model
  	SUBTYPE OF (Information_product);
    UNIQUE
      UR1: SELF\Product.id;
  END_ENTITY;

  ENTITY Analytical_model_application
    SUBTYPE OF (Representation);
      model_parameter_assignment     : OPTIONAL SET[1:?] OF Parameter_assignment;
      model_representation           : Analytical_model_definition;
    UNIQUE
      UR1 : SELF\Representation.name;
  END_ENTITY;

  ENTITY Analytical_model_definition
    SUBTYPE OF (Information_definition);
      SELF\Product_view_definition.defined_version 	: Analytical_model_version;
      source_code : SET [1:1] OF Digital_file;
    DERIVE
		representation_language: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'representation language',
  			'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
    INVERSE
      access_mechanism : SET[1:?] OF analytical_model_port FOR accessed_analytical_model;
      parameter        : SET[1:?] OF analytical_model_parameter FOR accessed_analytical_model;
	  reference_document : document_assignment FOR is_assigned_to;
  END_ENTITY;

  ENTITY Analytical_model_make_from_relationship
  	SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED reusable_model : Analytical_model_definition;
      SELF\View_definition_relationship.related_view RENAMED resultant_model : Analytical_model_definition;
    UNIQUE
      UR1 : reusable_model, resultant_model;
    WHERE
      WR1 : reusable_model :<>: resultant_model;
  END_ENTITY;

  ENTITY Analytical_model_parameter
    SUBTYPE OF (Applied_independent_property);
      SELF\Assigned_property.described_element RENAMED accessed_analytical_model : Analytical_model_definition;
    UNIQUE
      UR1 : SELF\Assigned_property.id,  accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_port
    SUPERTYPE OF (analytical_model_vector_port ANDOR
 (ONEOF (Analog_analytical_model_port,
 Digital_analytical_model_port)));
      accessed_analytical_model : Analytical_model_definition;
      port_name                 : STRING;
    UNIQUE
      UR1 : port_name,
 accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_port_assignment;
	assigned_analytical_model_port	: Analytical_model_port;
	assigned_item					: analytical_model_port_assignment_select;
	associated_analytical_model_application :Analytical_model_application;
   UNIQUE
    UR1 : assigned_analytical_model_port,assigned_item,associated_analytical_model_application;
   WHERE
    WR1 : assigned_analytical_model_port.accessed_analytical_model =
   associated_analytical_model_application.model_representation;
  END_ENTITY;

  ENTITY Analytical_model_port_make_from_relationship;
      associated_make_from : Analytical_model_make_from_relationship;
      reusable_feature     : Analytical_model_port;
      resultant_feature    : Analytical_model_port;
    UNIQUE
      UR1 : reusable_feature,
 resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.accessed_analytical_model :<>: resultant_feature.accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_scalar_port
    SUBTYPE OF (Analytical_model_vector_port);
    WHERE
      WR1 : SIZEOF(SELF\Analytical_model_vector_port.element_port) = 1;
      WR2 : SELF = SELF\Analytical_model_vector_port.element_port[1];
  END_ENTITY;

  ENTITY Analytical_model_vector_port
    SUPERTYPE OF (Analytical_model_scalar_port)
    SUBTYPE OF (Analytical_model_port);
    element_port : LIST [1:?] OF Analytical_model_scalar_port;
  DERIVE
      size : INTEGER := SIZEOF(element_port); -- positive_integer;
  END_ENTITY;

  ENTITY Analytical_model_version
  	SUBTYPE OF (Information_version);
  		SELF\Product_version.of_product : Analytical_model;
  END_ENTITY;

  ENTITY Digital_analytical_model_port
  	ABSTRACT SUPERTYPE OF (Digital_analytical_model_vector_port)
    SUBTYPE OF (Analytical_model_port);
      nominal_signal_flow_direction : signal_flow_direction;
      port_type                     : port_property_type;
    WHERE
      WR1 : not_applicable <> nominal_signal_flow_direction;
      WR2 : numeric_property_type <> port_type;
      WR3 : physical_property_type <> port_type;
      WR4 : unknown_direction <> nominal_signal_flow_direction;
  END_ENTITY;

  ENTITY Digital_analytical_model_scalar_port
    SUBTYPE OF (Digital_analytical_model_vector_port, Analytical_model_scalar_port);
  END_ENTITY;

  ENTITY Digital_analytical_model_vector_port
    SUBTYPE OF (Digital_analytical_model_port,Analytical_model_vector_port);
    INVERSE
      data_encoding_method 	: External_source_identification FOR item;
    WHERE
     WR1 : SELF\Digital_analytical_model_port.port_type = port_property_type.string_property_type;
  END_ENTITY;

	ENTITY Terminal_pair_port_equivalence_relationship;
      equivalent_port : Analytical_model_port;
      scalar_ports    : Analytical_model_vector_port;
	 WHERE
	  WR1: (SIZEOF (scalar_ports.element_port) = 2);
  	END_ENTITY;

  ENTITY Through_port_variable
    SUBTYPE OF (Port_variable);
    WHERE
      WR1 : EXISTS(SELF\Port_variable.unit_of_measure);
  END_ENTITY;

  ENTITY Transform_port_variable
    SUBTYPE OF (Port_variable);
      nominal_signal_flow_direction : signal_flow_direction;
    WHERE
      WR1 : signal_flow_direction.not_applicable <> nominal_signal_flow_direction;
      WR2 : signal_flow_direction.bidirectional <> nominal_signal_flow_direction;
  END_ENTITY;

RULE analytical_model_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_VERSION' IN TYPEOF ( pv) ) ) AND ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE;

RULE analytical_model_definition_constraint FOR
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.19 2012/11/09 21:40:58 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N8250 - ISO/TS 10303-1001 Appearance assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6860
*)


SCHEMA Appearance_assignment_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE appearance_context = EXTENSIBLE GENERIC_ENTITY SELECT
    (Representation);
  END_TYPE; 

  TYPE appearance_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE; 

  TYPE context_dependent_appearance_assignment_set = SET [2:?] OF Context_dependent_appearance_assignment; 
  END_TYPE;

  TYPE overriding_style_context = EXTENSIBLE GENERIC_ENTITY SELECT
    (Detailed_geometric_model_element, 
     Styled_model);
  END_TYPE;

  TYPE presented_model_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Styled_model); 
  END_TYPE;  

  TYPE styled_element_appearance = SELECT (
    Appearance_assignment, 
    context_dependent_appearance_assignment_set);
  END_TYPE;

  TYPE geometric_mapping_target = SELECT (
    Axis_placement, 
    cartesian_transformation);
  END_TYPE;
  
  ENTITY Appearance_assignment;
    appearance_components : SET[1:?] OF appearance_select;
  END_ENTITY;

  ENTITY Context_dependent_appearance_assignment
    SUBTYPE OF (Appearance_assignment);
      context_definition : appearance_context;
  END_ENTITY;
  
  ENTITY Context_dependent_over_riding_styled_element
    SUBTYPE OF (Over_riding_styled_element);
      context_definition : LIST [1:?] OF overriding_style_context;
  END_ENTITY;

  ENTITY Over_riding_styled_element
    SUBTYPE OF (Styled_element);
      over_ridden_element : Styled_element;
  END_ENTITY;

  ENTITY Planar_box
    SUBTYPE OF (Detailed_geometric_model_element);
      size_in_x : length_measure;
      size_in_y : length_measure;
      placement : Axis_placement; 
  END_ENTITY;

  ENTITY Styled_element
    SUBTYPE OF (Representation_item);
      appearance : styled_element_appearance;
      element : Detailed_geometric_model_element;
      invisible : BOOLEAN;
  END_ENTITY;

  ENTITY Styled_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Representation);
      version_id : OPTIONAL STRING;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
    DERIVE
      styled_geometry : SET[0:?] OF Geometric_model := 
      bag_to_set(QUERY (r <* (USEDIN(SELF\Representation.context_of_items,
	 	'FOUNDATION_REPRESENTATION_ARM.' + 
	 	'REPRESENTATION.' + 'CONTEXT_OF_ITEMS')) | 
	 	'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(r)));
  END_ENTITY;

  ENTITY Styled_model_replication 
    SUBTYPE OF (Representation_item); 
      replicated_model : Styled_model; 
      source : Axis_placement; 
      target : geometric_mapping_target; 
  END_ENTITY;

  SUBTYPE_CONSTRAINT aa_representation_item_subtypes FOR Representation_item;
    ONEOF (Styled_element,
           Styled_model_replication);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.14 2009/04/23 09:59:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6279 - ISO/TS 10303-1631 Area 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3840
*)

SCHEMA Area_2d_arm;

	USE FROM Extended_basic_geometry_arm;	-- ISO/TS 10303-1667
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753

  ENTITY Circular_area
    SUBTYPE OF (Primitive_2d);
      centre : Cartesian_point;
      radius : Length_data_element;
  END_ENTITY;

  ENTITY Elliptic_area
    SUBTYPE OF (Primitive_2d);
      position    : Axis_placement_2d;
      semi_axis_1 : Length_data_element;
      semi_axis_2 : Length_data_element;
  END_ENTITY;

  ENTITY Polygonal_area
    SUBTYPE OF (Primitive_2d);
      bounds : LIST[3:?] OF UNIQUE Cartesian_point;
  END_ENTITY;

  ENTITY Primitive_2d
    ABSTRACT SUPERTYPE OF (ONEOF (Circular_area,
 Elliptic_area,
 Rectangular_area,
 Polygonal_area))
    SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Rectangular_area
    SUBTYPE OF (Primitive_2d);
      position : Axis_placement_2d;
      x        : Length_data_element;
      y        : Length_data_element;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.8 2012/10/11 05:49:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7876 - ISO/TS - 10303-1802 Assembly component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7313
*)

SCHEMA Assembly_component_arm;

USE FROM Component_grouping_arm;
USE FROM Assembly_shape_arm;

ENTITY Assembly_component
  SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence_shape);
DERIVE
  SELF\Item_shape.described_element : Assembly_component := SELF;
  assemblies : SET OF Product_view_definition := ac_get_assemblies(SELF);
  groups : SET OF Assembly_group_component := ac_get_groups(SELF);
  versions : SET OF Product_version := ac_get_versions(assemblies);
  product : SET OF Product := ac_get_products(versions);
INVERSE
  SELF\Product_occurrence.occurrence_contexts : SET[1:?] OF Assembly_component_relationship FOR related_view;
WHERE
  WR1 : NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) XOR ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(derived_from))) OR 
        NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) XOR ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from)));
  WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
  WR3 : SIZEOF(assemblies) = SIZEOF(versions);
  WR4 : SIZEOF(product) = 1;
  WR5 : (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1])) OR
         (SIZEOF(groups) = 0) OR 
         (ac_get_group_assemblies(groups) = assemblies));
END_ENTITY;

ENTITY Component_make_from_relationship
  SUBTYPE OF (View_definition_relationship);  
  SELF\View_definition_relationship.relating_view RENAMED reusable_component	: Assembly_component;
  SELF\View_definition_relationship.related_view RENAMED resultant_component	: Assembly_component;
WHERE
  WR1 : resultant_component <> reusable_component;
END_ENTITY;

ENTITY Physical_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;

ENTITY Thermal_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;

  FUNCTION ac_get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION ac_get_groups(input : Assembly_component) : SET OF Assembly_group_component;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      agc : SET OF Assembly_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF ('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        agc := agc + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      END_IF;
    END_REPEAT;
    RETURN (agc);
  END_FUNCTION;

  FUNCTION ac_get_group_assemblies(input : SET OF Assembly_group_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := [];
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      acr := input[i]\Assembly_component.occurrence_contexts;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION ac_get_versions(input : SET OF Product_view_definition) : SET OF Product_version;
    LOCAL
      pv : SET OF Product_version := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      pv := pv + input[i]\Product_view_definition.defined_version; 
    END_REPEAT;
    RETURN (pv);
  END_FUNCTION;

  FUNCTION ac_get_products(input : SET OF Product_version) : SET OF Product;
    LOCAL
      p : SET OF Product := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      p := p + input[i]\Product_version.of_product; 
    END_REPEAT;
    RETURN (p);
  END_FUNCTION;
  
  FUNCTION get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;

    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
        'STRUCTURED_LAYOUT_COMPONENT' IN
        TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;

    RETURN (pvd);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.63 2012/10/11 05:49:26 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8083 - ISO/TS 10303-1634 Assembly component placement requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7490
*)

SCHEMA Assembly_component_placement_requirements_arm;

USE FROM Assembly_module_with_interconnect_component_arm;	-- ISO/TS 10303-1643
REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740
REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765

  SUBTYPE_CONSTRAINT acpr_predefined_requirement_view_definition_subtypes FOR Predefined_requirement_view_definition;   
    (ONEOF (Assembly_spacing_requirement,
 	 Assembly_group_spacing_requirement,
 	 Item_restricted_requirement));
  END_SUBTYPE_CONSTRAINT;  
 
  TYPE restriction_basis_item = EXTENSIBLE GENERIC_ENTITY SELECT(
    Predefined_requirement_view_definition,
    Part_feature);
  END_TYPE;

  TYPE acpr_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (restriction_basis_item,
     Placement_group_requirement_definition);
  END_TYPE; 

  TYPE assembly_product_design_object_category = EXTENSIBLE ENUMERATION OF
    (assembly_component_category,
     assembly_module_component_category,
     assembly_module_component_terminal_category,
     assembly_module_macro_component_category,
     assembly_module_macro_component_join_terminal_category,
     bare_die_component_category,
     bare_die_component_terminal_category,
     buried_via_category,
     cable_component_category,
     component_feature_category,
     component_termination_passage_category,
     conductive_interconnect_element_with_pre_defined_transitions_category,
     cutout_category,
     cutout_edge_segment_category,
     dielectric_material_passage_category,
     embedded_physical_component_terminal_category,
     fiducial_category,
     fill_area_category,
     inter_stratum_feature_category,
     interconnect_component_interface_terminal_category,
     interconnect_component_join_terminal_category,
     interconnect_module_component_category,
     interconnect_module_component_stratum_based_terminal_category,
     interconnect_module_component_surface_feature_category,
     interconnect_module_component_terminal_category,
     interconnect_module_edge_category,
     interconnect_module_edge_segment_category,
     interconnect_module_macro_component_category,
     interconnect_module_macro_component_join_terminal_category,
     interface_access_material_removal_laminate_component_category,
     interface_access_stratum_feature_template_component_category,
     interface_component_category,
     interfacial_connection_category,
     internal_probe_access_area_category,
     laminate_component_category,
     minimally_defined_component_terminal_category,
     packaged_component_category,
     packaged_component_join_terminal_category,
     packaged_connector_component_category,
     packaged_connector_component_interface_terminal_category,
     physical_component_category,
     plated_passage_or_unsupported_passage_category,
     routed_interconnect_component_category,
     routed_physical_component_category,
     stratum_feature_category,
     via_category);
  END_TYPE;

  TYPE assembly_product_design_object_category_or_group = SELECT(
    assembly_product_design_object_category,
    Group);
  END_TYPE;    

  TYPE assembly_component_or_component_feature = SELECT(
    Assembly_component,
    Component_feature);
  END_TYPE;    

  TYPE assembly_spacing_type = EXTENSIBLE ENUMERATION OF
    (nearest_boundary,
     centroid,
     furthest_boundary);
  END_TYPE;

  ENTITY Assembly_group_spacing_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      dependent_group                                                     : Placement_group_requirement_definition;
      of_spacing_type                                                     : assembly_spacing_type;
      reference_group                                                     : Placement_group_requirement_definition;
      SELF\Predefined_requirement_view_definition.required_characteristic : Length_tolerance_characteristic;
   END_ENTITY;

  ENTITY Assembly_spacing_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      reference_design_object_category                                    : assembly_product_design_object_category_or_group;
      dependent_design_object_category                                    : assembly_product_design_object_category_or_group;
      SELF\Predefined_requirement_view_definition.required_characteristic : Length_tolerance_characteristic;
      of_spacing_type                                                     : assembly_spacing_type;
  END_ENTITY;

  ENTITY Component_group_assignment;
      associated_group   : Placement_group_requirement_definition;
      assigned_component : assembly_component_or_component_feature;
  END_ENTITY;

  ENTITY Component_placement_restriction_assignment;
      maximum_negative_component_height : OPTIONAL Length_tolerance_characteristic;
      maximum_positive_component_height : OPTIONAL Length_tolerance_characteristic;
      area                              : OPTIONAL Mounting_restriction_area;
      volume                            : OPTIONAL Mounting_restriction_volume;
      requirement                       : Item_restricted_requirement;
      components_permitted              : BOOLEAN;
      mounting_clearance                : OPTIONAL Length_tolerance_characteristic;
    WHERE
      WR1 : EXISTS(area) OR EXISTS(volume);
  END_ENTITY;

  ENTITY Item_restricted_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      basis : restriction_basis_item;
    WHERE
      WR1 : SELF :<>: basis;
  END_ENTITY;

  ENTITY Mounting_restriction_area
    SUBTYPE OF (Non_feature_shape_element);
      mounting_surface                     : Interconnect_module_component_surface_feature;
      SELF\Non_feature_shape_element.scope : Assembly_module_design_view;
    WHERE
      WR1 : (SIZEOF(SELF\Non_feature_shape_element.element_shape) = 0) OR
            (SIZEOF(QUERY(es <* SELF\Non_feature_shape_element.element_shape | 
             NOT ('CONSTRUCTION_GEOMETRY_ARM.CONSTRUCTIVE_GEOMETRY' IN TYPEOF(es))
                  )) = 0);      
  END_ENTITY;

  ENTITY Mounting_restriction_volume
    SUBTYPE OF (Non_feature_shape_element);
      mounting_surface                     : Interconnect_module_component_surface_feature;
      SELF\Non_feature_shape_element.scope : Assembly_module_design_view;
    INVERSE
      volume : non_feature_shape_model FOR associated_element;
  END_ENTITY;

  ENTITY Placement_group_requirement_definition
    SUBTYPE OF (Requirement_view_definition);
      design_specific_usage : STRING; 
	DERIVE
	    requirement_relationship : SET[0:?] OF requirement_view_definition_relationship :=
	    bag_to_set((QUERY(rvdr <* USEDIN (SELF, 'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP_ARM.'+
	    'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.PRIMARY') | (rvdr.relation_type = 'derived_from'))));
	
  		requirement: SET[0:?] OF Requirement_view_definition := get_acpr_rvd(requirement_relationship);
    INVERSE
      composition : SET [1:?] OF Component_group_assignment FOR associated_group;
	WHERE
   		WR1: EXISTS (requirement) AND (SIZEOF(requirement) >= 1);
        WR2: NOT EXISTS (SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Placement_group_area_assignment;
      placed_group : Placement_group_requirement_definition;
      area         : Mounting_restriction_area;
  END_ENTITY;

  ENTITY Placement_group_volume_assignment;
      placed_group : Placement_group_requirement_definition;
      volume       : Mounting_restriction_volume;
  END_ENTITY;

FUNCTION get_acpr_rvd(
	input : SET OF requirement_view_definition_relationship) : SET OF Requirement_view_definition; 
LOCAL
	rvd : SET[0:?] OF Requirement_view_definition := [];  --this gives us access to the information base
END_LOCAL;
	-- iterate over input
	REPEAT i := 1 to SIZEOF(input) by 1;
		rvd := rvd + input[i]\requirement_view_definition_relationship.secondary;
	END_REPEAT;

	RETURN(rvd);
END_FUNCTION;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.62 2014/02/06 17:48:57 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8420 - ISO/TS 10303-1636 Assembly module design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N8086
*)

SCHEMA Assembly_module_design_arm;

	USE FROM Altered_package_arm;	-- ISO/TS 10303-1601
	USE FROM Assembly_module_usage_view_arm;	-- ISO/TS 10303-1642
	USE FROM Bare_die_arm;	-- ISO/TS 10303-1650
	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721
	USE FROM Layered_interconnect_simple_template_arm;	-- ISO/TS 10303-1718

	SUBTYPE_CONSTRAINT physical_component_subtypes FOR Physical_component;
	    ONEOF (Bare_die_component,
		Packaged_component,
		Routed_interconnect_component,
		Routed_physical_component);
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT amd_physical_component_terminal_subtypes FOR Physical_component_terminal;
	    ONEOF (Bare_die_component_terminal,
		Minimally_defined_component_terminal,
		Packaged_component_join_terminal);
	END_SUBTYPE_CONSTRAINT;

 	TYPE assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT
 		(Bare_die_component_terminal,
     	Component_mounting_feature,
 		Packaged_component_join_terminal);
	END_TYPE;

	TYPE assembly_module_or_assembly_group_component =
		EXTENSIBLE GENERIC_ENTITY SELECT
		(Assembly_module_design_view);
	END_TYPE;

  ENTITY Assembly_connection_zone_position_relationship;
      associating_design_view_shape               : Geometric_model;
      associated_usage                            : Connection_zone_in_design_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
      associating_design_view                     : Assembly_module_design_view;
  END_ENTITY;

  ENTITY Assembly_module_design_view
    SUPERTYPE OF (ONEOF (Layered_assembly_panel_design_view, Layered_assembly_module_design_view))
    SUBTYPE OF (Assembly_definition, Part_design_view);
  WHERE
    WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Bare_die_component
    SUBTYPE OF (Physical_component, Single_instance);
      SELF\Definition_based_product_occurrence.derived_from : Bare_die;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Bare_die_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Bare_die_terminal;
      SELF\Component_feature.associated_component : Bare_die_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Component_external_reference;
      design_owner          : STRING;
      part_number           : STRING;
      revision_code         : STRING;
      product_definition_id : STRING;
      reference_designation : STRING;
  END_ENTITY;

  ENTITY Component_feature_external_reference;
      name                 : STRING;
      associated_component : Component_external_reference;
    UNIQUE
      UR1 : associated_component,
 name;
  END_ENTITY;

  ENTITY Component_mounting_clearance_relationship;
      feature_relationship : Component_feature_relationship;
      mounting_clearance   : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Component_mounting_feature
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.definition : Part_mounting_feature;
  END_ENTITY;

  ENTITY Component_overlap_relationship;
      previously_placed_component : Next_assembly_usage;
      current_component           : Next_assembly_usage;
      added_clearance             : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Layered_assembly_panel_design_view
    SUBTYPE OF (Assembly_module_design_view);
  END_ENTITY;

  ENTITY Minimally_defined_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition : Part_terminal_external_reference;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Movable_packaged_component_join_terminal
    SUBTYPE OF (Packaged_component_join_terminal);
      wire_terminal_length      : OPTIONAL Length_tolerance_characteristic;
    WHERE
      WR1 : SIZEOF(QUERY(pt <* SELF\Component_feature.definition\Packaged_part_terminal.terminal_of_package |
            NOT('PACKAGE_ARM.WIRE_TERMINAL' IN TYPEOF (pt)))) = 0;
  END_ENTITY;

  ENTITY Packaged_component
    SUBTYPE OF (Physical_component, Single_instance);
      SELF\Definition_based_product_occurrence.derived_from : Packaged_part;
      selected_package_alternate               : OPTIONAL Altered_package;
    INVERSE
      access_mechanism : SET[0:?] OF packaged_component_join_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Packaged_component_join_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Packaged_part_join_terminal;
      SELF\Component_feature.associated_component : Packaged_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Layered_assembly_module_design_view
    SUBTYPE OF (Assembly_module_design_view);
      SELF\Part_design_view.usage_view : Layered_assembly_module_usage_view;
  END_ENTITY;

  ENTITY Routed_interconnect_component
    SUBTYPE OF (Physical_component);
      routed_centreline_shape : Path_area_with_parameters;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Routed_physical_component
    SUBTYPE OF (Physical_component);
      routed_centreline_shape : Path_area_with_parameters;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.35 2014/02/06 00:07:40 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8422 - ISO/TS 10303-1642 Assembly module usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N8092
*)

SCHEMA Assembly_module_usage_view_arm;

	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Packaged_connector_model_arm;	-- ISO/TS 10303-1708


  ENTITY Assembly_module_interface_terminal
    SUBTYPE OF (Assembly_module_terminal);
  END_ENTITY;

  ENTITY Assembly_module_terminal
    SUPERTYPE OF (assembly_module_interface_terminal ANDOR
 Layered_assembly_module_terminal)
    SUBTYPE OF (Part_terminal);
      SELF\Part_feature.associated_definition : Assembly_module_usage_view;
      reference_terminal                      : OPTIONAL Packaged_part_interface_terminal;
      related_connector                       : OPTIONAL Next_assembly_usage;
      SELF\Definitional_shape_element.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;
    WHERE
      WR1 : NOT EXISTS(related_connector) OR
            (SELF\Shape_element.containing_shape.described_element =
             related_connector\Product_occurrence_definition_relationship.related_view);
      WR2 : NOT EXISTS(related_connector) OR EXISTS(related_connector.location_indicator);
      WR3 : EXISTS(related_connector) OR
            (SELF\Shape_element.containing_shape.described_element =
             SELF\Part_feature.associated_definition);
  END_ENTITY;

  ENTITY Assembly_module_usage_view
    SUPERTYPE OF (Layered_assembly_module_usage_view)
    SUBTYPE OF (Part_usage_view);
      implemented_function              : OPTIONAL Functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET[0:?] OF assembly_module_terminal FOR associated_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Layered_assembly_module_terminal
    SUBTYPE OF (Assembly_module_terminal);
      SELF\Part_feature.associated_definition : Layered_assembly_module_usage_view;
  END_ENTITY;

  ENTITY Layered_assembly_module_usage_view
    SUBTYPE OF (Assembly_module_usage_view);
      maximum_negative_component_height : OPTIONAL Length_data_element;
      maximum_positive_component_height : OPTIONAL Length_data_element;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.38 2013/12/16 22:41:55 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8098 - ISO/TS 10303-1643 Assembly module with interconnect component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7505
*)

SCHEMA Assembly_module_with_interconnect_component_arm;

	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Interconnect_module_usage_view_arm;	-- ISO/TS 10303-1686
	USE FROM Interface_component_arm;	-- ISO/TS 10303-1691

 	TYPE amwic_assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembled_feature_select WITH   
    (Interconnect_component_join_terminal,
     Interconnect_component_interface_terminal,
     Interconnect_module_component_surface_feature,
     Interconnect_module_component_terminal);
  END_TYPE;

 	TYPE conductive_interconnect_terminal_or_interconnect_component_join_terminal = SELECT
 		(Interconnect_component_interface_terminal,
     	Interconnect_component_join_terminal,
     	Movable_packaged_component_join_terminal);
	END_TYPE;

  ENTITY Design_view_terminal_component_shape_relationship;
      associating_component_shape          : Geometric_model;
      source_placement                     : Axis_placement;
      associated_usage                     : conductive_interconnect_terminal_or_interconnect_component_join_terminal;
      associated_terminal_shape_definition : Geometric_model;
      associated_usage_placement           : Axis_placement;
  END_ENTITY;

  ENTITY Interconnect_component_interface_terminal
    SUBTYPE OF (Physical_component_interface_terminal);
      connection : OPTIONAL Connection_zone_in_design_view;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Interconnect_component_join_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Definitional_shape_element.connection_area          : OPTIONAL SET[1:1] OF Connection_zone_in_design_view;
      SELF\Component_feature.associated_component : Physical_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
        WR2: NOT EXISTS(SELF\Component_feature.definition) OR
             NOT( 'FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF\Component_feature.definition));
  END_ENTITY;

  ENTITY Interconnect_module_component
    SUBTYPE OF (Physical_component, Single_instance);
      SELF\Definition_based_product_occurrence.derived_from : Layered_interconnect_module_usage_view;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Interconnect_module_component_surface_feature
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.definition : Interconnect_module_surface_feature;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Interconnect_module_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Interconnect_module_terminal;
      SELF\Component_feature.associated_component : Interconnect_module_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.9 2012/10/12 15:48:48 lothartklein Exp $
   ISO TC184/SC4/WG12 N7897 - ISO/CD-TS - 10303-1808 Assembly shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7334
*)

SCHEMA Assembly_shape_arm;

USE FROM Item_definition_structure_arm;  --        ISO/TS 10303-1345
USE FROM Part_shape_arm; 

TYPE characterized_product_definition = SELECT (
    Product_view_definition, 
    View_definition_relationship,
    Multi_level_reference_designator);
END_TYPE;

TYPE internal_or_reflected_shape_element = SELECT (
    Shape_element,
    identifier);
END_TYPE;

TYPE multi_or_next_assembly_usage_occurrence = SELECT (
    Multi_level_reference_designator,
    Next_assembly_usage);
END_TYPE;

ENTITY Assembly_shape
  SUBTYPE OF (Part_shape);
  SELF\Item_shape.described_element : Assembly_definition;
END_ENTITY;  

ENTITY Component_path_shape_element
    SUBTYPE OF (Part_shape_element);
    location : multi_or_next_assembly_usage_occurrence;
    component_shape_element : internal_or_reflected_shape_element;
  UNIQUE
    UR1 : location, component_shape_element;
  WHERE
    WR1: NOT('ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE' IN TYPEOF(location)) OR
      EXISTS(location\Assembly_component_relationship.location_indicator); 
END_ENTITY;

ENTITY Part_occurrence_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Definition_based_product_occurrence;
END_ENTITY;  

END_SCHEMA;
(*
$Id: arm.exp,v 1.32 2012/10/12 16:18:31 lothartklein Exp $
ISO TC184/SC4/WG12 N7729 - ISO/TS 10303-1026 Assembly structure - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6111
*) 


SCHEMA Assembly_structure_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019
USE FROM Product_view_definition_reference_arm; -- ISO/TS 10303-1738

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054

TYPE product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

ENTITY Assembly_component_relationship
  ABSTRACT SUPERTYPE OF (ONEOF (Multi_level_reference_designator,
  								Next_assembly_usage,
                                Promissory_usage,
                                Component_upper_level_identification))
  SUBTYPE OF (Product_occurrence_definition_relationship);
  location_indicator : OPTIONAL STRING;
  quantity : OPTIONAL Value_with_unit;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship;
  WR2: SELF\Product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\Product_occurrence_definition_relationship.relating_view;
  WR3: SELF\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view , 'ASSEMBLY_STRUCTURE_ARM.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE', 'ASSEMBLY_STRUCTURE_ARM.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;

ENTITY Multi_level_reference_designator
  SUBTYPE OF (Assembly_component_relationship);
  location : LIST[1:?] OF UNIQUE Next_assembly_usage;
DERIVE
  SELF\Product_occurrence_definition_relationship.relating_view RENAMED root_node 
     : Product_view_definition := location[1]\Product_occurrence_definition_relationship.relating_view;
  SELF\Product_occurrence_definition_relationship.related_view RENAMED leaf_node 
    : product_view_definition_or_reference := location[HIINDEX(location)]\Product_occurrence_definition_relationship.related_view;
UNIQUE
  UR1 : location;
END_ENTITY;

ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

ENTITY Product_occurrence_definition_relationship
  ABSTRACT SUPERTYPE;
  relating_view : product_view_definition_or_reference;
  related_view : product_view_definition_or_reference;
END_ENTITY;

ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR Assembly_component_relationship;
  ABSTRACT SUPERTYPE;
  TOTAL_OVER (Component_upper_level_identification, 
  			  Multi_level_reference_designator,
              Next_assembly_usage, 
              Promissory_usage);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Assembly_structure_arm
(*
   $Id: arm.exp,v 1.63 2012/10/28 17:41:23 lothartklein Exp $
   ISO TC184/SC4/WG12 N7942 - ISO/TS 10303-1649 Assembly technology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7379
*)


SCHEMA Assembly_technology_arm;
--	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Component_feature_arm;
	USE FROM Requirement_assignment_arm;
	USE FROM Physical_component_feature_arm;

	USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
	USE FROM Product_view_definition_reference_arm;	-- ISO/TS 10303-1738

 	TYPE at_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH
		(Assembly_bond_definition);
	END_TYPE;

	TYPE at_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Assembly_bond_definition);
	END_TYPE;

  TYPE at_property_assignment_select = SELECT BASED_ON property_assignment_select WITH
    (Assembly_bond_definition);
  END_TYPE;

	TYPE at_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH
	    (Assembly_joint);
	END_TYPE;

  TYPE bond_feature = EXTENSIBLE GENERIC_ENTITY SELECT (
    Physical_component_feature); -- added anew
    -- Connection_zone_in_layout_template,
    -- Connection_zone_in_usage_view,
    -- Default_attachment_size_based_land_physical_template,
    -- Feature_definition_with_connection_area,
    -- Part_feature);
  END_TYPE;


  TYPE degree_of_freedom = ENUMERATION OF
    (x,
     y,
     z,
     u,
     v,
     w);
  END_TYPE;
(*
	SUBTYPE_CONSTRAINT process_specification_subtypes FOR Process_specification;
		(ONEOF (Assembly_technology_specification,
		Fabrication_technology_specification));
	END_SUBTYPE_CONSTRAINT;
*)
  ENTITY Assembled_with_bonding
    SUBTYPE OF (Assembly_joint);
      default_bond_definition : Assembly_bond_definition;
(*
    WHERE
      WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
*)
  END_ENTITY;

  ENTITY Assembled_with_fasteners
    SUBTYPE OF (Assembly_joint);
--      SELF\Assembly_joint.associated_assembly : Assembly_group_component;
  END_ENTITY;

  ENTITY Assembly_bond_definition;
      name                                    : STRING;
--      analytical_assembly_bond_representation : OPTIONAL SET[1:?] OF Analytical_model_application;
      associated_definition                   : Product_view_definition_reference_with_local_representation;
      bonded_feature_1                        : OPTIONAL bond_feature;
      bonded_feature_2                        : OPTIONAL bond_feature;
    INVERSE
      default_shape : SET[0:1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
	  bond_category	: External_source_identification FOR item;
	  bond_material : material_identification FOR items;
    UNIQUE
      UR1 : name;
      UR2 : associated_definition;
    WHERE
      WR1 : bonded_feature_1 <> bonded_feature_2;
      WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (bond_material);
      WR3 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF(bonded_feature_2)));
      WR4 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF(bonded_feature_2)));
      WR5 : NOT((('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN
        TYPEOF (bonded_feature_1)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2)))
        XOR
        (('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN TYPEOF(bonded_feature_2)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2))));
  END_ENTITY;

  ENTITY Assembly_joint
    SUPERTYPE OF (Assembled_with_fasteners ANDOR
 Assembled_with_bonding)
    SUBTYPE OF (Component_feature_joint);
      SELF\Component_feature_joint.feature_1 RENAMED assembly_feature_1             : Physical_component_feature; -- assembled_feature_select;
      SELF\Component_feature_joint.feature_2 RENAMED assembly_feature_2             : Physical_component_feature; -- assembled_feature_select;
      SELF\Component_feature_joint.associated_definition RENAMED associated_assembly : Assembly_shape; -- assembly_module_or_assembly_group_component;
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
        associated_assembly;
    WHERE
      WR1 : assembly_feature_1 :<>: assembly_feature_2;
      WR2 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1)) AND
             (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <>
             associated_assembly\Item_shape.described_element)) = 0));
      WR3 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2)) AND
             (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <>
             associated_assembly\Item_shape.described_element)) = 0));
  END_ENTITY;
(*
  ENTITY Assembly_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;
*)
  ENTITY Component_mating_constraint_condition;
      name                          : STRING;
      constraining_joint            : SET[1:3] OF Assembly_joint;
      constrained_degree_of_freedom : SET[1:6] OF degree_of_freedom;
      of_context                    : Part_view_definition; -- Part_design_view;
    UNIQUE
      UR1 : name,
 of_context;
  END_ENTITY;

  ENTITY Connection_zone_based_assembly_joint
    SUBTYPE OF (Assembly_joint);
      zone_1 : Connection_zone; -- Connection_zone_in_design_view;
      zone_2 : Connection_zone; -- Connection_zone_in_design_view;
    WHERE
      WR1 : zone_1 :<>: zone_2;
  END_ENTITY;

  ENTITY Default_assembly_bond_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : Assembly_bond_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
      WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'))=0;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.21 2013/10/09 17:28:34 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N7948 - ISO/TS 10303-1132 Associative text - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7385
*)

SCHEMA Associative_text_arm;

USE FROM Appearance_assignment_arm; -- ISO/TS 10303-1136

USE FROM Colour_arm;          -- ISO/TS 10303-1002

USE FROM Text_appearance_arm; -- ISO/TS 10303-1136

  TYPE at_appearance_select = SELECT BASED_ON appearance_select  WITH
    (Text_style);
  END_TYPE; 

  TYPE at_composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON composite_text_element_select WITH (
          Annotation_text);
  END_TYPE; 
  
 
  TYPE text_or_composite_text = EXTENSIBLE GENERIC_ENTITY SELECT
    (Annotation_text,
    Composite_presentable_text,
    Defined_character_glyph,
    Text_literal);
  END_TYPE; 

  TYPE text_string_representation_item_select = EXTENSIBLE GENERIC_ENTITY SELECT(
    Annotation_text,
    Composite_presentable_text,
    Defined_character_glyph,
    Text_literal);
  END_TYPE;

  ENTITY Annotation_curve
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Annotation_element);
      annotation_curve_type       : OPTIONAL STRING;
      SELF\Styled_element.element : Curve;
  END_ENTITY;

  ENTITY Annotation_element 
    SUPERTYPE OF(ONEOF (Annotation_text_occurrence, Annotation_curve))                        
    SUBTYPE OF (Detailed_geometric_model_element, Styled_element);
  END_ENTITY;

  ENTITY Annotation_text
    SUBTYPE OF (Detailed_geometric_model_element);
      replicated_model : Text_string_representation;
      source           : Axis_placement;
      target           : Axis_placement;
  END_ENTITY;

  ENTITY Dimension_text
    SUBTYPE OF (Annotation_text_occurrence);
    WHERE
      WR1: name IN ['dimension value', 'tolerance value', 'unit text', 'prefix text', 'suffix text'];
  END_ENTITY;

  ENTITY Annotation_text_occurrence 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element RENAMED text : text_or_composite_text;
  END_ENTITY;

  ENTITY Text_string_representation
    SUBTYPE OF (Styled_model);
    SELF\Representation.items : SET [1:1] OF text_string_representation_item_select;
  END_ENTITY; 

  ENTITY Text_style;  
    font_size_scale  : REAL; 
    mirror_placement : OPTIONAL Axis_placement;
    text_colour      : Colour; 
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.8 2012/11/09 21:40:58 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N8253 - ISO/TS 10303-1801 B_spline_geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7190
*)

SCHEMA B_spline_geometry_arm; 


USE FROM Basic_geometry_arm; -- ISO/TS 10303-1652

TYPE knot_specification = ENUMERATION OF
  (bezier,
   quasi_uniform,
   uniform);
 END_TYPE;  

TYPE parameter_value = REAL;
END_TYPE;

ENTITY B_spline_curve
  ABSTRACT SUPERTYPE OF (ONEOF(Curve_with_explicit_knots, Curve_with_implicit_knots) 
          ANDOR Rational_b_spline_curve)
  SUBTYPE OF (Bounded_curve);        
  degree : INTEGER;
  control_points : LIST [2:?] OF Cartesian_point;
  closed : LOGICAL;
 WHERE
  WR1 : ('B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('B_SPLINE_GEOMETRY_ARM.CURVE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));
END_ENTITY;

ENTITY B_spline_surface
  ABSTRACT SUPERTYPE OF (ONEOF(Surface_with_explicit_knots, Surface_with_implicit_knots) 
          ANDOR Rational_b_spline_surface)
  SUBTYPE OF (Bounded_surface);        
  u_degree : INTEGER;
  v_degree : INTEGER;
  control_points : LIST [2:?] OF LIST [2:?] OF Cartesian_point;
  u_closed : LOGICAL;
  v_closed : LOGICAL;
 WHERE
  WR1 : ('B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));

END_ENTITY;


ENTITY Curve_with_explicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_multiplicities : LIST [2:?] OF INTEGER;
   knot_values : LIST [2:?] OF parameter_value;
 WHERE
  WR1: SIZEOF(knot_multiplicities) = SIZEOF(knot_values);
END_ENTITY;

ENTITY Curve_with_implicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_type : knot_specification;
 END_ENTITY;

ENTITY Rational_b_spline_curve
 SUBTYPE OF (B_spline_curve);
  weight_values : LIST [2:?]  OF REAL;
 WHERE 
    WR1: SIZEOF(weight_values) = SIZEOF(SELF\B_spline_curve.control_points);
    WR2: positive_curve_weights(SELF);
END_ENTITY;

ENTITY Rational_b_spline_surface
 SUBTYPE OF (B_spline_surface);
  weight_values : LIST [2:?] OF LIST [2:?] OF REAL;
 WHERE 
    WR1: (SIZEOF(weight_values) =
                     SIZEOF(SELF\B_spline_surface.control_points))
           AND (SIZEOF(weight_values[1]) =
                  SIZEOF(SELF\B_spline_surface.control_points[1]));
     WR2: positive_surface_weights(SELF);
END_ENTITY;



ENTITY Surface_with_explicit_knots
 SUBTYPE OF (B_spline_surface);
   u_knot_multiplicities : LIST [2:?] OF INTEGER;
   u_knot_values : LIST [2:?] OF parameter_value;
   v_knot_multiplicities : LIST [2:?] OF INTEGER;
   v_knot_values : LIST [2:?] OF parameter_value;
  WHERE
  WR1: SIZEOF(u_knot_multiplicities) = SIZEOF(u_knot_values);
  WR2: SIZEOF(v_knot_multiplicities) = SIZEOF(v_knot_values);
 END_ENTITY;

ENTITY Surface_with_implicit_knots
 SUBTYPE OF (B_spline_surface);
   knot_type : knot_specification;
 END_ENTITY;

FUNCTION positive_curve_weights(bsc: Rational_b_spline_curve) : BOOLEAN;
   LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT i := 1 TO SIZEOF(bsc.weight_values);
     IF bsc.weight_values[i] <= 0.0  THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

FUNCTION positive_surface_weights(bss: Rational_b_spline_surface) : BOOLEAN;
   LOCAL
     result        : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT i := 1 TO SIZEOF(bss.weight_values);
     REPEAT j := 0 TO SIZEOF(bss.weight_values[1]);
       IF (bss.weight_values[i][j] <= 0.0)  THEN
         result := FALSE;
         RETURN(result);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.45 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8116 - ISO/TS 10303-1650 Bare die - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7520
*)

SCHEMA Bare_die_arm;

--	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
	USE FROM Non_feature_shape_element_arm; 

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Part_feature_function_arm;	-- ISO/TS 10303-1712
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

    TYPE bd_material_item_select = SELECT BASED_ON material_item_select WITH
		(Bare_die_terminal,
		 Bare_die_template_terminal);
	END_TYPE;

	TYPE derived_zone_shape_class = ENUMERATION OF(
		area,
		edge);
	END_TYPE;
	
  ENTITY Bare_die
    SUBTYPE OF (Part_usage_view);
      least_material_condition_centroid_location   : OPTIONAL Cartesian_point;
      maximum_height_above_seating_plane           : OPTIONAL Length_data_element;
      maximum_material_condition_centroid_location : OPTIONAL Cartesian_point;
      implemented_function                         : Functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET[2:?] OF minimally_defined_bare_die_terminal FOR associated_definition;
      die_seating_plane : non_feature_shape_element FOR scope;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4 : 'NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN TYPEOF(die_seating_plane);
  END_ENTITY;

  ENTITY Bare_die_bottom_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Bare_die_edge_segment_surface
    SUBTYPE OF (Bare_die_surface);
      composed_surface                        : Bare_die_edge_surface;
      start_vertex                            : Edge_segment_vertex;
      end_vertex                              : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
      WR2 : SELF\Shape_element.containing_shape :=: composed_surface\Shape_element.containing_shape;
  END_ENTITY;

  ENTITY Bare_die_edge_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Bare_die_surface
    ABSTRACT SUPERTYPE OF (ONEOF (Bare_die_top_surface,
 Bare_die_bottom_surface,
 Bare_die_edge_segment_surface,
 Bare_die_edge_surface))
    SUBTYPE OF (Part_mounting_feature);
			SELF\Part_feature.associated_definition : Bare_die;    
  END_ENTITY;

  ENTITY Bare_die_terminal
    SUBTYPE OF (Minimally_defined_bare_die_terminal, Placed_feature);
      SELF\Placed_feature.definition : Bare_die_template_terminal;
  END_ENTITY;

  ENTITY Bare_die_template_terminal
    SUBTYPE OF (Part_feature_template_definition, Definitional_shape_element);
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
      seating_plane_zone                 : OPTIONAL Connection_zone_bare_die_interface_plane_relationship;
   INVERSE
	  material : material_identification FOR items;      
   WHERE  
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (material);
  END_ENTITY;

  ENTITY Bare_die_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Bare_die_surface;
      SELF\Shape_element_relationship.related  : Bare_die_terminal;
  END_ENTITY;

  ENTITY Bare_die_top_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Connection_zone_bare_die_interface_plane_relationship;
      interface_plane          : Seating_plane;
      mating_zone              : Connection_zone_in_usage_view;
      derived_zone             : Connection_zone_in_usage_view;
      derived_zone_shape_class : derived_zone_shape_class;
    INVERSE
      associated_bare_die_terminal : SET[0:1] OF bare_die_template_terminal FOR seating_plane_zone;
    UNIQUE
      UR1 : interface_plane,
 mating_zone;
  END_ENTITY; 

  ENTITY Guided_wave_bare_die_terminal
    SUBTYPE OF (Minimally_defined_bare_die_terminal);
  END_ENTITY;

  ENTITY Minimally_defined_bare_die_terminal
    SUPERTYPE OF (guided_wave_bare_die_terminal ANDOR
 Bare_die_terminal)
    SUBTYPE OF (Part_terminal);
      SELF\Part_feature.associated_definition : Bare_die;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.25 2012/10/11 05:49:08 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7825 - ISO/TS 10303-1651 Basic curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N77388
*)

SCHEMA Basic_curve_arm;

USE FROM Basic_geometry_arm;-- ISO/TS 10303-1652
USE FROM External_item_identification_assignment_arm;-- ISO/TS 10303-1128

SUBTYPE_CONSTRAINT curve_subtypes FOR Bounded_curve;         
  ONEOF (Composite_curve, Trimmed_curve);    
END_SUBTYPE_CONSTRAINT;

TYPE curve_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  

TYPE closed_curve = EXTENSIBLE GENERIC_ENTITY SELECT
  (Circle,
   Closed_composite_curve);
END_TYPE;

ENTITY Closed_composite_curve
  SUBTYPE OF (Composite_curve);
END_ENTITY;
  
ENTITY Composite_curve
  SUBTYPE OF (Bounded_curve);
  curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
END_ENTITY;

ENTITY Composite_curve_segment;
  transition   : curve_transition_code;
  same_sense   : BOOLEAN;
  segment_curve : Bounded_curve;
INVERSE
  using_curves : SET[1:?] OF Composite_curve FOR curve_segment;
END_ENTITY;

ENTITY Trimmed_curve
  SUBTYPE OF (Bounded_curve);
  basis_curve : Curve;
  start_point : Cartesian_point;
  end_point : Cartesian_point;
END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.7 2012/10/11 05:49:04 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7951 - ISO/TS 10303-1773 Basic data representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6216
*)
SCHEMA Basic_data_representation_arm;

USE FROM Extended_date_arm; -- ISO/TS 10303-1776

USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006

  ENTITY Boolean_representation_item
    SUBTYPE OF (Representation_item);
      the_value : BOOLEAN;
  END_ENTITY;

  ENTITY Compound_representation_item 
    ABSTRACT SUPERTYPE OF (ONEOF (Sequence_representation_item, Set_representation_item)) 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 

  ENTITY Date_time_representation_item
    SUBTYPE OF (Representation_item);
      the_value : date_or_date_time_select;
  END_ENTITY; 

  ENTITY Integer_representation_item
    SUBTYPE OF (Representation_item);
      the_value : INTEGER;
  END_ENTITY;

  ENTITY Logical_representation_item
    SUBTYPE OF (Representation_item);
      the_value : LOGICAL;
  END_ENTITY;

  ENTITY Rational_representation_item
    SUBTYPE OF (Representation_item);
      numerator   : INTEGER;
      denominator : INTEGER;
  END_ENTITY;

  ENTITY Real_representation_item
    SUBTYPE OF (Representation_item);
      the_value   : REAL;
  END_ENTITY;

  ENTITY Sequence_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : LIST OF Representation_item;
  END_ENTITY;

  ENTITY Set_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : SET OF Representation_item;
  END_ENTITY;

  SUBTYPE_CONSTRAINT representation_item_subtypes FOR Representation_item; 
	(ONEOF (Boolean_representation_item,
	  Compound_representation_item,
      Date_time_representation_item,
      Integer_representation_item,
      Logical_representation_item,
      Rational_representation_item,
      Real_representation_item));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
  $Id: arm.exp,v 1.13 2012/11/09 21:40:57 thomasrthurman Exp $
  ISO TC184/SC4/WG12 N8256 - ISO/TS 10303-1323 Basic geometric topology - EXPRESS ARM
  Supersedes ISO TC184/SC4/WG12 N6872
*)

SCHEMA Basic_geometric_topology_arm;

USE FROM Basic_geometry_arm; -- ISO/TS 10303-1652

USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005

ENTITY Edge_curve
  SUBTYPE OF (Detailed_geometric_model_element, Edge);
    edge_geometry : Curve;
    same_sense    : BOOLEAN;
END_ENTITY;

ENTITY Face_surface
  SUBTYPE OF(Detailed_geometric_model_element, Face);
    face_geometry :  Surface;
    same_sense    :  BOOLEAN;
END_ENTITY;

ENTITY Poly_loop
  SUBTYPE OF (Detailed_geometric_model_element,Loop);
    polygon : LIST [3:?] OF UNIQUE cartesian_point;
END_ENTITY;
  
ENTITY Vertex_point
  SUBTYPE OF (Detailed_geometric_model_element, Vertex);
    vertex_position : Cartesian_point;
END_ENTITY;

END_SCHEMA;

(*
$Id: arm.exp,v 1.25 2012/10/11 05:49:04 liutkuviene Exp $
ISO TC184/SC4/WG12 N7828 - ISO/TS 10303-1652 Basic geometry - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7193
*) 

SCHEMA Basic_geometry_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

ENTITY Bounded_curve
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Curve);
END_ENTITY;

ENTITY Bounded_surface
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Surface);
END_ENTITY;

ENTITY Circle
   SUBTYPE OF (Conic);
   radius   : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Conic
   SUPERTYPE OF (ONEOF(Circle, Ellipse, Hyperbola, Parabola))
   SUBTYPE OF (Curve);
   position: Axis_placement;
END_ENTITY;

 ENTITY  Conical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
WHERE
   WR1: radius >= 0.0;
END_ENTITY;


ENTITY Curve
  SUPERTYPE OF (ONEOF(Conic, Line))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Cylindrical_surface
   SUBTYPE OF (Surface);
    position : Axis_placement_3d;
   radius : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Ellipse
   SUBTYPE OF(Conic);
   first_semi_axis: length_measure;
   second_semi_axis: length_measure;
WHERE
   WR1: first_semi_axis > 0.0;
   WR2: first_semi_axis > 0.0;
END_ENTITY;
 
ENTITY Extruded_surface
   SUBTYPE OF (Swept_surface);
   extrusion_axis      : Direction;
END_ENTITY;

ENTITY Hyperbola
   SUBTYPE OF(Conic);
   semi_axis: length_measure;
   imaginary_semi_axis: length_measure;
WHERE
   WR1: semi_axis > 0.0;
   WR2: imaginary_semi_axis > 0.0;
END_ENTITY;


ENTITY Line
  SUBTYPE OF (Curve);
   point: Cartesian_point;
   line_direction: Direction;
END_ENTITY;

ENTITY Parabola
   SUBTYPE OF(Conic);
   focal_distance: length_measure;
WHERE
   WR1: focal_distance <> 0.0;
END_ENTITY;

ENTITY Plane
  SUBTYPE OF (Surface);
  position: Axis_placement_3d;
END_ENTITY;

ENTITY Point_on_curve
  SUBTYPE OF (Point);
  supporting_curve : Curve;
END_ENTITY;

ENTITY Point_on_surface
  SUBTYPE OF (Point);
  supporting_surface : Surface;
END_ENTITY;

ENTITY Spherical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius   : length_measure;
WHERE
    WR1: radius > 0.0;
END_ENTITY;
 
 
ENTITY Surface
  SUPERTYPE OF (ONEOF(Conical_surface, Cylindrical_surface, Plane, Spherical_surface, Swept_surface, Toroidal_surface))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Surface_of_revolution
  SUBTYPE OF (Swept_surface);
      axis_direction : Direction;
      axis_point :     Cartesian_point;
END_ENTITY;

ENTITY Swept_surface
   SUPERTYPE OF (ONEOF(Extruded_surface, Surface_of_revolution))
   SUBTYPE OF (Surface);
   swept_curve : Curve;
END_ENTITY;


ENTITY Toroidal_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius : length_measure;
   minor_radius : length_measure;
WHERE
    WR1: radius > 0.0;
    WR2: minor_radius > 0.0;
END_ENTITY;
 
SUBTYPE_CONSTRAINT alternate_geometry_items FOR Detailed_geometric_model_element;
  ONEOF (Direction,
         Axis_placement,
         Cartesian_transformation_2d,
         Cartesian_transformation_3d,
         Curve,
         Surface);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT point_subtypes FOR Point;
  ONEOF (Cartesian_point,
         Point_on_curve,
         Point_on_surface);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Basic_geometry_arm
(*
   $Id: arm.exp,v 1.67 2012/10/11 05:49:06 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7957 - ISO/TS 10303-1654 Characteristic - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7394
*)

SCHEMA Characteristic_arm;
  USE FROM Basic_data_representation_arm;  -- ISO/TS 10303-1773
  USE FROM Document_assignment_arm;	-- ISO/TS 10303-1122
  USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106
  USE FROM External_library_arm; -- ISO/TS 10303-1778
  USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
  USE FROM External_properties_arm;  -- ISO/TS 10303-1129 LK
  USE FROM Property_assignment_arm; -- ISO/TS 10303-1030
  REFERENCE FROM Support_resource_arm(bag_to_set); 
  
  REFERENCE FROM Qualified_measure_arm(pre_defined_type_qualifiers); -- ISO/CD-TS 10303-1782  	
  
  TYPE characteristic = SELECT
    (String_representation_item,
    Numerical_item_with_unit,
    Value_list,
    Value_set);
  END_TYPE;

  TYPE characteristic_data_table_cell = SELECT ( 
    Null_representation_item, 
    String_representation_item, 
    Numerical_item_with_global_unit,
    Numerical_item_with_unit, 
    Value_list, 
    Value_set); 
  END_TYPE; 

  TYPE c_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
    (Property_value_representation);
  END_TYPE; 
  
  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

  TYPE scalar_or_coordinated_characteristics = SELECT
    (Property_value_representation,
     characteristic);
  END_TYPE;

  ENTITY Characteristic_data_table_header_usage 
    SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Characteristic_data_table_header;
    SELF\Property_definition_representation.used_representation : Characteristic_data_table_representation;
  END_ENTITY;

  ENTITY Characteristic_data_table
    SUBTYPE OF (Representation_item);
      property_value : LIST[1:?] OF Characteristic_data_table_row;
    WHERE
      WR1: SIZEOF(QUERY( pv <* property_value |
                  NOT (SIZEOF(pv.cell) = SIZEOF(property_value[1].cell))
                  )) = 0;
  END_ENTITY;

  ENTITY Characteristic_data_table_representation
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[1:1] OF Characteristic_data_table;
  INVERSE
    header : Characteristic_data_table_header_usage FOR used_representation;      
  END_ENTITY;

  ENTITY Characteristic_data_table_row
    SUBTYPE OF (Representation_item);
      cell : LIST [1:?] OF characteristic_data_table_cell;
  END_ENTITY;

  ENTITY Characteristic_data_column_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      table_header_usage : Characteristic_data_table_header_decomposition FOR related;  
  END_ENTITY;

  ENTITY Characteristic_data_table_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      column : SET [2:?] OF Characteristic_data_table_header_decomposition FOR relating;    
  END_ENTITY;

  ENTITY Characteristic_data_column_header_link
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating RENAMED precedent : Characteristic_data_column_header;
      SELF\Independent_property_relationship.related RENAMED subsequent : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'sequence'; 
    UNIQUE
      UR1 : precedent, subsequent;
    WHERE
      WR1: subsequent <> precedent;
  END_ENTITY; 

  ENTITY Characteristic_data_table_header_decomposition
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_table_header;
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'decomposition';
  END_ENTITY;

  ENTITY Externally_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
      external_source : External_source;
    WHERE
      WR1: NOT(name IN pre_defined_type_qualifiers);
  END_ENTITY;

  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('EXTENDED_MEASURE_REPRESENTATION_ARM.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'maximum';      
  END_ENTITY;

  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'minimum';      
  END_ENTITY;

  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.items[1]\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'nominal';
  END_ENTITY;

  ENTITY Null_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 

  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;

  ENTITY Qualified_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:4] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: valid_qualified_tolerance_characteristic(SELF);
  END_ENTITY;

  ENTITY Range_characteristic
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
    WHERE
      WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
      WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
      WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;

  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'VALUE_WITH_UNIT_EXTENSION_ARM.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;

  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  END_ENTITY;

  ENTITY Tolerance_characteristic
    ABSTRACT SUPERTYPE OF ((ONEOF (
      Maximum_tolerance_characteristic,
      Minimum_tolerance_characteristic,
      Nominal_tolerance_characteristic,
      Plus_minus_tolerance_characteristic,
      Qualified_tolerance_characteristic,
      Statistical_tolerance_characteristic,
      Symmetrical_tolerance_characteristic,
      Typical_tolerance_characteristic
      )) ANDOR Length_tolerance_characteristic)
    SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Typical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'typical';      
  END_ENTITY;

  FUNCTION valid_qualified_tolerance_characteristic (input : Qualified_tolerance_characteristic) : BOOLEAN;
 --no more than one of the Type_qualifier.name shall be 'nominal'
 --no more than one of the Type_qualifier.name shall be 'typical'
 --no more than one of the Type_qualifier.name shall be 'maximium'
 --no more than one of the Type_qualifier.name shall be 'minimum'
 --Type_qualifier.name shall be drawn only from 'nominal', 'typical' , 'maximium', 'minimum'
  LOCAL
     bag_data : BAG OF STRING := [];
     valid_set : SET OF STRING := ['nominal', 'typical' , 'maximium', 'minimum'];
  END_LOCAL;
  REPEAT i := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items);
    REPEAT j := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers);
     IF 'QUALIFIED_MEASURE_ARM.TYPE_QUALIFIER' IN TYPEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j])
      THEN
        bag_data := bag_data + input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j]\Type_qualifier.name;
     END_IF;
    END_REPEAT;
  END_REPEAT;

  IF (SIZEOF(bag_to_set(bag_data)) = SIZEOF(bag_data)) AND
     (VALUE_UNIQUE(bag_data)) AND 
     (SIZEOF(valid_set * bag_data) = SIZEOF(bag_data)) 
  THEN RETURN(TRUE);
  END_IF;
    
   RETURN(FALSE);
  END_FUNCTION; 

  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION; 

  SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR Property_value_representation;
    ONEOF (Range_characteristic, Tolerance_characteristic);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT type_qualifier_subtypes FOR Type_qualifier;
    ONEOF(Externally_defined_type_qualifier, Pre_defined_type_qualifier);
  END_SUBTYPE_CONSTRAINT;
  
  SUBTYPE_CONSTRAINT independent_property_subtypes FOR Independent_property;
    ONEOF (Characteristic_data_table_header, Characteristic_data_column_header);
  END_SUBTYPE_CONSTRAINT;
  
  SUBTYPE_CONSTRAINT c_representation_item_subtypes FOR Representation_item; 
	(ONEOF (Characteristic_data_table,
	  Characteristic_data_table_row));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.8 2009/12/21 15:19:48 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6884 - ISO/TS 10303-1765 Characterizable object - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4296
*)

SCHEMA Characterizable_object_arm;

USE FROM Support_resource_arm;

ENTITY Characterizable_object;
  name : label;
  description : OPTIONAL text;
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.8 2004/11/19 21:37:34 robbod Exp $
 ISO TC184/SC4/WG12 N3022 - ISO/TS 10303-1070 Class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2258
*) 


SCHEMA Class_arm;


ENTITY Class
  SUPERTYPE OF (ONEOF (Class_by_extension,
                       Class_by_intension));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;

ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;

END_SCHEMA;  -- Class_arm

(*
 $Id: arm.exp,v 1.6 2004/11/30 17:13:38 robbod Exp $
 ISO TC184/SC4/WG12 N3248 - ISO/TS 10303-1114 Classification assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2229
*)

SCHEMA Classification_assignment_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070


TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Classification_assignment_arm
(*
 $Id: arm.exp,v 1.24 2012/10/11 05:49:13 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7960 - ISO/TS 10303-1111 Classification with attributes - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7397
*)

SCHEMA Classification_with_attributes_arm;

USE FROM Classification_assignment_arm;

USE FROM Extended_measure_representation_arm;

USE FROM Independent_property_arm;

USE FROM Identification_assignment_arm;

USE FROM Plib_class_reference_arm;

USE FROM Product_view_definition_arm;

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	classified_element_select) ;
END_TYPE;

TYPE classified_element_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Product, 
	Product_version,
	Product_view_definition) ;
END_TYPE;

TYPE external_class_select = SELECT(Plib_class_reference, External_class);
END_TYPE;

TYPE definable_objects = SELECT (
	Product, 
	Product_version, 
	Product_view_definition);
END_TYPE;

ENTITY Class_with_attributes
SUBTYPE OF (Class);
  version_id: OPTIONAL STRING;
  used_classification_system: OPTIONAL Classification_system;
INVERSE
  characterization_attributes: SET[0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY;

ENTITY Class_hierarchy;
  super_class: Class_with_attributes;
  sub_class: Class_with_attributes;
END_ENTITY;

ENTITY Classification_association
SUBTYPE OF (Classification_assignment);
   SELF\Classification_assignment.assigned_class: Class_with_attributes;
   definitional: LOGICAL;
WHERE
WR1: NOT(definitional = TRUE) OR
       (SIZEOF(QUERY(it<* SELF\Classification_assignment.items | 
                 NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.DEFINABLE_OBJECTS' IN TYPEOF(it)) )) = 0);
WR2: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it)) )) =0;
END_ENTITY;

ENTITY Classification_attribute;
   id: STRING;
   name: OPTIONAL STRING;
   description: OPTIONAL STRING;
   allowed_values: OPTIONAL SET[1:?] OF Measure_item;
   characterized_class: Class_with_attributes;
   attribute_definition: Independent_property;
END_ENTITY;

ENTITY Classification_system;
  id: STRING;
  description: OPTIONAL STRING;
END_ENTITY;

ENTITY External_class_with_attributes
SUBTYPE OF (Class_with_attributes);
  source: external_class_select;
END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.4 2006/03/24 18:09:46 thendrix Exp $
ISO TC184/SC4/WG12 N4242 - ISO/TS 10303-1002 Colour - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N671
*) 


SCHEMA Colour_arm; 


ENTITY Colour;
  name : STRING;
END_ENTITY;

ENTITY Externally_defined_colour
  SUBTYPE OF (Colour);
  source : STRING;
END_ENTITY;

ENTITY Pre_defined_colour
  SUBTYPE OF (Colour);
WHERE
  WR1: SELF.name IN ['red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'];
END_ENTITY;

ENTITY User_defined_colour
  SUBTYPE OF (Colour);
  red : REAL;
  green : REAL;
  blue : REAL;
WHERE
  WR1: {0.0 <= red <= 1.0};
  WR2: {0.0 <= green <= 1.0};
  WR3: {0.0 <= blue <= 1.0};
END_ENTITY;

END_SCHEMA;  -- Colour_arm
(*
   $Id: arm.exp,v 1.40 2012/10/11 05:49:04 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7963 - ISO/TS 10303-1657 Component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7400
*)

SCHEMA Component_feature_arm;

	USE FROM Assembly_component_arm;
	USE FROM Assembly_shape_arm;

	TYPE cf_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Component_feature);
	END_TYPE; 

  ENTITY Component_feature
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Definitional_shape_element);
      definition           : OPTIONAL General_part_feature;
      SELF\Shape_element.containing_shape RENAMED associated_component : Assembly_component;
    UNIQUE
      UR1 : definition,associated_component;
      UR2 : SELF\Shape_element.element_name, associated_component;
  END_ENTITY;

  ENTITY Component_feature_joint
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature_relationship, Shape_element);
    SELF\Component_feature_relationship.relating RENAMED feature_1 : Component_feature;
    SELF\Component_feature_relationship.related  RENAMED feature_2 : Component_feature;
    SELF\Shape_element.containing_shape RENAMED associated_definition : Item_shape;
    WHERE
      WR1 : feature_1 <> feature_2;
      WR2 : 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' in TYPEOF(associated_definition);
      WR3 : associated_definition :=: feature_1\Shape_element.containing_shape;      
      WR4 : associated_definition :=: feature_2\Shape_element.containing_shape;      
  END_ENTITY;

  ENTITY Component_feature_make_from_relationship
		SUBTYPE OF (Component_feature_relationship);
      SELF\Shape_element_relationship.relating RENAMED reusable_feature	: Component_feature;
      SELF\Shape_element_relationship.related RENAMED resultant_feature	: Component_feature;
  END_ENTITY;

  ENTITY Component_feature_relationship
    SUPERTYPE OF (ONEOF(Component_feature_joint,
      Component_feature_make_from_relationship))
  	SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Component_feature;  	
      SELF\Shape_element_relationship.related  : Component_feature;
  END_ENTITY;

  ENTITY Component_terminal
     ABSTRACT SUPERTYPE
    SUBTYPE OF (Component_feature);
      local_swappable  : OPTIONAL BOOLEAN;
      global_swappable : OPTIONAL BOOLEAN;
      swap_code        : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.25 2012/10/11 05:49:04 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7966 - ISO/TS 10303-1656 Component grouping - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7403
*)

SCHEMA Component_grouping_arm;

	USE FROM Assembly_component_arm;	-- ISO/TS 10303-1691
	REFERENCE FROM Support_resource_arm (bag_to_set); 
	
  ENTITY Array_placement_group
    ABSTRACT SUPERTYPE OF(ONEOF (Linear_array_placement_group_component,
		Rectangular_array_placement_group_component))
    SUBTYPE OF (Assembly_group_component);
  END_ENTITY;

  ENTITY Assembly_component_placement_link;
      precedent_element  : Assembly_component;
      subsequent_element : Assembly_component;
    INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_assembly_component_placement_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.ASSEMBLY_COMPONENT_PLACEMENT_LINK');
  END_ENTITY;
      
  ENTITY Assembly_group_component
    SUBTYPE OF (Assembly_component, Single_instance);
    INVERSE
      components : SET[1:?] OF next_assembly_usage FOR relating_view;
    WHERE
      WR1: SIZEOF(QUERY(co <* components | NOT(('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT') IN TYPEOF(co\Product_occurrence_definition_relationship.related_view)))) = 0;
  END_ENTITY;

  ENTITY Linear_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                               : SET[1:?] OF Assembly_component_placement_link;
      initial_node_positive_x_displacement  : Length_data_element;
      terminus_node_positive_x_displacement : Length_data_element;
      location_uncertainty                  : Length_data_element;
    WHERE  
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_ac(element);
  END_ENTITY;

  ENTITY Linear_array_placement_group_component_link;
      precedent_element  : Linear_array_placement_group_component;
      subsequent_element : Linear_array_placement_group_component;
    INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_linear_array_placement_group_component_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK');
  END_ENTITY;

  ENTITY Rectangular_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                              : SET[1:?] OF Linear_array_placement_group_component_link;
      initial_row_positive_y_displacement  : Length_data_element;
      terminus_row_positive_y_displacement : Length_data_element;
      location_uncertainty                 : Length_data_element;
    WHERE
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_lapgc(element);
  END_ENTITY;

FUNCTION acyclic_assembly_component_placement_link
  (relation : Assembly_component_placement_link; relatives : SET[1:?] OF
  Assembly_component; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Assembly_component_placement_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
        'COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' +
        'SUBSEQUENT_ELEMENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_assembly_component_placement_link(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION acyclic_linear_array_placement_group_component_link
  (relation : Linear_array_placement_group_component_link; relatives :
  SET[1:?] OF Linear_array_placement_group_component; specific_relation : STRING): BOOLEAN; 
LOCAL
      x : SET OF Linear_array_placement_group_component_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
       'COMPONENT_GROUPING_ARM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' + 'SUBSEQUENT_ELEMENT'))
       | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_linear_array_placement_group_component_link(x[i], relatives
        + relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION cg_get_sz_ac (input : SET[1:?] OF Assembly_component_placement_link) : INTEGER;
LOCAL
    ac : SET OF Assembly_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac + input[i]\Assembly_component_placement_link.precedent_element +
      input[i]\Assembly_component_placement_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

FUNCTION cg_get_sz_lapgc (input : SET[1:?] OF Linear_array_placement_group_component_link) : INTEGER;
LOCAL
  ac : SET OF Linear_array_placement_group_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
        input[i]\Linear_array_placement_group_component_link.precedent_element +
        input[i]\Linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.29 2009/12/23 13:26:11 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6956 - ISO/TS 10303-1756 Conductivity material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4215
*)

SCHEMA Conductivity_material_aspects_arm;

	USE FROM Classification_assignment_arm;	-- ISO/TS 10303-1114
	USE FROM Generic_material_aspects_arm;	-- ISO/TS 10303-1681
	USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023
	REFERENCE FROM Support_resource_arm(bag_to_set); 

	TYPE cma_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
		(Material_identification_with_conductivity_classification);
	END_TYPE;

	TYPE cma_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Part_view_definition);
	END_TYPE;

	SUBTYPE_CONSTRAINT cma_class_subtypes FOR Class; 
	    (ONEOF (Conductivity_material_property_class,
		 Relative_permeability_material_property_class,
		 Relative_optical_insertion_loss_material_property_class,
		 Relative_permittivity_material_property_class));
	END_SUBTYPE_CONSTRAINT;

	
 ENTITY Conductivity_material_property_class
	ABSTRACT SUPERTYPE OF (ONEOF (Material_electrical_conductivity_class, 
		Material_thermal_conductivity_class))
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['conductive', 'non conductive', 'resistive', 'semi conductive', 'super conductive'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_permeability_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['free space permeabilty', 'low permeability', 'medium permeability', 'highly permeable'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_optical_insertion_loss_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['vacuum', 'very low loss', 'low loss', 'medium loss', 'high loss'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_permittivity_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['vacuum permittivity', 'low permittivity', 'medium permittivity', 'high permittivity'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

ENTITY Material_electrical_conductivity_class
  SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY;

ENTITY Material_thermal_conductivity_class
  SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY;

 ENTITY Material_identification_with_conductivity_classification
  SUBTYPE OF (Material_identification);
  DERIVE
    electrical_conductivity_classification : STRING := get_cond_class(SELF,'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS');
    magnetic_permeability_classification   : STRING := get_cond_class(SELF,'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS');
    optical_insertion_loss_classification  : STRING := get_cond_class(SELF,'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS');
    thermal_conductivity_classification    : STRING := get_cond_class(SELF,'MATERIAL_THERMAL_CONDUCTIVITY_CLASS');
    dielectric_permittivity_classification : STRING := get_cond_class(SELF,'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS');
  WHERE 	
  	WR1: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS' IN TYPEOF (ca.assigned_class)))) = 1);
  	WR2: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'MATERIAL_THERMAL_CONDUCTIVITY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR3: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR4: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR5: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
 END_ENTITY;
 
 FUNCTION get_cond_class(input1 : Material_identification_with_conductivity_classification;
                         input2 : STRING) : STRING;
 LOCAL
  car : SET OF Classification_assignment := [];
 END_LOCAL;
  car := QUERY(ca <* bag_to_set(USEDIN(input1,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')) |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	input2 IN TYPEOF (ca.assigned_class)));
 IF SIZEOF(car) = 1
  THEN
    RETURN(car[1].assigned_class\class.name);
  ELSE
    RETURN('?');
 END_IF;
 END_FUNCTION;
 
 END_SCHEMA;
(*
 $Id: arm.exp,v 1.12 2009/08/11 07:45:42 robbod Exp $
 ISO TC184/SC4/WG12 N6031 - ISO/TS 10303-1056 Configuration item - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2532
*) 


SCHEMA Configuration_item_arm;

USE FROM Product_concept_identification_arm;    -- ISO/TS 10303-1060

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;

ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;

ENTITY Product_configuration_hierarchical_relationship
  SUBTYPE OF (Product_configuration_relationship);
  SELF\Product_configuration_relationship.related_product_configuration RENAMED child : Product_configuration;
  SELF\Product_configuration_relationship.relating_product_configuration RENAMED parent : Product_configuration;
END_ENTITY;

ENTITY Product_configuration_relationship
  SUPERTYPE OF (ONEOF (Product_configuration_hierarchical_relationship,
                       Product_configuration_revision_sequence));
  relating_product_configuration : Product_configuration;
  related_product_configuration : Product_configuration;
END_ENTITY;

ENTITY Product_configuration_revision_sequence
  SUBTYPE OF (Product_configuration_relationship);
  SELF\Product_configuration_relationship.relating_product_configuration RENAMED predecessor : Product_configuration;
  SELF\Product_configuration_relationship.related_product_configuration RENAMED successor : Product_configuration;
END_ENTITY;

END_SCHEMA;  -- Configuration_item_arm

(*
	$Id: arm.exp,v 1.20 2012/10/06 20:09:56 liutkuviene Exp $
	ISO TC184/SC4/WG12 N7771 - ISO/TS 10303-1131 Construction geometry - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N5329
*) 

SCHEMA Construction_geometry_arm;

USE FROM Basic_curve_arm;    -- ISO/TS 10303-1651

  TYPE constructive_element_select = EXTENSIBLE GENERIC_ENTITY SELECT 
    (Axis_placement,  
     Curve,  
     Point,  
     Surface); 
  END_TYPE; 

  TYPE constructive_geometry_select = SELECT
    (Constructive_geometry, 
     Geometric_model);
  END_TYPE; 

  ENTITY Constructive_geometry
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items : SET [1:?] OF constructive_element_select;
  END_ENTITY;

  ENTITY Constructive_geometry_association;
      auxiliary_geometry : Constructive_geometry;
      base_geometry      : constructive_geometry_select;
      description        : STRING;
    WHERE
      WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.19 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7972 - ISO/TS 10303-1731 Constructive solid geometry 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7409
*) 
SCHEMA Constructive_solid_geometry_2d_arm;
 
USE FROM Area_2d_arm;	-- ISO/TS 10303-1631
USE FROM Basic_curve_arm; -- ISO/TS 10303-1651

  TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
    (truncate,
     chord_2_extend,
     round,
     extend);
  END_TYPE;

 TYPE extend_or_truncate = ENUMERATION OF
    (truncate,
     extend);
  END_TYPE;

  TYPE primitive_or_boolean_result_2d = SELECT (
    Primitive_2d, 
    Boolean_result_2d);
  END_TYPE;    

  TYPE square_or_round = ENUMERATION OF
    (square,
     round);
  END_TYPE;

  ENTITY Area_with_outer_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;

  ENTITY Boolean_result_2d 	 
	SUBTYPE OF (Detailed_geometric_model_element); 	 
  END_ENTITY;
	   
  ENTITY Csg_2d_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET [1:?] OF primitive_or_boolean_result_2d;   
  WHERE
    WR1: SELF\Geometric_model.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY;

  ENTITY Curve_style_parameters
  	ABSTRACT SUPERTYPE OF (ONEOF (Closed_curve_style_parameters, Curve_style_parameters_with_ends));
      name              : STRING;
      corner_style      : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width       : Length_data_element;
      width_uncertainty : OPTIONAL Length_data_element;
    UNIQUE
      UR1 : name;
  END_ENTITY;
  
  ENTITY Closed_curve_style_parameters
    SUBTYPE OF (Curve_style_parameters);
  END_ENTITY;

  ENTITY Curve_style_parameters_with_ends
    SUBTYPE OF (Curve_style_parameters);
      end_extension     : extend_or_truncate;
      end_style         : square_or_round;
  END_ENTITY;

  ENTITY Path_area_with_parameters
    SUBTYPE OF (Detailed_geometric_model_element);
    centreline : Curve;
    parameters : Curve_style_parameters;
  END_ENTITY;

  ENTITY Primitive_2d_with_inner_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;

 ENTITY Single_area_csg_2d_model
    SUBTYPE OF (Csg_2d_model);
      SELF\Representation.items : SET [1:1] OF Primitive_2d;    
 END_ENTITY;

 ENTITY Single_boundary_csg_2d_model
    SUBTYPE OF (Single_area_csg_2d_model);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2012/10/11 05:49:06 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7975 - ISO/TS 10303-1027 Contextual shape positioning - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7412
*) 

SCHEMA Contextual_shape_positioning_arm;

USE FROM Geometric_model_relationship_arm;
USE FROM Shape_property_assignment_arm;    --  ISO/TS 10303-1032


  TYPE template_instance = SELECT
    (Geometric_placement_operation, 
     Geometric_model_relationship_with_transformation);
  END_TYPE; 

  ENTITY Contextual_shape_representation;
      contextual_shape          : Contextual_item_shape;
      representing_relationship : Geometric_model_relationship;
    DERIVE
      context_representation    : geometric_representation_select := representing_relationship.rep_2 ;
      positioned_representation : geometric_representation_select := representing_relationship.rep_1 ;
  END_ENTITY;

  ENTITY Geometric_composition_with_operator_transformation
    SUBTYPE OF (Geometric_relationship_with_operator_transformation,
      Definitional_representation_relationship);
  END_ENTITY;

  ENTITY Geometric_composition_with_placement_transformation
    SUBTYPE OF (Geometric_relationship_with_placement_transformation,
      Definitional_representation_relationship);
  END_ENTITY; 

  ENTITY Geometric_placement_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
  END_ENTITY;

  ENTITY Geometric_model_relationship_with_transformation
    ABSTRACT SUPERTYPE OF (ONEOF (Geometric_relationship_with_placement_transformation,
      Geometric_relationship_with_operator_transformation))
    SUBTYPE OF (Geometric_model_relationship);
    WHERE  
      WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
  END_ENTITY;

  ENTITY Geometric_relationship_with_operator_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: cartesian_transformation;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;

  ENTITY Geometric_relationship_with_placement_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: Axis_placement_mapping;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;

  ENTITY Shape_placement_association
    SUBTYPE OF (Shape_description_association);
      SELF\Shape_description_association.used_representation : Geometric_placement_model;
      SELF\Shape_description_association.definition : Associated_contextual_item_shape;
  END_ENTITY;
  
  ENTITY Associated_contextual_item_shape
    SUBTYPE OF (Associated_item_shape, Contextual_item_shape);
  END_ENTITY;

END_SCHEMA;

(*
	$Id: arm.exp,v 1.14 2012/10/06 20:09:56 liutkuviene Exp $
	ISO TC184/SC4/WG12 N7672 - ISO/TS 10303-1003 Curve appearance - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7058
*) 

SCHEMA Curve_appearance_arm; 

USE FROM Styled_curve_arm; -- ISO/TS 10303-1749

  ENTITY Curve_appearance;
    colour : Colour;
    font   : Curve_font;
    width  : REAL;
  END_ENTITY;

  ENTITY Externally_defined_marker
    SUBTYPE OF (Marker);
      marker_reference : STRING;
  END_ENTITY;

  ENTITY Externally_defined_terminator
    SUBTYPE OF (Terminator);
      terminator_reference : STRING;
  END_ENTITY;

  ENTITY Marker;
  END_ENTITY;

  ENTITY Point_appearance;
    marker : Marker;
    colour : Colour;
    size : REAL;
  END_ENTITY;

  ENTITY Predefined_marker
    SUBTYPE OF (Marker);
  END_ENTITY;

  ENTITY Predefined_terminator
    SUBTYPE OF (Terminator);
  END_ENTITY;

  ENTITY Terminator;
  END_ENTITY;

  ENTITY User_defined_marker
    SUBTYPE OF (Marker);
      symbol : Geometric_model;
  END_ENTITY;

  ENTITY User_defined_terminator
    SUBTYPE OF (Terminator);
      symbol : Geometric_model;
  END_ENTITY;

  ENTITY Vector_appearance
    SUBTYPE OF (Curve_appearance);
      terminator_type : Terminator;
  END_ENTITY;

END_SCHEMA;  
(*
 $Id: arm.exp,v 1.16 2013/11/20 21:01:45 darla Exp $
 ISO TC184/SC4/WG12 N8379 - ISO/TS 10303-1010 Date time - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7978
*) 


SCHEMA Date_time_arm;

TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 

TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 

TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 

TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 

TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 

TYPE year_number = INTEGER;
END_TYPE; 

ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;

ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;

ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;

ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;

END_SCHEMA;  -- Date_time_arm
(*
 $Id: arm.exp,v 1.11 2014/01/21 15:30:23 darla Exp $
 ISO TC184/SC4/WG12 N8400 - ISO/TS 10303-1014 Date time assignment - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N1093
*)
SCHEMA Date_time_assignment_arm;

USE FROM Extended_date_arm; -- ISO/TS 10303-1776

   
TYPE date_or_date_time_item = EXTENSIBLE SELECT;
END_TYPE;
   
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
  
END_SCHEMA;

(* 
$Id: arm.exp,v 1.19 2012/10/11 05:49:04 liutkuviene Exp $  
ISO TC184/SC4/WG12 N7984 - ISO/TS 10303-1130 Derived shape element - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7418
*) 


SCHEMA Derived_shape_element_arm;

USE FROM Construction_geometry_arm;  -- ISO/TS 10303-1131
USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054

TYPE dse_shape_model = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON shape_model WITH (
   Constructive_geometry);
END_TYPE;

ENTITY Apex
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;

ENTITY Centre_axis
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Centre_of_symmetry
  SUPERTYPE OF (ONEOF (
    Centre_axis,
    Centre_plane,
    Centre_point,
    Median_curve,
    Median_surface))
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;

ENTITY Centre_plane
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Centre_point
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
  
ENTITY Derived_shape_element
  ABSTRACT SUPERTYPE OF (ONEOF (
    Apex,
    Centre_of_symmetry,
    Geometric_contact,    
    Extension,
    Geometric_intersection,
    Geometric_alignment,
    Parallel_offset,
    Perpendicular_to,
    Tangent))
  SUBTYPE OF (Shape_element);
  derived_from : SET[1:?] OF Shape_element;
END_ENTITY;

ENTITY Geometric_alignment
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;

ENTITY Geometric_contact
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:2] OF Shape_element;
END_ENTITY;

ENTITY Geometric_intersection
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;

ENTITY Extension
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Median_curve
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Median_surface
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Parallel_offset
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Perpendicular_to
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Tangent_plane
  SUBTYPE OF (Tangent);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Tangent
  SUPERTYPE OF (Tangent_plane)
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Offset_shape_element
  SUBTYPE OF (Derived_shape_element);
  offset : Value_with_unit;
END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.43 2012/10/11 05:49:08 liutkuviene Exp $
ISO TC184/SC4/WG12 N7993 - ISO/TS 10303-1050 Dimension tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7427
*) 


SCHEMA Dimension_tolerance_arm;

USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130
USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122
USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106
USE FROM Value_with_unit_extension_arm;  -- ISO/TS 10303-1753

TYPE adjoining_or_centred = ENUMERATION OF ( 
  adjoining,
  centred);
END_TYPE;

TYPE angle_relator = ENUMERATION OF 
   (equal,
    large,
    small);
END_TYPE; 

TYPE dimension_value_select = SELECT
   (Dimension_value_with_limitation, 
    Numerical_item_with_unit, 
    Tolerance_range, 
    Value_limit);
END_TYPE; 

TYPE diameter_qualifier_enumeration = ENUMERATION OF (
  centre_outer,
  centre_inner,
  outer_centre,
  outer_outer,
  outer_inner,
  inner_centre,
  inner_outer,
  inner_inner);
END_TYPE;

TYPE diameter_type = ENUMERATION OF (
   circular_or_cylindrical_diameter,
   spherical_diameter,
   toroidal_minor_diameter,
   toroidal_major_diameter,
   toroidal_high_major_diameter,
   toroidal_low_major_diameter);
END_TYPE;

TYPE dimension_target = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE edge_of_undefined_shape_size_element = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE geometric_dimension_modifier = EXTENSIBLE ENUMERATION OF (
  two_point_size, -- (LP) 
  local_size_defined_by_a_sphere, -- (LS)
  least_square_association_criteria, -- (GG) 
  maximum_inscribed_association_criteria, -- (GX) 
  minimum_circumscribed_association_criteria, -- (GN) 
  circumference_diameter_calculated_size, -- (CC) 
  area_diameter_calculated_size, -- (CA) 
  volume_diameter_calculated_size, -- (CV) 
  maximum_rank_order_size, -- (SX) 
  minimum_rank_order_size, -- (SN)
  average_rank_order_size, -- (SA) 
  median_rank_order_size, -- (SM) 
  mid_range_rank_order_size, -- (SD) 
  range_rank_order_size, -- (SR) 
  any_part_of_the_feature, -- 'APF' 
  any_cross_section, -- '/0'
  specific_fixed_cross_section, -- SCS
  common_tolerance, -- 'CT'
  free_state_condition, -- (F)
  statistical, -- ASME only
  continuous_feature, -- ASME only
  square, -- ASME only
  controlled_radius); -- ASME only
END_TYPE;

TYPE limitation_definition_select = SELECT
   (Limits_and_fits, 
    Plus_minus_bounds);
END_TYPE; 

TYPE radial_type = ENUMERATION OF (
   circular_or_cylindrical_radius,
   spherical_radius,
   toroidal_minor_radius,
   toroidal_major_radius,
   toroidal_high_major_radius,
   toroidal_low_major_radius);
END_TYPE;

TYPE tolerance_principle_type = ENUMERATION OF (
  envelope_requirement, 
  independency, 
  default);
END_TYPE;

TYPE undefined_edge_shape_enumeration_direction = ENUMERATION OF ( 
  true_neighbor,               
  false_neighbor,
  both_neighbors);
END_TYPE;

ENTITY Angular_location
  SUBTYPE OF (Dimensional_location);
  angle_selection : angle_relator;
  orientation : OPTIONAL Axis_placement;
END_ENTITY;

ENTITY Angular_size
  SUBTYPE OF (Dimensional_size);
  full : BOOLEAN;
  angle_selection : angle_relator;
END_ENTITY;

ENTITY Curved_distance
  SUBTYPE OF (Dimensional_location);
  used_path : Measurement_path;
END_ENTITY;

ENTITY Curved_size
  SUBTYPE OF (Dimensional_size);
END_ENTITY;

ENTITY Diameter_size
   SUBTYPE OF (Dimensional_size);
   geometry_type : diameter_type;
END_ENTITY;

ENTITY Dimensional_size
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_size,
                                Curved_size,
                                Diameter_size,
                                Edge_of_undefined_shape_size,
                                Machining_feature_size,
                                Radial_size,
                                Thickness_size))
  SUBTYPE OF (Geometric_dimension);
  is_applied_to : dimension_target;
END_ENTITY;

ENTITY Dimension_value_with_limitation;
  defined_by : limitation_definition_select;
  limited_value : Numerical_item_with_unit;
END_ENTITY;

ENTITY Geometric_dimension
  ABSTRACT SUPERTYPE OF (ONEOF (Dimensional_location,
                                Dimensional_size));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
  theoretical_exact : BOOLEAN;
  auxiliary : BOOLEAN;
  tolerance_principle : tolerance_principle_type;
  modifiers : LIST [0:?] of geometric_dimension_modifier;
  unit_length : OPTIONAL Length_data_element;
END_ENTITY;

ENTITY Limits_and_fits;
  deviation : STRING;
  fitting_type : OPTIONAL STRING;
  grade : STRING;
END_ENTITY;

ENTITY Linear_distance
  SUBTYPE OF (Dimensional_location);
  orientation : OPTIONAL Axis_placement;
  diameter_qualifier : OPTIONAL diameter_qualifier_enumeration;
END_ENTITY;

ENTITY Dimensional_location
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_location,
                                Curved_distance,
                                Linear_distance))
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : dimension_target;
  target : dimension_target;
END_ENTITY;

ENTITY Edge_of_undefined_shape_size
  SUBTYPE OF (Dimensional_size);
  orientation : undefined_edge_shape_enumeration_direction;
  SELF\Dimensional_size.is_applied_to : edge_of_undefined_shape_size_element;
  SELF\Geometric_dimension.dimension_value : Tolerance_range;
UNIQUE
  UR1 : is_applied_to, orientation;
END_ENTITY;

ENTITY Machining_feature_size
  SUBTYPE OF (Dimensional_size);
  considered_attribute: STRING;
END_ENTITY;

ENTITY Measurement_path;
  defined_by : Curve;
  defined_in : Geometric_coordinate_space;
END_ENTITY;

ENTITY Plus_minus_bounds;
  lower_bound : Value_with_unit;
  upper_bound         : Value_with_unit;
END_ENTITY;

ENTITY Radial_size
   SUBTYPE OF (Dimensional_size);
   radius_type : OPTIONAL adjoining_or_centred;
   geometry_type : radial_type;
END_ENTITY;

ENTITY Thickness_size
  SUBTYPE OF (Dimensional_size);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Tolerance_range;
  lower_range : Numerical_item_with_unit;
  upper_range : Numerical_item_with_unit;
END_ENTITY;

END_SCHEMA;  -- Dimension_tolerance_arm
(*
$Id: arm.exp,v 1.16 2012/10/06 20:09:56 liutkuviene Exp $
ISO TC184/SC4/WG12 N7708 - ISO/TS 10303-1121 Document and version identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2957
*)


SCHEMA Document_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;

RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

END_SCHEMA;  -- Document_and_version_identification_arm
(*
$Id: arm.exp,v 1.14 2012/10/06 20:09:56 liutkuviene Exp $
ISO TC184/SC4/WG12 N7714 - ISO/TS 10303-1122 Document assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7106
*)


SCHEMA Document_assignment_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM File_identification_arm;    -- ISO/TS 10303-1127


TYPE assigned_document_select = SELECT
   (Document, 
    Document_definition, 
    Document_version, 
    File);
END_TYPE; 

TYPE documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
  (Product_view_definition);
END_TYPE; 

ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : SET[1:?] OF documented_element_select;
  role : STRING;
END_ENTITY;

ENTITY Partial_document_assignment
  SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;

END_SCHEMA;  -- Document_assignment_arm
(*
 $Id: arm.exp,v 1.18 2004/11/15 21:22:46 thendrix Exp $
ISO TC184/SC4/WG12 N3225 - ISO/TS 10303-1123 Document definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1192
*) 


SCHEMA Document_definition_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE document_location_select = SELECT BASED_ON external_identification_item WITH 
   (Document_definition);
END_TYPE; 

ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;

ENTITY Document_definition
  SUPERTYPE OF (ONEOF (Digital_document_definition,
                       Physical_document_definition))
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.name RENAMED description : OPTIONAL STRING;
  SELF\Product_view_definition.defined_version RENAMED associated_document_version : Document_version;
END_ENTITY;

ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;

RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

END_SCHEMA;  -- Document_definition_arm
(*
 $Id: arm.exp,v 1.9 2004/10/21 17:26:46 darla Exp $
 ISO TC184/SC4/WG12 N1195 - ISO/TS 10303-1124 Document structure - EXPRESS ARM
*)


SCHEMA Document_structure_arm;

USE FROM Document_definition_arm;  
USE FROM File_identification_arm; 
  
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;

ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.20 2009/04/11 21:11:00 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3966 - ISO/TS 10303-1673 Edge shape feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3414
*)

SCHEMA Edge_shape_feature_arm;

	USE FROM Layered_2d_shape_arm;	-- ISO/TS 10303-1693
	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654	

  TYPE board_side = ENUMERATION OF (primary, secondary); 
  END_TYPE;

  ENTITY Bevel_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      bevel_width : Length_tolerance_characteristic;
      bevel_angle : Tolerance_characteristic;
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
           )) = 1);
  END_ENTITY;

  ENTITY Edge_shape_model
    ABSTRACT SUPERTYPE OF (ONEOF (Bevel_edge_feature_shape_model,
 Step_edge_feature_shape_model,
 Radius_edge_feature_shape_model))
    SUBTYPE OF (Planar_shape_model);
      applied_surface : board_side;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Radius_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      radius_length : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Step_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      step_width : Length_tolerance_characteristic;
      step_depth : Length_tolerance_characteristic;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.13 2012/11/09 21:40:58 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N8259 - ISO/TS 10303-1057 Effectivity - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N8002
*)
   
SCHEMA Effectivity_arm;

USE FROM Time_interval_arm;  -- ISO/TS 10303-1065
USE FROM Value_with_unit_arm;  -- ISO/TS 10303-1054

   
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : OPTIONAL date_or_event;
  end_bound   : OPTIONAL date_or_event;
WHERE
  WR1: EXISTS(start_bound) OR EXISTS(end_bound);
END_ENTITY;

ENTITY Effectivity
  SUPERTYPE OF (ONEOF (Serial_effectivity, Dated_effectivity, Lot_effectivity, Time_interval_effectivity));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;

ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;

ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;

ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
   
END_SCHEMA;
(*
 $Id: arm.exp,v 1.7 2012/07/18 09:01:07 lothartklein Exp $
 ISO TC184/SC4/WG12 N1174 - ISO/TS 10303-1059 Effectivity application - EXPRESS ARM
*)
   
SCHEMA Effectivity_application_arm;
   
USE FROM Effectivity_arm; -- ISO/TS 10303-1057
   
TYPE effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT; 
END_TYPE;
   
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;

ENTITY Ineffectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;

   
END_SCHEMA;

(* 
	$Id: arm.exp,v 1.30 2013/11/24 15:22:30 thomasrthurman Exp $
	ISO TC184/SC4/WG12 N8005 - ISO/TS 10303-1004 Elemental geometric shape - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7089
*)
   
SCHEMA Elemental_geometric_shape_arm;
 
USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006
USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005

USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021

  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
	Cartesian_transformation_3d);
  END_TYPE;

  TYPE egs_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH
     (Geometric_model);
  END_TYPE;

  TYPE geometric_model_item = SELECT 
    (Detailed_geometric_model_element,
     Detailed_topological_model_element);
  END_TYPE;

  TYPE template_definition_select = EXTENSIBLE SELECT (Geometric_model);
  END_TYPE; 

  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (Axis_placement_2d,
      Axis_placement_3d))
    SUBTYPE OF (Detailed_geometric_model_element);
      location      : Cartesian_point;
      axis          : OPTIONAL Direction;
      ref_direction : OPTIONAL Direction;
    DERIVE
      dim: INTEGER := SIZEOF(location\Cartesian_point.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(axis\Direction.direction_ratios);
      WR3: dim = SIZEOF(ref_direction\Direction.direction_ratios);
  END_ENTITY;

  ENTITY Axis_placement_2d
    SUBTYPE OF ( Axis_placement );
    WHERE
      WR1: NOT EXISTS(axis);
      WR2: SELF\Axis_placement.dim = 2;
  END_ENTITY;

  ENTITY Axis_placement_3d
    SUBTYPE OF ( Axis_placement );
    WHERE
      WR1: SELF\Axis_placement.dim = 3;
-- convert to IP
--     wr4: NOT EXISTS( axis ) OR NOT EXISTS( ref_direction ) OR ( cross_product( axis, ref_direction ).magnitude > 0 );
  END_ENTITY;

  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;

  ENTITY Point
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Cartesian_point
    SUBTYPE OF (Point);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;

  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;

  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.direction_ratios)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;

  ENTITY Detailed_geometric_model_element
    ABSTRACT SUPERTYPE OF (ONEOF(
      Direction, 
      Axis_placement, 
      Cartesian_transformation_2d,
	  Cartesian_transformation_3d,
	  Geometric_placement_operation))
    SUBTYPE OF (Representation_item);
  END_ENTITY;

  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      direction_ratios : LIST[2:3] OF REAL;  
  END_ENTITY;

  ENTITY Geometric_coordinate_space
    SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;

  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF geometric_model_item;
  END_ENTITY;
  
  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 

  ENTITY Geometric_placement_operation
    ABSTRACT SUPERTYPE OF ( ONEOF (Geometric_placement,
      Geometric_operator_transformation))
    SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 

  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 

END_SCHEMA;












(*
$Id: arm.exp,v 1.10 2012/10/11 05:49:05 liutkuviene Exp $
ISO TC184/SC4/WG12 N8008 - ISO/TS 10303-1005 Elemental topology - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6896
*)
   
SCHEMA Elemental_topology_arm;

   
USE FROM Foundation_representation_arm;

   
ENTITY Connected_edge_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_edges : SET [1:?] OF Edge;
 END_ENTITY;

 ENTITY Connected_face_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_faces : SET [1:?] OF Face;
 END_ENTITY;

ENTITY Connected_face_sub_set
  SUBTYPE OF (Connected_face_set);
  parent_face_set : Connected_face_set;
END_ENTITY; 

ENTITY Detailed_topological_model_element
  ABSTRACT SUPERTYPE OF (ONEOF(Connected_edge_set, Connected_face_set,
             Edge, Face, Face_bound, Vertex, (Loop ANDOR Path)))
  SUBTYPE OF (Representation_item);
END_ENTITY;

   
ENTITY Edge
   SUBTYPE OF (Detailed_topological_model_element);
   edge_start : Vertex;
   edge_end   : Vertex;
 END_ENTITY;


ENTITY Edge_loop
   SUBTYPE OF (Loop,Path);
 DERIVE
   ne : INTEGER := SIZEOF(SELF\Path.edge_list);
 WHERE
   WR1: (SELF\Path.edge_list[1].edge_start) :=:
        (SELF\Path.edge_list[ne].edge_end);
 END_ENTITY;

ENTITY Face
   SUBTYPE OF (Detailed_topological_model_element);
   bounds : SET[1:?] OF face_bound;
 WHERE
     WR1: SIZEOF(QUERY(temp <* bounds | 'ELEMENTAL_TOPOLOGY_ARM.FACE_OUTER_BOUND' IN
                                               TYPEOF(temp))) <= 1;
 END_ENTITY;

 ENTITY Face_bound
   SUBTYPE OF(Detailed_topological_model_element);
   bound       :  Loop;
   orientation :  BOOLEAN;
 END_ENTITY;

  ENTITY Face_outer_bound
    SUBTYPE OF (Face_bound);
  END_ENTITY;

ENTITY Loop
   SUPERTYPE OF (ONEOF(Vertex_loop, Edge_loop))
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;

ENTITY Oriented_edge
   SUBTYPE OF (Edge);
   edge_definition : Edge;
   orientation  : BOOLEAN;
 DERIVE
   SELF\Edge.edge_start : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_start,
                                            SELF.edge_definition.edge_end);
   SELF\Edge.edge_end   : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_end,
                                            SELF.edge_definition.edge_start);
 WHERE
   WR1: NOT ('TOPOLOGY_SCHEMA.ORIENTED_EDGE' IN TYPEOF (SELF.edge_definition));
 END_ENTITY;

ENTITY Path
   SUBTYPE OF (Detailed_topological_model_element);
   edge_list  : LIST [1:?] OF UNIQUE Oriented_edge;
 WHERE
   WR1: path_aligned(SELF);
 END_ENTITY;

ENTITY Vertex
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;


ENTITY Vertex_loop
   SUBTYPE OF (Loop);
   loop_vertex : vertex;
END_ENTITY;




FUNCTION boolean_choice (b : boolean;
            choice1, choice2 : generic : item)  : generic : item;
 
     IF b THEN
       RETURN (choice1);
     ELSE
       RETURN (choice2);
     END_IF;
   END_FUNCTION;

FUNCTION path_aligned(a_path : Path) : LOGICAL;
   LOCAL
     n : INTEGER;
     p : LOGICAL := TRUE;
   END_LOCAL;
     
     n := SIZEOF (a_path.edge_list);
     REPEAT i := 2 TO n;
       p := p AND (a_path.edge_list[i-1].edge_end :=:
                   a_path.edge_list[i].edge_start);
     END_REPEAT;
     
     RETURN (p);
 END_FUNCTION;

END_SCHEMA;

(* Last update -  24 Aug 2009 *)
(*
 $Id: arm.exp,v 1.14 2004/10/21 17:51:29 darla Exp $
 ISO TC184/SC4/WG12 N2114 - ISO/TS 10303-1064 Event - EXPRESS ARM
*)

SCHEMA Event_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;

ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;

END_SCHEMA;  -- Event_arm
(*
   $Id: arm.exp,v 1.22 2012/11/09 21:40:57 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8262 - ISO/TS 10303-1667 Extended basic geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6619
*)

SCHEMA Extended_basic_geometry_arm;

USE FROM Basic_geometry_arm;	-- ISO/TS 10303-1652
USE FROM Geometric_model_relationship_arm;

  SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR
    Detailed_geometric_model_element;
    ONEOF (Direction,
           Axis_placement,
           Cartesian_transformation_2d,
           Cartesian_transformation_3d,
           Curve,
           Geometric_model_element_relationship,
           Surface,
           Vector);
  END_SUBTYPE_CONSTRAINT;

  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;

  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.9 2013/10/29 22:07:40 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8011 - ISO/TS 10303-1776 Extended date - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5368
*)
SCHEMA Extended_date_arm; 

USE FROM Date_time_arm; 

  TYPE date_select = SELECT ( 
    Calendar_date, 
    Year_month, 
    Date,
    Ordinal_date, 
    Week_of_year_and_day_date);
  END_TYPE; 

  TYPE date_or_date_time_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Calendar_date, 
     Date_time,
     Year_month, 
     Date,
     Ordinal_date, 
     Week_of_year_and_day_date);
  END_TYPE;


  TYPE day_in_year_number = INTEGER;
    WHERE
      WR1: {1 <= SELF <= 366};
  END_TYPE; 

  TYPE day_in_week_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 7 };
  END_TYPE; 
    
  TYPE week_in_year_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 53 };
  END_TYPE; 
   
  ENTITY Year_month;
    month_component : month_in_year_number; 
    year_component  : year_number; 
  END_ENTITY;  

  ENTITY Date;
    year_component  : year_number; 
  END_ENTITY;  
 
  ENTITY Ordinal_date;
      day_component  : day_in_year_number;   
      year_component : year_number; 
    WHERE 
      WR1:  ( NOT leap_year ( SELF  . year_component ) AND  { 1 <= day_component <= 365 } ) OR 
        ( leap_year ( SELF . year_component ) AND { 1 <= day_component <= 366 } ) ;  
  END_ENTITY; 
 
  ENTITY Week_of_year_and_day_date;
    day_component  : OPTIONAL day_in_week_number;   
    year_component : year_number; 
    week_component : week_in_year_number; 
  END_ENTITY; 

  FUNCTION leap_year
    (year : year_number) : BOOLEAN;
      IF ( ( ( ( year MOD  4 ) = 0 ) AND 
        ( ( year MOD  100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) ) 
        THEN 
          RETURN  ( TRUE ) ; 
        ELSE 
          RETURN ( FALSE ) ; 
      END_IF ; 
  END_FUNCTION;

END_SCHEMA; 
(*
$Id: arm.exp,v 1.27 2012/11/09 21:40:58 thomasrthurman Exp $
ISO TC184/SC4/WG12 N8265 - ISO/TS 10303-1106 Extended measure representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5371
*) 


SCHEMA Extended_measure_representation_arm;

USE FROM Qualified_measure_arm; -- ISO/CD-TS 10303-1782

  ENTITY Measure_item_with_precision
    SUBTYPE OF (Measure_item);
      significant_digits : INTEGER;
  END_ENTITY;

  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   

  ENTITY Value_list
    SUBTYPE OF (Measure_item);
      values : LIST[1:?] OF Measure_item;
  END_ENTITY;

  ENTITY Value_range
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Value_range_with_global_unit
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_global_unit;
      upper_limit : Numerical_item_with_global_unit;
  END_ENTITY;

  ENTITY Value_set
    SUBTYPE OF (Measure_item);
      values : SET[1:?] OF Measure_item;
  END_ENTITY;

  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;

  SUBTYPE_CONSTRAINT alternate_measure_items FOR Measure_item;
    ABSTRACT SUPERTYPE;
    ONEOF (Measure_item_with_precision,
           Numerical_item_with_global_unit,
           Numerical_item_with_unit,
           Value_list,
           Value_range,
           Value_range_with_global_unit,
           Value_set,
           Value_with_tolerances);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.12 2008/09/12 12:13:34 liutkuviene Exp $
 ISO TC184/SC4/WG12 N5374 - ISO/TS 10303-1275 External class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4732
*) 

SCHEMA External_class_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070

USE FROM External_source_arm; -- ISO/CD-TS 10303-1331

USE FROM Name_assignment_arm; -- ISO/TS 10303-1340


  TYPE external_class_assigned_name_select = SELECT BASED_ON assigned_name_select WITH 
    (External_class_library);
  END_TYPE; 

  ENTITY External_class
    SUBTYPE OF (Class);
      external_source : External_class_library;
  END_ENTITY;

  ENTITY External_class_library
    SUBTYPE OF (External_source);
  END_ENTITY;

END_SCHEMA;


(*
 $Id: arm.exp,v 1.12 2004/10/21 17:59:15 darla Exp $
 ISO TC184/SC4/WG12 N1207 - ISO/TS 10303-1128 External item identification assignment - EXPRESS ARM
*)

 
SCHEMA External_item_identification_assignment_arm;

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;

ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.6 2009/04/22 20:07:49 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6234 - ISO/TS 10303-1778 External library - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5380
*)

SCHEMA External_library_arm;

USE FROM External_source_arm;  -- ISO/TS 10303-1331

USE FROM Plib_class_reference_arm; -- ISO/TS 10303-1291

  TYPE el_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (User_defined_library_or_dictionary);
  END_TYPE;

  ENTITY Iso15926_4_rdl
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Known_source 
    ABSTRACT SUPERTYPE OF (ONEOF(Iso15926_4_rdl,
      Otd_catalogue,
      Otd_dictionary,
      Plib_dictionary,
      Plib_library))
    SUBTYPE OF (External_source); 
  END_ENTITY; 

  ENTITY Otd_catalogue 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Otd_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Plib_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
 
  ENTITY Plib_library 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
  
  ENTITY User_defined_library_or_dictionary 
    SUBTYPE OF (External_source); 
    INVERSE
      source : External_source_identification FOR item;
  END_ENTITY;

  SUBTYPE_CONSTRAINT external_source_subtypes FOR External_source; 
	(ONEOF (Known_source,
	  User_defined_library_or_dictionary));
  END_SUBTYPE_CONSTRAINT;
  
END_SCHEMA;
(*
 $Id: arm.exp,v 1.5 2012/10/06 20:09:56 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7678 - ISO/TS 10303-1033 External model - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1228
*)

SCHEMA External_model_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM File_identification_arm;

ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.14 2012/10/11 19:02:51 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N8014 - ISO/TS 10303-1129 External properties - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7439
*)

SCHEMA External_properties_arm;

USE FROM External_library_arm; -- ISO/TS 10303-1778

USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021

USE FROM Independent_property_arm; -- ISO/TS 10303-1036

USE FROM Plib_class_reference_arm; -- ISO/TS 10303-1291


  TYPE external_property_select = SELECT (Plib_property_reference, External_library_property);
  END_TYPE;

  ENTITY External_library_property
    SUBTYPE OF (Independent_property);
      external_id  : STRING;    
      source       : External_source;
    DERIVE
      library_type : STRING := source.id;
  END_ENTITY;

  ENTITY Plib_property_reference
    SUBTYPE OF (Independent_property);
      code       : STRING;
      version    : STRING;
      name_scope : Plib_class_reference;
  END_ENTITY;

  SUBTYPE_CONSTRAINT plib_or_external FOR Independent_property;
    ONEOF(Plib_property_reference, External_library_property);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.4 2008/09/12 12:28:23 liutkuviene Exp $
   ISO TC184/SC4/WG12 N5386 - ISO/TS 10303-1331 External source - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5075
 *)

SCHEMA External_source_arm;

  ENTITY External_source; 
    id          : STRING;
    description : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.189 2013/07/14 18:23:53 lothartklein Exp $
   ISO TC184/SC4/WG12 N8137 - ISO/TS 10303-1670 Fabrication technology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7538
*)

SCHEMA Fabrication_technology_arm;
USE FROM Constructive_solid_geometry_2d_arm; 	-- ISO/TS 10303-1731
-- USE FROM Extended_geometric_tolerance_arm;  -- ISO/TS 10303-1666
USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
USE FROM Requirement_decomposition_arm;

USE FROM Part_template_arm; -- ISO/TS 10303-1722

REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
REFERENCE FROM Support_resource_arm(bag_to_set); 
	

  TYPE ft_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
	(Stratum_technology_occurrence_relationship);
  END_TYPE;

  TYPE ft_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
    (Passage_technology,
     Stratum_technology,
     Stratum_surface_technology);
  END_TYPE; 
	
  TYPE ft_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
	(Passage_technology,
	Stratum_technology);
  END_TYPE;

  TYPE ft_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Stratum_technology, 
     Passage_technology);
  END_TYPE; 

  TYPE ft_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Passage_technology,
     Stratum_technology,
     Stratum_technology_occurrence,
     Stratum_technology_occurrence_relationship);
  END_TYPE; 
 
  TYPE ft_terminus_condition = EXTENSIBLE ENUMERATION OF
    (bilateral_bond,
     bilateral_complete_removal,
     unilateral_bond);
  END_TYPE;

  TYPE ft_value_select = SELECT (
    Value_limit,
    Value_range,
    Numerical_item_with_unit);
  END_TYPE;

  TYPE layer_position_type = ENUMERATION OF
    (secondary,
     all,
     external,
     primary,
     internal);
  END_TYPE;

  TYPE predefined_design_layer_purpose = ENUMERATION OF
    (other_signal,
     lands_only,
     power_or_ground,
     embedded_passive_capacitor_dielectric,
     embedded_passive_resistor);
  END_TYPE;

  TYPE ft_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (Design_layer_technology,
     Documentation_layer_technology);
  END_TYPE;

  TYPE predefined_documentation_layer_purpose = ENUMERATION OF
    (solderdam,
     soldermask,
     solderpaste,
     silkscreen,
     generic_layer,
     glue,
     gluemask,
     pastemask,
     finish_coating,
     coverlay);
  END_TYPE;

  TYPE stiffness_class = ENUMERATION OF
    (fluid_like_with_constant_thickness,
     fluid_like_with_varying_thickness,
     stiff_laminate);
  END_TYPE;

  TYPE up_or_down = ENUMERATION OF
    (independent, 
     precedent, 
     subsequent);
  END_TYPE;

  ENTITY Allocated_passage_minimum_annular_ring
    SUBTYPE OF (Characterizable_object);
      supported_external_minimum_annular_ring   : OPTIONAL Length_data_element;
      supported_internal_minimum_annular_ring   : OPTIONAL Length_data_element;
      unsupported_minimum_annular_ring          : OPTIONAL Length_data_element;
      minimum_fabrication_allowance             : OPTIONAL Length_data_element;	   
      associated_passage_allocation             : SET [1:?] OF Passage_technology_allocation_to_stack_model;
      associated_stratum_technology_occurrence  : OPTIONAL Stratum_technology_occurrence;
    DERIVE
      associated_model : Stratum_stack_model := associated_passage_allocation[1]\Stratum_sub_stack.associated_stackup;
    WHERE
      WR1 : EXISTS(supported_external_minimum_annular_ring) OR
            EXISTS(supported_internal_minimum_annular_ring) OR
            EXISTS(unsupported_minimum_annular_ring) OR
            EXISTS(minimum_fabrication_allowance);
      WR2 : NOT EXISTS(associated_stratum_technology_occurrence) OR
             (associated_stratum_technology_occurrence IN associated_model\Stratum_stack_model.composing_occurrence);
      WR3 : NOT EXISTS(supported_external_minimum_annular_ring) OR
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model.allocated_technology\Passage_technology.plated_passage)
                   )) = 0);
      WR4 : NOT EXISTS(supported_internal_minimum_annular_ring) OR
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model.allocated_technology\Passage_technology.plated_passage)
                   )) = 0);
      WR5 : NOT (EXISTS(unsupported_minimum_annular_ring) AND
             (SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(ptatsm\Passage_technology_allocation_to_stack_model.allocated_technology\Passage_technology.plated_passage)
                   )) = 0));
      WR6 : SIZEOF(QUERY(ptatsm <* associated_passage_allocation |
             NOT(associated_model = ptatsm\Stratum_sub_stack.associated_stackup)
             )) =0;                   
      WR7 : NOT (EXISTS(associated_stratum_technology_occurrence) AND
                 EXISTS(supported_internal_minimum_annular_ring));
  END_ENTITY;
  
  ENTITY Copy_stratum_technology_occurrence_relationship
    SUBTYPE OF (Derived_stratum_technology_occurrence_relationship);
  END_ENTITY;

  ENTITY Default_component_termination_passage_definition
    SUBTYPE OF (Passage_technology);
      allowed_component_terminal_extent                        : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_passage_extent       : ft_value_select;
    INVERSE
      SELF\Passage_technology.deposition_material : SET [1:1] OF Passage_deposition_material_identification FOR items;
    WHERE
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]);
  END_ENTITY;

  ENTITY Default_tapered_blind_via_definition
    SUBTYPE OF (Default_via_definition);
      as_finished_interior_passage_extent      : Length_tolerance_characteristic;
    WHERE
      WR1: less(as_finished_interior_passage_extent, SELF\default_via_definition.as_finished_passage_extent);
  END_ENTITY;

  ENTITY Default_unsupported_passage_definition
    SUBTYPE OF (Passage_technology);
      SELF\Passage_technology.as_finished_passage_extent : ft_value_select;
  END_ENTITY;

  ENTITY Default_via_definition
    SUBTYPE OF (Passage_technology);
      SELF\Passage_technology.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_passage_extent       : ft_value_select;
    INVERSE
      SELF\Passage_technology.deposition_material : SET [1:1] OF Passage_deposition_material_identification FOR items;
    WHERE
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]);
  END_ENTITY;

  ENTITY Derived_stratum_technology_occurrence_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
      Copy_stratum_technology_occurrence_relationship,
      Inverse_copy_stratum_technology_occurrence_relationship))
    SUBTYPE OF (Stratum_technology_occurrence_relationship);
  END_ENTITY;

  ENTITY Design_layer_technology
    SUBTYPE OF (Stratum_technology);
      design_layer_purpose                    : OPTIONAL predefined_design_layer_purpose;
    INVERSE
	  externally_defined_design_layer_purpose : SET [0:1] OF External_source_identification FOR item;      
   WHERE
	WR1 : (SIZEOF([SELF\Stratum_technology.stratum_material[1]\Material_identification_with_conductivity_classification.electrical_conductivity_classification,
           SELF\Stratum_technology.stratum_material[1]\Material_identification_with_conductivity_classification.thermal_conductivity_classification] *
           ['conductive']) >= 1) OR
       (SELF\Stratum_technology.stratum_material[1]\Material_identification_with_conductivity_classification.magnetic_permeability_classification IN ['highly permeable']) OR
       (SELF\Stratum_technology.stratum_material[1]\Material_identification_with_conductivity_classification.optical_insertion_loss_classification IN ['vacuum', 'very low loss', 'low loss']);
    WR2 : (EXISTS (design_layer_purpose)) XOR ((SIZEOF(externally_defined_design_layer_purpose)) = 1);       
  END_ENTITY;

  ENTITY Design_stack_model
    SUBTYPE OF(Stratum_stack_model);
      model_thickness : OPTIONAL Length_tolerance_characteristic;
    INVERSE
      sub_stack: SET [1:?] OF Stratum_sub_stack for associated_stackup;
  END_ENTITY;

  ENTITY Documentation_layer_technology
    SUBTYPE OF (Stratum_technology);
      pre_defined_documentation_layer_purpose : OPTIONAL predefined_documentation_layer_purpose;
    INVERSE
	  externally_defined_documentation_layer_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (pre_defined_documentation_layer_purpose)) XOR ((SIZEOF(externally_defined_documentation_layer_purpose)) = 1);
  END_ENTITY;

  ENTITY Equivalent_stackup_model_definition
    SUBTYPE OF (Product_view_definition, View_definition_relationship);
     SELF\View_definition_relationship.relating_view RENAMED primary_stackup_model   : Stratum_stack_model;
     SELF\View_definition_relationship.related_view RENAMED equivalent_stackup_model : Stratum_stack_model;
     equivalent_sub_stacks : SET [1:?] OF Equivalent_sub_stack_definition;
    WHERE
      WR1 : primary_stackup_model :<>: equivalent_stackup_model;
      WR2 : SIZEOF(QUERY( ess <* equivalent_sub_stacks |
               NOT (ess\Equivalent_sub_stack_definition.equivalent_stack\Stratum_sub_stack.associated_stackup :=: equivalent_stackup_model)
                  )) = 0;
      WR3:  acyclic_equivalent_stackup_model_definition(SELF,
                    [equivalent_stackup_model],
                    'FABRICATION_TECHNOLOGY_ARM.EQUIVALENT_STACKUP_MODEL_DEFINITION');
  END_ENTITY;

  ENTITY Equivalent_sub_stack_definition
    SUBTYPE OF (Product_view_definition);
      equivalent_stack : Local_linear_stack;
      primary_sto : Stratum_technology_occurrence;
      primary_sto_link : Stratum_technology_occurrence_link;
    WHERE
      WR1 : primary_sto IN [primary_sto_link\Stratum_technology_occurrence_relationship.sto_1,
                               primary_sto_link\Stratum_technology_occurrence_relationship.sto_2]; 
      WR2 : equivalent_stack\Stratum_sub_stack.associated_stackup :<>: primary_sto_link\Stratum_technology_occurrence_relationship.scope; 
  END_ENTITY;   

  ENTITY Footprint_library_stratum_technology
    SUBTYPE OF (Stratum_technology);
	WHERE
	  WR1: NOT EXISTS(stratum_thickness);
  END_ENTITY;

  ENTITY Impedance_measurement_setup_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      characterized_stackup     : Stratum_sub_stack;
      measurement_stratum_1       : Stratum_technology_occurrence;
      measurement_stratum_2       : Stratum_technology_occurrence;
      reference_stratum         : SET [1:2] OF Stratum_technology_occurrence;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
      WR2: NOT EXISTS(SELF\Product_view_definition.id);
      WR3: SIZEOF([measurement_stratum_1, measurement_stratum_2] * reference_stratum) = 0;
  END_ENTITY;

  ENTITY Impedance_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      frequency_range           : Value_range;
      impedance_value           : Tolerance_characteristic;
      test_bench                : Impedance_measurement_setup_requirement;
      test_method               : Test_specification;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
      WR2: NOT EXISTS(SELF\Product_view_definition.id);
  END_ENTITY;

  ENTITY Inverse_copy_stratum_technology_occurrence_relationship
    SUBTYPE OF (Derived_stratum_technology_occurrence_relationship);
  END_ENTITY;

  ENTITY Local_linear_stack
    SUBTYPE OF (Stratum_sub_stack);
      SELF\Stratum_sub_stack.stratum_technology_sequence : SET[1:?] OF Stratum_technology_occurrence_link;
    WHERE
      WR1: SIZEOF(get_stack(stratum_technology_sequence)) = (SIZEOF(stratum_technology_sequence) + 1);
      WR2: sts_vertex_degree_check(stratum_technology_sequence, 2);
  END_ENTITY;

  ENTITY Passage_deposition_material_identification
    SUBTYPE OF (Material_identification);
    SELF\Material_identification.items : SET [1:?] OF Passage_technology;
  END_ENTITY;

  ENTITY Passage_filling_material_identification
    SUBTYPE OF (Material_identification);
    SELF\Material_identification.items : SET [1:?] OF Passage_technology;
  END_ENTITY;
  
  ENTITY Passage_technology
    SUPERTYPE OF (ONEOF (Default_via_definition,
 			Default_component_termination_passage_definition,
 			Default_unsupported_passage_definition))
    SUBTYPE OF (Characterizable_object, Item_shape);	
      as_finished_deposition_thickness  : OPTIONAL Length_tolerance_characteristic;
      as_finished_passage_extent        : OPTIONAL ft_value_select;      
      maximum_aspect_ratio              : OPTIONAL REAL;      
      minimum_finished_size             : OPTIONAL Length_data_element;      
      plated_passage                    : BOOLEAN;
      passage_terminus_condition        : OPTIONAL ft_terminus_condition;
      minimum_fabrication_allowance     : OPTIONAL Length_data_element;      
      minimum_finished_feature_size     : OPTIONAL Length_data_element;
      supported_external_minimum_annular_ring   : OPTIONAL Length_data_element;
      supported_internal_minimum_annular_ring   : OPTIONAL Length_data_element;
      unsupported_minimum_annular_ring          : OPTIONAL Length_data_element;
    DERIVE
      SELF\Item_shape.described_element : Passage_technology := SELF;     	 
		specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_ARM.PROCESS_SPECIFICATION');
    INVERSE
      deposition_material : SET [0:1] OF Passage_deposition_material_identification FOR items;
      fill_material : SET [0:1] OF Passage_filling_material_identification FOR items;
    UNIQUE
       UR1: SELF\Characterizable_object.name;
    WHERE
       WR1: NOT (SIZEOF(deposition_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]));
       WR2: NOT plated_passage OR (SIZEOF(deposition_material) = 1);
       WR3: NOT EXISTS(as_finished_deposition_thickness) OR (SIZEOF(deposition_material) = 1);
       WR4: NOT plated_passage OR
            (SIZEOF([deposition_material[1]\Material_identification_with_conductivity_classification.electrical_conductivity_classification,
                    deposition_material[1]\Material_identification_with_conductivity_classification.thermal_conductivity_classification] *
                   ['conductive']) >= 1);
       WR5: NOT ((passage_terminus_condition = ft_terminus_condition.bilateral_bond) OR
                 (passage_terminus_condition = ft_terminus_condition.unilateral_bond)) OR
            plated_passage;
       WR6: NOT (EXISTS(as_finished_passage_extent) AND EXISTS(minimum_finished_feature_size));                  
       WR7: NOT EXISTS(supported_external_minimum_annular_ring) OR plated_passage;
       WR8: NOT EXISTS(supported_internal_minimum_annular_ring) OR plated_passage;
       WR9: NOT EXISTS(unsupported_minimum_annular_ring) AND plated_passage;
  END_ENTITY;

  ENTITY Passage_technology_allocation_to_stack_model
    SUBTYPE OF (Stratum_sub_stack);
       allocated_technology                      : Passage_technology;
       single_stratum_passage_location           : OPTIONAL Stratum_technology_occurrence;
	   target_stratum                            : OPTIONAL Stratum_technology_occurrence;
	DERIVE
	   terminus_stratum                : SET OF Stratum_technology_occurrence := ft_get_terminus(SELF\Stratum_sub_stack.stratum_technology_sequence);
    INVERSE
      minimum_annular_ring             : SET [0:?] OF Allocated_passage_minimum_annular_ring FOR associated_passage_allocation;
          WHERE
      WR1: (NOT EXISTS(single_stratum_passage_location) OR
        (single_stratum_passage_location IN
        SELF\Stratum_sub_stack.associated_stackup.composing_occurrence));
      WR2: EXISTS(SELF\Stratum_sub_stack.stratum_technology_sequence) XOR
           EXISTS(single_stratum_passage_location);
      WR3: SIZEOF(get_stack(SELF\Stratum_sub_stack.stratum_technology_sequence)) = 
                 (SIZEOF(SELF\Stratum_sub_stack.stratum_technology_sequence) + 1);
      WR4: sts_vertex_degree_check(SELF\Stratum_sub_stack.stratum_technology_sequence, 2);
	  WR5: NOT EXISTS(single_stratum_passage_location) OR NOT EXISTS(target_stratum);
	  WR6: NOT EXISTS(target_stratum) OR
			  ((target_stratum IN SELF\Stratum_sub_stack.associated_stackup.composing_occurrence) AND
	           (target_stratum IN terminus_stratum));
      WR7: ft_count_unspecified_asto(minimum_annular_ring) < 2;	           
  END_ENTITY;

  ENTITY Stratum_stack_model
    ABSTRACT SUPERTYPE OF (Design_stack_model)
    SUBTYPE OF(Template_definition);
    DERIVE
      composing_occurrence : SET [1:?] OF Stratum_technology_occurrence := get_stack(composing_link);
    INVERSE
      composing_link : SET[1:?] OF Stratum_technology_occurrence_relationship FOR scope;
    WHERE
      WR1 : SIZEOF(QUERY( cl <* composing_link |
            NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE_LINK' IN TYPEOF(cl))
                  )) = 0;  
  END_ENTITY;

  ENTITY Stratum_sub_stack 
    ABSTRACT SUPERTYPE OF (ONEOF(Local_linear_stack, 
      Passage_technology_allocation_to_stack_model))
    SUBTYPE OF (Template_definition);
      stratum_technology_sequence : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link;
      stack_thickness             : OPTIONAL Length_tolerance_characteristic;      
      associated_stackup          : Design_stack_model;
    WHERE
      WR1: SIZEOF(QUERY(sts <* stratum_technology_sequence | 
        NOT(associated_stackup :=: sts\Stratum_technology_occurrence_relationship.scope)) ) = 0;
  END_ENTITY;

  ENTITY Stratum_surface_technology
    SUBTYPE OF (Shape_element);
    SELF\Shape_element.containing_shape RENAMED associated_technology : Stratum_technology;
    DERIVE
      surface_specification: SET[0:1] OF Document_definition :=
        get_document_definition(SELF, 'surface specification',  	
                                      'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
    WHERE
      WR1 : (SIZEOF(QUERY(se <* bag_to_set(USEDIN(SELF,'PROPERTY_ASSIGNMENT_ARM.ASSIGNED_PROPERTY.DESCRIBED_ELEMENT'))
                | 'SURFACE_CONDITIONS_ARM.SURFACE_CONDITION' IN TYPEOF(se) )) > 0) OR 
            (SIZEOF(get_document_definition(SELF, 'surface specification', 'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION')) = 1);
  END_ENTITY;

  ENTITY Stratum_technology
    SUPERTYPE OF (ONEOF (Design_layer_technology, Documentation_layer_technology))
    SUBTYPE OF (Characterizable_object, Item_shape);
      layer_position                   : layer_position_type;
      stratum_thickness                : OPTIONAL Length_tolerance_characteristic;
      minimum_finished_feature_size    : OPTIONAL Length_data_element;
      laminate_stiffness_class         : OPTIONAL stiffness_class;
      minimum_finished_feature_spacing : OPTIONAL Length_data_element;
      maximum_feature_size_requirement : OPTIONAL Length_data_element;
      minimum_aspect_ratio             : OPTIONAL REAL;
	DERIVE
      SELF\Item_shape.described_element : Stratum_technology := SELF;
		specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_ARM.PROCESS_SPECIFICATION');
		surface_specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'surface specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
    INVERSE
	  stratum_material : SET[1:1] OF material_identification FOR items;
	  surface_technology : SET[0:2] OF Stratum_surface_technology FOR associated_technology;      
    UNIQUE
      UR1 : SELF\Characterizable_object.name;
    WHERE
      WR1 : NOT (layer_position = layer_position_type.primary) OR ('FABRICATION_TECHNOLOGY_ARM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
      WR2 : NOT (layer_position = layer_position_type.secondary) OR ('FABRICATION_TECHNOLOGY_ARM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
	  WR3 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (stratum_material);
	  WR4 : NOT((SIZEOF(surface_technology) > 0 ) AND (SIZEOF(surface_specification) = 1));
  END_ENTITY;

  ENTITY Stratum_technology_occurrence;
      name       : STRING; 
      definition : Stratum_technology;
      primary    : OPTIONAL Stratum_surface_technology;
      rotation   : OPTIONAL Angle_data_element;
    UNIQUE
      UR1: name;  
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_link
    SUBTYPE OF(Stratum_technology_occurrence_relationship);
      base_stratum_technology_occurrence : OPTIONAL up_or_down;  
    WHERE
      WR1 : NOT (SELF\Stratum_technology_occurrence_relationship.sto_1 :=: SELF\Stratum_technology_occurrence_relationship.sto_2) OR 
                (SIZEOF(SELF\Stratum_technology_occurrence_relationship.scope\Stratum_stack_model.composing_link) = 1);
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_relationship
    ABSTRACT SUPERTYPE OF (ONEOF
      (Derived_stratum_technology_occurrence_relationship,
       Stratum_technology_occurrence_link,
       Stratum_technology_occurrence_swap_relationship,
       Stratum_technology_occurrence_feature_constraint));
      sto_1 : Stratum_technology_occurrence;
      sto_2 : Stratum_technology_occurrence;
      scope : Stratum_stack_model;
    WHERE
      WR1 : acyclic_stratum_technology_occurrence_relationship(SELF, [sto_2], 
           'FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP');
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_swap_relationship
    SUBTYPE OF (Stratum_technology_occurrence_relationship);
    UNIQUE
      UR1 : SELF\Stratum_technology_occurrence_relationship.sto_1, SELF\Stratum_technology_occurrence_relationship.scope;
      UR2 : SELF\Stratum_technology_occurrence_relationship.sto_2, SELF\Stratum_technology_occurrence_relationship.scope;
    WHERE
      WR1 : SELF\Stratum_technology_occurrence_relationship.sto_1 <> SELF\Stratum_technology_occurrence_relationship.sto_2;
      WR2 : (SELF\Stratum_technology_occurrence_relationship.sto_1 IN SELF\Stratum_technology_occurrence_relationship.scope\Stratum_stack_model.composing_occurrence) AND
         (SELF\Stratum_technology_occurrence_relationship.sto_2 IN SELF\Stratum_technology_occurrence_relationship.scope\Stratum_stack_model.composing_occurrence);
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_feature_constraint
    SUBTYPE OF (Stratum_technology_occurrence_relationship);
      difference_distance   : OPTIONAL Length_measure;    
      intersection_distance : OPTIONAL Length_measure;
    WHERE
      WR1: EXISTS (difference_distance) XOR EXISTS(intersection_distance);
  END_ENTITY;
  
  ENTITY Stratum_technology_mapping_relationship;
      source_stratum_technology   : Footprint_library_stratum_technology;
      target_stratum_technology   : Stratum_technology;
    WHERE 
      WR1 : NOT ('FABRICATION_TECHNOLOGY_ARM.FOOTPRINT_LIBRARY_STRATUM_TECHNOLOGY' IN TYPEOF(target_stratum_technology));
      WR2 : acyclic_stratum_technology_mapping_relationship(SELF,
        [target_stratum_technology], 
       'FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP');
  END_ENTITY;

  ENTITY Stratum_technology_swap_relationship;
      primary_stratum_technology   : Stratum_technology;
      secondary_stratum_technology : Stratum_technology;
    UNIQUE
      UR1: primary_stratum_technology;
      UR2: secondary_stratum_technology;
    WHERE 
      WR1 : NOT (('FABRICATION_TECHNOLOGY_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(primary_stratum_technology)) AND
              EXISTS(primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose))
          OR
          (primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose =
           secondary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose);
      WR2: TYPEOF(primary_stratum_technology) = TYPEOF(secondary_stratum_technology);
      WR3: primary_stratum_technology\Stratum_technology.layer_position = layer_position_type.primary;
      WR4: secondary_stratum_technology\Stratum_technology.layer_position = layer_position_type.secondary;
      WR5: primary_stratum_technology <> secondary_stratum_technology;
      WR6: acyclic_stratum_technology_swap_relationship(SELF,
        [secondary_stratum_technology], 
       'FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP');
  END_ENTITY;

FUNCTION acyclic_equivalent_stackup_model_definition
  (relation : Equivalent_stackup_model_definition; relatives : SET[1:?] OF
  Stratum_stack_model; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Equivalent_stackup_model_definition := [];
END_LOCAL;

    IF relation.primary_stackup_model IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.primary_stackup_model,
        'FABRICATION_TECHNOLOGY_ARM.' + 'EQUIVALENT_STACKUP_MODEL_DEFINITION.' +
        'EQUIVALENT_STACKUP_MODEL')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_equivalent_stackup_model_definition(x[i], relatives +
        relation.primary_stackup_model, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 


  FUNCTION acyclic_stratum_technology_occurrence_relationship
    (relation : Stratum_technology_occurrence_relationship; 
    relatives : SET[1:?] OF Stratum_technology_occurrence; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_occurrence_relationship := [];
  END_LOCAL;
    IF relation.sto_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.sto_1,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP.' +
      'STO_2')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_Stratum_technology_occurrence_relationship(x[i], relatives +
        relation.sto_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_swap_relationship
    (relation : Stratum_technology_swap_relationship; 
    relatives : SET[1:?] OF Stratum_technology; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_swap_relationship := [];
  END_LOCAL;

    IF relation.primary_stratum_technology IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.primary_stratum_technology,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP.' +
      'SECONDARY_STRATUM_TECHNOLOGY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_swap_relationship(x[i], relatives +
        relation.primary_stratum_technology, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_stratum_technology_mapping_relationship
    (relation : Stratum_technology_mapping_relationship; 
    relatives : SET[1:?] OF Stratum_technology; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_mapping_relationship := [];
  END_LOCAL;

    IF relation.source_stratum_technology IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.source_stratum_technology,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP.' +
      'TARGET_STRATUM_TECHNOLOGY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_mapping_relationship(x[i], relatives +
        relation.source_stratum_technology, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

FUNCTION ft_get_terminus(input : SET OF Stratum_technology_occurrence_link) : SET OF Stratum_technology_occurrence;
LOCAL
  sto : SET OF Stratum_technology_occurrence := get_stack(input);
  i : INTEGER := 0;
  j : INTEGER := 0;
  pstoo : SET OF Stratum_technology_occurrence := [];
  sstoo : SET OF Stratum_technology_occurrence := [];
END_LOCAL;
  pstoo := sto;
  sstoo := sto;
 REPEAT i := 1 TO SIZEOF(sto) BY 1;
  REPEAT j := 1 TO SIZEOF(input) BY 1;
	IF (input[j]\Stratum_technology_occurrence_relationship.sto_1 :=: sto[i]) THEN 
	  pstoo := pstoo - sto[i];
	END_IF;  
	IF (input[j]\Stratum_technology_occurrence_relationship.sto_2 :=: sto[i]) THEN 
	  sstoo := sstoo - sto[i];
	END_IF;  
  END_REPEAT;                                     
 END_REPEAT;                                     
RETURN(pstoo + sstoo);
END_FUNCTION;                                 

  FUNCTION get_stack(input : SET OF Stratum_technology_occurrence_link) : SET OF Stratum_technology_occurrence;
    LOCAL
      sto : SET OF Stratum_technology_occurrence := [];
      i : INTEGER := 0;
    END_LOCAL;
    REPEAT  i := 1 TO SIZEOF(input) BY 1;
      sto := sto + input[i]\Stratum_technology_occurrence_relationship.sto_1 + input[i]\Stratum_technology_occurrence_relationship.sto_2;
    END_REPEAT;
    RETURN(sto);
  END_FUNCTION;

  FUNCTION ft_count_unspecified_asto(input : SET OF Allocated_passage_minimum_annular_ring) : INTEGER;
    LOCAL
     count : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 to SIZEOF(input) BY 1;
     IF NOT EXISTS(input[i]\Allocated_passage_minimum_annular_ring.associated_stratum_technology_occurrence) THEN
       count := count + 1;
     END_IF;
    END_REPEAT;
    RETURN(count);
  END_FUNCTION;
  
  FUNCTION less(input1 : Length_tolerance_characteristic;
              input2 : ft_value_select) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

 FUNCTION sts_vertex_degree_check(input : SET OF Stratum_technology_occurrence_link;
                                       n : INTEGER) : BOOLEAN;
 LOCAL
   psto : INTEGER := 0;
   ssto : INTEGER := 0;
   sto : SET OF Stratum_technology_occurrence := get_stack(input);
   i : INTEGER := 0;
   j : INTEGER := 0;
   pass : BOOLEAN := TRUE;
 END_LOCAL;
  REPEAT i := 1 TO SIZEOF(sto) BY 1;
   REPEAT j := 1 TO SIZEOF(input) BY 1;
     IF (input[j]\Stratum_technology_occurrence_relationship.sto_1 :=: sto[i]) THEN 
      psto := psto + 1;
      IF (psto = n) THEN
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
     IF (input[j]\Stratum_technology_occurrence_relationship.sto_2 :=: sto[i]) THEN 
      ssto := ssto + 1;  
      IF (ssto = n) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
   END_REPEAT;                                     
  END_REPEAT;                                     
 RETURN(pass);
 END_FUNCTION;                                 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.40 2012/10/11 05:49:23 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8017 - ISO/TS 10303-1671 Feature and connection zone - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7442
*)

SCHEMA Feature_and_connection_zone_arm; 

	USE FROM Shape_feature_arm; 
	USE FROM Surface_conditions_arm;
    REFERENCE FROM Support_resource_arm(bag_to_set); 

ENTITY Connection_zone
  SUBTYPE OF (Shape_element);
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
WHERE
  WR1 : NOT EXISTS (SELF\Shape_element.description);
  WR2 : NOT EXISTS (SELF\Shape_element.element_name);
END_ENTITY;

ENTITY Definitional_shape_element
  ABSTRACT SUPERTYPE
  SUBTYPE OF (Shape_element);
  connection_area : OPTIONAL SET[1:?] OF Connection_zone;
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
UNIQUE
  UR1 : SELF\Shape_element.element_name, 
        SELF\shape_element.containing_shape;
END_ENTITY;

ENTITY Feature_definition_with_connection_area
  SUBTYPE OF (Shape_feature_definition);
  connection_area : OPTIONAL SET [1:?] OF Connection_zone;
END_ENTITY;

ENTITY Non_definitional_shape_element 	 
  SUBTYPE OF (Shape_element); 	 
END_ENTITY;

SUBTYPE_CONSTRAINT fac_shape_element FOR Shape_element;
  ONEOF (Instanced_feature, Placed_feature) ANDOR
  ONEOF (Definitional_shape_element, Non_definitional_shape_element);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.16 2010/06/02 13:17:19 philsp Exp $
 ISO TC184/SC4/WG12 N2123 - ISO/TS 10303-1127 File identification - EXPRESS ARM
*)

SCHEMA File_identification_arm;

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128


TYPE located_select = SELECT BASED_ON external_identification_item WITH 
   (File);
END_TYPE; 

ENTITY Digital_file
  SUBTYPE OF (File);
END_ENTITY;

ENTITY File
  ABSTRACT SUPERTYPE OF (ONEOF (Digital_file,
                                Hardcopy));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;

ENTITY File_location_identification
  SUBTYPE OF (External_item_identification);
WHERE
  WR1: 'FILE_IDENTIFICATION_ARM.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

ENTITY Hardcopy
  SUBTYPE OF (File);
END_ENTITY;

END_SCHEMA;  -- File_identification_arm
(*
   $Id: arm.exp,v 1.15 2009/12/23 11:37:49 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6899 - ISO/TS 10303-1672 Fill area style - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5392
*)

SCHEMA Fill_area_style_arm;

USE FROM Basic_curve_arm;	-- ISO/TS 10303-1651
USE FROM Curve_appearance_arm;	-- ISO/TS 10303-1003
USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
USE FROM Extended_basic_geometry_arm; 	-- ISO/TS 10303-1667 

  ENTITY Solid_fill_area_style;
    fill_colour : Colour; 
  END_ENTITY;  

  ENTITY Externally_defined_hatch_style
    SUBTYPE OF (Hatch_style); 
  END_ENTITY;

  ENTITY Externally_defined_tile_style
    SUBTYPE OF (Tile_style); 
  END_ENTITY;

  ENTITY Hatch_style
    ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_hatch_style, User_defined_hatch_style))
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Tile_style
    ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_tile_style, User_defined_tile_style))
	SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY User_defined_hatch_style
    SUBTYPE OF (Hatch_style);
      hatch_line_appearance         : Curve_appearance;
      start_of_next_hatch_line      : Vector;
      point_of_reference_hatch_line : Cartesian_point;
      pattern_start                 : Cartesian_point;
      hatch_line_angle              : Angle_data_element;
    WHERE
     WR1 : 'STYLED_CURVE_ARM.SOLID_CURVE_FONT' IN TYPEOF(SELF.hatch_line_appearance.font);
  END_ENTITY;

  ENTITY User_defined_tile_style
    SUBTYPE OF (Tile_style);
      first_direction_repeat_factor  : Vector;
      second_direction_repeat_factor : Vector;
      tiling_scale                   : INTEGER;
  END_ENTITY;
  
SUBTYPE_CONSTRAINT fas_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
          ONEOF (Hatch_style, Tile_style);
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.41 2012/10/11 05:49:22 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8140 - ISO/TS 10303-1646 Footprint definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6968
*)

SCHEMA Footprint_definition_arm;

    USE FROM Layered_interconnect_complex_template_arm; -- ISO/TS 10303-1716
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	REFERENCE FROM Support_resource_arm(bag_to_set); 

  SUBTYPE_CONSTRAINT structured_template_planar_shape_model_subtypes FOR Structured_template_planar_shape_model;   
 	(ONEOF (Breakout_footprint_definition_shape_model, Footprint_definition_shape_model));
  END_SUBTYPE_CONSTRAINT;  

  SUBTYPE_CONSTRAINT multi_stratum_structured_template_subtypes FOR Multi_stratum_structured_template;   
 	(ONEOF (Padstack_definition, Generic_footprint_definition, Multi_stratum_special_symbol_template));
  END_SUBTYPE_CONSTRAINT;  

  ENTITY Breakout_footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_footprint : Footprint_definition;
    INVERSE
      breakout_traces : SET[1:?] OF Stratum_feature_template_location_in_breakout_footprint_definition FOR assembly;
    WHERE
      WR1: SELF\Multi_stratum_structured_template.location = reference_footprint\Multi_stratum_structured_template.location;
  END_ENTITY;

  ENTITY Breakout_footprint_definition_shape_model
    SUBTYPE OF (Structured_template_planar_shape_model);
      SELF\Structured_template_planar_shape_model.shape_characterized_definition : SET[1:1] OF Breakout_footprint_definition;
      reference_shape : Footprint_definition_shape_model;
    WHERE
      WR1 : reference_shape.shape_characterized_definition[1] :=: shape_characterized_definition[1].reference_footprint;
  END_ENTITY;

  ENTITY Footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_package : OPTIONAL Part_usage_view;
    DERIVE
      locations_with_reference_feature : SET OF Part_feature_based_template_location := QUERY(trf <* templates | 'FOOTPRINT_DEFINITION_ARM.PART_FEATURE_BASED_TEMPLATE_LOCATION' IN TYPEOF(trf));
    WHERE
      WR1 : SIZEOF (QUERY(shape <* SELF\Structured_template.shapes |
               NOT ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.FOOTPRINT_DEFINITION_SHAPE_MODEL' IN TYPEOF(shape))
              )) = 0;
      WR2 : SIZEOF (QUERY(tlist <* SELF\Structured_template.templates |
               ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(tlist.template))
              )) = 0;
      WR3: (SIZEOF(locations_with_reference_feature) = 0) OR
           NOT EXISTS(reference_package) OR
           (SIZEOF(QUERY( lwrf <* locations_with_reference_feature | NOT(reference_package :=: lwrf\Part_feature_based_template_location.reference_feature\Part_feature.associated_definition))) = 0);
  END_ENTITY;

  ENTITY Footprint_definition_shape_model
    SUBTYPE OF (Structured_template_planar_shape_model);
      SELF\Structured_template_planar_shape_model.shape_characterized_definition : SET[1:1] OF Footprint_definition;
      reference_shape : OPTIONAL lict_physical_unit_shape_model_select;
      reference_seating_plane_placement : OPTIONAL Usage_concept_usage_relationship;
    WHERE
      WR1 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
            NOT ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_USAGE_VIEW' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_definition)) OR
            NOT ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(shape_characterized_definition[1])) OR      
                 (shape_characterized_definition[1]\Footprint_definition.reference_package :=: reference_shape\Physical_unit_shape_model.shape_characterized_definition);

      WR2 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
                ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_USAGE_VIEW' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_definition));
      WR3 : NOT EXISTS(SELF\Representation.description);
      WR4 : NOT EXISTS(reference_shape) OR EXISTS(shape_characterized_definition[1]\Footprint_definition.reference_package);
      WR5 : NOT EXISTS(reference_seating_plane_placement) OR EXISTS(reference_shape);
      WR6 : NOT EXISTS(reference_seating_plane_placement) OR ('PACKAGE_ARM.PACKAGE' IN TYPEOF(shape_characterized_definition[1]\Footprint_definition.reference_package));
      WR7 : NOT EXISTS(reference_seating_plane_placement) OR ('NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN 
                TYPEOF(reference_seating_plane_placement\Usage_concept_usage_relationship.associated_usage));
      WR8 : NOT EXISTS(reference_seating_plane_placement) OR 
                ((reference_seating_plane_placement\Usage_concept_usage_relationship.associating_usage_shape\Usage_view_level_non_feature_shape_model.model_shape) =
                reference_shape);
      WR9 : NOT EXISTS(reference_seating_plane_placement) OR 
                ((reference_seating_plane_placement\Usage_concept_usage_relationship.associated_usage\Non_feature_shape_element.scope) =
                shape_characterized_definition[1]\Footprint_definition.reference_package);
     WR10 : NOT EXISTS(reference_seating_plane_placement) OR ('PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL' IN 
                TYPEOF(reference_seating_plane_placement\Usage_concept_usage_relationship.associating_usage_shape\Usage_view_level_non_feature_shape_model.model_shape));
     WR11 : NOT (EXISTS(reference_seating_plane_placement) AND ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF(reference_shape)));
     WR12 : NOT ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF(reference_shape)) OR
                 (SELF\Geometric_model.context_of_items = reference_shape\Geometric_model.context_of_items);                           
  END_ENTITY;

  ENTITY Generic_footprint_definition
    ABSTRACT SUPERTYPE OF (ONEOF (Footprint_definition, Breakout_footprint_definition))
    SUBTYPE OF (Multi_stratum_structured_template);
    DERIVE 
      padstack_based_location : template_arrangement := get_template_arrangement(padstacks);
      padstacks : SET[1:?] OF Template_location_in_structured_template := QUERY(tlict <* SELF\Structured_template.templates |
         ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(tlict.template)));
      single_stratum_components : SET[0:?] OF Single_stratum_template := fd_get_single_stratum_components(SELF\Structured_template.templates);   
    WHERE
      WR1 : SIZEOF(QUERY(ps <* SELF\Structured_template.templates | (ps\Template_location_in_structured_template.template\Multi_stratum_structured_template.location <> SELF\Multi_stratum_structured_template.location)
              AND (ps\Template_location_in_structured_template.template\Multi_stratum_structured_template.location <> template_arrangement.symmetrical))) = 0;
      WR2 : ((SELF\Multi_stratum_structured_template.location = template_arrangement.top) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top')) OR 
            (NOT (SELF\Multi_stratum_structured_template.location = template_arrangement.top) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top'));
      WR3 : ((SELF\Multi_stratum_structured_template.location = template_arrangement.bottom) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom')) OR 
            (NOT (SELF\Multi_stratum_structured_template.location = template_arrangement.bottom) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom'));
      WR4 : ((SELF\Multi_stratum_structured_template.location = template_arrangement.symmetrical) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical')) OR 
            (NOT (SELF\Multi_stratum_structured_template.location = template_arrangement.symmetrical) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical'));
      WR5 : ((SELF\Multi_stratum_structured_template.location = template_arrangement.swappable) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'swappable')) OR 
            (NOT (SELF\Multi_stratum_structured_template.location = template_arrangement.swappable) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'swappable'));
      WR6 : NOT (SIZEOF(single_stratum_components) = 0) OR (SELF\Multi_stratum_structured_template.location = padstack_based_location);      
  END_ENTITY;

  ENTITY Package_footprint_relationship_definition
    SUBTYPE OF (Product_view_definition);
    DERIVE
      associated_model : SET [1:1] OF Geometric_model := fd_get_amodel(SELF);
      related_models : SET [2:2] OF Geometric_model := fd_get_rmodels(related_elements);
      related_transforms : SET [2:2] OF Geometric_model_relationship_with_transformation := 
                           fd_get_transforms(associated_model, related_models);      
    INVERSE
      related_elements : SET [2:2] OF View_definition_relationship for related_view;
    WHERE
      WR1: SIZEOF(QUERY(re <* related_elements | 
            ('PACKAGE_ARM.PACKAGE' IN TYPEOF(re\View_definition_relationship.relating_view))
            )) = 1;
      WR2: SIZEOF(QUERY(re <* related_elements | 
            ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(re\View_definition_relationship.relating_view))
            )) = 1;
      WR3: SIZEOF(related_models) = 2;
      WR4: SIZEOF(associated_model) = 1;
      WR5: SIZEOF(QUERY(rm <* related_models |
                  ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF(rm))
              )) = 1;
      WR6: SIZEOF(QUERY(rm <* related_models |
                  ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION_SHAPE_MODEL' IN TYPEOF(rm))
              )) = 1;
      WR7: 'LAYERED_2D_SHAPE_ARM.PLANAR_SHAPE_MODEL' IN TYPEOF(associated_model[1]);
      WR8: SIZEOF(related_transforms) = 2;
  END_ENTITY;

  ENTITY Part_feature_based_template_location
    SUBTYPE OF (Template_location_in_structured_template);
      reference_feature : Part_feature;
  END_ENTITY;

  ENTITY Stratum_feature_template_location_in_breakout_footprint_definition
    SUBTYPE OF (Stratum_specific_template_location);
      SELF\Template_location_in_structured_template.assembly : Breakout_footprint_definition;
      SELF\Template_location_in_structured_template.template : Stratum_feature_template;
      original_padstack : Part_feature_based_template_location;
      breakout_padstack : Template_location_in_structured_template;
    WHERE
    -- original_padstack must belong to Footprint_definition
      WR1: original_padstack.assembly :=: assembly.reference_footprint;
    -- breakout_padstack must belong to Breakout_footprint_definition
      WR2: breakout_padstack.assembly :=: assembly;
  END_ENTITY;

  FUNCTION fd_get_components(input : SET[2:2] OF View_definition_relationship) : SET OF Product_view_definition;
    LOCAL
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      pvd := pvd + input[i]\View_definition_relationship.relating_view;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION; 

  FUNCTION fd_get_amodel (input : Product_view_definition) : SET OF Geometric_model;
    LOCAL
      gm : SET OF Geometric_model := [];
      is : SET OF Item_shape := [];
      sda : SET OF Shape_description_association := [];      
    END_LOCAL;
    
    is := bag_to_set(USEDIN(input,'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE.DESCRIBED_ELEMENT'));

    IF (SIZEOF(is) >= 0) THEN
      REPEAT i := 1 TO HIINDEX(is);
      sda := sda + bag_to_set(USEDIN(input,'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.DEFINITION'));
      END_REPEAT;
     IF (SIZEOF(sda) >= 0) THEN
       REPEAT i := 1 TO HIINDEX(sda);
       gm := gm + sda[i]\Property_definition_representation.used_representation;
       END_REPEAT;    
       RETURN (gm);
     END_IF;
    END_IF;
    RETURN(?);  
  END_FUNCTION; 

  FUNCTION fd_get_rmodels (input : SET[2:2] OF View_definition_relationship) : SET OF Geometric_model;
    LOCAL
      gm : SET OF Geometric_model := [];
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
      pvd := fd_get_components(input);
    IF (SIZEOF(pvd) >= 0) THEN      
      REPEAT i := 1 TO HIINDEX(pvd);
        gm := gm + fd_get_amodel(pvd[i]);
      END_REPEAT;
      RETURN (gm);
    END_IF;
    RETURN(?);
  END_FUNCTION; 
  
  FUNCTION fd_get_single_stratum_components(input : SET OF Template_location_in_structured_template) : SET OF Single_stratum_template;
    LOCAL
      sst : SET OF Single_stratum_template := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      IF ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.SINGLE_STRATUM_TEMPLATE' IN TYPEOF(input[i]\Template_location_in_structured_template.template))
      THEN      
        sst := sst + input[i]\Template_location_in_structured_template.template;
      END_IF;
    END_REPEAT;
    RETURN (sst);
  END_FUNCTION;   
  

  FUNCTION get_template_arrangement(
    input : SET OF Template_location_in_structured_template
  ) : template_arrangement;

    LOCAL
      tlist          : SET OF Template_location_in_structured_template := 
        (QUERY(inx <* input | ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.MULTI_STRATUM_STRUCTURED_TEMPLATE' IN TYPEOF(inx.template))));
      pabt           : BAG OF STRING := [];
      pabb           : BAG OF STRING := [];
      pabsymmetrical : BAG OF STRING := [];
      pabswappable   : BAG OF STRING := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(tlist) BY 1;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.top) THEN
        pabt := pabt + 'top';
      END_IF;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.bottom) THEN
        pabb := pabb + 'bottom';
      END_IF;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.symmetrical) THEN
        pabsymmetrical := pabsymmetrical + 'symmetrical';
      END_IF;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.swappable) THEN
        pabswappable := pabswappable + 'swappable';
      END_IF;
    END_REPEAT;
    IF ((SIZEOF(pabt) > 0) AND (SIZEOF(pabb) = 0)) THEN
      RETURN(template_arrangement.top);
    END_IF;
    IF ((SIZEOF(pabb) > 0) AND (SIZEOF(pabt) = 0)) THEN
      RETURN(template_arrangement.bottom);
    END_IF;
    IF ((SIZEOF(pabb) = 0) AND (SIZEOF(pabt) = 0) AND (SIZEOF(pabsymmetrical) > 0)) THEN
      RETURN(template_arrangement.symmetrical);
    END_IF;
    IF ((SIZEOF(pabb) = 0) AND (SIZEOF(pabt) = 0) AND (SIZEOF(pabsymmetrical) = 0) AND (SIZEOF(pabswappable) > 0)) THEN
      RETURN(template_arrangement.swappable);
    END_IF;
    RETURN(?);
  END_FUNCTION;

  FUNCTION fd_get_transforms(input1 : SET[1:1] OF Geometric_model;
                             input2 : SET[2:2] OF Geometric_model) 
                             : SET OF Geometric_model_relationship_with_transformation;
    LOCAL
      gmrwt : SET OF Geometric_model_relationship_with_transformation := [];
    END_LOCAL;
    gmrwt := bag_to_set(USEDIN(input1[1],'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_1'));
    REPEAT i := 1 TO HIINDEX(gmrwt);
      IF NOT
        ((gmrwt[i]\Geometric_model_relationship.rep_2 IN input2)
         AND
        ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_MODEL_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(gmrwt[i])))
      THEN
       RETURN(?);
      END_IF;
    END_REPEAT;
    RETURN(gmrwt);
  END_FUNCTION; 

END_SCHEMA;
(*
$Id: arm.exp,v 1.20 2009/12/21 09:20:21 liutkuviene Exp $
ISO TC184/SC4/WG12 N6902 - ISO/TS 10303-1006 Foundation representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N4348
*) 


SCHEMA Foundation_representation_arm; 

USE FROM Support_resource_arm;
REFERENCE FROM Support_resource_arm (bag_to_set);
USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;

ENTITY Representation;
  id : OPTIONAL identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Representation_context;
  id : identifier;
  kind : text;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;

ENTITY Representation_item
  ABSTRACT SUPERTYPE ;
  name : OPTIONAL label;
END_ENTITY;

ENTITY Representation_relationship;
  relation_type : OPTIONAL label;
  description : OPTIONAL text;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;

  FUNCTION using_representations (item : Representation_item): SET OF Representation;
    LOCAL
      results            : SET OF Representation;
      result_bag         : BAG OF Representation;
      intermediate_items : SET OF Representation_item;
    END_LOCAL;
    -- Find the representations in which the item is used and add to the
    -- results set.
    results := [];
    result_bag := USEDIN(item,'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag);
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    -- Find all representation_items or founded_items
    -- by which item is referenced directly or indirectly.
    intermediate_items := using_items(item,[]);
    -- If the set of intermediate items is not empty;
    IF SIZEOF(intermediate_items) > 0 THEN
      -- For each element in the set, add the
      -- representations of that element.
      REPEAT i := 1 TO HIINDEX(intermediate_items);
        result_bag := USEDIN(intermediate_items[i],
                      'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag);
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    -- Return the set of representation in which the input item is
    -- used directly and indirectly (through intervening
    -- representation_items or founded items).
    RETURN (results);
  END_FUNCTION;

  FUNCTION using_items (item : Representation_item;
                        checked_items: SET OF Representation_item)
                      : SET OF Representation_item;
    LOCAL
      new_check_items    : SET OF Representation_item;
      result_items       : SET OF Representation_item;
      next_items         : SET OF Representation_item;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    -- Find the set of representation_items or founded_items
    -- in which item is used directly.
    next_items := QUERY(z <* bag_to_set( USEDIN(item , '')) |
      ('FOUNDATION_REPRESENTATION_ARM.REPRESENTATION_ITEM' IN TYPEOF(z)));
    -- If the set of next_items is not empty;
    IF SIZEOF(next_items) > 0 THEN
      -- For each element in the set, find the using_items recursively
      REPEAT i := 1 TO HIINDEX(next_items);
        -- Check for loop in data model, i.e. one of the next_items
        -- occurred earlier in the set of check_items;
        IF NOT(next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] +
                          using_items(next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    -- return the set of representation_items or founded_items
    -- in which the input item is used directly and indirectly.
    RETURN (result_items);
  END_FUNCTION;

END_SCHEMA;  -- Foundation_representation_arm
(*
   $Id: arm.exp,v 1.18 2009/04/23 11:07:06 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6381 - ISO/TS 10303-1674 Functional assignment to part - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5653
*)

SCHEMA Functional_assignment_to_part_arm;

	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732
	USE FROM Physical_connectivity_definition_arm;	-- ISO/TS 10303-1755

	TYPE fatp_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Part_connected_terminals_definition);
	END_TYPE; 

	TYPE fatp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	 (Part_connected_terminals_element,
   	  Part_connected_terminals_definition);
    END_TYPE; 

	TYPE fatp_termination_or_junction = EXTENSIBLE GENERIC_ENTITY SELECT
	(Part_terminal,
	 Part_connected_terminals_topological_junction);
  END_TYPE;

	TYPE fatp_part_connected_terminals_definition_domain_enumeration = EXTENSIBLE ENUMERATION OF
		(electrical,
		 thermal,
		 optical,
		 magnetic);
    END_TYPE;
     	
  ENTITY Functional_usage_view_to_part_terminal_assignment;
      physical_usage_view_terminal   : Part_terminal;
      functional_usage_view_terminal : Scalar_terminal_definition;
    UNIQUE
      UR1 : functional_usage_view_terminal, physical_usage_view_terminal;
  END_ENTITY;

  ENTITY Part_connected_terminals_definition;
      name                  : STRING;   
      associated_definition : Part_usage_view;
      connected_terminals   : SET[2:?] OF Part_terminal;
    INVERSE
      domain : SET [0:1] OF Part_connected_terminals_definition_domain for associated_definition;
    UNIQUE
      UR1 : name, associated_definition;
    WHERE
      WR1 : SIZEOF(QUERY(ct <* connected_terminals | NOT (associated_definition = ct\Shape_element.containing_shape))) = 0;
  END_ENTITY;

  ENTITY Part_connected_terminals_definition_domain;
      domain_type : fatp_part_connected_terminals_definition_domain_enumeration;
      associated_definition : Part_connected_terminals_definition;
  END_ENTITY;
  

  ENTITY Part_connected_terminals_layout_topology_requirement_assignment
    SUBTYPE OF(Requirement_assignment);
      SELF\Requirement_assignment.assigned_requirement : Physical_connectivity_layout_topology_requirement;
      SELF\Requirement_assignment.assigned_to          : Part_connected_terminals_definition;
  END_ENTITY;

  ENTITY Part_connected_terminals_element;
    name                 : STRING; 
    start_terminus       : fatp_termination_or_junction;
    end_terminus         : fatp_termination_or_junction;
    connectivity_context : Part_connected_terminals_definition;
  UNIQUE
    UR1 : name, connectivity_context;
  WHERE
    WR1 : start_terminus <> end_terminus;
 END_ENTITY;

 ENTITY Part_connected_terminals_structure_definition
 SUBTYPE OF (Part_connected_terminals_definition);
 DERIVE
   structural_terminal_nodes : SET OF Part_terminal := fatp_get_pt(structural_element);
   structural_junction_nodes : SET OF Part_connected_terminals_topological_junction := fatp_get_tj(structural_element);
   tree_structure : LOGICAL := ((SIZEOF(structural_terminal_nodes) + SIZEOF(structural_junction_nodes)) = (SIZEOF(structural_element) + 1));
 INVERSE
   structural_element : SET[1:?] OF Part_connected_terminals_element FOR connectivity_context;
 WHERE
   WR1 : SIZEOF(QUERY(stn <* structural_terminal_nodes |
				NOT(stn IN SELF\Part_connected_terminals_definition.connected_terminals)
				)) = 0;
   WR2 : SIZEOF(structural_terminal_nodes) = SIZEOF(SELF\Part_connected_terminals_definition.connected_terminals);
END_ENTITY;

ENTITY Part_connected_terminals_topological_junction;
    name  : STRING;   
    scope : Part_connected_terminals_structure_definition;
  UNIQUE
    UR1 : name, scope;
END_ENTITY; 

  ENTITY Part_terminal
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Part_feature);
      SELF\shape_element.description RENAMED terminal_type : OPTIONAL STRING;
    INVERSE
      connection_requirement         : SET[0:1] OF Part_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET[0:1] OF Functional_usage_view_to_part_terminal_assignment FOR physical_usage_view_terminal;
  END_ENTITY;

  FUNCTION fatp_get_pt(input : SET OF Part_connected_terminals_element) : SET OF Part_terminal;
  LOCAL
   pct : SET OF Part_terminal := [];
	i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(input[i].start_terminus)) THEN
   pct := pct + input[i].start_terminus;
   END_IF;
   IF ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(input[i].end_terminus)) THEN
   pct := pct + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(pct);
  END_FUNCTION;

  FUNCTION fatp_get_tj(input : SET OF Part_connected_terminals_element) : SET OF Part_connected_terminals_topological_junction;
  LOCAL
   tj : SET OF Part_connected_terminals_topological_junction := [];
	i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_CONNECTED_TERMINALS_TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].start_terminus)) THEN
   tj := tj + input[i].start_terminus;
   END_IF;
   IF ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_CONNECTED_TERMINALS_TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].end_terminus)) THEN
   tj := tj + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(tj);
  END_FUNCTION;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2009/04/23 11:08:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6384 - ISO/TS 10303-1679 Functional specification - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5656
*)

SCHEMA Functional_specification_arm;

	USE FROM Signal_arm;	-- ISO/TS 10303-1745
	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704	

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE fs_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Signal_specification);
	END_TYPE; 

 	TYPE fs_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Functional_specification);
	END_TYPE;

    TYPE fs_node_or_terminal = SELECT
        (Functional_unit_network_node_definition,
         Functional_unit_terminal);
    END_TYPE;

  ENTITY Functional_specification;
      associated_definition          	: Functional_specification_definition;
      reference_signal               	: SET [1:?] OF Signal_specification;
      characterizing_functional_unit 	: Functional_unit;
      characterizing_signal          	: SET [1:?] OF Signal_specification;
    INVERSE
      characteristic_category		    : External_source_identification FOR item;
    WHERE
      WR1 : characterizing_functional_unit.composed_network = associated_definition;
  END_ENTITY;

  ENTITY Functional_specification_definition
    SUBTYPE OF (Functional_unit_network_definition);
    INVERSE
      composing_specification : SET[1:?] OF functional_specification FOR associated_definition;
  END_ENTITY;

  ENTITY Signal_specification;
      signal_access_mechanism      : fs_node_or_terminal;
      reference_access_mechanism   : OPTIONAL fs_node_or_terminal;
      minimum_characteristic       : OPTIONAL Signal_property;
      maximum_characteristic       : OPTIONAL Signal_property;
      characterization_network     : Functional_unit_network_definition;
      nominal_characteristic       : OPTIONAL Signal_property;
	DERIVE
	  measurement_condition: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'measurement condition', 
  			'SPECIFICATION_DOCUMENT_ARM.TEST_SPECIFICATION');
   WHERE
    WR1 : EXISTS (minimum_characteristic) OR
          EXISTS (maximum_characteristic) OR
          EXISTS (nominal_characteristic);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.25 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7717 - ISO/TS 10303-1705 Functional usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6971
*)

SCHEMA Functional_usage_view_arm;

 USE FROM Analytical_model_arm;		-- ISO/TS 10303-1603
 
 USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032
 
REFERENCE FROM Support_resource_arm(bag_to_set); 

  
  TYPE fuuv_am_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH  
	(Functional_unit_usage_view_terminal_definition);
  END_TYPE;

  TYPE fuuv_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
     (Functional_unit_usage_view_terminal_definition);
  END_TYPE;

  ENTITY Equivalent_functional_terminals_assignment;
      name                 : STRING;   
      equivalent_terminals : SET[2:?] OF Functional_unit_usage_view_terminal_definition;
  END_ENTITY;
 
  ENTITY Equivalent_functional_unit_definition_assignment;
      name                                   : STRING;   
      equivalent_functional_unit_definitions : SET[2:?] OF Functional_unit_definition;
  END_ENTITY;

  ENTITY Functional_product
  	SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;
  
  ENTITY Functional_terminal_group;
      name              : STRING; 
      group_description : STRING;
      group_type        : STRING;
    UNIQUE
      UR1 : name;
  END_ENTITY;

  ENTITY Functional_terminal_group_assignment;
      composed_group                 : Functional_terminal_group;
      functional_usage_view_terminal : Scalar_terminal_definition;
  END_ENTITY;
 
  ENTITY Functional_unit_definition
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Information_definition, Item_shape);
      SELF\Product_view_definition.defined_version : Functional_version;
    DERIVE
      SELF\Item_shape.described_element : shapeable_item := SELF;
  END_ENTITY;

	ENTITY Functional_unit_make_from_relationship
		SUBTYPE OF (View_definition_relationship);
		  SELF\View_definition_relationship.relating_view : Functional_unit_usage_view;		
		  SELF\View_definition_relationship.related_view 	: Functional_unit_usage_view;
		WHERE
          WR1 : acyclic_functional_unit_make_from_relationship (SELF, [related_view], 
            'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP');
	END_ENTITY;

  ENTITY Functional_unit_usage_view
    SUBTYPE OF (Functional_unit_definition);
     DERIVE analytical_model_application_reference : SET[0:?] OF Analytical_model_application := get_ama(access_mechanism[1]);
     INVERSE
      access_mechanism : SET[0:?] OF functional_unit_usage_view_terminal_definition FOR associated_functional_unit_definition;
     WHERE
      WR1: SIZEOF(analytical_model_application_reference) <= 1;
      WR2: NOT(SIZEOF(analytical_model_application_reference) = 1) OR
        (SIZEOF(QUERY( am <* access_mechanism |
           NOT((SIZEOF(USEDIN(am,'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM')) = 0) OR
              (SIZEOF(QUERY( ampa <* USEDIN(am, 'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM') |
                 NOT(analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application) 
                 )) = 0))
        )) = 0);
  END_ENTITY;

  ENTITY Functional_unit_usage_view_terminal_definition
    SUPERTYPE OF (Scalar_terminal_definition);
      associated_functional_unit_definition : Functional_unit_usage_view;
      signal_name                           : STRING; 
    UNIQUE
      UR1 : signal_name,
 associated_functional_unit_definition;
  END_ENTITY;

  ENTITY Functional_unit_usage_view_terminal_definition_make_from_relationship;
      associated_make_from : Functional_unit_make_from_relationship;
      reusable_feature     : Functional_unit_usage_view_terminal_definition;
      resultant_feature    : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : reusable_feature,
 resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.associated_functional_unit_definition :<>: resultant_feature.associated_functional_unit_definition;
      WR3 : reusable_feature.associated_functional_unit_definition :=: 
      		associated_make_from\Functional_unit_make_from_relationship.relating_view;
      WR4 : resultant_feature.associated_functional_unit_definition :=: 
      		associated_make_from\Functional_unit_make_from_relationship.related_view;
      WR5 : acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship
        (SELF, [resultant_feature], 
        'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP');
  END_ENTITY;

  ENTITY Functional_version
  	SUBTYPE OF (Information_version);
	  SELF\Product_version.of_product : Functional_product;
  END_ENTITY;

  ENTITY Scalar_terminal_definition
    SUBTYPE OF (Functional_unit_usage_view_terminal_definition);
  END_ENTITY;

  ENTITY Scalar_terminal_definition_link;
      precedent_terminal_definition  : Scalar_terminal_definition;
      subsequent_terminal_definition : Scalar_terminal_definition;
    UNIQUE
      UR1 : precedent_terminal_definition,
 subsequent_terminal_definition;
    WHERE
      WR1 : precedent_terminal_definition :<>: subsequent_terminal_definition;
      WR2 : acyclic_scalar_terminal_definition_link (SELF,
        [subsequent_terminal_definition],
        'FUNCTIONAL_USAGE_VIEW_ARM.SCALAR_TERMINAL_DEFINITION_LINK');
  END_ENTITY;

  FUNCTION acyclic_functional_unit_make_from_relationship
    (relation : Functional_unit_make_from_relationship; relatives : SET[1:?] OF 
    Functional_unit_usage_view; specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Functional_unit_make_from_relationship;
  END_LOCAL;

    IF relation.relating_view IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_view,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP.' +
      'RELATED_VIEW')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_functional_unit_make_from_relationship(x[i], relatives +
        relation.relating_view, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship
     (relation : Functional_unit_usage_view_terminal_definition_make_from_relationship; 
     relatives : SET[1:?] OF Functional_unit_usage_view_terminal_definition; 
     specific_relation: STRING) : BOOLEAN; 
     LOCAL
       x : SET OF Functional_unit_usage_view_terminal_definition_make_from_relationship;
     END_LOCAL;
    
     IF relation.reusable_feature IN relatives THEN
       RETURN (FALSE);
     END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.reusable_feature,
      'FUNCTIONAL_USAGE_VIEW_ARM.' +
      'FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP.' +
      'RESULTANT_FEATURE')) | specific_relation IN TYPEOF(pd));
     REPEAT i := 1 TO HIINDEX(x);
       IF NOT
         acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship(x[i],
         relatives + relation.reusable_feature, specific_relation) THEN
           RETURN (FALSE);
       END_IF;
     END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_scalar_terminal_definition_link
    (relation : Scalar_terminal_definition_link; relatives : SET[1:?] OF
    Scalar_terminal_definition; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF Scalar_terminal_definition_link;
    END_LOCAL;

    IF relation.precedent_terminal_definition IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_terminal_definition,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'SCALAR_TERMINAL_DEFINITION_LINK.' +
      'SUBSEQUENT_TERMINAL_DEFINITION')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_scalar_terminal_definition_link(x[i], relatives +
        relation.precedent_terminal_definition, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
   RETURN (TRUE);
  END_FUNCTION;

  FUNCTION get_ama(
	input : analytical_model_port_assignment_select) : SET OF Analytical_model_application;
   LOCAL
	ama : SET[0:?] OF Analytical_model_application := [];  --this gives us access to the information base
	ampa : SET[0:?] OF Analytical_model_port_assignment :=[];
   END_LOCAL;
	ampa := bag_to_set(USEDIN (input, 'ANALYTICAL_MODEL_ARM.'+'ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'));
	-- iterate over ampa
	REPEAT i := 1 to SIZEOF(ampa) by 1;
		ama := ama + ampa[i].associated_analytical_model_application;
	END_REPEAT;

	RETURN(ama);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.20 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7720 - ISO/TS 10303-1681 Generic material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5401
*)

SCHEMA Generic_material_aspects_arm;

USE FROM Independent_property_representation_arm;	-- ISO/TS 10303-1038

  TYPE material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE material_property_select = SELECT (Material_property, General_material_property);
  END_TYPE;

  TYPE dependent_or_independent_property_representation = SELECT(
    Independent_property_representation,
    Property_representation);
  END_TYPE;

 ENTITY Applied_independent_material_property SUBTYPE OF
    (Material_property, Applied_independent_property);
     SELF\Applied_independent_property.base_independent_property: General_material_property;
  END_ENTITY;

 ENTITY Data_environment;
  environment_name : STRING;
  description : OPTIONAL STRING;
  environment_characterization: SET[1:?] OF dependent_or_independent_property_representation;
 END_ENTITY;

 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;

 ENTITY Material_property
  SUBTYPE OF (Assigned_property);
 END_ENTITY;

 ENTITY Material_property_association;
  described_material : Material_identification;
  associated_property_value : Material_property_value_representation;
  definitional : OPTIONAL BOOLEAN;
 END_ENTITY;

 ENTITY Material_property_value_representation
  SUBTYPE OF (Property_definition_representation);
    environment_condition                                               : Data_environment;
    SELF\Property_definition_representation.definition RENAMED property : material_property_select;
 END_ENTITY;

 ENTITY General_material_property
  SUBTYPE OF (Independent_property);
  WHERE
    WR1:  SIZEOF(QUERY( aip <* USEDIN(SELF,'PROPERTY_ASSIGNMENT_ARM.APPLIED_INDEPENDENT_PROPERTY.'+
                     'BASE_INDEPENDENT_PROPERTY') |
               NOT
			('GENERIC_MATERIAL_ASPECTS_ARM.APPLIED_INDEPENDENT_MATERIAL_PROPERTY' IN
                    TYPEOF(aip)))) = 0;
 END_ENTITY;


END_SCHEMA;
(*
   $Id: arm.exp,v 1.8 2012/10/11 05:49:26 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8023 - ISO/TS 10303-1403 Geometric model relationship - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6905
*)
   
SCHEMA Geometric_model_relationship_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004
REFERENCE FROM Support_resource_arm (bag_to_set);  

TYPE geometric_representation_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  Geometric_model);
END_TYPE;  

ENTITY Definitional_representation_relationship
  SUBTYPE OF (Representation_relationship);
    WHERE
      WR1: acyclic_representation_relationship(SELF,
        [SELF\representation_relationship.rep_2],
        'FOUNDATION_REPRESENTATION_ARM.'+
        'REPRESENTATION');
END_ENTITY;  

ENTITY Geometric_model_relationship
 SUBTYPE OF (Representation_relationship);
    SELF\Representation_relationship.rep_1 : geometric_representation_select;
    SELF\Representation_relationship.rep_2 : geometric_representation_select;
  WHERE
    WR1 : rep_1 <> rep_2;
END_ENTITY;

FUNCTION acyclic_representation_relationship
  (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
  LOCAL
    x : SET OF representation_relationship;
  END_LOCAL;

  IF relation.rep_1 IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'FOUNDATION_REPRESENTATION_ARM.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

END_SCHEMA;
(*
$Id: arm.exp,v 1.54 2012/10/11 05:49:26 liutkuviene Exp $
ISO TC184/SC4/WG12 N8026 - ISO/TS 10303-1051 Geometric tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7448
*) 


SCHEMA Geometric_tolerance_arm;

 USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130

 USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

 USE FROM Value_with_unit_extension_arm;    -- ISO/TS 10303-1753

 USE FROM Support_resource_arm;    -- ISO/TS 10303-1800

 USE FROM Shape_composition_arm;    -- ISO/TS 10303-1742

 USE FROM Dimension_tolerance_arm;    -- ISO/TS 10303-1050

 USE FROM Feature_and_connection_zone_arm;    -- ISO/TS 10303-1671


TYPE directed_or_oriented_geometric_tolerance_select = SELECT
    (Line_profile_tolerance, 
    Parallelism_tolerance, 
    Perpendicularity_tolerance, 
    Position_tolerance, 
    Straightness_tolerance, 
    Symmetry_tolerance);
END_TYPE; 

TYPE area_unit_type = EXTENSIBLE ENUMERATION OF 
   (circular,
    square,
    rectangular);
END_TYPE; 

TYPE collection_plane_orientation = EXTENSIBLE ENUMERATION OF
   (perpendicular, 
    parallel);
END_TYPE;

TYPE common_datum_list = LIST[1:?] OF Datum_reference_element;
END_TYPE; 

TYPE datum_or_common_datum = SELECT
    (common_datum_list, 
    Datum);
END_TYPE; 

TYPE datum_reference_modifier = EXTENSIBLE SELECT
    (Datum_reference_modifier_with_value, 
    simple_datum_reference_modifier);
END_TYPE; 

TYPE datum_reference_modifier_type = EXTENSIBLE ENUMERATION OF 
   (circular_or_cylindrical,
    spherical,
    distance,
    projected);
END_TYPE; 

TYPE directed_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    including);
END_TYPE;

TYPE geometric_tolerance_modifier = EXTENSIBLE ENUMERATION OF 
   (maximum_material_requirement,
    least_material_requirement,
    reciprocity_requirement,
    any_cross_section,
    free_state,
    common_zone,
    minor_diameter,
    major_diameter,
    pitch_diameter,
    line_element,
    not_convex,
    statistical_tolerance,
    tangent_plane,
    each_radial_element,
    separate_requirement);
END_TYPE; 

TYPE geometric_tolerance_target = EXTENSIBLE GENERIC_ENTITY SELECT
    (Dimensional_location, 
    Dimensional_size);
END_TYPE; 

TYPE oriented_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    angular);
END_TYPE;

TYPE simple_datum_reference_modifier = EXTENSIBLE ENUMERATION OF 
   (free_state,
    basic,
    translation,
    least_material_requirement,
    maximum_material_requirement,
    point,
    line,
    plane,
    orientation,
    any_cross_section,
    any_longitudinal_section,
    contacting_feature,
    distance_variable,
    degree_of_freedom_constraint_x,
    degree_of_freedom_constraint_y,
    degree_of_freedom_constraint_z,
    degree_of_freedom_constraint_u,
    degree_of_freedom_constraint_v,
    degree_of_freedom_constraint_w,
    minor_diameter,
    major_diameter,
    pitch_diameter);
END_TYPE; 

TYPE tolerance_zone_target = SELECT
    (Dimensional_location, 
    Dimensional_size, 
    General_datum_reference, 
    Geometric_tolerance);
END_TYPE; 

TYPE tolerance_zone_type = ENUMERATION OF 
   (within_a_circle,
    between_two_concentric_circles,
    between_two_equidistant_curves,
    within_a_cylinder,
    between_two_coaxial_cylinders,
    between_two_equidistant_surfaces,
    non_uniform,
    cylindrical_or_circular,
    spherical,
    not_known);
END_TYPE; 

ENTITY Affected_plane_tolerance_zone
   SUBTYPE OF (Directed_or_oriented_tolerance_zone);
   affected_plane : Axis_placement_shape_element;
END_ENTITY;

ENTITY All_around_shape_element
   SUBTYPE OF (Continuous_shape_element);
END_ENTITY;

ENTITY All_around_shape_element_along_collection_plane
   SUBTYPE OF (All_around_shape_element);
   base : Datum_system;
   orientation : collection_plane_orientation;  
END_ENTITY;

ENTITY Angularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Axis_placement_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Axis_placement := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Between_shape_element
   SUBTYPE OF (Continuous_shape_element);
   start_features : SET[1:?] OF Definitional_shape_element;
   end_features : SET[1:?] OF Definitional_shape_element;
END_ENTITY;

ENTITY Circular_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : OPTIONAL REAL;
   datum_system : Datum_system;
END_ENTITY;

ENTITY Coaxiality_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Concentricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Contacting_feature
   SUBTYPE OF (Non_definitional_shape_element);
END_ENTITY;

ENTITY Continuous_shape_element
   SUPERTYPE OF ( ONEOF (Between_shape_element, All_around_shape_element) )
   SUBTYPE OF (Composite_shape_element);
END_ENTITY;

ENTITY Cylindricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Datum
   SUBTYPE OF (Shape_element);
   identification : identifier;
END_ENTITY;

ENTITY Datum_feature
   SUPERTYPE OF (ONEOF (Dimensional_location_with_datum_feature,
                       Dimensional_size_with_datum_feature))
   SUBTYPE OF (Definitional_shape_element);
   of_datum : Datum;
UNIQUE
   UR1: of_datum;
END_ENTITY;

ENTITY Datum_reference_compartment
   SUBTYPE OF (General_datum_reference);
   point_situation_feature : OPTIONAL Point_shape_element;
   plane_situation_feature : OPTIONAL Plane_shape_element;
   straight_line_situation_feature : OPTIONAL Axis_placement_shape_element;
INVERSE
   owner : Datum_system FOR constituents;
END_ENTITY;

ENTITY Datum_reference_element
   SUBTYPE OF (General_datum_reference);
DERIVE
   usage : General_datum_reference := sts_get_general_datum_reference(SELF);
WHERE
   WR1: SELF <> usage;
   WR2: EXISTS(usage);
END_ENTITY;

ENTITY Datum_reference_modifier_with_value;
   modifier_type : datum_reference_modifier_type;
   modifier_value : Length_data_element;
END_ENTITY;

ENTITY Datum_system
   SUBTYPE OF (Non_definitional_shape_element);
   constituents : LIST[1:3] OF UNIQUE Datum_reference_compartment;
END_ENTITY;

ENTITY Datum_system_with_associated_model_coordinate_system
   SUBTYPE OF (Axis_placement_shape_element, Datum_system);
END_ENTITY;

ENTITY Datum_target
   ABSTRACT SUPERTYPE OF (ONEOF (Placed_target,
                                Target_area,
                                Target_curve))
   SUBTYPE OF (Shape_element);
   target_id : STRING;
   movement_direction : OPTIONAL Direction;
   of_datum : Datum;
   target_feature : OPTIONAL Shape_element;
UNIQUE
   UR1: of_datum, target_id;
END_ENTITY;

ENTITY Dimensional_location_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_location);
END_ENTITY;

ENTITY Dimensional_size_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_size);
END_ENTITY;

ENTITY Directed_or_oriented_tolerance_zone
  ABSTRACT SUPERTYPE OF ( ONEOF (Tolerance_zone_with_datum, Affected_plane_tolerance_zone))
  SUBTYPE OF (Tolerance_zone);
   SELF\Tolerance_zone.zone_for : SET[1:?] OF directed_or_oriented_geometric_tolerance_select;
END_ENTITY;  
  
ENTITY Directed_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  direction : directed_tolerance_zone_type;
END_ENTITY;

ENTITY Flatness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY General_datum_reference
   ABSTRACT SUPERTYPE OF (ONEOF (Datum_reference_compartment,
                                Datum_reference_element))
   SUBTYPE OF (Non_definitional_shape_element);
   base : datum_or_common_datum;
   modifiers : OPTIONAL SET[1:?] OF datum_reference_modifier;
END_ENTITY;

ENTITY Geometric_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF (Angularity_tolerance,
                                Circular_runout_tolerance,
                                Coaxiality_tolerance,
                                Concentricity_tolerance,
                                Cylindricity_tolerance,
                                Flatness_tolerance,
                                Line_profile_tolerance,
                                Parallelism_tolerance,
                                Perpendicularity_tolerance,
                                Position_tolerance,
                                Roundness_tolerance,
                                Straightness_tolerance,
                                Surface_profile_tolerance,
                                Symmetry_tolerance,
                                Total_runout_tolerance));
   id : OPTIONAL identifier;
   name : OPTIONAL label;
   applied_to : geometric_tolerance_target;
   modifiers : SET[1:?] OF geometric_tolerance_modifier;
   qualifying_note : OPTIONAL STRING;
   first_unit_size : OPTIONAL Length_data_element;
   area_unit_type : OPTIONAL area_unit_type;
   second_unit_size : OPTIONAL Length_data_element;
   tolerance_value : Value_with_unit;
   unequally_disposed_tolerance_zone_displacement : OPTIONAL Length_data_element;
WHERE
   WR1: (NOT (EXISTS(first_unit_size))) OR ('GEOMETRIC_TOLERANCE_ARM.LENGTH_MEASURE' IN TYPEOF(first_unit_size.value_component));
END_ENTITY;

ENTITY Geometric_tolerance_relationship;
   relation_type : STRING;
   relating : Geometric_tolerance;
   related : Geometric_tolerance;
END_ENTITY;

ENTITY Line_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Non_uniform_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
END_ENTITY;

ENTITY Parallelism_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Perpendicularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Placed_target
   ABSTRACT SUPERTYPE OF (ONEOF (Target_circle,
                                Target_circular_curve,
                                Target_point,
                                Target_rectangle,
                                Target_straight_line))
   SUBTYPE OF (Datum_target);
   defined_in : Geometric_coordinate_space;
   parameter_reference : Axis_placement;
END_ENTITY;

ENTITY Plane_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Plane := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Point_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Point := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Position_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Projected_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   projection_end : Shape_element;
   projection_length : Length_data_element;
END_ENTITY;

ENTITY Projected_zone_definition_with_offset
   SUBTYPE OF (Projected_zone_definition);
   offset : Length_data_element;
END_ENTITY;

ENTITY Roundness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Oriented_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  orientation : oriented_tolerance_zone_type;
  angle : OPTIONAL Angle_data_element;
WHERE
  WR1 : (orientation <> oriented_tolerance_zone_type.angular) XOR EXISTS(angle);
END_ENTITY;

ENTITY Runout_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   angle : Angle_data_element;
   orientation_defining_relationship : OPTIONAL Shape_element_relationship;
END_ENTITY;

ENTITY Straightness_tolerance
   SUBTYPE OF (Geometric_tolerance);
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Surface_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
END_ENTITY;

ENTITY Symmetry_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Target_area
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;

ENTITY Target_circle
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_circular_curve
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_curve
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;

ENTITY Target_point
   SUBTYPE OF (Placed_target);
END_ENTITY;

ENTITY Target_rectangle
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
   target_width : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_straight_line
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
END_ENTITY;

ENTITY Tolerance_zone
   SUBTYPE OF (Shape_element);
   form_type : tolerance_zone_type;
   zone_for : SET[1:?] OF tolerance_zone_target;
END_ENTITY;

ENTITY Tolerance_zone_with_datum
  SUPERTYPE OF (ONEOF (Directed_tolerance_zone, Oriented_tolerance_zone))
  SUBTYPE OF (Directed_or_oriented_tolerance_zone);
  datum_reference : Datum_system;
END_ENTITY;

ENTITY Tolerance_zone_definition
   SUPERTYPE OF (ONEOF (Projected_zone_definition,
                       Non_uniform_zone_definition,
                       Runout_zone_definition));
   zone : Tolerance_zone;
   boundaries : SET[0:?] OF Shape_element;
END_ENTITY;
 

ENTITY Total_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : Angle_data_element;
   datum_system : Datum_system;
END_ENTITY;

SUBTYPE_CONSTRAINT composite_shape_element_subtypes FOR Composite_shape_element;
   ONEOF (Continuous_shape_element,
         Composite_group_shape_element);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_associated_shape_element_subtypes FOR Associated_shape_element;
   ONEOF (Axis_placement_shape_element,
         Plane_shape_element,
         Point_shape_element);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_non_definitional_shape_element_subtypes FOR Non_definitional_shape_element;
   ONEOF (Contacting_feature,
         Datum_system,
         General_datum_reference);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_shape_element_subtypes FOR Shape_element;
   ONEOF (Datum,
         Datum_target,
         Tolerance_zone);
 END_SUBTYPE_CONSTRAINT;

FUNCTION sts_get_general_datum_reference
 (input : Datum_reference_element) : General_datum_reference; LOCAL
      general_datum_reference_bag : BAG OF General_datum_reference :=
      (USEDIN(input, 'GEOMETRIC_TOLERANCE_ARM.' + 'GENERAL_DATUM_REFERENCE.' + 'BASE'));
    END_LOCAL;

    IF SIZEOF(general_datum_reference_bag) = 1 THEN
      RETURN (general_datum_reference_bag[1]);
    ELSE
      RETURN (?);
    END_IF; END_FUNCTION; 

END_SCHEMA;  -- Geometric_tolerance_arm
(*
 $Id: arm.exp,v 1.9 2006/03/24 18:45:20 thendrix Exp $
 ISO TC184/SC4/WG12 N4275 - ISO/TS 10303-1113 Group - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3245
 *) 


SCHEMA Group_arm;


TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT;
WHERE
  WR1: NOT ('GROUP_ARM.GROUP' IN TYPEOF(SELF));
END_TYPE; 

ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;

ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;

END_SCHEMA;  -- Group_arm
(*
$Id: arm.exp,v 1.11 2010/06/09 22:02:45 philsp Exp $
ISO TC184/SC4/WG12 N7114 - ISO/TS 10303-1021 Identification assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1111
*)
  
SCHEMA Identification_assignment_arm;


TYPE identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET[1:?] OF identification_item;
END_ENTITY;

END_SCHEMA;  -- Identification_assignment_arm
(*
 $Id: arm.exp,v 1.11 2004/10/28 19:05:37 darla Exp $
 ISO TC184/SC4/WG12 N2964 - ISO/TS 10303-1036 Independent property - EXPRESS ARM
*) 


SCHEMA Independent_property_arm; 


ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_arm
(*
 $Id: arm.exp,v 1.10 2006/03/24 18:37:02 thendrix Exp $
 ISO TC184/SC4/WG12 N4371 - ISO/TS 10303-1038 Independent property representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2966
*) 


SCHEMA Independent_property_representation_arm; 

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030 

ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_representation_arm
(*
   $Id: arm.exp,v 1.20 2009/04/22 20:17:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6237 - ISO/TS 10303-1761 Information product - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4227
*)

SCHEMA Information_product_arm;

USE FROM Product_view_definition_arm;    --  ISO/TS 10303-1019
USE FROM File_identification_arm;	--  ISO/TS 10303-1127

ENTITY Information_product
  ABSTRACT SUPERTYPE 
  	SUBTYPE OF (Product);
END_ENTITY;

ENTITY Information_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Information_product;
END_ENTITY;

ENTITY Information_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY;

RULE Information_product_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT (
  'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_VERSION' IN TYPEOF
  ( pv) ) ) AND ( 'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_PRODUCT' IN TYPEOF (
pv.of_product) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.46 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8152 - ISO/TS 10303-1686 Interconnect module usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7550
*)

SCHEMA Interconnect_module_usage_view_arm;

--	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
	USE FROM Non_feature_shape_element_arm;

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

	REFERENCE FROM Requirement_decomposition_arm    --  ISO/TS 10303-1740
  		(get_rvd); 
  
	TYPE cavity_reference_select = SELECT(
		Interconnect_module_primary_surface,
		Interconnect_module_secondary_surface);
	END_TYPE;
	
  ENTITY Interconnect_module_cavity_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      reference_surface : cavity_reference_select;
    WHERE
      WR1 : SELF :<>: reference_surface;
      WR2 : SIZEOF(QUERY(ucur <* USEDIN(SELF,
            'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
            'ASSOCIATED_USAGE') | NOT
            ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(ucur.associated_shape_definition))
            )) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_cutout_segment_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      composed_surface : Interconnect_module_cutout_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Interconnect_module_cutout_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  WHERE
    WR1: SIZEOF(QUERY(ucur <* USEDIN(SELF,
         'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
         'ASSOCIATED_USAGE') | NOT
         ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN
         TYPEOF(ucur.associated_shape_definition)))) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_edge_segment_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      composed_surface : Interconnect_module_edge_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Interconnect_module_edge_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  WHERE
    WR1: SIZEOF(QUERY(ucur <* USEDIN(SELF,
         'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
         'ASSOCIATED_USAGE') | NOT
         ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN
         TYPEOF(ucur.associated_shape_definition)))) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_interface_terminal
    SUBTYPE OF (Interconnect_module_terminal);
  END_ENTITY;

  ENTITY Interconnect_module_primary_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  END_ENTITY;

  ENTITY Interconnect_module_secondary_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  END_ENTITY;

  ENTITY Interconnect_module_surface_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Interconnect_module_cavity_surface,
 Interconnect_module_cutout_segment_surface,
 Interconnect_module_cutout_surface,
 Interconnect_module_secondary_surface,
 Interconnect_module_primary_surface,
 Interconnect_module_edge_surface,
 Interconnect_module_edge_segment_surface))
    SUBTYPE OF (Part_feature);
      SELF\Part_feature.associated_definition : Layered_interconnect_module_usage_view;
  END_ENTITY;

  ENTITY Interconnect_module_terminal
    SUBTYPE OF (Part_terminal);
      SELF\Definitional_shape_element.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
      SELF\Part_feature.associated_definition : Layered_interconnect_module_usage_view;
  END_ENTITY;

  ENTITY Interconnect_module_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Interconnect_module_surface_feature;
      SELF\Shape_element_relationship.related  : Interconnect_module_terminal;
  END_ENTITY;

  ENTITY Interconnect_module_usage_view
    SUPERTYPE OF (Layered_interconnect_module_usage_view)
    SUBTYPE OF (Part_usage_view);
  END_ENTITY;

  ENTITY Layered_interconnect_module_usage_view
    SUBTYPE OF (Interconnect_module_usage_view);
      thickness_over_dielectric_requirement : OPTIONAL Length_tolerance_characteristic;
      thickness_over_metal_requirement      : OPTIONAL Length_tolerance_characteristic;
      located_thickness_requirement         : OPTIONAL SET[1:?] OF Located_interconnect_module_thickness_requirement;
      implemented_function                  : OPTIONAL Functional_unit_usage_view;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_SECONDARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Located_interconnect_module_thickness_requirement;
      reference_location    : Axis_placement;
      thickness_requirement : Length_tolerance_characteristic;
    INVERSE
      design : SET[1:?] OF Layered_interconnect_module_usage_view FOR located_thickness_requirement;
    UNIQUE
      UR1 : design,
 reference_location;
  END_ENTITY;
  
END_SCHEMA;

(*
   $Id: arm.exp,v 1.17 2012/10/11 05:49:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8164 - ISO/TS 10303-1691 Interface component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7559
*)

SCHEMA Interface_component_arm;

	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721

	SUBTYPE_CONSTRAINT physical_component_feature_subtypes FOR Physical_component_feature;
		(ONEOF (Physical_component_terminal,
	 	Physical_component_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Physical_component_interface_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.associated_component : Interface_component;
  END_ENTITY;

  ENTITY Interface_component
    SUBTYPE OF (Physical_component, Single_instance);
    INVERSE
      access_mechanism : SET[1:?] OF physical_component_interface_terminal FOR associated_component;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.27 2012/10/06 20:09:56 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7732 - ISO/TS 10303-1345 Item definition structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6911
*)

SCHEMA Item_definition_structure_arm;

USE FROM Effectivity_application_arm; -- ISO/TS 10303-1059
USE FROM Product_occurrence_arm; -- ISO/TS 10303-1715
USE FROM Product_structure_arm; -- ISO/TS 10303-1134

  TYPE effectivity_item_for_replacement  = SELECT BASED_ON effectivity_item WITH
    (Part_definition_relationship);
  END_TYPE;

  ENTITY Assembled_part_association
    SUBTYPE OF (Assembly_component_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Assembly_definition;
  END_ENTITY;

  ENTITY Assembly_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;

  ENTITY Effectivity_controlled_assembly_definition
    SUBTYPE OF (Assembly_definition);
  END_ENTITY;

  ENTITY Geometrical_relationship
    SUBTYPE OF (Part_definition_relationship);
      definition_placement: Geometric_model_relationship_with_transformation;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
  END_ENTITY;

  ENTITY Part_definition_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Part_view_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;

  RULE definition_replacement_requires_effectivity_assignment FOR 
      (Part_definition_relationship);
    WHERE 
      WR1: SIZEOF( QUERY( pdr <* Part_definition_relationship | 
        (pdr\View_definition_relationship.relation_type = 'definition replacement') AND 
        (SIZEOF( USEDIN(pdr,'EFFECTIVITY_APPLICATION_ARM.EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	     = 0; 
  END_RULE; 

  RULE mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);
    LOCAL
      assemblies_of_parts: SET OF Assembly_component_relationship := [];
    END_LOCAL;
    WHERE
      WR1: SIZEOF(QUERY(ar <* assemblies_of_parts | 
	    NOT ('ITEM_DEFINITION_STRUCTURE_ARM.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar)) ))= 0;
  END_RULE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.59 2012/10/30 08:38:17 lothartklein Exp $
   ISO TC184/SC4/WG12 N8235 - ISO/TS 10303-1692 Land - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6980
*)

SCHEMA Land_arm;

USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698
REFERENCE FROM Support_resource_arm(bag_to_set); 
	
	SUBTYPE_CONSTRAINT l_laminate_component_interface_terminal_subtypes FOR Laminate_component_interface_terminal; 
		 (ONEOF (Component_termination_passage_interface_terminal,
		 Land_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT l_laminate_component_join_terminal_subtypes FOR Laminate_component_join_terminal; 
		 (ONEOF (Component_termination_passage_join_terminal,
		 Land_join_terminal,
		 Embedded_physical_component_terminal));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT stratum_feature_template_component_subtypes FOR Stratum_feature_template_component;   
		(ONEOF (Area_component,
		Conductive_interconnect_element,
		Land));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Contact_size_dependent_land
    SUBTYPE OF (Land);
      SELF\Definition_based_product_occurrence.derived_from : Default_attachment_size_based_land_physical_template;
    INVERSE
      external_access_mechanism : SET[1:2] OF land_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Dependent_thermal_isolation_removal_component
    SUBTYPE OF (Thermal_isolation_removal_component);
      SELF\Thermal_isolation_removal_component.derived_from : Dependent_thermal_isolation_removal_template;
    DERIVE
      associated_land : Land := land_get_associated_land_for_thermal_removal(SELF);
    WHERE
      WR1 : associated_land\Definition_based_product_occurrence.derived_from :=:
            SELF\Thermal_isolation_removal_component.derived_from\Dependent_thermal_isolation_removal_template.associated_item;
      WR2 : associated_land\Land.functional = TRUE;
  END_ENTITY;

  ENTITY Thermal_isolation_removal_component
    SUBTYPE OF (Material_removal_structured_component);
      SELF\Definition_based_product_occurrence.derived_from : Thermal_isolation_removal_template;
    WHERE
      WR1 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Dependent_electrical_isolation_removal_component
    SUBTYPE OF (Electrical_isolation_laminate_component);
      SELF\Electrical_isolation_laminate_component.derived_from : Dependent_electrical_isolation_removal_template;
    DERIVE
      SELF\Material_removal_laminate_component.causal_item RENAMED associated_land : Land := land_get_associated_land_for_electrical_removal(SELF);
    WHERE
      WR1 : associated_land\Definition_based_product_occurrence.derived_from :=:
            SELF\Definition_based_product_occurrence.derived_from\Dependent_electrical_isolation_removal_template.associated_item;
      WR2 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT' IN TYPEOF(SELF));
      WR3 : associated_land\Land.functional = FALSE;
  END_ENTITY;

  ENTITY Inter_stratum_feature_dependent_land
    ABSTRACT SUPERTYPE OF (ONEOF (Plated_passage_dependent_land,
      Unsupported_passage_dependent_land))
    SUBTYPE OF (Land);
    SELF\Definition_based_product_occurrence.derived_from : Default_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY Land
    SUPERTYPE OF (ONEOF (
 Contact_size_dependent_land,
 Inter_stratum_feature_dependent_land))
    SUBTYPE OF (Stratum_feature_template_component);
      alternate_land_definition                             : OPTIONAL Land_physical_template;
      SELF\Definition_based_product_occurrence.derived_from : Land_physical_template;
    DERIVE
       functional: BOOLEAN :=
         (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTOR',
           'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONNECTED_FILLED_AREA'] *
           TYPEOF(SELF\Stratum_feature_template_component.implementation_or_resident_stratum)) = 1);
    INVERSE
      access_mechanism : SET[0:?] OF land_join_terminal FOR associated_component;
    WHERE
      WR1: NOT(functional) OR (SIZEOF(access_mechanism) > 0); 
  END_ENTITY;

  ENTITY Land_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Land_template_interface_terminal;
      SELF\Component_feature.associated_component : Contact_size_dependent_land;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Land_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Land_template_join_terminal;
      SELF\Component_feature.associated_component : Land;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Land_with_join_terminal
    SUBTYPE OF (Land, Land_join_terminal);
    DERIVE
	  SELF\Component_feature.associated_component : Land_with_join_terminal := SELF;
  END_ENTITY;

  ENTITY Plated_passage_dependent_land
    SUBTYPE OF (Inter_stratum_feature_dependent_land);
      reference_plated_passage             : Plated_passage;
      SELF\Definition_based_product_occurrence.derived_from : Default_plated_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY Unsupported_passage_dependent_land
    SUBTYPE OF (Inter_stratum_feature_dependent_land);
      reference_passage                                     : Unsupported_passage;
      SELF\Definition_based_product_occurrence.derived_from : Default_unsupported_passage_based_land_physical_template;
  END_ENTITY;

  FUNCTION land_get_associated_land_for_electrical_removal (
               input : Dependent_electrical_isolation_removal_component) : Land;
  ---no component mrlc, no structured component
  LOCAL
   assembly_relationships_for_associated_structure : SET OF Structured_layout_component_sub_assembly_relationship := [];
   assembly_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'));
   associated_structure : Structured_layout_component;
   first_location : Template_location_in_structured_template := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.first_location;
   resident_stratum : stratum;
   resident_sftc : Stratum_feature_template_component;
  END_LOCAL;
  --determine resident_stratum;
  --critical to just use resident stratum as the individual design intents might be against different stratum features (different power areas).
  --address the multiple design intents here
  --use the last stratum found
   REPEAT i := 1 TO SIZEOF(input\Material_removal_laminate_component.design_intent) BY 1;
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(input\Material_removal_laminate_component.design_intent[i])) : 
     resident_stratum := input\Material_removal_laminate_component.design_intent[i];
  
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(input\Material_removal_laminate_component.design_intent[i])) :
    BEGIN
     resident_sftc := input\Material_removal_laminate_component.design_intent[i];
     CASE TRUE OF
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum;
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum;
       OTHERWISE :
        RETURN(?);
     END_CASE;
    END;
    OTHERWISE :
     RETURN(?);
  END_CASE;
   END_REPEAT;
  --determine first_location;
  --if there is more than one assembly_relationship return UNKNOWN;
   IF SIZEOF(assembly_relationship) <> 1 THEN RETURN(?);
   END_IF;
   
  --determine associated_land;
  --associated land is on same stratum;
  
     associated_structure := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.relating_view;
     assembly_relationships_for_associated_structure := 
                     bag_to_set(USEDIN(associated_structure, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW')) - assembly_relationship;
  --this assembly relationship is excluded since we are querying for other relationships
  
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(associated_structure)) :
  --if part of footprint then associated_land has same first_location;
    BEGIN   
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF ((first_location :=: assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.first_location) AND
         ('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
         (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
              :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
      END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(associated_structure)) :
    BEGIN
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF (('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
          (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
               :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
       END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
    OTHERWISE :
    --if no land is found return UNKNOWN.
     RETURN(?);
  END_CASE;
  END_FUNCTION;


  FUNCTION land_get_associated_land_for_thermal_removal (
               input : Dependent_thermal_isolation_removal_component) : Land;
  --limitation of component_mrlc is that only first member is checked to see what stratum it is for.
  --should not be a problem as related mrlc shall be for only one stratum.
  LOCAL
   assembly_relationships_for_associated_structure : SET OF Structured_layout_component_sub_assembly_relationship := [];
   assembly_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'));
   associated_structure : Structured_layout_component;
   component_mrlc : SET OF Material_removal_laminate_component := [];
   component_relationship : SET OF Structured_layout_component_sub_assembly_relationship :=
           bag_to_set(USEDIN(input, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW'));
   first_location : Template_location_in_structured_template := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.first_location;
   resident_stratum : stratum;
   resident_sftc : Stratum_feature_template_component;
  END_LOCAL;
  --determine resident_stratum;
  --critical to just use resident stratum as the individual isolation features might be against different stratum features (different power areas).
   REPEAT i := 1 TO SIZEOF(component_relationship) BY 1;
     component_mrlc := component_mrlc + component_relationship[i]\Structured_layout_component_sub_assembly_relationship.related_view;
   END_REPEAT;
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(component_mrlc[1]\Material_removal_laminate_component.design_intent[1])) : 
     resident_stratum := component_mrlc[1]\Material_removal_laminate_component.design_intent[1];
  
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(component_mrlc[1]\Material_removal_laminate_component.design_intent[1])) :
    BEGIN
     resident_sftc := component_mrlc[1]\Material_removal_laminate_component.design_intent[1];
     CASE TRUE OF
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum;
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum)) :
       resident_stratum := resident_sftc\Stratum_feature_template_component.implementation_or_resident_stratum;
       OTHERWISE :
        RETURN(?);
     END_CASE;
    END;
    OTHERWISE :
     RETURN(?);
  END_CASE;
  --determine first_location;
  --if there is more than one assembly_relationship return UNKNOWN;
   IF SIZEOF(assembly_relationship) <> 1 THEN RETURN(?);
   END_IF;
   
  --determine associated_land;
  --associated land is on same stratum;
  
     associated_structure := assembly_relationship[1]\Structured_layout_component_sub_assembly_relationship.relating_view;
     assembly_relationships_for_associated_structure := 
                     bag_to_set(USEDIN(associated_structure, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW')) - assembly_relationship;
  --this assembly relationship is excluded since we are querying for other relationships
  
  CASE TRUE OF
    ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(associated_structure)) :
  --if part of footprint then associated_land has same first_location;
    BEGIN   
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF ((first_location :=: assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.first_location) AND
         ('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
         (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
              :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
      END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(associated_structure)) :
    BEGIN
     REPEAT i := 1 TO SIZEOF(assembly_relationships_for_associated_structure) BY 1;
      IF (('LAND_ARM.LAND' IN TYPEOF(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view)) AND
          (assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view\Stratum_feature_template_component.resident_stratum
               :=: resident_stratum))
      THEN
          RETURN(assembly_relationships_for_associated_structure[i]\Structured_layout_component_sub_assembly_relationship.related_view);
       END_IF;
     END_REPEAT;
    --if no land is found return UNKNOWN.
     RETURN(?);
    END;
    
    OTHERWISE :
    --if no land is found return UNKNOWN.
     RETURN(?);
  END_CASE;
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.38 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7762 - ISO/TS 10303-1693 Layered 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6420
*)

SCHEMA Layered_2d_shape_arm;

	USE FROM Constructive_solid_geometry_2d_arm;	-- ISO/TS 10303-1731
	USE FROM Wireframe_2d_arm; 	-- ISO/TS 10303-1347
	USE FROM Shape_feature_arm;	-- ISO/TS 10303-xxxx

  ENTITY Planar_projected_shape_model
    SUBTYPE OF (Planar_shape_model);
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Planar_shape_model
    ABSTRACT SUPERTYPE OF(Planar_projected_shape_model) 
    SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : SELF\Geometric_model.context_of_items.dimension_count = 2;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.20 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7681 - ISO/TS 10303-1716 Layered interconnect complex template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6983
*)

SCHEMA Layered_interconnect_complex_template_arm;

USE FROM Layered_interconnect_simple_template_arm;	-- ISO/TS 10303-1718
USE FROM Physical_unit_2d_shape_arm; -- ISO/TS 10303-1726

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740
REFERENCE FROM Fabrication_technology_arm(get_stack);	-- ISO/TS 10303-1670
REFERENCE FROM Support_resource_arm(bag_to_set); 

  TYPE land_physical_template_or_inter_stratum_feature_template = SELECT
       (Land_physical_template,
        Inter_stratum_feature_template);
  END_TYPE;
  
   TYPE lict_requirement_assignment_item = SELECT BASED_ON requirement_assignment_item WITH 
    (Structured_template,
    Template_location_in_structured_template,
    Part_template_planar_keepout_shape_model);
  END_TYPE; 

  TYPE lict_part_template_or_physical_unit_2d_shape_select = SELECT BASED_ON part_template_or_physical_unit_2d_shape_select WITH 
    (Part_template_planar_shape_model);
  END_TYPE;

  TYPE lict_physical_unit_shape_model_select = SELECT BASED_ON physical_unit_shape_model_select WITH 
    (Physical_unit_planar_shape_model);
  END_TYPE;

  SUBTYPE_CONSTRAINT lict_geometric_template_subtypes FOR Geometric_template; 
    (ONEOF (Continuous_template,
            Structured_template));
  END_SUBTYPE_CONSTRAINT;

  TYPE template_arrangement = ENUMERATION OF
    (top,
     bottom,
     symmetrical,
     swappable);
  END_TYPE;

  TYPE location_stratum_technology_occurrence_or_stratum_technology = SELECT
    (stratum_technology_occurrence_or_stratum_technology,
    Template_location_in_structured_template);
  END_TYPE;
  
  TYPE stratum_technology_occurrence_or_stratum_technology = SELECT
   (Stratum_technology_occurrence,
    Stratum_technology);
  END_TYPE;

  TYPE template_location_placement_status = ENUMERATION OF
    (is_fixed,
	 must_be_moved_in_design,
	 may_be_moved_in_design,
	 is_unknown);
  END_TYPE;

  ENTITY Complex_passage_padstack_definition
    SUBTYPE OF (Stratum_stack_dependent_template, Passage_padstack_definition);
  END_ENTITY;

  ENTITY Dependent_electrical_isolation_removal_template
    SUBTYPE OF (Electrical_isolation_removal_template);
      associated_item : land_physical_template_or_inter_stratum_feature_template;
    WHERE
      WR1 : SIZEOF(QUERY (dtlipd <* USEDIN(SELF,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE') | 
                  NOT(
                     (SIZEOF(QUERY (tlist <* USEDIN(associated_item,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE') | 
                             NOT(
                                 (tlist\Template_location_in_structured_template.assembly :=: 
                                  dtlipd\Template_location_in_structured_template.assembly) AND
                                 ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.DEPENDENT_TEMPLATE_LOCATION_IN_PADSTACK_DEFINITION' IN TYPEOF(dtlipd)) AND                                 
                                 (tlist :=: dtlipd\Dependent_template_location_in_padstack_definition.reference_location)
                                 )
                      )) = 0)
                      )
             )) = 0;
  END_ENTITY;

  ENTITY Dependent_template_location_in_padstack_definition
    SUBTYPE OF (Stratum_specific_template_location);
      reference_location : location_stratum_technology_occurrence_or_stratum_technology;    
      SELF\Template_location_in_structured_template.assembly : Multi_stratum_structured_template;
    WHERE
      WR1: SELF\Stratum_specific_template_location.bound_stratum :<>: reference_location;     
      WR2: SELF <> reference_location;
      WR3: NOT('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE' IN TYPEOF(reference_location)) OR
           (assembly :=: reference_location\Template_location_in_structured_template.assembly);
      WR4: NOT('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF(assembly)) OR
           (reference_location IN assembly\Stratum_stack_dependent_template.stack\Stratum_stack_model.composing_occurrence);
      WR5 : NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(reference_location)) OR
           ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(SELF\Stratum_specific_template_location.bound_stratum));
      WR6 : NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(reference_location)) OR (SIZEOF 
           (['FABRICATION_TECHNOLOGY_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE',
           'FABRICATION_TECHNOLOGY_ARM.PASSAGE_PADSTACK_DEFINITION'] * TYPEOF
           (assembly)) = 2);
  END_ENTITY;

  ENTITY Dependent_thermal_isolation_removal_template
    SUBTYPE OF (Thermal_isolation_removal_template);
      associated_item : Land_physical_template;
    WHERE
      WR1 : SIZEOF(QUERY (dtlipd <* USEDIN(SELF,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE') | 
                  NOT(
                     (SIZEOF(QUERY (tlist <* USEDIN(associated_item,'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE') | 
                             NOT(
                                 (tlist\Template_location_in_structured_template.assembly :=: 
                                  dtlipd\Template_location_in_structured_template.assembly) AND
                                 ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.DEPENDENT_TEMPLATE_LOCATION_IN_PADSTACK_DEFINITION' IN TYPEOF(dtlipd)) AND                                 
                                 (tlist :=: dtlipd\Dependent_template_location_in_padstack_definition.reference_location)
                                 )
                      )) = 0)
                      )
             )) = 0;
  END_ENTITY;

  ENTITY Design_specific_stratum_technology_mapping_relationship
      SUBTYPE OF(Stratum_technology_mapping_relationship);
      scope : Library_to_design_stack_model_mapping;
  END_ENTITY;

  ENTITY Inter_stratum_feature_template_location
  	SUBTYPE OF (Template_location_in_structured_template);
      SELF\Template_location_in_structured_template.assembly : Multi_stratum_structured_template;
      SELF\Template_location_in_structured_template.template : Inter_stratum_feature_template;
    WHERE
      WR1: SIZEOF(['LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE',
                   'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.INTER_STRATUM_FEATURE_EDGE_TEMPLATE'] * TYPEOF(template)) = 0;
  END_ENTITY;

  ENTITY Library_stack_model 
    SUBTYPE OF (Stratum_stack_model);
    DERIVE
      padstacks : SET[0:?] OF Padstack_definition := bag_to_set(QUERY(p <* USEDIN(SELF,
        'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE.STACK') | ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(p))));
  END_ENTITY;

  ENTITY Library_to_design_stack_model_mapping 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Library_stack_model;
      SELF\View_definition_relationship.related_view  : Design_stack_model;
    WHERE
      WR1: ((related_view\Stratum_stack_model.composing_occurrence *
            relating_view\Stratum_stack_model.composing_occurrence) = 
            related_view\Stratum_stack_model.composing_occurrence);
      WR2: acyclic_library_to_design_stack_model_mapping(SELF, [related_view], 
           'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.LIBRARY_TO_DESIGN_STACK_MODEL_MAPPING');            
  END_ENTITY;

  ENTITY Material_removal_structured_template
    SUBTYPE OF (Single_stratum_structured_template);
    WHERE
      WR1 : SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
        SIZEOF(['LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE',
        'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.MATERIAL_REMOVAL_STRUCTURED_TEMPLATE'] * TYPEOF(tlict.template)) = 0)) = 0;
  END_ENTITY;

  ENTITY Multi_stratum_special_symbol_template
    SUBTYPE OF (Multi_stratum_structured_template, Special_symbol_template);
  END_ENTITY;

  ENTITY Multi_stratum_structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Padstack_definition, Multi_stratum_special_symbol_template)
      ANDOR Stratum_stack_dependent_template)
    SUBTYPE OF (Structured_template);
      location : template_arrangement;
  END_ENTITY;

  ENTITY Padstack_definition
    SUPERTYPE OF (Passage_padstack_definition)
    SUBTYPE OF (Multi_stratum_structured_template);
    WHERE
      WR1: NOT('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PASSAGE_PADSTACK_DEFINITION' IN TYPEOF(SELF)) XOR 
          (SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
         ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(tlict)))) > 0);
      WR2: SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
         (NOT ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(tlict))) AND
          (NOT ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_SPECIFIC_TEMPLATE_LOCATION' IN TYPEOF(tlict))))) = 0;
  END_ENTITY;

  ENTITY Part_template_keepout_shape_allocation_to_stratum_stack;
      keepout_shape : Part_template_keepout_shape_model;
      kept_out_layers : SET [1:?] OF Stratum_technology_occurrence;
    DERIVE
      swappable : LOGICAL :=
        (keepout_shape.shape_characterized_definition\Multi_stratum_structured_template.location
        = template_arrangement.swappable);
      stack_model : Library_stack_model :=
        keepout_shape.shape_characterized_definition\Stratum_stack_dependent_template.stack;
    UNIQUE
      UR1 : keepout_shape,stack_model;
    WHERE
      WR1 : keepout_shape.constrained_design_object_category
       IN [keepout_product_design_object_category.interconnect_module_via,
       keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
       keepout_product_design_object_category.interconnect_module_cutout,
       keepout_product_design_object_category.interconnect_module_fill_area,
       keepout_product_design_object_category.interconnect_module_stratum_feature];
     WR2 : 'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF(keepout_shape.shape_characterized_definition);
     WR3 :  kept_out_layers = kept_out_layers * stack_model\Stratum_stack_model.composing_occurrence;
  END_ENTITY;  

  ENTITY Part_template_planar_keepout_shape_model
    SUBTYPE OF (Planar_shape_model,
 			Non_feature_shape_model,
 			Part_template_keepout_shape_model);
      SELF\Non_feature_shape_model.model_shape : Part_template_planar_shape_model; 			
	DERIVE
      application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
        get_rvd(SELF, 'application technology constraint');
	WHERE
      WR1 : (SIZEOF(application_technology_constraint) <= 1);
      WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Part_template_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model, Part_template_shape_model);
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Passage_padstack_definition
    SUBTYPE OF (Padstack_definition);
    INVERSE
      reference_isft : Inter_stratum_feature_template_location FOR assembly;    
    WHERE
      WR1: NOT(('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRUCTURED_INTER_STRATUM_FEATURE_TEMPLATE' IN TYPEOF(reference_isft.template)) XOR
               ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.COMPLEX_PASSAGE_PADSTACK_DEFINITION' IN TYPEOF(SELF)));      
  END_ENTITY;

  ENTITY Physical_unit_keepout_shape_allocation_to_stratum_stack;
      keepout_shape : Physical_unit_keepout_shape_model;
      stack_model : Library_stack_model;
      swappable : BOOLEAN; 
      kept_out_layers : SET [1:?] OF Stratum_technology_occurrence;
    UNIQUE
      UR1: keepout_shape, stack_model;
    WHERE
      WR1: keepout_shape\Physical_unit_keepout_shape_model.constrained_design_object_category
        IN [keepout_product_design_object_category.interconnect_module_via,
        keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
        keepout_product_design_object_category.interconnect_module_cutout,
        keepout_product_design_object_category.interconnect_module_fill_area,
        keepout_product_design_object_category.interconnect_module_stratum_feature];
  END_ENTITY;
  
  ENTITY Physical_unit_keepout_shape_allocation_to_stratum_technology;
      keepout_shape         : Physical_unit_keepout_shape_model;
      kept_out_technologies : SET [1:?] OF Stratum_technology;
    WHERE
      WR1: keepout_shape\Physical_unit_keepout_shape_model.constrained_design_object_category
	    IN [keepout_product_design_object_category.interconnect_module_via,
	        keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
	        keepout_product_design_object_category.interconnect_module_cutout,
	        keepout_product_design_object_category.interconnect_module_fill_area,
	        keepout_product_design_object_category.interconnect_module_stratum_feature];
  END_ENTITY; 

  ENTITY Single_stratum_special_symbol_template
    SUBTYPE OF (Single_stratum_structured_template, Special_symbol_template);
  END_ENTITY;

  ENTITY Single_stratum_structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Material_removal_structured_template, Single_stratum_special_symbol_template))
    SUBTYPE OF (Structured_template, Single_stratum_template);
  WHERE
    WR1: SIZEOF (QUERY(tp <* SELF\Structured_template.templates |
               NOT ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.SINGLE_STRATUM_TEMPLATE' IN TYPEOF(tp.template))
              )) = 0;
  END_ENTITY;

  ENTITY Special_symbol_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_special_symbol_template, Multi_stratum_special_symbol_template))
    SUBTYPE OF (Template_definition);
  END_ENTITY;

  ENTITY Stratum_specific_template_location
  	SUBTYPE OF (Template_location_in_structured_template);
      bound_stratum : stratum_technology_occurrence_or_stratum_technology;
      SELF\Template_location_in_structured_template.template : Single_stratum_template;
    WHERE
      WR1: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(bound_stratum)) OR
           (NOT EXISTS(bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           (NOT (bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template))));
      WR2: 
          NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(bound_stratum)) AND
             ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(bound_stratum\Stratum_technology_occurrence.definition))) OR
           (NOT EXISTS(bound_stratum\Stratum_technology_occurrence.definition\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           (NOT (bound_stratum\Stratum_technology_occurrence.definition\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template))));
      WR3 : NOT ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(bound_stratum)) OR
             ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF(SELF\Template_location_in_structured_template.assembly));
  END_ENTITY;

  ENTITY Stratum_stack_dependent_template
    SUPERTYPE OF (ONEOF (Complex_passage_padstack_definition, Structured_inter_stratum_feature_template))
    SUBTYPE OF (Multi_stratum_structured_template);
      stack : library_stack_model;
    WHERE
      WR1 : SIZEOF(QUERY(temp <* SELF\Structured_template.templates | 
            ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_SPECIFIC_TEMPLATE_LOCATION' IN TYPEOF(temp))
            AND (NOT ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(temp\Stratum_specific_template_location.bound_stratum))
                  OR
               NOT (temp\Stratum_specific_template_location.bound_stratum IN stack\Stratum_stack_model.composing_occurrence)
        ))) = 0;
      WR2 : TYPEOF(SELF) <> ['LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE',
                             'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.MULTI_STRATUM_STRUCTURED_TEMPLATE',
                             'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRUCTURED_TEMPLATE',
                             'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.GEOMETRIC_TEMPLATE',
                             'PART_TEMPLATE_ARM.TEMPLATE_DEFINITION',
                             'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION',
                             'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE'];       
  END_ENTITY;

  ENTITY Structured_inter_stratum_feature_template
    SUBTYPE OF (Inter_stratum_feature_template, Stratum_stack_dependent_template);
  END_ENTITY;

  ENTITY Structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_structured_template, Multi_stratum_structured_template))
    SUBTYPE OF (Geometric_template);
  DERIVE
    empty : LOGICAL := (SIZEOF(templates) = 0);  
  INVERSE
    SELF\Geometric_template.shapes : SET [1:?] OF Structured_template_planar_shape_model FOR shape_characterized_definition;
    templates : SET [0:?] OF Template_location_in_structured_template FOR assembly;
  END_ENTITY;

  ENTITY Structured_template_planar_shape_model
    SUBTYPE OF (Part_template_planar_shape_model);
    SELF\Part_template_shape_model.shape_characterized_definition : SET[1:1] OF Structured_template;
  END_ENTITY;

  ENTITY Template_location_in_structured_template
    SUPERTYPE OF (ONEOF
      (Inter_stratum_feature_template_location,
       Stratum_specific_template_location));
      assembly              : Structured_template;
      template              : Template_definition;
      reference_designation : STRING;
	  placement_status      : template_location_placement_status;
    INVERSE
      transform : SET [0:?] OF Template_location_in_structured_template_transform FOR reference_location;
    UNIQUE
      UR1: assembly, reference_designation;
    WHERE
      WR1 : (SIZEOF(transform) > 0) XOR ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.TEARDROP_TEMPLATE' IN TYPEOF(template));
      WR2 : NOT ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.INTER_STRATUM_FEATURE_TEMPLATE' IN TYPEOF(template)) OR
             ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(SELF));
      WR3 : SIZEOF(['LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.TEARDROP_TEMPLATE',
                    'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.GEOMETRIC_TEMPLATE'] *
                   TYPEOF(template)) > 0;
  END_ENTITY;

  ENTITY Template_location_in_structured_template_transform
    SUBTYPE OF (Geometric_placement);
      SELF\Geometric_placement_operation.template_definition RENAMED template_shape : Part_template_planar_shape_model;
      reference_location : Template_location_in_structured_template;
      assembly_shape : Structured_template_planar_shape_model;
      SELF\Geometric_placement.target RENAMED transform : Axis_placement_2d;
    UNIQUE
      UR1 : reference_location, assembly_shape;
    WHERE
      WR1 : assembly_shape.shape_characterized_definition[1] :=: reference_location.assembly;
  END_ENTITY;

  ENTITY Thermal_isolation_removal_template
    SUBTYPE OF (Material_removal_structured_template);
	DERIVE
  		thermal_isolation_spacing_requirement: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'thermal requirement');
	WHERE
	  WR1: SIZEOF(QUERY(tisr <* THERMAL_ISOLATION_SPACING_REQUIREMENT |
       NOT('INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_ARM.THERMAL_ISOLATION_REQUIREMENT' IN TYPEOF(tisr))
       )) =0;
  END_ENTITY;

  SUBTYPE_CONSTRAINT stratum_stack_model_subtypes FOR Stratum_stack_model;
    ONEOF (Design_stack_model, Library_stack_model);
  END_SUBTYPE_CONSTRAINT;

  FUNCTION acyclic_library_to_design_stack_model_mapping
    (relation : Library_to_design_stack_model_mapping; relatives : SET[1:?] OF
     Stratum_stack_model; specific_relation : STRING) : BOOLEAN; 
  LOCAL
      x : SET OF Library_to_design_stack_model_mapping := [];
  END_LOCAL;

      IF relation.relating_view IN relatives THEN
        RETURN (FALSE);
      END_IF;
        x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_view,
          'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.' +
          'LIBRARY_TO_DESIGN_STACK_MODEL_MAPPING.' +
          'RELATED_VIEW')) | specific_relation IN TYPEOF(pd));
      REPEAT i := 1 TO HIINDEX(x);
        IF NOT acyclic_library_to_design_stack_model_mapping(x[i], relatives +
          relation.relating_view, specific_relation) THEN
          RETURN (FALSE);
        END_IF;
      END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

END_SCHEMA;
  
(*
   $Id: arm.exp,v 1.336 2012/10/11 05:49:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8170 - ISO/TS 10303-1698 Layered interconnect module design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7565
*)

SCHEMA Layered_interconnect_module_design_arm;

USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
USE FROM Edge_shape_feature_arm;	-- ISO/TS 10303-1673
USE FROM Footprint_definition_arm;	-- ISO/TS 10303-1646
USE FROM Assembly_component_placement_requirements_arm;	-- ISO/TS 10303-1634	
(*REFERENCE FROM*) USE FROM Land_arm;	-- ISO/TS 10303-1692
(*REFERENCE FROM*) USE FROM Layered_interconnect_module_with_printed_component_design_arm; -- ISO/TS 10303-1700

REFERENCE FROM Assembly_component_arm(get_assemblies);
REFERENCE FROM Support_resource_arm(bag_to_set);  
REFERENCE FROM Physical_unit_2d_design_view_arm(pu2dv_has_shape, pu2dv_typeof);  -- ISO/TS 10303-1724

 CONSTANT
   Pre_defined_physical_network_group_types : SET OF STRING := [
      'differential pair',
      'balanced length',
      'coaxial group',
      'multi line bus'];

   Pre_defined_physical_network_group_relation_types : SET OF STRING := [
      'group to higher order group',
      'group to higher ranking group',
      'element to ordered multiple line bus'];

 END_CONSTANT;

  TYPE area_component_templates = SELECT (
    Stratum_feature_template, -- when area_component comes from library
    Fill_area_template); -- when area_component is defined in place
  END_TYPE;

  TYPE design_or_documentation_stratum = SELECT ( 
    Design_layer_stratum,
    Documentation_layer_stratum);
  END_TYPE;

  TYPE limd_groupable_item = SELECT BASED_ON groupable_item WITH 
    (Generic_physical_network,
     Stratum);
  END_TYPE; 

  TYPE limd_restriction_basis_item = SELECT BASED_ON restriction_basis_item WITH 
    (stratum_concept);
  END_TYPE; 

  TYPE stratum_feature_or_stratum = SELECT (
    Stratum_feature,
    Stratum);
  END_TYPE;

  TYPE stratum_feature_template_component_or_stratum = SELECT
    (Stratum_feature_template_component,
     Stratum);
  END_TYPE;
    
  TYPE material_removal_feature_template_or_parametric_template = SELECT
   (Material_removal_feature_template,
    Parametric_template);
  END_TYPE;

  TYPE special_symbol_component = SELECT
    (Single_stratum_special_symbol_component,
     Multi_stratum_special_symbol_component);
  END_TYPE;

  TYPE stratum_feature_template_or_parametric_template = SELECT
    (Stratum_feature_template,
     Parametric_template);
  END_TYPE;

  TYPE bare_die_component_or_packaged_component = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE bare_die_terminal_or_packaged_part_terminal = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE component_feature_or_stratum_surface = EXTENSIBLE GENERIC_ENTITY SELECT
    (Component_feature,
    Stratum_surface);
  END_TYPE;

  TYPE limd_external_identification_item = SELECT BASED_ON external_identification_item WITH  
    (Externally_defined_physical_network_group,
     Externally_defined_physical_network_group_element_relationship,
     Stratum_feature_based_derived_pattern,
     Stratum,
     Laminate_component);
  END_TYPE;

(*
  TYPE limd_physical_feature_or_part_template = SELECT BASED_ON physical_feature_or_part_template WITH 
    (Part_feature,
     Physical_component_feature,
     Laminate_component);
  END_TYPE;
*)

  TYPE limd_requirement_assignment_item = SELECT BASED_ON requirement_assignment_item WITH 
    (Layered_interconnect_module_design_view,
    Stratum_feature_conductive_join);
  END_TYPE; 

  TYPE limd_documented_element_select = SELECT BASED_ON documented_element_select WITH 
    (stratum_concept);
  END_TYPE;

  TYPE limd_sf_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE limd_stratum_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE limd_usage_concept = SELECT BASED_ON usage_concept WITH 
    (Component_termination_passage_template_terminal,
     Via_template_terminal);
  END_TYPE;

  TYPE material_or_specification = SELECT
    (Predefined_requirement_view_definition,
     Material_identification);
  END_TYPE;

  TYPE stratum_concept = EXTENSIBLE GENERIC_ENTITY SELECT
    (Laminate_component,
     Inter_stratum_feature,
     Stratum_feature,
     Stratum,
     Stratum_surface,
     Structured_layout_component);
  END_TYPE;

  TYPE stratum_surface_designation = ENUMERATION OF
    (average_surface,
     primary_surface,
     secondary_surface);
  END_TYPE;

  TYPE terminal_or_inter_stratum_feature = EXTENSIBLE GENERIC_ENTITY SELECT(
  	Embedded_physical_component_terminal,
	Inter_stratum_feature,
    Interconnect_module_terminal,
    Printed_component_join_terminal);
  END_TYPE;

  ENTITY Adjacent_stratum_surface_embedded_physical_component_surface_definition;
      name            : STRING;
      precedent_item  : component_feature_or_stratum_surface;
      subsequent_item : component_feature_or_stratum_surface;
    UNIQUE
      UR1 : name;
      UR2 : precedent_item, subsequent_item;
    WHERE
      WR1 : precedent_item <> subsequent_item;
      WR2 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_FEATURE' IN TYPEOF(precedent_item)) OR 
        (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.BARE_DIE_SURFACE',
               'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PACKAGE_BODY_SURFACE',
               'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SECONDARY_SURFACE'] * TYPEOF(precedent_item.definition)) = 1);
      WR3 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_FEATURE' IN TYPEOF(subsequent_item)) OR 
        (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.BARE_DIE_SURFACE',
                 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PACKAGE_BODY_SURFACE',
                 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE'] * TYPEOF(subsequent_item.definition)) = 1);
      WR4 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_SURFACE' IN TYPEOF(precedent_item)) OR 
                (precedent_item.name = stratum_surface_designation.secondary_surface);
      WR5 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_SURFACE' IN TYPEOF(subsequent_item)) OR 
                (precedent_item.name = stratum_surface_designation.primary_surface);                 
  END_ENTITY;

  ENTITY Area_component
    SUPERTYPE OF (Connected_area_component)
    SUBTYPE OF (Stratum_feature_template_component);
      explicitly_created : BOOLEAN;    
      is_base : BOOLEAN;
      replaced_component : OPTIONAL Area_component;
      SELF\Definition_based_product_occurrence.derived_from : area_component_templates;
    DERIVE
      is_final : LOGICAL := (SIZEOF(replaced_by) = 0);
    INVERSE
      replaced_by : SET [0:?] OF Area_component FOR replaced_component;
    WHERE
      WR1: NOT((is_final AND pu2dv_has_shape(SELF)) XOR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(implementation_or_resident_stratum))); 
      WR2: is_final OR (SIZEOF(QUERY(rp <* replaced_by | SELF\Stratum_feature_template_component.resident_stratum :<>: get_resident_stratum(rp))) = 0);      
      WR3: NOT(SELF IN replaced_by);
      WR4: NOT(replaced_component IN replaced_by);
      WR5: is_final XOR (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT')) > 0);
      WR6: NOT EXISTS(replaced_component) OR 
			(NOT (SIZEOF(replaced_by) > 0) OR
             ((SIZEOF(QUERY(rb <* replaced_by |
              (acyclic_area_component(SELF,[rb], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT'))))) 
              = (SIZEOF(replaced_by))
             )
            );
     WR7: pu2dv_has_shape(SELF) OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(implementation_or_resident_stratum)); 
     WR8: NOT(SIZEOF(replaced_by) > 0) OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(implementation_or_resident_stratum));
     WR9: NOT is_base OR VALUE_IN(pu2dv_typeof(SELF), 'CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL');
  END_ENTITY;

  ENTITY Breakout_occurrence
    SUBTYPE OF (Footprint_occurrence);
      SELF\Definition_based_product_occurrence.derived_from : Breakout_footprint_definition;
      associated_footprint : Footprint_occurrence;
    WHERE
      WR1: associated_footprint <> SELF;
      WR2: derived_from.reference_footprint = associated_footprint.derived_from;
  END_ENTITY;

  ENTITY Component_termination_passage
    SUBTYPE OF (Plated_passage);
      SELF\Definition_based_product_occurrence.derived_from : Component_termination_passage_template;
    INVERSE
      access_mechanism           : SET[1:?] OF component_termination_passage_join_terminal FOR containing_shape;
      interface_access_mechanism : component_termination_passage_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Component_termination_passage_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Component_termination_passage_template_interface_terminal;
      SELF\Component_feature.associated_component : Component_termination_passage;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Component_termination_passage_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Component_termination_passage_template_join_terminal;
      SELF\Component_feature.associated_component : Component_termination_passage;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_filled_area
    SUPERTYPE OF (Connected_filled_area)
    SUBTYPE OF (Stratum_feature);
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_interconnect_element
    ABSTRACT SUPERTYPE OF (ONEOF (Unrouted_conductive_interconnect_element, Conductive_interconnect_element_with_pre_defined_transitions))
    SUBTYPE OF (Stratum_feature_template_component);
    INVERSE
      access_mechanisms : SET [2:?] OF Conductive_interconnect_element_terminal FOR associated_component;
      connected_points : SET [1:?] OF Conductive_interconnect_element_terminal_link FOR associated_element;
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PROBE_ACCESS_AREA' IN TYPEOF(SELF));
      WR3: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FIDUCIAL' IN TYPEOF(SELF));
      WR4: correlated_terminals(SELF\Conductive_interconnect_element.access_mechanisms,
         connected_points);      
      WR5 : (1 + SIZEOF(connected_points)) = limd_get_sz_cp(connected_points);
      WR6: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(SELF));         
  END_ENTITY;

  ENTITY Conductive_interconnect_element_terminal
    SUBTYPE OF (Laminate_component_feature);
      SELF\Component_feature.associated_component : Conductive_interconnect_element;
      SELF\Definitional_shape_element.connection_area          : OPTIONAL SET[1:1] OF Connection_zone_in_design_view;
      location                                    : Layer_connection_point;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, SELF\Component_feature.associated_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_interconnect_element_terminal_link;
      associated_element : Conductive_interconnect_element;
      precedent_point    : Conductive_interconnect_element_terminal;
      subsequent_point   : Conductive_interconnect_element_terminal;
    UNIQUE
      UR1 : precedent_point, subsequent_point;
    WHERE
      WR1 : precedent_point <> subsequent_point;
      WR2 : precedent_point.associated_component = associated_element;
      WR3 : subsequent_point.associated_component = associated_element;
      WR4 : acyclic_conductive_interconnect_element_terminal_link(SELF,
        [subsequent_point], 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK');
  END_ENTITY;

  ENTITY Conductive_interconnect_element_with_pre_defined_transitions
    SUBTYPE OF (Conductive_interconnect_element);
      centreline_shape                                                           : Path_area_with_parameters;
      SELF\Definition_based_product_occurrence.derived_from                      : Trace_template;
      SELF\Stratum_feature_template_component.implementation_or_resident_stratum : Stratum_feature;
    WHERE
      WR1: SIZEOF(connected_points) = SIZEOF(SELF\Conductive_interconnect_element.access_mechanisms) - 1;
      WR2: SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTOR',
            'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_FILLED_AREA'] *
            TYPEOF(SELF\Stratum_feature_template_component.implementation_or_resident_stratum)) = 1;
      WR3: centreline_shape.parameters = derived_from.trace_style;            
      WR4 : SIZEOF(QUERY(ciet <* SELF\Conductive_interconnect_element.access_mechanisms |
             NOT(ciet.location.resident_design_layer_stratum = 
            SELF\Stratum_feature_template_component.implementation_or_resident_stratum.resident_stratum)
                  )) = 0;
  END_ENTITY;

  ENTITY Conductor
    SUBTYPE OF (Stratum_feature);
      SELF\Stratum_feature.resident_stratum : Design_layer_stratum;
      implementation_requirement            : SET [1:?] OF Intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0:?] OF Single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
      WR2 : SIZEOF(implementation_requirement) - SIZEOF(join_component) = 1;
      WR3 : (SIZEOF(join_component) = 0) OR
             (SIZEOF(QUERY(jc <* join_component |
             ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.TIEBAR_PRINTED_COMPONENT' IN TYPEOF(jc\Assembly_component.occurrence_contexts[1]\Product_occurrence_definition_relationship.relating_view)) AND
             (SIZEOF(jc\Single_stratum_printed_component.stratum_feature_implementation) :<>: 1)
             )) = 0);
  END_ENTITY;

  ENTITY Connected_area_component
    SUBTYPE OF (Area_component);
      associated_layer_connection_point : SET[1:?] OF Layer_connection_point;
  END_ENTITY;

  ENTITY Connected_filled_area
    SUBTYPE OF (Conductive_filled_area);
      SELF\Stratum_feature.resident_stratum : Design_layer_stratum;
      implementation_requirement            : SET [1:?] OF Intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0:?] OF Single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      WR1 : SIZEOF(implementation_requirement) - SIZEOF(join_component) = 1;
      WR2 : (SIZEOF(join_component) = 0) OR
             (SIZEOF(QUERY(jc <* join_component |
             ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.TIEBAR_PRINTED_COMPONENT' IN TYPEOF(jc\Assembly_component.occurrence_contexts[1]\Product_occurrence_definition_relationship.relating_view)) AND
             (SIZEOF(jc\Single_stratum_printed_component.stratum_feature_implementation) :<>: 1)
              )) = 0);
  END_ENTITY;

  ENTITY Cutout
    SUPERTYPE OF (ONEOF (Physical_connectivity_interrupting_cutout,
      Plated_cutout,
      Partially_plated_cutout))
    SUBTYPE OF (Inter_stratum_feature);
    vertical_reference : OPTIONAL Interconnect_module_edge;
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: SIZEOF(QUERY(shape <* SELF\Inter_stratum_feature.derived_from\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(shape)))) = 0;      
      WR3: EXISTS(SELF\Inter_stratum_feature.vertical_extent) XOR EXISTS(vertical_reference);
  END_ENTITY;

  ENTITY Cutout_edge_segment
    SUPERTYPE OF (Plated_cutout_edge_segment)
    SUBTYPE OF (Inter_stratum_feature);
      composed_cutout                             : Cutout;
      start_vertex                                : Edge_segment_vertex;
      end_vertex                                  : Edge_segment_vertex;
      SELF\Inter_stratum_feature.derived_from : Inter_stratum_feature_edge_segment_template;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Dependently_located_layer_connection_point
    SUBTYPE OF (Layer_connection_point);
      associated_design_object : terminal_or_inter_stratum_feature;
      reference_zone           : OPTIONAL Connection_zone_in_design_view;
  END_ENTITY; 

  ENTITY Derived_stratum
     SUBTYPE OF (Stratum);
       derived_from : design_or_documentation_stratum;
  END_ENTITY;

  ENTITY Design_layer_stratum
    SUBTYPE OF (Stratum);
      primary_design_layer_stratum : BOOLEAN;
    INVERSE
      existence_dependence : SET[1:?] OF layer_connection_point FOR resident_design_layer_stratum;
    WHERE
      WR1 : (NOT (primary_design_layer_stratum) AND (SIZEOF(QUERY(imps <* USEDIN(SELF,
        'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT') | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 0)) OR ((primary_design_layer_stratum) AND (SIZEOF(QUERY(imps <* USEDIN(SELF,
        'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT') | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 1));
      WR2: 'FABRICATION_TECHNOLOGY_ARM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF\Stratum.of_technology);
  END_ENTITY;

  ENTITY Dielectric_material_passage
    SUBTYPE OF (Inter_stratum_feature);
      feature_material  : OPTIONAL material_or_specification;
      precedent_passage : Cutout;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Documentation_layer_stratum
    SUBTYPE OF (Stratum);
    WHERE
      WR1: 'FABRICATION_TECHNOLOGY_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(SELF\Stratum.of_technology);
      WR2: NOT(SIZEOF(SELF\Stratum.base_component) = 1) OR 
           (NOT(SELF\Stratum.of_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose = 
                predefined_documentation_layer_purpose.soldermask) OR (SIZEOF(get_mrlc_not_for_base(SELF, base_component)) = 0));
  END_ENTITY;

  ENTITY Electrical_isolation_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Electrical_isolation_removal_template;
  END_ENTITY;  

  ENTITY Embedded_physical_component_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : bare_die_terminal_or_packaged_part_terminal;
      SELF\Component_feature.associated_component : bare_die_component_or_packaged_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Explicitly_located_layer_connection_point
    SUBTYPE OF (Layer_connection_point);
  END_ENTITY; 

  ENTITY Fiducial
    SUBTYPE OF (Laminate_component);
  END_ENTITY;

  ENTITY Fiducial_stratum_feature
    SUBTYPE OF (Stratum_feature);
  END_ENTITY;

  ENTITY Footprint_occurrence
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Generic_footprint_definition;
  END_ENTITY;

  ENTITY Footprint_occurrence_sub_assembly_relationship
	SUBTYPE OF (Structured_layout_component_sub_assembly_relationship);
      SELF\Structured_layout_component_sub_assembly_relationship.relating_view : Footprint_occurrence;	
      SELF\Structured_layout_component_sub_assembly_relationship.related_view : Laminate_component;
      SELF\Structured_layout_component_sub_assembly_relationship.first_location RENAMED terminal_location : Part_feature_based_template_location;
      SELF\Structured_layout_component_sub_assembly_relationship.second_location RENAMED sub_assembly_reference_designation : Template_location_in_structured_template; 
   UNIQUE
      UR1 : sub_assembly_reference_designation,
       relating_view,
       terminal_location;
    WHERE
      WR1 : terminal_location.assembly :=: relating_view.derived_from;
      WR2 : terminal_location.template :=: sub_assembly_reference_designation.assembly;
      WR3 : 'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(sub_assembly_reference_designation.assembly);
  END_ENTITY;

  ENTITY Generic_physical_network
    ABSTRACT SUPERTYPE OF (ONEOF(Unrouted_physical_network, Routed_physical_network));
      name                                         : STRING;
      current_associated_definition                : Layered_interconnect_module_design_view;
      prior_associated_definition                  : OPTIONAL SET[1:?] OF Layered_interconnect_module_design_view;      
      connectivity_requirement_element             : SET[1:?] OF Laminate_component_join_terminal;
      reference_connected_terminals                : OPTIONAL Part_connected_terminals_definition;    
      unrouted_connectivity_requirement_element    : OPTIONAL SET[1:?] OF Unrouted_join_relationship;
    UNIQUE
      UR1 : name, current_associated_definition;
 		WHERE
      WR1 : NOT (EXISTS(prior_associated_definition)) OR NOT (current_associated_definition IN prior_associated_definition); 
  END_ENTITY; 

  ENTITY Interface_access_material_removal_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      SELF\Material_removal_laminate_component.causal_item RENAMED accessed_interface : Laminate_component_interface_terminal;
  END_ENTITY;

  ENTITY Inter_stratum_extent
    SUBTYPE OF (Part_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED from_stratum : Stratum;
      SELF\View_definition_relationship.related_view RENAMED to_stratum    : Stratum;
      included_stratum : SET [1:?] OF Stratum;
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
      WR2 : from_stratum IN included_stratum;
      WR3 : to_stratum IN included_stratum;
      WR4 : EXISTS(from_stratum\Stratum.assembly[1]\Interconnect_module_stratum_assembly_relationship.assembly\Layered_interconnect_module_design_view.used_stack_model);
  END_ENTITY;

  ENTITY Inter_stratum_feature
		ABSTRACT SUPERTYPE OF (ONEOF (Unsupported_passage,
			Plated_inter_stratum_feature))  
    SUBTYPE OF (Laminate_component);
      feature_of_size                                       : BOOLEAN;
      vertical_extent                                       : OPTIONAL Passage_technology_allocation_to_stack_model;
      SELF\Definition_based_product_occurrence.derived_from : Inter_stratum_feature_template;
    WHERE
      WR1: NOT EXISTS(vertical_extent) OR (SIZEOF(QUERY(pvd <* get_assemblies(SELF) |
         NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAYERED_INTERCONNECT_MODULE_DESIGN_VIEW' IN TYPEOF(pvd)) AND             
              (vertical_extent\Stratum_sub_stack.associated_stackup =
                   pvd\Layered_interconnect_module_design_view.used_stack_model))
                   )) = 0);
  END_ENTITY;

  ENTITY Inter_stratum_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      points_to_be_connected : SET[2:?] OF Layer_connection_point;
    DERIVE
      associated_stratum : BAG OF Design_layer_stratum := limd_get_lcp_resident_stratum(points_to_be_connected);
    WHERE
      WR1 : SIZEOF(associated_stratum) = SIZEOF(bag_to_set(associated_stratum));      
  END_ENTITY;

  ENTITY Interconnect_connection_zone_position_relationship;
      associating_design_view_shape               : Geometric_model;
      associated_usage                            : Connection_zone_in_design_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
      associating_design_view                     : Layered_interconnect_module_design_view;
  END_ENTITY;

  ENTITY Layered_interconnect_module_design_view
  	SUPERTYPE OF (Layered_interconnect_panel_design_view)
    SUBTYPE OF (Interconnect_module_design_view);
      used_stack_model : Design_stack_model;
    INVERSE
      requirements : SET[0:?] OF Requirement_assignment FOR assigned_to;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.' + 'ASSEMBLY')) = 0)
      OR
      (SIZEOF(QUERY(imsar <* USEDIN(SELF, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.' + 'ASSEMBLY') | 
              (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DESIGN_LAYER_STRATUM' IN TYPEOF(imsar.component)) AND 
               (imsar.component\Design_layer_stratum.primary_design_layer_stratum = TRUE)))) = 1);
      WR2: NOT EXISTS (SELF\Product_view_definition.additional_characterization);
      WR3 : SIZEOF(QUERY(vdr <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.' + 'RELATING_VIEW') | 
              (('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(vdr)) AND
              ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_EDGE' IN TYPEOF(vdr.related_view)))
                  )) = 1;
  END_ENTITY;

  ENTITY Layered_interconnect_panel_design_view
    SUBTYPE OF (Layered_interconnect_module_design_view);
  END_ENTITY;

  ENTITY Interconnect_module_design_view
    SUPERTYPE OF (Layered_interconnect_module_design_view)
    SUBTYPE OF (Assembly_definition, Part_design_view);
  END_ENTITY; 

  ENTITY Interconnect_module_edge
    SUPERTYPE OF (ONEOF (Partially_plated_interconnect_module_edge,
      Plated_interconnect_module_edge))
    SUBTYPE OF (Inter_stratum_feature);
    WHERE
      WR1: SIZEOF(QUERY(shape <* SELF\Inter_stratum_feature.derived_from\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(shape)))) = 0;
      WR2: NOT EXISTS(SELF\Inter_stratum_feature.vertical_extent);
  END_ENTITY;

  ENTITY Interconnect_module_edge_segment
    SUPERTYPE OF (ONEOF(Plated_interconnect_module_edge_segment,
                        Unplated_interconnect_module_edge_segment))
    SUBTYPE OF (Inter_stratum_feature);
      composed_edge                               : Interconnect_module_edge;
      start_vertex                                : Edge_segment_vertex;
      end_vertex                                  : Edge_segment_vertex;
      SELF\Inter_stratum_feature.derived_from : Inter_stratum_feature_edge_segment_template;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Interconnect_module_macro_terminal
    SUBTYPE OF (Interconnect_module_terminal);
    INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
    WHERE
      WR1 : SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.VIA_TERMINAL',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PRINTED_COMPONENT_JOIN_TERMINAL',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAND_JOIN_TERMINAL'] * TYPEOF(defining_terminal.assigned_design_object)) = 1;
  END_ENTITY;

  ENTITY Interconnect_module_stratum_assembly_relationship;
      assembly              : Layered_interconnect_module_design_view;
      component             : Stratum;
      reference_designation : STRING; 
    UNIQUE
      UR1 : assembly, reference_designation;
  END_ENTITY;

  ENTITY Interface_access_stratum_feature_template_component
    SUBTYPE OF (Stratum_feature_template_component);
      accessed_interface : Laminate_component_interface_terminal;
  END_ENTITY;

  ENTITY Internal_probe_access_area
    SUBTYPE OF (Probe_access_area);
      stratum_feature_implementation : Stratum_feature;
    INVERSE
      internal_access : internal_stratum_access FOR connected_probe;
    WHERE
     WR1 : NOT EXISTS(SELF\Probe_access_area.stratum_feature_material_stackup) 
             OR
            (stratum_feature_implementation :=: 
             SELF\Probe_access_area.stratum_feature_material_stackup\Stratum_feature_based_derived_pattern.reference_stratum_feature);                   
  END_ENTITY;

  ENTITY Internal_stratum_access;
      connected_probe       : Internal_probe_access_area;
      inter_stratum_feature : Via;
    UNIQUE
      UR1 : connected_probe, inter_stratum_feature;
  END_ENTITY;

  ENTITY Inter_stratum_join_implementation
    ABSTRACT SUPERTYPE OF (ONEOF (Physical_network_supporting_stratum_feature_conductive_join,
 	  Physical_network_supporting_inter_stratum_feature));
      topological_requirement : Inter_stratum_join_relationship;
  END_ENTITY; 

  ENTITY Intra_stratum_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      points_to_be_connected : SET[2:?] OF Layer_connection_point;
    DERIVE
      associated_stratum : Design_layer_stratum := points_to_be_connected[1].resident_design_layer_stratum;
    INVERSE
      ordered_implementation : SET[0:1] OF conductor FOR implementation_requirement;
      random_implementation  : SET[0:1] OF connected_filled_area FOR implementation_requirement;
    WHERE
      WR1 : (SIZEOF(ordered_implementation) = 1) XOR (SIZEOF(random_implementation) = 1);      
      WR2 : SIZEOF(QUERY(ptbc <* points_to_be_connected |
            NOT(ptbc.resident_design_layer_stratum = associated_stratum)
              )) = 0;
  END_ENTITY;

  ENTITY Join_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (Routed_join_relationship,
	 	Unrouted_join_relationship));
      associated_layout : Layered_interconnect_module_design_view;
  END_ENTITY;

  ENTITY Laminate_component
		SUPERTYPE OF (ONEOF (Material_removal_laminate_component,
			Stratum_feature_template_component ANDOR Probe_access_area,
			Inter_stratum_feature,
			Generic_laminate_text_component,
			Laminate_text_string_component) ANDOR
			Fiducial)
    SUBTYPE OF (Assembly_component, Single_instance);
      SELF\Definition_based_product_occurrence.derived_from : Template_definition;
    INVERSE
	  cad_layer						: SET[0:1] OF External_source_identification FOR item;      	  
    WHERE
      WR1:('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAYERED_INTERCONNECT_MODULE_DESIGN_VIEW' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1]\Product_occurrence_definition_relationship.relating_view))
         OR
        ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1]));
  END_ENTITY;

  ENTITY Laminate_component_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Conductive_interconnect_element_terminal,
      Laminate_component_interface_terminal,
      Laminate_component_join_terminal,
      Via_terminal))
    SUBTYPE OF (Component_feature);
  END_ENTITY;

  ENTITY Laminate_component_interface_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Laminate_component_feature);
  END_ENTITY;

  ENTITY Laminate_component_join_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Laminate_component_feature,
      Component_terminal);
    INVERSE
      node_implementation : SET[0:1] OF Generic_physical_network FOR connectivity_requirement_element;
  END_ENTITY;

  ENTITY Laminate_group_component_make_from_relationship
    SUBTYPE OF (Component_make_from_relationship);
      SELF\Component_make_from_relationship.reusable_component  : Assembly_group_component;
      SELF\Component_make_from_relationship.resultant_component : Assembly_group_component;
      stratum_mapping                                           : SET[1:?] OF Part_definition_relationship;
    WHERE
     WR1: SIZEOF(QUERY(sar <* reusable_component\Assembly_group_component.components | NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT' IN TYPEOF(sar\Product_occurrence_definition_relationship.related_view)))) = 0;
     WR2: SIZEOF(QUERY(sar <* resultant_component\Assembly_group_component.components | NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT' IN TYPEOF(sar\Product_occurrence_definition_relationship.related_view)))) = 0;

  END_ENTITY;

  ENTITY Layer_stack_region
    SUBTYPE OF (Instanced_feature);
      applied_stack                       : SET [1:?] OF Local_linear_stack;
      SELF\Shape_element.containing_shape : Layered_interconnect_module_design_view;
    WHERE
      WR1: SIZEOF(SELF\Shape_feature_definition.feature_model) = 1;
      WR2: 'CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF (SELF\Shape_feature_definition.feature_model[1]);
  END_ENTITY;

  ENTITY Generic_laminate_text_component
    ABSTRACT SUPERTYPE OF (ONEOF (Additive_laminate_text_component,
      Material_removal_laminate_text_component))
    SUBTYPE OF (Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Part_text_template;
	DERIVE
      of_character : label1 := derived_from\Part_text_template.of_character\Character_glyph_symbol.character;      
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Laminate_text_string_component
    SUBTYPE OF (Array_placement_group, Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Part_string_template;
      message_contents            : Text_literal_with_extent;
    WHERE
      WR1 : SIZEOF(QUERY(sar <* SELF\Assembly_group_component.components | 
            NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.GENERIC_LAMINATE_TEXT_COMPONENT' IN  TYPEOF(sar.related_view)) )) = 0;  
      WR2 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Layer_connection_point
    ABSTRACT SUPERTYPE OF (
      ONEOF (Explicitly_located_layer_connection_point,
		Dependently_located_layer_connection_point))
    SUBTYPE OF (Shape_element);
      location_2d                   : OPTIONAL Cartesian_point;
      location_3d                   : OPTIONAL Cartesian_point;
      SELF\Shape_element.containing_shape RENAMED resident_design_layer_stratum : Design_layer_stratum;
    DERIVE
      reference_network    : Generic_physical_network := 
          limd_get_generic_network(
               inter_join_path,
               intra_join_path,
               embedded_physical_component_path,
               unrouted_join_path);
    INVERSE
      inter_join_path         : SET[0:1] OF Inter_stratum_join_relationship FOR points_to_be_connected;
      intra_join_path         : SET [0:?] OF Intra_stratum_join_relationship FOR points_to_be_connected;
      embedded_physical_component_path : SET[0:?] OF Stratum_embedded_physical_component_join_relationship FOR point_to_be_connected;
      unrouted_join_path         : SET [0:1] OF Unrouted_join_relationship FOR unrouted_lcp;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, resident_design_layer_stratum;
    WHERE
      WR1 : EXISTS(location_2d) OR EXISTS(location_3d);
      WR2 : NOT (EXISTS(location_2d)) OR ((SIZEOF(location_2d\Cartesian_point.coordinates)) = 2);
      WR3 : NOT (EXISTS(location_3d)) OR ((SIZEOF(location_3d\Cartesian_point.coordinates)) = 3);
      WR4 : EXISTS(reference_network); 
      WR5 : NOT EXISTS (SELF\Shape_element.description);
      WR6 : SIZEOF(QUERY(ijp <* intra_join_path | NOT(resident_design_layer_stratum :=: ijp.associated_stratum)
                  )) = 0;
  END_ENTITY;

  ENTITY Layout_junction;
      name                  : STRING;  
      associated_definition : Layered_interconnect_module_design_view;
      net                   : Generic_physical_network;
      location              : Cartesian_point;
    UNIQUE
      UR1 : location, net;
      UR2 : name, net;
    WHERE
      WR1 : associated_definition :=: net.current_associated_definition;
  END_ENTITY;

  ENTITY Library_reference_view_definition_relationship
    SUBTYPE OF (View_definition_relationship);
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Material_removal_laminate_component
    SUBTYPE OF (Laminate_component);
      causal_item                                           : OPTIONAL limd_restriction_basis_item;
      design_intent                                         : SET[1:?] OF stratum_feature_template_component_or_stratum;
      SELF\Definition_based_product_occurrence.derived_from : material_removal_feature_template_or_parametric_template;
      explicitly_created                                    : BOOLEAN;
    WHERE
      WR1:   SIZEOF(QUERY(sa <* design_intent | NOT(
         NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(sa)) OR
           (SIZEOF(design_intent) = 1)))) = 0;
  END_ENTITY;

  ENTITY Material_removal_structured_component
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Material_removal_structured_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Multi_layer_material_removal_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      derived_layer_geometry : Stratum_feature_based_derived_pattern;
  END_ENTITY;

  ENTITY Multi_stratum_special_symbol_component
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Multi_stratum_special_symbol_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Multi_layer_stratum_feature_template_component
    SUBTYPE OF (Stratum_feature_template_component);
      derived_layer_geometry : Stratum_feature_based_derived_pattern;
    WHERE
      WR1: SELF\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum
        :=: derived_layer_geometry.reference_stratum_feature.resident_stratum;
  END_ENTITY;

  ENTITY Material_removal_laminate_text_component
    SUBTYPE OF (Generic_laminate_text_component);
      design_intent : SET [1:?] OF stratum_feature_template_component_or_stratum;
    WHERE
      WR1: SIZEOF(QUERY(sa <* design_intent | NOT(
         NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(sa)) OR
           (SIZEOF(design_intent) = 1)))) = 0;
  END_ENTITY;

  ENTITY Padstack_occurrence
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Padstack_definition;
    INVERSE
      SELF\Assembly_group_component.components : SET [1:?] OF Structured_layout_component_sub_assembly_relationship FOR relating_view;
    WHERE
      WR1 : SIZEOF(QUERY(sar <* components |
            EXISTS(sar.second_location)
                  )) = 0;
  END_ENTITY;

  ENTITY Partially_plated_cutout
    SUBTYPE OF (Cutout);
    INVERSE
      plated_segment   : SET[1:?] OF Plated_cutout_edge_segment FOR composed_cutout;
      unplated_segment : SET[1:?] OF Unplated_cutout_edge_segment FOR composed_cutout;
  END_ENTITY;
  
  ENTITY Partially_plated_interconnect_module_edge
    SUBTYPE OF (Interconnect_module_edge);
    INVERSE
      plated_segment   : SET[1:?] OF Plated_interconnect_module_edge_segment FOR composed_edge;
      unplated_segment : SET[1:?] OF Unplated_interconnect_module_edge_segment FOR composed_edge;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Physical_connectivity_interrupting_cutout
    SUBTYPE OF (Cutout);
      interrupted_connectivity_element : SET[1:?] OF Conductive_interconnect_element;
  END_ENTITY;

 ENTITY Physical_network_group
   ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_physical_network_group,
                                 Externally_defined_physical_network_group))
   SUBTYPE OF (Group);
    SELF\Group.elements : SET [1:?] OF Generic_physical_network;
 END_ENTITY;

 ENTITY Pre_defined_physical_network_group
   SUBTYPE OF (Physical_network_group);
 WHERE
   WR1: SELF\Group.membership_meaning IN Pre_defined_physical_network_group_types;
 END_ENTITY;

 ENTITY Externally_defined_physical_network_group
   SUBTYPE OF (Physical_network_group);
 INVERSE
          source : External_source_identification FOR item;
 WHERE
   WR1: NOT (SELF\Group.membership_meaning IN Pre_defined_physical_network_group_types);
 END_ENTITY; 

 ENTITY Physical_network_group_element_relationship
   ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_physical_network_group_element_relationship,
                                 Externally_defined_physical_network_group_element_relationship))
   SUBTYPE OF (Group_relationship);
    SELF\Group_relationship.relating_group : Physical_network_group;
    SELF\Group_relationship.related_group : Physical_network_group;
   WHERE
    WR1 : acyclic_physical_network_group_element_relationship(SELF,
        [related_group], 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PHYSICAL_NETWORK_GROUP_ELEMENT_RELATIONSHIP');
 END_ENTITY;

  	ENTITY Physical_network_supporting_inter_stratum_feature
    	SUBTYPE OF (Plated_inter_stratum_feature,
 			Inter_stratum_join_implementation);
  	END_ENTITY; 

  	ENTITY Physical_network_supporting_stratum_feature_conductive_join
    	SUBTYPE OF (Stratum_feature_conductive_join,
		Inter_stratum_join_implementation);
  	END_ENTITY; 

 ENTITY Pre_defined_physical_network_group_element_relationship
   SUBTYPE OF (Physical_network_group_element_relationship);
 WHERE
   WR1: SELF\Group_relationship.relation_type IN Pre_defined_physical_network_group_relation_types;
 END_ENTITY;

 ENTITY Externally_defined_physical_network_group_element_relationship
   SUBTYPE OF (Physical_network_group_element_relationship);
 INVERSE
          source : External_source_identification FOR item;
 WHERE
   WR1: NOT (SELF\Group_relationship.relation_type IN Pre_defined_physical_network_group_relation_types);
 END_ENTITY; 

  ENTITY Plated_cutout
    SUBTYPE OF (Cutout, Plated_inter_stratum_feature);
  END_ENTITY;

  ENTITY Plated_cutout_edge_segment
    SUBTYPE OF (Cutout_edge_segment, Plated_inter_stratum_feature);
      SELF\Cutout_edge_segment.composed_cutout : Partially_plated_cutout;
  END_ENTITY;

  ENTITY Plated_inter_stratum_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Plated_cutout,
		 Plated_interconnect_module_edge,
		 Plated_cutout_edge_segment,
		 Plated_interconnect_module_edge_segment,
		 Plated_passage))
    SUBTYPE OF (Inter_stratum_feature);
    WHERE
      WR1 : SELF\Inter_stratum_feature.vertical_extent.allocated_technology.plated_passage = TRUE;
  END_ENTITY;

  ENTITY Plated_interconnect_module_edge
    SUBTYPE OF (Interconnect_module_edge, Plated_inter_stratum_feature);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Plated_interconnect_module_edge_segment
    SUBTYPE OF (Plated_inter_stratum_feature, Interconnect_module_edge_segment);
      SELF\Interconnect_module_edge_segment.composed_edge : Partially_plated_interconnect_module_edge;
  END_ENTITY;

  ENTITY Plated_passage
    SUPERTYPE OF (ONEOF (Component_termination_passage, Via))
    SUBTYPE OF (Plated_inter_stratum_feature);
      SELF\Inter_stratum_feature.vertical_extent : Passage_technology_allocation_to_stack_model;    
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Additive_laminate_text_component
    SUBTYPE OF (Generic_laminate_text_component);
      stratum_feature_implementation : SET [1:?] OF Stratum_feature;
    WHERE
      WR1: SIZEOF(QUERY(sf <* stratum_feature_implementation | sf.resident_stratum :<>: stratum_feature_implementation[1].resident_stratum)) = 0;
  END_ENTITY;

  ENTITY Primary_stratum_indicator_symbol
    SUBTYPE OF (Single_stratum_special_symbol_component);
  END_ENTITY;

  ENTITY Probe_access_area
    SUPERTYPE OF (Internal_probe_access_area)
    SUBTYPE OF (Laminate_component, Definitional_shape_element);
    	SELF\Definition_based_product_occurrence.derived_from : Stratum_feature_template;
        probed_layout_item                                    : stratum_feature_or_stratum;
        SELF\Definitional_shape_element.connection_area                    : SET[1:1] OF Connection_zone_in_design_view;
    	stratum_feature_material_stackup                      : OPTIONAL Stratum_feature_based_derived_pattern;
    DERIVE
      SELF\Shape_element.containing_shape : Probe_access_area := SELF;
      SELF\Shape_element.element_name : STRING := '';      
    INVERSE
      network : Routed_physical_network FOR probe;
    WHERE
      WR1 :       SELF\Shape_element.id = SELF\Item_shape.id;
      WR2 : NOT (EXISTS(stratum_feature_material_stackup) AND 
                 NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERNAL_PROBE_ACCESS_AREA' IN TYPEOF(SELF)))
             OR
            (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(probed_layout_item))
             AND
            (probed_layout_item :=: stratum_feature_material_stackup\Stratum_feature_based_derived_pattern.reference_stratum_feature));             
  END_ENTITY;

  ENTITY Region_based_derived_pattern;
    extent            : Inter_stratum_extent;
    reference_stratum : design_or_documentation_stratum;
    region            : Csg_2d_model;
  END_ENTITY;

  ENTITY Routed_join_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
        Inter_stratum_join_relationship,
		Intra_stratum_join_relationship,
	 	Stratum_embedded_physical_component_join_relationship))
    SUBTYPE OF (Join_relationship);
    INVERSE
      network_topology : Routed_physical_network FOR routed_connectivity_requirement_element;
  END_ENTITY;

  ENTITY Routed_physical_network
    SUBTYPE OF (Generic_physical_network);
      routed_connectivity_requirement_element 	                     : SET[1:?] OF Routed_join_relationship;
      probe                                                          : OPTIONAL SET[1:?] OF Probe_access_area;
    DERIVE
    	complete	: BOOLEAN := NOT EXISTS(unrouted_connectivity_requirement_element);
        valid_net   : LOGICAL := (SIZEOF(SELF\Generic_physical_network.connectivity_requirement_element) > 1 );
    WHERE
      WR1 : SIZEOF(QUERY(cre <* SELF\Generic_physical_network.connectivity_requirement_element | NOT 
      (NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAND_JOIN_TERMINAL' IN TYPEOF(cre)) OR 
           (SIZEOF(TYPEOF(cre\Component_feature.associated_component) * 
            ['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONTACT_SIZE_DEPENDENT_LAND']) = 1)))) = 0;
      WR2: NOT EXISTS(SELF\Generic_physical_network.reference_connected_terminals) OR
                     (SELF\Generic_physical_network.reference_connected_terminals.associated_definition = 
                      SELF\Generic_physical_network.current_associated_definition\Part_design_view.usage_view);
  END_ENTITY; 

  ENTITY Single_stratum_special_symbol_component
    SUPERTYPE OF (Primary_stratum_indicator_symbol)
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Single_stratum_special_symbol_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Stratum
    SUPERTYPE OF (ONEOF (Documentation_layer_stratum, Design_layer_stratum))
    SUBTYPE OF (Part_shape, Part_view_definition);
      SELF\Product_view_definition.id : STRING;
      definition                      : Stratum_technology_occurrence;
    DERIVE
      of_average_surface 	: SET[0:1] OF stratum_average_surface := 
        QUERY(tmp <* of_surface | 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_AVERAGE_SURFACE' IN TYPEOF(tmp));
      SELF\Item_shape.described_element : Stratum := SELF;
      base_component : SET [0:?] OF Area_component := get_base_component(SELF);                     
      of_product_version : SET [1:?] OF product_version := 
          bag_to_set(QUERY(pv <* USEDIN(assembly[1].assembly.defined_version.of_product, 'PRODUCT_VERSION_ARM.PRODUCT_VERSION.OF_PRODUCT') | 
                (SIZEOF(QUERY( pd <* USEDIN(pv, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |
                     (SIZEOF(QUERY(nauo <* USEDIN(pd, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY') | (SELF = nauo.component))) = 1)
                     )) = 1)
               ));
      of_technology : Stratum_technology := definition\Stratum_technology_occurrence.definition;                     
    INVERSE
      of_surface         	: SET[0:3] OF stratum_surface FOR of_stratum;
      assembly           	: SET[1:?] OF interconnect_module_stratum_assembly_relationship FOR component;
	  stratum_usage			: SET[0:1] OF External_source_identification FOR item;      
	  material_product      : SET [0:1] OF Make_from_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.average_surface)) <= 1;
      WR2: NOT(SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.average_surface)) = 1) OR
              (SIZEOF(of_surface) = 3);              
      WR3: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.primary_surface)) <= 1;
      WR4: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.secondary_surface)) <= 1;
      WR5: NOT(SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.secondary_surface)) = 1) OR
              (SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.primary_surface)) = 1);
      WR6: NOT EXISTS (SELF\Product_view_definition.additional_characterization);
      WR7: SIZEOF(QUERY(asse <* assembly |
                  NOT(asse.assembly.defined_version.of_product = assembly[1].assembly.defined_version.of_product)
           )) = 0;
      WR8: SIZEOF(of_product_version) = SIZEOF(assembly);
      WR9: SELF\Product_view_definition.defined_version IN of_product_version;
      WR10: NOT ( SIZEOF(material_product)= 1) OR (material_product[1].relating_view IN               
            of_technology\Stratum_technology.stratum_material[1].items);   
      WR11: SIZEOF(base_component) < 2;
  END_ENTITY;

  ENTITY Stratum_average_surface
    SUBTYPE OF (Stratum_surface);
    WHERE
      WR1 : SELF\Stratum_surface.name = stratum_surface_designation.average_surface;
  END_ENTITY;

  ENTITY Stratum_embedded_physical_component_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      terminal_to_be_connected : SET[1:?] OF Embedded_physical_component_terminal;
      point_to_be_connected    : SET[1:?] OF Layer_connection_point;
    DERIVE
      associated_component : Assembly_component := terminal_to_be_connected[1]\Component_feature.associated_component;
    WHERE
      WR1 : SIZEOF(QUERY(t <* terminal_to_be_connected | t.associated_component <> associated_component)) = 0;
  END_ENTITY;

  ENTITY Stratum_feature
    SUPERTYPE OF (ONEOF (Conductor,
      Conductive_filled_area) ANDOR (Fiducial_stratum_feature))    
    SUBTYPE OF (Shape_element); 			
      SELF\Shape_element.containing_shape RENAMED resident_stratum  : design_or_documentation_stratum;
      feature_of_size                                               : BOOLEAN;
    INVERSE
      shape	: SET[0:?] OF Stratum_feature_usage FOR definition;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, resident_stratum;
    WHERE
      WR1 : SIZEOF(query ( ac <* USEDIN(SELF,'') |
                  ('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT' IN TYPEOF(ac))
                   AND
                  (get_assemblies(ac) <> get_ims(resident_stratum))
                  ))
                  = 0;
  END_ENTITY;
  
  ENTITY Stratum_feature_usage
    SUBTYPE OF(Geometric_item_specific_usage);
      SELF\Geometric_item_specific_usage.definition      : Stratum_feature;
      SELF\Geometric_item_specific_usage.identified_item : limd_sf_shape_select;
      SELF\Geometric_item_specific_usage.used_model      : limd_stratum_shape_model_select;
    WHERE
     WR1 : SELF\Geometric_item_specific_usage.name = '';
     WR2 : NOT EXISTS(SELF\Geometric_item_specific_usage.description);      
  END_ENTITY;

  ENTITY Stratum_feature_based_derived_pattern;
      extent                    : Inter_stratum_extent;
      reference_stratum_feature : Stratum_feature;
    INVERSE
      layer_usage	: SET[0:1] OF External_source_identification FOR item;
    WHERE
      WR1: reference_stratum_feature\Stratum_feature.resident_stratum IN extent\Inter_stratum_extent.included_stratum;
      WR2: SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DESIGN_LAYER_STRATUM',
                   'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_STRATUM'] * TYPEOF(reference_stratum_feature\Stratum_feature.resident_stratum)) = 1;
      WR3: SIZEOF(QUERY(ds <* extent\Inter_Stratum_extent.included_stratum |
             NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DERIVED_STRATUM' IN TYPEOF(ds))
                 )) = 1;
  END_ENTITY;

  	ENTITY Stratum_feature_conductive_join
    	SUPERTYPE OF (Physical_network_supporting_stratum_feature_conductive_join);
      	relating_concept : Stratum_feature_template_component;    
      	related_concept  : Stratum_feature_template_component;
        resulting_shape        : OPTIONAL Geometric_model;
      INVERSE
	    technology_requirement : SET[1:?] OF requirement_assignment FOR assigned_to;
    WHERE
      WR1 : related_concept.resident_stratum :<>: relating_concept.resident_stratum;
	END_ENTITY; 

  ENTITY Stratum_feature_template_component
    SUPERTYPE OF (ONEOF (Area_component,
            Conductive_interconnect_element))
    SUBTYPE OF (Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : stratum_feature_template_or_parametric_template;
      implementation_or_resident_stratum : stratum_feature_or_stratum; 
      causal_item : OPTIONAL limd_restriction_basis_item;
    DERIVE
      resident_stratum : Stratum := get_resident_stratum(SELF);
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS' IN TYPEOF(SELF)) OR
        NOT('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.TRACE_TEMPLATE' IN TYPEOF(derived_from));        
  END_ENTITY;

  ENTITY Stratum_feature_template_component_with_stratum_feature
    SUBTYPE OF (Stratum_feature_template_component, Stratum_feature);
    DERIVE
      SELF\Stratum_feature_template_component.implementation_or_resident_stratum : Stratum_feature := SELF;
  END_ENTITY;

  ENTITY Stratum_surface;
      name       : stratum_surface_designation;  
      of_stratum : Stratum;
      of_technology : OPTIONAL Stratum_surface_technology;
    UNIQUE
      UR1 : name, of_stratum;
  END_ENTITY;

  ENTITY Structured_layout_component
    ABSTRACT SUPERTYPE OF (ONEOF (Footprint_occurrence, 
            Material_removal_structured_component,
			Multi_stratum_special_symbol_component,
            Padstack_occurrence, 
            Single_stratum_special_symbol_component))
    SUBTYPE OF (Assembly_group_component);
      SELF\Definition_based_product_occurrence.derived_from : Structured_template;
    WHERE
      WR1 : SIZEOF(TYPEOF(SELF) *
        ['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PHYSICAL_COMPONENT']) = 0;
      WR2: SIZEOF(QUERY(agc <* SELF\Assembly_group_component.components |
        NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(agc)))) = 0;
  END_ENTITY;

  ENTITY Structured_layout_component_sub_assembly_relationship
    SUPERTYPE OF (Footprint_occurrence_sub_assembly_relationship)
    SUBTYPE OF (Next_assembly_usage_occurrence_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Structured_layout_component;
      SELF\Product_occurrence_definition_relationship.related_view : Assembly_component;
      first_location : Template_location_in_structured_template;
      second_location : OPTIONAL Template_location_in_structured_template;
      overriding_shape : OPTIONAL Part_template_shape_model;
      design_specific_placement : BOOLEAN;
    DERIVE
      first_location_overridden : LOGICAL := NOT EXISTS(second_location) AND
                  (SELF\Product_occurrence_definition_relationship.related_view\Definition_based_product_occurrence.derived_from
                   :<>: first_location.template);      
      second_location_overridden : LOGICAL := EXISTS(second_location) AND
                  (SELF\Product_occurrence_definition_relationship.related_view\Definition_based_product_occurrence.derived_from
                   :<>: second_location.template);
    UNIQUE
      UR1 : first_location, second_location,relating_view,related_view;
    WHERE
      WR1 : NOT EXISTS(SELF\Assembly_component_relationship.location_indicator);
      WR2 : first_location_overridden OR 
           (SELF\Product_occurrence_definition_relationship.relating_view\Definition_based_product_occurrence.derived_from :=: first_location.assembly);
      WR3 : first_location :<>: second_location;
      WR4 : NOT first_location_overridden OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(relating_view));
      WR5 : NOT second_location_overridden OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(relating_view));
      WR6 : NOT (first_location_overridden AND second_location_overridden);
      WR7: NOT (EXISTS(overriding_shape) XOR (first_location_overridden OR second_location_overridden));
      WR8: NOT EXISTS(overriding_shape) OR (related_view.derived_from IN overriding_shape.shape_characterized_definition);
      WR9: NOT ((first_location\Template_location_in_structured_template.placement_status = template_location_placement_status.is_fixed) AND 
                 design_specific_placement);
  END_ENTITY;

  ENTITY Structured_layout_component_sub_assembly_relationship_with_component
    SUBTYPE OF (Structured_layout_component_sub_assembly_relationship, Assembly_component);
    DERIVE
	  SELF\Structured_layout_component_sub_assembly_relationship.related_view : Assembly_component := SELF;
  END_ENTITY;

  ENTITY Unplated_cutout_edge_segment
    SUBTYPE OF (Cutout_edge_segment);
      SELF\Cutout_edge_segment.composed_cutout : Partially_plated_cutout;
    WHERE
      WR1 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Unplated_interconnect_module_edge_segment
    SUBTYPE OF (Interconnect_module_edge_segment);
      SELF\Interconnect_module_edge_segment.composed_edge : Partially_plated_interconnect_module_edge;
    WHERE
      WR1 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Unrouted_conductive_interconnect_element
    SUBTYPE OF (Conductive_interconnect_element);
      SELF\Stratum_feature_template_component.implementation_or_resident_stratum : Stratum;
  END_ENTITY;

  ENTITY Unrouted_join_relationship
    SUBTYPE OF (Join_relationship);
      unrouted_terminals : OPTIONAL SET[1:?] OF Laminate_component_join_terminal;
      unrouted_lcp       : OPTIONAL SET[1:?] OF Layer_connection_point;
      unrouted_junction  : OPTIONAL SET[1:?] OF Layout_junction;
      unrouted_paa       : OPTIONAL SET[1:?] OF Probe_access_area;
      unrouted_via       : OPTIONAL SET[1:?] OF Via_terminal;
    INVERSE
      network_topology : Generic_physical_network FOR unrouted_connectivity_requirement_element;
    WHERE
      WR1: (SIZEOF(unrouted_terminals) + SIZEOF(unrouted_lcp) + SIZEOF(unrouted_paa) + SIZEOF(unrouted_via) + SIZEOF(unrouted_junction)) > 0;
  END_ENTITY;

  ENTITY Unrouted_physical_network
    SUBTYPE OF (Generic_physical_network);
  END_ENTITY; 

  ENTITY Unsupported_passage
    SUBTYPE OF (Inter_stratum_feature);
      SELF\Definition_based_product_occurrence.derived_from : Unsupported_passage_template;
      SELF\Inter_stratum_feature.vertical_extent : Passage_technology_allocation_to_stack_model;    
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Via
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Plated_passage);
      SELF\Definition_based_product_occurrence.derived_from : Via_template;
  END_ENTITY;

  ENTITY Via_terminal
    SUBTYPE OF (Laminate_component_feature);
      SELF\Component_feature.definition           : Via_template_terminal;
      SELF\Component_feature.associated_component : Via;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  SUBTYPE_CONSTRAINT limd_assembly_component_subtypes FOR Assembly_component; 
    (ONEOF (Physical_component,
     Laminate_component));
  END_SUBTYPE_CONSTRAINT;
	
  SUBTYPE_CONSTRAINT array_placement_group_subtypes FOR Array_placement_group; 
    (ONEOF (Laminate_text_string_component,
     Linear_array_placement_group_component,
     Rectangular_array_placement_group_component));
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT component_feature_subtypes FOR Component_feature;     
    ONEOF (Physical_component_feature,
           Laminate_component_feature);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT component_terminal_subtypes FOR Component_terminal;     
    ONEOF (Physical_component_terminal,
           Laminate_component_join_terminal);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT inter_stratum_feature_subtypes FOR Inter_stratum_feature;     
    ONEOF (Cutout,
           Interconnect_module_edge);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT interconnect_module_terminal_subtypes FOR Interconnect_module_terminal;     
    (ONEOF (Interconnect_module_interface_terminal,
            Interconnect_module_macro_terminal));
  END_SUBTYPE_CONSTRAINT; 

  SUBTYPE_CONSTRAINT limd_part_view_definition_subtypes FOR Part_view_definition; 
    (ONEOF (Part_usage_view,
            Part_design_view,
            Stratum));
  END_SUBTYPE_CONSTRAINT; 
	
  SUBTYPE_CONSTRAINT limd_template_definition_subtypes FOR Template_definition; 
    (ONEOF (
       ONEOF(Printed_part_template, Special_symbol_template) ANDOR  Geometric_template, 
             Non_conductive_cross_section_template,
             Part_string_template, 
             Parametric_template,
             Part_text_template,
             Stratum_stack_model,
             Stratum_sub_stack));
  END_SUBTYPE_CONSTRAINT;

RULE limd_unique_stratum FOR (Stratum, Layered_interconnect_module_design_view, Stratum_technology_occurrence);
 LOCAL
      s : BAG OF Stratum := [];
      imsar : BAG OF Interconnect_module_stratum_assembly_relationship := [];
      sto : BAG OF Stratum_technology_occurrence := [];
	  pass : BOOLEAN := TRUE;
 END_LOCAL;
 REPEAT i := 1 to SIZEOF(Layered_interconnect_module_design_view) by 1;
    imsar := bag_to_set(USEDIN(Layered_interconnect_module_design_view[i], 
                        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY'));
	REPEAT j := 1 to SIZEOF(imsar) by 1;
	   s := s + imsar[j].component;
    END_REPEAT;
	REPEAT j := 1 to SIZEOF(s) by 1;
	   sto := sto + s[j].definition;
    END_REPEAT;
	
	IF (SIZEOF(sto) < SIZEOF(s))
	THEN
	  pass := FALSE;
	  ESCAPE;
	END_IF;
	
 END_REPEAT;

    WHERE
     WR1 : pass;
END_RULE;
  
(*
  desc: for each interconnect_module_design_view in a data set, no more than one stratum shall reference the same stratum_technology_occurrence as a definition.
*)

  FUNCTION acyclic_area_component
    (relation : Area_component; relatives : SET[1:?] OF 
    Area_component; specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Area_component;
  END_LOCAL;

    IF relation.replaced_component IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.replaced_component,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'AREA_COMPONENT.' +
      'REPLACED_BY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_area_component(x[i], relatives +
        relation.replaced_component, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;
  
  FUNCTION acyclic_conductive_interconnect_element_terminal_link
    (relation : Conductive_interconnect_element_terminal_link; 
    relatives : SET[1:?] OF Conductive_interconnect_element_terminal; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Conductive_interconnect_element_terminal_link := [];
  END_LOCAL;

    IF relation.precedent_point IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_point,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK.' +
      'SUBSEQUENT_POINT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_conductive_interconnect_element_terminal_link(x[i], relatives +
        relation.precedent_point, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
  
  FUNCTION acyclic_physical_network_group_element_relationship
    (relation : Physical_network_group_element_relationship; 
    relatives : SET[1:?] OF Physical_network_group; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Physical_network_group_element_relationship := [];
  END_LOCAL;

    IF relation.relating_group IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_group,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'PHYSICAL_NETWORK_GROUP_ELEMENT_RELATIONSHIP.' +
      'RELATED_GROUP')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_physical_network_group_element_relationship(x[i], relatives +
        relation.relating_group, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
  
  FUNCTION correlated_terminals(
    input1 : SET OF Conductive_interconnect_element_terminal ;
    input2 : SET OF Conductive_interconnect_element_terminal_link
  ) : LOGICAL;

    LOCAL
      pass : LOGICAL := FALSE;
      ciet : SET OF conductive_interconnect_element_terminal := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input2) BY 1;
      ciet := ciet + input2[i].precedent_point;
      ciet := ciet + input2[i].subsequent_point;
    END_REPEAT;
    pass := (input1 = ciet);
   
   IF (pass = UNKNOWN) THEN
    RETURN(FALSE);
   END_IF;

    RETURN(pass);
  END_FUNCTION;

FUNCTION get_base_component (input : Stratum) : SET OF Area_component;
LOCAL
      ac: SET OF Area_component := [];
      i : INTEGER := 0;
     sf : SET OF Stratum_feature := bag_to_set(USEDIN(input,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE.RESIDENT_STRATUM'));
 sftc_s : SET OF Stratum_feature_template_component := bag_to_set(
             USEDIN(input,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'));
sftc_sf : SET OF Stratum_feature_template_component := [];
 sftc_t : SET OF Stratum_feature_template_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(sf) BY 1;
      sftc_sf := sftc_sf + bag_to_set(USEDIN(sf[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'));
    END_REPEAT;
       sftc_t := sftc_s + sftc_sf;
    REPEAT i := 1 to HIINDEX(sftc_t) BY 1;
      IF(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(sftc_t[i])) AND
         (sftc_t[i]\Area_component.is_base = TRUE))
      THEN
       ac := ac + sftc_t[i];
      END_IF;
    END_REPEAT;
    RETURN(ac);
END_FUNCTION; 

FUNCTION get_mrlc_not_for_base (input1         : Documentation_layer_stratum;
                                base_component : SET OF Area_component) : SET OF Material_removal_laminate_component;
LOCAL
      ac: SET OF Area_component := [];
      i : INTEGER := 0;
   mrlc : SET OF Material_removal_laminate_component := [];
 mrlc_b : SET OF Material_removal_laminate_component := [];
     sf : SET OF Stratum_feature := bag_to_set(USEDIN(input1,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE.RESIDENT_STRATUM'));
 sftc_s : SET OF Stratum_feature_template_component  := bag_to_set(
             USEDIN(input1,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'));
sftc_sf : SET OF Stratum_feature_template_component   := [];
 sftc_t : SET OF Stratum_feature_template_component  := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(sf) BY 1;
      sftc_sf := sftc_sf + bag_to_set(USEDIN(sf[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'));
    END_REPEAT;
       sftc_t := sftc_s + sftc_sf;
    REPEAT i := 1 to HIINDEX(sftc_t) BY 1;
        mrlc := mrlc + bag_to_set(USEDIN(sftc_t[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT')); 
    END_REPEAT;
    REPEAT i := 1 to HIINDEX(base_component) BY 1;
        mrlc_b := mrlc + bag_to_set(USEDIN(base_component[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT')); 
    END_REPEAT;
    RETURN(mrlc - mrlc_b);
END_FUNCTION; 



  FUNCTION limd_get_sz_cp (
    input : SET[1:?] OF Conductive_interconnect_element_terminal_link) : INTEGER;
  LOCAL
    ac : SET OF Conductive_interconnect_element_terminal := [];
  END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
      input[i]\Conductive_interconnect_element_terminal_link.precedent_point +
      input[i]\Conductive_interconnect_element_terminal_link.subsequent_point;
    END_REPEAT;
    RETURN (SIZEOF(ac));
  END_FUNCTION;

  FUNCTION limd_get_generic_network(
    input1 : SET OF Inter_stratum_join_relationship ;
    input2 : SET OF Intra_stratum_join_relationship ;
    input3 : SET OF Stratum_embedded_physical_component_join_relationship;
    input4 : SET OF Unrouted_join_relationship) : Generic_physical_network;

    LOCAL
      r1  : SET OF Routed_join_relationship := input1 + input2 + input3;
      u1  : SET OF Unrouted_join_relationship := input4;
      gpn : SET OF Generic_physical_network := [];
    END_LOCAL;
  REPEAT i := 1 TO SIZEOF(r1);
    gpn := gpn + r1[i]\Routed_join_relationship.network_topology;
  END_REPEAT;
  REPEAT i := 1 TO SIZEOF(u1);
    gpn := gpn + u1[i]\Unrouted_join_relationship.network_topology;
  END_REPEAT;
  IF SIZEOF(gpn) <> 1 THEN
    RETURN(?);
  ELSE
    RETURN(gpn[1]);
  END_IF;
  END_FUNCTION;

  FUNCTION get_ims(input : Stratum) : SET OF Product_view_definition;
    LOCAL
      imsar : SET OF Interconnect_module_stratum_assembly_relationship := input.assembly;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(imsar) BY 1;
      pvd := pvd + imsar[i].assembly; 
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION get_resident_stratum(input: Stratum_feature_template_component) : Stratum;
    IF 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(input.implementation_or_resident_stratum)
      THEN RETURN(input.implementation_or_resident_stratum.resident_stratum);
      ELSE 
        IF 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(input.implementation_or_resident_stratum)
          THEN RETURN(input.implementation_or_resident_stratum);
        END_IF;  
    END_IF;
    RETURN(?); 
  END_FUNCTION;

  FUNCTION limd_get_lcp_resident_stratum(input: SET OF Layer_connection_point) : BAG OF Design_layer_stratum;
  LOCAL
   s : BAG OF Design_layer_stratum := [];
  END_LOCAL;
  
    REPEAT i := 1 to SIZEOF(input) BY 1;
       s := s + input[i]\Layer_connection_point.resident_design_layer_stratum;
    END_REPEAT;
       
    RETURN(s); 
  END_FUNCTION;
  
END_SCHEMA;

(*
   $Id: arm.exp,v 1.62 2012/10/11 05:49:06 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8173 - ISO/TS 10303-1700 Layered interconnect module with printed component design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7568
*)

SCHEMA Layered_interconnect_module_with_printed_component_design_arm;   

USE FROM Printed_physical_layout_template_arm;	-- ISO/TS 10303-1737
USE FROM Land_arm;	-- ISO/TS 10303-1692

REFERENCE FROM Support_resource_arm(bag_to_set); 

 	TYPE limwpcd_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Printed_component);
	END_TYPE;

 	TYPE conductor_or_conductive_filled_area = SELECT
		(Conductor, 
		 Conductive_filled_area);
	END_TYPE;

	SUBTYPE_CONSTRAINT limwpcd_assembly_component_subtypes FOR Assembly_component; 
	    (ONEOF (Physical_component,
		 Printed_component,
	 	Laminate_component));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT limwpcd_structured_layout_component_subtypes FOR Structured_layout_component; 
		(ONEOF (Footprint_occurrence,
			Material_removal_structured_component,
            Multi_stratum_printed_component, 
			Multi_stratum_special_symbol_component,
			Padstack_occurrence,
			Single_stratum_printed_component,
			Single_stratum_special_symbol_component));
	END_SUBTYPE_CONSTRAINT; 

  ENTITY Basic_multi_stratum_printed_component 
    SUBTYPE OF (Printed_component);
      material_stack : Stratum_feature_based_derived_pattern;
      SELF\Printed_component.derived_from : Basic_multi_stratum_printed_part_template;
    DERIVE
      stratum_feature_implementation : Stratum_feature := material_stack.reference_stratum_feature;
  END_ENTITY;

  ENTITY Tiebar_printed_component 
    SUBTYPE OF (Printed_component, Structured_layout_component);
      SELF\Printed_component.derived_from : Printed_tiebar_template;
    DERIVE
      joined_networks : SET OF Generic_physical_network := get_gpn(SELF\Printed_component.access_mechanism);
      tiebar_component : SET OF Area_component := limdwpcd_get_ac(components);
      padstack_component : SET OF Laminate_component := limdwpcd_get_lc(components);
      passage_component : SET OF Plated_passage := QUERY(pc <* padstack_component | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_PASSAGE' IN TYPEOF(pc)));
      tiebar_resident_stratum : SET OF Stratum := limdwpcd_get_tbrs(tiebar_component);
      passage_resident_stratum : SET OF Stratum := limdwpcd_get_prs(passage_component, SELF\Assembly_component.assemblies);
      passage_dependent_land_component : SET OF Plated_passage_dependent_land := limdwpcd_get_ppdl(passage_component);  
   INVERSE
    SELF\Assembly_group_component.components  : 
             SET [1:?] OF Structured_layout_component_sub_assembly_relationship FOR relating_view;
    WHERE
     WR1 : (SIZEOF(tiebar_component) + SIZEOF(passage_component)) > 0;
     WR2 : SIZEOF(components) = (SIZEOF(tiebar_component) + SIZEOF(padstack_component));             
     WR3 : SIZEOF(padstack_component) > SIZEOF(passage_component);             
     WR4 : SIZEOF(QUERY(tc <* tiebar_component |
                  NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF
                      (tc\Stratum_feature_template_component.implementation_or_resident_stratum))
                 )) = 0;       
     WR5 : SIZEOF(tiebar_component) = SIZEOF(tiebar_resident_stratum);       
     WR6 : SIZEOF(joined_networks) > 1;
     WR7 : SIZEOF(QUERY(jn <* joined_networks |
                 NOT(SIZEOF(SELF\Printed_component.access_mechanism * jn\Generic_physical_network.connectivity_requirement_element) = 1 )
                 )) = 0;               
     WR8 : SIZEOF(QUERY(tc <* tiebar_component |
           NOT(SIZEOF(USEDIN(tc,'COMPONENT_FEATURE_ARM.COMPONENT_FEATURE.ASSOCIATED_COMPONENT')) = 0)
              )) = 0;
    WR9 : NOT(SIZEOF(passage_component) = 1) OR
             (SIZEOF(QUERY(pc <* passage_component | NOT((SIZEOF(tiebar_component) = 0) OR
                (SIZEOF(tiebar_resident_stratum * passage_resident_stratum) = SIZEOF(tiebar_resident_stratum))
                )
               )) = 0);
    WR10 : NOT(SIZEOF(passage_component) >= 1) OR
              (SIZEOF(QUERY(pc <* passage_component | NOT
                (SIZEOF(tiebar_resident_stratum * passage_resident_stratum) = SIZEOF(tiebar_resident_stratum))
               )) = 0);
   WR11 : SIZEOF(QUERY(am <* SELF\Printed_component.access_mechanism |
           NOT('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF(am.definition))
            )) = 0;
END_ENTITY;

FUNCTION limdwpcd_get_ac(input : SET OF Structured_layout_component_sub_assembly_relationship) : SET OF Area_component; 
LOCAL
	sspc : SET OF Stratum_feature_template_component := [];  --this gives us access to the information base
	slcsar : SET OF Structured_layout_component_sub_assembly_relationship :=
                 (QUERY(inp <* input |
                 ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(inp.related_view)) AND NOT
                 ('LAND_ARM.LAND' IN TYPEOF(inp.related_view)) AND NOT
  ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS' IN TYPEOF(inp.related_view)) AND NOT
  ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERFACE_ACCESS_STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF(inp.related_view))
                 ));
END_LOCAL;

	REPEAT i := 1 to SIZEOF(slcsar) by 1;
	      sspc := sspc + slcsar[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);
END_FUNCTION;
(*
 desc: limdwpcd_get_ac has as input a set of  
Structured_layout_component_sub_assembly_relationship 
The function returns the set of Area_component that are referenced as the 
related_view for each member of the input. The function does not return an Area_component if that component is one of
Land, Conductive_interconnect_element_with_pre_defined_transitions, Interface_access_stratum_feature_template_component.       
*)

FUNCTION limdwpcd_get_lc(input : SET OF Structured_layout_component_sub_assembly_relationship) : SET OF Laminate_component; 
LOCAL
	sspc : SET OF Laminate_component := [];  --this gives us access to the information base
	slcsar : SET OF Structured_layout_component_sub_assembly_relationship :=
                 (QUERY(inp <* input |
                 ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_DEFINITION' IN TYPEOF
(inp\Structured_layout_component_sub_assembly_relationship.second_location\Template_location_in_structured_template.assembly))
                 ));
END_LOCAL;

	REPEAT i := 1 to SIZEOF(slcsar) by 1;
	      sspc := sspc + slcsar[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);
END_FUNCTION;
(*
 desc: limdwpcd_get_lc has as input a set of Structured_layout_component_sub_assembly_relationship.
The function returns the set of Laminate_component that are referenced as a related_view for each member of input when a second_location is provided and 
that second_location references a Padstack_definition as an assembly. 
*)

FUNCTION limdwpcd_get_ppdl(input : SET OF Plated_passage) : SET OF Plated_passage_dependent_land; 
LOCAL
	sspc : SET OF Plated_passage_dependent_land := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      sspc := sspc + bag_to_set(USEDIN(input[i],'LAND_ARM.PLATED_PASSAGE_DEPENDENT_LAND.REFERENCE_PLATED_PASSAGE'));
	END_REPEAT;

	RETURN(sspc);
END_FUNCTION;
(*
 desc: limdwpcd_get_ppdl has as input a set of Plated_passage.
The function returns the set of Plated_passage_dependent_land for which a member of the input is in the role of referenced_plated_passage.
*)

FUNCTION limdwpcd_get_tbrs(input : SET OF Stratum_feature_template_component) : SET OF Stratum; 
LOCAL
	s : SET OF Stratum := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      s := s + input[i]\Stratum_feature_template_component.resident_stratum;
	END_REPEAT;

	RETURN(s);
END_FUNCTION;
(*
desc: limdwpcd_get_tbrs has as input a set of Stratum_feature_template_component. 
The function returns a set of Stratum where each Stratum is the associated stratum for a member of the input. 
NOTE: If more than one member of input reference the same Stratum, only one member of Stratum will be returned.
*)

FUNCTION limdwpcd_get_prs(input1 : SET OF Plated_passage;
                          input2 : SET OF Product_view_definition) : SET OF Stratum; 
LOCAL
	s : SET OF Stratum := [];  --this gives us access to the information base
	stol : SET OF Stratum_technology_occurrence_link := [];  --this gives us access to the information base
	ptatsm : SET OF Passage_technology_allocation_to_stack_model := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input1) by 1;
             ptatsm := ptatsm + input1[i]\Inter_stratum_feature.vertical_extent;
	END_REPEAT;

	REPEAT i := 1 to SIZEOF(ptatsm) by 1;
             stol := stol + ptatsm[i]\Stratum_sub_stack.stratum_technology_sequence;
	END_REPEAT;

             s := limdwpcd_get_stolrs(stol, input2);
	RETURN(s);
END_FUNCTION;
(*
desc: limdwpcd_get_prs has as input a set of Plated_passage. 
The function returns a set of Stratum where each member of that set is in the vertical extent of the input. 
*)

FUNCTION limdwpcd_get_stolrs(input1 : SET OF Stratum_technology_occurrence_link;
                             input2 : SET OF Product_view_definition) : SET OF Stratum; 
LOCAL
	s0 : SET OF Stratum := [];  --this gives us access to the information base for stratum that reference sto
	sto : SET OF Stratum_technology_occurrence := [];  --this gives us access to the information base
	imsar : SET OF Interconnect_module_stratum_assembly_relationship := [];
	s1 : SET OF Stratum := [];  --this gives us access to the information base for stratum that are referenced by the assembly relationship to the input2
	s2 : SET OF Stratum := [];  --this gives us access to the information base for stratum that are related to both input1 and input2
	i : INTEGER := 0; -- variable representing the member of input2 that is the context for the function
END_LOCAL;
(* initial implementation only supports examining the first Product_view_definition as the stratum stack is not expected to change over the design cycle. *)
(* depends on the unique constraint on stratum.definition in an assembly context *)

REPEAT i := 1 to 1 by 1;
	REPEAT j := 1 to SIZEOF(input1) by 1;
	      sto := sto + input1[j]\Stratum_technology_occurrence_relationship.sto_1 +
	                   input1[j]\Stratum_technology_occurrence_relationship.sto_2;
	END_REPEAT;
	
	REPEAT j := 1 to SIZEOF(sto) by 1;
      	     s0 := s0 + bag_to_set(USEDIN(sto[j], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM.DEFINITION'));
    END_REPEAT;

    imsar := imsar + bag_to_set(USEDIN(input2[i], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY'));

    REPEAT j := 1 to SIZEOF(imsar) by 1;
     s1 := s1 + imsar[j]\Interconnect_module_stratum_assembly_relationship.component;
    END_REPEAT;

    s2 := s0 * s1; -- The intersection of the Stratum that reference the sto and the stratum that are part of the layered interconnect module.
END_REPEAT;

	RETURN(s2);
END_FUNCTION;
(*
desc: limdwpcd_get_stolrs has as input a set of Stratum_technology_occurrence_link. 
The function returns a set of Stratum where each member of that set is referenced by a member of Interconnect_module_stratum_assembly_relationship 
that corresponsds to a member of the input. 
NOTE 1 The uniqueness constraint on Stratum permits a set intersection operation to determine the relevant members of Stratum.
NOTE 2 This function assumes that the definition of the Design_stack_model does not change during the detailed design of the interconnect; therefore only 
the first member of input2 establishes the context.
*)

FUNCTION get_gpn(
	input : SET OF printed_component_join_terminal) : SET OF Generic_physical_network; 
LOCAL
	gpn : SET[0:?] OF Generic_physical_network := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
		gpn := gpn + bag_to_set(USEDIN(input[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.GENERIC_PHYSICAL_NETWORK.CONNECTIVITY_REQUIREMENT_ELEMENT'));
	END_REPEAT;

	RETURN(gpn);
END_FUNCTION;
  
  ENTITY Multi_stratum_printed_component
    SUBTYPE OF (Printed_component, Structured_layout_component);
      SELF\Printed_component.derived_from : Multi_stratum_printed_part_template;
  END_ENTITY;

  ENTITY Single_stratum_printed_component
    SUBTYPE OF (Printed_component, Structured_layout_component);
      SELF\Printed_component.derived_from : Single_stratum_printed_part_template;
      stratum_feature_implementation : SET [1:?] OF Stratum_feature;
   WHERE
    WR1 : SIZEOF(QUERY(sfi <* stratum_feature_implementation |
         NOT(sfi.resident_stratum = stratum_feature_implementation[1].resident_stratum)
               )) = 0;
  END_ENTITY;

  ENTITY Printed_component
     ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_printed_component, 
    Basic_multi_stratum_printed_component,
    Multi_stratum_printed_component))
    SUBTYPE OF (Assembly_component, Single_instance);
      SELF\Definition_based_product_occurrence.derived_from : printed_part_template;
    INVERSE
      access_mechanism : SET[1:?] OF printed_component_join_terminal FOR associated_component;
      cad_layer	: SET[0:1] OF External_source_identification FOR item;
    WHERE
      WR5 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_component_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Printed_part_template_join_terminal;
      SELF\Component_feature.associated_component : Printed_component;
      stratum_concept_implementation              : Stratum_feature_template_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
      WR2 : associated_component.derived_from :=: definition\Printed_part_template_terminal.containing_shape;
  END_ENTITY;

  ENTITY Printed_connector_component
    SUBTYPE OF (Printed_component);
      SELF\Definition_based_product_occurrence.derived_from : Printed_connector_template;
    INVERSE
      interface_access_mechanism : SET[1:?] OF Printed_connector_component_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Printed_connector_component_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Printed_part_template_interface_terminal;
      SELF\Component_feature.associated_component : Printed_connector_component;
      stratum_concept_implementation              : Stratum_feature_template_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Routed_transmission_line
    SUBTYPE OF (Assembly_component, Single_instance);
      routed_centreline_shape                  : Curve;
      SELF\Definition_based_product_occurrence.derived_from : Printed_part_cross_section_template;
      component_extent                         : Inter_stratum_extent;
      curve_parameters                         : Curve_style_parameters;
  END_ENTITY;

  FUNCTION limdwpcd_get_sspc(
	input : SET OF Structured_layout_component_sub_assembly_relationship) : 
      SET OF Single_stratum_printed_component; 
    LOCAL
	  sspc : SET[0:?] OF Single_stratum_printed_component := [];  --this gives us access to the information base
    END_LOCAL;
	REPEAT i := 1 to SIZEOF(input) by 1;
	      sspc := sspc + input[i]\Structured_layout_component_sub_assembly_relationship.related_view;
	END_REPEAT;

	RETURN(sspc);
  END_FUNCTION;

  FUNCTION limdwpcd_get_s(
	input : SET OF Single_stratum_printed_component) : SET OF Stratum; 
    LOCAL
	  s : SET[0:?] OF Stratum := [];  --this gives us access to the information base
    END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
	      s := s + input[i]\Single_stratum_printed_component.stratum_feature_implementation[1]\Stratum_feature.resident_stratum;
	END_REPEAT;

	RETURN(s);
  END_FUNCTION;

END_SCHEMA; 
(*
   $Id: arm.exp,v 1.30 2012/10/11 05:49:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8176 - ISO/TS 10303-1718 Layered interconnect simple template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7571
*)

SCHEMA Layered_interconnect_simple_template_arm;

    USE FROM Layered_2d_shape_arm;	-- ISO/TS 10303-1693
    USE FROM Fill_area_style_arm; -- ISO/TS 10303-1672
	USE FROM Fabrication_technology_arm;	-- ISO/TS 10303-1670
	USE FROM Text_representation_arm;	-- ISO/TS 10303-1750
	USE FROM Part_template_shape_with_parameters_arm;	-- ISO/TS 10303-1720
	REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740
    REFERENCE FROM Support_resource_arm(bag_to_set); 
    
  TYPE measure_orientation = ENUMERATION OF 
   (reversed,
    normal);
  END_TYPE; 

  TYPE land_connection_zone_class = ENUMERATION OF
    (surface_point_class,
     edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class);
  END_TYPE;

  TYPE land_template_terminal_class = ENUMERATION OF
    (surface_point_class,
     edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class);
  END_TYPE;

  TYPE list_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (Land_physical_template);
  END_TYPE;

  TYPE list_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT  BASED_ON requirement_assignment_item WITH 
    (Electrical_isolation_removal_template);
  END_TYPE;
  
  TYPE list_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
    (Land_template_terminal);
  END_TYPE;

  TYPE ptswp_ptsm_definition = SELECT
       (via_template,
        component_termination_passage_template);
  END_TYPE;
  
  TYPE ptswp_template_shape_model_context = ENUMERATION OF 
     (drilled_passage_context,
      finished_passage_context,
      unknown_context);
  END_TYPE;

  SUBTYPE_CONSTRAINT list_template_definition_subtypes FOR Template_definition; 
    (ONEOF (Geometric_template,
			Parametric_template,
 			Part_string_template,
    		Part_text_template,    
            Single_stratum_template,
            Stratum_stack_model));
  END_SUBTYPE_CONSTRAINT;

   ENTITY Blind_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      bottom_distance_from_datum_reference : Dimensional_location;    
      datum_reference_layer                : Stratum_technology_occurrence;
      datum_reference_side                 : Stratum_technology_occurrence_link;
      of_measure_orientation               : measure_orientation;
  END_ENTITY;

  ENTITY Closed_path_area_with_parameters
    SUBTYPE OF (Path_area_with_parameters);
    SELF\Path_area_with_parameters.centreline : closed_curve;
    SELF\Path_area_with_parameters.parameters : Closed_curve_style_parameters;
  END_ENTITY;

  ENTITY Connection_zone_in_layout_template
  	SUBTYPE OF (Connection_zone, Instanced_feature);
  	  SELF\Shape_element.containing_shape : Template_definition;
      connection_zone_category            : OPTIONAL SET[1:?] OF land_connection_zone_class;
  END_ENTITY; 
  
  ENTITY Continuous_template
    SUBTYPE OF (Geometric_template);
    WHERE
      WR1 : SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
          NOT 
          (SIZEOF(['CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_AREA_CSG_2D_MODEL'] * TYPEOF(s))
           = 1)
          )) = 0;
  END_ENTITY;

  ENTITY Counterbore_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      smaller_passage : Unsupported_passage_template;
      larger_passage  : Blind_passage_template;
  END_ENTITY;
 
  ENTITY Countersunk_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      constant_diameter_passage : Unsupported_passage_template;
      tapered_passage           : Blind_passage_template;
  END_ENTITY;
 
  ENTITY Component_termination_passage_template
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_component_termination_passage_definition;
    INVERSE
      access_mechanisms : SET[2:?] OF Component_termination_passage_template_terminal FOR containing_shape;
  END_ENTITY;
 
  ENTITY Component_termination_passage_template_interface_terminal
    SUBTYPE OF (Component_termination_passage_template_terminal);
  END_ENTITY;
 
  ENTITY Component_termination_passage_template_join_terminal
    SUBTYPE OF (Component_termination_passage_template_terminal);
      disallowed_inter_stratum_extent : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link;
  END_ENTITY;
 
  ENTITY Component_termination_passage_template_terminal
    ABSTRACT SUPERTYPE OF (ONEOF (Component_termination_passage_template_interface_terminal,
      Component_termination_passage_template_join_terminal))
    SUBTYPE OF (General_part_feature);
      SELF\Shape_element.containing_shape : Component_termination_passage_template;
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, containing_shape;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Default_attachment_size_based_land_physical_template
    SUBTYPE OF (Land_physical_template, Definitional_shape_element);
    DERIVE
      SELF\Shape_element.containing_shape : Default_attachment_size_based_land_physical_template := SELF;
      SELF\Shape_element.element_name : STRING := '';      
    INVERSE
      interface_access_mechanisms : SET[1:?] OF Land_template_interface_terminal FOR containing_shape;
    WHERE
      WR1 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 0) OR 
                 ('minimum attachment region size' IN 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area));
      WR2 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 1) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 1);
      WR3 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 2) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 2);
      WR4 : NOT (SIZEOF(interface_access_mechanisms[1].connection_area) > 3) OR 
                 (SIZEOF(['maximum attachment region size','heel area', 'toe area'] * 
                  list_get_zone_name(interface_access_mechanisms[1].connection_area)) = 3);
      WR5 : NOT EXISTS(SELF\Definitional_shape_element.connection_area);
      WR6 : SIZEOF(interface_access_mechanisms) = 1;   
      WR7 : SELF\Shape_element.id = SELF\Item_shape.id;      
  END_ENTITY;
 
  ENTITY Default_passage_based_land_physical_template
    ABSTRACT SUPERTYPE OF (ONEOF (Default_plated_passage_based_land_physical_template,
    Default_unsupported_passage_based_land_physical_template))
    SUBTYPE OF (Land_physical_template);
    of_passage_technology         : Passage_technology;
  END_ENTITY;
 
  ENTITY Default_plated_passage_based_land_physical_template
	SUBTYPE OF (Default_passage_based_land_physical_template);
	WHERE
	  WR1 : SELF\Default_passage_based_land_physical_template.of_passage_technology.plated_passage = TRUE;
	  WR2 : NOT('FABRICATION_TECHNOLOGY_ARM.DEFAULT_VIA_DEFINITION' IN TYPEOF(SELF\Default_passage_based_land_physical_template.of_passage_technology)) OR
	        (SIZEOF(QUERY(ltjt <* SELF\Land_physical_template.access_mechanisms | NOT('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) = 0);	  
  END_ENTITY;
 
  ENTITY Default_unsupported_passage_based_land_physical_template
    SUBTYPE OF (Default_passage_based_land_physical_template);
      SELF\Default_passage_based_land_physical_template.of_passage_technology : Default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY Default_trace_template
    SUBTYPE OF (Trace_template);
      of_stratum_technology : Stratum_technology;
  END_ENTITY;

  ENTITY Electrical_isolation_removal_template
    SUBTYPE OF (Material_removal_feature_template);
    DERIVE
      electrical_isolation_spacing_requirement : SET[0:?] OF Requirement_view_definition := 
        get_rvd(SELF, 'electrical requirement');
    WHERE
      WR1: SIZEOF(QUERY(eisr <* electrical_isolation_spacing_requirement |
         NOT('INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_ARM.ELECTRICAL_ISOLATION_REQUIREMENT'
        IN TYPEOF(eisr)) )) =0;
      WR2: SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(s)))) = 0;
      WR3: SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(s)))) = 0;        
  END_ENTITY;

  ENTITY Fill_area_template
   SUBTYPE OF (Parametric_template);
    outer_boundary_style : Closed_curve_style_parameters;
    inner_boundary_style : Closed_curve_style_parameters;
  END_ENTITY;

  ENTITY Hatch_area_template
    SUBTYPE OF (Fill_area_template);
      fill_boundary_style : Curve_style_parameters_with_ends;
      hatch_pattern       : SET [1:4] OF Hatch_line_element; 
      min_feature         : OPTIONAL Length_data_element;
  END_ENTITY;

  ENTITY Hatch_line_element 
    SUBTYPE OF (Detailed_geometric_model_element);
      hatch_line : Line;
      offset     : Length_data_element;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_segment_template
    SUBTYPE OF (Inter_stratum_feature_template);
      composed_edge  : Inter_stratum_feature_edge_template;
      start_vertex   : Edge_segment_vertex;
      end_vertex     : Edge_segment_vertex;
      reference_path : Trimmed_curve;
    WHERE
      WR1 : EXISTS(reference_path.start_point) AND 
            EXISTS(reference_path.end_point);
      WR2 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_template
    SUBTYPE OF (Inter_stratum_feature_template);
    INVERSE
      edges : SET[2:?] OF inter_stratum_feature_edge_segment_template FOR composed_edge;
  END_ENTITY;

  ENTITY Inter_stratum_feature_template
    SUPERTYPE OF (ONEOF (Component_termination_passage_template,
		 Via_template,
		 Unsupported_passage_template,
		 Inter_stratum_feature_edge_segment_template,
		 Inter_stratum_feature_edge_template))
    SUBTYPE OF (Geometric_template);
      of_passage_technology : Passage_technology;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Land_physical_template
    SUPERTYPE OF (ONEOF (Default_passage_based_land_physical_template,
		 Default_attachment_size_based_land_physical_template))
    SUBTYPE OF (Stratum_feature_template);
    INVERSE
      access_mechanisms                                   : SET[1:?] OF land_template_terminal FOR containing_shape;
      pre_defined_classification_code                     : SET[0:1] OF External_source_identification FOR item;      
    WHERE
      WR1 : SIZEOF(QUERY(ltjt <* access_mechanisms | ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) > 0;
      WR2 : SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
             NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_AREA_CSG_2D_MODEL' IN TYPEOF(s)))) = 0;
      WR3 : SIZEOF(SELF\Geometric_template.shapes) > 0;
  END_ENTITY;
 
  ENTITY Land_template_interface_terminal
    SUBTYPE OF (Land_template_terminal);
      SELF\Shape_element.containing_shape : Default_attachment_size_based_land_physical_template;
  END_ENTITY;
 
  ENTITY Land_template_join_terminal
    SUBTYPE OF (Land_template_terminal);
  END_ENTITY;
 
  ENTITY Land_template_terminal
    ABSTRACT SUPERTYPE OF (ONEOF (Land_template_join_terminal, Land_template_interface_terminal))
    SUBTYPE OF (General_part_feature);
      SELF\Shape_element.containing_shape : Land_physical_template;
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
      terminal_category                  : OPTIONAL land_template_terminal_class;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, containing_shape;
    WHERE
      WR1 : NOT (EXISTS(SELF\Definitional_shape_element.connection_area)) OR NOT EXISTS(terminal_category);
      WR2 : NOT EXISTS(SELF\Shape_element.description);
      WR3 : SIZEOF(QUERY(ca <* connection_area |
            NOT(containing_shape = ca\Shape_element.containing_shape)
            )) = 0;
  END_ENTITY;

  ENTITY Material_removal_feature_template
    SUBTYPE OF (Single_stratum_continuous_template);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
      WR2 : SIZEOF(SELF\Geometric_template.shapes) > 0;
  END_ENTITY;
  
  ENTITY Parametric_template
    ABSTRACT SUPERTYPE OF (ONEOF (Fill_area_template,
      Teardrop_template,
      Trace_template))
    SUBTYPE OF (Template_definition);
  END_ENTITY;

  ENTITY Part_string_template
    SUBTYPE OF (Template_definition);
      string_alignment : text_alignment;
  END_ENTITY;

  ENTITY Part_text_template
    SUBTYPE OF (Template_definition);
      of_character                            : Character_glyph_symbol;
    WHERE
     WR1: SIZEOF(['CONSTRUCTIVE_SOLID_GEOMETRY_3D_ARM.CSG_MODEL', 'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.SOLID_CHARACTER_GLYPH_2D_SYMBOL'] *
           TYPEOF(of_character)) = 1;  
  END_ENTITY;

 ENTITY Planar_path_shape_model_with_parameters
    SUBTYPE OF (Single_area_csg_2d_model);
    WHERE
      WR1: SIZEOF(QUERY(it <* SELF\Representation.items |
      ('EXTENDED_BASIC_GEOMETRY_ARM.AXIS_PLACEMENT_2D' IN TYPEOF(it))
                )) = 1;
      WR2: SIZEOF(QUERY(it <* SELF\Representation.items |   
      ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.PATH_AREA_WITH_PARAMETERS' IN TYPEOF(it))
                )) = 1;
      WR3: SIZEOF(SELF\Representation.items) = 2;                      
  END_ENTITY;

  ENTITY Planar_closed_path_shape_model_with_parameters
    SUBTYPE OF (Planar_path_shape_model_with_parameters);
    WHERE
      WR1: SIZEOF(QUERY(it <* SELF\Representation.items |   
      ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CLOSED_PATH_AREA_WITH_PARAMETERS' IN TYPEOF(it))
                )) = 1;
  END_ENTITY;

  ENTITY Plated_passage_template_shape_model
    SUBTYPE OF (Part_template_shape_model);
       SELF\Part_template_shape_model.shape_characterized_definition : SET [1:?] OF
         ptswp_ptsm_definition;
       data_qualification : ptswp_template_shape_model_context;
    DERIVE
       template : Geometric_template := shape_characterized_definition[1];  
    WHERE
      WR1 : SIZEOF(QUERY(scd <* shape_characterized_definition |  
              NOT(scd\Inter_stratum_feature_template.of_passage_technology\Passage_technology.plated_passage)
              )) = 0;
      WR2 : SIZEOF(QUERY(scd <* shape_characterized_definition |
              NOT(TYPEOF(scd) = TYPEOF(template))
              )) = 0;       
  END_ENTITY;

  ENTITY Single_stratum_continuous_template
    ABSTRACT SUPERTYPE OF (ONEOF (Stratum_feature_template,
                                Material_removal_feature_template))  
    SUBTYPE OF (Continuous_template, Single_stratum_template);
  END_ENTITY;
 
  ENTITY Single_stratum_template
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Template_definition);
  END_ENTITY;

  ENTITY Solid_character_glyph_2d_symbol
    SUBTYPE OF (Character_glyph_symbol, Csg_2d_model);
  END_ENTITY;
  
  ENTITY Snowball_template
    SUBTYPE OF (Teardrop_template);
      snowball_start_distance     : Length_data_element;
      snowball_end_distance       : OPTIONAL Length_data_element;
      snowball_initial_spacing    : OPTIONAL Length_data_element;
      snowball_end_spacing        : OPTIONAL Length_data_element;
      snowball_initial_radius     : Length_data_element;
      snowball_end_radius         : OPTIONAL Length_data_element;
      snowball_quantity_per_trace : INTEGER; -- positive_integer;
    WHERE
      WR1 : NOT (snowball_quantity_per_trace > 1) OR (EXISTS(snowball_initial_spacing) AND EXISTS(snowball_end_spacing) AND EXISTS(snowball_end_distance) AND EXISTS(snowball_end_radius));
      WR2 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR3 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Stratum_feature_template
    SUPERTYPE OF (Land_physical_template)
    SUBTYPE OF (Single_stratum_continuous_template);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Teardrop_by_angle_template
    SUBTYPE OF (Teardrop_template);
      teardrop_angle : Angle_data_element;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Teardrop_by_length_template
    SUBTYPE OF (Teardrop_template);
      teardrop_taper_start_distance : Length_data_element;
      teardrop_taper_end_distance   : Length_data_element;
   WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Teardrop_template
    SUPERTYPE OF (ONEOF (Snowball_template,
      Teardrop_by_angle_template,
      Teardrop_by_length_template))
    SUBTYPE OF (Parametric_template, Single_stratum_template);
    WHERE
      WR1 : (SIZEOF(['LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.SNOWBALL_TEMPLATE',
            'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.TEARDROP_BY_ANGLE_TEMPLATE',
            'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.TEARDROP_BY_LENGTH_TEMPLATE'] * TYPEOF(SELF)) = 1) XOR
            ('PRODUCT_VIEW_DEFINITION_REFERENCE_ARM.PRODUCT_VIEW_DEFINITION_REFERENCE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Tile_area_template
    SUBTYPE OF (Fill_area_template);
      fill_template        : Single_stratum_template;
      start_placement      : Axis_placement_2d;
      first_repeat_factor  : Vector;
      second_repeat_factor : Vector;
  END_ENTITY;

  ENTITY Trace_template
    SUPERTYPE OF (Default_trace_template)
    SUBTYPE OF (Parametric_template);
      trace_style : Curve_style_parameters;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Unsupported_passage_template
    SUPERTYPE OF (ONEOF (Counterbore_passage_template,
      Countersunk_passage_template,
      Blind_passage_template))
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY Via_template
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_via_definition;
    INVERSE
      access_mechanisms : SET[0:?] OF via_template_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY Via_template_terminal
    SUBTYPE OF (General_part_feature);
      SELF\Shape_element.containing_shape : Via_template;
      disallowed_inter_stratum_extent                                   : OPTIONAL SET [1:?] OF Stratum_technology_occurrence_link;
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
    UNIQUE
      UR1 : SELF\Shape_element.element_name, containing_shape;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  SUBTYPE_CONSTRAINT list_shape_feature_subtypes FOR General_part_feature; 
    (ONEOF (Via_template_terminal,
            Component_termination_passage_template_terminal,
            Land_template_terminal));
  END_SUBTYPE_CONSTRAINT;

  FUNCTION list_get_zone_name(input : SET OF Connection_zone_in_layout_template) : SET OF STRING;
    LOCAL
      s : SET OF STRING := [];
    END_LOCAL;
    REPEAT  i := 1 TO SIZEOF(input) BY 1;
      s := s + input[i]\Characterizable_object.name;
    END_REPEAT;
    RETURN(s);
  END_FUNCTION;
  
  RULE unique_land_physical_template FOR (Land_physical_template);
    LOCAL
      esi : BAG OF External_source_identification := [];
      iid : BAG OF String := [];
      itype : BAG OF String := [];
    END_LOCAL;
    REPEAT i := 1 to SIZEOF(Land_physical_template) by 1;
      esi  := esi + Land_physical_template[i].pre_defined_classification_code[1];
      iid := iid + Land_physical_template[i].pre_defined_classification_code[1]\External_source_identification.source_id;
      itype := itype + Land_physical_template[i].pre_defined_classification_code[1]\External_source_identification.source_type;
    END_REPEAT;  
    WHERE
     WR1 : (SIZEOF(esi) = SIZEOF(bag_to_set(esi))) AND
           (SIZEOF(iid) = SIZEOF(bag_to_set(iid))) AND
           (1 = SIZEOF(bag_to_set(itype)));
  END_RULE;

END_SCHEMA;
   
(*
   $Id: arm.exp,v 1.19 2014/10/04 17:08:27 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N7915 - ISO/TS 10303-1814 - Machining features - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7352
*)

SCHEMA Machining_features_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004
USE FROM Feature_and_connection_zone_arm;
USE FROM Measure_representation_arm;
USE FROM Specification_document_arm;
USE FROM Value_with_unit_arm;

TYPE angle_or_directed_taper = SELECT( Angle_taper, Directed_taper);
END_TYPE;

TYPE compound_feature_select = SELECT (
  Machining_feature,
  Transition_feature);
END_TYPE;

TYPE end_type_select = SELECT(Complete_circular_path_feature_component, General_path_feature_component);
END_TYPE;

TYPE hole_bottom_condition_select = SELECT(Blind_bottom_condition, Through_bottom_condition);
END_TYPE;

TYPE manufacturing_group_select = SELECT(Manufacturing_feature, Manufacturing_feature_group);
END_TYPE;

TYPE pocket_bottom_condition_select = SELECT (
  Pocket_bottom_condition,
  Through_pocket_bottom_condition);
END_TYPE;

TYPE profile_select = SELECT(Profile_floor, Through_profile_floor);
END_TYPE;

TYPE replicate_base_select = SELECT(Machining_feature, Replicate_feature);
END_TYPE;

TYPE taper_select = SELECT( Angle_taper, Diameter_taper, Directed_taper);
END_TYPE;

  TYPE thread_hand = ENUMERATION OF
    (left,
     right);
  END_TYPE;

  TYPE thread_side = ENUMERATION OF
    (internal,
     external);
  END_TYPE;

TYPE volume_select = SELECT(Protrusion, Boss);
END_TYPE;

ENTITY Angle_taper;
  angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Bevel_gear
  ABSTRACT SUPERTYPE OF (ONEOF (Helical_bevel_gear, Straight_bevel_gear))
  SUBTYPE OF (Defined_gear);
  tip_angle : Numerical_item_with_unit;
  root_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Blind_bottom_condition
  ABSTRACT SUPERTYPE OF (ONEOF(
    Conical_hole_bottom,
    Flat_hole_bottom,
    Flat_with_radius_hole_bottom,
    Flat_with_taper_hole_bottom,
    Spherical_hole_bottom));
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Boss
  ABSTRACT SUPERTYPE OF (ONEOF (
    Circular_boss,
    General_boss,
    Rectangular_boss))
  SUBTYPE OF (Multi_axis_feature);
  boss_height : Linear_path_feature_component;
  fillet_radius : OPTIONAL Numerical_item_with_unit;
  top_condition : Boss_top_condition;
END_ENTITY;

ENTITY Boss_top_condition
  ABSTRACT SUPERTYPE OF (ONEOF (General_top_condition, Planar_top_condition));
  top_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Catalogue_gear
  SUBTYPE OF (Gear);
  documentation : Specification_definition;
END_ENTITY;

ENTITY Catalogue_knurl
  SUBTYPE OF (Knurl);
  documentation : Specification_definition;
END_ENTITY;

ENTITY Catalogue_marking
  SUBTYPE OF (Marking_feature);
  documentation : Specification_definition;
END_ENTITY;

ENTITY Catalogue_thread
  SUBTYPE OF (Thread);
  documentation : Specification_definition;
  major_diameter : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Chamfer
  SUBTYPE OF (Transition_feature);
  chamfer_face : Face_shape_element;
  first_parameter : First_chamfer_offset;
  second_parameter : Second_chamfer_parameter;
END_ENTITY;

ENTITY Chamfer_angle
  SUBTYPE OF (Second_chamfer_parameter);
  angle_amount : Numerical_item_with_unit;
END_ENTITY;

ENTITY Circular_boss
  SUBTYPE OF (Boss);
  circular_profile : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
END_ENTITY;

ENTITY Circular_closed_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Circular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Circular_closed_profile;
END_ENTITY;

ENTITY Circular_cutout
  SUBTYPE OF (Cutout_feature);
  circular_boundary : Circular_closed_profile;
END_ENTITY;

ENTITY Circular_offset_pattern;
  index_number : INTEGER;
  angular_offset : Numerical_item_with_unit;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Circular_pattern FOR relocated_base_feature;
END_ENTITY;

ENTITY Circular_omit_pattern;
  omit_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Circular_pattern FOR missing_base_feature;
END_ENTITY;

ENTITY Circular_path_feature_component
  ABSTRACT SUPERTYPE OF (ONEOF (Complete_circular_path_feature_component, Partial_circular_path_feature_component))
  SUBTYPE OF (Path_feature_component);
  radius : length_measure;
END_ENTITY;

ENTITY Circular_pattern
  SUBTYPE OF (Replicate_feature);
  relocated_base_feature : SET[0:?] of Circular_offset_pattern;
  missing_base_feature : SET[0:?] of Circular_omit_pattern;
  base_feature_rotation : Numerical_item_with_unit;
  number_of_features : INTEGER;
  base_feature_diameter : OPTIONAL Numerical_item_with_unit;
  angular_spacing : Numerical_item_with_unit;
END_ENTITY;

ENTITY Closed_profile
  ABSTRACT SUPERTYPE OF ( ONEOF(
    Circular_closed_profile,
    General_closed_profile,
    Ngon_profile,
    Rectangular_closed_profile))
  SUBTYPE OF (Profile);
END_ENTITY;

ENTITY Closed_slot
  SUBTYPE OF (Slot);
  end_condition : Loop_slot_end_type;
  cource_of_travel : end_type_select;
END_ENTITY;

ENTITY Compound_feature
  SUBTYPE OF (Machining_feature);
  element : SET[2:?] OF Compound_feature_element;
END_ENTITY;

ENTITY Compound_feature_element;
  element : compound_feature_select;
END_ENTITY;

ENTITY Compound_feature_relationship;
  predecssor : Compound_feature_element;
  successor : Compound_feature_element;
END_ENTITY;

ENTITY Conical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  tip_angle : Numerical_item_with_unit;
  tip_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Constant_radius_fillet
  SUBTYPE OF (Fillet);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Constant_radius_edge_round
  SUBTYPE OF (Edge_round);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Complete_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
END_ENTITY;

ENTITY Countersunk_hole
  SUBTYPE OF (Hole);
  constant_diameter_hole : Round_hole;
  tapered_hole : Round_hole;
END_ENTITY;

ENTITY Counterbore_hole
  SUBTYPE OF (Hole);
  smaller_hole : Round_hole;
  larger_hole : Round_hole;
END_ENTITY;

ENTITY Cutout_feature
  ABSTRACT SUPERTYPE OF (ONEOF( Circular_cutout, General_cutout))
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Through_pocket_bottom_condition;
END_ENTITY;

ENTITY Defined_gear
  ABSTRACT SUPERTYPE OF (ONEOF (Bevel_gear, Helical_gear, Spur_gear))
  SUBTYPE OF (Gear);
END_ENTITY;

ENTITY Defined_marking
  SUBTYPE OF (Marking_feature);
  font_name : OPTIONAL text;
  special_instruction : OPTIONAL text;
  character_spacing : OPTIONAL Numerical_item_with_unit;
  character_height : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Defined_thread
  SUBTYPE OF (Thread);
  crest : OPTIONAL Numerical_item_with_unit;
  minor_diameter : OPTIONAL Numerical_item_with_unit;
  pitch_diameter : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Diagonal_knurl
  SUBTYPE OF (Turned_knurl);
  helix_hand : text;
  helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Diameter_taper;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Diamond_knurl
  SUBTYPE OF (Turned_knurl);
  helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Direction_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Directed_taper;
  direction : Direction_element;
  angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Edge_round
  SUBTYPE OF (Transition_feature);
  edge_round_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY;

ENTITY Face_shape_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Face_shape_element_relationship
  SUBTYPE OF (Shape_element_relationship);
  SELF\Shape_element_relationship.relating : Face_shape_element;
  SELF\Shape_element_relationship.related : Face_shape_element;
END_ENTITY;

ENTITY Fillet
  SUBTYPE OF (Transition_feature);
  fillet_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY;

ENTITY First_chamfer_offset;
  face_shape : Face_shape_element;
  offset_amount : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
END_ENTITY;

ENTITY Flat_slot_end_type
  SUBTYPE OF (Slot_end_type);
  first_radius : Numerical_item_with_unit;
  second_radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_with_radius_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  corner_radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_with_taper_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  taper_diameter : Numerical_item_with_unit;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Gear
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_gear, Defined_gear))
  SUBTYPE OF (Machining_feature);
  nominal_tooth_depth : Numerical_item_with_unit;
  reference_preassure_angle : Numerical_item_with_unit;
  profile_shift : Numerical_item_with_unit;
  number_of_teeth : Numerical_item_with_unit;
  face_width : Numerical_item_with_unit;
  tip_diameter : Numerical_item_with_unit;
  normal_attribute : Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  internal_or_external_gear : BOOLEAN;
  module_or_diametrical_pitch : BOOLEAN;
  root_fillet_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY General_boss
  SUBTYPE OF (Boss);
  enclosed_boundary : Closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;

ENTITY General_closed_profile
  SUBTYPE OF (Closed_profile);
  closed_profile_shape : Path_element;
END_ENTITY;

ENTITY General_cutout
  SUBTYPE OF (Cutout_feature);
  boundary : Profile;
END_ENTITY;

ENTITY General_open_profile
  SUBTYPE OF (Open_profile);
  enclosed_boundary : Path_element;
END_ENTITY;

ENTITY General_outside_profile
  SUBTYPE OF (Profile_feature);
  boundary : Profile;
END_ENTITY;

ENTITY General_pattern
  SUBTYPE OF (Replicate_feature);
  feature_placement : SET[1:?] OF Axis_placement;
END_ENTITY;

ENTITY General_path_feature_component
  SUBTYPE OF (Path_feature_component);
  sweep_path : Path_element;
END_ENTITY;

ENTITY General_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  boundary : Profile;
END_ENTITY;

ENTITY General_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor : Face_shape_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY General_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Face_shape_element;
END_ENTITY;

ENTITY General_removal_volume
  SUBTYPE OF (Multi_axis_feature);
  removal_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY;

ENTITY General_revolution
  SUBTYPE OF (Revolved_feature);
  outer_edge_shape : General_open_profile;
END_ENTITY;

ENTITY General_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  rib_top_face : SET[1:?] OF Face_shape_element;
END_ENTITY;

ENTITY General_shape_profile
  SUBTYPE OF (Shape_profile);
  profile_boundary : Profile;
END_ENTITY;

ENTITY General_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_face : Face_shape_element;
END_ENTITY;

ENTITY Groove
  SUBTYPE OF (Revolved_feature);
  sweep : Open_profile;
END_ENTITY;

ENTITY Helical_bevel_gear
  SUBTYPE OF (Bevel_gear);
  reference_helix_agle : Numerical_item_with_unit;
  left_or_right_hand_tooth : BOOLEAN;
END_ENTITY;

ENTITY Helical_gear
  SUBTYPE OF (Defined_gear);
  left_or_right_hand_tooth : BOOLEAN;
  reference_helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Hole
  ABSTRACT SUPERTYPE OF (ONEOF(
    Counterbore_hole,
    Countersunk_hole,
    Round_hole))
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;

ENTITY Knurl
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_knurl, Turned_knurl))
  SUBTYPE OF (Machining_feature);
  partial_profile : OPTIONAL Partial_area_definition;
  applied_shape : Definitional_shape_element;
END_ENTITY;

ENTITY Linear_path_feature_component
  SUBTYPE OF (Path_feature_component);
  distance : length_measure;
  direction : Direction_element;
END_ENTITY;

ENTITY Linear_profile
  SUBTYPE OF (Open_profile);
  profile_length : Numerical_item_with_unit;
END_ENTITY;

ENTITY Location_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Loop_slot_end_type;
END_ENTITY;

ENTITY Instanced_manufacturing_feature
  SUBTYPE OF (Instanced_feature);
  definition : Manufacturing_feature;
END_ENTITY;

ENTITY Machining_feature
  ABSTRACT SUPERTYPE OF (ONEOF (
    Compound_feature,
    Gear,
    Knurl,
    Marking_feature,
    Multi_axis_feature,
    Outer_round,
    Revolved_feature,
    Spherical_cap,
    Thread))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement_3d;
END_ENTITY;

ENTITY Path_feature_component
  ABSTRACT SUPERTYPE OF (ONEOF (Circular_path_feature_component, General_path_feature_component, Linear_path_feature_component))
  SUBTYPE OF (Shape_element);
  placement : Axis_placement;
END_ENTITY;

ENTITY Manufacturing_feature
  ABSTRACT SUPERTYPE OF (ONEOF (Machining_feature, Replicate_feature, Transition_feature))
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY;

ENTITY Manufacturing_feature_group;
  group_name : label;
  group_description : text;
  feature_groups : SET[1:?] OF manufacturing_group_select;
END_ENTITY;

ENTITY Marking_feature
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_marking, Defined_marking))
  SUBTYPE OF (Machining_feature);
  text : text;
  applied_to_shape : Shape_element;
END_ENTITY;

ENTITY Multi_axis_feature
  SUPERTYPE OF ( ONEOF(
    Boss,
    General_removal_volume,
    Hole,
    Planar_face,
    Pocket,
    Profile_feature,
    Protrusion,
    Rib_top,
    Rounded_end,
    Slot,
    Step))
  SUBTYPE OF (Machining_feature);
  maximum_feature_limit : OPTIONAL Planar_element;
END_ENTITY;

ENTITY Ngon_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
  number_of_sides : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
  circumscribed_or_across_flat : BOOLEAN;
END_ENTITY;

ENTITY Open_profile
  ABSTRACT SUPERTYPE OF (ONEOF (
    General_open_profile,
    Linear_profile,
    Partial_circular_profile,
    Rounded_u_profile,
    Square_u_profile,
    Tee_profile,
    Vee_profile))
  SUBTYPE OF (Profile);
  profile_limit : OPTIONAL Planar_element;
END_ENTITY;

ENTITY Open_slot
  SUBTYPE OF (Slot);
  course_of_travel : Path_feature_component;
  end_conditions : SET[2:2] OF Slot_end_type;
END_ENTITY;

ENTITY Open_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;

ENTITY Outer_diameter
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  reduced_size : taper_select;
END_ENTITY;

ENTITY Outer_diameter_to_shoulder
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  v_shape_boundary : Vee_profile;
END_ENTITY;

ENTITY Outer_round
  ABSTRACT SUPERTYPE OF (ONEOF (Outer_diameter, Outer_diameter_to_shoulder))
  SUBTYPE OF (Machining_feature);
END_ENTITY;

ENTITY Partial_area_definition;
  maximum_length : OPTIONAL Numerical_item_with_unit;
  effective_length : Numerical_item_with_unit;
  placement : Axis_placement;
END_ENTITY;

ENTITY Partial_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
  sweep_angle : length_measure;
END_ENTITY;

ENTITY Partial_circular_profile
  SUBTYPE OF (Open_profile);
  sweep_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Partial_circular_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Partial_circular_profile;
END_ENTITY;

ENTITY Path_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Planar_element
  SUBTYPE OF (Definitional_shape_element);
  normal : Direction_element;
  location : Location_element;
END_ENTITY;

ENTITY Planar_face
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Linear_profile;
  course_of_travel : Linear_path_feature_component;
  face_boundary : OPTIONAL Closed_profile;
  removal_direction : Direction_element;
  volume_not_removed : SET[0:?] OF volume_select;
  removal_depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Planar_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor_normal : Direction_element;
  floor_location : Location_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Planar_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Planar_element;
END_ENTITY;

ENTITY Planar_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  floor_face : Planar_element;
  boundary : Closed_profile;
END_ENTITY;

ENTITY Planar_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_normal : Direction_element;
  top_location : Location_element;
END_ENTITY;

ENTITY Pocket
  ABSTRACT SUPERTYPE OF (ONEOF(
    Cutout_feature,
    General_pocket,
    Recess,
    Rectangular_closed_pocket,
    Rectangular_open_pocket))
  SUBTYPE OF (Multi_axis_feature);
  base_radius : Numerical_item_with_unit;
  change_in_boundardy : OPTIONAL LIST[1:?] OF angle_or_directed_taper;
  bottom_condition : pocket_bottom_condition_select;
  pocket_depth : Linear_path_feature_component;
END_ENTITY;

ENTITY Pocket_bottom_condition
  ABSTRACT SUPERTYPE OF (ONEOF (General_pocket_bottom_condition, Planar_pocket_bottom_condition));
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Profile
  ABSTRACT SUPERTYPE OF ( ONEOF( Closed_profile, Open_profile));
END_ENTITY;

ENTITY Profile_feature
  ABSTRACT SUPERTYPE OF (ONEOF( General_outside_profile, Shape_profile))
  SUBTYPE OF (Multi_axis_feature);
  profile_swept_shape : Linear_path_feature_component;
END_ENTITY;

ENTITY Profile_floor
  ABSTRACT SUPERTYPE OF (ONEOF(General_profile_floor, Planar_profile_floor));
  floor_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Protrusion
  SUBTYPE OF (Multi_axis_feature);
  shape_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY;

ENTITY Radiused_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;

ENTITY Recess
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Pocket_bottom_condition;
  volume_not_removed : SET[0:?] OF volume_select;
  fillet_boundary : Profile;
END_ENTITY;

ENTITY Rectangular_boss
  SUBTYPE OF (Boss);
  rectangular_profile : Rectangular_closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;

ENTITY Rectangular_closed_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;

ENTITY Rectangular_closed_profile
  SUBTYPE OF (Closed_profile);
  profile_width : Numerical_item_with_unit;
  profile_length : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Rectangular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;

ENTITY Rectangular_offset_pattern;
  offset_direction : Direction_element;
  offset_distance : Numerical_item_with_unit;
  column_index : INTEGER;
  row_index : INTEGER;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Rectangular_pattern FOR relocated_base_feature;
END_ENTITY;

ENTITY Rectangular_omit_pattern;
  row_index : INTEGER;
  column_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Rectangular_pattern FOR missing_base_feature;
END_ENTITY;

ENTITY Rectangular_open_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  open_boundary : Square_u_profile;
END_ENTITY;

ENTITY Rectangular_open_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Square_u_profile;
END_ENTITY;

ENTITY Rectangular_pattern
  SUBTYPE OF (Replicate_feature);
  relocated_base_feature : SET[0:?] of Rectangular_offset_pattern;
  missing_base_feature : SET[0:?] of Rectangular_omit_pattern;
  column_layout_direction : Direction_element;
  row_spacing : Numerical_item_with_unit;
  rows : INTEGER;
  row_layout_direction : Direction_element;
  columns : INTEGER;
  column_spacing : Numerical_item_with_unit;
END_ENTITY;

ENTITY Replicate_base;
  base_feature : replicate_base_select;
END_ENTITY;

ENTITY Replicate_feature
  ABSTRACT SUPERTYPE OF (ONEOF (
    Circular_pattern,
    General_pattern,
    Rectangular_pattern))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement;
  replicate_feature_base : Replicate_base;
END_ENTITY;

ENTITY Revolved_feature
  ABSTRACT SUPERTYPE OF (ONEOF(
    General_revolution,
    Groove,
    Revolved_flat,
    Revolved_round))
  SUBTYPE OF (Machining_feature);
  radius : Numerical_item_with_unit;
  material_side : Direction_element;
END_ENTITY;

ENTITY Revolved_flat
  SUBTYPE OF (Revolved_feature);
  flat_edge_shape : Linear_profile;
END_ENTITY;

ENTITY Revolved_round
  SUBTYPE OF (Revolved_feature);
  rounded_edge_shape : Partial_circular_profile;
END_ENTITY;

ENTITY Rib_top
  SUBTYPE OF (Multi_axis_feature);
  removal_direction : Direction;
  floor_condition : Rib_top_floor;
END_ENTITY;

ENTITY Rib_top_floor
  ABSTRACT SUPERTYPE OF (ONEOF ( General_rib_top_floor, Planar_rib_top_floor));
END_ENTITY;

ENTITY Round_hole
  SUBTYPE OF (Hole);
  hole_depth : Linear_path_feature_component;
  diameter : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
  bottom_condition : hole_bottom_condition_select;
END_ENTITY;

ENTITY Rounded_end
  SUBTYPE OF (Multi_axis_feature);
  partial_circular_boundary : Partial_circular_profile;
  course_of_travel : Linear_path_feature_component;
END_ENTITY;

ENTITY Rounded_u_profile
  SUBTYPE OF (Open_profile);
  width : Numerical_item_with_unit;
  depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Second_chamfer_offset
  SUBTYPE OF (Second_chamfer_parameter);
  offset_amount : Numerical_item_with_unit;
END_ENTITY;

ENTITY Second_chamfer_parameter
  SUPERTYPE OF (ONEOF( Chamfer_angle, Second_chamfer_offset));
  second_face : Face_shape_element;
END_ENTITY;

ENTITY Shape_profile
  ABSTRACT SUPERTYPE OF (ONEOF(
    Circular_closed_shape_profile,
    General_shape_profile,
    Partial_circular_shape_profile,
    Rectangular_closed_shape_profile,
    Rectangular_open_shape_profile))
  SUBTYPE OF (Profile_feature);
  floor_condition : profile_select;
  removal_direction : Direction_element;
END_ENTITY;

ENTITY Slot
  ABSTRACT SUPERTYPE OF (ONEOF (Closed_slot, Open_slot))
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;

ENTITY Slot_end_type
  ABSTRACT SUPERTYPE OF (ONEOF (
    Flat_slot_end_type,
    Open_slot_end_type,
    Radiused_slot_end_type,
    Woodruff_slot_end_type));
  first_or_second : BOOLEAN;
END_ENTITY;

ENTITY Spherical_cap
  SUBTYPE OF (Machining_feature);
  internal_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Spherical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Spur_gear
  SUBTYPE OF (Defined_gear);
END_ENTITY;

ENTITY Square_u_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_radius : OPTIONAL Numerical_item_with_unit;
  second_radius : OPTIONAL Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  width : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Step
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Vee_profile;
  course_of_travel : Linear_path_feature_component;
  volume_not_removed : SET[0:?] OF Volume_select;
END_ENTITY;

ENTITY Straight_bevel_gear
  SUBTYPE OF (Bevel_gear);
END_ENTITY;

ENTITY Straight_knurl
  SUBTYPE OF (Turned_knurl);
END_ENTITY;

ENTITY Tee_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_offset : Numerical_item_with_unit;
  second_offset : Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  radius : OPTIONAL Numerical_item_with_unit;
  width : Numerical_item_with_unit;
  cross_bar_width : Numerical_item_with_unit;
  cross_bar_depth : Numerical_item_with_unit;
END_ENTITY;

ENTITY Thread
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_thread, Defined_thread)) 
  SUBTYPE OF (Machining_feature);
  partial_profile : Partial_area_definition;
  runout : OPTIONAL Thread_runout;
  fit_class : text;
  form : text;
  number_of_threads : OPTIONAL Numerical_item_with_unit;
  hand : thread_hand;
  side : thread_side;
  qualifier : text;
  nominal_size : OPTIONAL Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  fit_class_2 : OPTIONAL text;
END_ENTITY;

ENTITY Thread_runout;
  length_of_runout : Numerical_item_with_unit;
  pitch_or_dimension : BOOLEAN;
  included_or_extra : BOOLEAN;
END_ENTITY;

ENTITY Through_bottom_condition;
END_ENTITY;

ENTITY Through_pocket_bottom_condition;
END_ENTITY;

ENTITY Through_profile_floor;
END_ENTITY;

ENTITY Transition_feature
  SUPERTYPE OF ( ONEOF(
    Chamfer,
    Edge_round,
    Fillet))
  SUBTYPE OF (Manufacturing_feature);
END_ENTITY;

ENTITY Turned_knurl
  ABSTRACT SUPERTYPE OF (ONEOF (Diagonal_knurl, Diamond_knurl, Straight_knurl))
  SUBTYPE OF (Knurl);
  nominal_diameter : Numerical_item_with_unit;
  diametrical_pitch : Numerical_item_with_unit;
  root_fillet : OPTIONAL Numerical_item_with_unit;
  number_of_teeth : OPTIONAL Numerical_item_with_unit;
  tooth_depth : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Vee_profile
  SUBTYPE OF (Open_profile);
  profile_radius : OPTIONAL Numerical_item_with_unit;
  profile_angle : Numerical_item_with_unit;
  tilt_angle : Numerical_item_with_unit;
  first_length : OPTIONAL Numerical_item_with_unit;
  second_length : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Woodruff_slot_end_type
  SUBTYPE OF (Slot_end_type);
  radius : Numerical_item_with_unit;
END_ENTITY;

SUBTYPE_CONSTRAINT mf_shape_element_subtypes FOR Definitional_shape_element;
  ONEOF (Path_element, Planar_element, Direction_element, Location_element, Face_shape_element);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.22 2012/10/11 05:49:03 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8032 - ISO/TS 10303-1702 Manifold subsurface - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5416
*)

SCHEMA Manifold_subsurface_arm;

USE FROM Manifold_surface_arm;	-- ISO/TS 10303-1509

  TYPE manifold_subsurface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Connected_face_set);
  END_TYPE;

  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    SELF\Representation.items : SET [1:?] OF
        manifold_subsurface_shape_representation_item;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;

END_SCHEMA;
(*
	$Id: arm.exp,v 1.13 2012/10/11 05:49:05 liutkuviene Exp $
	ISO TC184/SC4/WG12 N7837 - ISO/TS 10303-1509 Manifold surface - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7196
*)


SCHEMA Manifold_surface_arm;

USE FROM Topologically_bounded_surface_arm; --ISO/TS 10303-1511:2004

  TYPE manifold_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Shell_based_surface_model);
  END_TYPE;
  
  
  
  ENTITY Manifold_surface_shape_representation
    SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        manifold_surface_shape_representation_item;
  END_ENTITY;

  
  ENTITY Open_shell
     SUBTYPE OF (Connected_face_set);
  END_ENTITY;
  
  
  ENTITY Shell_based_surface_model
    SUBTYPE OF (Detailed_geometric_model_element);
     boundary : SET[1: ?] OF Connected_face_set;
  END_ENTITY;
  
  

END_SCHEMA;
(*
 $Id: arm.exp,v 1.11 2004/10/28 19:08:56 darla Exp $
 ISO TC184/SC4/WG12 N2968 - ISO/TS 10303-1118 Measure representation - EXPRESS ARM
*) 


SCHEMA Measure_representation_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Measure_item
  ABSTRACT SUPERTYPE 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))>0;
END_ENTITY;

ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS')| 'MEASURE_REPRESENTATION_ARM.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;

ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;

ENTITY Property_value_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;

END_SCHEMA;  -- Measure_representation_arm
(*
   $Id: arm.exp,v 1.11 2012/10/11 05:49:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7921 - ISO/CD-TS - 10303-1816 Model based 3d geometrical dimensioning and tolerancing representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7358
*)

SCHEMA Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm;

USE FROM Geometric_tolerance_arm; -- ISO/TS 10303-1051
USE FROM Part_shape_arm;
USE FROM Product_and_manufacturing_information_with_nominal_3d_models_arm;

TYPE nominal_3d_integral_feature_geometry = SELECT (
  Advanced_face,
  Edge_curve,
  Vertex_point,
  Connected_face_set,
  Edge_loop);
END_TYPE;

TYPE nominal_3d_derived_feature_geometry = SELECT (
  Curve,
  Point,
  Surface);
END_TYPE;

TYPE mb3gdtsr_geometric_tolerance_target = SELECT BASED_ON geometric_tolerance_target WITH (
  Nominal_3d_feature);
END_TYPE;

TYPE mb3gdtsr_dimension_target = SELECT BASED_ON dimension_target WITH (
  Nominal_3d_feature, Datum_reference_compartment);
END_TYPE;

TYPE mb3gdtsr_edge_of_undefined_shape_size_element = SELECT
  BASED_ON edge_of_undefined_shape_size_element WITH (
  Nominal_3D_edge);
END_TYPE;

ENTITY Gdt_representation_shape
  SUBTYPE OF (Nominal_3d_model_shape, Part_shape);
WHERE
  WR1: 'PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.GDT_REPRESENTATION_VIEW_CONTEXT' IN TYPEOF(SELF\Item_shape.described_element\Product_view_definition.additional_contexts);
END_ENTITY;

ENTITY Nominal_3d_edge
  SUBTYPE OF (Nominal_3d_integral_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : Edge_curve := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: 'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE' IN
     TYPEOF(SELF\Associated_shape_element.associated_item);
END_ENTITY;

ENTITY Nominal_3d_feature
  ABSTRACT SUPERTYPE OF (ONEOF (Nominal_3d_integral_feature, Nominal_3d_derived_feature))
  SUBTYPE OF (Associated_shape_element, Part_shape_element);
  SELF\Shape_element.containing_shape : Gdt_representation_shape;
END_ENTITY;

ENTITY Nominal_3d_integral_feature
  SUBTYPE OF (General_part_feature, Nominal_3d_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_integral_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;

ENTITY Nominal_3d_derived_feature
  SUBTYPE OF (Nominal_3d_feature, Derived_shape_element);
  SELF\Derived_shape_element.derived_from: SET [1:?] OF Nominal_3d_feature;
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_derived_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.38 2012/11/09 21:40:59 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8271 - ISO/TS 10303-1703 Model parameter - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7083
*)

SCHEMA Model_parameter_arm;
USE FROM Activity_method_assignment_arm;	-- ISO/TS 10303-1249
USE FROM Characteristic_arm;	-- ISO/TS 10303-1654
USE FROM Classification_with_attributes_arm;	-- ISO/TS 10303-1111
USE FROM Independent_property_representation_arm;	-- ISO/TS 10303-1038
USE FROM Group_arm;	-- ISO/TS 10303-1113

REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

  TYPE mp_activity_method_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item WITH 
    (Test_method_based_parameter_assignment);
  END_TYPE; 

  TYPE mp_groupable_item = SELECT BASED_ON groupable_item WITH 
    (Group_relationship);
  END_TYPE; 

  TYPE mp_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
    (Model_parameter);
  END_TYPE; 

  TYPE parameter_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Model_parameter);
  END_TYPE;

  ENTITY Category_model_parameter
    SUBTYPE OF (Model_parameter);
    INVERSE 
      associated_attribute : SET[1:1] OF Classification_attribute FOR attribute_definition;
  END_ENTITY;

  ENTITY Independent_property_with_unit 
    SUBTYPE OF (Independent_property);
      unit_of_measure: SET [1:?] OF Unit;
  END_ENTITY;

  ENTITY Model_parameter
    SUBTYPE OF (Independent_property);
      valid_range        : OPTIONAL SET[1:?] OF Value_range;
      default_value      : OPTIONAL scalar_or_coordinated_characteristics;
	DERIVE
      reference_document: SET[0:?] OF Document_definition :=
        get_document_definition(SELF, 'reference document', 
        'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION');
	WHERE
      WR1 : EXISTS (reference_document) AND (SIZEOF(reference_document) = 1);
  END_ENTITY;

  ENTITY Model_parameter_with_unit 
    SUBTYPE OF (Independent_property_with_unit,Model_parameter);
     WHERE
      WR1: NOT('MODEL_PARAMETER_ARM.SCHEMA_BASED_MODEL_PARAMETER' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Parameter_assignment
    SUBTYPE OF (Property_definition_representation);
      SELF\Property_definition_representation.definition: parameter_assignment_select;
  END_ENTITY;

  ENTITY Parameter_assignment_override;
    overridden_parameter_assignment : Parameter_assignment;
    overriding_parameter_assignment : Parameter_assignment;
  END_ENTITY;

  ENTITY Schema_based_model_parameter
    SUBTYPE OF (Model_parameter);
      entity_name    : Independent_property;
      attribute_name : OPTIONAL Independent_property;
      schema_identifier : Independent_property;
    UNIQUE
      UR1 : entity_name, attribute_name, schema_identifier;
  END_ENTITY;

  ENTITY Product_specific_parameter_value_assignment;
      of_product         : Product;
      assigned_parameter : Parameter_assignment;
    DERIVE
      the_model_parameter : model_parameter := assigned_parameter\Property_definition_representation.definition;
    UNIQUE
      UR1 : the_model_parameter, of_product;
  END_ENTITY;

  ENTITY Test_method_based_parameter_assignment
    SUBTYPE OF (Parameter_assignment);
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,'ACTIVITY_METHOD_ASSIGNMENT_ARM.APPLIED_ACTIVITY_METHOD_ASSIGNMENT.ITEMS')) = 1;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.4 2004/11/19 21:37:37 robbod Exp $
 ISO TC184/SC4/WG12 N3085 - ISO/TS 10303-1340 Name assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2282
*) 


SCHEMA Name_assignment_arm;


TYPE assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;

END_SCHEMA;  -- Name_assignment_arm


(*
   $Id: arm.exp,v 1.51 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7741 - ISO/TS 10303-1704 Network functional design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6450
*)

SCHEMA Network_functional_design_view_arm;

	USE FROM Assembly_structure_arm;	-- ISO/TS 10303-xxxx
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233

	SUBTYPE_CONSTRAINT functional_unit_definition_subtypes FOR Functional_unit_definition;     
		(ONEOF (Functional_unit_network_definition,
		Functional_unit_usage_view));
	END_SUBTYPE_CONSTRAINT; 

  TYPE bus_structural_definition_or_node = SELECT
    (Functional_unit_network_node_definition,
     Bus_structural_definition);
  END_TYPE;

TYPE nfdv_pa_or_parameter_assignment_override = SELECT
  (Parameter_assignment,
   Parameter_assignment_override);
END_TYPE;

TYPE nfdw_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Functional_unit);
END_TYPE; 

  ENTITY Bus_element_link;
      precedent_element  : bus_structural_definition_or_node;
      subsequent_element : bus_structural_definition_or_node;
    INVERSE
     composed_bus : Bus_structural_definition FOR composition;
    UNIQUE
      UR1 : precedent_element, subsequent_element;
    WHERE
      WR1 : precedent_element <> subsequent_element;
  END_ENTITY;

  ENTITY Bus_structural_definition;
      bus_name    : STRING; 
      composition : SET[1:?] OF Bus_element_link;
    INVERSE
      external_bus_access : SET[0:1] OF Functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
    UNIQUE
      UR1 : bus_name;
    WHERE
      WR1 : consistent_bus_structural_definition(composition);
  END_ENTITY;

  ENTITY Functional_unit
  	SUBTYPE OF (Product_view_definition);
	composed_network    : Functional_unit_network_definition;    
    definition          : Functional_unit_definition;
    SELF\Product_view_definition.id RENAMED reference_designation : STRING; 
    functional_property : OPTIONAL SET[1:?] OF nfdv_pa_or_parameter_assignment_override;
  DERIVE  
	SELF\Product_view_definition.defined_version : Functional_version := definition\Functional_unit_definition.defined_version;
  INVERSE
    access_mechanisms  : SET[1:?] OF functional_unit_terminal FOR accessed_functional_unit;
  UNIQUE
    UR1 : reference_designation, composed_network;
  END_ENTITY;

  ENTITY Functional_unit_network_definition
    SUBTYPE OF (Functional_unit_definition);
      usage_view : Functional_unit_usage_view;
  END_ENTITY;

  ENTITY Functional_unit_network_node_definition
    SUBTYPE OF (Product_view_definition);
      associated_functional_unit_definition                                                              : Functional_unit_network_definition;
      SELF\Product_view_definition.additional_characterization RENAMED functional_unit_network_node_name : STRING; 
    DERIVE
      SELF\Product_view_definition.defined_version : Functional_version := associated_functional_unit_definition.defined_version;
      valid_conservative_node : LOGICAL := 
      (( SIZEOF ( USEDIN ( SELF , 'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.PRECEDENT_ELEMENT' )) +
         SIZEOF ( USEDIN ( SELF , 'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT' )) +
         SIZEOF ( USEDIN ( SELF , 'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE')) +
         SIZEOF ( external_node_access ) ) > 1 );
    INVERSE
      external_node_access : SET[0:1] OF functional_unit_network_terminal_definition_node_assignment FOR composed_node;
    UNIQUE
      UR1 : functional_unit_network_node_name,
 associated_functional_unit_definition;
    WHERE
      WR1 : EXISTS(valid_conservative_node);
  END_ENTITY;

  ENTITY Functional_unit_network_terminal_definition_bus_assignment;
      connected_bus      : Bus_structural_definition;
      connected_terminal : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : connected_bus, connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_network_terminal_definition_node_assignment;
      composed_node      : Functional_unit_network_node_definition;
      connected_terminal : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : composed_node, connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal;
      accessed_functional_unit : Functional_unit;
      definition               : Functional_unit_usage_view_terminal_definition;
    INVERSE
      bus_assignment  : SET[0:1] OF functional_unit_terminal_bus_assignment FOR connected_terminal;
      node_assignment : SET[0:1] OF functional_unit_terminal_node_assignment FOR connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal_bus_assignment;
      connected_bus      : Bus_structural_definition;
      connected_terminal : Functional_unit_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal_node_assignment;
      composed_node      : Functional_unit_network_node_definition;
      connected_terminal : Functional_unit_terminal;
  END_ENTITY;

  FUNCTION consistent_bus_structural_definition(
    input : SET OF Bus_element_link
  ) : BOOLEAN;

    LOCAL
      vertex        : SET OF bus_structural_definition_or_node := [];
      edge          : INTEGER := SIZEOF(input);
      vc            : INTEGER := 0;
      vertex_degree : INTEGER := 0;
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input) BY 1;
      vertex := vertex + input[i].precedent_element;
      vertex := vertex + input[i].subsequent_element;
    END_REPEAT;
    vc := SIZEOF(vertex);
    IF (vc <> (edge + 1)) THEN
      RETURN(FALSE);
    END_IF;
    REPEAT i := 1 TO vc BY 1;
      vertex_degree := 0;
      REPEAT j := 1 TO SIZEOF(input) BY 1;
        IF input[j].precedent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
        IF input[j].subsequent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
      END_REPEAT;
      IF (vertex_degree > 2) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);
  END_FUNCTION;


END_SCHEMA;
(*
   $Id: arm.exp,v 1.75 2012/10/11 05:49:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8179 - ISO/TS 10303-1706 Non feature shape element - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7574
*)

SCHEMA Non_feature_shape_element_arm; 

	USE FROM Physical_unit_shape_with_parameters_arm;	-- ISO/TS 10303-1730

	TYPE nfse_usage_concept = SELECT BASED_ON usage_concept WITH 
		(Non_feature_shape_element);
	END_TYPE;

    TYPE nfse_feature_or_non_feature_usage = SELECT BASED_ON feature_or_non_feature_usage WITH 
		(Usage_view_level_non_feature_shape_model);
	END_TYPE;
	
  TYPE view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT
        (Physical_unit_shape_model);
  END_TYPE;
  
ENTITY Edge_segment_vertex
   SUBTYPE OF (Definitional_shape_element);
 END_ENTITY;  
  
  ENTITY Interface_plane
    SUBTYPE OF (Non_feature_shape_element);
   WHERE
    WR1 : (SELF\Shape_element.element_name = 'interface plane');
  END_ENTITY;

  ENTITY Non_feature_shape_model
    SUBTYPE OF (Geometric_model);
      associated_element : Non_feature_shape_element;
      model_shape        : OPTIONAL Geometric_model;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(model_shape);
      WR2 : NOT EXISTS(SELF\Representation.id);
      WR3 : SIZEOF(QUERY( x <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')
                           | 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF(x)))=0;
  END_ENTITY;

ENTITY Non_feature_shape_element 	 
  SUBTYPE OF (Non_definitional_shape_element); 	 
  SELF\Shape_element.containing_shape RENAMED scope : Item_shape; 	 
INVERSE 	 
  element_shape            : SET[0:?] OF non_feature_shape_model FOR associated_element; 	 
  associated_usage_concept : SET[0:?] OF usage_concept_usage_relationship FOR associated_usage; 	 
UNIQUE 	 
  UR1 : SELF\Shape_element.element_name, scope; 	 
WHERE 	 
  WR1 : NOT ((SIZEOF(associated_usage_concept) > 0) OR (SIZEOF(element_shape) > 0)); 	 
  WR2 : 'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE' IN TYPEOF(scope); 	 
END_ENTITY;
	   
  ENTITY Non_feature_shape_element_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Non_feature_shape_element;    
      SELF\Shape_element_relationship.related : Non_feature_shape_element;
    UNIQUE
      UR1 : SELF\Shape_element_relationship.related, SELF\Shape_element_relationship.relating;
  END_ENTITY;

   ENTITY Reference_graphic_registration_mark
    SUBTYPE OF (Non_feature_shape_element);
  END_ENTITY;


  ENTITY Seating_plane
    SUBTYPE OF (Non_feature_shape_element);
   WHERE
    WR1 : (SELF\Shape_element.element_name = 'seating plane');
  END_ENTITY;

  ENTITY Usage_view_level_non_feature_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Non_feature_shape_model);
      SELF\Non_feature_shape_model.associated_element : View_level_non_feature_shape_element;    
      SELF\Non_feature_shape_model.model_shape        : view_shape_select;
    WHERE
      WR1 : SELF\Geometric_model.context_of_items = SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items;
  END_ENTITY;

  ENTITY View_level_non_feature_shape_element
    SUBTYPE OF (Non_feature_shape_element);
     WHERE
      WR1: NOT(SIZEOF(SELF\Non_feature_shape_element.element_shape) > 0) OR
      valid_es('NON_FEATURE_SHAPE_ELEMENT_ARM.USAGE_VIEW_LEVEL_NON_FEATURE_SHAPE_MODEL',
      (SELF\Non_feature_shape_element.element_shape));
      WR2 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;
  
  FUNCTION valid_es(input1 : STRING;
                  input2 : SET OF NON_FEATURE_SHAPE_MODEL) : BOOLEAN;
   REPEAT i := 1 to HIINDEX(input2);
    IF NOT (input1 IN TYPEOF(input2[i])) THEN RETURN(FALSE);
    END_IF;
   END_REPEAT;
    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.89 2014/02/06 18:28:18 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8430 - ISO/TS 10303-1707 Package - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N8182
*)

SCHEMA Package_arm;

	USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
	USE FROM Non_feature_shape_element_arm;


	USE FROM Part_feature_function_arm;	-- ISO/TS 10303-1712

	REFERENCE FROM Support_resource_arm(bag_to_set);

  	TYPE mounting_technology_type = EXTENSIBLE ENUMERATION OF
    	(surface_mount,
     	through_hole);
  	END_TYPE;

 	TYPE pa_external_identification_item = SELECT BASED_ON external_identification_item WITH
		(Package_terminal_template_definition,
		 Package);
	END_TYPE;

 	TYPE pa_material_item_select = SELECT BASED_ON material_item_select  WITH
   		(Package_body,
    	Package_terminal_template_definition);
	END_TYPE;

	SUBTYPE_CONSTRAINT part_feature_subtypes FOR Part_feature;
		(ONEOF (Package_body,
		Package_body_surface,
		Package_orientation_feature,
		Polarity_indication_feature,
		Visual_orientation_feature));
	END_SUBTYPE_CONSTRAINT;

  TYPE predefined_lead_form = EXTENSIBLE ENUMERATION OF
    (gull_wing,
     j_lead,
     reversed_j_lead,
     integral_terminal,
     undefined,
     ball,
     straight);
  END_TYPE;

  TYPE seating_plane_intersection_type = ENUMERATION OF
    (surface_intersection,
     through_intersection,
     does_not_intersect);
  END_TYPE;

 	TYPE interface_plane_or_seating_plane = SELECT
		(Seating_plane,
		 Interface_plane);
	END_TYPE;

  ENTITY Connection_zone_in_part_feature_template_definition
  	SUBTYPE OF (Connection_zone);
  	DERIVE
  		associated_definition : Part_feature_template_definition := containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY;

  ENTITY Connection_zone_package_interface_plane_relationship;
      interface_plane          : interface_plane_or_seating_plane;
      derived_zone             : Connection_zone_in_part_feature_template_definition;
      derived_zone_shape_class : STRING;
    INVERSE
      associated_package_terminal  : SET[0:1] OF package_terminal_template_definition FOR seating_plane_zone;
    WHERE
      WR1 : derived_zone_shape_class IN ['area','edge'];
  END_ENTITY;

  ENTITY Visual_orientation_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Package_terminal;
  END_ENTITY;

  ENTITY Guided_wave_terminal
    SUBTYPE OF (Package_terminal);
  END_ENTITY;

  ENTITY Package
    SUBTYPE OF (Part_usage_view);
      mounting_technology                        : OPTIONAL mounting_technology_type;
      maximum_seating_plane_installation_offset  : OPTIONAL Length_data_element;
      nominal_mounting_lead_pitch                : OPTIONAL Length_data_element;
      nominal_mounting_lead_span                 : OPTIONAL Length_data_element;
      maximum_body_height_above_seating_plane    : OPTIONAL Length_data_element;
      maximum_body_height_below_seating_plane    : OPTIONAL Length_data_element;
      body_clearance_above_seating_plane         : OPTIONAL Length_tolerance_characteristic;
      body_clearance_below_seating_plane         : OPTIONAL Length_tolerance_characteristic;
      maximum_lead_length_below_seating_plane    : OPTIONAL Length_data_element;
      least_lead_length_below_seating_plane      : OPTIONAL Length_data_element;
    DERIVE
      maximum_package_total_vertical_extent : length_data_element := max_data_element(
      											add_data_element(maximum_body_height_above_seating_plane,maximum_body_height_below_seating_plane),
											    add_data_element(maximum_body_height_above_seating_plane,maximum_lead_length_below_seating_plane));
      cutout_required                       : LOGICAL := (maximum_body_height_below_seating_plane\Value_with_unit.value_component > 0.0);
      maximum_installed_height              : length_data_element :=
      											add_data_element(maximum_body_height_above_seating_plane,maximum_seating_plane_installation_offset);
      one_orientation_feature               : LOGICAL := (SIZEOF(orientation_feature) = 1);
      two_orientation_features              : LOGICAL := (SIZEOF(orientation_feature) = 2);
      three_orientation_features            : LOGICAL := (SIZEOF(orientation_feature) = 3);
      package_seating_plane                 : SET OF Seating_plane := bag_to_set(QUERY(nfse <* USEDIN(SELF, 'NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_ELEMENT.SCOPE')|
                                                'NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN TYPEOF(nfse)));
      interface_plane                       : SET OF Interface_plane := bag_to_set(QUERY(nfse <* USEDIN(SELF, 'NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_ELEMENT.SCOPE')|
                                                'NON_FEATURE_SHAPE_ELEMENT_ARM.INTERFACE_PLANE' IN TYPEOF(nfse)));
    INVERSE
      body                                  : SET[0:1] OF Package_body FOR associated_definition;
      package_accesses                      : SET[0:?] OF Package_terminal FOR associated_definition;
      package_polarity_indication           : SET[0:1] OF Polarity_indication_feature FOR associated_definition;
      orientation_feature                   : SET[0:3] OF Package_orientation_feature FOR associated_definition;
    WHERE
      WR1  : NOT (mounting_technology = surface_mount) OR (NOT (EXISTS(maximum_lead_length_below_seating_plane) OR EXISTS(least_lead_length_below_seating_plane)));
      WR2  : NOT (EXISTS(maximum_lead_length_below_seating_plane)) OR (maximum_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
      WR3  : NOT (EXISTS(least_lead_length_below_seating_plane)) OR (least_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
      WR4  : NOT EXISTS(mounting_technology) OR (SIZEOF(package_seating_plane) = 1);
      WR5  : SIZEOF(QUERY(pa <* package_accesses | 'PACKAGE_ARM.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(pa))) = 1;
	  WR6  : SIZEOF(QUERY(nt <* package_accesses |
	                      EXISTS(nt\Part_feature.precedent_feature)
	               )) = (SIZEOF(package_accesses) - 1);
	  WR7  : SIZEOF(QUERY(nt <* package_accesses |
	                     (SIZEOF(nt\Part_feature.subsequent_feature) = 1)
	               )) = (SIZEOF(package_accesses) - 1);
      WR8  : NOT one_orientation_feature    OR ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orientation_feature[1]));
      WR9 : NOT two_orientation_features   OR ((SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1));
      WR10 : NOT three_orientation_features OR ((SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.TERTIARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1));
  END_ENTITY;

  ENTITY Package_body
    SUBTYPE OF (Part_feature);
      SELF\Part_feature.associated_definition : Package;
INVERSE
   body_material : Material_identification FOR items;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
     WR4: 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (body_material);
  END_ENTITY;

  ENTITY Package_body_bottom_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_edge_segment_surface
    SUBTYPE OF (Package_body_surface);
      composed_surface : Package_body_edge_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Package_body_edge_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_surface
    ABSTRACT SUPERTYPE OF (ONEOF (
      Package_body_bottom_surface,
      Package_body_top_surface,
      Package_body_edge_segment_surface,
      Package_body_edge_surface))
    SUBTYPE OF (Part_feature);
      associated_package_body : Package_body;
  END_ENTITY;

  ENTITY Package_body_top_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_orientation_feature
    ABSTRACT SUPERTYPE OF (ONEOF(Primary_orientation_feature, Secondary_orientation_feature, Tertiary_orientation_feature))
    SUBTYPE OF (Part_feature);
           associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
      SELF\Part_feature.associated_definition : Package;
    WHERE
     WR1 : 'GEOMETRIC_TOLERANCE_ARM.DATUM_FEATURE' IN TYPEOF(SELF);
  END_ENTITY;

  ENTITY Package_terminal
    SUBTYPE OF (Part_feature, Placed_feature);
      SELF\Placed_feature.definition 		  : Package_terminal_template_definition;
      SELF\Part_feature.associated_definition : Package;
   INVERSE
      SELF\Part_feature.feature_shape : SET[1:?] OF usage_concept_usage_relationship FOR associated_usage;
    WHERE
      WR1: SIZEOF(SELF\Definitional_shape_element.surface_conditions) = 0;
  END_ENTITY;

  ENTITY Package_terminal_template_definition
    SUBTYPE OF (Part_feature_template_definition);
      SELF\Feature_definition_with_connection_area.connection_area RENAMED external_connection_zone : OPTIONAL SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      internal_connection_zone                : OPTIONAL SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      lead_form                               : OPTIONAL predefined_lead_form;
      seating_plane_intersection              : OPTIONAL seating_plane_intersection_type;
      terminal_characteristic                 : OPTIONAL SET[1:?] OF characteristic;
      terminal_diametrical_extent             : OPTIONAL Length_tolerance_characteristic;
      seating_plane_zone                      : OPTIONAL Connection_zone_package_interface_plane_relationship;
    DERIVE
      mates_with_substrate : BOOLEAN := (EXISTS(seating_plane_zone));
      terminal_core_material : SET [0:1] OF Material_identification := bag_to_set(QUERY( temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') |
     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' +
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'terminal core material')) = 1)));
      terminal_surface_material : SET [0:1] OF Material_identification := bag_to_set(QUERY( temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') |
     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' +
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'terminal surface material')) = 1)));
 	INVERSE
	  external_lead_form                      : SET[0:1] OF External_source_identification FOR item;
    WHERE
      WR1 : NOT EXISTS(seating_plane_zone) OR (SIZEOF(QUERY(cz <* external_connection_zone | (seating_plane_zone.derived_zone = cz))) = 1);
      WR2 : NOT EXISTS(seating_plane_zone) OR ((seating_plane_intersection = surface_intersection) OR (seating_plane_intersection = through_intersection));
      WR3 : NOT ((seating_plane_intersection = does_not_intersect) AND (EXISTS(seating_plane_zone)));
      WR4 : NOT (SIZEOF(terminal_core_material) = 1) OR
                ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (terminal_core_material[1]));
      WR5: (SIZEOF(terminal_surface_material) = 1) AND
                ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (terminal_surface_material[1]));
	  WR6: (EXISTS (lead_form)) XOR ((SIZEOF(external_lead_form)) = 1);
  END_ENTITY;

  ENTITY Package_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Package_body_surface;
      SELF\Shape_element_relationship.related  : Package_terminal;
  END_ENTITY;

  ENTITY Polarity_indication_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Package_terminal;
      SELF\Part_feature.associated_definition : Package;
  END_ENTITY;

  ENTITY Primary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Primary_reference_terminal
    SUBTYPE OF (Package_terminal);
    WHERE
      WR1 : NOT (EXISTS(SELF\Part_feature.precedent_feature));
  END_ENTITY;

  ENTITY Secondary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Tertiary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Wire_terminal
    SUBTYPE OF (Package_terminal);
  END_ENTITY;

  ENTITY Wire_terminal_template_definition
    SUBTYPE OF (Package_terminal_template_definition);
      SELF\Package_terminal_template_definition.internal_connection_zone : SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      wire_terminal_length                                               : OPTIONAL Length_tolerance_characteristic;
  END_ENTITY;

  FUNCTION add_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

  FUNCTION max_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.19 2009/04/23 11:55:19 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6459 - ISO/TS 10303-1708 Packaged connector model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5725
*)

SCHEMA Packaged_connector_model_arm; 

	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710

	SUBTYPE_CONSTRAINT packaged_part_terminal_subtypes FOR Packaged_part_terminal; 
		(ONEOF (Packaged_part_interface_terminal,
	 	Packaged_part_join_terminal));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Mating_connector_relationship
    SUBTYPE OF (Part_definition_relationship);
      SELF\View_definition_relationship.relating_view : Packaged_connector;
      SELF\View_definition_relationship.related_view : Packaged_connector;
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Packaged_connector
    SUBTYPE OF (Packaged_part);
    INVERSE
      characterized_connector_terminal_relationship : SET[1:?] OF packaged_connector_terminal_relationship FOR connector;
  END_ENTITY;
	
  ENTITY Packaged_connector_terminal_relationship;
      connector          : Packaged_connector;
      join_terminal      : Packaged_part_join_terminal;
      interface_terminal : Packaged_part_interface_terminal;
    UNIQUE
      UR1 : join_terminal;
      UR2 : interface_terminal,
 connector;
  END_ENTITY;

  ENTITY Packaged_part_interface_terminal
    SUBTYPE OF (Packaged_part_terminal);
    INVERSE
      external_connector_function : SET[0:?] OF packaged_connector_terminal_relationship FOR interface_terminal;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.34 2009/12/23 13:27:22 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7001 - ISO/TS 10303-1710 Packaged part black box model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6462
*)

SCHEMA Packaged_part_black_box_model_arm;

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	USE FROM Part_external_reference_arm;	-- ISO/TS 10303-1711

	REFERENCE FROM Support_resource_arm(bag_to_set); 

	TYPE package_or_package_external_reference = SELECT
  		(Package,
   		package_external_reference);
	END_TYPE;

	TYPE ppbbm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Packaged_part);
	END_TYPE;

  ENTITY Packaged_part
    SUBTYPE OF (Part_usage_view);
      used_package         : SET[1:?] OF package_or_package_external_reference;
      implemented_function : OPTIONAL Functional_unit_usage_view;
    DERIVE
		potting_compound : SET [0:1] OF Material_identification := 
		bag_to_set(QUERY( temp <* USEDIN(SELF,
		     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') | 
		     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
		 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'potting compound')) = 1)));
		base_package : SET [1:?] OF Package := QUERY(up <* used_package | 
		                                       (SIZEOF(['ALTERED_PACKAGE_ARM.ALTERED_PACKAGE',
		                                          'PART_EXTERNAL_REFERENCE_ARM.PACKAGE_EXTERNAL_REFERENCE'] * TYPEOF(up)) = 0)
		                                          );
    INVERSE
      access_mechanisms : SET[0:?] OF packaged_part_terminal FOR associated_definition;
    WHERE
      WR1 : NOT (EXISTS(implemented_function) XOR (SIZEOF(access_mechanisms) > 0));
      WR2 : SIZEOF(base_package) = 1;
      WR3 : single_package_product(base_package, used_package);
  END_ENTITY;

  ENTITY Packaged_part_join_terminal
    SUBTYPE OF (Packaged_part_terminal);
  END_ENTITY;

  ENTITY Packaged_part_terminal
  	ABSTRACT SUPERTYPE
    SUBTYPE OF (Part_terminal);
      terminal_of_package                     : SET[1:?] OF Package_terminal;
      SELF\Part_feature.associated_definition : Packaged_part;
    WHERE
      WR1 : disjoint_package_terminals(terminal_of_package);
      WR2 : NOT EXISTS(SELF\Part_feature.precedent_feature);
  END_ENTITY;

  FUNCTION disjoint_package_terminals(
    input : SET OF Package_terminal
  ) : BOOLEAN;
  LOCAL
   pk : SET OF Package := []; -- get access to information base
  END_LOCAL;
  
  REPEAT i := 1 to HIINDEX( input);
  pk := pk + input[i].associated_definition;
  END_REPEAT;
  
    RETURN(SIZEOF(input) = SIZEOF(pk));
  END_FUNCTION;

  FUNCTION single_package_product(
    input1 : SET OF Package;
    input2 : SET OF package_or_package_external_reference
  ) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.23 2012/10/06 20:09:56 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7702 - ISO/TS 10303-1022 Part and version identification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6051
*) 


SCHEMA Part_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Part
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;

END_SCHEMA;  -- Part_and_version_identification_arm
(*
 $Id: arm.exp,v 1.7 2004/10/22 14:34:57 darla Exp $
 ISO TC184/SC4/WG12 N1326 - ISO/TS 10303-1055 Part definition relationship - EXPRESS ARM
*)
  
SCHEMA Part_definition_relationship_arm;
 
USE FROM Product_view_definition_relationship_arm;
USE FROM Part_view_definition_arm;
USE FROM Value_with_unit_arm;
      
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.21 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7687 - ISO/TS 10303-1711 Part external reference - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6468
*)

SCHEMA Part_external_reference_arm;

	USE FROM Part_template_arm;	-- ISO/TS 10303-1722

  ENTITY Package_external_reference;
      design_owner          : STRING;
      part_number           : STRING;
      revision_code         : STRING;
      product_definition_id : STRING;
  END_ENTITY;
  
  ENTITY Package_terminal_external_reference;
      name                  : STRING;  
      associated_definition : Package_external_reference;
    UNIQUE
      UR1 : associated_definition,
 name;
  END_ENTITY;

  ENTITY Part_terminal_external_reference
    SUBTYPE OF (General_part_feature);
    UNIQUE
      UR1: SELF\Shape_element.containing_shape, SELF\Shape_element.element_name;
    WHERE
      WR1: SIZEOF(['PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION', 'PART_TEMPLATE_ARM.TEMPLATE_DEFINITION'] *
        TYPEOF(SELF\Shape_element.containing_shape\Item_shape.described_element)) <> 0;
  END_ENTITY;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.23 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8188 - ISO/TS 10303-1712 Part feature function - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7583
*)

SCHEMA Part_feature_function_arm;

	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732

  ENTITY Fiducial_part_feature
    SUBTYPE OF (Part_tooling_feature);
  END_ENTITY;

  ENTITY Part_interface_access_feature
    SUBTYPE OF (Part_feature);
      accessed_interface                 : Part_feature;
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;                  
    WHERE
      WR1 : SELF\Part_feature.material_state_change = material_removal;
      WR2 : SELF <> accessed_interface;
      WR3 : NOT ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF));
      WR4 : NOT ('PACKAGE_ARM.PACKAGE_BODY' IN TYPEOF(SELF));
      WR5 : NOT ('PART_FEATURE_FUNCTION_ARM.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR6 : NOT ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR7 : NOT ('PACKAGE_ARM.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR8 : NOT ('PACKAGE_ARM.PACKAGE_BODY_SURFACE' IN TYPEOF(SELF));
      WR9 : NOT ('PACKAGE_ARM.POLARITY_INDICATION_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Part_mating_feature
    SUBTYPE OF (Part_feature);
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;                  
    WHERE
      WR1 : NOT ('PART_FEATURE_FUNCTION_ARM.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR2 : NOT ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR3 : NOT ('PACKAGE_ARM.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR4 : NOT ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Part_mounting_feature
    SUBTYPE OF (Part_feature);
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
  END_ENTITY;

  ENTITY Part_tooling_feature
    SUPERTYPE OF (ONEOF (Fiducial_part_feature,
 Tool_registration_mark) ANDOR
 Test_point_part_feature)
    SUBTYPE OF (Part_feature);
  END_ENTITY;

  ENTITY Test_point_part_feature
    SUBTYPE OF (Part_tooling_feature);
  WHERE
   WR1: 'FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF);
  END_ENTITY;

  ENTITY Thermal_feature
    SUBTYPE OF (Part_feature);
  END_ENTITY;

  ENTITY Tool_registration_mark
    SUBTYPE OF (Part_tooling_feature);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.35 2010/01/25 18:37:20 lothartklein Exp $
   ISO TC184/SC4/WG12 N7080 - ISO/TS 10303-1714 Part feature location - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6477
*)

SCHEMA Part_feature_location_arm;

	USE FROM Shape_feature_arm;	-- ISO/TS 10303-1764
	
	TYPE feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

	TYPE usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

  ENTITY Usage_concept_usage_relationship
     SUBTYPE OF (Geometric_placement_operation);
       SELF\Geometric_placement_operation.template_definition RENAMED associated_shape_definition : Geometric_model;
       associated_usage                                                                           : usage_concept;
       associating_usage_shape                                                                    : feature_or_non_feature_usage;
     INVERSE
       composed_model : SET[1:1] OF Geometric_model FOR items;
     WHERE
       WR1 : associating_usage_shape = composed_model[1]; 
       WR2 : NOT EXISTS(SELF\Representation_item.name);
       WR3 : ('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_PLACEMENT' IN TYPEOF(SELF)) OR
             ('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_OPERATOR_TRANSFORMATION' IN TYPEOF(SELF));
       WR4 : NOT('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_MODEL' IN TYPEOF(composed_model[1]));
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.4 2012/10/11 05:49:04 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7894 - ISO/TS 10303-1807 General part feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7331
*)

SCHEMA Part_shape_arm;

USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Feature_and_connection_zone_arm; --          ISO/TS 10303-1671

ENTITY Part_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Part_view_definition;
END_ENTITY;  

ENTITY Part_shape_element
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Part_shape; 
END_ENTITY;  

ENTITY General_part_feature
  SUBTYPE OF (Definitional_shape_element, Part_shape_element);
END_ENTITY;  

END_SCHEMA;
(*
   $Id: arm.exp,v 1.9 2012/11/09 21:40:57 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8274 - ISO/TS 10303-1722 Part template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6480
*)

SCHEMA Part_template_arm;

USE FROM Analytical_model_arm;	-- ISO/TS 10303-1603
USE FROM Feature_and_connection_zone_arm;	-- ISO/TS 10303-1671
USE FROM Part_shape_arm;
   
  TYPE correlated_or_independent = SELECT
    (Property_value_representation,
     characteristic);
  END_TYPE;

  TYPE plp_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON
     material_item_select  WITH
   		(Template_definition);
  END_TYPE;
	
  ENTITY Reference_part_template_for_analytical_model ;
      template                  : Template_definition;
      analytical_representation : Analytical_model_definition;
    UNIQUE
      UR1 : template;
  END_ENTITY;

  ENTITY Template
  	SUBTYPE OF (Part);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;

  ENTITY Template_definition
    SUBTYPE OF (Part_shape, Part_view_definition);
      SELF\Product_view_definition.defined_version : Template_version;
      physical_characteristic                      : OPTIONAL SET[1:?] OF correlated_or_independent;
    DERIVE	
      SELF\Item_shape.described_element : template_definition := SELF;      
  END_ENTITY;

  ENTITY Template_version
 	SUBTYPE OF (Part_version);
      SELF\Product_version.of_product : Template;
  END_ENTITY;

  RULE template_version_constraint FOR (Product_version);
    WHERE
      WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'PART_TEMPLATE_ARM.' + 'TEMPLATE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'PART_TEMPLATE_ARM.' + 'TEMPLATE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
  END_RULE; 

  RULE template_definition_constraint FOR (Product_view_definition);
    WHERE
      WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PART_TEMPLATE_ARM.' + 'TEMPLATE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PART_TEMPLATE_ARM.' + 'TEMPLATE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
  END_RULE; 

END_SCHEMA;



(*
   $Id: arm.exp,v 1.40 2012/10/11 05:49:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8191 - ISO/TS 10303-1720 Part template shape with parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7586
*)

SCHEMA Part_template_shape_with_parameters_arm;

USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706
USE FROM Part_template_arm;	-- ISO/TS 10303-1722

REFERENCE FROM Support_resource_arm(bag_to_set); 

  TYPE ptswp_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (Part_template_keepout_shape_model);
  END_TYPE;

  TYPE ptswp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Part_template_keepout_shape_model);
  END_TYPE; 

  TYPE ptswp_view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON view_shape_select WITH 
    (Part_template_shape_model);
  END_TYPE; 

  ENTITY Geometric_template
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Template_definition);
    INVERSE
      shapes : SET [0:?] OF Part_template_shape_model FOR shape_characterized_definition;
    WHERE
      WR1 : SIZEOF(QUERY( gm <* USEDIN(SELF,'')|
        (('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(gm)) AND 
        NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL' IN
        TYPEOF(gm)))
        )) = 0;
  END_ENTITY;

  ENTITY Part_template_keepout_shape_model
		ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);		
	  constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_definition     : Geometric_template;
      shape_material_condition           : material_condition;
      centroid_location                  : OPTIONAL Cartesian_point;
      shape_environment                  : application_environment;
      shape_purpose                      : OPTIONAL predefined_keepout_purpose;
    DERIVE
      principal_part_shape : SET [0:1] OF Geometric_model_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF,
        'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_2') |
         (gmr\Representation_relationship.relation_type = 'principal part shape')));      
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
      WR2 : SIZEOF(QUERY( x <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')
                           | 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF(x)))=0;
      WR3 : SIZEOF(principal_part_shape) < 2;
  END_ENTITY;

  ENTITY Part_template_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : SET[1:?] OF Geometric_template;
      shape_environment              : OPTIONAL application_environment;
      shape_material_condition       : material_condition;
    DERIVE
      principal_part_shape : SET [0:1] OF Geometric_model_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF,
        'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_2') |
         (gmr\Representation_relationship.relation_type = 'principal part shape')));      
    WHERE
      WR1 : SIZEOF(principal_part_shape) < 2;
      WR2 : SIZEOF(QUERY( x <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')
                           | 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF(x)))=0;
  END_ENTITY;

  RULE unique_part_template_shape_model_for_geometric_template FOR
    (Geometric_template);
    LOCAL
      ptsm : SET OF Part_template_shape_model := [];
    END_LOCAL;      
    WHERE
      WR1:  SIZEOF(QUERY (gt <* Geometric_template | 
        (SIZEOF (QUERY (ptsm1 <*
        USEDIN(gt,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        (SIZEOF (QUERY (ptsm2 <*
        USEDIN(gt,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        ptsm1 = ptsm2)) > 1)
        )) > 0) )) = 0;  
  END_RULE;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.15 2012/10/11 05:49:25 liutkuviene Exp $
 ISO TC184/SC4/WG12 N8038 - ISO/TS 10303-1023 Part view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7454
*) 


SCHEMA Part_view_definition_arm;

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
  SELF\Product_view_definition.initial_context: Part_view_definition_context;
  SELF\Product_view_definition.additional_contexts: SET [0:?] OF Part_view_definition_context;
END_ENTITY;

ENTITY Part_view_definition_context
  SUBTYPE OF (View_definition_context);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')
                        |  NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
  WR2: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')
                        |  NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
END_ENTITY;

RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PART_VIEW_DEFINITION_ARM.PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;  -- Part_view_definition_arm
(*
 $Id: arm.exp,v 1.16 2004/10/28 17:08:02 darla Exp $
 ISO TC184/SC4/WG12 N2921 - ISO/TS 10303-1011 Person organization - EXPRESS ARM
*)
 


SCHEMA Person_organization_arm;


TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 

ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;

ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;

ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;

ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;

ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;

ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Person_organization_arm
(*
$Id: arm.exp,v 1.10 2010/06/09 21:51:47 philsp Exp $
ISO TC184/SC4/WG12 N7122 - ISO/TS 10303-1013 Person organization assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1090
*)
  
SCHEMA Person_organization_assignment_arm;

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET[1:?] OF organization_or_person_in_organization_item;
END_ENTITY;

END_SCHEMA;  -- Person_organization_assignment_arm
(*
   $Id: arm.exp,v 1.13 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7765 - ISO/TS 10303-1721 Physical component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6492
*)

SCHEMA Physical_component_feature_arm; 

	USE FROM Component_feature_arm;	-- ISO/TS 10303-1657

  ENTITY Physical_component_feature
    SUBTYPE OF (Component_feature);
  END_ENTITY;

  ENTITY Physical_component_terminal
    SUBTYPE OF (Component_terminal,
 			Physical_component_feature);
      SELF\shape_element.description RENAMED terminal_type : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.43 2012/10/11 05:49:27 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8194 - ISO/TS 10303-1755 Physical connectivity definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7589
*)

SCHEMA Physical_connectivity_definition_arm;

	USE FROM Part_external_reference_arm;	-- ISO/TS 10303-1711
	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721#
	USE FROM Physical_unit_design_view_arm;
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740		
REFERENCE FROM Support_resource_arm(bag_to_set);

	TYPE pcd_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
	   (Physical_connectivity_definition,
	    Group_relationship);
	END_TYPE; 

	TYPE pcd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Physical_connectivity_element,
	    Physical_connectivity_definition,
	    Physical_connectivity_definition_relationship);
	END_TYPE; 

	TYPE pcd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
		(Physical_connectivity_element,
		 Physical_connectivity_definition);
	END_TYPE;
        
	TYPE physical_connectivity_definition_domain_enumeration = EXTENSIBLE ENUMERATION OF
		(electrical,
		 thermal,
		 optical,
		 magnetic);
    END_TYPE;
     
	TYPE termination_or_junction = EXTENSIBLE GENERIC_ENTITY SELECT
    	(Component_terminal,
    	 Topological_junction);
  	END_TYPE;

  ENTITY Physical_connectivity_definition
    SUPERTYPE OF (Physical_connectivity_structure_definition)
    SUBTYPE OF (Shape_element);
      associated_terminals  : SET[2:?] OF Physical_component_terminal;
      SELF\Shape_element.containing_shape RENAMED associated_definition : Physical_unit_network_definition;
    INVERSE
      domain : SET [0:1] OF Physical_connectivity_definition_domain for associated_definition;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, associated_definition;
  END_ENTITY;

  ENTITY Physical_connectivity_definition_domain;
      domain_type : physical_connectivity_definition_domain_enumeration;
      associated_definition : Physical_connectivity_definition;
  END_ENTITY;
  
  ENTITY Physical_connectivity_definition_relationship;
      first_definition  : Physical_connectivity_definition;
      second_definition : Physical_connectivity_definition;
      purpose           : STRING;
    INVERSE
      requirement : SET[1:1] OF Requirement_assignment FOR assigned_to;
  END_ENTITY;

  ENTITY Physical_connectivity_element;
      name                 : STRING; 
      start_terminus       : termination_or_junction;
      end_terminus         : termination_or_junction;
      connectivity_context : Physical_connectivity_structure_definition;
    UNIQUE
      UR1 : name, connectivity_context;
    WHERE
      WR1 : start_terminus <> end_terminus;
  END_ENTITY;

  ENTITY Physical_connectivity_layout_topology_link
    SUBTYPE OF(Group_relationship);
      SELF\Group_relationship.related_group RENAMED subsequent_node : Physical_connectivity_layout_topology_node;
      SELF\Group_relationship.relating_group RENAMED precedent_node  : Physical_connectivity_layout_topology_node;
    DERIVE
      SELF\Group_relationship.relation_type : STRING := '';
    WHERE  
      WR1 : acyclic_physical_connectivity_layout_topology_link(SELF, [subsequent_node], 
        'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK');
  END_ENTITY;

  ENTITY Physical_connectivity_layout_topology_node
    SUBTYPE OF(Group);
      SELF\Group.name RENAMED terminal_type : STRING;
    WHERE
      WR1 : (SIZEOF(SELF\Group.elements) = 0);
  END_ENTITY;

  ENTITY Physical_connectivity_layout_topology_requirement
    SUBTYPE OF(Predefined_requirement_view_definition, Group);
      SELF\Group.elements : SET [1:?] OF Physical_connectivity_layout_topology_link;
    DERIVE
      nodes : SET [1:?] OF Physical_connectivity_layout_topology_node := pcd_get_pcltn(elements);
      tree_structure : LOGICAL := (SIZEOF(nodes) = (SIZEOF(elements) + 1));
    WHERE
      WR1 : (tree_structure = TRUE);
  END_ENTITY;

  ENTITY Physical_connectivity_layout_topology_requirement_assignment
    SUBTYPE OF(Requirement_assignment);
      SELF\Requirement_assignment.assigned_requirement : Physical_connectivity_layout_topology_requirement;
      SELF\Requirement_assignment.assigned_to          : Physical_connectivity_definition;
  END_ENTITY;

  ENTITY Physical_connectivity_make_from_relationship;
      reusable_definition  : Physical_connectivity_definition;
      resultant_definition : Physical_connectivity_definition;
  END_ENTITY;

  ENTITY Physical_connectivity_structure_definition
    SUBTYPE OF (Physical_connectivity_definition);
    DERIVE
      structural_terminal_nodes : SET OF Physical_component_terminal := get_pct(structural_element);
      structural_junction_nodes : SET OF Topological_junction := get_tj(structural_element);
      tree_structure : LOGICAL := ((SIZEOF(structural_terminal_nodes) + SIZEOF(structural_junction_nodes)) = (SIZEOF(structural_element) + 1));
    INVERSE
      structural_element : SET[1:?] OF Physical_connectivity_element FOR connectivity_context;
    WHERE
      WR1 : SIZEOF(QUERY(stn <* structural_terminal_nodes |
                   NOT(stn IN SELF\Physical_connectivity_definition.associated_terminals)
                   )) = 0;
      WR2 : SIZEOF(structural_terminal_nodes) = 
            SIZEOF(SELF\Physical_connectivity_definition.associated_terminals);
  END_ENTITY;

  ENTITY Physical_unit_network_definition
    SUBTYPE OF (Part_design_view);
    DERIVE
      terminals : SET [0:?] OF Component_terminal := 
      get_terminals(bag_to_set(USEDIN(SELF,'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_DEFINITION')));
       assembly : SET[0:?] of Product_view_definition := pcd_get_assemblies(terminals);
    WHERE
      WR1 : NOT (SIZEOF(terminals) > 1) OR
           (SIZEOF(QUERY(t <* terminals | NOT(SIZEOF(USEDIN(t, 'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.' + 
                          'PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_TERMINALS')) = 1))) = 0);
      WR2: SIZEOF(QUERY( ass <* assembly |
      (ass\Product_view_definition.defined_version = SELF\Product_view_definition.defined_version)
           )) > 0;                          
  END_ENTITY;

  ENTITY Topological_junction;
      name  : STRING;   
      scope : Physical_connectivity_structure_definition;
    UNIQUE
      UR1 : name, scope;
  END_ENTITY; 

  FUNCTION acyclic_physical_connectivity_layout_topology_link
    (relation : Physical_connectivity_layout_topology_link; 
    relatives : SET[1:?] OF Physical_connectivity_layout_topology_node; 
    specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF Physical_connectivity_layout_topology_link := [];
    END_LOCAL;
    IF relation.precedent_node IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_node,
      'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.' +
      'PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK.' +
      'SUBSEQUENT_NODE')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_physical_connectivity_layout_topology_link(x[i], relatives +
        relation.precedent_node, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;    

  FUNCTION pcd_get_assemblies(input : SET OF Component_terminal) : SET OF Product_view_definition;
    LOCAL
      ac : SET OF Assembly_component := [];
     pvd : SET OF Product_view_definition := [];
    END_LOCAL;
   REPEAT i := 1 TO HIINDEX(input) BY 1;
      ac := ac + input[i]\Component_feature.associated_component;
   END_REPEAT;
   REPEAT i := 1 to HIINDEX(ac) BY 1;
     pvd  := pvd + ac[i]\Assembly_component.assemblies;
   END_REPEAT;
   RETURN(pvd);
  END_FUNCTION; 
   
  FUNCTION get_terminals(input : SET OF Physical_connectivity_definition) : SET OF Component_terminal;
  LOCAL
   ct : SET OF Component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   ct := ct + input[i].associated_terminals;
  END_REPEAT;
  RETURN(ct);
  END_FUNCTION;
  
  FUNCTION get_pct(input : SET OF Physical_connectivity_element) : SET OF Physical_component_terminal;
  LOCAL
   pct : SET OF Physical_component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].start_terminus)) THEN
   pct := pct + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].end_terminus)) THEN
   pct := pct + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(pct);
  END_FUNCTION;


  FUNCTION get_tj(input : SET OF Physical_connectivity_element) : SET OF Topological_junction;
  LOCAL
   tj : SET OF Topological_junction := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].start_terminus)) THEN
   tj := tj + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].end_terminus)) THEN
   tj := tj + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(tj);
  END_FUNCTION;

  FUNCTION pcd_get_pcltn(input : SET OF Physical_connectivity_layout_topology_link) : SET OF Physical_connectivity_layout_topology_node;
  LOCAL
   pcltn : SET OF Physical_connectivity_layout_topology_node := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   pcltn := pcltn + input[i].precedent_node + input[i].subsequent_node;
  END_REPEAT;
  RETURN(pcltn);
  END_FUNCTION;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.64 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8200 - ISO/TS 10303-1724 Physical unit 2d design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7595
*)

SCHEMA Physical_unit_2d_design_view_arm;

	USE FROM Part_template_shape_with_parameters_arm;  -- ISO/TS 10303-1720
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726
	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728
	REFERENCE FROM Support_resource_arm(bag_to_set); 

  ENTITY Assembly_component_2d_shape_model
    SUBTYPE OF (Planar_projected_shape_model);
      shape_characterized_component : SET[1:?] OF Assembly_component;
    DERIVE
      equivalent_reference_shape_model : SET [0:1] OF Geometric_model_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF, 'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_2') |
        (gmr\Representation_relationship.relation_type = 'equivalent reference shape model')));      
    WHERE
      WR1 : SIZEOF(equivalent_reference_shape_model) < 2;        
  END_ENTITY;

  ENTITY Component_2d_location
   SUBTYPE OF (Contextual_shape_representation, Geometric_composition_with_operator_transformation);
     placement_fixed : BOOLEAN;
     SELF\Geometric_relationship_with_operator_transformation.transformation : Cartesian_transformation_2d; -- enforce rep_rel_w_trans by mapping
     SELF\Geometric_model_relationship.rep_2 RENAMED assembly_model : Physical_unit_planar_shape_model;  -- CHANGED
     SELF\Geometric_model_relationship.rep_1 RENAMED component_model : Geometric_model; -- CHANGED
   DERIVE
     component : Next_assembly_usage := SELF\Contextual_shape_representation.contextual_shape.described_element;
     substrate_location : BOOLEAN := substrate_in_assembly(SELF);
     the_context : Geometric_coordinate_space := assembly_model\Representation.context_of_items;
     SELF\Contextual_shape_representation.representing_relationship : Geometric_model_relationship := SELF;   -- NEW
     SELF\Representation_relationship.relation_type : label := 'component 2d location';
   WHERE
     WR1: EXISTS (component);  
     WR2: NOT('PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Product_occurrence_definition_relationship.related_view IN component_model\Assembly_component_2d_shape_model.shape_characterized_component);
     WR3: NOT('PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component_model\Physical_unit_shape_model.shape_characterized_definition :=: 
     component\Product_occurrence_definition_relationship.related_view\Definition_based_product_occurrence.derived_from);
     WR4: NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Product_occurrence_definition_relationship.related_view\Definition_based_product_occurrence.derived_from IN
      component_model\Part_template_shape_model.shape_characterized_definition);
  END_ENTITY;

  RULE unique_assembly_component_2d_shape_model FOR (Assembly_component_2d_shape_model);
   LOCAL
     ac : BAG OF Assembly_component := [];
     pass : BOOLEAN := TRUE;
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_2d_shape_model) by 1;
     ac  := ac + Assembly_component_2d_shape_model[i].shape_characterized_component;
   END_REPEAT;
  WHERE
   WR1 : SIZEOF(ac) = SIZEOF(bag_to_set(ac));
  END_RULE;

  FUNCTION substrate_in_assembly(
    c2dl : Component_2d_location
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

  RULE unique_physical_unit_planar_shape_model_for_part_design_and_usage_view FOR
      (Part_design_view, Part_usage_view);
    WHERE
      WR1:  SIZEOF(QUERY (pdv <* Part_design_view | 
        (SIZEOF (QUERY (pupsm1 <* USEDIN
        (pdv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF
        (pupsm1)) AND (SIZEOF (QUERY (pupsm2 <* USEDIN
        (pdv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
        ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm2)) AND (pupsm1 = pupsm2))) > 1)
        )) > 0) )) = 0;  
      WR2:  SIZEOF(QUERY (puv <* Part_usage_view | (SIZEOF (QUERY (pupsm1 <*
        USEDIN (puv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |  
          ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm1)) AND 
          (SIZEOF (QUERY (pupsm2 <* USEDIN (puv,'PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION') |
          ('PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN TYPEOF (pupsm2)) AND 
          (pupsm1 = pupsm2))) > 1) )) > 0) )) = 0;  
  END_RULE;

  function pu2dv_has_shape(input : Assembly_component) : BOOLEAN;
  LOCAL
    ac2ds : BAG OF Assembly_component_2d_shape_model := USEDIN(input,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT');
  END_LOCAL;

  RETURN(SIZEOF(ac2ds) > 0);
  END_FUNCTION;

  function pu2dv_typeof(input : Assembly_component) : SET OF STRING;
  LOCAL
    ac2ds : BAG OF Assembly_component_2d_shape_model := USEDIN(input,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT');
  END_LOCAL;
  IF SIZEOF(ac2ds) > 1 THEN 
    RETURN(?);
  END_IF;
  RETURN(TYPEOF(ac2ds[1]));
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.44 2013/02/08 19:12:45 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N7690 - ISO/TS 10303-1726 Physical unit 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6504
*)

SCHEMA Physical_unit_2d_shape_arm;

USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706
USE FROM Layered_2d_shape_arm; -- ISO/TS 10303-1693

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740

  SUBTYPE_CONSTRAINT planar_shape_model_subtypes FOR Planar_shape_model;  
    (ONEOF (Planar_projected_shape_model,
	Physical_unit_planar_keepout_shape_model));
  END_SUBTYPE_CONSTRAINT; 

  TYPE pu2ds_external_identification_item = SELECT BASED_ON external_identification_item WITH  
    (Physical_unit_planar_shape_model);
  END_TYPE;

  TYPE pu2ds_physical_unit_shape_model_select = SELECT BASED_ON physical_unit_shape_model_select WITH 
    (Physical_unit_planar_shape_model);
  END_TYPE; 

  TYPE part_template_or_physical_unit_2d_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE pu2ds_feature_or_non_feature_usage = SELECT BASED_ON feature_or_non_feature_usage WITH 
    (part_template_or_physical_unit_2d_shape_select);
  END_TYPE;

  TYPE pu2ds_view_shape_select = SELECT BASED_ON view_shape_select WITH 
    (Physical_unit_shape_model);
  END_TYPE; 

  TYPE pu2ds_part_template_or_physical_unit_2d_shape_select =  GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_2d_shape_select WITH 
    (Physical_unit_planar_shape_model);
  END_TYPE;
  
  TYPE pu2ds_requirement_assignment_item = SELECT BASED_ON requirement_assignment_item WITH 
    (Physical_unit_planar_keepout_shape_model,
     Physical_unit_planar_shape_model);
  END_TYPE;

  TYPE predefined_planar_purpose = ENUMERATION OF
    (analysis_input,
     analysis_output,
     shock_analysis_input,
     shock_analysis_output,
     assembly_symbol,
     design,
     design_profile,
     vibration_analysis_input,
     vibration_analysis_output,
     electromagnetic_compatibility_analysis_input,
     electromagnetic_compatibility_analysis_output,
     physical_extent,
     thermal_analysis_input,
     thermal_analysis_output);
  END_TYPE;

  TYPE pu2ds_shape_location = ENUMERATION OF
    (above,
     below,
     congruent);
  END_TYPE;

  TYPE pu2ds_shape_side = ENUMERATION OF
    (same_side,
     opposite_side,
     both_sides);
  END_TYPE;

  TYPE pu2ds_component_application = ENUMERATION OF
    (compliant_components_permitted,
     no_components_permitted);
  END_TYPE;

  ENTITY Physical_unit_planar_keepout_shape_model
    SUBTYPE OF (Planar_shape_model,
 			Usage_view_level_non_feature_shape_model,
 			Physical_unit_keepout_shape_model);
      SELF\Usage_view_level_non_feature_shape_model.model_shape : Physical_unit_shape_model;
      component_application                                    : pu2ds_component_application;
      shape_distance_from_seating_plane                        : OPTIONAL Length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane             : OPTIONAL pu2ds_shape_location;
      side                                                     : OPTIONAL pu2ds_shape_side;
      extrusion                                                : OPTIONAL BOOLEAN;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
    WHERE
      WR1 : NOT ((pu2ds_shape_location.congruent = shape_location_with_respect_to_seating_plane) AND (EXISTS(shape_distance_from_seating_plane)));
   	  WR2 : (SIZEOF(application_technology_constraint) <= 1);
   	  WR3 : NOT EXISTS(SELF\Representation.name);
   	  WR4 : NOT EXISTS(SELF\Representation.description);
   	  WR5 : NOT EXISTS(shape_distance_from_seating_plane) OR EXISTS(shape_location_with_respect_to_seating_plane);
   	  WR6 : NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition)) OR
   	        EXISTS(shape_distance_from_seating_plane);
      WR7 : NOT EXISTS(side) OR ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition));
      WR8 : NOT EXISTS(extrusion) OR EXISTS(side);
  END_ENTITY;

  ENTITY Physical_unit_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model, Physical_unit_shape_model);
      shape_distance_from_seating_plane            : OPTIONAL Length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane : OPTIONAL pu2ds_shape_location;
      shape_purpose                                : OPTIONAL predefined_planar_purpose;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
                                           get_rvd(SELF, 'application technology constraint');
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
   	  WR2 : (SIZEOF(application_technology_constraint) <= 1);	  
   	  WR3 : NOT EXISTS(SELF\Representation.description);
   	  WR4 : NOT (EXISTS(shape_distance_from_seating_plane) XOR EXISTS(shape_location_with_respect_to_seating_plane));
      WR5 : NOT (('PACKAGE_ARM.PACKAGE' IN TYPEOF(SELF\Physical_unit_shape_model.shape_characterized_definition)) XOR
   	        EXISTS(shape_distance_from_seating_plane));
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.86 2012/10/11 05:49:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8206 - ISO/TS 10303-1728 Physical unit design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7601
*)

SCHEMA Physical_unit_design_view_arm;

USE FROM Assembly_component_arm;
USE FROM Interface_component_arm;	-- ISO/TS 10303-1691
USE FROM Part_template_arm; -- ISO/TS 10303-1722
USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732
USE FROM Specification_document_arm;	-- ISO/TS 10303-1747
	
REFERENCE FROM Support_resource_arm(bag_to_set);  

  TYPE assembly_component_or_item_number = SELECT
    (Assembly_item_number,
     Assembly_component_relationship);
  END_TYPE;
	
  TYPE assembly_item_number_or_process_specification = SELECT
    (Assembly_item_number,
     Process_specification);
  END_TYPE;
	
  TYPE bonding_or_coating = ENUMERATION OF
    (bonding, coating);
  END_TYPE;    
	
  TYPE pudv_groupable_item = SELECT BASED_ON groupable_item WITH 
    (Assembly_component,
    Assembly_component_relationship);
  END_TYPE; 

  TYPE pudv_physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit WITH 
    (Part_design_view);
  END_TYPE; 

  SUBTYPE_CONSTRAINT pudv_part_view_definition_subtypes FOR Part_view_definition; 
    (ONEOF (Part_usage_view,
    Part_design_view));
  END_SUBTYPE_CONSTRAINT; 

  TYPE pudv_extended_value_with_unit = EXTENSIBLE SELECT BASED_ON extended_value_with_unit WITH 
    (textual_quantity_specification);
  END_TYPE; 

  TYPE pudv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Assembly_item_number,
     Assembly_component_relationship,
     Component_material_relationship);
  END_TYPE;
	
  TYPE textual_quantity_specification = STRING;
  END_TYPE;
	
  ENTITY Assembly_alternate_product
    SUBTYPE OF (Alternate_product_relationship);
      basis_context : Part_design_view;
    WHERE
      WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;

  ENTITY Assembly_item_number;
      assembly_usage : SET[1:?] OF Assembly_component_relationship;
      item_number    : STRING;
    DERIVE
      assembly : Product_view_definition := assembly_usage[1].relating_view;
      part     : Product := assembly_usage[1].related_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product;
    UNIQUE
      UR1 : assembly, item_number;
    WHERE
      WR1 : SIZEOF(QUERY(au <* assembly_usage | NOT (au.relating_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product = Part))) = 0;
      WR2 : SIZEOF(QUERY(au <* assembly_usage | NOT (au.relating_view = assembly))) = 0;
  END_ENTITY;

  ENTITY Component_material_relationship;
      associated_design : Part_design_view;  
      component_1   : assembly_component_or_item_number;
      component_2   : OPTIONAL assembly_component_or_item_number;
      material : OPTIONAL assembly_component_or_item_number;
      role          : bonding_or_coating;
      specification : OPTIONAL assembly_item_number_or_process_specification;
    WHERE
      WR1 : component_1 <> component_2;
      WR2 : component_1 <> material;
      WR3 : component_1 <> specification;
      WR4 : component_2 <> material;
      WR5 : component_2 <> specification;
      WR6 : material <> specification;
      WR7 : valid_assembly_context_for_bond(associated_design, component_1);
      WR8 : valid_assembly_context_for_bond(associated_design, component_2);
      WR9 : valid_assembly_context_for_bond(associated_design, material);
     WR10 : valid_assembly_context_for_bond(associated_design, specification);
  END_ENTITY;

  ENTITY Component_to_physical_usage_view_assignment
  	SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED design_view_component : Assembly_component;  	
      SELF\View_definition_relationship.related_view RENAMED usage_view_component  	: Assembly_component;
    WHERE
      WR1 : design_view_component <> usage_view_component;
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Component_feature_to_physical_usage_view_assignment;
      defined_part_feature   : Part_feature;
      assigned_design_object : Component_feature;
    UNIQUE 
    	UR1 : assigned_design_object;
    	UR2 : defined_part_feature;
  END_ENTITY;

  ENTITY Connection_zone_in_design_view
  	SUBTYPE OF (Connection_zone);
  	DERIVE
      associated_definition : Part_design_view := SELF\Shape_element.containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY; 

  ENTITY Next_assembly_usage_occurrence_relationship
    SUBTYPE OF (Next_assembly_usage);
    UNIQUE
      UR1 : SELF\Product_occurrence_definition_relationship.relating_view, 
            SELF\Assembly_component_relationship.location_indicator;
  END_ENTITY;

  ENTITY Part_design_view
    SUBTYPE OF (Part_shape, Part_view_definition);
      usage_view : OPTIONAL Part_usage_view;
    DERIVE
      SELF\Item_shape.described_element : Part_design_view := SELF;
    WHERE
      WR1 : ('LAYOUT_MACRO_DEFINITION_ARM.LAYOUT_MACRO_DEFINITION' IN TYPEOF(SELF)) OR EXISTS(usage_view);
      WR2 : SIZEOF(QUERY(nauo <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.RELATING_VIEW') |
                 (('PHYSICAL_UNIT_DESIGN_VIEW_ARM.NEXT_ASSEMBLY_USAGE_OCCURRENCE_RELATIONSHIP' IN TYPEOF(nauo)) XOR
                  ('ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE' IN TYPEOF(nauo)))                 
                 )) = 0;
  END_ENTITY;

  RULE unique_assembly_item_number FOR (Assembly_item_number);
    LOCAL
      acr : BAG OF Assembly_component_relationship := [];
    END_LOCAL;
    REPEAT i := 1 to SIZEOF(Assembly_item_number) by 1;
      acr  := acr + Assembly_item_number[i].assembly_usage;
    END_REPEAT;  
    WHERE
      WR1 : SIZEOF(acr) = SIZEOF(bag_to_set(acr));
  END_RULE;

  FUNCTION valid_assembly_context_for_bond(input1 : Part_design_view;
                                           input2 : GENERIC_ENTITY) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;                                         

  SUBTYPE_CONSTRAINT pudv_connection_zone_subtypes FOR Connection_zone;     
    ONEOF (Connection_zone_in_usage_view,
           Connection_zone_in_design_view);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.36 2012/10/11 05:49:25 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7607 - ISO/TS 10303-1730 Physical unit shape with parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6522
*)

SCHEMA Physical_unit_shape_with_parameters_arm;

USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732
USE FROM Shape_parameters_arm;	-- ISO/TS 10303-1743

REFERENCE FROM Support_resource_arm(bag_to_set); 

  TYPE mass_property_quality = ENUMERATION OF
    (high,
     medium,
     low,
     is_unknown);
  END_TYPE;

  TYPE puswp_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (Physical_unit_keepout_shape_model);
  END_TYPE;

  TYPE puswp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Physical_unit_keepout_shape_model,
     Physical_unit_shape_model);
  END_TYPE; 

  TYPE shape_approximation_level = ENUMERATION OF
    (coarse,
     detailed,
     is_unknown);
  END_TYPE;

  TYPE shape_extent = ENUMERATION OF
    (envelope,
     over_body,
     over_lands,
     over_breakout);
  END_TYPE;

  SUBTYPE_CONSTRAINT puswp_geometric_model_subtypes FOR Geometric_model;     
    (ONEOF (Physical_unit_keepout_shape_model,
     Physical_unit_shape_model));    
  END_SUBTYPE_CONSTRAINT;


  ENTITY Physical_unit_keepout_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);    
	  constrained_design_object_category : keepout_product_design_object_category;    
      shape_characterized_definition     : Part_usage_view;
      shape_material_condition           : material_condition;
      shape_purpose                      : OPTIONAL predefined_keepout_purpose;
      shape_environment                  : application_environment;
      shape_extent                       : shape_extent;			
      shape_approximation_level          : shape_approximation_level;
      centroid_location                  : OPTIONAL Cartesian_point;
    DERIVE
      principal_part_shape : SET [0:1] OF Geometric_model_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF,
        'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_2') |
        (gmr\Representation_relationship.relation_type = 'principal part shape')));      
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
	  WR2 : SIZEOF(principal_part_shape) < 2;
  END_ENTITY;

  ENTITY Physical_unit_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);    
      shape_characterized_definition : physical_unit;
      shape_material_condition       : material_condition;      
      centroid_location              : OPTIONAL Cartesian_point;      
      shape_environment              : application_environment;      
      shape_extent                   : shape_extent;      
      shape_approximation_level      : shape_approximation_level;
      mass_property_quality          : mass_property_quality;
    DERIVE
      principal_part_shape : SET [0:1] OF Geometric_model_relationship :=
        bag_to_set(QUERY( gmr <* USEDIN(SELF,
        'GEOMETRIC_MODEL_RELATIONSHIP_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_2') |
        (gmr\Representation_relationship.relation_type = 'principal part shape')));      
    WHERE
      WR1 : NOT ('PACKAGED_PART_BLACK_BOX_MODEL_ARM.PACKAGED_PART' IN TYPEOF(shape_characterized_definition));
      WR2 : SIZEOF(QUERY( x <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')
                           | 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF(x)))=0;            
      WR3 : SIZEOF(principal_part_shape) < 2;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.80 2012/10/11 05:49:12 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8215 - ISO/TS 10303-1732 Physical unit usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7610
*)

SCHEMA Physical_unit_usage_view_arm;

USE FROM Analytical_model_arm;	-- ISO/TS 10303-1603
USE FROM Feature_and_connection_zone_arm;	-- ISO/TS 10303-1671

USE FROM Item_definition_structure_arm;	-- ISO/TS 10303-1345
USE FROM Part_feature_location_arm;	-- ISO/TS 10303-1714
USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
USE FROM Shape_composition_arm;	-- ISO/TS 10303-1742
USE FROM Part_shape_arm;

REFERENCE FROM Support_resource_arm(bag_to_set);  

  TYPE material_state_change_enumeration = ENUMERATION OF
    (material_addition,
     material_removal);
  END_TYPE;

  TYPE physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT(Part_usage_view);
  END_TYPE;   

  TYPE puuv_groupable_item = SELECT BASED_ON groupable_item WITH 
    (Part_feature);
  END_TYPE; 

  TYPE puuv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Part_feature,
     Part_view_definition);
  END_TYPE; 

  TYPE puuv_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
    (Part_feature);
  END_TYPE;

  TYPE puuv_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
    (Part_feature);
  END_TYPE;
	
  ENTITY Derived_part_view_definition_relationship
    SUBTYPE OF(View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Part_view_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
    WHERE
      WR1: SIZEOF(get_derived_shape_element(related_view)) > 0;
      WR2: SIZEOF(QUERY(gdrse <* get_derived_shape_element(related_view) |
             (SIZEOF(QUERY(se <* gdrse.derived_from |
                relating_view <> se.containing_shape.described_element
              )) = 0)
             )) = SIZEOF(get_derived_shape_element(related_view));
      WR3 : NOT EXISTS(SELF\View_definition_relationship.relation_type);             
  END_ENTITY;

  ENTITY Connection_zone_in_usage_view
  	SUBTYPE OF (Connection_zone);
  	DERIVE
  	  associated_definition : Part_usage_view := containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY; 

  ENTITY Connection_zone_map_identification;
      reference_connection_zone_shape : Usage_view_connection_zone_terminal_shape_relationship;
      mapped_connection_zone_shape    : Usage_view_connection_zone_terminal_shape_relationship;
    UNIQUE
      UR1 : reference_connection_zone_shape, mapped_connection_zone_shape;
    WHERE
      WR1 : reference_connection_zone_shape <> mapped_connection_zone_shape;
      WR2 : reference_connection_zone_shape.associated_connection_zone_shape_definition <> mapped_connection_zone_shape.associated_connection_zone_shape_definition;
  END_ENTITY;

  ENTITY Part_feature
    SUBTYPE OF (General_part_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition : Part_usage_view;
      material_state_change   : OPTIONAL material_state_change_enumeration;
      precedent_feature       : OPTIONAL Part_feature;
    INVERSE
      feature_shape           : SET [0:?] OF usage_concept_usage_relationship FOR associated_usage;
      subsequent_feature      : SET [0:1] OF Part_feature for precedent_feature;
    WHERE
      WR1:  NOT EXISTS(precedent_feature) OR
            (NOT (SIZEOF(subsequent_feature) = 1) OR
            (acyclic_part_feature_precedence_relationship(SELF,
             [subsequent_feature[1]],
             'PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE')));
      WR2 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Part_feature_make_from_relationship
  	SUBTYPE OF (Shape_element_relationship);
      associated_make_from : View_definition_relationship;
      SELF\Shape_element_relationship.relating RENAMED reusable_feature	: Part_feature;
      SELF\Shape_element_relationship.related RENAMED resultant_feature	: Part_feature;
    UNIQUE
      UR1 : reusable_feature, resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.associated_definition :<>: resultant_feature.associated_definition;
  END_ENTITY;

  ENTITY Part_feature_template_definition
    SUBTYPE OF (Feature_definition_with_connection_area);
      id : STRING;
    DERIVE
      surface_conditions : SET OF Surface_condition := 
	       bag_to_set(USEDIN(SELF\Shape_feature_definition.of_shape,'SURFACE_CONDITIONS_ARM.SURFACE_CONDITION.DESCRIBED_ELEMENT'));	  
    UNIQUE
      UR1 : id; 
  END_ENTITY;

  ENTITY Part_feature_template_shape_model
    SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : NOT (SIZEOF(USEDIN(SELF, '')) > 1) OR 
       (SIZEOF(QUERY(foo <* USEDIN(SELF,'') | 
       NOT(SIZEOF(['PHYSICAL_UNIT_USAGE_VIEW_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP',
        'PHYSICAL_UNIT_USAGE_VIEW_ARM.SHAPE_DESCRIPTION_ASSOCIATION'] * TYPEOF(foo))= 1)
        )) 
        = 0);
      WR2 : NOT EXISTS(SELF\Representation.description);
      WR3: ((SIZEOF(USEDIN(SELF,
       'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'))=0) OR
       (SIZEOF(QUERY(sda <* USEDIN(SELF,
       'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
       NOT (('SHAPE_PROPERTY_ASSIGNMENT_ARM.' +'ITEM_SHAPE' IN
       TYPEOF(sda.definition)) AND 
       ('PHYSICAL_UNIT_USAGE_VIEW_ARM.' +'PART_FEATURE_TEMPLATE_DEFINITION' IN
       TYPEOF(sda.definition.described_element)))
       )) = 0));
  END_ENTITY;

  ENTITY Part_usage_view
    SUBTYPE OF (Part_view_definition, Part_shape);
    DERIVE
      SELF\Item_shape.described_element : Part_usage_view := SELF;
  END_ENTITY;

  ENTITY Usage_view_connection_zone_terminal_shape_relationship;
      associating_terminal_shape                  : Part_feature_template_shape_model;
      associated_usage                            : Connection_zone_in_usage_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
    WHERE
      WR1 : associating_terminal_shape :<>: associated_connection_zone_shape_definition;
  END_ENTITY;

  RULE unique_assembly_component_relationship FOR (Assembly_component_relationship);
   LOCAL
     gee : SET OF Product_view_definition := [];
     gei : SET OF Product_view_definition := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_relationship) by 1;
     gee  := gee + Assembly_component_relationship[i]\Product_occurrence_definition_relationship.related_view;
     gei  := gei + Assembly_component_relationship[i]\Product_occurrence_definition_relationship.relating_view;
   END_REPEAT;  
  WHERE
   WR1 : SIZEOF(gee) = SIZEOF(gei);
  END_RULE;

  FUNCTION acyclic_part_feature_precedence_relationship
      (relation : Part_feature; relatives : SET[1:?] OF
      Part_feature; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF Part_feature;
    END_LOCAL;

    IF relation.precedent_feature IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_feature,
        'PHYSICAL_UNIT_USAGE_VIEW_ARM.' + 'PART_FEATURE.' +
        'SUBSEQUENT_FEATURE')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_part_feature_precedence_relationship(x[i], relatives +
        relation.precedent_feature, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION get_derived_shape_element( input : Part_view_definition) : SET OF Derived_shape_element;
    LOCAL
      is : SET OF Item_shape := bag_to_set(USEDIN(input, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE.DESCRIBED_ELEMENT'));
      se : SET OF Shape_element := [];
    END_LOCAL; 
    REPEAT i := 1 to SIZEOF(is) by 1;
      se  := se + bag_to_set(USEDIN(is[i], 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE'));
    END_REPEAT;  
    RETURN(QUERY(dse <* se | 'DERIVED_SHAPE_ELEMENT_ARM.DERIVED_SHAPE_ELEMENT' IN TYPEOF(se)));
  END_FUNCTION;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.9 2008/09/13 12:26:56 liutkuviene Exp $
 ISO TC184/SC4/WG12 N5455 - ISO/TS 10303-1291 Plib class reference - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4840
*) 


SCHEMA Plib_class_reference_arm; 

USE FROM External_class_arm;    -- ISO/TS 10303-1275

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013


  ENTITY Plib_class_reference;
    code         : STRING;
    supplier_bsu : STRING;
    version      : STRING;
  END_ENTITY;

END_SCHEMA; 


(*
   $Id: arm.exp,v 1.83 2012/10/11 05:49:26 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8218 - ISO/TS 10303-1737 Printed physical layout template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7613
*)

SCHEMA Printed_physical_layout_template_arm;

USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
USE FROM Layered_interconnect_complex_template_arm; -- ISO/TS 10303-1716
REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE pplt_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
    (Printed_part_template_terminal);
  END_TYPE;

  SUBTYPE_CONSTRAINT pplt_template_definition_subtypes FOR Template_definition; 
    ONEOF (Printed_part_template,
      Non_conductive_cross_section_template);
  END_SUBTYPE_CONSTRAINT;

  TYPE printed_part_template_terminal_class = ENUMERATION OF
    (curve_edge_segment,
     surface_point,
     area_edge_segment,
     surface_area);
  END_TYPE;

  ENTITY Basic_multi_stratum_printed_part_template 
    SUBTYPE OF (Printed_part_template);
      material_stack : Library_stack_model;
      reference_template : Stratum_feature_template;
  END_ENTITY;

  ENTITY Functional_usage_view_to_printed_part_template_terminal_assignment;
      physical_usage_view_terminal   : Printed_part_template_terminal;
      functional_usage_view_terminal : Scalar_terminal_definition;
    UNIQUE
      UR1 : functional_usage_view_terminal, physical_usage_view_terminal;
  END_ENTITY;

  ENTITY Multi_stratum_printed_part_template
    SUBTYPE OF (Structured_printed_part_template, Multi_stratum_structured_template);
  END_ENTITY;

  ENTITY Non_conductive_cross_section_template
    SUBTYPE OF (Template_definition);
      template_technology : OPTIONAL SET[1:?] OF Stratum_technology;
      nominal_width       : Length_data_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_connector_template
    SUBTYPE OF (Printed_part_template);
    INVERSE
      characterized_connector_terminal_relationship : SET[1:?] OF printed_connector_template_terminal_relationship FOR connector;
  END_ENTITY;

  ENTITY Printed_connector_template_terminal_relationship;
      join_terminal      : Printed_part_template_join_terminal;
      interface_terminal : Printed_part_template_interface_terminal;
      connector          : Printed_connector_template;
    UNIQUE
      UR1: join_terminal;
    WHERE
      WR1: join_terminal\Shape_element.containing_shape :=: connector;
      WR2: interface_terminal\Printed_part_template_interface_terminal.containing_shape :=: connector;
  END_ENTITY;

  ENTITY Printed_part_cross_section_template
    SUBTYPE OF (Printed_part_template);
      horizontal_material_link                 : OPTIONAL SET[1:?] OF Printed_part_template_material_link;
      vertical_material_link                   : OPTIONAL SET[1:?] OF Printed_part_template_material_link;
      transmission_line_model                  : Analytical_model_definition;
      maximum_transmission_line_characteristic : OPTIONAL SET[1:?] OF Analytical_model_application;
      minimum_transmission_line_characteristic : OPTIONAL SET[1:?] OF Analytical_model_application;
      width                                    : Length_tolerance_characteristic;
      unit_length                              : Length_data_element;
    INVERSE
      SELF\Printed_part_template.access_mechanisms : SET[1:?] OF Printed_part_cross_section_template_terminal FOR containing_shape;
    WHERE
      WR1 : SIZEOF(QUERY(hml <* horizontal_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['right']))) = 0;
      WR2 : SIZEOF(QUERY(hml <* horizontal_material_link | NOT (hml.subsequent_material\Shape_element.element_name IN ['left']))) = 0;
      WR3 : SIZEOF(QUERY(hml <* vertical_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['bottom']))) = 0;
      WR4 : SIZEOF(QUERY(hml <* vertical_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['top']))) = 0;
      WR5 : SIZEOF(QUERY(hml <* horizontal_material_link |
              (SIZEOF(QUERY(vml <* vertical_material_link |
                          (vml :=: hml)
                    )) > 0)
                  )) = 0;
      WR6 : NOT EXISTS(SELF\Product_view_definition.name);
      WR7 : EXISTS(horizontal_material_link) OR EXISTS(vertical_material_link);
      WR8 : NOT ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_CONNECTOR_TEMPLATE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Printed_part_cross_section_template_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Shape_element.containing_shape : Printed_part_cross_section_template;
      material_to_left_of_terminal   : OPTIONAL Printed_part_template_material_link;
      material_to_right_of_terminal  : OPTIONAL Printed_part_template_material_link;
      material_to_top_of_terminal    : OPTIONAL Printed_part_template_material_link;
      material_to_bottom_of_terminal : OPTIONAL Printed_part_template_material_link;
    UNIQUE
      UR1 : containing_shape,
        material_to_left_of_terminal,
        material_to_right_of_terminal,
        material_to_top_of_terminal,
        material_to_bottom_of_terminal;
    WHERE
      WR1 : (SELF\Printed_part_template_terminal.connection_zone_category = curve_edge_segment) OR (SELF\Printed_part_template_terminal.connection_zone_category = area_edge_segment);
      WR2 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_right_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_right_of_terminal);
      WR3 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_top_of_terminal);
      WR4 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_bottom_of_terminal);
      WR5 : NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_top_of_terminal);
      WR6 : NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_bottom_of_terminal);
      WR7 : NOT (EXISTS(material_to_top_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_top_of_terminal :<>: material_to_bottom_of_terminal);
      WR8 : NOT EXISTS(material_to_left_of_terminal) OR  
                      (material_to_left_of_terminal\Printed_part_template_material_link.precedent_material\Shape_element.element_name = 'right');
      WR9 : NOT EXISTS(material_to_right_of_terminal) OR
                      (material_to_right_of_terminal\Printed_part_template_material_link.subsequent_material\Shape_element.element_name = 'left');
     WR10 : NOT EXISTS(material_to_bottom_of_terminal) OR
                      (material_to_bottom_of_terminal\Printed_part_template_material_link.subsequent_material\Shape_element.element_name = 'top');
     WR11 : NOT EXISTS(material_to_top_of_terminal) OR
                      (material_to_top_of_terminal\Printed_part_template_material_link.precedent_material\Shape_element.element_name = 'bottom');
  END_ENTITY;

  ENTITY Printed_part_template
   ABSTRACT SUPERTYPE OF (ONEOF (Basic_multi_stratum_printed_part_template,
    Structured_printed_part_template,Printed_part_cross_section_template) ANDOR Printed_connector_template)
      SUBTYPE OF (Template_definition);
         implemented_function : OPTIONAL Functional_unit_usage_view;
      INVERSE
        access_mechanisms : SET [1:?] OF Printed_part_template_terminal FOR containing_shape;
      WHERE
        WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_part_template_connected_terminals_definition;
      name                : STRING;   
      connected_terminals : SET[2:?] OF Printed_part_template_terminal;
    DERIVE
      scope : Printed_part_template := connected_terminals[1].containing_shape;
    UNIQUE
      UR1 : name, scope;
    WHERE
      WR1 : SIZEOF(QUERY(t <* connected_terminals | t.associated_definition :<>: scope)) = 0;
  END_ENTITY;

  ENTITY Printed_part_template_interface_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Shape_element.containing_shape : Printed_connector_template;
    INVERSE
      external_connector_function : SET[1:?] OF printed_connector_template_terminal_relationship FOR interface_terminal;
  END_ENTITY;

  ENTITY Printed_part_template_join_terminal
    SUBTYPE OF (Printed_part_template_terminal);
    INVERSE
      internal_connector_function : SET[0:1] OF printed_connector_template_terminal_relationship FOR join_terminal;
  END_ENTITY;

  ENTITY Printed_part_template_material;
      width             : Length_tolerance_characteristic;
      required_material : Stratum_technology;
    INVERSE
      boundary : SET[0:4] OF template_material_cross_section_boundary FOR associated_definition;
    WHERE
      WR1 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'top')) <= 1;
      WR2 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'bottom')) <= 1;
      WR3 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'left')) <= 1;
      WR4 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'right')) <= 1;
  END_ENTITY;

  ENTITY Printed_part_template_material_link;
      precedent_material  : Template_material_cross_section_boundary;
      subsequent_material : Template_material_cross_section_boundary;
    UNIQUE
      UR1 : precedent_material, subsequent_material;
    WHERE
      WR1 : precedent_material :<>: subsequent_material;
      WR2 : precedent_material\Shape_element.element_name IN ['bottom', 'right'];
      WR3 : subsequent_material\Shape_element.element_name IN ['top', 'left'];
      WR4 : NOT((precedent_material\Shape_element.element_name IN ['bottom']) XOR (subsequent_material\Shape_element.element_name IN ['top']));
      WR5 : NOT((precedent_material\Shape_element.element_name IN ['right']) XOR (subsequent_material\Shape_element.element_name IN ['left']));
      WR6 : acyclic_printed_part_template_material_link(SELF,
        [subsequent_material], 
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE_MATERIAL_LINK');
  END_ENTITY;

  ENTITY Printed_part_template_terminal
    ABSTRACT SUPERTYPE OF (((ONEOF (Printed_part_template_join_terminal, Printed_part_template_interface_terminal))
      ANDOR (Printed_part_cross_section_template_terminal)) ANDOR Structured_printed_part_template_terminal)
    SUBTYPE OF (General_part_feature);
      SELF\Shape_element.containing_shape : Printed_part_template;
      connection_zone_category : printed_part_template_terminal_class;
      SELF\Definitional_shape_element.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
    INVERSE
      connection_requirement            : SET[0:1] OF printed_part_template_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal    : SET[0:1] OF functional_usage_view_to_printed_part_template_terminal_assignment FOR physical_usage_view_terminal;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, containing_shape;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Printed_tiebar_template
    SUBTYPE OF (Structured_printed_part_template);
      DERIVE
        terminal_location : SET OF Axis_placement_2d :=  pplt_get_tl_ap2d(SELF);
        passage_component_location : SET OF Axis_placement_2d :=  pplt_get_pcl_ap2d(SELF);
        tiebar_shape_model : SET OF Geometric_model := pplt_get_gm(SELF); 
      WHERE
        WR1: SIZEOF(['PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_CONNECTOR_TEMPLATE',
                     'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.NON_CONDUCTIVE_CROSS_SECTION_TEMPLATE',
                     'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_CROSS_SECTION_TEMPLATE'] * TYPEOF(SELF)) = 0;
        WR2: SIZEOF(QUERY(am <* SELF\Printed_part_template.access_mechanisms |
             NOT('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(am))
              )) = 0;
        WR3: (SIZEOF(passage_component_location) = 0) OR
          (SIZEOF(QUERY(pcl <* passage_component_location |
          (SIZEOF(QUERY(tsm <* tiebar_shape_model |
          (ap2d_geometrically_in_tiebar(pcl,tsm)))) > 0)
          )) = SIZEOF(passage_component_location));
        WR4: SIZEOF(QUERY(t <* SELF\Structured_template.templates | 'LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.STRATUM_FEATURE_TEMPLATE' IN TYPEOF(t\Template_location_in_structured_template.template))) > 0;
        WR5: SIZEOF(QUERY(spptt <* SELF\Printed_part_template.access_mechanisms | 
          NOT(SIZEOF(USEDIN(spptt,'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS')) = 1)
          )) = 0;
        WR6: SIZEOF(QUERY(spptt1 <* SELF\Printed_part_template.access_mechanisms |
          NOT(SIZEOF(QUERY(spptt2 <* SELF\Printed_part_template.access_mechanisms | 
          (bag_to_set(USEDIN(spptt1,'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS')) =
          bag_to_set(USEDIN(spptt2,'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS'))))) 
          = SIZEOF(SELF\Printed_part_template.access_mechanisms)))) = 0;
        WR7: SIZEOF(QUERY(tl <* terminal_location |
          (SIZEOF(QUERY(pcl <* passage_component_location |
          ((tl :=: pcl) OR 
          (SIZEOF(QUERY(tsm <* tiebar_shape_model |
          (ap2d_geometrically_in_tiebar(tl,tsm)))) > 0)))) > 0)
          )) = SIZEOF(terminal_location);
  END_ENTITY;
  
  ENTITY Single_stratum_printed_part_template
    SUBTYPE OF (Structured_printed_part_template, Single_stratum_structured_template);
  END_ENTITY;
  
  ENTITY Structured_printed_part_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_printed_part_template, 
      Multi_stratum_printed_part_template))
    SUBTYPE OF (Printed_part_template, Structured_template);
    WHERE
      WR1 : SIZEOF(QUERY(t <* access_mechanisms |
            NOT ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL'
                  IN TYPEOF(t)))) = 0;
      WR2 : SIZEOF(QUERY(t <* SELF\Structured_template.templates |
            'LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.STRUCTURED_TEMPLATE' IN TYPEOF(t.template))) = 0;
  END_ENTITY;

  ENTITY Structured_printed_part_template_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Shape_element.containing_shape : Structured_printed_part_template;
      associated_composition_relationship : Template_location_in_structured_template;
    WHERE
      WR1 : associated_composition_relationship\Template_location_in_structured_template.assembly :=: containing_shape;
      WR2 : TYPEOF(SELF) <> ['PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL',
                             'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE_TERMINAL',
                             'FEATURE_AND_CONNECTION_ZONE_ARM.DEFINITIONAL_SHAPE_ELEMENT',
                             'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT'];
  END_ENTITY;

  ENTITY Template_material_cross_section_boundary
    SUBTYPE OF (Non_feature_shape_element);
      associated_definition : Printed_part_template_material;
    UNIQUE
      UR1 : associated_definition, SELF\Shape_element.element_name;
    WHERE
      WR1 : SELF\Shape_element.element_name IN ['top', 'bottom', 'left', 'right'];
  END_ENTITY;

  FUNCTION acyclic_printed_part_template_material_link
    (relation : Printed_part_template_material_link; 
    relatives : SET[1:?] OF Template_material_cross_section_boundary; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Printed_part_template_material_link := [];
  END_LOCAL;

    IF relation.precedent_material IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_material,
      'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.' +
      'PRINTED_PART_TEMPLATE_MATERIAL_LINK.' +
      'SUBSEQUENT_MATERIAL')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_printed_part_template_material_link(x[i], relatives +
        relation.precedent_material, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

  FUNCTION pplt_get_pcl_ap2d(input : Printed_tiebar_template) : SET OF Axis_placement_2d; 
    LOCAL
	  ap2d : SET OF Axis_placement_2d := [];  --this gives us access to the information base
    END_LOCAL;
	RETURN(ap2d);
  END_FUNCTION;

  FUNCTION ap2d_geometrically_in_tiebar(input_1 : Axis_placement_2d;
                                        input_2 : Geometric_model) : LOGICAL;
    RETURN(TRUE);
  END_FUNCTION;

  FUNCTION pplt_get_tl_ap2d(input : Printed_tiebar_template) : SET OF Axis_placement_2d; 
    LOCAL
	  ap2d : SET OF Axis_placement_2d := [];  --this gives us access to the information base
    END_LOCAL;
	RETURN(ap2d);
  END_FUNCTION;

  FUNCTION pplt_get_gm(input : Printed_tiebar_template) : SET OF Geometric_model; 
    LOCAL
	  gm : SET OF Geometric_model := [];  --this gives us access to the information base
    END_LOCAL;
	RETURN(gm);
  END_FUNCTION;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.11 2012/10/11 05:49:17 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7933 - ISO/CD-TS - 10303-1810 Product and manufacturing information view context - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7370
*)
(* UNDER DEVELOPMENT *)
SCHEMA Product_and_manufacturing_information_view_context_arm;

USE FROM Part_view_definition_arm; -- ISO/TS 10303-1023
USE FROM Document_assignment_arm; -- ISO/TS 10303-1122

TYPE mbgdt_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select  WITH (
  Model_based_view_context,
  Gdt_representation_view_context,
  Model_based_3d_annotation_presentation_view_context);
END_TYPE;

ENTITY Model_based_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based product geometry';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;
-- TYPE dimensioning_document = ENUMERATION (ISO, ASME);
-- END_TYPE;

ENTITY Gdt_representation_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'geometrical dimensioning and tolerancing representation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
--  dimensioning_standard : dimensioning_document := ISO; -- some expression through the documents, see wr4, may help writing further rules
-- note: when we write the rules we will decide which derived attribute to use
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101 or ASME Y14.5 as associated dimension standard document
END_ENTITY;

ENTITY Model_based_3d_annotation_presentation_view_context
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based 3D annotation presentation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101, ISO 16792, ASME Y14.41 or ASME Y14.5 as associated model standard document
END_ENTITY;

ENTITY Surface_finish_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'surface finish';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Machining_feature_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'machining feature';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Material_specification_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'material specification';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Process_state_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'process state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Kinematic_mechanism_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic_mechanism';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Kinematic_state_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;

ENTITY Motion_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'motion';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;

SUBTYPE_CONSTRAINT pmi_part_view_definition_context FOR Part_view_definition_context;
  ONEOF (
    Gdt_representation_view_context, 
    Kinematic_mechanism_context,
    Kinematic_state_context,
    Model_based_view_context, 
    Model_based_3d_annotation_presentation_view_context,
    Motion_context,
    Surface_finish_view_context,
    Machining_feature_view_context,
    Material_specification_view_context,
    Process_state_view_context);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.5 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7936 - ISO/CD-TS - 10303-1811 Product and manufacturing information with nominal 3d models - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7373
*)

SCHEMA Product_and_manufacturing_information_with_nominal_3d_models_arm;

USE FROM Product_and_manufacturing_information_view_context_arm;
USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Advanced_boundary_representation_arm; -- ISO/TS 10303-1514
USE FROM Manifold_surface_arm; -- ISO/TS 10303-1509
USE FROM Manifold_subsurface_arm; -- ISO/TS 10303-1702
USE FROM Construction_geometry_arm; -- ISO/TS 10303-1131

TYPE advanced_face_model = SELECT (
  Advanced_brep_shape_representation,
  Manifold_surface_shape_representation,
  Manifold_subsurface_model);
END_TYPE;

ENTITY Nominal_3d_model_shape
  SUBTYPE OF (Associated_item_shape);
DERIVE
   SELF\Associated_item_shape.associated_model : advanced_face_model := SELF\Associated_item_shape.association\Property_definition_representation.used_representation;
WHERE
  WR1: 'PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(SELF\Item_shape.described_element\Product_view_definition.initial_context);
  WR2: EXISTS(associated_model);
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.20 2012/10/11 05:49:16 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7792 - ISO/TS 10303-1103 Product class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6255
*)

SCHEMA Product_class_arm;

USE FROM Identification_assignment_arm;

USE FROM Product_concept_identification_arm;

USE FROM Group_arm;

TYPE expression_operator = ENUMERATION OF (or_operator, and_operator, oneof_operator, not_operator);
END_TYPE;

TYPE specification_operand_select = SELECT
		(Specification_expression, Specification);
END_TYPE;

TYPE id_for_class = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (product_class);
END_TYPE; 

TYPE specification_for_category = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item;
END_TYPE;

 ENTITY Class_category_association;
  associated_product_class : Product_class;
  mandatory : BOOLEAN;
  associated_category : Specification_category;
 END_ENTITY;

 ENTITY Class_condition_association;
  condition_type : STRING;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_condition : Specification_expression;
 END_ENTITY;

 ENTITY Class_inclusion_association;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_inclusion : Specification_inclusion;
 END_ENTITY;

 ENTITY Class_specification_association;
  associated_product_class : Product_class;
  association_type : STRING;
  associated_specification : Specification;
 END_ENTITY;

ENTITY Product_class
  SUBTYPE OF (Product_concept);
  version_id : OPTIONAL STRING;
  level_type : OPTIONAL STRING;
WHERE
WR1: NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY;

 ENTITY Product_class_relationship;
  description : OPTIONAL STRING;
  relating : Product_class;
  related : Product_class;
  relation_type : STRING;
 END_ENTITY;

 ENTITY Specification;
  id : STRING;
  version_id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  category : Specification_category;
  package : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category;
  id : STRING;
  description : STRING;
  implicit_exclusive_condition : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category_hierarchy;
  sub_category : Specification_category;
  super_category : Specification_category;
 END_ENTITY;

 ENTITY Specification_expression;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  operation : expression_operator;
  operand : SET[1:?] OF specification_operand_select;
 WHERE
 WR1: (operation <> not_operator) OR (SIZEOF(operand)=1); 
 END_ENTITY;

 ENTITY Specification_inclusion;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  if_condition : specification_operand_select;
  included_specification : specification_operand_select;
 END_ENTITY;


END_SCHEMA;

(*
 $Id: arm.exp,v 1.5 2004/10/22 14:44:52 darla Exp $
 ISO TC184/SC4/WG12 N1177 - ISO/TS 10303-1060 Product concept identification - EXPRESS ARM
*)
   
SCHEMA Product_concept_identification_arm;
   
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;

   
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;

   
END_SCHEMA;

(*
$Id: arm.exp,v 1.19 2009/08/11 07:57:31 robbod Exp $
ISO TC184/SC4/WG12 N6065 - ISO/TS 10303-1017 Product identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2925
*) 


SCHEMA Product_identification_arm;


ENTITY Product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Product_identification_arm
(*
   $Id: arm.exp,v 1.22 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7750 - ISO/TS 10303-1063 Product occurrence - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4266
*) 

SCHEMA Product_occurrence_arm;

  USE FROM Assembly_structure_arm;	-- ISO/TS 10303-1026
  USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
  USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106	
  USE FROM Specified_product_arm;	-- ISO/TS 10303-1104	
  USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023

  TYPE extended_value_with_unit = EXTENSIBLE SELECT (
    Value_with_unit, 
    Value_limit, 
    Value_range);
  END_TYPE;

  ENTITY Definition_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      derived_from: Part_view_definition;
    WHERE
      WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
  END_ENTITY;

  ENTITY Product_occurrence
    ABSTRACT SUPERTYPE OF ((ONEOF (Definition_based_product_occurrence,
         Specification_based_product_occurrence)) AND 
         ONEOF (Product_occurrence_with_quantity, 
         Single_instance))
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Part_version;
    DERIVE
      SELF\Product_view_definition.initial_context : View_definition_context := View_definition_context('','',?);
    INVERSE
      occurrence_contexts : SET [0:?] OF Product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0:?] OF View_definition_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(occurrence_contexts) + SIZEOF(view_definition_contexts) >= 1;
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
      WR3: SIZEOF(QUERY( oc <* occurrence_contexts |
            NOT( NOT('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(oc)) OR
                 NOT EXISTS(oc\Assembly_component_relationship.quantity))
               )) = 0;
  END_ENTITY;

  ENTITY Product_occurrence_with_quantity
    ABSTRACT SUPERTYPE OF (ONEOF (Quantified_instance, Selected_instance))
    SUBTYPE OF (Product_occurrence);
      occurrence_quantity : OPTIONAL extended_value_with_unit;
  END_ENTITY;

  ENTITY Quantified_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
  END_ENTITY;

  ENTITY Selected_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      quantity_criterion : OPTIONAL STRING;
  END_ENTITY;

  ENTITY Single_instance
    SUBTYPE OF (Product_occurrence);
  END_ENTITY;

  ENTITY Specification_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      SELF\Product_view_definition.defined_version : Specification_based_part_version;
  END_ENTITY;

  ENTITY Specification_based_part_version
    SUBTYPE OF (Specification_based_product_version, Part_version);
  END_ENTITY;
  

END_SCHEMA; 
(*
 $Id: arm.exp,v 1.7 2006/03/24 18:58:39 thendrix Exp $
 ISO TC184/SC4/WG12 N4360 - ISO/TS 10303-1046 Product replacement - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1144
*)
  
SCHEMA Product_replacement_arm;

USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026
USE FROM Product_identification_arm; -- ISO/TS 10303-1017
   
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;

   
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;

   
END_SCHEMA;
(*
 $Id: arm.exp,v 1.11 2004/02/29 13:11:05 robbod Exp $
 ISO TC184/SC4/WG12 N2546 - ISO/TS 10303-1134 Product structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1670
*) 


SCHEMA Product_structure_arm;

USE FROM Assembly_structure_arm;    -- ISO/TS 10303-1026

USE FROM Contextual_shape_positioning_arm;    -- ISO/TS 10303-1027

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Part_definition_relationship_arm;    -- ISO/TS 10303-1055

USE FROM Product_replacement_arm;    -- ISO/TS 10303-1046

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Single_part_representation_arm;    -- ISO/TS 10303-1133


TYPE ps_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (View_definition_relationship);
END_TYPE; 

ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;

END_SCHEMA;  -- Product_structure_arm

(*
 $Id: arm.exp,v 1.6 2004/01/13 10:15:26 robbod Exp $
 ISO TC184/SC4/WG12 N2527 - ISO/TS 10303-1018 Product version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1105
*) 


SCHEMA Product_version_arm; 

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017


ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;

END_SCHEMA;  -- Product_version_arm

(*
 $Id: arm.exp,v 1.10 2006/03/24 19:02:40 thendrix Exp $
 ISO TC184/SC4/WG12 N4354 - ISO/TS 10303-1020 Product version relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2937
*)

SCHEMA Product_version_relationship_arm; 

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;

END_SCHEMA;  -- Product_version_relationship_arm

(*
 $Id: arm.exp,v 1.8 2006/03/24 19:03:52 thendrix Exp $
 ISO TC184/SC4/WG12 N4351 - ISO/TS 10303-1019 Product view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1532
*)
   
SCHEMA Product_view_definition_arm;

USE FROM Product_version_arm;
         
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
   
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
   
END_SCHEMA;

(*
 $Id: arm.exp,v 1.14 2012/11/09 21:40:59 thomasrthurman Exp $
ISO TC184/SC4/WG12 N8289 - ISO/TS 10303-1034 Product view definition properties - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N3227
*) 


SCHEMA Product_view_definition_properties_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


TYPE product_property_assignment = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON property_assignment_select WITH 
   (Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

END_SCHEMA;  -- Product_view_definition_properties_arm
(*
   $Id: arm.exp,v 1.2 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7768 - ISO/TS 10303-1823 Product view definition reference - EXPRESS ARM*)

SCHEMA Product_view_definition_reference_arm;

	USE FROM Support_resource_arm; -- ISO/TS 10303-1800
	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128
	USE FROM Product_view_definition_arm;	-- ISO/TS 10303-1019

 	TYPE pie_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Generic_product_view_definition_reference);
	END_TYPE;

  ENTITY Generic_product_view_definition_reference
    ABSTRACT SUPERTYPE OF ( ONEOF ( Product_view_definition_reference, 
                  Product_view_definition_reference_with_local_representation) );
    source : External_source_identification;
  END_ENTITY;

  ENTITY Product_view_definition_reference
    SUBTYPE OF (Generic_product_view_definition_reference);
    product_id : identifier;
    product_definition_formation_id : identifier;
    product_definition_id : identifier;
    id_owning_organization_name : OPTIONAL label;
  END_ENTITY;

  ENTITY Product_view_definition_reference_with_local_representation
    SUBTYPE OF (Generic_product_view_definition_reference, Product_view_definition);
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.14 2012/09/22 22:35:47 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N2939 - ISO/TS 10303-1041 Product view definition relationship - EXPRESS ARM
*)


SCHEMA Product_view_definition_relationship_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019
USE FROM Product_view_definition_reference_arm; -- ISO/TS 10303-1738

TYPE as_product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : as_product_view_definition_or_reference;
  related_view : as_product_view_definition_or_reference;
END_ENTITY;

ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;

END_SCHEMA;  -- Product_view_definition_relationship_arm
(*
   $Id: arm.exp,v 1.23 2010/01/26 19:42:15 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N7034 - ISO/TS 10303-1739 Production rule - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6540 
*)

SCHEMA Production_rule_arm;

	USE FROM Specification_document_arm;    --  ISO/TS 10303-1747
	USE FROM Software_arm;	-- ISO/TS 10303-1746

	USE FROM Date_time_assignment_arm; -- ISO/TS 10303-1014
	USE FROM Activity_arm; -- ISO/TS 10303-1047

    USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021
    USE FROM Product_identification_arm; -- ISO/TS 10303-1017

    REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
    REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765


TYPE pr_identification_item = SELECT BASED_ON identification_item WITH 
   (Rule_set);
END_TYPE; 

TYPE pr_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH
   (Rule_action);
END_TYPE;


TYPE clause_select = SELECT (Simple_clause, Complex_clause);
END_TYPE;

TYPE constants = EXTENSIBLE SELECT (any_number_value, any_string_value, Logical_representation_item);
END_TYPE;

TYPE function_symbol = SELECT (any_string_value, built_in_functions);
END_TYPE;

TYPE built_in_functions = EXTENSIBLE ENUMERATION OF (attr_val);
END_TYPE;

TYPE expression_syntax = EXTENSIBLE ENUMERATION OF (express);
END_TYPE;

TYPE pr_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
   (Rule_set);
END_TYPE; 

TYPE predicate_symbol = STRING;
END_TYPE;

TYPE scope_select = SELECT (Rule_definition, Rule_set, Rule_set_group);
END_TYPE;

TYPE term_select = SELECT (Symbol, constants, Func, Scalar_variable, Row_value, Row_variable); 
END_TYPE;


ENTITY Abstract_variable
  ABSTRACT SUPERTYPE OF (ONEOF (Scalar_variable, Row_variable));
  name : STRING;
  scope : scope_select;
 UNIQUE 
  UR1 : name, scope;
END_ENTITY;

ENTITY Atomic_formula
  ABSTRACT SUPERTYPE OF (ONEOF (Rule_condition, Ground_fact));
  predicate_symbol : predicate_symbol;  
  terms : LIST OF term_select;
END_ENTITY;

ENTITY Attribute_assertion
  SUBTYPE OF (Fact_type);
   entity_type : STRING;
   attribute : STRING;
END_ENTITY; 

ENTITY Back_chaining_rule
  SUBTYPE OF (Rule_definition);
  head : Rule_condition;
  body : LIST OF Rule_condition;
 WHERE
  WR1: SELF.head.positive = TRUE;
  WR2:  local_vars_of(SELF.head) <= local_vars_of(SELF.body);
END_ENTITY;

ENTITY Complex_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Complex_conjunctive_clause, Complex_disjunctive_clause));
  clauses : LIST [2:?] OF clause_select;
END_ENTITY;

ENTITY Complex_conjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Complex_disjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Entity_assertion
  SUBTYPE OF (Fact_type);
END_ENTITY;

ENTITY Enum_reference_prefix;
 prefix : STRING;
END_ENTITY;

ENTITY Extent;
  variable_id : OPTIONAL STRING;
  source : STRING;
  query_expression : STRING;
  syntax : OPTIONAL expression_syntax;
END_ENTITY;

ENTITY Fact_type
  ABSTRACT SUPERTYPE OF (ONEOF (Entity_assertion, Attribute_assertion));
   source : Extent;
   predicate_symbol : STRING;
END_ENTITY;

ENTITY Forward_chaining_rule
  SUBTYPE OF (Rule_definition);
  premise : clause_Select; 
  conclusion : Literal_conjunction;
  WHERE
  WR1:  local_vars_of(SELF.conclusion) <= local_vars_of(SELF.premise);
END_ENTITY;

ENTITY Func;
 func_sym : function_symbol;
 terms : LIST OF term_select;
END_ENTITY;

ENTITY Global_assignment;
  variable : Abstract_variable;
  val : term_select;
 WHERE
  WR1: NOT(contains_variable(SELF.val));
END_ENTITY;

ENTITY Ground_fact
 SUBTYPE OF (Atomic_formula);
 WHERE
  WR1: SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r))) = 0;
END_ENTITY;

ENTITY Literal_conjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Literal_disjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Row_value;
  values : LIST OF term_select;
 WHERE
  WR1: SIZEOF(QUERY(v <* SELF.values | contains_variable(v))) = 0;
  WR2: SIZEOF(QUERY(v <* SELF.values | 'PRODUCTION_RULE_ARM.ROW_VALUE' IN TYPEOF(v))) = 0;
END_ENTITY;

ENTITY Row_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Rule_action
   ABSTRACT SUPERTYPE OF (ONEOF (Rule_submission,
                                 Rule_adoption,
                                 Rule_rejection,
                                 Rule_supersedence,
                                 Rule_creation,
                                 Rule_expiration,
                                 Rule_change_request,
                                 Rule_request,
                                 Rule_modification));
   subject_rule : Rule_version;
DERIVE
   subject_action_assignment : SET[0:?] OF Organization_or_person_in_organization_assignment := 
         bag_to_set(QUERY(temp <* USEDIN ( SELF , 'PERSON_ORGANIZATION_ASSIGNMENT_ARM.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS' ) 
                    | ( temp.role = 'subject action assignment')));
  UNIQUE
   UR1: SELF\Rule_action.subject_rule, SELF\Rule_action.subject_action_assignment;
  WHERE
   WR1: EXISTS (subject_action_assignment) AND (SIZEOF(subject_action_assignment) = 1 );
END_ENTITY;

ENTITY Rule_adoption
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_change_request
   SUBTYPE OF (Rule_action);
   change_reason : STRING;
END_ENTITY;

ENTITY Rule_condition
 SUBTYPE OF (Atomic_formula);
  positive : BOOLEAN;
END_ENTITY;

ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
END_ENTITY;
  
ENTITY Rule_definition
  ABSTRACT SUPERTYPE OF (ONEOF (Forward_chaining_rule, Back_chaining_rule))
  SUBTYPE OF (Rule_software_definition);
END_ENTITY; 

ENTITY Rule_expiration
   SUBTYPE OF (Rule_action);
   expiration_rationale : STRING;
END_ENTITY;

ENTITY Rule_justification
   SUBTYPE OF (Rule_action);
   justified_action : Rule_action;
   justification_rationale : STRING;
WHERE
   WR1: SELF <> justified_action ;
END_ENTITY;

ENTITY Rule_modification
   SUBTYPE OF (Rule_action);
   modification_rationale : Rule_change_request;
END_ENTITY;

ENTITY Rule_priority;
   priority : INTEGER;
   prioritized_rule : Rule_definition;
WHERE
   WR1: priority >= 0 ;
END_ENTITY;

ENTITY Rule_product
   SUBTYPE OF (Software);
END_ENTITY;

ENTITY Rule_rejection
   SUBTYPE OF (Rule_action);
   rejection_reason : STRING;
END_ENTITY;

ENTITY Rule_request
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_set
   SUBTYPE OF (Rule_software_definition);
   conflict_resolution_strategy : OPTIONAL STRING;
   rule_member : SET[1:?] OF Rule_priority;
 DERIVE  
   engine: SET[1:1] OF Document_definition :=
		get_document_definition(SELF, 'engine', 
		'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
 INVERSE
   purpose : Identification_assignment FOR items;
 WHERE
   WR1: purpose.role = 'purpose' ;
END_ENTITY;

ENTITY Rule_set_group
  SUBTYPE OF (Rule_software_definition);
  elements : SET[2:?] OF Rule_set;
END_ENTITY;

ENTITY Rule_software_definition
   SUPERTYPE OF (ONEOF (Rule_definition,
                       Rule_set_group,
                       Rule_set))
   SUBTYPE OF (Software_definition);
   SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY;

ENTITY Rule_submission
   SUBTYPE OF (Rule_action);
   submission_rationale : STRING;
END_ENTITY;

ENTITY Rule_supersedence
   SUBTYPE OF (Rule_action);
   superseded_rule : Rule_version;
END_ENTITY;

ENTITY Rule_version
   SUBTYPE OF (Software_version);
   SELF\Product_version.of_product : Rule_product;
INVERSE
   management_action : SET[1:?] OF Rule_action FOR subject_rule;
   product_definition : SET[1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY;

ENTITY Scalar_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Simple_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Literal_conjunction, Literal_disjunction));
  formulas : LIST [1:?] OF Rule_condition;
END_ENTITY;

ENTITY Symbol
  SUBTYPE OF(Representation_item);
 UNIQUE
  UR1 : SELF\Representation_item.name;
END_ENTITY;

FUNCTION contains_variable (x : Term_select) : BOOLEAN;
  IF ('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(x)) THEN RETURN (TRUE);
      ELSE IF (('PRODUCTION_RULE_ARM.FUNC' IN TYPEOF(X)) AND
              (SIZEOF(QUERY(y <* x.terms | contains_variable(y))) > 0)) 
              THEN RETURN (TRUE);
              ELSE RETURN (FALSE);
           END_IF;
  END_IF;
END_FUNCTION;

FUNCTION local_vars_aux (thing : GENERIC; accum : SET [0:?] OF Scalar_variable) 
                                                : SET [0:?] OF Scalar_variable;
  LOCAL i,j,k : INTEGER; END_LOCAL;
  IF (('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(thing)) AND 
      ('PRODUCTION_RULE_ARM.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN accum := accum + thing;
   ELSE IF ('PRODUCTION_RULE_ARM.RULE_CONDITION' IN TYPEOF(thing))
        THEN REPEAT i := 1 TO HIINDEX(thing\Atomic_formula.terms);
                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);
             END_REPEAT;
        ELSE IF ('PRODUCTION_RULE_ARM.SIMPLE_CLAUSE' IN TYPEOF(thing))
             THEN REPEAT j := 1 TO HIINDEX(thing.formulas);
                        accum := local_vars_aux(thing.formulas[j],accum);
                  END_REPEAT;
             ELSE IF ('PRODUCTION_RULE_ARM.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);
                        accum := local_vars_aux(thing.clauses[k],accum);
                       END_REPEAT;
                  END_IF;
             END_IF;
        END_IF;
  END_IF;
  RETURN(accum);
END_FUNCTION;

FUNCTION local_vars_of (thing : GENERIC) : SET [0:?] OF Scalar_variable;
  LOCAL
    accum : SET [0:?] OF Scalar_variable := [];
  END_LOCAL;
  RETURN (local_vars_aux(thing, accum));
END_FUNCTION;

RULE max_one_entity_prefix FOR (Enum_reference_prefix);
 WHERE
   WR1: SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE)) <= 1;
END_RULE;

RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
   WR1: SIZEOF (QUERY ( pvd <* Product_view_definition | ( NOT('PRODUCTION_RULE_ARM.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN TYPEOF(pvd))) 
                       AND ('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF (pvd . defined_version)))) = 0 ;
END_RULE; 

RULE rule_version_constraint FOR (Product_version);
WHERE
   WR1: SIZEOF (QUERY(pv <* Product_version | (NOT('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF(pv))) 
                      AND ( 'PRODUCTION_RULE_ARM.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product)))) = 0 ;
END_RULE;

END_SCHEMA; 

(*
$Id: arm.exp,v 1.4 2009/08/11 07:58:27 robbod Exp $
ISO TC184/SC4/WG12 N6582 - ISO/TS 10303-1399 Property as definition - EXPRESS ARM
*) 


SCHEMA Property_as_definition_arm;

USE FROM Product_view_definition_properties_arm;    -- ISO/TS 10303-1034


TYPE representation_proxy_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Representation_proxy_item
  SUBTYPE OF (Representation_item);
  item : representation_proxy_select;
END_ENTITY;

ENTITY Single_property_is_definition
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Product_view_definition;
UNIQUE
  UR1: SELF\Assigned_property.described_element;
END_ENTITY;

END_SCHEMA;  -- Property_as_definition_arm

(*
 $Id: arm.exp,v 1.17 2012/10/11 05:49:17 liutkuviene Exp $
 ISO TC184/SC4/WG12 N8041 - ISO/TS 10303-1030 Property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7457
*)


SCHEMA Property_assignment_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE property_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE represented_definition = EXTENSIBLE GENERIC_ENTITY SELECT (
    Independent_property,
    Assigned_property);
END_TYPE;

ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;

ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;

ENTITY Property_definition_representation
  ABSTRACT SUPERTYPE;
    name : OPTIONAL STRING;
    description : OPTIONAL STRING;
    definition : represented_definition;
    used_representation : Representation;
END_ENTITY;

ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Assigned_property;
END_ENTITY;

END_SCHEMA;  -- Property_assignment_arm
(*
   $Id: arm.exp,v 1.9 2012/10/06 20:09:56 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7723 - ISO/TS 10303-1782 Qualified measure - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6558
*)

SCHEMA Qualified_measure_arm;

USE FROM Measure_representation_arm; -- ISO/TS 10303-1118

  CONSTANT
    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];
  END_CONSTANT;

  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier,
     Value_format_type_qualifier);
  END_TYPE;

  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;

  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
    WHERE
      WR1 : NOT('MEASURE_REPRESENTATION_ARM.'+'NUMERICAL_ITEM_WITH_UNIT' IN TYPEOF(qualified_measure));
      WR2 : SIZEOF(QUERY(temp <* qualifiers | 
        'QUALIFIED_MEASURE_ARM.PRECISION_QUALIFIER' IN TYPEOF(temp))) < 2;      
  END_ENTITY;

  ENTITY Precision_qualifier;
     significant_digits : INTEGER;
  END_ENTITY;

  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;

  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 

  ENTITY Qualified_representation_item 
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'QUALIFIED_MEASURE_ARM.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 

  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;

  ENTITY Representation_with_uncertainty
    SUBTYPE OF (Representation);
    uncertainty : SET[1:?] OF Uncertainty_with_unit;
  END_ENTITY;

  ENTITY Standard_uncertainty
    SUPERTYPE OF (Expanded_uncertainty)
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;

  ENTITY Type_qualifier
    ABSTRACT SUPERTYPE OF(Pre_defined_type_qualifier);
    name : STRING;
  END_ENTITY;

  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (Standard_uncertainty,
      Qualitative_uncertainty));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;

  ENTITY Value_format_type_qualifier;
     value_format_type : STRING;
    WHERE
     WR1: LENGTH(value_format_type) <= 80;
  END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.18 2010/06/09 21:37:43 philsp Exp $
ISO TC184/SC4/WG12 N7131 - ISO/TS 10303-1233 Requirement assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6129
*) 


SCHEMA Requirement_assignment_arm;

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


TYPE requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE requirement_satisfaction_item = EXTENSIBLE GENERIC_ENTITY SELECT
   (requirement_assignment_item);
END_TYPE; 

TYPE requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Requirement_assignment;
  id : STRING;
  description : OPTIONAL STRING;
  assigned_requirement : Requirement_view_definition;
  assigned_to : requirement_assignment_item;
END_ENTITY;

ENTITY Requirement_satisfied_by;
  id : STRING;
  description : OPTIONAL STRING;
  satisfied_by : requirement_satisfaction_item;
  satisfied_requirement : Requirement_view_definition;
  related_assignment : OPTIONAL Requirement_assignment;
END_ENTITY;

ENTITY Requirement_source;
  id : STRING;
  description : OPTIONAL STRING;
  source : requirement_source_item;
  sourced_requirement : Requirement_view_definition;
END_ENTITY;

END_SCHEMA;  -- Requirement_assignment_arm
(*
   $Id: arm.exp,v 1.73 2009/12/23 13:28:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N7037 - ISO/TS 10303-1740 Requirement decomposition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6543
*)

SCHEMA Requirement_decomposition_arm;

	USE FROM Conductivity_material_aspects_arm;	-- ISO/TS 10303-1756
	USE FROM Elemental_geometric_shape_arm;	-- ISO/TS 10303-1004
	USE FROM Functional_specification_arm;	-- ISO/TS 10303-1679
	USE FROM Production_rule_arm;	-- ISO/TS 10303-1739
	USE FROM Requirement_view_definition_relationship_arm;  -- ISO/TS 10303-1142

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
	REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765

    TYPE rd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH
     (Group,
      Group_relationship);
    END_TYPE;

    TYPE material_conductivity_classification = ENUMERATION OF
     (conductive,
      resistive,
      semi_conductive,
      non_conductive);
    END_TYPE;

	TYPE characteristic_select = SELECT
      (characteristic,
       Boolean_representation_item,
       Date_time_representation_item,
       Integer_representation_item,
       Logical_representation_item,
       Property_value_representation,
       Rational_representation_item,
       Real_representation_item,
       Sequence_representation_item,
       Set_representation_item);
	END_TYPE; 

	TYPE rd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Predefined_requirement_view_definition);
	END_TYPE; 

	TYPE rd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Predefined_requirement_view_definition);
	END_TYPE;

	TYPE rd_property_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON property_assignment_select WITH
		(Requirement_view_definition);
	END_TYPE;

	TYPE relationship_operation = ENUMERATION OF
    	(and_operation,
		or_operation);
	END_TYPE;

  ENTITY Constraint_occurrence
    SUPERTYPE OF (View_based_constraint_occurrence)
    SUBTYPE OF (Predefined_requirement_view_definition);
      logical_relation : OPTIONAL Complex_clause;
    WHERE
      WR1 : (('REQUIREMENT_DECOMPOSITION_ARM.' + 'VIEW_BASED_CONSTRAINT_OCCURRENCE') IN TYPEOF(SELF)) OR EXISTS(logical_relation);
      WR2 : NOT EXISTS(SELF\Product_view_definition.id);
  END_ENTITY;

  ENTITY Design_characteristic_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
  END_ENTITY;

  ENTITY View_based_constraint_occurrence
    SUPERTYPE OF (Shape_and_view_based_constraint_occurrence)
    SUBTYPE OF (Constraint_occurrence);
      constraining_part : Product_view_definition;
  END_ENTITY;

  ENTITY Material_electrical_conductivity_requirement
    SUBTYPE OF (Predefined_requirement_view_definition);
      electrical_conductivity_characteristic : material_conductivity_classification;
  END_ENTITY;

  ENTITY Operational_requirement_relationship
     SUBTYPE OF (Assigned_property, View_definition_relationship);
       SELF\View_definition_relationship.relating_view RENAMED operand_1 : Requirement_view_definition;
       SELF\View_definition_relationship.related_view RENAMED operand_2  : Requirement_view_definition;
       SELF\Assigned_property.described_element RENAMED result           : Requirement_view_definition;
       relationship_type                                                 : relationship_operation;
    WHERE
      WR1 : operand_1 :<>: operand_2;
  END_ENTITY;

  ENTITY Predefined_requirement_view_definition
	SUPERTYPE OF(ONEOF(Constraint_occurrence,
		 Design_characteristic_occurrence))
    SUBTYPE OF(Requirement_view_definition);
      required_analytical_representation  : OPTIONAL SET[1:?] OF Analytical_model_application;
      required_functional_specification   : OPTIONAL SET[1:?] OF Functional_specification;
      required_characteristic             : OPTIONAL characteristic_select;
    DERIVE
		requirement_specification: SET[1:?] OF Document_definition :=
  			get_document_definition(SELF, 'requirement specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SPECIFICATION_DEFINITION');
		reference_clause: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'reference clause', 
  			'SPECIFICATION_DOCUMENT_ARM.DOCUMENT_DEFINITION');
   INVERSE
	  required_material : SET [0:1] OF material_identification FOR items;      
    WHERE  
	  WR1 : NOT (SIZEOF(required_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (required_material));
      WR2: SELF\Product_view_definition.initial_context.application_domain IN 
          ['mechanical', 'thermal', 'electromechancial', 'electromagnetic compatibility', 'electrical'];
      WR3: SELF\Product_view_definition.initial_context.life_cycle_stage in ['design', 'qualify', 'inspect', 'test'];
      WR4 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Shape_and_view_based_constraint_occurrence
    SUBTYPE OF (View_based_constraint_occurrence);
      constraining_shape : SET[1:?] OF Geometric_model;
    WHERE
      WR1 : valid_constraining_shape(constraining_shape,
 SELF\View_based_constraint_occurrence.constraining_part);
  END_ENTITY;

  FUNCTION valid_constraining_shape(
    sd   : SET OF Geometric_model ;
    eepd : Product_view_definition
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

FUNCTION get_rvd(
	input : requirement_assignment_item;
	id : STRING
) : SET OF Requirement_view_definition; 

LOCAL
	rvd : SET[0:?] OF Requirement_view_definition := [];  --this gives us access to the information base
	ra : SET[0:?] OF Requirement_assignment :=[];
END_LOCAL;
	ra := bag_to_set((QUERY(rai <* USEDIN (input, 'REQUIREMENT_ASSIGNMENT_ARM.'+
	'REQUIREMENT_ASSIGNMENT.ASSIGNED_TO') | (rai.id = id))));

	-- iterate over ra
	REPEAT i := 1 to SIZEOF(ra) by 1;
		rvd := rvd + ra[i].assigned_requirement;
	END_REPEAT;

	RETURN(rvd);
END_FUNCTION;


END_SCHEMA;

(*
 $Id: arm.exp,v 1.17 2008/10/06 19:13:13 philsp Exp $
 ISO TC184/SC4/WG12 N5944 - ISO/TS 10303-1140 Requirement identification and version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5488
*) 


SCHEMA Requirement_identification_and_version_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

TYPE requirement_identification_and_version_identification_item = SELECT BASED_ON identification_item WITH
  (Requirement,
   Requirement_version);
END_TYPE;

ENTITY Requirement
SUBTYPE OF (Product);
END_ENTITY;

ENTITY Requirement_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Requirement;
END_ENTITY;

ENTITY Requirement_version_relationship
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version RENAMED predecessor : Requirement_version;
  SELF\Product_version_relationship.related_version RENAMED successor : Requirement_version;
END_ENTITY;

END_SCHEMA;

(*
$Id: arm.exp,v 1.14 2012/11/09 21:40:58 thomasrthurman Exp $
ISO TC184/SC4/WG12 N8295 - ISO/TS 10303-1141 Requirement view definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6842
*) 


SCHEMA Requirement_view_definition_arm;

USE FROM Property_as_definition_arm; -- ISO/TS 10303-1399
USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Requirement_identification_and_version_arm;    -- ISO/TS 10303-1140


ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;

ENTITY Single_requirement_view_definition
  SUBTYPE OF (Requirement_view_definition);
INVERSE
  definition : Single_property_is_definition FOR described_element;
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_arm

(*
 $Id: arm.exp,v 1.12 2011/08/13 13:23:18 lothartklein Exp $
 ISO TC184/SC4/WG12 N6132 - ISO/TS 10303-1142 Requirement view definition relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3136
*) 


SCHEMA Requirement_view_definition_relationship_arm;

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


ENTITY Requirement_collection_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
  SELF\Requirement_view_definition_relationship.primary RENAMED collection : Requirement_view_definition;
  SELF\Requirement_view_definition_relationship.secondary RENAMED member : Requirement_view_definition;
END_ENTITY;

ENTITY Requirement_view_definition_relationship
  SUPERTYPE OF (ONEOF (Requirement_collection_relationship,
                       Requirement_precedence_relationship,
                       Tracing_relationship))
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED primary : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED secondary : Requirement_view_definition;
WHERE
  WR1: primary :<>: secondary;
END_ENTITY;

ENTITY Tracing_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
  SELF\Requirement_view_definition_relationship.primary RENAMED traces_from : Requirement_view_definition;
  SELF\Requirement_view_definition_relationship.secondary RENAMED traces_to : Requirement_view_definition;
END_ENTITY;

ENTITY Requirement_precedence_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_relationship_arm

(*
   $Id: arm.exp,v 1.20 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8044 - ISO/TS 10303-1742 Shape composition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7460
*)

SCHEMA Shape_composition_arm; 

  	USE FROM Shape_property_assignment_arm;	-- ISO/TS 10303-1032

  ENTITY Composite_group_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

  ENTITY Composite_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (Composite_group_shape_element, Composite_unit_shape_element))
    SUBTYPE OF (Shape_element);
    components : SET[2:?] OF Shape_element;
  END_ENTITY;

  ENTITY Composite_unit_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.20 2012/10/11 05:49:13 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8047 - ISO/TS 10303-1764 Shape feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7463
*)

SCHEMA Shape_feature_arm;

USE FROM Characterizable_object_arm; -- ISO/TS 10303-1765 
USE FROM Contextual_shape_positioning_arm; -- ISO/TS 10303-1027
REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765
USE FROM Property_assignment_arm; --  ISO/TS 10303-1030

TYPE sf_shapeable_item = SELECT BASED_ON shapeable_item WITH 
  (Characterizable_object);
END_TYPE; 

TYPE sf_property_assignment_select = SELECT BASED_ON property_assignment_select WITH ( 
  Characterizable_object);
END_TYPE; 

ENTITY Shape_feature_definition
  SUBTYPE OF (Characterizable_object);
  DERIVE
    feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
  INVERSE
    of_shape : Item_shape FOR described_element;
  WHERE
    WR1: EXISTS(feature_model);
END_ENTITY;

ENTITY Instanced_feature  
  SUBTYPE OF (Shape_element, Shape_feature_definition);
END_ENTITY;

ENTITY Placed_feature  
  SUBTYPE OF (Shape_element);
   definition : Shape_feature_definition;
END_ENTITY;

ENTITY General_feature
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY; 

FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
  LOCAL
    sda : SET OF Shape_description_association := [];
    gm : SET OF Geometric_model := [];
  END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'));
 
  REPEAT i := 1 to SIZEOF(sda) BY 1;
    IF 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF (sda[i]) THEN
      gm := gm + sda[i]\Property_definition_representation.used_representation;
    END_IF;
  END_REPEAT;
  RETURN(gm);
END_FUNCTION;

SUBTYPE_CONSTRAINT sf_shape_element FOR Shape_element;
  ONEOF (Instanced_feature, Placed_feature);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2006/06/05 10:33:51 liutkus Exp $
   ISO TC184/SC4/WG12 N4176 - ISO/TS 10303-1743 Shape parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3600
*)

SCHEMA Shape_parameters_arm;

	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128

  TYPE application_environment = EXTENSIBLE ENUMERATION OF
    (end_user_application,
     manufacturing);
  END_TYPE;

  TYPE keepout_product_design_object_category = ENUMERATION OF
    (assembly_module_assembly_component,
     assembly_module_component_feature,
     assembly_ee_material,
     interconnect_ee_material,
     interconnect_module_assembly_component,
     interconnect_module_via,
     interconnect_module_inter_stratum_feature,
     interconnect_module_cutout,
     interconnect_module_fill_area,
     interconnect_module_laminate_component,
     interconnect_module_stratum_feature);
  END_TYPE;

  TYPE material_condition = ENUMERATION OF
    (nominal_material_condition,
     minimum_material_condition,
     maximum_material_condition);
  END_TYPE;

  TYPE material_condition_property_names = ENUMERATION OF
    (maximum_material_principle,
     least_material_requirement);
  END_TYPE;

 	TYPE physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

  TYPE predefined_keepout_purpose = ENUMERATION OF
    (thermal,
     generic_clearance,
     shock,
     vibration,
     electromagnetic_compatibility);
  END_TYPE;

(* Has to be moved to new module later *)
(*  ENTITY Geometric_model_characterization
   SUBTYPE OF (Representation_relationship); -- not Geometric_model
     SELF\Representation_relationship.rep1 RENAMED characterised_model : Geometric_model;
     SELF\Representation_relationship.rep2 RENAMED characteristic : Representation;
  END_ENTITY;
*)
END_SCHEMA;
(* 
	$Id: arm.exp,v 1.51 2012/10/11 05:49:03 liutkuviene Exp $
	ISO TC184/SC4/WG12 N8050 - ISO/TS 10303-1032 Shape property assignment - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7466
*)


SCHEMA Shape_property_assignment_arm; 

USE FROM Property_assignment_arm;
(*REFERENCE FROM*) USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026

(*REFERENCE FROM*) USE FROM External_model_arm; -- ISO/TS 10303-1033

USE FROM Geometric_model_relationship_arm; -- ISO/TS 10303-1403 
USE FROM Product_view_definition_relationship_arm; -- ISO/TS 10303-1041

TYPE spa_property_assignment_select = SELECT BASED_ON property_assignment_select WITH ( 
  Item_shape,
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

TYPE chained_geometric_model_link = SELECT (
    Geometric_placement_operation,
    Geometric_coordinate_space,
    Geometric_model_relationship);
END_TYPE;

TYPE described_element_select = SELECT (
  View_definition_relationship,
  Product_occurrence_definition_relationship);
END_TYPE;  

TYPE shape_element_or_relationship_select = SELECT (
  Shape_element,
  Shape_element_relationship);
END_TYPE;  

TYPE geometric_item_specific_usage_select = SELECT (
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

TYPE spa_represented_definition = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON represented_definition WITH (
    Item_shape,
    Shape_element,
    Shape_element_relationship);
END_TYPE;

TYPE assigned_shape_property_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Item_shape,
    Shape_element,
    Shape_element_relationship);
END_TYPE;

TYPE shape_model = EXTENSIBLE GENERIC_ENTITY SELECT
  (External_geometric_model, 
   Geometric_model);
END_TYPE; 

TYPE shapeable_item = EXTENSIBLE GENERIC_ENTITY SELECT
  (Product_occurrence_definition_relationship, 
   Product_view_definition, 
   View_definition_relationship);
END_TYPE; 

ENTITY Associated_item_shape
  SUBTYPE OF (Item_shape);
DERIVE
  associated_model : shape_model := association\Property_definition_representation.used_representation;
INVERSE  
  association : Shape_description_association FOR definition;
END_ENTITY;  

ENTITY Associated_shape_element 
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Associated_item_shape;
DERIVE
  associated_item : geometric_model_item := association\Geometric_item_specific_usage.identified_item;
INVERSE 
  association : Geometric_item_specific_usage FOR definition;
WHERE
  WR1: EXISTS(associated_item);
  WR2: association\Geometric_item_specific_usage.used_model\Geometric_model.context_of_items = 
  SELF\Shape_element.containing_shape\Associated_item_shape.association\Property_definition_representation.used_representation\Geometric_model.context_of_items;
END_ENTITY;

ENTITY Contextual_item_shape
  SUBTYPE OF (Item_shape);
    SELF\Item_shape.described_element : described_element_select;
  DERIVE
    shaped_product : Product_view_definition := spa_get_definition(SELF);
END_ENTITY;

ENTITY Geometric_item_specific_usage;
    name            : STRING;
    description     : OPTIONAL STRING;
    definition      : geometric_item_specific_usage_select;
    identified_item : geometric_model_item;
    used_model      : shape_model;      
END_ENTITY;

ENTITY Chain_based_geometric_item_specific_usage
    SUBTYPE OF (Geometric_item_specific_usage);
    nodes : LIST [2:?] OF UNIQUE Geometric_model;
    undirected_link : LIST [1:?] OF UNIQUE chained_geometric_model_link;
END_ENTITY;

ENTITY Item_shape;
  id                : OPTIONAL STRING;
  description       : OPTIONAL STRING;
  described_element : shapeable_item;
UNIQUE
  UR1: described_element;
END_ENTITY;

ENTITY Assigned_shape_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : assigned_shape_property_select;
END_ENTITY; 

ENTITY Shape_dependent_property_representation -- maps to property_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Assigned_shape_property;
END_ENTITY;

ENTITY Shape_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Associated_item_shape;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;

ENTITY Shape_element_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : shape_element_or_relationship_select;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;

ENTITY Shape_element;
    id               : OPTIONAL STRING;
    element_name     : STRING;
    description      : OPTIONAL STRING;
    containing_shape : Item_shape;
UNIQUE
    UR1: id, containing_shape;    
WHERE
    WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Shape_element_relationship;
    relation_type : OPTIONAL STRING;
    description   : OPTIONAL STRING;
    relating      : Shape_element;
    related       : Shape_element;
  WHERE
    WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;

SUBTYPE_CONSTRAINT property_definition_representation_subtype FOR Property_definition_representation;
  ONEOF (Shape_description_association, Shape_dependent_property_representation, Shape_element_description_association);
END_SUBTYPE_CONSTRAINT;

FUNCTION spa_get_definition ( input : Contextual_item_shape ): Product_view_definition;
  IF ('PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_USAGE'
    IN TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\View_definition_relationship.related_view);
  END_IF;
  IF ('ASSEMBLY_STRUCTURE_ARM.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN
      TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\Product_occurrence_definition_relationship.related_view);
  END_IF;    
  RETURN(?);
END_FUNCTION;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.11 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4182 - ISO/TS 10303-1745 Signal - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3606
*)

SCHEMA Signal_arm;

	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654

 	TYPE s_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Composite_signal_property_relationship,
		Signal_property,
		Signal);
	END_TYPE;

  ENTITY Composite_signal_property
    SUBTYPE OF (Signal_property);
    INVERSE
      signal_property_structure : SET[1:?] OF composite_signal_property_relationship FOR composition;
  END_ENTITY;

  ENTITY Composite_signal_property_relationship;
      composition                        	: Composite_signal_property;
      signal_property_structural_element 	: Signal_property;
    INVERSE
      aggregation_operation								: External_source_identification FOR item;
  END_ENTITY;

  ENTITY Signal;
      name : STRING;
    INVERSE
      signal_category	: External_source_identification FOR item;
    UNIQUE
      UR1 : name;  
  END_ENTITY;

  ENTITY Signal_property
    SUPERTYPE OF (Composite_signal_property);
      signal_property_representation : Characteristic_data_table;
      characterized_signal           : Signal;
    INVERSE
      signal_property_category				: External_source_identification FOR item;
  END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.12 2010/06/09 15:41:00 philsp Exp $
ISO TC184/SC4/WG12 N7139 - ISO/TS 10303-1133 Single part representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6087
*) 


SCHEMA Single_part_representation_arm;

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106

USE FROM Part_view_definition_arm;    -- ISO/TS 10303-1023

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032


TYPE spr_documented_element_select = SELECT BASED_ON documented_element_select WITH 
   (Part, 
    Part_version, 
    Part_view_definition);
END_TYPE; 

TYPE spr_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Document, 
    Document_definition, 
    Document_version, 
    Part, 
    Part_version, 
    Part_view_definition);
END_TYPE; 

TYPE spr_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (Part_view_definition);
END_TYPE; 

END_SCHEMA;  -- Single_part_representation_arm
(*
   $Id: arm.exp,v 1.23 2009/04/23 08:59:14 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6261 - ISO/TS 10303-1746 Software - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4185
*)



SCHEMA Software_arm;

	USE FROM Document_definition_arm;	-- ISO/TS 10303-1123
	USE FROM Information_product_arm;	-- ISO/TS 10303-xxxx

  ENTITY Software 
    SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;

  ENTITY Software_definition 
    SUBTYPE OF (Information_definition);
    SELF\Product_view_definition.defined_version : Software_version;
  END_ENTITY;

  ENTITY Software_version
    SUBTYPE OF (Information_version);
    SELF\Product_version.of_product : Software;
  END_ENTITY;

RULE software_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;

(*
   $Id: arm.exp,v 1.2 2009/12/23 13:29:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6932 - ISO/TS 10303-1793 Solid model - EXPRESS ARM
*)
SCHEMA Solid_model_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004

ENTITY Solid_model
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.42 2009/12/23 13:29:05 liutkuviene Exp $
   ISO TC184/SC4/WG12 N6935 - ISO/TS 10303-1747 Specification document - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5503
*)

SCHEMA Specification_document_arm;

USE FROM Characteristic_arm;	-- ISO/TS 10303-1654
USE FROM Configuration_item_arm;	-- ISO/TS 10303-1056
USE FROM Tagged_text_representation_arm; -- ISO/TS 10303-1366

REFERENCE FROM Support_resource_arm(bag_to_set);

  TYPE sd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
    Product_configuration,
    Product_view_definition,
    Product_version,
    Product);
  END_TYPE;

  TYPE sd_organization_or_person_in_organization_item = EXTENSIBLE  GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH  (
    Specification_definition);
  END_TYPE;
  
  ENTITY Design_specification
    SUPERTYPE OF (Interface_specification_document_definition)
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Fabrication_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;

  ENTITY Interface_specification_document_definition
    SUBTYPE OF (Design_specification);
  END_ENTITY;

  ENTITY Language_reference_manual
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Material_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Partial_document_with_structured_text_representation_assignment
    SUBTYPE OF(Partial_document_assignment);
      structured_portion : string_representation_item_select;
    UNIQUE
      UR1: SELF\Partial_document_assignment.document_portion,
      SELF\Document_assignment.assigned_document;
  END_ENTITY;

  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Specification_allocation
  	SUBTYPE OF (Document_assignment);
      SELF\Document_assignment.assigned_document RENAMED allocated_specification : Specification_definition;
  END_ENTITY;

  ENTITY Specification_definition
  	SUPERTYPE OF(ONEOF (Design_specification,
	 Process_specification,
	 Material_specification,
	 Test_specification,
	 Language_reference_manual))
    SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;

  ENTITY Surface_finish_specification
    SUBTYPE OF (Material_specification);
  END_ENTITY;

  ENTITY Test_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  FUNCTION get_document_definition(
      input : documented_element_select;
      role : STRING;
      type_name : STRING) : SET OF Document_definition; 
    LOCAL
      dd : SET[0:?] OF Document_definition := [];  --this gives us access to the information base
      da : SET[0:?] OF Document_assignment :=[];
    END_LOCAL;
    da := bag_to_set(QUERY(dr <* USEDIN (input, 'DOCUMENT_ASSIGNMENT_ARM.'+
	  'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO') | (dr.role = role)));
    -- iterate over da
    REPEAT i := 1 to SIZEOF(da) by 1;
      IF(type_name IN TYPEOF (da[i].assigned_document))THEN
        dd := dd + da[i].assigned_document;
      END_IF;
    END_REPEAT;
    RETURN(dd);
  END_FUNCTION;
	
END_SCHEMA;
(*
 $Id: arm.exp,v 1.13 2008/09/13 12:26:54 liutkuviene Exp $
 ISO TC184/SC4/WG12 N5506 - ISO/TS 10303-1104 Specified product - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4816
*)

SCHEMA Specified_product_arm;

USE FROM Configuration_item_arm; -- ISO/TS 10303-1056

USE FROM Product_class_arm; -- ISO/TS 10303-1103

  ENTITY Product_specification
    SUBTYPE OF (Product_configuration);
      version_id                              : OPTIONAL STRING;
      SELF\Product_configuration.item_context : Product_class;
      defining_specifications                 : SET [0:?] OF Specification;
  END_ENTITY;

  ENTITY Specification_based_product_version
    SUBTYPE OF (Product_version);
    INVERSE
      specification_source : Item_design_association FOR design;
    WHERE
      WR1 : 'SPECIFIED_PRODUCT_ARM.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
  END_ENTITY;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.20 2012/10/11 05:49:04 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8056 - ISO/TS 10303-1749 Styled curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7469
*)

SCHEMA Styled_curve_arm;

USE FROM Colour_arm;    -- ISO/TS 10303-1002

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

  ENTITY Curve_font
    SUPERTYPE OF (ONEOF (Externally_defined_curve_font,
                         Predefined_curve_font,
                         User_defined_curve_font));
      curve_font_name : STRING;
  END_ENTITY;

  ENTITY Curve_font_pattern;
    on_segment : REAL;
    off_segment : REAL;
  END_ENTITY;

  ENTITY Externally_defined_curve_font
    SUBTYPE OF (Curve_font);
      curve_font_reference : STRING;
  END_ENTITY;

  ENTITY Predefined_curve_font
    SUBTYPE OF (Curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous', 'chain', 'chain double dash', 'dashed', 'dotted'];
  END_ENTITY;

  ENTITY Solid_curve_font
    SUBTYPE OF (Predefined_curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous'];
  END_ENTITY;

  ENTITY User_defined_curve_font
    SUBTYPE OF (Curve_font);
      pattern        : SET[1:?] OF Curve_font_pattern;
      segment_symbol : Geometric_model;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.4 2012/10/11 05:49:06 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8059 - ISO/TS 10303-1800 Support resource - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7472
*)
SCHEMA Support_resource_arm;

TYPE identifier = STRING;
END_TYPE;

TYPE label = STRING;
END_TYPE;

TYPE text = STRING;
END_TYPE; 


FUNCTION bag_to_set
   (the_bag : BAG [0:?] OF GENERIC:intype) : SET [0:?] OF GENERIC:intype;

LOCAL the_set : SET OF GENERIC : intype := [];
  i : INTEGER;
END_LOCAL;
  IF SIZEOF(the_bag)> 0 THEN 
  	REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN(the_set);
END_FUNCTION;


FUNCTION type_check_function
  (the_type : GENERIC; sub_names : SET [0:?] OF STRING; criterion : INTEGER) : LOGICAL;

  IF((NOT EXISTS(the_type)) OR (SIZEOF(sub_names)= 0))
  THEN 
    RETURN (UNKNOWN);
  ELSE 
    CASE criterion OF 
      0: RETURN (SIZEOF(sub_names * TYPEOF(the_type))> 0);
      1: RETURN (SIZEOF(sub_names * TYPEOF(the_type))= 0);
      2: RETURN (SIZEOF(sub_names * TYPEOF(the_type))= 1);
      3: RETURN(SIZEOF(sub_names * TYPEOF(the_type))<= 1); 
      OTHERWISE : RETURN (UNKNOWN);
    END_CASE;
  END_IF;
END_FUNCTION; 

END_SCHEMA;
(*
 $Id: arm.exp,v 1.35 2013/10/10 19:01:09 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N8062 - ISO/TS 10303-1110 Surface conditions - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7475
*)

SCHEMA Surface_conditions_arm;

USE FROM Dimension_tolerance_arm;

USE FROM Generic_material_aspects_arm;

USE FROM Part_view_definition_arm;

USE FROM Value_with_unit_extension_arm;

TYPE sc_dimension_target = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON dimension_target WITH (
   Coating_layer);
END_TYPE; 

  TYPE measure_qualification_or_value_with_unit = SELECT (Measure_qualification, Value_with_unit); 
  END_TYPE;

  TYPE measuring_gauge_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Part_view_definition);
  END_TYPE;

  TYPE sf_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
	(Coating_layer);
  END_TYPE;

  TYPE shaped_element_select = SELECT
    (Shape_element, Item_shape);
  END_TYPE;

  ENTITY Coating_layer
    SUBTYPE OF (Shape_element);
    INVERSE
      thickness : SET[0:1] OF Thickness_size FOR is_applied_to;
    WHERE
      WR1: SIZEOF(USEDIN(SELF, 'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS'))=1;
  END_ENTITY;

  ENTITY Contact_ratio
   SUBTYPE OF (Surface_condition);
     ratio_value     : Measure_item;
     measuring_gauge : measuring_gauge_select;
  DERIVE
    SELF\Assigned_property.name : STRING := 'contact ratio';
  END_ENTITY;

  ENTITY Extended_visual_appearance
    SUBTYPE OF (Visual_appearance);
      opacity          : OPTIONAL Measure_item;
      orientation      : OPTIONAL Angle_data_element;
      refraction_index : OPTIONAL Measure_item;  
      texture_map      : Digital_file;  
  END_ENTITY;

  ENTITY Hardness
    SUBTYPE OF (Surface_condition);
      depth                 : OPTIONAL Measure_item;      
      environment_condition : SET[0:?] OF STRING;
      hardness_value        : Measure_item;
      measuring_method      : STRING;      
      measuring_position    : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'hardness';
  END_ENTITY;

  ENTITY Surface_condition
    ABSTRACT SUPERTYPE OF ( ONEOF(
      Contact_ratio,
      Hardness,
      Tactile_appearance,
      Treatment_result,
      Visual_appearance,
      Surface_texture))
    SUBTYPE OF (Assigned_shape_property);
    value_determination : OPTIONAL STRING;
    SELF\Assigned_property.described_element : shaped_element_select;
  INVERSE
    generic_representation : SET[0:0] OF Property_definition_representation FOR definition; 
  END_ENTITY;

  ENTITY Surface_texture
    SUBTYPE OF (Surface_condition);
      measuring_method    : STRING;
      measuring_direction : OPTIONAL Measurement_path;
      parameters : SET[0:?] OF Surface_texture_parameter;
  DERIVE
    SELF\Assigned_property.name : STRING := 'surface texture';
  END_ENTITY;
  
  ENTITY Surface_texture_parameter;
    parameter_value : measure_qualification_or_value_with_unit;
    parameter_name : STRING;
  END_ENTITY;

  ENTITY Tactile_appearance
    SUBTYPE OF (Surface_condition);
      depth       : OPTIONAL Measure_item;
  DERIVE
    SELF\Assigned_property.name : STRING := 'tactile appearance';
  END_ENTITY;

  ENTITY Treatment_result
    SUBTYPE OF (Surface_condition);
      purpose     : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'treatment result';
  END_ENTITY;

  ENTITY Visual_appearance
    SUBTYPE OF (Surface_condition);
      colour_id    : STRING;
      colour_name  : OPTIONAL STRING;
      lustre       : STRING;
      transparency : OPTIONAL STRING;
      pattern      : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'visual appearance';
  END_ENTITY;
 
END_SCHEMA;
(*
   $Id: arm.exp,v 1.23 2008/09/13 12:26:51 liutkuviene Exp $
   ISO TC184/SC4/WG12 N5521 - ISO/TS 10303-1366 Tagged text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5009
*)

SCHEMA Tagged_text_representation_arm;

USE FROM Foundation_representation_arm;    --  ISO/TS 10303-1006

TYPE string_representation_item_select = SELECT(
    String_representation_item, 
    Included_text_block,
    Structured_text_composition);
END_TYPE; 

TYPE string_representation_item_list = LIST[1:?] OF
string_representation_item_select;
END_TYPE;

TYPE string_representation_item_set = SET[1:?] OF string_representation_item_select;
END_TYPE;

TYPE string_representation_item_list_or_set =
 SELECT(string_representation_item_list, string_representation_item_set); 
END_TYPE;

SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR String_representation_item;
  ONEOF (Tagged_text_item,
         Uniform_resource_identifier);
END_SUBTYPE_CONSTRAINT;

ENTITY Included_text_block
  SUBTYPE OF (Representation_item);
  source : Structured_text_representation;
END_ENTITY;

 ENTITY Structured_text_composition
   SUBTYPE OF (Representation_item);
  content: string_representation_item_list_or_set;
 END_ENTITY;

ENTITY Structured_text_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET [1:1] OF string_representation_item_select; 
END_ENTITY;

ENTITY Tagged_text_item
  SUBTYPE OF (String_representation_item);
WHERE
  WR1: SIZEOF (QUERY (using_rep <* USEDIN(SELF,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS') |
  NOT ('TAGGED_TEXT_REPRESENTATION_ARM.TAGGED_TEXT_FORMAT' IN
  TYPEOF (using_rep.context_of_items))
       )) = 0;
END_ENTITY;

ENTITY Tagged_text_format
  SUBTYPE OF (Representation_context);
END_ENTITY;

ENTITY Uniform_resource_identifier
  SUBTYPE OF (String_representation_item);
END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.13 2012/10/11 05:49:27 liutkuviene Exp $
ISO TC184/SC4/WG12 N8065 - ISO/TS 10303-1136 Text appearance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5524
*) 


SCHEMA Text_appearance_arm;

USE FROM Basic_geometry_arm;   -- ISO/TS 10303-1652

  TYPE composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Composite_presentable_text, 
     Defined_character_glyph,
     Text_literal);
  END_TYPE; 

  TYPE font_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Draughting_pre_defined_text_font,
    Externally_defined_text_font);
  END_TYPE;

  TYPE text_alignment = EXTENSIBLE ENUMERATION OF( 
    top_right,
    top_centre,
    top_left,
    centre_right,
    centre_centre,
    centre_left,
    bottom_right,
    bottom_centre,
    bottom_left);
  END_TYPE;

  TYPE text_delineation = EXTENSIBLE ENUMERATION OF(
    underline,
    overline);
  END_TYPE;

  TYPE text_path = ENUMERATION OF(
    left,
    right,
    up,
    down);
  END_TYPE;

  ENTITY Composite_presentable_text
    SUBTYPE OF (Detailed_geometric_model_element);
      collected_text : LIST[2:?] OF composite_text_element_select;
  END_ENTITY;

  ENTITY Defined_character_glyph
    SUBTYPE OF (Detailed_geometric_model_element);
      placement : Axis_placement;
  END_ENTITY;

  ENTITY Draughting_pre_defined_text_font;
  END_ENTITY;

  ENTITY Externally_defined_text_font;
    name : STRING;
  END_ENTITY; 

  ENTITY Text_literal
    SUPERTYPE OF (
      Text_literal_with_extent ANDOR 
      Text_literal_with_delineation ANDOR 
      Text_literal_with_associated_curves ANDOR 
      Text_literal_with_blanking_box)
    SUBTYPE OF (Detailed_geometric_model_element);
      alignment : text_alignment;
      font : font_select;
      literal : STRING;
      path : text_path;
      placement : Axis_placement;
  END_ENTITY;

  ENTITY Text_literal_with_associated_curves
    SUBTYPE OF (Text_literal);
      associated_curves : SET [1:?] OF Curve;
  END_ENTITY;  

  ENTITY Text_literal_with_blanking_box
    SUBTYPE OF (Text_literal);
  END_ENTITY;  

  ENTITY Text_literal_with_delineation
    SUBTYPE OF (Text_literal);
      delineation: text_delineation;
  END_ENTITY;  

  ENTITY Text_literal_with_extent
    SUBTYPE OF (Text_literal);
      width : length_measure; 
      height : length_measure;
  END_ENTITY;  

  SUBTYPE_CONSTRAINT ta_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
    ONEOF(Composite_presentable_text, Text_literal, Defined_character_glyph);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.21 2012/10/11 05:49:03 liutkuviene Exp $
   ISO TC184/SC4/WG12 N8068 - ISO/TS 10303-1750 Text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7077
*)

SCHEMA Text_representation_arm;

USE FROM Text_appearance_arm; -- ISO/TS 10303-1136
USE FROM Associative_text_arm; -- ISO/TS 10303-1132 

  TYPE tr_text_or_composite_text = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON text_or_composite_text WITH (
    Annotation_text_character);
  END_TYPE;
  
  TYPE tr_composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON composite_text_element_select WITH (
    Annotation_text_character);
  END_TYPE; 

  TYPE tr_font_select  = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON font_select WITH
    (Text_font);
  END_TYPE;
  
  TYPE label1 = label;
   WHERE
    WR1 : LENGTH(SELF) = 1; 
  END_TYPE;
  
  ENTITY Annotation_text_character 
    SUBTYPE OF (Detailed_geometric_model_element);
    replicated_model : Character_glyph_symbol; 
    source           : Axis_placement;
    target           : Axis_placement;
  END_ENTITY;

  ENTITY Character_glyph_font_usage; 
    character : Character_glyph_symbol;
    font      : Text_font;
  END_ENTITY;

  ENTITY Character_glyph_symbol
    SUBTYPE OF (Representation);
      SELF\Representation.name RENAMED character : label1; 
  END_ENTITY; 

  ENTITY Text_font; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    glyphs: SET [1:?] OF Character_glyph_font_usage FOR font;
  END_ENTITY;

  ENTITY Text_font_family; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    fonts: SET [1:?] OF Text_font_in_family FOR family;
  END_ENTITY; 

  ENTITY Text_font_in_family;
    font   : Text_font;
    family : Text_font_family;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.14 2004/10/28 18:34:02 darla Exp $
 ISO TC184/SC4/WG12 N2955 - ISO/TS 10303-1065 Time interval - EXPRESS ARM
*)


SCHEMA Time_interval_arm; 

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;

ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;

END_SCHEMA;  -- Time_interval_arm
(*
 $Id: arm.exp,v 1.11 2012/10/11 05:49:06 liutkuviene Exp $
 ISO TC184/SC4/WG12 N7840 - ISO/TS 10303-1511 Topologically bounded surface - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7199
*)

SCHEMA Topologically_bounded_surface_arm;

USE FROM Basic_geometric_topology_arm;
USE FROM B_spline_geometry_arm;

ENTITY Advanced_face
  SUBTYPE OF (Face_surface);
END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.20 2012/10/11 05:49:06 liutkuviene Exp $
ISO TC184/SC4/WG12 N7843 - ISO/TS 10303-1054 Value with unit - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7238
*) 


SCHEMA Value_with_unit_arm;


TYPE any_number_value = NUMBER;
END_TYPE; 

TYPE any_string_value = STRING;
END_TYPE; 

TYPE length_measure = REAL;
END_TYPE; 

TYPE measure_value = EXTENSIBLE SELECT
   (any_number_value, 
    any_string_value, 
    length_measure, 
    plane_angle_measure,
    area_measure,
    count_measure,
   ratio_measure,
   volume_measure);
END_TYPE; 

TYPE plane_angle_measure = REAL;
END_TYPE; 

TYPE ratio_measure = REAL;
END_TYPE;

TYPE area_measure = REAL;
END_TYPE;

TYPE volume_measure = REAL;
END_TYPE;

TYPE count_measure = NUMBER;
END_TYPE;

ENTITY Area_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Derived_unit
 SUPERTYPE OF (ONEOF (Area_unit,
                       Volume_unit))
 SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;


ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;

ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'VALUE_WITH_UNIT_ARM.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;

ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Unit
  SUPERTYPE OF (ONEOF (Amount_of_substance_unit,
                       Electric_current_unit,
                       Length_unit,
                       Luminous_intensity_unit,
                       Mass_unit,
                       Plane_angle_unit,
                       Ratio_unit,
                       Solid_angle_unit,
                       Thermodynamic_temperature_unit,
                       Time_unit));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;

ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;

ENTITY Volume_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

END_SCHEMA;  -- Value_with_unit_arm
(*
   $Id: arm.exp,v 1.26 2013/02/11 18:46:02 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N8244 - ISO/TS 10303-1753 Value with unit extension - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5533
*)

SCHEMA Value_with_unit_extension_arm;

	USE FROM Value_with_unit_arm;	-- ISO/TS 10303-1054
	
ENTITY Absorbed_dose_data_element
  SUBTYPE OF (Value_with_unit);
END_ENTITY;

  ENTITY Radioactivity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Acceleration_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Amount_of_substance_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Area_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Capacitance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Celsius_temperature_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Conductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Dielectric_constant_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Dose_equivalent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_charge_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_current_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Electric_potential_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Energy_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Frequency_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Illuminance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Inductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'VALUE_WITH_UNIT_ARM.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Loss_tangent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Luminous_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Luminous_intensity_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Magnetic_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Magnetic_flux_density_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Mass_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Power_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Pressure_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Ratio_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Solid_angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Thermal_resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Thermodynamic_temperature_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Velocity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Volume_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR Value_with_unit; 
  ONEOF (Acceleration_data_element,
 Absorbed_dose_data_element,
 Radioactivity_data_element,
 Amount_of_substance_data_element,
 Angle_data_element,
 Area_data_element,
 Capacitance_data_element,
 Celsius_temperature_data_element,
 Conductance_data_element,
 Dielectric_constant_data_element,
 Dose_equivalent_data_element,
 Electric_charge_data_element,
 Electric_current_data_element,
 Electric_potential_data_element,
 Energy_data_element,
 Force_data_element,
 Frequency_data_element,
 Illuminance_data_element,
 Inductance_data_element,
 Length_data_element,
 Loss_tangent_data_element,
 Luminous_flux_data_element,
 Luminous_intensity_data_element,
 Magnetic_flux_data_element,
 Magnetic_flux_density_data_element,
 Mass_data_element,
 Power_data_element,
 Pressure_data_element,
 Ratio_data_element,
 Resistance_data_element,
 Solid_angle_data_element,
 Thermal_resistance_data_element,
 Thermodynamic_temperature_data_element,
 Velocity_data_element,
 Volume_data_element); 
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.5 2014/10/27 19:21:43 thomasrthurman Exp $
   N - ISO/CD-TS - 10303- weld - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
(* rev 1.4
bugs detected during longform creation:
5149--
move Weld_context to this AM.
added
USE FROM Product_and_manufacturing_information_view_context_arm
   (Gdt_representation_view_context,
    Material_specification_view_context,
    Surface_finish_view_context);
*)
(* rev 1.3
replace Length_data_element with Length_tolerance_characteristic except where
nominal values were specified.
replace Angle_data_element with Angle_tolerance_characteristic except where
nominal values were specified.
Added USE FROM Geometric_tolerance because there are some flatness tolerances specified in e.g.,
Added USE FROM Surface_conditions because surface texture (ISO 1302) may be specified.
Added USE FROM Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm to allow us to establish
weld context for binding to block definition diagram.
Added explicit USE FROM reference to Weld_context for clarity.
Added corrections on Assembly_bond_definition to permit Welding_definition to point to more than one joint.
associated bugzilla bugs 5144, 5145, 5147, 5148
rev 1.2
replaced Groove_weld_definition with Butt_weld_definition to avoid
mixing ISO and ASME names.
moved elementary_weld_type from ENUMERATION to individual ENTITY types.
Added inclined_butt_weld_joint --maybe obsolete?
Added Length and Angle tolerance in preparation for using following
initial team review.
how to relate this to block definition diagram?
For conformance specification, specify the AO we require in the USE FROM.*)


SCHEMA Weld_arm;
USE FROM Advanced_boundary_representation_arm; -- ISO/TS 10303-1514

USE FROM Assembly_technology_arm
  (Assembled_with_bonding,
   Assembly_bond_definition);

USE FROM Characteristic_arm
     (Length_tolerance_characteristic,
      Maximum_tolerance_characteristic,
      Minimum_tolerance_characteristic,
      Nominal_tolerance_characteristic,
      Plus_minus_tolerance_characteristic,
      Qualified_tolerance_characteristic,
      Statistical_tolerance_characteristic,
      Symmetrical_tolerance_characteristic,
      Tolerance_characteristic,
      Typical_tolerance_characteristic);

USE FROM Characterizable_object_arm
   (Characterizable_object);

USE FROM Construction_geometry_arm; -- ISO/TS 10303-1131

USE FROM Dimension_tolerance_arm
  (Thickness_size,
   Linear_distance);
--need to verify that the above are sufficient to support AO Flatness_tolerance
   
USE FROM Extended_measure_representation_arm
   (Value_with_tolerances);

USE FROM Foundation_representation_arm
  (Representation);

USE FROM Generic_material_aspects_arm
  (Material_identification);

USE FROM Geometric_tolerance_arm
   (Axis_placement_shape_element,
    Dimensional_location_with_datum_feature,
    Flatness_tolerance);

USE FROM Machining_features_arm
  (Face_shape_element,
   Path_element);

USE FROM Manifold_surface_arm; -- ISO/TS 10303-1509

USE FROM Manifold_subsurface_arm; -- ISO/TS 10303-1702

USE FROM Conductivity_material_aspects_arm
  (Material_identification_with_conductivity_classification);

USE FROM Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm
  (Nominal_3d_feature,
   Nominal_3d_integral_feature);

USE FROM Person_organization_assignment_arm;
--needed for Specification_definition
  
USE FROM Physical_component_feature_arm
   (Physical_component_feature);

USE FROM Product_and_manufacturing_information_view_context_arm
   (Gdt_representation_view_context,
    Material_specification_view_context,
    Model_based_view_context,
    Surface_finish_view_context);

USE FROM Part_view_definition_arm
   (Part_view_definition_context);

USE FROM Product_view_definition_arm;

USE FROM Shape_property_assignment_arm
  (Associated_shape_element);

USE FROM Specification_document_arm
  (Process_specification);

USE FROM Value_with_unit_arm
  (count_measure);

USE FROM Surface_conditions_arm
   (Surface_texture);

USE FROM Topologically_bounded_surface_arm;

USE FROM Value_with_unit_extension_arm
   (Angle_data_element,
    Length_data_element);

REFERENCE FROM Assembly_technology_arm
  (at_external_identification_item);
  
REFERENCE FROM Dimension_tolerance_arm
  (dimension_target);

REFERENCE FROM Layered_interconnect_module_design_arm
  (Footprint_occurrence,
   Padstack_occurrence,
   Structured_layout_component_sub_assembly_relationship);

REFERENCE FROM Layered_interconnect_simple_template_arm
  (Connection_zone_in_layout_template,
   Default_attachment_size_based_land_physical_template);

REFERENCE FROM Physical_unit_design_view_arm
  (Assembly_component);

REFERENCE FROM Physical_unit_usage_view_arm
  (Part_feature,
   Connection_zone_in_usage_view);

REFERENCE FROM Shape_property_assignment_arm
  (shapeable_item);

  TYPE resistance_or_fusion_weld = ENUMERATION OF
    (RESISTANCE_WELD,
     FUSION_WELD);
  END_TYPE;

  TYPE supplemental_information = EXTENSIBLE ENUMERATION OF
    (FLAT_FINISHED_FLUSH,
     CONVEX,
     CONCAVE,
     TOES_BLENDED_SMOOTHLY,
     BACK_RUN,
     BACKING_WELD,
     SPECIFIED_ROOT_REINFORCEMENT,
     WELD_ALL_AROUND,
     WELD_BETWEEN_TWO_POINTS,
     FIELD_WELD,
     STAGGERED_INTERMITTENT_WELD);
  END_TYPE;

  TYPE weld_auxiliary_material_role = ENUMERATION OF
     (consumable_insert,
      permanent_backing,
      removable_backing,
      spacer,
      unspecified_backing);
  END_TYPE;

TYPE weld_dimension_target = SELECT BASED_ON dimension_target WITH (
  Nominal_3d_feature);
END_TYPE;

  TYPE weld_shapeable_item = SELECT BASED_ON shapeable_item WITH 
    (Characterizable_object);
  END_TYPE;

  ENTITY Angle_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('EXTENDED_MEASURE_REPRESENTATION_ARM.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

  ENTITY Butt_joint
    SUPERTYPE OF (ONEOF (Flanged_Butt_joint, Inclined_Butt_joint))
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Butt_joint_welding_definition;
  END_ENTITY;

  ENTITY Butt_joint_welding_definition
    SUBTYPE OF(Welding_definition);
      SELF\Welding_definition.welds : set [1:?] OF Butt_weld_definition;
    INVERSE
    welded_joints : SET [1:?] OF Butt_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Butt_weld_definition
    SUPERTYPE OF (ONEOF(
     Square_butt_weld_definition,
     Single_v_butt_weld_definition,
     Single_bevel_butt_weld_definition,
     Single_u_butt_weld_definition,
     Single_j_butt_weld_definition,
     Flare_v_weld_definition,
     Flare_bevel_weld_definition))
    SUBTYPE OF(Weld_definition);
      partial_penetration_depth   : OPTIONAL Length_tolerance_characteristic;
      intermittent_data           : OPTIONAL Weld_intermittent_position_data;
      chain_intermittent_data     : OPTIONAL Weld_intermittent_position_data;
      staggered_intermittent_data : OPTIONAL Weld_intermittent_position_data;
      full_penetration            : BOOLEAN;
      joint_preparation_depth     : OPTIONAL Length_tolerance_characteristic;
      root_gap                    : OPTIONAL Length_tolerance_characteristic;
      included_angle              : OPTIONAL Angle_tolerance_characteristic;
      joint_preparation_defined   : BOOLEAN;
    WHERE
      WR1 : full_penetration XOR EXISTS(partial_penetration_depth);
      WR2 : (NOT EXISTS(intermittent_data)AND NOT EXISTS(chain_intermittent_data)) OR
            (NOT EXISTS(chain_intermittent_data) AND NOT EXISTS(staggered_intermittent_data)) OR
            (NOT EXISTS(intermittent_data) AND NOT EXISTS(staggered_intermittent_data));
  END_ENTITY;
(*
*Attribute definitions*
[[joint_preparation_defined]]
joint_preparation_defined specifies that joint preparation shall be provide.
note: in the case that explicit joint preparation is not provided, only the
specified weld quality is provided.
example: A butt weld is specified to be in accordance with ISO 5817-8 but the
joint preparation is not provided. The production unit will use ISO 5817-8 for
quality purposes.
[[WR1]]
The penetration provided shall be indicated as full or a value shall be
provided for partial penetration, but both full indication and partial
penetration data shall not be simultaneously provided.
[[WR2]]
No more than one of intermittent_data, chain_intermittent_data,
staggered_intermittent_data shall be provided.
*)


  ENTITY Corner_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Corner_joint_welding_definition;
  END_ENTITY;

  ENTITY Corner_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF Corner_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Double_bevel_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_bevel_butt_weld_definition;
        other_side : OPTIONAL Single_bevel_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Double_bevel_butt_with_broad_root_face_and_fillet_welds_weld_definition
       SUBTYPE OF (Double_bevel_butt_weld_definition);
        arrow_side_fillet : fillet_weld_definition;
        other_side_fillet : OPTIONAL fillet_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side_fillet);
  END_ENTITY;

  ENTITY Double_u_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_u_butt_weld_definition;
        other_side : OPTIONAL Single_u_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Double_v_butt_weld_definition
       SUBTYPE OF (Pre_defined_combined_weld_definition);
        arrow_side : Single_v_butt_weld_definition;
        other_side : OPTIONAL Single_v_butt_weld_definition;
    WHERE
     WR1 : SELF\Pre_defined_combined_weld_definition.symmetrical XOR EXISTS(other_side);
  END_ENTITY;

  ENTITY Edge_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Edge_joint_welding_definition;
  END_ENTITY;

  ENTITY Edge_joint_welding_definition SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF Edge_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Edge_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_metal_thickness : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Fillet_weld_definition
    SUBTYPE OF(Weld_definition);
      leg_length                        : OPTIONAL Length_tolerance_characteristic;
      nominal_throat_thickness          : OPTIONAL Length_data_element;
      deep_penetration_throat_thickness : OPTIONAL Length_data_element;
      unequal_legs                      : OPTIONAL LIST [2:2] OF Leg_based_on_surface;
      intermittent_data                 : OPTIONAL Weld_intermittent_position_data;
      chain_intermittent_data           : OPTIONAL Weld_intermittent_position_data;
      staggered_intermittent_data       : OPTIONAL Weld_intermittent_position_data;
  END_ENTITY;

  ENTITY Flanged_Butt_joint
    SUBTYPE OF(Butt_joint);
  END_ENTITY;

  ENTITY Flanged_butt_or_corner_weld_definition
       SUBTYPE OF (Weld_definition);
  END_ENTITY;

  ENTITY Flanged_Corner_joint
    SUBTYPE OF(Corner_joint);
  END_ENTITY;

  ENTITY Flare_bevel_weld_definition
    SUBTYPE OF (Butt_weld_definition);
      flare_bevel                 : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Flare_v_weld_definition
    SUBTYPE OF (Butt_weld_definition);
      flare_v                     : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Inclined_Butt_joint
    SUBTYPE OF(Butt_joint);
  END_ENTITY;

  ENTITY Single_bevel_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_bevel_butt_with_broad_root_face_weld_definition
    SUBTYPE OF (Single_bevel_butt_weld_definition);
  END_ENTITY;

  ENTITY Single_u_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_v_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Single_v_butt_with_broad_root_face_weld_definition
    SUBTYPE OF (Single_v_butt_weld_definition);
  END_ENTITY;

  ENTITY Lap_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : Lap_joint_welding_definition;
  END_ENTITY;

  ENTITY Lap_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
     welded_joints : SET [1:?] OF Lap_joint FOR default_bond_definition;
 END_ENTITY;

  ENTITY Leg_based_on_surface;
      leg_length         : Length_tolerance_characteristic;
      leg_reference_face : OPTIONAL Face_shape_element;
  END_ENTITY;

  ENTITY Overlay_weld_definition
    SUBTYPE OF(Weld_definition);
      overlay_thickness : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Path_element_with_ends
   SUBTYPE OF(Path_element);
    start_point	:	Axis_placement_shape_element;
    end_point	:	Axis_placement_shape_element;
  WHERE
   WR1 : start_point :<>: end_point;
   WR2 : (NOT EXISTS(start_point) AND NOT EXISTS(end_point)) OR
         (EXISTS(start_point) AND EXISTS(end_point));
  END_ENTITY;

  ENTITY Plug_weld_in_circular_holes_definition
    SUBTYPE OF(Weld_definition);
      full_penetration                                : BOOLEAN;
      plug_diameter                                   : Length_tolerance_characteristic;
      partial_fill_depth                               : OPTIONAL Length_tolerance_characteristic;
      centre_to_centre_distance_between_weld_elements : OPTIONAL Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Plug_weld_in_slot_definition
    SUBTYPE OF(Weld_definition);
      full_penetration   : BOOLEAN;
      slot_width         : OPTIONAL Length_tolerance_characteristic;
      partial_fill_depth : OPTIONAL Length_tolerance_characteristic;
      intermittent_data  : OPTIONAL Weld_intermittent_position_data;
      countersink_angle  : OPTIONAL Angle_tolerance_characteristic;
  END_ENTITY;

  ENTITY Pre_defined_combined_weld_definition
     SUPERTYPE OF (ONEOF(
       Double_v_butt_weld_definition,
       Double_bevel_butt_weld_definition,
       Double_u_butt_weld_definition))
     SUBTYPE OF (Weld_definition);
       symmetrical : BOOLEAN;
  END_ENTITY;

  ENTITY Seam_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_type         : resistance_or_fusion_weld;
      intermittent_data : OPTIONAL Weld_intermittent_position_data;
      weld_width        : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Single_j_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Spot_weld_definition
    SUBTYPE OF(Weld_definition);
      weld_diameter          : Length_tolerance_characteristic;
      distance_between_welds : OPTIONAL Length_tolerance_characteristic;
      number_of_welds        : OPTIONAL count_measure;
      weld_type              : resistance_or_fusion_weld;
    WHERE
      WR1 : (NOT EXISTS(distance_between_welds) AND NOT EXISTS(number_of_welds)) OR
            (EXISTS(distance_between_welds) AND EXISTS(number_of_welds));
  END_ENTITY;
(*
[[WR1]]
Either both distance_between_welds and number_of_welds shall be provided or neither shall be provided.
*)

  ENTITY Square_butt_weld_definition
    SUBTYPE OF (Butt_weld_definition);
  END_ENTITY;

  ENTITY Stake_weld_definition
       SUBTYPE OF (Weld_definition);
  END_ENTITY;

  ENTITY Steep_flanked_single_v_butt_weld_definition
    SUBTYPE OF (Single_v_butt_weld_definition);
  END_ENTITY;

  ENTITY Stud_weld_definition
    SUBTYPE OF(Weld_definition);
      distance_between_studs : Length_tolerance_characteristic;
      stud_diameter          : Length_tolerance_characteristic;
      number_of_studs        : count_measure;
  END_ENTITY;
(*
*Attribute definitions*
[[distance_between_studs]]
centre to centre
*)

  ENTITY T_joint
    SUBTYPE OF(Welded_joint);
      SELF\assembled_with_bonding.default_bond_definition : T_joint_welding_definition;
  END_ENTITY;

  ENTITY T_joint_welding_definition
    SUBTYPE OF(Welding_definition);
    INVERSE
    welded_joints : SET [1:?] OF T_joint FOR default_bond_definition;
  END_ENTITY;

  ENTITY Weld_auxiliary_material
    SUBTYPE OF (Material_identification);
      role : weld_auxiliary_material_role;
      shape : OPTIONAL Associated_shape_element;
     SELF\Material_identification.items : SET [1:1] OF Welding_definition;
  END_ENTITY;

  ENTITY Weld_context
    SUBTYPE OF (Part_view_definition_context);
  DERIVE
    SELF\View_definition_context.application_domain : STRING := 'weld';
    SELF\View_definition_context.life_cycle_stage : STRING := 'design';
  WHERE
    WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
  END_ENTITY;

  ENTITY Weld_definition
    SUPERTYPE OF (ONEOF(
        Fillet_weld_definition,
        Butt_weld_definition,
        Flanged_butt_or_corner_weld_definition,
        Plug_weld_in_circular_holes_definition,
        Plug_weld_in_slot_definition,
        Spot_weld_definition,
        Seam_weld_definition,
        Edge_weld_definition,
        Overlay_weld_definition,
        Stake_weld_definition,
        Stud_weld_definition,
        Pre_defined_combined_weld_definition))
    SUBTYPE OF (Characterizable_object);
  END_ENTITY;

  ENTITY Weld_intermittent_position_data;
      number_of_weld_elements                : count_measure;
      nominal_length_of_weld_element         : Length_data_element;
      nominal_distance_between_weld_elements : Length_data_element;
  END_ENTITY;

  ENTITY Welded_joint
    ABSTRACT SUPERTYPE OF (ONEOF(Butt_joint,
                                 Corner_joint,
                                 T_joint,
                                 Lap_joint,
                                 Edge_joint))
    SUBTYPE OF(Assembled_with_bonding);
    SELF\Assembled_with_bonding.default_bond_definition : Welding_definition;
  END_ENTITY;

  ENTITY Welding_definition
    ABSTRACT SUPERTYPE OF (ONEOF(
           Butt_joint_welding_definition,
           Corner_joint_welding_definition,
           T_joint_welding_definition,
           Lap_joint_welding_definition,
           Edge_joint_welding_definition))
    SUBTYPE OF(Assembly_bond_definition);
      supplemental_information : SET [0:?] OF supplemental_information;
      surface_texture          : OPTIONAL Surface_texture;
      welds                    : SET [1:?] OF Weld_definition;
      process_specification    : SET [0:?] OF Process_specification;
      path                     : OPTIONAL Path_element_with_ends;
      arrow_side               : Associated_shape_element;
      other_side               : OPTIONAL Associated_shape_element;
--used Associated_shape_element to get easy access to geometric face but use generic rather than specific for more flexibility.
   INVERSE
      welded_joint             : SET [1:?] OF Welded_joint FOR default_bond_definition;
      auxiliary_material       : SET [0:?] OF Weld_auxiliary_material FOR items;
  WHERE
   WR1 : arrow_side :<>: other_side;
   WR2 : NOT EXISTS(SELF\Assembly_bond_definition.bonded_feature_1) AND NOT EXISTS(SELF\Assembly_bond_definition.bonded_feature_2);
  END_ENTITY;

  ENTITY Welding_definition_sequence_relationship;
    precedent_welding_definition : Welding_definition;
    subsequent_welding_definition : Welding_definition;
   WHERE
     WR1 : w_acyclic_sequence (precedent_welding_definition, subsequent_welding_definition);
  END_ENTITY;

FUNCTION w_acyclic_sequence ( input1 : Welding_definition; input2 : Welding_definition) : BOOLEAN;
RETURN (TRUE);
END_FUNCTION;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.6 2005/07/04 15:13:17 rocc Exp $
 ISO TC184/SC4/WG12 N2625 - ISO/TS 10303-1347 Wireframe 2d - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1775
*)

SCHEMA Wireframe_2d_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Geometrically_bounded_2d_wireframe_shape_representation
  SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
