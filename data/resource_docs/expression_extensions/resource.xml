<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: resource.xml,v 1.3 2003/01/03 00:09:21 shiangyulee Exp $ -->
<!DOCTYPE resource SYSTEM "../../../dtd/res_doc/resource.dtd">
<!-- Generated by mkresource.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the resource in IExplorer, open: sys/1_scope.xml
      -->
<resource
   name="expression_extensions"
   part="57"
   version="1"
   wg.number="00000"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="CD"
   language="E"
   publication.year="2003"
   published="n"
   rcs.date="$Date: 2003/01/03 00:09:21 $"
   rcs.revision="$Revision: 1.3 $">

 <keywords>
	 resource expressions entity instance logical
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="plcs.projlead"/>
   <editor ref="shiangyulee"/>
  </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
	   The <b>expression__extensions_schema</b> identifies expressions that refer to instances of entity datatypes 
	   as defined in ISO 10303-11. 
   </p>
   <p>
	The <b>logical_expressions_schema</b> identifies 
	expressions that return a logical result, where logical
	is defined as being true, false or unknown. 
	This corresponds to the logical 
	type defined in ISO 10303-11, the EXPRESS language reference manual.
	   Logical expressions are specified when it is necessary to define 
	   tests that shall be applied in a given circumstance. Such tests may be used to determine a course of action 
	   or whether some aspect of product data is applicable in a given circumstance.
	   It may not always be possible to fully evaluate a logical condition, in which case the result is "unknown".
   </p>
   <p>
	   This part of ISO 10303 builds on resources defined for expressions in 
	   ISO 13584-20, Parts library - Logical resource: Logical model of expressions.
   </p>

 </purpose>

 <!-- Schema Interface express-g diagrams  -->
 <!-- refer to p41ed2 as example  -->
 <schema_diag>
   <express-g>
     <imgfile file="schema_diagexpg1.xml"/>
   </express-g>
 </schema_diag>

 <!-- Items in scope -->
 <inscope>
	 <li>expressions that return logical results.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

<schema name="expression_extensions_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
   <introduction>
   </introduction>
   <fund_cons/>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="expression_extensions_schemaexpg2.xml"/>
   </express-g>
</schema>
<schema name="logical_expressions_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
   <introduction>
   </introduction>
   <fund_cons/>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="logical_expressions_schemaexpg2.xml"/>
     <imgfile file="logical_expressions_schemaexpg3.xml"/>
     <imgfile file="logical_expressions_schemaexpg4.xml"/>
   </express-g>
</schema>

 <shortnames/>

 <tech_discussion/>

 <examples/>

 <add_scope/>

 <bibliography/>
</resource>

