<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: resource.xml,v 1.13 2013/10/15 11:04:55 lothartklein Exp $ -->
<!DOCTYPE resource SYSTEM "../../../dtd/res_doc/resource.dtd">
<!-- Generated by mkresource.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the resource in IExplorer, open: sys/1_scope.xml
      -->
<resource
   name="geometric_and_topological_representation"
   name.french="Repr&#233;sentation g&#233;om&#233;trique et topologique"
   part="42"
   version="5"
   object.reg.version="10"
   sc4.working_group="12"
   wg.number="8544"
   wg.number.express="8545"
   checklist.internal_review="7629"
   checklist.project_leader="7630"
   checklist.convener="7631"
   status="DIS"
   language="E"
   publication.year="2015"
   publication.date="2015-04-01" 
   published="n"
   previous.revision.year="2014" 
   previous.revision.cancelled="YES"
   rcs.date="$Date: 2013/11/15 11:04:55 $"
   rcs.revision="$Revision: 1.13 $"
   development.folder="dvlp">

 <keywords>
    integrated generic resource,
    geometry, 
    topology, 
    solid model, 
    swept solid.
 </keywords>

<!-- the abstract for the resource. If not provided, the XSL will use the in scope -->
 <abstract>
 <!--   <p> ISO 10303-42:2013 specifies the generic resources for
    shape representation. </p> -->
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
    <projlead ref="ray.goult"/>
    <editor ref="lothar.klein"/>
  </contacts>
  
<changes>
	<change_edition version="2">
		<description>
	      Also changes of technical corrigendum 1 of edition 2 are listed here.
		</description>
		<schema.changes schema_name="geometry_schema"> 
			<schema.additions>
				<modified.object type="ENTITY" name="above_plane"/>
				<modified.object type="ENTITY" name="b_spline_volume"/>
				<modified.object type="ENTITY" name="b_spline_volume_with_knots"/>
				<modified.object type="ENTITY" name="bezier_volume"/>
				<modified.object type="ENTITY" name="block_volume"/>
				<modified.object type="ENTITY" name="clothoid"/>
				<modified.object type="ENTITY" name="cylindrical_point"/>
				<modified.object type="ENTITY" name="cylindrical_volume"/>
				<modified.object type="CONSTANT" name="dummy_gri"/>
				<modified.object type="ENTITY" name="dupin_cyclide_surface"/>
				<modified.object type="ENTITY" name="eccentric_conical_volume"/>
				<modified.object type="ENTITY" name="ellipsoid_volume"/>
				<modified.object type="ENTITY" name="oriented_surface"/>
				<modified.object type="ENTITY" name="hexahedron_volume"/>
				<modified.object type="ENTITY" name="make_array_of_array_of_array"/>
				<modified.object type="ENTITY" name="point_in_volume"/>
				<modified.object type="ENTITY" name="polar_point"/>
				<modified.object type="ENTITY" name="pyramid_volume"/>
				<modified.object type="ENTITY" name="quasi_uniform_volume"/>
				<modified.object type="ENTITY" name="rational_b_spline_volume"/>
				<modified.object type="ENTITY" name="same_side"/>
				<modified.object type="ENTITY" name="spherical_point"/>
				<modified.object type="ENTITY" name="spherical_volume"/>
				<modified.object type="ENTITY" name="surface_boundary"/>
				<modified.object type="ENTITY" name="surface_curve_swept_surface"/>
				<modified.object type="ENTITY" name="tetrahedron_volume"/>
				<modified.object type="ENTITY" name="toroidal_volume"/>
				<modified.object type="ENTITY" name="volume"/>
				<modified.object type="ENTITY" name="wedge_volume"/>
			</schema.additions>
			<schema.modifications>
				<modified.object type="ENTITY" name="axis1_placement"/>
				<modified.object type="FUNCTION" name="base_axis"/>
				<modified.object type="FUNCTION" name="build_axes"/>
				<modified.object type="FUNCTION" name="build_2axes"/>
				<modified.object type="ENTITY" name="cartesian_transformation_operator_3d"/>
				<modified.object type="ENTITY" name="cartesian_transformation_operator_2d"/>
				<modified.object type="ENTITY" name="composite_curve_segment"/>
				<modified.object type="FUNCTION" name="constraints_param_b_spline"/>
				<modified.object type="FUNCTION" name="cross_product"/>
				<modified.object type="ENTITY" name="curve_bounded_surface"/>
				<modified.object type="FUNCTION" name="default_b_spline_curve_weights"/>
				<modified.object type="FUNCTION" name="default_b_spline_knot_mult"/>
				<modified.object type="FUNCTION" name="default_b_spline_knots"/>
				<modified.object type="ENTITY" name="default_b_spline_surface_weights"/>
				<modified.object type="ENTITY" name="geometric_representation_item"/>
				<modified.object type="FUNCTION" name="get_basis_surface"/>
				<modified.object type="FUNCTION" name="list_to_array"/>
				<modified.object type="FUNCTION" name="make_array_of_array"/>
				<modified.object type="FUNCTION" name="orthogonal_complement"/>
				<modified.object type="ENTITY" name="point"/>
				<modified.object type="ENTITY" name="rectangular_composite_surface"/>
				<modified.object type="FUNCTION" name="scalar_times_vector"/>
				<modified.object type="ENTITY" name="surface_of_revolution"/>
				<modified.object type="ENTITY" name="surface_patch"/>
				<modified.object type="ENTITY" name="swept_surface"/>
				<modified.object type="ENTITY" name="trimmed_curve"/>
				<modified.object type="FUNCTION" name="vector_sum"/>
				<modified.object type="FUNCTION" name="vector_difference"/>
				<modified.object type="ENTITY" name="surface_of_revolution"/>
				<modified.object type="FUNCTION" name="first_proj_axis"/>
				<modified.object type="FUNCTION" name="list_to_array"/>
				<modified.object type="FUNCTION" name="make_array_of_array"/>
				<modified.object type="FUNCTION" name="make_array_of_array_of_array"/>
			</schema.modifications>
		</schema.changes>
		<schema.changes schema_name="topology_schema"> 
			<schema.additions>
				<modified.object type="FUNCTION" name="closed_shell_reversed"/>
				<modified.object type="ENTITY" name="connected_face_sub_set"/>
				<modified.object type="CONSTANT" name="dummy_tri"/>
				<modified.object type="FUNCTION" name="open_shell_reversed"/>
				<modified.object type="ENTITY" name="seam_edge"/>
				<modified.object type="ENTITY" name="subedge"/>
			</schema.additions>
			<schema.modifications>
				<modified.object type="ENTITY" name="edge"/>
				<modified.object type="FUNCTION" name="edge_reversed"/>
				<modified.object type="FUNCTION" name="face_bound_reversed"/>
				<modified.object type="FUNCTION" name="face_reversed"/>
				<modified.object type="ENTITY" name="face_surface"/>
				<modified.object type="FUNCTION" name="mixed_loop_type_set"/>
				<modified.object type="FUNCTION" name="path_head_to_tail"/>
				<modified.object type="FUNCTION" name="path_reversed"/>
				<modified.object type="FUNCTION" name="shell_reversed"/>
			</schema.modifications>
		</schema.changes>
		<schema.changes schema_name="geometric_model_schema"> 
			<schema.additions>
				<modified.object type="ENTITY" name="brep_2d"/>
				<modified.object type="ENTITY" name="circular_area"/>
				<modified.object type="ENTITY" name="convex_hexahedron"/>
				<modified.object type="ENTITY" name="cyclide_segment_solid"/>
				<modified.object type="ENTITY" name="eccentric_cone"/>
				<modified.object type="ENTITY" name="ellipsoid"/>
				<modified.object type="ENTITY" name="elliptic_area"/>
				<modified.object type="ENTITY" name="faceted_primitive"/>
				<modified.object type="ENTITY" name="half_space_2d"/>
				<modified.object type="ENTITY" name="polygonal_area"/>
				<modified.object type="ENTITY" name="primitive_2d"/>
				<modified.object type="ENTITY" name="rectangular_area"/>
				<modified.object type="ENTITY" name="rectangular_pyramid"/>
				<modified.object type="ENTITY" name="sectioned_spine"/>
				<modified.object type="ENTITY" name="surface_curve_swept_area_solid"/>
				<modified.object type="ENTITY" name="surface_curve_swept_face_solid"/>
				<modified.object type="ENTITY" name="tetrahedron"/>
				<modified.object type="ENTITY" name="trimmed_volume"/>
			</schema.additions>
			<schema.modifications>
				<modified.object type="TYPE" name="boolean_operand"/>
				<modified.object type="FUNCTION" name="build_transformed_set"/>
				<modified.object type="TYPE" name="csg_primitive"/>
				<modified.object type="ENTITY" name="csg_solid"/>
				<modified.object type="ENTITY" name="revolved_area_solid"/>
				<modified.object type="ENTITY" name="revolved_face_solid"/>
				<modified.object type="ENTITY" name="solid_model"/>
				<modified.object type="ENTITY" name="swept_area_solid"/>
				<modified.object type="ENTITY" name="swept_face_solid"/>
				<modified.object type="ENTITY" name="revolved_face_solid"/>
				<modified.object type="ENTITY" name="revolved_area_solid"/>
				<modified.object type="ENTITY" name="box_domain"/>
				<modified.object type="ENTITY" name="rectangle_domain"/>
				<modified.object type="FUNCTION" name="build_transformed_set"/>
			</schema.modifications>
		</schema.changes>


	</change_edition>

	<change_edition version="3">
		<description>
	      Also changes of technical corrigendum 1 to edition 3 are included here that
	      modified the description of cartesian_transformation_operator, clarified the interpretation of angular parameters, changed the REFERENCE FROM statements in the geometric model schema.
		</description>
		<schema.changes schema_name="geometry_schema"> 
			<schema.additions>
				<modified.object type="ENTITY" name="circular_involute"/>
			</schema.additions>
			<schema.modifications>
				<modified.object type="ENTITY" name="associated_surface"/>
				<modified.object type="ENTITY" name="build_axes"/>
				<modified.object type="ENTITY" name="normalise"/>
				<modified.object type="ENTITY" name="scalar_times_vector"/>
				<modified.object type="ENTITY" name="vector_difference"/>
				<modified.object type="ENTITY" name="vector_sum"/>
			</schema.modifications>
		</schema.changes>
		<schema.changes schema_name="topology_schema"> 
			<schema.modifications>
				<modified.object type="FUNCTION" name="edge_curve_pcurves"/>
				<modified.object type="FUNCTION" name="vertex_point_pcurves"/>
			</schema.modifications>
		</schema.changes>
		<schema.changes schema_name="geometric_model_schema"> 
			<schema.additions>
				<modified.object type="ENTITY" name="swept_disk_solid"/>
			</schema.additions>
			<schema.modifications>
				<modified.object type="FUNCTION" name="path_head_to_tail"/>
				<modified.object type="FUNCTION" name="msb_shells"/>
			</schema.modifications>
		</schema.changes>
	</change_edition>
      
	<change_edition version="4">
			<description>
      This fourth edition adds tessellated geometry and extends the 2D CSG capabilities. 
			</description>
					
		<schema.changes schema_name="geometry_schema"> 
			<schema.modifications>
				<modified.object type="FUNCTION" name="dimension_of"/>
				<modified.object type="FUNCTION" name="normalise"/>
				<modified.object type="FUNCTION" name="scalar_times_vector"/>
				<modified.object type="FUNCTION" name="vector_difference"/>
				<modified.object type="FUNCTION" name="vector_sum"/>
			</schema.modifications>
		</schema.changes>

		<schema.changes schema_name="geometric_model_schema"> 
			<schema.additions>
				<modified.object type="ENTITY" name="area_with_outer_boundary"/>
				<modified.object type="TYPE" name="bounded_primitive_2d"/>
				<modified.object type="ENTITY" name="complex_triangulated_face"/>
				<modified.object type="ENTITY" name="complex_triangulated_surface_set"/>
				<modified.object type="ENTITY" name="coordinates_list"/>
				<modified.object type="TYPE" name="edge_or_curve"/>
				<modified.object type="TYPE" name="face_or_surface"/>
				<modified.object type="ENTITY" name="repositioned_tessellated_item"/>
				<modified.object type="ENTITY" name="tessellated_connecting_edge"/>
				<modified.object type="ENTITY" name="tessellated_curve_set"/>
				<modified.object type="ENTITY" name="tessellated_edge"/>
				<modified.object type="ENTITY" name="tessellated_edge_or_vertex"/>
				<modified.object type="ENTITY" name="tessellated_face"/>
				<modified.object type="ENTITY" name="tessellated_geometric_set"/>
				<modified.object type="ENTITY" name="tessellated_item"/>
				<modified.object type="ENTITY" name="tessellated_point_set"/>
				<modified.object type="ENTITY" name="tessellated_shape_representation"/>
				<modified.object type="ENTITY" name="tessellated_shell"/>
				<modified.object type="ENTITY" name="tessellated_solid"/>
				<modified.object type="ENTITY" name="tessellated_structured_item"/>
				<modified.object type="ENTITY" name="tessellated_surface_set"/>
				<modified.object type="ENTITY" name="tessellated_vertex"/>
				<modified.object type="ENTITY" name="tessellated_wire"/>
				<modified.object type="ENTITY" name="triangulated_face"/>
				<modified.object type="ENTITY" name="triangulated_surface_set"/>
			</schema.additions>
		</schema.changes>
	</change_edition>
      <change_edition version="5">
      			<description>
            This fifth edition adds entities to enable isiogeometric analysis and curved triangles as tessellated geometry. Additions to the topology schema enable an edge with defined length but no geometry to support flexible strucure topology. A new schema is added to enable shape models defined by 3D scanned data.
      			</description>
      					
      		<schema.changes schema_name="geometry_schema"> 
      			<schema.modifications>
      				<modified.object type="ENTITY" name="geometric_representation_item"/>
      				<modified.object type="ENTITY" name="bounded_curve"/>
      				<modified.object type="ENTITY" name="bounded_surface"/>
      				<modified.object type="ENTITY" name="volume"/>
      			        <modified.object type="RULE" name="compatible_dimension"/>
      			</schema.modifications>
      			<schema.additions>
      			    <modified.object type="TYPE" name="locally_refined_spline_type_enum"/>
      			    <modified.object type="TYPE" name="linearily_independent_enum"/>
      			    <modified.object type="TYPE" name="spline_knot_values"/>
      			    <modified.object type="ENTITY" name="local_b_spline"/>
      			    <modified.object type="ENTITY" name="locally_refined_spline_curve"/>
      			    <modified.object type="ENTITY" name="rational_locally_refined_spline_curve"/>
      			    <modified.object type="ENTITY" name="locally_refined_spline_surface"/>
      			    <modified.object type="ENTITY" name="rational_locally_refined_spline_surface"/>
      			    <modified.object type="ENTITY" name="locally_refined_spline_volume"/>
      			    <modified.object type="ENTITY" name="rational_llocally_refined_spline_volume"/>
      			    <modified.object type="FUNCTION" name="increasing"/>
      			    <modified.object type="FUNCTION" name="constraints_param_local_b_spline"/>
      			    <modified.object type="FUNCTION" name="weights_positive"/>
      			    <modified.object type="FUNCTION" name="check_geometric_dimension"/>
      			    <modified.object type="FUNCTION" name="geometric_dimensionalities_in_contexts"/>
      		         </schema.additions>
      		</schema.changes>
      
      		<schema.changes schema_name="topology_schema"> 
      			<schema.modifications>
			      	<modified.object type="ENTITY" name="edge"/>
			      	<modified.object type="ENTITY" name="topological_representation_item"/>
			</schema.modifications>
      			<schema.additions>
      				<modified.object type="ENTITY" name="volume_with_faces"/>
      				<modified.object type="ENTITY" name="volume_with_parametric_boundary"/>
      				<modified.object type="ENTITY" name="volume_with_shell"/>
      				<modified.object type="ENTITY" name="connected_volume_set"/>
      				<modified.object type="ENTITY" name="connected_volume_sub_set"/>
      			         <modified.object type="ENTITY" name="vertex_on_edge"/>
      			         <modified.object type="ENTITY" name="edge_with_length"/>
      			</schema.additions>
      		</schema.changes>
      	        <schema.changes schema_name="geometric_model_schema_schema"> 
	      			<schema.modifications>
				      		<modified.object type="ENTITY" name="tessellated_face"/>
				      		<modified.object type="ENTITY" name="tessellated_connecting_edge"/>
				      		<modified.object type="ENTITY" name="tessellated_edge"/>
				      		<modified.object type="ENTITY" name="tessellated_shape_representation"/>
				</schema.modifications>
	      			<schema.additions>
	      				<modified.object type="ENTITY" name="cubic_bezier_tessellated_edge"/>
	      				<modified.object type="ENTITY" name="cubic_bezier_triangulated_face"/>
	      				<modified.object type="ENTITY" name="cubic_tessellated_connecting_edge"/>
	      			</schema.additions>
      		 </schema.changes>
	             	        <schema.changes schema_name="scan_data_3d_shape_model_schema"> 
	       	      			<schema.additions>
	       	      				<modified.object type="TYPE" name="point_cloud_set_or_superset"/>
	       	      				<modified.object type="ENTITY" name="point_cloud_dataset"/>
	       	                                <modified.object type="ENTITY" name="point_cloud_superdataset"/>
	       	      				<modified.object type="ENTITY" name="point_cloud_dataset_with_colours"/>
	       	      				<modified.object type="ENTITY" name="point_cloud_dataset_with_intensities"/>
	       	      				<modified.object type="ENTITY" name="point_cloud_dataset_with_normals"/>
	       	      				<modified.object type="ENTITY" name="scan_3d_model"/>
	       	      				<modified.object type="ENTITY" name="scan_data_shape_representation"/>
	       	      				<modified.object type="ENTITY" name="scanned_data_item"/>
	       	      				<modified.object type="ENTITY" name="scanner_basic_properties"/>
	       	      				<modified.object type="ENTITY" name="scanner_property"/>
	       	      				<modified.object type="ENTITY" name="triangulated_point_cloud_dataset"/>
	       	      			</schema.additions>
      		</schema.changes>
      	</change_edition>
      
</changes>
      
<foreword>

 	This fifth edition cancels and replaces the fourth edition (ISO 10303-42:2014), 
 	of which it constitutes a technical revision. 
 	
 </foreword>
      
      

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   
       <p>This document specifies the integrated resources used for
         geometric
           and topological representation.  Their primary application is for
       explicit
           representation of the shape or geometric form of a product model.
       The shape
        representation presented here  has been designed to facilitate stable and
      
       efficient  communication  when mapped to a physical file. </p>
      <p>
          The geometry in clause 4 is exclusively the geometry of parametric curves
        and surfaces.  It includes the curve and    surface entities and other
        entities, functions and data types necessary for    their definition.  A
        common scheme has been used for the definition of both    two-dimensional
       and
        three-dimensional geometry.  All geometry is defined in a coordinate system
        which is established as part of the context of the item which it represents.
      
        These concepts are fully defined in ISO 10303 Part 43.
        </p>
      <p>
         The topology in clause 5 is concerned  with   connectivity relationships
        between objects rather than with the precise geometric form of objects. This
        clause contains the basic topological entities and specialised subtypes of
        these. In some cases the subtypes have geometric associations. Also included
        are functions, particularly constraint functions, and data types necessary
        for the definitions of the topological entities.
      </p>
        <p>    The geometric models in clause 6 provide basic resources for the
          communication    of data describing the precise size and shape of
           three-dimensional solid
            objects.    The geometric shape models provide a complete representation
        of   the shape which in many cases includes both geometric and topological
        data. Included here are the two classical types of solid model,
        constructive solid geometry (CSG) and boundary representation (B-rep).
            Other entities, providing a  rather less complete description  of the
        geometry of a product, and with less consistency constraints,
         are also included.
      </p>
      
 </purpose>

 <!-- Schema Interface express-g diagrams  -->
 <!-- refer to p41ed2 as example  -->
 
   <schema_diag>
     <express-g>
       <imgfile file="schema_diagexpg1.xml" title="Schema level diagram of relationships among ISO 10303-42 schemas and other
                 resource schemas" />
     </express-g>
   </schema_diag>

 

 <!-- Items in scope -->
<inscope>
   <p>The following are in the scope of the geometry schema: </p>
   <li>definition of points, vectors, parametric curves and parametric surfaces;</li>
   <li>definition of finite volumes with internal parametrisation;</li>
   <li>definition of transformation operators;</li>
   <li>points defined directly by their coordinate values or in terms of the parameters of an existing curve or surface;</li>
   <li>definition of conic curves and elementary surfaces;</li>
   <li>definition of curves defined on a parametric surface;</li>
   <li>definition of general parametric spline curves, surfaces and volumes;</li>
   <li>definition of locally refined spline curves, surfaces and volumes;</li>
   <li>definition of point, curve and surface replicas;</li>
   <li>definition of offset curves and surfaces; </li>
   <li>definition of intersection curves.  </li>
 
 <p>The following are in the scope of the topology schema: </p>
   <li>definition of the
  fundamental topological entities vertex, edge, and face, each with  a specialised subtype to enable it to be associated with the
  geometry of a point, curve, or surface, respectively; </li>
   <li>collections of the basic entities to form topological structures of path, loop and shell and 
  constraints to ensure the integrity of these structures; </li>
  <li>the association of faces with geometric volumes; </li>
   <li>orientation of topological entities.</li>
  <p>The following are in the scope of the geometric model schema: </p> 
   <li>data describing the precise geometric form of three-dimensional solid</li>
   <li>objects;</li>
   <li> constructive solid geometry (CSG) models;</li>
   <li>CSG models in two-dimensional space;</li>
   <li>definition of CSG primitives and half-spaces;</li>
   <li>creation of solid models by sweeping operations;</li>
    <li> manifold boundary representation (B-rep) models;</li>
    <li> constraints to ensure the integrity of B-rep models; </li>
    <li> surface models;  </li>
    <li> wireframe models; </li>
    <li> geometric sets; </li>
    <li> creation of a replica of a solid model in a new location; </li>
    <li> tessellated geometry;	</li>
    <li> the association of tessellated geometry with exact geometry.</li>
  </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>all other forms of procedurally defined curves and surfaces;</li>
   <li>curves and surfaces which do not have a  parametric form of representation;</li>
   <li>any form of explicit representation of a ruled surface.
    <note> <p>For a ruled surface the geometry is  critically dependent upon the parametrisation of the boundary curves
     and the method of associating pairs of points on the two curves.  A ruled surface with B-spline boundary curves can however be 
     exactly represented by the B-spline surface entity. </p> </note>
    </li>
   <li>spatial occupancy forms of solid models (such as octree models);</li>
   <li>geometric tolerances;</li>
   <li>implicit forms of representation in terms of features;</li>
   <li>assemblies and mechanisms.</li>
 </outscope>


 <normrefs>
       <normref.inc normref="ref10303-1"/>
       <normref.inc normref="ref10303-11"/>
       <normref.inc normref="ref10303-41"/>
       <normref.inc normref="ref10303-43"/>
 </normrefs>

<definition>
   <term>arcwise connected</term>
  <def>such that any pair of distinct points in the relevant domain may be connected by a continuous arc entirely contained within 
  that domain   
 </def>
</definition>
 
 
 
 <definition>
   <term>axi-symmetric  </term>
  <def> invariant under all rotations about a central axis
  </def>
</definition>

 <definition>
   <term>bounds  </term>
  <def>limits of a topological entity
  
 <note> Bounds are the topological entities of lower dimensionality which mark the
    limits of a topological entity. The bounds of a face are loops, and the
    bounds of an edge are vertices. </note>
 </def>
</definition>

 <definition>
   <term>boundary  </term>
  <def> subset of the points x in a domain X having the property that any open ball U centred on x satisfies U &#x22c2; X &#8800; U 
  
  
 <note> Any open ball centred on the boundary of the domain will contain both points inside the domain and points outside the domain.  </note>
 </def>
</definition>

 <definition>
    <term>boundary representation solid model  </term>
 
  
  <def><p> B-rep </p> type of geometric model in which the size and shape of a solid is defined in terms of the faces, edges
and vertices which make up its boundary  
  </def>
</definition>

<definition>
   <term>closed curve </term>
 <def>curve such that both end points are the same
 </def>
</definition>

<definition>
   <term>closed surface </term>
 <def> connected 2-manifold that divides space
   into exactly two connected components, one of which is finite
 </def>
</definition>

<definition>
   <term>completion of a topological entity </term>
 <def>set consisting of the entity in question together with all the
   faces, edges and vertices referenced, directly or indirectly, in the
   definition of the bounds of that entity
 </def>
</definition>

<definition>
   <term>connected  </term>
 
 <def> synonym for arcwise connected </def>
</definition>
 
<definition>
   <term>connected component  </term>
 <def> maximal connected subset of a domain
 </def>
</definition>

<definition>
   <term>constructive solid geometry  </term>

 
 <def><p> CSG </p>type of geometric
  modelling in which a solid is defined as the result of a sequence of
  regularised Boolean operations operating on solid models
 </def>
</definition>
 
 <definition>
    <term>coordinate space  </term>
  <def> reference system that associates a unique set of n parameters with each point in an
  n-dimensional space
  </def>
 </definition>
 
 <definition>
    <term>curve  </term>
  <def> set of mathematical points which is the image, in two- or
 three-dimensional space, of a continuous function defined over a connected subset
 of
  the real line R<sup>1</sup>, and which is not a single point
  </def>
 </definition>

 <definition>
     <term>cycle  </term>
   <def>chain of alternating vertices and edges in a graph such
    that the first and last vertices are the same    
   </def>
 </definition>
 
 <definition>
     <term><i>d</i>-manifold with boundary  </term>
   
   <def>domain which is the union of its
 <i>d</i>-dimensional interior and its boundary
     </def>
 </definition>
 <definition>
      <term>dimensionality </term>
        <def>number of independent
   coordinates in the parameter space of a geometric entity 
       <note><p> A curve has dimensionality 1, a surface has dimensionality 2. The
   dimensionality of topological entities which need not have
   domains is specified in the entity definitions. The dimensionality of
   a list or set is the maximum of the dimensionalities of the elements of
   that list or set. </p>  </note>
        </def>
 </definition>
 
   
 <definition>
      <term>domain  </term>
    <def>mathematical point set in model space corresponding to an entity
    </def>
 </definition>
 <definition>
      <term>euler equations </term>
     <def>equations used to verify the topological consistency of objects
    <note><p> Various equalities relating topological
   properties of entities are derived from the invariance of a number known as
   the Euler characteristic. Typically, these are used as quick checks on the
   integrity of the topological structure.  A violation of an Euler condition
   signals an &quot;impossible&quot; object.  Two special cases are important in this
   document.
       The Euler equation for graphs is discussed in 5.2.3.
  Euler
       conditions for surfaces are discussed in 5.4.25 and
    5.2,27. </p>  </note>
    </def>
 </definition>
 <definition>
       <term>extent</term>     
     <def>measure of the domain of a geometric entity in units appropriate to the dimensionality of the entity
      
     <note><p> Length, area and volume are used for dimensionalities 1, 2, and
   3, respectively. Where necessary, the symbol &#926; will be used to denote extent. </p></note>
     </def>
 </definition>
 <definition>
       <term>finite  </term>
     <def>capable of being completely counted or measured
      
     <note><p>An entity is finite (or alternatively bounded) if there
 is a finite upper bound on the distance between any two points in its
 domain. </p>  </note>
     </def>
 </definition>
 <definition>
        <term>genus of a graph </term>
      <def>integer-valued invariant defined algorithmically by the graph
       traversal algorithm
       
      <note><p>The graph traversal algorithm is described in the note
     in 5.2.3. </p>  </note>
      </def>
  </definition>
 <definition>
        <term>genus of a surface  </term>
      <def>number of handles that are added to a sphere to produce a
  surface  homeomorphic to the surface in question       
      <note><p>Handle is defined below. </p>  </note>
      </def>
  </definition>
 <definition>
        <term>geometrically founded </term>
      <def>having an associated coordinate space       
      <note><p>Geometric founding is a property of <b>geometric_representation_item</b>s (see 4.4.2)
asserting their relationship to a coordinate space in which the coordinate values
of points and directions on which they depend for position and orientation are
measured.  </p>  </note>
      </def>
  </definition>
 <definition>
        <term>geometrically related </term>
      <def>related by being in the same geometric context
       
      <note><p>If two <b>geometric_representation_item</b>s (see 4.4.2)
are geometricaslly related then  the concepts of distance and direction between them
are defined.  </p>  </note>
      </def>
  </definition>
 <definition>
        <term>geometric coordinate system  </term>
      <def>underlying global rectangular  Cartesian coordinate system to which all geometry refers
      </def>
  </definition>
  <definition>
          <term>graph </term>
        <def>set of vertices and edges
         
        <note><p>The graphs discussed in this
       document are generally called pseudographs in the technical literature
       because they allow self-loops and also multiple edges connecting the same two vertices. </p></note>
        </def>
    </definition>
 <definition>
         <term>handle  </term>
       <def>structure distinguishing a torus from a sphere, which can be viewed as
    a tubular surface connecting two holes in a surface
       </def>
   </definition>
 <definition>
         <term>homeomorphic</term>
       <def>in one to one correspondence
        
       <note><p>Domains X and Y are homeomorphic if there is
    a continuous function <i>f</i> from X to Y which is a one-to-one
    correspondence, so that the inverse function <i>f</i>&#8194;<sup>-1</sup> exists, and <i>f</i>&#8194;<sup>-1</sup>  is also continuous. </p></note>
       </def>
   </definition>
   <definition>
            <term>inside </term>
          <def>completely included within
           
          <note><p>A domain X is inside domain Y if both domains are contained
   in the same Euclidean space, R<sup>m</sup>, and  Y separates R<sup>m</sup>
   into exactly two connected components, one of which is finite, and X
   is contained in the finite component. </p></note>
          </def>
      </definition>
 <definition>
          <term>interior</term>
        <def>point set resulting from exclusion of  all boundary points from a bounded point set         
        <note><p>The d-dimensional interior of a d-dimensional domain X contained in
  R<sup>m</sup> is the set of mathematical points x in X for which there is an open
  ball U in R<sup>m</sup> containing x such that the intersection U &#x22c2; X is
  homeomorphic to an open ball in R<sup>d</sup>. </p></note>
        </def>
    </definition>
 <definition>
          <term>list</term>
        <def>ordered homogeneous collection with possibly duplicate members
            </def>
    </definition>
 <definition>
          <term>model space</term>
        <def>space with dimensionality 2 or 3 in which the geometry of a representation of a physical object, or any of its elements, 
        is defined
             </def>
    </definition>
 <definition>
          <term>open curve</term>
        <def>curve which has two distinct end points
        </def>
    </definition>
 <definition>
          <term>open surface</term>
        <def>surface which is a manifold with boundary, but is not closed
         
        <note><p>Either it is not finite, or it does not divide space into exactly two connected components. </p></note>
        </def>
    </definition>
   <definition>
          <term>orientable</term>
        <def>capable of being oriented in space
         
        <note><p>A surface is  orientable if a consistent,
       continuously varying choice can be made of the sense of the normal
   vectors
       to the surface. This does not require a continuously varying choice of
       the <i>values</i> of the normal vectors; the surface may have tangent  plane discontinuities.  </p></note>
        </def>
    </definition>
  <definition>
            <term>overlap</term>
          <def>area or range shared in common by two or more geometric elements
           
          <note><p> Two topological entities overlap when they have shells, faces, edges, or vertices in
       common.</p></note>
          </def>
      </definition>
 <definition>
           <term>parameter range</term>
         <def>range of valid parameter values for a curve, surface, or volume
          
         </def>
     </definition>
 <definition>
           <term>parameter space</term>
         <def>one-dimensional space associated with a curve via its uniquely defined parameterisation, or the two-dimensional space
       associated with a surface          
         
         </def>
     </definition>
 <definition>
           <term>parametric volume</term>
         <def>bounded region of three dimensional model
space with an associated parametric coordinate system such that every interior
point is associated with a list <i>(u,v,w)</i> of parameter values
         </def>
     </definition>
  <definition>
              <term>placement coordinate system</term>
            <def>rectangular Cartesian coordinate system  associated with the placement of a geometric entity in space
             
            <note><p>This is  used to  describe the interpretation of the attributes and to associate a unique
       parameterisation with curve and surface entities</p></note>
            </def>
   </definition>
 <definition>
          <term>self-intersect</term>
        <def>intersection of a geometric element with itself
         
        <note><p>A curve or surface self-intersects if there is a mathematical point in its
   domain which is the image of at least two points in the object's parameter range, and
   one of those two points lies in the interior of the parameter range. A vertex, edge or face self-intersects if its domain does.</p></note>
     <note><p>A curve or surface is not considered to be self-intersecting
   just because it is closed. </p></note>        
        </def>
    </definition>
 <definition>
          <term>self-loop</term>
        <def>edge that has the same vertex at both ends
        </def>
    </definition>
 <definition>
          <term>set</term>
        <def>unordered collection in which no two members are equal
        </def>
    </definition>
 <definition>
          <term>space dimensionality</term>
        <def>number of parameters required to define the location of a point in the coordinate space
        </def>
    </definition>
 <definition>
          <term>tessellated geometry</term>
        <def>geometry composed of a large number of planar tiles, usually of triangular shape
         
        <note><p>Tessellated geometry is frequently used as an approximation to the exact shape of an object. </p></note>
        </def>
    </definition>
 <definition>
         <term>surface</term>
       <def>set of mathematical points which is the image of a
  continuous function defined over a connected subset of the plane R<sup>2</sup>
       </def>
   </definition>
  <definition>
         <term>topological sense</term>
       <def>sense of a topological entity as derived from the order of its attributes
   <example number="1"><p>The topological sense of an edge is from the edge start vertex to the edge end vertex.</p></example> 
   <example number="2"><p>The topological sense of a path follows the edges in their listed order.</p></example>  
   </def>
   </definition>     
 

 <abbreviations>
   	<abbreviation id="B-rep">
   		<acronym>B-rep</acronym>
   		<term>boundary representation solid model</term>
   	</abbreviation>
   	<abbreviation id="CSG">
   		<acronym>CSG</acronym>
   		<term>constructive solid geometry</term>
   	
   	
   	
   	</abbreviation>
 </abbreviations>

<schema name="geometry_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
     <introduction>
      <p> The subject of the <b>geometry_schema</b>  is the geometry of parametric
          curves and surfaces.  The <b>representation_schema</b> (see
          ISO 10303-43) and
          the <b>geometric_representation_context</b> defined in this Part
          of ISO 10303, provide the context
          in which the geometry is defined. The <b>geometric_representation_context</b>
           enables a distinction to be made between those items which are in the same
         context, and thus geometrically related, and those existing in
          independent coordinate spaces.  In particular, each
          <b>geometric_representation_item</b> has a <b>geometric_representation_context</b>
          which includes as an attribute the Euclidean dimension of its coordinate
          space. The coordinate system for this space is referred to as the 
          geometric coordinate system in this clause. Units associated with
          <b>length_measure</b>s and <b>plane_angle_measure</b>s are assumed
          to be assigned globally within this context.
          A global rule (<b>compatible_dimension</b>)  ensures that all
          <b>geometric_representation_item</b>s in the same
          <b>geometric_representation_context</b> have the same space
          dimensionality. The space dimensionality <b>dim</b> is a
          derived attribute of all subtypes of <b>geometric_representation_item</b>.
      </p>
        
      
      
      
      </introduction>
      <fund_cons>
      <p>  <b>4.2.1 Space Dimensionality </b> </p>
      <p>All geometry shall be defined in a right-handed
           rectangular Cartesian coordinate system with the same units on each
           axis. A common scheme has been used for the definition of both 
           two-dimensional and three-dimensional geometry. Points and directions exist 
           in both a two-dimensional and a three-dimensional form; these forms are
           distinguished solely by the presence, or absence, of a third coordinate
           value. Complex geometric entities are all defined using points and
           directions from which their space dimensionality can be deduced. </p>
            <p>  <b>4.2.2  Geometric relationships </b> </p>
       <p>    All <b>geometric_representation_item</b>s which are included as
           <b>items</b> in a <b>representation</b> having a
           <b>geometric_representation_context</b> are geometrically related.
           Any such <b>geometric_representation_item</b> is said to be
           geometrically founded in the context of that <b>representation</b>. 
           No geometric relationship, such as distance between points, is assumed
           to exist for <b>geometric_representation_item</b>s occurring as
           <b>items</b> in different <b>representation</b>s. </p>
         
         
         <p>  <b>4.2.3 Parametrisation of analytic curves and surfaces </b> </p>
         <p>     Each curve or surface specified here has a defined parametrisation.
              In some instances the definitions are in parametric terms. In others, 
              the conic curves and elementary surfaces, the definitions are in 
              geometric terms.
         
              In this latter case a placement coordinate system is used to define
              the parametrisation.  The geometric definitions contain some, but not
              all, of the data required for this.   The relevant data to define
              this placement coordinate system is contained in the
              <b>axis2_placement</b> associated with the individual curve and
              surface entities.
              
              Where the curve or surface parameterisation uses trigonometric functions,
               the parameter for the function behaves like an angle and can be considered
               to be an angular parameter.  Numerical values for such angular parameters
               shall use the current units for <b>plane_angle_measure</b>. </p>
         
         <p>  <b>4.2.4 Curves </b> </p>
          
            <p>   The curve entities defined in this schema include lines, elementary
               conics, a general parametric polynominal curve, and
               some referentially or procedurally defined curves.   All the curves 
               have a well defined parametrisation which makes it possible to trim a
               curve or identify points on the curve by parameter value. The
               geometric direction of a curve is the direction of increasing parameter value.
               For the conic curves, a method of representation is used which separates
               their geometric form from their orientation and position in space. In
               each case, the position and orientation information is conveyed by an
               <b>axis2_placement</b>.  The general purpose parametric curve is
               represented by the <b>b_spline_curve</b>  entity.  This was selected as
               the most stable form of representation for the communication of all 
               types of polynomial and rational parametric curves.  With appropriate 
               attribute values and subtypes, a <b>b_spline_curve</b>
               entity is capable of
               representing single span or spline curves of explicit polynomial, 
               rational, B&#233;zier or B-spline type.  A <b>composite_curve</b>
               entity, which includes the facility to communicate continuity
               information at the curve-to-curve transition points, is provided for 
               the construction of more complex curves. </p>
         
            <p>   The offset_curve and <b>curve_on_surface</b> types are curves
               defined with reference to other geometry.  Separate offset_curve
               entities exist for 2D and 3D applications.   The curve on surface 
               entities include an <b>intersection_curve</b> which represents the
               intersection of two surfaces.  Such a curve may be represented in 
               3D space or in the 2D parameter space of either of the surfaces. </p>
            
            <p>  <b>4.2.5  Surfaces </b> </p>
            <p>   The surface entities support the requirements of simple boundary
               representation (B-rep) solid modelling system and enable the communication of
               general polynomial and rational parametric surfaces.  The simple 
               surfaces are the planar, spherical, cylindrical, conical and toroidal 
               surfaces, a <b>surface_of_revolution</b> and a <b>surface_of_linear_extrusion</b>.
               As with curves, all surfaces have an associated standard 
               parametrisation.  In many cases the surfaces, as defined, are 
               unbounded; it is assumed that they will be bounded either
               explicitly or implicitly.  Explicit bounding is achieved with the 
               <b>rectangular_trimmed_surface</b> or <b>curve_bounded_surface</b> entities;
               implicit bounding requires the association of additional topological
               information to define a <b>face</b>. </p>
         
             <p>  The <b>b_spline_surface</b> entity and its subtypes provide the most
               general capability for the communication of all types of polynomial 
               and rational biparametric surfaces.  This entity uses control points 
               as the most stable form of representation for the surface geometry.  
               The <b>offset_surface</b> entity is intended for the communication of
               a surface obtained as a simple normal offset from a given surface.  
               The <b>rectangular_composite_surface</b> entity provides the basic
               capability to connect together a
               rectangular mesh of distinct surface
               patches, specifying the degree of continuity from patch to patch. </p>
           
              <p>  <b> 4.2.6  Preferred form </b> </p>
              <p> Some of the geometric entities provide the potential
               capability of defining an item of geometry in more than one way. Such 
               multiple representations are accommodated by requiring the nomination of 
               a `preferred form' or `master representation'. This is the form which 
               is used to determine the parametrisation.  </p>
               <note>  The <b>master_representation</b> attribute acknowledges the
               impracticality of ensuring that multiple forms are indeed identical and
               allows the indication of a preferred form. This would probably be
               determined by the creator of the data. All characteristics, such as 
               parametrisation, domain, and results of evaluation, for an entity 
               having multiple representations, are derived from the master 
               representation. Any use of the other representations is a compromise 
               for practical considerations. </note>
               
               <table caption="Geometry mathematical symbology" number="1" id="table_1">
   	         <tr><th>Symbol</th><th>Definition</th></tr>
   	              <tr><td><i>a</i>    </td><td>Scalar quantity </td></tr>
   	              <tr><td><b>A</b>  </td><td>Vector quantity</td></tr>
   	              <tr><td>&lt; &gt; </td><td>Vector normalisation </td></tr>
   	              <tr><td><b>a</b></td><td>Normalised vector  &lt; <b>A</b> &gt; = <b>A</b> &#047; &#124; <b>A</b> &#124;</td></tr>
   	    	  <tr><td> &#215; </td><td>Vector (cross) product </td></tr>
   	              <tr><td>&#8901; </td> <td>Scalar product </td></tr>
   	              <tr><td><b>A</b> &#8594; <b>B</b> </td><td><b>A</b> is transformed to <b>B</b> </td></tr>
   	    	  <tr><td> &#955;<i>(u)</i>   </td><td>Parametric curve </td></tr>
   	              <tr><td> &#963;<i>(u,v)</i></td><td> Parametric surface </td></tr>
   	              <tr><td><i>S(x,y,z)</i> </td> <td> Analytic surface </td></tr>
   	              <tr><td><i> C<sub>x</sub></i>    </td><td> Partial differential of <i>C</i> with  respect to <i>x</i></td></tr>
   	              <tr><td>&#963;<sub><i>u</i></sub> </td><td>  Partial differential of &#963;<i>(u,v)</i> with respect to <i>u</i></td></tr>
   	              <tr><td><i>S<sub>x</sub></i> </td> <td>  Partial derivative of <i>S</i> with  respect to <i>x</i>  </td></tr>
   	              <tr><td>&#124; &#124;   </td><td>Absolute value, or magnitude or determinant </td></tr>
   	              <tr><td>R<sup>m</sup>    </td><td> m-dimensional real space</td></tr>
    </table>
</fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="geometry_schemaexpg1.xml"/>
     <imgfile file="geometry_schemaexpg2.xml"/>
     <imgfile file="geometry_schemaexpg3.xml"/>
     <imgfile file="geometry_schemaexpg4.xml"/>
     <imgfile file="geometry_schemaexpg5.xml"/>
     <imgfile file="geometry_schemaexpg6.xml"/>
     <imgfile file="geometry_schemaexpg7.xml"/>
     <imgfile file="geometry_schemaexpg8.xml"/>
     <imgfile file="geometry_schemaexpg9.xml"/>
     <imgfile file="geometry_schemaexpg10.xml"/>
     <imgfile file="geometry_schemaexpg11.xml"/>
     <imgfile file="geometry_schemaexpg12.xml"/>
     <imgfile file="geometry_schemaexpg13.xml"/>
     <imgfile file="geometry_schemaexpg14.xml"/>
     <imgfile file="geometry_schemaexpg15.xml"/>
     <imgfile file="geometry_schemaexpg16.xml"/>
   </express-g>
</schema>
<schema name="topology_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
     <introduction>
  <p>The topology resource model has its basis in boundary
      representation solid modelling but can be used in any other
      application where an explicit method is required to represent
      connectivity. </p>
  <p>The table below shows the symbols used in the description of the topology schema.</p>
    <table caption="Topology symbol definitions" number="2" id="table_2">
          <tr><th>Symbol</th><th>Definition</th></tr>
               <tr><td>V </td><td>Vertex </td> </tr>
            <tr><td> <b><i>V</i></b></td> <td> Number of unique vertices </td></tr>
               <tr><td>E </td><td> Undirected edge</td></tr>
               <tr><td><b><i>E</i></b> </td><td>Number of unique undirected edges </td></tr>
               <tr><td> <b>E<sub>l</sub></b> </td><td>Oriented edge </td></tr>
     	  <tr><td><b><i>E<sub>l</sub></i></b> </td> <td> Number of unique oriented edges </td></tr>
               <tr><td>G<sup><i>e</i></sup></td><td> Edge genus</td></tr>
               <tr><td>P </td><td>Path </td></tr>
     	  <tr><td><b><i>P</i></b> </td><td> Number of unique paths</td></tr>
               <tr><td>G<sup><i>p</i></sup> </td><td> Path genus</td></tr>
               <tr><td>L </td><td>Loop </td></tr>
               <tr><td><i>L</i> </td><td>Number of unique loops </td></tr>
               <tr><td>L<sub>l</sub> </td><td>Face bound </td></tr>
               <tr><td><i> L<sub>l</sub></i> </td><td>Number of unique face bounds </td></tr>
               <tr><td>L<sup>e</sup> </td><td> Edge loop</td></tr>
               <tr><td>L<sup>p</sup> </td><td>Polyloop </td></tr>
               <tr><td>L<sup>v</sup></td><td>Vertex loop </td></tr>
               <tr><td>G<sup><i>l</i></sup> </td><td>Loop  genus</td></tr>
               <tr><td>F </td><td>Face </td></tr>
               <tr><td> <i>F</i> </td><td>Number of unique faces </td></tr>
               <tr><td><i>H<sup>f</sup></i>  </td><td>Face genus</td></tr>
               <tr><td> S</td><td>Shell </td></tr>
               <tr><td> <i>S</i> </td><td>Number of unique shells </td></tr>
               <tr><td> S<sup><i>c</i></sup></td><td>Closed shell </td></tr>
               <tr><td> S<sup><i>o</i></sup></td><td>Open shell </td></tr>
               <tr><td> S<sup><i>v</i></sup></td><td>Vertex shell </td></tr>
               <tr><td> S<sup><i>w</i></sup></td><td>Wire shell </td></tr>
              <tr><td><i>H<sup>s</sup></i>  </td><td>Shell genus</td></tr>
               <tr><td> &#926; </td><td>Extent </td></tr>
               <tr><td> { A }</td><td>Set of entities of type A </td></tr>
               <tr><td> [ A ]</td><td>List of entities of type A </td></tr>
  </table>
  </introduction>
     <fund_cons>
    <p>  The topological entities,  <b>vertex</b>, <b>edge</b> etc., specified here have been
       defined independently of any  use that may be made of them. 
        Minimal constraints have been placed on each entity with the intention that any
       additional constraints will be specified by the using entity or by a
       defined context in which the entity is used. The intent is to avoid 
       limiting the context or the use made of the entities.</p>
   
     <p>   The topological entities have been defined in a hierarchical manner
       with the <b>vertex</b> being the primitive entity. That is, all other
       topological entities are defined either directly or indirectly in terms 
       of vertices.</p>
   
     <p>   Each entity has its own set of constraints. A higher-level entity may 
       impose constraints on a lower-level entity. At the higher level,
       the constraints on the lower-level entity are the sum of the constraints
       imposed by each entity in the chain between the higher- and lower-level
       entities.  The basic topological structures in order of increasing
       complexity are <b>vertex</b>, <b>edge</b>, <b>path</b>, <b>loop</b>, 
       <b>face</b> and <b>shell</b></p>.
     <p>   In addition to the high-level structured topological entities
       <b>open_shell</b> and <b>closed_shell</b>, which are specialised 
       subtypes of <b>connected_face_set</b>, the topology section includes 
       the <b>connected_edge_set</b> and the general
       <b>connected_face_set</b>.  These two entities are designed for the
       communication of collections of topological data where the constraints
       applied to shell are inappropriate.</p>
   
     <p>   The <b>poly_loop</b> is a loop with straight and coplanar edges and is
       defined as an ordered list of points.  The <b>poly_loop</b> entity is
       used for the communication of faceted B-rep models. 
   
       Many functions  ensure consistency of the topology models
       by applying topological and geometric constraints to entities.</p>
   
     <p> <b> 5.2.1 Geometric associations </b> </p>
     <p>       Many of the topological entities have a specialised subtype
      which
         enables them to be associated with  geometric data.  This
         association will be essential when communicating boundary representation
         solid models. The specialised subtypes of <b>vertex</b>, <b>edge</b> and
         <b>face</b> are <b>vertex_point</b>, <b>edge_curve</b>, and <b>face_surface</b>
    respectively.
     For the <b>edge_curve</b> and <b>face_surface</b> the relationship between the geometric
     sense and the topological sense of the associated entities is also recorded.
        The key concept relating geometry to topology is the domain.  The
     domain of a <b>point</b>, <b>curve</b>, or <b>surface</b> is just that point, curve, or
     surface. The domain of a <b>vertex</b>, <b>edge</b>, or <b>face</b> is the corresponding
     point, curve or surface. The domain of a <b>loop</b> or <b>path</b> is the union of
     the domains of all the vertices and edges in the <b>loop</b> or <b>path</b>. (Except
     in the case of a vertex loop, this is a curve.) The domain of a shell
     is the union of the domains of all the vertices, edges, and faces in
     the shell. (For a <b>closed_shell</b> or <b>open_shell</b>, this is a surface.) The domain
     of a solid model is the region of space it occupies. The
     domain of a set or list is the union of the domains of the elements of
     that set or list.  Wherever in this standard a  geometrical concept
     such as connectedness or finiteness is discussed in relation to an
     entity, it is understood that the concept applies to the domain of that
     entity.</p>
   
    <p> A key concept in describing domains is the idea of a manifold.
     Intuitively, a domain is a <i>d</i>-manifold if it is locally
     indistinguishable from <i>d</i>-dimensional Euclidean space. This means that
     the dimensionality is the same at each mathematical point, and self-
     intersections are prohibited.  As defined in this standard, curves and
     surfaces may contain self-intersections, and hence need not be
     manifolds. However, the part of a curve or surface that corresponds to
     the domain of a topological entity such as an edge or face shall be a
     manifold.</p>
   
   <p>  As used in this standard, the terms &quot;manifold&quot;, &quot;boundary&quot; , and &quot;
     manifold with boundary&quot; are identical to the usual mathematical
     definitions. A manifold with boundary differs from a manifold
     in that the boundary is allowed, but not required, to be non-empty.</p>
   
    <p> A 1-manifold is a non-self-intersecting curve which does not include
     either of its end points. Examples of 1-manifolds are the real line and
     the unit circle. A &quot;Y&quot;-shaped figure is not a 1-manifold, and neither
     is the closed unit interval. A 2-manifold is a non-self-intersecting
     surface which does not include boundary curves.  Examples of
     2-manifolds include the unit sphere and the open disk <i>{(x,y,0) : x<sup>2</sup>
     + y<sup>2</sup> &lt; 1\}</i>. The closed disk <i>{(x,y,0) : x<sup>2</sup> + y<sup>2</sup> &#8804; 1}</i> is not a
     manifold. The domains of edges and paths, if present, are 1-manifolds.
     The domains of faces and closed shells, if present, are 2-manifolds.</p>
   
   <p>  Any curve which does not self-intersect is a 1-manifold with boundary.
     The closed disk <i>{(x,y,0) : x<sup>2</sup> + y<sup>2</sup> &#8804; 1}</i> is a 2-manifold with
     boundary.  The domain of an open shell, if present, is a 2-manifold
     with boundary. The domain of a manifold solid boundary representation
     or a faceted manifold boundary representation is a 3-manifold with
     boundary.</p>
   
   <p>  The boundary of a <i>d</i>-manifold with boundary is a <i>(d-1)</i>-manifold. For
     example, the boundary of a curve is the set of 0, 1, or 2 end points
     contained in that curve. The boundary of the closed disk <i>{(x,y,0) : x<sup>2</sup> + y<sup>2</sup> &#8804; 1}</i>  is the unit circle. The boundary of the domain
     of an open shell is the domain of the set of loops that bound holes
     in the shell. The boundary of a manifold solid boundary
     representation or a faceted manifold boundary representation is the
     domain of the set of bounding shells.</p>
   
   <p>  Curves and surfaces which are manifolds with boundary are classified as
     either open or closed. The terms &quot;open&quot; and &quot;closed&quot;, when applied
     to curves or surfaces in this standard, should not be confused with the
     notions of &quot;open set&quot; or &quot;closed set&quot; from point set topology.  The
     term &quot;closed surface&quot; is identical to the usual definition of a
     closed, connected, orientable 2-manifold. Examples of a closed surface
     are a sphere and a torus. The domain of a closed shell, if present, is
     a closed surface. Examples of open surfaces are an infinite plane, or a
     surface with one or more holes. The domain of an open shell, if
     present, is an open surface.</p>
   
    <p> All closed surfaces that are physically manufacturable are orientable.
     Face domains, because they are always embeddable in the plane, are
     orientable.  Open surfaces need not be orientable. For example, the
     M&#246;bius strip is an open surface.  Also, some manifolds are neither
     open nor closed as defined in this standard. The Klein bottle is an
     example. It is finite and its boundary is empty, but the surface is not
     orientable, and hence does not divide space into two regions. However,
     the domain of an open shell as defined in this standard must be
     orientable.</p>
   
    <p> The term &quot;genus&quot; refers to an integer-valued function used to
     classify topological properties of an entity. This standard defines two
     different types of genus.</p>
   
    <p> For an entity which can be described as a graph of edges and vertices, for
     example a loop, path, or wire shell, genus is equivalent to
     the standard technical term &quot;cycle rank&quot; in graph theory. It is
     <i> not </i> equivalent to the standard usage of the term &quot;genus&quot; in
     graph theory.  Intuitively, it measures the number of independent
     cycles in a graph. For example, a graph with exactly one vertex, joined
     to itself by  <i>n</i> self-loops, has genus <i>n</i>.</p>
   
    <p> The genus of a closed surface <i>X</i> is the
     number of handles that must be added to a sphere to produce a surface
     homeomorphic to <i>X</i>. For example, the genus of a sphere is 0, and the
     genus of a torus is 1. This is identical to the standard technical term
     &quot;genus of a surface&quot; from algebraic topology. Adding a handle to a
     closed surface is the operation that corresponds to drilling a tunnel
     through the three-dimensional volume bounded by that surface.
     This can be viewed as cutting out two disks and connecting their
     boundaries with a cylindrical tube.  Handles should not be confused
     with holes. As used in this standard, the term &quot;hole&quot; corresponds to
     the intuitive notion of punching a hole in a two-dimensional surface.</p>
   
   <p>  The surface genus definition is extended to orientable open surfaces as
     follows.  Fill in every hole in the domain with a disk. The resulting
     surface is a closed surface, for which genus is already defined. Use
     this number for the genus of the open surface.</p>
   
   <p> <b> 5.2.2 Associations with parameter space geometry </b> </p>
   <p> A fundamental assumption in this clause is that the topology being
   defined is that of model space. The geometry of curves and points can
   also be defined in parameter space but, in general, the topological
   structure of, for example a <b>face</b>, will not be the same in the
   parametric space of the underlying surface as it is in model space.</p>
   
    <p> Parametric space modelling systems differ from real space systems  in
   the methodology used to associate geometry to topology.  Parametric space
   modelling systems typically associate a different parametric space curve
   with each edge use (i.e., <b>oriented_edge</b>).  Every one of the
   parametric space curves associated with a given edge (by way of
   an edge use) describe the same point set in real space.  The
   parametric space curves are defined in different parametric spaces.
   The parametric spaces are the surfaces which
   underlay the faces bordering on the edge.  In a manifold solid
   the geometry of every <b>edge</b> is define twice, once for each of the two
   <b>face</b>s which border on that <b>edge</b>.</p>
   
    <p> Associating a parametric space curve with each edge use extends
   naturally to the use of degenerate edges (i.e., edges with zero
   length in real space).  For example, a parametric space modelling system
   could represent a face that is triangular in real space as a
   square in parametric space.  A straight forward way to do this is
   to represent one of the triangular face's vertices as a
   degenerate edge (but having two vertices);  then there is a one-to-one
   mapping between edges in real space and model space.  The
   degenerate edge has zero length in real space, but greater than
   zero length in parametric space.  Degenerate edges also may be used
   for creating bounds around singularities such as the apex of a
   cone.</p>
   
   <p>  Real space modelling systems do not associate parametric space curves
   with each edge use nor do they allow degenerate edges.  Since the
   parametric space modelling systems treatment of topology is an
   implementation convenience, this standard requires the use of
   real space topology.  The parametric space modelling system's unique
   information requirements are satisfied using techniques at the
   geometric level.</p>
   
   <p> <b> 5.2.2.1 Edge_curve associations with parametric space curves </b> </p>
   <p>Techniques that can be used to associate parametric space curves
   with an <b>edge_curve</b> are: </p>
   <ol type="a">
   
   <li> The <b>edge_geometry</b> attribute of an <b>edge_curve</b> may reference
   directly one <b>pcurve</b>, then only one <b>pcurve</b> is associated with that
   <b>edge_curve</b>. </li>
   
   <li> The <b>edge_geometry</b> attribute of an <b>edge_curve</b> can reference
   a <b>surface_curve</b>, or a subtype of <b>surface_curve</b>; then associated
   with that <b>edge_curve</b> are the <b>pcurve</b>s (one or two) referenced by
   the <b>associated_geometry</b> attribute of the <b>surface_curve</b>.
   The curve referenced by the <b>curve_3d</b> attribute of the <b>surface_curve</b>
   is also associated with the <b>edge_curve</b> but that curve cannot be a
   parametric space curve and represents the model space geometry of the <b>edge</b>.</li>
   
   <li> The <b>edge_geometry</b> attribute of an <b>edge_curve</b> can reference
   a curve (not a <b>pcurve</b>), then associated with the <b>edge_curve</b> are
   the <b>pcurve</b>s (zero or more) referenced by the <b>associated_geometry</b>
   attribute of every <b>surface_curve</b> whose <b>curve_3d</b> attribute
   references the same curve  (i.e., is instance equal to, :=:)  as the
   <b>edge_geometry</b> attribute of the <b>edge_curve</b>.</li>
   </ol>
   <p>  These techniques are formally defined in EXPRESS as the function
   <b>edge_curve_pcurves</b> which can be used to determine all the
   parametric space curves associated with a particular <b>edge</b>.
   <note number="1">
    For applications where the real space  modelling
   systems are not
   required to understand parametric space curves, the parametric
   space modelling systems  should be required to use only the third technique
   described above.  Then, even if the <b>pcurve</b>s are ignored, the real space
   modelling system   will have the correct geometry associated with all
   <b>edge_curve</b>s.</note>
   
   <note number="2">
    Given the <b>pcurve</b>s of an <b>edge_curve</b>, determining which
   <b>oriented_edge</b> a pcurve shall be associated with is a matter of
   matching (:=:) the <b>basis_surface</b> of the <b>pcurve</b> with the
   <b>face_geometry</b> of the face bound by that <b>oriented_edge</b>.
   If two or more <b>pcurve</b>s are associated with the same
   <b>edge_curve</b> and are
   defined in the parametric space of the same surface, determining
   which <b>oriented_\-edge</b> the <b>pcurve</b> is associated with requires
   checking connectivity of the <b>pcurve</b>s in parametric space. </note>
   </p>
   <p> <b> 5.2.3 Graphs, cycles, and traversals </b> </p>
   <p>
   A  connected component of a graph is a connected subset of
      the
       graph which is not contained in any larger connected subset. We denote by
      <i>M</i>
       the <i> multiplicity</i>  of a graph, that is, the number of connected
       components. Thus, a graph is connected if and only if <i>M = 1</i>. </p>
       
       <p>Each component of a graph can be completely traversed, starting and
       ending at the same vertex, such that every edge is traversed exactly
    twice,
       once in each direction, and every vertex is &quot;passed through&quot; the same
       number
       of times as there are edges using the
      vertex. If an (edge + edge traversal
       direction) is considered as a unit, each unique (edge + direction)
       combination shall occur once and only once in the traversal of a graph.
       During
       the traversal of a graph it will be found that there are one or more sets
     of
       alternating vertices and (edge + direction) units that form closed cycles.
      </p>
       
      <p> The symbol <i>G</i> will denote the <i>graph genus</i>, which is, intuitively,
     the
       number of independent cycles in the graph. (Technically, <i>G</i> is the rank
    of
       the fundamental group of the graph.) </p>
     <p>  Every graph satisfies the following Euler equation </p>
     <eqn> <i> <b>
              (V - E) - (M - G) = 0 </b> </i>
      </eqn>
      <p> where <i><b>V</b></i> and <i><b>E</b></i> are the numbers of unique vertices and
     edges  in the graph.</p>
       
    
       <note number="3">
    <p>   The following <i>graph traversal </i> algorithm, [16],
     may
        be used to traverse a graph and compute <i><b>M</b></i> and <i><b>G</b></i>. </p>
        <ol type="a">
        <li> Set <i><b>M</b></i> and <i><b>G</b></i> to zero.</li>
        <li> Start at any (unvisited) vertex. If there is no
         unvisited vertex, STOP.  Mark the vertex as <i>visited</i>.
    Increment  <i><b>M</b></i>.
         Traverse any edge at the vertex, marking the edge with the travel
       direction.</li>
        <li> After traversing an edge PQ to reach the vertex Q, do the
       following: 
         <ul>
          <li> When reaching a vertex for the first time, mark the edge just
       travelled
                as the <i>advent edge</i> of the vertex. The advent edge is
       marked so that it can only be selected once in this direction.</li>
           <li> Mark the vertex as <i>visited</i>. </li>
          <li> If this is the first traversal of the edge and the vertex Q has
                previously been visited, increment <i><b>G</b></i>. </li>
          <li>  Select an exit edge from the vertex according to the following
       rules:
               <ol type="1">
              <li>     No edge may be selected that has
       previously  been traversed in the direction away from the vertex Q. </li>
                 <li> Select any edge, except the advent edge of  Q, that meets rule  (c1).</li>
                 <li> If no edge meets rule (c2), select the
       advent edge.</li>
               </ol></li>
          <li>Traverse the selected exit edge and mark it with the travel
       direction.</li> 
         </ul></li> 
        <li>If no edge was selected in the previous step, go to
              step b, else go to step c </li> 
      </ol>  </note>
   
   </fund_cons>
<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="topology_schemaexpg1.xml"/>
     <imgfile file="topology_schemaexpg2.xml"/>
     <imgfile file="topology_schemaexpg3.xml"/>
     <imgfile file="topology_schemaexpg4.xml"/>
   </express-g>
</schema>
<schema name="geometric_model_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
    <introduction>
   <p>  The subject of the <b>geometric_model</b> schema is the set of
    basic resources necessary for the communication of data describing the
    size, position, and shape of objects.    The  <b>solid_model</b> subtypes
   provide basic resources for the
      communication
        of data describing the precise size and shape of three-dimensional solid
        objects.   The two classical types of solid model,
        constructive solid geometry (CSG) and boundary representation (B-rep) are included.
    Also included in this clause  are entities    providing less
    complete geometric and topological information than the
     full
        CSG or B-rep  models.  The use of these entities is  appropriate for
        communication with systems whose capability differs from that of  solid
    modelling systems. </p>
  
  <p>The entities in this schema are arranged in a logical order beginning with the
  <b>solid_model</b> supertype and its various subtypes. These subtypes include
  the different types of boundary representations (B-reps) and the CSG solids.
  After the <b>solid_model</b> subtypes the surface model entities are grouped 
  together, followed by the wireframe models and the geometric sets. It concludes with tessellated geometry definitions. </p>
   
     </introduction>
    
    <fund_cons>
   <p>      The constructive solid geometry models are represented by their
     component
          primitives and the sequence of Boolean operations (<b>union</b>,
          <b>intersection</b> or <b>difference</b>) used in their construction.
     The
          standard CSG primitives are the <b>cone</b>, <b>eccentric_cone</b>,
          <b>cylinder</b>,  <b>sphere</b>,
          <b>torus</b>,
          <b>block</b>,  <b>right_angular_wedge</b>,
          <b>ellipsoid</b>, <b>tetrahedron</b> and pyramid. These primitives should be defined in
      their final position and orientation. A set of two dimensional primitives is included
      for use in the creation of two dimensional CSG solids.
         The entity which communicates the logical
       sequence
          of Boolean operations is the <b>boolean_result</b> which identifies an
      operator and two operands.
      The operands can themselves be <b>boolean_result</b>s, thus enabling
     nested
      operations.  In addition to the CSG primitives, any solid model,
      including, in particular, swept solids and <b>half_space_solid</b>s
      may be Boolean operands.  The swept solids are the
          <b>swept_area_solid</b>s and the <b>swept_face_solids</b>.
       The swept solids are obtained by extruding or sweeping a planar face which
      may contain holes.
          The <b>half_space_solid</b> is essentially defined as a semi-infinite
       solid on one side of a surface; it may be  limited by a
     <b>box_domain</b>. The <b>half_space_2d</b> is an equivalent two dimensional entity
     and represents the region to one side of a curve. </p>
    
    <p>      B-rep models are represented by the set of shells defining their
      exterior or interior boundaries. Constraints ensure that the associated
          geometry is well defined and that the Euler formula connecting the
      numbers of vertices, edges, faces, loops and shells in the model is
        satisfied.  The <b>faceted_brep</b>  is    restricted to represent B-reps
     in  which all faces are  planar and every    loop is a <b>poly_loop</b>. 
    </p>
  <p>      The <b>solid_replica</b> entity provides a mechanism for copying an
        existing  solid in a new location.
    
      The <b>shell_based_surface_model</b>,    <b>face_based_surface_model</b>,
      <b>shell_based_wireframe_model</b>, <b>edge_based_wireframe_model</b>,
       <b>geometric_set</b>,  and <b>geometric_curve_set</b> entities do not enforce the integrity
      checks of the <b>manifold_solid_brep</b> and can be used for the communication of
    incomplete models or non-manifold objects, including  two-dimensional models. </p>
  </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
          <imgfile file="geometric_model_schemaexpg1.xml"/>
          <imgfile file="geometric_model_schemaexpg2.xml"/>
          <imgfile file="geometric_model_schemaexpg3.xml"/>
          <imgfile file="geometric_model_schemaexpg4.xml"/>
          <imgfile file="geometric_model_schemaexpg5.xml"/>
          <imgfile file="geometric_model_schemaexpg6.xml"/>
          <imgfile file="geometric_model_schemaexpg7.xml"/>
          <imgfile file="geometric_model_schemaexpg8.xml"/>
          <imgfile file="geometric_model_schemaexpg9.xml"/>
          <imgfile file="geometric_model_schemaexpg10.xml"/>
   </express-g>
</schema>

<schema name="scan_data_3d_shape_model_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
    <introduction>
   <p>  The subject of the <b>scan_data_3d_shape_model</b> schema is the set of
    basic resources necessary for the communication of data describing the
    representation of a shape as a cloud of points produced by a scanning process. </p>
   
     </introduction>

<!-- EXPRESS-G -->
  <express-g>
          <imgfile file="scan_data_3d_shape_model_schemaexpg1.xml"/>
          
   </express-g> 
</schema>

 <!-- shortnames  -->
  <shortnames>
       <shortname name="AWOB" entity="area_with_outer_boundary"/>                               
       <shortname name="AX1PLC" entity="axis1_placement"/>                               
       <shortname name="A2PL2D" entity="axis2_placement_2d" />                         
       <shortname name="A2PL3D" entity="axis2_placement_3d"/>                          
       <shortname name="BZRCRV" entity="bezier_curve"/>                                 
       <shortname name="BZRSRF" entity="bezier_surface" />                              
       <shortname name="BZRVLM" entity="bezier_volume"/>                                
       <shortname name="BLOCK  " entity="block"/>                                         
       <shortname name="BLCVLM " entity="block_volume"/>                                 
       <shortname name="BLNRSL " entity="boolean_result"/>                               
       <shortname name="BNDCR  " entity="boundary_curve"/>                               
       <shortname name="BNDCRV " entity="bounded_curve"/>                                
       <shortname name="BNDPCR " entity="bounded_pcurve"/>                               
       <shortname name="BNDSRF " entity="bounded_surface"/>                              
       <shortname name="BNSRCR" entity="bounded_surface_curve"/>                       
       <shortname name="BXHLSP" entity="boxed_half_space" />                           
       <shortname name="BXDMN " entity="box_domain"/>                                   
       <shortname name="BRWTVD" entity="brep_with_voids"/>                             
       <shortname name="BREP2D" entity="brep_2d"/>                                      
       <shortname name="BSPCR " entity="b_spline_curve"/>                              
       <shortname name="BSCWK" entity="b_spline_curve_with_knots"/>                  
       <shortname name="BSPSR " entity="b_spline_surface"/>
       <shortname name="BSSWK " entity="b_spline_surface_with_knots"/>
       <shortname name="BSPVL " entity="b_spline_volume"/>
       <shortname name="BSVWK " entity="b_spline_volume_with_knots"/>
       <shortname name="CRTPNT" entity="cartesian_point"/>
       <shortname name="CRTROP" entity="cartesian_transformation_operator"/>
       <shortname name="CTO2"   entity="cartesian_transformation_operator_2d"/>
       <shortname name="CTO3"   entity="cartesian_transformation_operator_3d"/>
       <shortname name="CIRCLE" entity="circle"/>
       <shortname name="CRCAR"  entity="circular_area"/>
       <shortname name="CRCINV" entity="circular_involute"/>
       <shortname name="CLSSHL" entity="closed_shell"/>
       <shortname name="CLTHD " entity="clothoid"/>
       <shortname name="CMTRFC" entity="complex_triangulated_face"/>
       <shortname name="CTSS"   entity="complex_triangulated_surface_set"/>
       <shortname name="CMPCRV" entity="composite_curve"/>
       <shortname name="CCOS"   entity="composite_curve_on_surface"/>
       <shortname name="CMCRSG" entity="composite_curve_segment"/>
       <shortname name="CONIC " entity="conic"/>
       <shortname name="CNCSRF" entity="conical_surface"/>
       <shortname name="CNEDST" entity="connected_edge_set"/>
       <shortname name="CNFCST" entity="connected_face_set"/>
       <shortname name="CNVLST" entity="connected_face_set"/>
       <shortname name="CNFCST" entity="connected_volume_set"/>
       <shortname name="CFSS"   entity="connected_face_sub_set"/>
       <shortname name="CNVHXH" entity="convex_hexahedron"/>
       	<shortname name="CVSS" entity="connected_volume_sub_set"/>
       <shortname name="CRDLST" entity="coordinates_list"/>
       <shortname name="CSGSLD" entity="csg_solid"/>
       <shortname name="CBTE"  entity="cubic_bezier_tessellated_edge"/>
       <shortname name="CBTF"  entity="cubic_bezier_triangulated_face"/>
       <shortname name="CTFC"  entity="cubic_tessellated_connecting_edge"/>
       <shortname name="CURVE"  entity="curve"/>
       <shortname name="CRBNSR" entity="curve_bounded_surface"/>
       <shortname name="CRVRPL" entity="curve_replica"/>
       <shortname name="CYSGSL" entity="cyclide_segment_solid"/>
       <shortname name="CYLPNT" entity="cylindrical_point"/>
       <shortname name="CYLSRF" entity="cylindrical_surface"/>
       <shortname name="CYLVLM" entity="cylindrical_volume"/>
       <shortname name="DGNPCR" entity="degenerate_pcurve"/>
       <shortname name="DGTRSR" entity="degenerate_toroidal_surface"/>
       <shortname name="DRCTN " entity="direction"/>
       <shortname name="DPCYSR" entity="dupin_cyclide_surface"/>
       <shortname name="ECCCN " entity="eccentric_cone"/>
       <shortname name="ECCNVL" entity="eccentric_conical_volume"/>
       <shortname name="EDGE"   entity="edge"/>
       <shortname name="EBWM"   entity="edge_based_wireframe_model"/>
       <shortname name="EDGCRV" entity="edge_curve"/>
       <shortname name="EDGLP"  entity="edge_loop"/>
       <shortname name="EDWTLN"  entity="edge_with_length"/>
       <shortname name="ELMSRF" entity="elementary_surface"/>
       <shortname name="ELLPS"  entity="ellipse"/>
       <shortname name="ELLPSD" entity="ellipsoid"/>
       <shortname name="ELLVLM" entity="ellipsoid_volume"/>
       <shortname name="ELLAR " entity="elliptic_area"/>
       <shortname name="EVDGPC" entity="evaluated_degenerate_pcurve"/>
       <shortname name="EXARSL" entity="extruded_area_solid"/>
       <shortname name="EXFCSL" entity="extruded_face_solid"/>
       <shortname name="FACE"   entity="face"/>
       <shortname name="FCTBR"  entity="faceted_brep"/>
       <shortname name="FCTPRM" entity="faceted_primitive"/>
       <shortname name="FBSM"   entity="face_based_surface_model"/>
       <shortname name="FCBND"  entity="face_bound"/>
       <shortname name="FCOTBN" entity="face_outer_bound"/>
       <shortname name="FCSRF"  entity="face_surface"/>
       <shortname name="FRSS"   entity="fixed_reference_swept_surface"/>
       <shortname name="GMCRST" entity="geometric_curve_set"/>
       <shortname name="GMRPCN" entity="geometric_representation_context"/>
       <shortname name="GMRPIT" entity="geometric_representation_item"/>
       <shortname name="GMTST " entity="geometric_set"/>
       <shortname name="GMSTRP" entity="geometric_set_replica"/>
       <shortname name="HLSPSL" entity="half_space_solid"/>
       <shortname name="HLSP2D" entity="half_space_2d"/>
       <shortname name="HXHVLM" entity="hexahedron_volume"/>
       <shortname name="HYPRBL" entity="hyperbola"/>
       <shortname name="INTCRV" entity="intersection_curve"/>
       <shortname name="LCBSP"   entity="local_b_spline"/>
       <shortname name="LINE"   entity="line"/>
       <shortname name="LOOP"   entity="loop"/>
       <shortname name="LRSC"   entity="locally_refined_spline_curve"/>
       <shortname name="LRSS"   entity="locally_refined_spline_surface"/>
       <shortname name="LRSV"   entity="locally_refined_spline_volume"/>
       <shortname name="MNSLBR" entity="manifold_solid_brep"/>
       <shortname name="OFCR2D" entity="offset_curve_2d"/>
       <shortname name="OFCR3D" entity="offset_curve_3d"/>
       <shortname name="OFFSRF" entity="offset_surface"/>
       <shortname name="OPNPTH" entity="open_path"/>
       <shortname name="OPNSHL" entity="open_shell"/>
       <shortname name="ORCLSH" entity="oriented_closed_shell"/>
       <shortname name="ORNEDG" entity="oriented_edge"/>
       <shortname name="ORNFC " entity="oriented_face"/>
       <shortname name="OROPSH" entity="oriented_open_shell"/>
       <shortname name="ORNPTH" entity="oriented_path"/>
       <shortname name="ORNSRF" entity="oriented_surface"/>
       <shortname name="OTBNCR" entity="outer_boundary_curve"/>
       <shortname name="PRBL"   entity="parabola"/>
       <shortname name="PATH"   entity="path"/>
       <shortname name="PCDWC" entity="point_cloud_dataset_with_colours"/>
       <shortname name="PCDWI" entity="point_cloud_dataset_with_intensities"/>
       <shortname name="PCDWN" entity="point_cloud_dataset_with_normals"/>
       <shortname name="PCURVE" entity="pcurve"/>
       <shortname name="PLCMNT" entity="placement"/>
       <shortname name="PLANE"  entity="plane"/>
       <shortname name="POINT"  entity="point"/>
       <shortname name="PNCLDT" entity="point_cloud_dataset"/>
       <shortname name="PNCLSP" entity="point_cloud_superdataset"/>
       <shortname name="PNINVL" entity="point_in_volume"/>
       <shortname name="PNONCR" entity="point_on_curve"/>
       <shortname name="PNONSR" entity="point_on_surface"/>
       <shortname name="PNTRPL" entity="point_replica"/>
       <shortname name="PLRPNT" entity="polar_point"/>
       <shortname name="PLYAR"  entity="polygonal_area"/>
       <shortname name="PLYLN"  entity="polyline"/>
       <shortname name="PLYLP"  entity="poly_loop"/>
       <shortname name="PRM2D"  entity="primitive_2d"/>
       <shortname name="PYRVLM" entity="pyramid_volume"/>
       <shortname name="QSUNCR" entity="quasi_uniform_curve"/>
       <shortname name="QSUNSR" entity="quasi_uniform_surface"/>
       <shortname name="QSUNVL" entity="quasi_uniform_volume"/>
       <shortname name="RBSC"   entity="rational_b_spline_curve"/>
       <shortname name="RBSS"   entity="rational_b_spline_surface"/>
       <shortname name="RBSV"   entity="rational_b_spline_volume"/>
       <shortname name="RCTDMN" entity="rectangle_domain"/>
       <shortname name="RCHLSP" entity="rectangled_half_space"/>
       <shortname name="RCTAR"  entity="rectangular_area"/>
       <shortname name="RCCMSR" entity="rectangular_composite_surface"/>
       <shortname name="RCTPYR" entity="rectangular_pyramid"/>
       <shortname name="RCTRSR" entity="rectangular_trimmed_surface"/>
       <shortname name="RCCS"   entity="reparametrised_composite_curve_segment"/>
       <shortname name="RPTSIT" entity="repositioned_tessellated_item"/>
       <shortname name="RVARSL" entity="revolved_area_solid"/>
       <shortname name="RVFCSL" entity="revolved_face_solid"/>
       <shortname name="RGANWD" entity="right_angular_wedge"/>
       <shortname name="RGCRCN" entity="right_circular_cone"/>
       <shortname name="RGCRCY" entity="right_circular_cylinder"/>
       <shortname name="RLRSC" entity="rational_locally_refined_spline_curve"/>
       <shortname name="RLRSS" entity="rational_locally_refined_spline_surface"/>
       <shortname name="RLRSV" entity="rational_locally_refined_spline_volume"/>
       <shortname name="SC3DMD" entity="scan_3d_model"/>
       <shortname name="SCBSPR" entity="scanner_basic_properties"/>
       <shortname name="SCDTIT" entity="scanned_data_item"/>
       <shortname name="SCNPRP" entity="scanner_property"/>
       <shortname name="SDSR" entity="scan_data_shape_representation"/>
       <shortname name="SMCRV"  entity="seam_curve"/>
       <shortname name="SMEDG"  entity="seam_edge"/>
       <shortname name="SCTSPN" entity="sectioned_spine"/>
       <shortname name="SBSM"   entity="shell_based_surface_model"/>
       <shortname name="SBWM"   entity="shell_based_wireframe_model"/>
       <shortname name="SLDMDL" entity="solid_model"/>
       <shortname name="SLDRPL" entity="solid_replica"/>
       <shortname name="SPHERE" entity="sphere"/>
       <shortname name="SPHPNT" entity="spherical_point"/>
       <shortname name="SPHSRF" entity="spherical_surface"/>
       <shortname name="SPHVLM" entity="spherical_volume"/>
       <shortname name="SBDG" entity="subedge"/>	   
       <shortname name="SBFC" entity="subface"/>	   
       <shortname name="SRFC" entity="surface"/>	   
       <shortname name="SRFCRV" entity="surface_curve"/>
       <shortname name="SCSAS"  entity="surface_curve_swept_area_solid"/> 
       <shortname name="SCSFS"  entity="surface_curve_swept_face_solid"/> 
       <shortname name="SCSS"   entity="surface_curve_swept_surface"/>  
       <shortname name="SL"     entity="surface_of_linear_extrusion"/>	  
       <shortname name="SROFRV" entity="surface_of_revolution"/>
       <shortname name="SRFPTC" entity="surface_patch"/>
       <shortname name="SRFRPL" entity="surface_replica"/>
       <shortname name="SWARSL" entity="swept_area_solid"/>
       <shortname name="SWDSSL" entity="swept_disk_solid"/>
       <shortname name="SWFCSL" entity="swept_face_solid"/>
       <shortname name="SWPSRF" entity="swept_surface"/>
       <shortname name="TSCNED" entity="tessellated_connecting_edge"/>
       <shortname name="TPCD" entity="triangulated_point_cloud_dataset"/>
       <shortname name="TSCRST" entity="tessellated_curve_set"/>
       <shortname name="TSSEDG" entity="tessellated_edge"/>
       <shortname name="TSSFC " entity="tessellated_face"/> 
       <shortname name="TSGMST" entity="tessellated_geometric_set"/>
       <shortname name="TSSITM" entity="tessellated_item"/>
       <shortname name="TSPNST" entity="tessellated_point_set"/>
       <shortname name="TSSSLD" entity="tessellated_solid"/>
       <shortname name="TSSHRP" entity="tessellated_shape_representation"/>
       <shortname name="TSSSHL" entity="tessellated_shell"/>
       <shortname name="TSSTIT" entity="tessellated_structured_item"/>
       <shortname name="TSSVRT" entity="tessellated_vertex"/>
       <shortname name="TSSWR " entity="tessellated_wire"/>					  
       <shortname name="TSSRST" entity="tessellated_surface_set"/>
       <shortname name="TRNFC" entity="triangulated_face"/>
       <shortname name="TRSRST" entity="triangulated_surface_set"/>
       <shortname name="TTRHDR" entity="tetrahedron"/>
       <shortname name="TTRVLM" entity="tetrahedron_volume"/>
       <shortname name="TPRPIT" entity="topological_representation_item"/>
       <shortname name="TRDSRF" entity="toroidal_surface"/>
       <shortname name="TRDVLM" entity="toroidal_volume"/>
       <shortname name="TORUS" entity="torus"/>
       <shortname name="TRMCRV" entity="trimmed_curve"/>
       <shortname name="TRMVLM" entity="trimmed_volume"/>
       <shortname name="UNFCRV" entity="uniform_curve"/>
       <shortname name="UNFSRF" entity="uniform_surface"/>
       <shortname name="UNFVLM" entity="uniform_volume"/>
       <shortname name="VECTOR" entity="vector"/>
       <shortname name="VERTEX" entity="vertex"/>
       <shortname name="VLWTFC" entity="volume_with_faces"/>
       <shortname name="VLWTSH" entity="volume_with_shell"/>
       <shortname name="VRONED" entity="vertex_on_edge"/>
       <shortname name="VRTLP" entity="vertex_loop"/>
       <shortname name="VRTPNT" entity="vertex_point"/>
       <shortname name="VRTSHL" entity="vertex_shell"/>
       <shortname name="VOLUME" entity="volume"/>
       <shortname name="VWPB" entity="volume_with_parametric_boundary"/>
       <shortname name="WDGVLM" entity="wedge_volume"/>
       <shortname name="WRSHL" entity="wire_shell"/>
  </shortnames>
  <bibliography>
 <bibitem.inc ref="ref8824-1"/>
 <bibitem.inc ref="ISO_10303-21"/>
 <bibitem.inc ref="ISO_10303-22"/>
 <bibitem.inc ref="AMF"/>
 <bibitem.inc ref="BBB"/>
 <bibitem.inc ref="COTT2009"/>
 <bibitem.inc ref="Dokken2013"/>
 <bibitem.inc ref="FARIN"/>
 <bibitem.inc ref="GIBSON"/>
 <bibitem.inc ref="GRAY"/>
 <bibitem.inc ref="NISTIR-4412"/>
 <bibitem.inc ref="PIEGL"/>
 <bibitem.inc ref="PRATT1"/>
 <bibitem.inc ref="PRATT2"/>
 <bibitem.inc ref="Sederberg2003"/>
 <bibitem.inc ref="WILSON"/>
 
 </bibliography>
 <!-- optional annexes 
 <tech_discussion/>

 <examples/>

 <add_scope/>

 <bibliography/>
-->
</resource>

