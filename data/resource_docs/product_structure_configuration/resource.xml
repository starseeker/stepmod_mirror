<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: resource.xml,v 1.4 2012/10/08 19:27:41 lothartklein Exp $ -->
<!DOCTYPE resource SYSTEM "../../../dtd/res_doc/resource.dtd">
<!-- Generated by mkresource.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the resource in IExplorer, open: sys/1_scope.xml
      -->
<resource
   name="product_structure_configuration"
   name.french="Configuration de structure de produits"
   part="44"
   version="3"
   sc4.working_group="12"
   wg.number="0000"
   wg.number.express="0000"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="IS"
   language="E"
   publication.year="2012"
   published="n"
   previous.revision.year="2000" 
   previous.revision.cancelled="NO" 
   rcs.date="$Date: 2012/10/08 19:27:41 $"
   rcs.revision="$Revision: 1.4 $">

 <keywords>
    resource
 </keywords>


<!-- the abstract for the resource. If not provided, the XSL will use the in scope -->
 <abstract>
    <p>xxxxx</p>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="simon.frechette"/>
   <editor ref="lothar.klein"/>
 </contacts>
 
 <!-- Change History -->
 <changes>
 	<change_edition version="2">
 		<schema.changes schema_name="product_structure_schema">
 			<description>
				<p>
					The definitions of the following EXPRESS data types have been modified:
				</p>
				<ul>
					<li>alternate_product_relationship;</li>
					<li>assembly_component_usage;</li>
					<li>assembly_component_usage_substitute;</li>
					<li>make_from_usage_option;</li>
					<li>make_from_usage_option_group;</li>
					<li>next_assembly_usage_occurrence;</li>
					<li>product_definition_usage;</li>
					<li>promissory_usage_occurrence;</li>
					<li>specified_higher_usage_occurrence.</li>
				</ul>
			</description>
 			<schema.additions>
				<modified.object type="ENTITY" name="assembly_component_usage_substitute_with_ranking"/>
				<modified.object type="ENTITY" name="product_definition_occurrence_relationship"/>
			</schema.additions>	
			
 			<schema.modifications>
 				<modified.object type="ENTITY" name="alternate_product_relationship"/>
 				<modified.object type="ENTITY" name="assembly_component_usage_substitute"/>
 				<modified.object type="ENTITY" name="make_from_usage_option"/>
 				<modified.object type="ENTITY" name="product_definition_usage"/>
 				<modified.object type="ENTITY" name="quantified_assembly_component_usage"/>
 				<modified.object type="ENTITY" name="specified_higher_usage_occurrence"/>
 			</schema.modifications>
 		</schema.changes>
 		
 		<schema.changes schema_name="product_concept_schema">
 			<description>
				<p>
					The definitions of the following EXPRESS data types have been modified:
				</p>
				<ul>
					<li>product_concept.</li>
				</ul>
			</description>
 			<schema.additions>
				<modified.object type="ENTITY" name="concept_feature_operator"/>
				<modified.object type="ENTITY" name="concept_feature_relationship"/>
				<modified.object type="ENTITY" name="concept_feature_relationship_with_condition"/>
				<modified.object type="ENTITY" name="conditional_concept_feature"/>
				<modified.object type="ENTITY" name="product_concept_feature"/>
				<modified.object type="ENTITY" name="product_concept_feature_association"/>
				<modified.object type="ENTITY" name="product_concept_relationship"/>
			</schema.additions>	
			
 			<schema.modifications>
 				<modified.object type="ENTITY" name="product_concept"/>
 			</schema.modifications>
 		</schema.changes>
 		
 		<schema.changes schema_name="configuration_management_schema">
 			<description>
				<p>
					The definitions of the following EXPRESS data types have been modified:
				</p>
				<ul>
					<li>configuration_design;</li>
					<li>configuration_effectivity;</li>
					<li>configuration_item.</li>
				</ul>
			</description>
 			<schema.additions>
				<modified.object type="ENTITY" name="configurable_item"/>
				<modified.object type="ENTITY" name="configuration_design_item"/>
				<modified.object type="ENTITY" name="configuration_item_relationship"/>
			</schema.additions>
			
 			<schema.modifications>
 				<modified.object type="ENTITY" name="configuration_design"/>
 				<modified.object type="ENTITY" name="configuration_effectivity"/>
 				<modified.object type="ENTITY" name="configuration_item"/>
 				
 			</schema.modifications>
 		</schema.changes>
 	</change_edition>

 	<change_edition version="3">
 		<schema.changes schema_name="product_structure_schema">
 			<schema.additions>
				<modified.object type="ENTITY" name="multi_level_reference_designator"/>
				<modified.object type="FUNCTION" name="unambiguously_specified_lower_usage_occurrence"/>
			</schema.additions>	
 		</schema.changes>
 	</change_edition>

 </changes>
 
 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     The <b>product_structure_schema</b>:
   </p>
   <ul>
   	<li>
   		defines a product in terms of its composition as a set of constituents or consumed products. 
   		These products are defined and related at a specific life cycle stage or discipline view. 
   		A product may be assembled from the constituents or produced by consuming other products, or both;
   	</li>
   	<li>
   		defines mechanisms for expressing the composition relationship.
   	</li>
   </ul>
   <p>
	The <b>product_concept_schema</b> identifies the product concept as a set of specifications for a product
	derived from analysis of customer needs for the product. 
	It represents the idea of a product based on customer needs and not as it might be designed or built.
   </p>
   <p>
   	The <b>configuration_management_schema</b> identifies those products participating in the configuration of
	another product that is under the direct control of an organization.
   </p>
   <p>
   	Industrial automation is concerned with the management of information including the following:
   </p>
   <ul>
   	<li>product structure;</li>
   	<li>product configuration;</li>
   	<li>product change.</li>
   </ul>
   <p>
   	Product structure is focused on the aspect of product design that defines a product in terms of a nested decomposition of its constituents. 
   	The product structure schema of this part of ISO 10303 and the product definition schema of ISO 10303-41 together define the representation 
   	of the information that manages the details of product structure. 
   	Examples of the use of the information represented are the generation of billof-material reports or the representation of variational bill-of-material 
   	structures with conditional part usages.
   </p>
   <p>
   	Product configuration is concerned with the description of the composition of specific products. 
   	The planning includes specification of the actual constituents of a product that are to be included in a planned or actual unit. 
   	The configuration management schema and the product structure schema represent the information that manages the configuration of a product. 
   	The concept of effectivity is used to manage the configuration of a product.
   </p>
   <p>
   	Change management is involved with the changes over time in a product as new versions of a product are developed. 
   	This part of ISO 10303 is concerned with changes that affect the organization of constituents into interrelated structures. 
   	The configuration management schema represents information on the structural form of the definition of a product as the product changes 
   	and is enhanced during the product life cycle.
	Representation of information on other aspects of change management is defined in the product definition schema and the action schema of ISO 10303-41.
   </p>
   <p>
   	In this International Standard the same English language words may be used to refer to an object in the real
	world or concept, and as the name of an EXPRESS data type that represents this object or concept. 
	The following typographical convention is used to distinguish between these. 
	If a word or phrase occurs in the same typeface as narrative text, the referent is the object or concept. 
	If the word or phrase occurs in a bold typeface, the referent is the EXPRESS data type.
   </p>
   <p>
   	The name of an EXPRESS data type may be used to refer to the data type itself, or to an instance of the data type. 
   	The distinction between these uses is normally clear from the context. If there is a likelihood of
	ambiguity, either the phrase "entity data type" or "instance(s) of" is included in the text.
   </p>
 </purpose>

 <!-- Schema Interface express-g diagrams  -->
 <!-- refer to p41ed2 as example  -->
 <schema_diag>
   <express-g>
     <imgfile file="schema_diagexpg1.xml" title="Relationship of schemas within the integrated resources"/>
   </express-g> 
 </schema_diag> 

 <!-- Items in scope -->
 <inscope>
   <li>the relationships among the components and assemblies of products;</li>
   <li>
   	the relationships among products and their components as made by modification of other products;
   	<example number="1">
   		The machining of a product from another product is an example of a modification.
   	</example>
   </li>
   <li>the description of a product as defined by customer needs;</li>
   <li>the dependencies among specifications of a product in order to represent possible product variations to present to a customer;</li>
   <li>the management of the structure for configuration of assemblies and components as planned for manufacture;</li>
   <li>
   	the decomposition of a product to support different product life cycle activities;
   	<example number="2">
   		An organization maintains one bill-of-material structure for a product that enumerates the quantity
		of each component used in each assembly, and a second bill-of-material that decomposes a product with multiple
		assemblies into the individual components. 
		See annex Examples for more examples of different product structure reports that are supported.
   	</example>
   </li>
   <li>multiple versions of a single product that are equivalent with respect to form, fit, and function.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>
   	the relationships among different product definitions for the same product;
   	<note number="1">
   		The relationships among different product definitions for the same product are supported by the <b>product_definition_schema</b> of ISO 10303-41.
   	</note>
   	<example number="3">
   		The relationship of a product definition for a component in a preliminary design to a corresponding
		product definition for the same component in a detailed design is an example of this type of relationship.
   	</example>
   </li>
   <li>administrative activities of the product life cycle including approvals, security classifications, contractual arrangements, and supplier organizations;</li>
   <li>the change process for a product, including the reason for change and what aspect of a product has changed;</li>
   <li>the decisions made, and their reasons, during the product life cycle;</li>
   <li>the physical connections among components of a product;</li>
   <li>
   	the properties that a product constituent may have;
   	<note number="2">
   		A mechanism is defined in the <b>product_property_definition_schema</b> in ISO 10303-41 to support the association of properties with components. 
   		The actual associations are included in various application protocols that are parts of this International Standard. 
   		For example, the details of what a material property is and how it is defined are out of scope, as well as the fact that a component has a material property.
   	</note>
   </li>
   <li>
   	multiple versions of a single product that are not form, fit, and function equivalent.
   	<note number="3">
   		The concept of versions of a product is defined in the <b>product_definition_schema</b> in ISO 10303-41.
   	</note>
   </li>
   
 </outscope>


 <normrefs>
 	<normref.inc normref="ref10303-1">
 		<term.ref linkend="term_assembly"/>
 		<term.ref linkend="term_component"/>
 		<term.ref linkend="term_product"/>
 	</normref.inc>
 	<normref.inc normref="ref10303-11.1994"/>
 	<normref.inc normref="ref10303-41">
 		<term.ref linkend="term39"/>
 		<term.ref linkend="term40"/>
 		<term.ref linkend="term_type_of_product"/>
 	</normref.inc>
 	<normref.inc normref="ref8824-1"/>
 </normrefs>

<!-- 3.2 Other terms and definitions -->
 <definition>
 	<term id="ancestor_node">ancestor node</term>
 	<def>
 		any node that can be reached from a given node, by successive traversals of links in the reverse direction.
 		<example>
			For a given node, its ancestor nodes include all parent nodes, all parent nodes of these parent nodes, etc.
		</example>
 	</def>
 </definition>
 <definition>
 	<term id="bill_of_material_data_structure">bill-of-material (BOM) data structure</term>
 	<def>
 		graph of data elements that depict a bill-of-material structure
		<note> See annex for examples of bill-of-material data structures.</note>
 	</def>
 </definition>
 <definition>
 	<term id="bil_of_material_structure">bill-of-material (BOM) structure</term>
 	<def>
 		description of the structure of a product in terms of its nested constituents
 		<note>
 			See annex for examples of bill-of-material structures.
 		</note>
 	</def>
 </definition>
 <definition>
 	<term id="child_node">child node</term>
 	<def>
 		node to which a link is pointing
 	</def>
 </definition>
 <definition>
 	<term id="configuration_item">configuration item</term>
 	<def>
 		subdivision of a product, either a component or an assembly
 	</def>
 </definition>
 <definition>
 	<term id="descendant_node">descendant node</term>
 	<def>
 		any node that can be reached from a given node, by successive traversals of links
 		<example>
 			For a given node, its descendant nodes include all children nodes, all children nodes of these children nodes, etc.
 		</example>
 	</def>
 </definition>
 <definition>
 	<term id="directed_acyclic_graph">directed acyclic graph (DAG)</term>
 	<def>
 		collection of nodes and links such that no node is an ancestor (or descendant) of itself
 	</def>
 </definition>
 <definition>
 	<term id="effectivity">effectivity</term>
 	<def>
 		characteristic that indicates whether a product is allowed, approved, or permitted to be used in another product
 	</def>
 </definition>
 <definition>
 	<term id="form_fit_function">form, fit, and function</term>
 	<def>
 		collection of characteristics that include the shape of a product, the way it interfaces with other products, and the purpose that the product serves
 	</def>
 </definition>
 <definition>
 	<term id="leaf_node">leaf node</term>
 	<def>
 		node that has no children
 	</def>
 </definition>
 <definition>
 	<term id="link">link</term>
 	<def>
 		uni-directional relationship from one node to another node within a directed acyclic graph
 	</def>
 </definition>
 <definition>
 	<term id="lot">lot</term>
 	<def>
 		<p>batch</p>
		collection of distinct products that are treated as a single unit
		<example>
			Three thousand bundles of yarn are divided into different groups. 
			Each group is submerged in a separate barrel of red dye. 
			The group is treated as a lot and assigned a lot number. 
			The lot number is identified so that conditions causing slight changes in the colour are differentiable among bundles belonging to different lots.
			A customer may wish to purchase bundles of the same lot to ensure consistency of the colour.
		</example>
 	</def>
 </definition>
 <definition>
 	<term id="node">node</term>
 	<def>
 		element of a directed acyclic graph, connected to other such elements by links
 	</def>
 </definition>
 <definition>
 	<term id="parent_node">parent node</term>
 	<def>
 		node from which a link is initiated
 	</def>
 </definition>
 <definition>
 	<term id="parts_list_data_structure">parts list data structure</term>
 	<def>
 		graph of instances that depicts a parts list structure
 		<note>
 			See annex for examples of parts list data structures.
 		</note>
 	</def>
 </definition>
 <definition>
 	<term id="parts_list_structure">parts list structure</term>
 	<def>
 		description of the structure of a product in terms of a hierarchy of all distinct usages of its constituents
 		<note>
 			See annex of examples for cases of parts list structures.
 		</note>
 	</def>
 </definition>
 <definition>
 	<term id="promissory_use">promissory use</term>
 	<def>
 		intention to use a constituent in an assembly
 	</def>
 </definition>
 <definition>
 	<term id="root_node">root node</term>
 	<def>
 		node that has no parents
 	</def>
 </definition>
 <definition>
 	<term id="tree">tree</term>
 	<def>
 		restricted type of directed acyclic graph in which there is only one root node, and in which each node has at most one parent
 	</def>
 </definition>

 <abbreviations>
 	<abbreviation id="BOM">
 		<acronym>BOM</acronym>
 		<term>bill-of-material</term>
 	</abbreviation>
 	<abbreviation id="CM">
 		<acronym>CM</acronym>
 		<term>configuration management</term>
 	</abbreviation>
 	<abbreviation id="DAG">
 		<acronym>DAG</acronym>
 		<term>directed acyclic graph</term>
 	</abbreviation>
 </abbreviations>

<schema name="product_structure_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
   <introduction>
   	<p>
   		The subject of the <b>product_structure_schema</b> is the relationship between the definitions of:
   	</p>
   	<ul>
   		<li>products that are assembled to make other products;</li>
   		<li>products that are changed to make other products.</li>
   	</ul>
   	<p>
   		These relationships are defined as specializations of a general relationship among <b>product_definition</b>s as
		specified in the <b>product_definition_schema</b> in ISO 10303-41. 
		In addition, any product that is used in a product structure may have alternative products specified for that use. 
		Collectively these relationships are referred to as a product structure.
   	</p>
   	<p>
   		The product structure defines the different methods by which a product can be represented as being made up of constituents. 
   		Product structure relationships are established among the constituents that make up a product. 
   		Product structure is an aspect of product definition.
   	</p>
   </introduction>
   <fund_cons>
   	<p>
   		The relationships between product definitions are represented in this part of ISO 10303 using a subtype of the <b>product_definition_relationship</b> 
   		entity as defined in the product_definition_schema in ISO 10303-41. 
   		The subtypes of <b>product_definition_relationship</b> defined in this schema establish additional constraints and meanings to the supertype in ISO 10303-41.
   	</p>
   	<figure number="2">
		 <title>Relationship of product structure entities to ISO 10303-41</title>
		 <img src="relationship_of_product_structure_entities.gif"/>
	 </figure>
	 <note>
	 	Figure 2 shows a partial view of the product_definition_schema in ISO 10303-41 and depicts the subtype structure of entities defined in this schema. 
	 	Attributes of the entities defined in this schema and of the <b>product_definition</b> entity are not shown. 
	 	See Figure D.1 for a complete diagram showing all attributes and entities of this schema.
	 </note>
	 <p>
	 	The product structure concept applies to multiple definitions of the structure of a single product version.
		The different definitions correspond to requirements of different organizations for defining the structure of a product during the 
		life cycle of the product's development.
	 </p>
	 <example>
	 	An organization may define a bill-of-material structure for both a design engineering release life cycle activity, 
	 	as well as for a manufacturing engineering activity.
	 </example>
	 <p>
		 This schema supports the concept of making a product from another product. 
		 This concept deals with the relationship between a product and the results of a process applied to that product which produces a new product.
	 </p>
     <p>
     	The following concepts and assumptions apply.
     </p>
     <ul>
     	<li>
     		Product structures are modelled by directed acyclic graphs (DAG). 
     		In these models, nodes represent product definitions, and the links represent composed-of relationships. 
     		In this schema, nodes correspond to product_definition entities and the links correspond to assembly_component_usage entities.
     		<note number="1">
     			For a detailed discussion of graph theory, see citation [3] in the bibliography.
     		</note>
     	</li>
     	<li>
     		Many forms of product structure can be represented using this schema. 
     		Two product structures of special utility are bill-of-material and parts list structures.
     		<note number="2">
     			Examples and diagrams of the manner in which the entities of this part of ISO 10303 may be used to represent product structures 
     			are included in annex.
     		</note>
     	</li>
     	<li>
     		A parts list structure is a specific form of a bill-of-material that can be represented by a tree. 
     		Other bill-of-material structures may require a more general DAG.
     	</li>
     	<li>
     		For a general product structure, in order to identify the usage of any constituent within an assembled product, 
     		it is necessary to identify the path between the assembled product and the constituent. 
     		The <b>specified_higher_usage_occurrence</b> and <b>multi_level_reference_designator</b> entities provides this capability.
     		<note number ="3">
     		The <b>specified_higher_usage_occurrence</b> is directed from component to the assembly and works recursively.
     		The <b>multi_level_reference_designator</b> is directed from the assembly to the component and defines a list of intermediate assembly notes.
     		</note>
     	</li>
     </ul>
   </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="product_structure_schemaexpg1.xml"/>
     <imgfile file="product_structure_schemaexpg2.xml"/>
   </express-g>
</schema>

<schema name="product_concept_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
   <introduction>
    <p>
    	The subject of the product_concept_schema is the idea of a product as defined by customer needs, i.e., a product concept. 
    	A product concept may exist before a product has been defined. 
    	A product concept identifies a collection of independent product features or capabilities. 
    	A product concept may also have product features identified specifically for it. 
    	Conditions among those features for a particular product may be specified to manage dependencies and define the valid product variations 
    	for a particular product concept.
    </p>
    <example>
    	An automobile may have two types of engines identified as product features. 
    	One is a low power engine; the other is a high power engine. 
    	Air conditioning may also be identified as a product feature for the same automobile. 
    	A condition could be specified that if the air conditioning is present, the high power engine is necessary.
    </example>
   </introduction>
   <fund_cons>
   	<p>
   		The following concepts and assumptions apply.
   	</p>
   	<ul>
   		<li>
   			A product concept identifies a deliverable product defined by a producer to satisfy a customer. 
   			A product concept is often used to identify a selection of product features or capabilities.
   		</li>
   		<li>A product concept may have several configuration items identified for it.</li>
   		<li>A product concept may exist without a product or product version.</li>
   		<li>A product concept may have product features identified for it defined by a producer to satisfy a customer viewpoint.</li>
   		<li>
   			A set of rules for required interdependent combinations of a product feature may be specified.
   			<note>
   				Examples and diagrams of the manner in which the entities of this part of ISO 10303 may be used to represent the combinations of product 
   				features are included in annex E!!!.
   			</note>
   		</li>
   	</ul>
   </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="product_concept_schemaexpg1.xml"/>
     <imgfile file="product_concept_schemaexpg2.xml"/>
   </express-g>
</schema>

<schema name="configuration_management_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->
   <introduction>
   	<p>
   		The subject of the <b>configuration_management_schema</b> is the identification of items, the composition of which is to be managed. 
   		The item to be managed is specified as a <b>configuration_item</b>. 
   		It is usually visible to customers of the organization that does the configuration management. 
   		If the item being managed is a product, the schema facilitates the establishment of the association of appropriate versions of the product
		to the <b>configuration_item</b>.
   	</p>
   	<p>
   		This schema also provides the capability to record the associations established to enable the tracking of the associations.
   	</p>
   	<p>
   		The functionality of configuration management is achieved using the entities <b>configuration_item</b>, <b>configuration_design</b>, 
   		and <b>configuration_effectivity</b>.
   	</p>
   	<p>
   		The configuration management schema of this part of ISO 10303 covers the following capabilities:
   	</p>
   	<ul>
   		<li>the identification of the configuration_items and the respective <b>product_concept</b>s of which they form constituent.</li>
   		<li>the identification of a <b>product_definition</b> or <b>product_definition_formation</b> that realizes the <b>configuration_item</b>.</li>
   		<li>
   			the association of the appropriate versions of a product to build a <b>configuration_item</b>. 
   			This association is referred to as <b>configuration_effectivity</b>.
   		</li>
   	</ul>
   	<p>Three of the ways to apply configuration_effectivity are:</p>
   	<ul>
   		<li><b>serial_numbered_effectivity</b>, where the <b>configuration_effectivity</b> is based on serial numbered instances of manufactured products;</li>
   		<li><b>dated_effectivity</b>, where the <b>configuration_effectivity</b> is based on dates when instances of the product are manufactured;</li>
   		<li><b>lot_effectivity</b>, where the <b>configuration_effectivity</b> is based on instances of lots of products manufactured.</li>
   	</ul>	
   	<note>
   		The definitions of <b>serial_numbered_effectivity</b>, <b>dated_effectivity</b>, and <b>lot_effectivity</b> are given 
   		in the <b>effectivity_schema</b> in ISO 10303-41.
   	</note>
   </introduction>
   <fund_cons>
   	<p>The following concepts and assumptions apply.</p>
   	<ul>
   		<li>Configuration management may be applied to products and parts of products to be designed or manufactured;</li>
   		<li>
   			An organization determines which products are to be under its configuration management control.
			These products become the configuration items of the organization. 
			These are usually higher-level functional elements that act as the focal points for managing the effectivity of lower-level constituents;
   		</li>
   		<li>
   			A product concept may identify a customer view of a product based on a static set of configuration
			items or may be configurable based on customer selected options that are defined for it.
   		</li>
   	</ul>
   </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="configuration_management_schemaexpg1.xml"/>
     <imgfile file="configuration_management_schemaexpg2.xml"/>
   </express-g>
</schema>

 <!-- shortnames  -->
 <shortnames>
 	<shortname name="ALPRRL" entity="alternate_product_relationship"/>
 	<shortname name="ASCMUS" entity="assembly_component_usage"/>
 	<shortname name="ACUS" entity="assembly_component_usage_substitute"/>
 	<shortname name="ACUSWR" entity="assembly_component_usage_substitute_with_ranking"/>
 	<shortname name="MFUO" entity="make_from_usage_option"/>
 	<shortname name="MFUOG" entity="make_from_usage_option_group"/>
 	<shortname name="MLRD" entity="multi_level_reference_designator"/>
 	<shortname name="NAUO" entity="next_assembly_usage_occurrence"/>
 	<shortname name="PDOR" entity="product_definition_occurrence_relationship"/>
 	<shortname name="PRDFUS" entity="product_definition_usage"/>
 	<shortname name="PRUSOC" entity="promissory_usage_occurrence"/>
 	<shortname name="QACU" entity="quantified_assembly_component_usage"/>
 	<shortname name="SHUO" entity="specified_higher_usage_occurrence"/>
 	
 	<shortname name="CNFTOP" entity="concept_feature_operator"/>
 	<shortname name="CNFTRL" entity="concept_feature_relationship"/>
 	<shortname name="CFRWC" entity="concept_feature_relationship_with_condition"/>
 	<shortname name="CNCNFT" entity="conditional_concept_feature"/>
 	<shortname name="PRDCNC" entity="product_concept"/>
 	<shortname name="PRCNFT" entity="product_concept_feature"/>
 	<shortname name="PCFA" entity="product_concept_feature_association"/>
 	<shortname name="PRCNRL" entity="product_concept_relationship"/>
 	<shortname name="CNF0" entity="configurable_item"/>
 	<shortname name="CNFDSG" entity="configuration_design"/>
 	<shortname name="CNFEFF" entity="configuration_effectivity"/>
 	<shortname name="CNFITM" entity="configuration_item"/>
 	<shortname name="CNITRL" entity="configuration_item_relationship"/>
 </shortnames>

 <!-- optional annexes 
 <tech_discussion/>

 

 <add_scope/>
 
-->
<examples>
	<p>this is the annex of examples. </p>
</examples>
 <bibliography>
 	<bibitem.inc ref="ISO-10303-42"/>
 	<bibitem.inc ref="ISO10303-43.2000"/>
 	<bibitem.inc ref="hr_pgt"/>
 </bibliography>

</resource>

