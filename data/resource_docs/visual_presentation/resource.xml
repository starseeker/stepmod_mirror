<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: resource.xml,v 1.5 2006/01/25 09:21:06 liutkuviene Exp $ -->
<!DOCTYPE resource SYSTEM "../../../dtd/res_doc/resource.dtd">
<!-- Generated by mkresource.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the resource in IExplorer, open: sys/1_scope.xml
      -->
<resource
   name="visual_presentation"
   part="46"
   version="2"
   wg.number=""
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="WD"
   language="E"
   publication.year=""
   published="n"
   rcs.date="$Date: 2006/01/25 09:21:06 $"
   rcs.revision="$Revision: 1.5 $">

 <keywords>
    presentation organization, presentation definition, presentation appearance, presentation resource
 </keywords>


<!-- the abstract for the resource. If not provided, the XSL will use the in scope -->
 <abstract>
    <p>
    This part of ISO 10303 specifies the integrated resources for the visualization of displayable
	product information. Presentation data as provided in this part are combined with product
	data and are exchanged together between systems with the aim that the receiving system can
	construct one or several pictures of the product information suitable for human perception.
	</p>
	<p>
	This part specifies the generic resources required to describe the desired visual appearance of
	product information in its picture. The actual generation of the picture from the product
	infornmation and its presentation data is left to the receiving system. The actual depiction may
	deviate from this target because of limitations in the capabilities of graphics systems.
	</p>
	<p>
	Product information can be visualized in two ways, either by realistic, life-like images according
	to the rules of projective geometry and light propagation and reflection, or by symbolic presentations 
	that conform with draughting standards and conventions. 
	This part supports both types of presentations. 
	The two types of visualization processes require different kinds of graphical
	transformations and these may be combined in the same picture.
	</p>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="lothar.klein"/>
   <editor ref="lothar.klein"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application resource for the visualization of displayable
     properties of products. 
   </p>
   <p>
   The information given in all four schemas of this part together is suficient to describe in detail
   how product information shall be visualized by a receiving system. The presentation information
   contained in this part can be used only in conjunction with product information suitable for
   display. Presentation information as contained in this part cannot be displayed by itself without
   reference to product information.
   </p>
   <p>
   The presentation organization schema describes the hierarchical and partially recursive structure
   of the presentation sets, areas and views in which images of the product information are displayed. 
   It also explains how the components of the product information image and its annotation
   are organized as displayable objects and how these are placed into the context of presentations.
   This schema also accounts for the definition of the projective process for geometry by means of
   a camera model and for the specification of lighting and shading models.
   </p>
   <p>
   The presentation definition schema serves to define how the individual geometric and 
   non-geometric components of the product information are selected, assembled into presentation
   groups, and associated with presentation styles.
   </p>
   <p>
   The presentation appearance schema defines the appearance attributes that can be chosen to
   describe the desired visual appearance of the displayable elements of the product information
   by enumerating the available graphical presentation styles.
   </p>
   <p>
   The presentation resource schema provides basic graphical capabilities such as text font definition, 
   symbol definition, and colour definition.
   </p>
   <p>
   The visual presentation characteristics described in this part are often associated with 
   information from other generic resource parts, especially with geometric and topological representations
   (ISO 10303-42). The Application Protocols determine which resource parts are used together.
   Applications which make use of the generic resources in this part provide both the product
   information to be visually presented and the semantic meaning of the presentation. Possible
   applications include rendered views of product shape, results of scientific visualization, technical
   drawings, diagrams, charts, and graphics for technical publications.
   </p>
   <p><b><i>Relation to graphics standards</i></b></p>
   <p>
   The integrated resources specified in this part of ISO 10303 support the visual presentation
   of the properties of products. The generation of visual images using data specified by these
   integrated resources requires the use of an appropriate display system. This part of ISO 10303
   specifies the input data to such systems, together with the necessary structures and constraints
   that relate presentation data to other aspects of product data.
   </p>
   <p>
   Many display systems conform to existing ISO standards for computer graphics, 
   such as GKS-3D (ISO/IEC 8805) and PHIGS/PHIGS PLUS (ISO/IEC 9592). This part of ISO 10303 takes
   into account the concepts and terminology of these standards. Input data specified by this part
   of ISO 10303 is therefore intended to be suitable for further processing by displays conforming
   to graphics standards.
   </p>
 </purpose>

 <!-- Schema Interface express-g diagrams  -->
 <!-- refer to p41ed2 as example  -->
 <!--schema_diag>
   <express-g>
     <imgfile file="schema_diagexpg1.xml"/>
   </express-g>
 </schema_diag-->

<!-- 1. Scope -->
 <!-- Items in scope -->
 <inscope>
   <li>association between product data defined by other parts of ISO 10303 and presentation data;</li>
   <li>support of graphics functionality in compliance with current ISO graphics standards;</li>
   <li>definition of presentation style attributes for realistic and symbolic visualizations of geometric and non-geometric displayable elements in the product information;</li>
   <li>control of approximation tolerances for geometric presentation elements;</li>
   <li>methods for defining the appearance of characters and symbols in fonts;</li>
   <li>support of externally defined character fonts and symbols;</li>
   <li>image control by a layer mechanism;</li>
   <li>nesting of presentation areas.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>definition of product information;</li>
   <li>exchange of purely graphical information without any relationship to product information;</li>
   <li>definition of the contents of character font and symbol libraries.</li>
 </outscope>

<!-- 2. Normative references -->
 <normrefs>
 	<normref.inc normref="ref8824-1"/>
 	<normref.inc normref="ref10303-11.2004"/>
 	<normref.inc normref="ref10303-41.e3"/>
 	<normref.inc normref="ref10303-42.2003"/>
 	<normref.inc normref="ref10303-43.2000"/>
 </normrefs>

<!-- 3.2 Other terms and definitions -->
 <definition>
 	<term id="annotation">annotation</term>
 	<def>
 	text and/or symbology used for the purpose of communicating product information.
 	</def>
 </definition>
 <definition>
 	<term id="displayable_product_information">displayable product information</term>
 	<def>
 	facts, concepts, or instructions about a product that are displayed through the visualization process.
 		<example>
 			Displayable information of a product are properties such as shape, dimensions and tolerances, and material.
 		</example>
 	</def>
 </definition>
 <definition>
 	<term id="layer">layer</term>
 	<def>
 	a collection of displayable items for the purpose of controlling visibility and presentation style.
 	</def>
 </definition>
 <definition>
 	<term id="picture">picture</term>
 	<def>
 	a two-dimensional graphical presentation of product properties for human perception.
 	</def>
 </definition>
 <definition>
 	<term id="presentation_information">presentation information</term>
 	<def>
 	the information necessary to create a presentation of product information through visualization. 
 	Presentation information is meaningful only if it is associated with product information.
 	</def>
 </definition>
 <definition>
 	<term id="realistic_presentation_of_properties">realistic presentation of properties</term>
 	<def>
 	a type of visualization that makes use of physical laws and mathematical principles to produce lifelike images. 
 	Realistic presentation makes use of perspective transformations, reflectance calculations, shading transparency, and colour definitions.
 	</def>
 </definition>
 <definition>
 	<term id="state_variable">state variable</term>
 	<def>
 	a variable which represents a quantity, e.g. temperature.
 	</def>
 </definition>
 <definition>
 	<term id="symbol">symbol</term>
 	<def>
 	a mark or characters that are interpreted as the conventional sign of some object, idea, function, or process.
 	</def>
 </definition>
 <definition>
 	<term id="symbolic_presentation_of_properties">symbolic presentation of properties</term>
 	<def>
 	a type of visualization that makes use of engineering conventions and practices to produce annotation.
 	</def>
 </definition>
 <definition>
 	<term id="synthetic_camera_model">synthetic camera model</term>
 	<def>
 	a model which describes the process of mapping product shape to two dimensions. 
 	The model uses an abstraction of the process used by a camera to create a photo.
 	</def>
 </definition>
 <definition>
 	<term id="visualization">visualization</term>
 	<def>
 	a process by which displayable product information and presentation information are used to produce a picture.
 	</def>
 </definition>
 
<!-- 3.3 Abbreviations  -->
 <abbreviations>
 	<abbreviation id="CIE">
 		<acronym>CIE</acronym>
 		<term>Commission Internationale de l'Eclairage. Used to refer to the CIE universal colour definition system</term>
 	</abbreviation>
 	
 	<abbreviation id="HLS">
 		<acronym>HLS</acronym>
 		<term>Hue, Lightness, Saturation colour space</term>
 	</abbreviation>
 	
 	<abbreviation id="HSV">
 		<acronym>HSV</acronym>
 		<term>Hue, Saturation, Value colour space</term>
 	</abbreviation>
 	
 	<abbreviation id="RGB">
 		<acronym>RGB</acronym>
 		<term>Red, Green, Blue colour space</term>
 	</abbreviation>
 </abbreviations>


<!-- 4 Presentation organization schema ++++++++++ -->
<schema name="presentation_organization_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->

<!-- 4.1 Introduction -->
   <introduction>
   <p>
   The presentation_organization_schema provides a structure for the management of a picture
   and the components of a picture. It also specifies the relationship between the properties of a
   product and their representation in a picture. The components of a picture may be related to
   each other, either as an association between two components that are otherwise independent, or, 
   as one component is an element of the definition of another. These relationships allow complex
   structures of pictures and components to be created.
   </p>
   <p>
   The components of a picture may be organized within a hierarchy built of presentation sets, presentation
   areas, areas dependent annotation representations, presentation views, view dependent 
   annotation representations, and product data representation views. The hierarchy consists of
   the following four levels:
   </p>
   <dl>
	   <dt><b>Level 1:</b></dt>
	   <dd><b>presentation set:</b> A presentation set is a collection of independent pictures that are concerned with the same subject.
	   Examples of presentation sets are a collection of drawing sheets or a collection of the images of several display screens.</dd>
	   <dt><b>Level 2:</b></dt>
	   <dd><b>presentation area:</b> A presentation area is a generalization of a display that represents a single area
	   on a display screen or device. A presentation area contains any number of presentation areas, presentation views, 
	   and area-dependent annotation representations.</dd>
	   <dt><b>Level 3:</b></dt>
	   <dd><b>presentation view:</b> A presentation view is a two-dimensional presentation of product shape,
	   which includes any annotation that is associated with that view. A presentation  
	   view contains any number of product data representation views and view-dependent annotation representations.</dd>
	   <figure number="1">
		   <title>Presentation hierarchy</title>
		   <img src="presentation_hierarchy.gif"/>
	   </figure>
	   <dd><b>area dependent annotation representation:</b> An area dependent annotation representation 
	   is all annotation with a presentation area.</dd>
	   <dt><b>Level 4:</b></dt>
	   <dd><b>product data representation view:</b> A product data representation view is a two-dimensional
	   presentation of product shape, which includes any annotation associated
	   with the product shape.</dd>
	   <dd><b>view-dependent annotation representation:</b> A view-dependent annotation representation 
	   is the annotation associated with a presentation view.</dd>
   </dl>
  <p>
  An actual presentation hierarchy may contain more levels than described above. A single
  presentation area may itself be composed of several presentation areas. A presentation hieararchy
  may also contain less levels than described above, because some of the components making up 
  the hierarchy are not required.
  </p>
  	<note>
		Figures 1 and 2 illustate the relationships between the levels of the presentation hierarchy.
  	</note>
  	<figure number="2">
   		<title>Example of a presentation hierarchy</title>
   		<img src="Example_of_presentation_hierarchy.gif"/>
   	</figure>
  </introduction>
   
   <!-- 4.2 Fundamental concepts and assumptions -->
   
   <fund_cons>
   <!-- Presentation hierarchy -->
   <b><i>Presentation hierarchy</i></b>
   <p>
   Within the presentation hierarchy, only a presentation area contains suficient information to
   allow the unambiguous generation of a picture using a suitable output device such as a computer 
   screen, printer, or plotter.
   </p>
   <p>
   Other elements in the hierarchy do not provide the necessary placement information for proper
   positioning on a display device. Presentation views or other lower level components are displayable
   only when related directly or indirectly to a presentation area.
   </p>
   <p>
   The <b>presentation_organization_schema</b> describes the presentation hierarchy through 
   representation of the different elements of the hierarchy and the relationships between them.
   </p>
   <note number="1">
	   The concepts of representation and of relationships between representations are described
	   in ISO 10303-43.
   </note>
   <p>
   Each element of the presentation hierarchy is described using the presentation representation
   entity, a subtype of representation. Subtypes of the presentation representation entity describe
   different elements within the hierarchy.
   </p>
   <note number="2">
   		The representation entity is defined in ISO 10303-43.
   </note>
   <p>
   The context of each element of the presentation hierarchy is described using 
   the <b>geometric_representation_context</b> entity; this is constrained to be two dimensional.
   </p>
   <note number="3">
   		The <b>geometric_representation_context</b> entity is defined in ISO 10303-42.
   </note>
   <p>
   The contents of each element of the presentation hierarchy are described by the set 
   of items of each presentation representation. The items are either two-dimensional geometry
   or annotation that are to be presented in the element, or the results of including other elements.
   </p>
   <p>
   Some elements of the hierarchy are constrained with respect to their contents, 
   or to the relationships that they may play with other elements. Specific semantics 
   are associated with these constraints; for example, the <b>product_data_representation_view</b> 
   entity describes an element of the hierarchy that only includes the results 
   of projecting three{dimensional geometry or annotation.
   </p>
   <p>
   The topmost level of the presentation hierarchy is represented by the entities <b>presentation_set</b>, 
   <b>presentation_area</b>, and <b>area_in_set</b>. The <b>area_in_set</b> entity supports many-to-many 
   relationships between presentation sets and presentation areas.
   </p>
   <p>
   Other elements of the presentation hierarchy are related to each other using 
   either the <b>presentation_representation_relationship</b> entity, or the <b>mapped_item</b> 
   and <b>representation_map</b> entities.
   </p>
   <note number="4">
  		 The <b>mapped_item</b> and <b>representation_map</b> entities are defined in ISO 10303-43.
   </note>
   <p>
   An association between two elements of the hierarchy which are independently 
   defined is described using the <b>presentation_representation_relationship</b> entity. 
   This describes the relationship between two instances of the presentation_representation 
   entity; in this relationship, one <b>presentation_representation</b> is denoted as the parent,
   the other as the child. The description of a transformation is included in the 
   relationship; this transformation is the geometric relationship between the <b>items</b> 
   of the parent <b>presentation_representation</b> and those of the child <b>presentation_representation</b>.
   </p>
   <example number="2">
	   To define a hierarchy which consists of a single presentation area, two presentation 
	   views and a single area dependent annotation representation, three instances of 
	   presentation representation relationship are required as shown in figure 3.
   </example>
   <figure number="3">
	   <title>Mapping the presentation hierarchy to instances of entities</title>
	   <img src="Mapping_presentation_hierarchy_instances_entities.gif"/>
   </figure>
   <p>
   An association between two elements of the hierarchy, where one participates 
   in the definition of the other, is described using the <b>mapped_item</b> and <b>representation_map</b> entities.
   </p>
   <p>
   Such an association is described by an instance of the <b>mapped_item</b> entity. 
   This instance is included as one of the <b>items</b> of the <b>presentation_representation</b> 
   that contains the other. The second presentation_representation is referenced as 
   the <b>mapped_representation</b> of a <b>representation_map</b>, that is specified as the 
   <b>mapping_source</b> of the <b>mapped_item</b>. The transformation that describes the 
   geometric relationship between the <b>items</b> of the two <b>presentation_representations</b> 
   is described by the <b>mapping_target</b> of the <b>mapped_item</b> and the <b>mapping_origin</b> of the representation_map.
   </p>
   <example number="3">
	   To include a <b>presentation_view</b> within a <b>presentation_area</b> requires one instance 
	   of <b>mapped_item</b>, one instance of representation map, and two instances of 
	   <b>axis2_placement_2d</b> that act as the origin and the target for the mapping, as shown in figure 4.
   </example>
   <note number="5">
  		 The <b>axis2_placement_2d</b> entity is defined in ISO 10303-42.
   </note>
   <figure number="4">
	   <title>Association of presentation view and presentation area using mapped_item</title>
	   <img src="Association_presentation_view_presentation_area_umi.gif"/>
   </figure>
   
   <!-- Camera model and projection -->
   <b><i>Camera model and projection</i></b>
   <p>
   Each level of the presentation hierarchy consists only of two-dimensional geometry 
   or annotation. A three-dimensional synthetic camera model must be specified 
   to associate a presentation with a three-dimensional product shape or planar annotation 
   in three-dimensional space. This model specifies how the projection of three-dimensional 
   geometry and annotation to two dimensions shall be executed by the displaying system. 
   The three-dimensional synthetic camera model is defined in analogy to the 
   graphics standards GKS-3D and PHIGS. More details about the synthetic camera 
   model can be found in [6], [7] and in computer graphics literature, e.g., in [11]
   or [12]. For draughting requirements, a two-dimensional camera model is also supported. 
   This two-dimensional model performs scaling and translation in two-dimensional space.
   </p>
   <p>
   The <b>product_data_representation_view</b> is the only component of the presentation hierarchy
   which may consist of two-dimensional projections of associated three-dimensional product shape
   or of annotation in three-dimensional space. Because this part of ISO 10303 does not define the
   projected picture, but all information necessary to compute the projection, only a placeholder
   for that picture is part of the <b>product_data_representation_view</b>. This placeholder is called
   <b>camera_image</b> and refers to the camera model and the two- or three-dimensional product
   shape elements or annotation.
   </p>
   <p>
   To allow more realistic presentations of three-dimensional objects, hidden line and hidden surface
   removal, as well as light sources, can be specified for a three-dimensional camera model.
   </p>
   
   <!-- Layers -->
   <b><i>Layers</i></b>
   <p>
   A layer is a collection of product shape elements, annotation elements, or components of the
   presentation hierarchy grouped for the purpose of controlling visibility and style. 
   The set of all items associated with a layer can be defined as visible or invisible 
   within a component of the presentation hierarchy. A single item can be associated 
   with several layers and a single layer can be used in several components of 
   the presentation hierarchy. For an item which is associated with several layers, 
   a different presentation style can be assigned to each layer. A layer is defined by
   a <b>presentation_layer_assignment</b>. The visibility and style assignment of a given layer within
   a component of the presentation hierarchy is specified by a <b>presentation_layer_usage</b>.
   </p>
   
   <!-- Association of presentation with a product model -->
   
   <b><i>Association of presentation with a product model</i></b>
   <p>
   This part of ISO 10303 allows the association of presentation information with 
   the product information which is presented. This association is achieved through
   the use of a <b>presented_item_representation</b>. This entity relates the item 
   which is presented with the presentation of that item. The <b>presented_item</b> shall 
   be specialized by Application Protocols.
   </p>
   <example number="4">
  		 Presented items are the body design of a car, the layout of an electronic chip, or the architecture of a building.
   </example>
   
   </fund_cons>
   

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="presentation_organization_schemaexpg1.xml"/>
   </express-g>
</schema>


<!-- 5 Presentation definition schema -->
<schema name="presentation_definition_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->

<!-- 5.1 Introduction -->
	<introduction>
		<p>
   		The presentation definition schema provides the structure for the definition of annotation 
   		and assignment of style properties to annotation primitives. Annotation in this part of ISO 10303
   		is always planar, but may be located in three-dimensional space.
   		</p>
	</introduction>

<!-- 5.2 Fundamental concepts and assumptions -->
	<fund_cons>
		<p>
		Annotation primitives are the elements from which symbolic presentations are constructed. 
		The annotation primitives defined in this schema include annotation points, curves, fill areas, texts, symbols, and tables.
		</p>
		<p>
		An annotation point is a point which is presented using a <b>point_style</b>. For more information on <b>point_style</b> see clause 6. 
		The presentation appearance schema does not define a special entity for annotation points because the <b>point</b> entity defined in ISO 10303-42 is sufficient for annotation purposes.
		</p>
		<p>
		An annotation curve is a planar curve which is presented using a <b>curve_style</b>. For more information on <b>curve_style</b> see clause 6. 
		The presentation appearance schema does not define a special entity for annotation curves, because the <b>curve</b> entity defined in ISO 10303-42 is sufficient for annotation purposes.
		</p>
		<p>
		Annotation text is a collection of characters, character strings, collection of strings, and more complex collections of strings and characters.
		Annotation text is defined by the <b>annotation_text</b> entity which uses the concept of <b>mapped_item</b>.
		For more information on <b>mapped_item</b> see ISO 10303-43.
		The <b>annotation_text</b> entity positions and orients a collection of characters, simple character strings, collection of strings, and more complex collections 
		of strings and characters, which is defined in a <b>text_string_representation</b>.
		Several <b>annotation_text</b> entities can reference the same <b>text_string_representation</b>.
		A <b>text_string_representation</b> itself is a set of <b>annotation_text</b>, <b>defined_character_glyph</b>, <b>annotation_text_character</b>, <b>text_literal</b>, or <b>composite_text</b> entities.
		This structure allows the recursive construction of an <b>annotation_text</b>.
		Characters may be pre-defined, externally defined, or may be defined within a conforming exchange using concepts of this part of ISO 10303.
		In the last case, the <b>annotation_text_character</b> entity refers to the <b>character_glyph_symbol</b> entity.
		This entity contains the geometric representation of a character.
		The <b>text_literal</b> allows the specification of a text string as part of an <b>annotation_text</b>.
		A complex collection that may be placed and styled as a whole can be defined by the <b>composite_text</b> entity.
		Specializations of <b>annotation_text</b> allow additionally the specification of blanking boxes, surrounding curves, delineations, or extent rectangles for that text.
		An <b>annotation_text</b> is presented using a text style. For more information on <b>text_style</b> see clause 6.
		</p>
		<p>
		An annotation symbol is a pre-defined symbol, an externally defined symbol, or a collection of <b>representation_item</b>s which make up a graphical symbol.
		An annotation symbol is defined either by the <b>defined_symbol</b> entity or by the <b>annotation_symbol</b> entity.
		The <b>defined_symbol</b> entity scales, positions, and orients an implicit description of a symbol.
		The <b>annotation_symbol</b> uses the concept of <b>mapped_item</b>.
		For more information on <b>mapped_item</b> see ISO 10303-43.
		The <b>annotation_symbol</b> entity scales, positions, and orients a a collection of <b>representation_item</b>s which are defined in a <b>symbol_representation</b>.
		Several <b>annotation_symbol</b> entities can reference the same <b>symbol_representation</b>.
		The <b>representation_item</b>s which make up a symbol can be elements of geometry (see ISO 10303-42), annotation primitives, or annotation occurrences.
		This structure allows the recursive construction of symbols.
		Moreover, a <b>symbol_representation</b> itself can be built of several <b>symbol_representation</b>s.
		Such a hierarchy is defined by establishing a relationship between two <b>symbol_representation</b>s.
		A relationship is established by instantiating an entity of type <b>symbol_representation_relationship</b> which refers to a pair of representations.
		One of these representations is called <b>rep_1</b>, the other one is called <b>rep_2</b>, and the relationship is directed from the parent (<b>rep_1</b>) to the child (<b>rep_2</b>).
		The relationship specifies additionally a transformation.
		This transformation shall be executed to transform elements in the <b>rep_2</b> to the coordinate system of the <b>rep_1</b>.
		A single <b>symbol_representation</b> is then the collection of all <b>representation_item</b>s in that representation plus all symbol representations which are nodes in the relationship tree associated with that representation.
		Symbols are presented using <b>symbol_style</b>, which is a collection of presentation styles.
		For more information on <b>symbol_style</b> see clause 6.
		</p>
		<p>
		An annotation table is a special type of <b>annotation_symbol</b> which represents a table.
		An annotation table is defined by the <b>annotation_table</b> entity which uses the concept of <b>mapped_item</b>.
		For more information on <b>mapped_item</b> see ISO 10303-43.
		The <b>annotation_table</b> entity scales, positions, and orients a table which is defined in a <b>table_representation</b>.
		Several <b>annotation_table</b> entities can reference the same <b>table_representation</b>.
		A <b>table_representation</b> can be built of <b>table_record_representations</b> which itself can be made of several <b>table_record_field_representations</b>.
		A <b>table_record_representation</b> usually corresponds to a column or row of a table, while a <b>table_record_field_representation</b> corresponds to a single cell of a table.
		Nevertheless, more complex structures can be built because <b>table_record_field_representations</b> may be built of other <b>table_record_field_representation</b>s.
		The hierarchy making up a <b>table_representation</b> is built by relating the components by a <b>table_representation_relationship</b> which is a specialization of <b>symbol_representation_relationship</b>.
		The <b>annotation_table</b> defines only an empty table.
		To put text into a table, <b>annotation_text</b> occurrences are defined individually in such a way that they are placed in a table.
		The <b>table_text_relationship</b> can be used to associate such text with a specific field of a table.
		</p>
		<p>
		Annotation primitives can occur only in conjunction with a style assignment.
		An annotation primitive, together with its style, is called an <b>annotation_occurrence</b>.
		For each type of primitive a special <b>annotation_occurrence</b> is defined which restricts the presentation style to appropriate types.
		The <b>annotation_occurrence_relationship</b> allows the definition of a relationship between two <b>annotation_occurrence</b>s.
		The <b>table_text_relationship</b> associates an <b>annotation_text_occurrence</b> with a <b>table_record_field_representation</b> of an annotation table.
		</p>
	</fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="presentation_definition_schemaexpg1.xml"/>
   </express-g>
</schema>

<!-- 6 Presentation appearance schema -->
<schema name="presentation_appearance_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->

<!-- 6.1 Introduction -->
   <introduction>
   <p>
   	The subject of the <b>presentation_appearance_schema</b> is the specification of the intended graphical appearance of a presented picture.
   	The <b>presentation_appearance_schema</b> also defines the mechanism which allows the appropriate association of these appearance attributes
	with <b>annotation_occurrences</b> in the context of a <b>presentation_representation</b>.
	Thus, the context of the <b>presentation_representation</b> can be used to determine the appearance of different kinds of elements in the picture.
   </p>
   </introduction>

<!-- 6.2 Fundamental concepts and assumptions -->
   <fund_cons>
   
   <!-- Assignment of presentation style -->
	<b><i>Assignment of presentation style</i></b>
	<p>
	The <b>presentation_appearance_schema</b> allows the association of appearance attributes with selected annotation primitives and with product shape elements.
	In this part of ISO 10303, presentation style can be assigned to any <b>representation_item</b>.
	A style assignment is made by instantiating a <b>styled_item</b> which refers to a <b>representation_item</b> together with its <b>presentation_style_assignment</b>.
	A <b>presentation_style_assignment</b> itself is a collection of different presentation styles such as point style, curve style, or text style.
	Styling an unstyled <b>representation_item</b> produces a new <b>representation_item</b> which has presentation style assigned.
	The <b>presentation_style_assignment</b> of a <b>styled_item</b> affects the appearance of the referenced <b>representation_item</b> as well as the appearance of all 
	<b>representation_item</b>s referenced directly or indirectly by that item.
	Only those <b>representation_item</b>s are affected which are not already styled.
	This means styling a styled <b>representation_item</b> has no effect, styling a partially styled <b>representation_item</b> affects only the appearance of the unstyled parts, and
	styling an unstyled <b>representation_item</b> affects the appearance of the whole item.
	Only styled <b>representation_item</b>s may be presented.
	Whether they are actually presented depends on several other facts, like layer invisibility and <b>invisibility</b>, hidden line and surface removal, as well as clipping.
	This part of ISO 10303 does not make any statement about the effect if style conflicts occurs.
	A style conflict occurs, for example, when a <b>representation_item</b> is used by several <b>styled_item</b>s.
	</p>
	<p>
	A <b>presentation_style_assignment</b> is used to assign style to a <b>representation_item</b> independently from any presentation context.
	A subtype of presentation_style_assignment, the <b>presentation_style_by_context</b>, allows the assignment of style for a specific presentation context.
	A presentation context can be any <b>presentation_set</b>, <b>representation</b>, or <b>representation_item</b>.
	In the last case, a style can be assigned to an item as a whole, and a different style can be assigned to a part of that item.
	</p>
	<p>
	A style assignment can be over-riden by an <b>over_riding_styled_item</b>.
	A subtype of over_riding_styled_item, the <b>context_dependent_over_riding_styled_item</b>, allows the over-riding of a style for a specific presentation context.
	</p>
	
	<!-- Types of presentation styles -->
	<b><i>Types of presentation styles</i></b>
	<p>
	For each annotation primitive defined in the <b>presentation_definition_schema</b>, a special group of styles exist.
	These groups are point styles, curve styles, fill area styles, surface styles, text styles, and symbol styles.
	This part of ISO 10303 does not restrict style assignment to product shape elements. 
	For example, it allows the assignment of surface style to a point.
	However, only appropriate styles affect the appearance of the product shape element; i.e., surface styles only affect surfaces, fill area styles and 
	curve styles only affect curves, and point styles only affect points, curves, and surfaces.
	For high-level product shape elements such as solid models, the using Application Protocol has to specify which styles affect the appearance of these elements.
	Nevertheless, the style assignment for annotation primitives is more restrictive.
	Details on these restrictions can be found in clause 5 subtypes of <b>annotation_occurrence</b>.
	</p>
	<p>
	Presentation styles can be specified using the resources of this schema, can be externally defined, or can be pre-defined by Application Protocols. 
	The presentation styles defined in this schema include the following.
	</p>
	<p>
	Point styles provide the resources to specify the visual appearance of points.
	They allow the specification of the marker symbol, marker size, and colour to be used for presenting points.
	Point styles can be specified by the entity <b>point_style</b>.
	</p>
	<p>
	Curve styles provide the resources to specify the visual appearance of curves.
	They allow the specification of curve fonts, curve width, appearance of curve ends and corners, colour or patterns for filling visible curve segments.
	A curve font specifies whether a curve shall be drawn using solid, dashed, or dotted lines.
	The <b>presentation_appearance_schema</b> allows the specification of arbitrary patterns for curve fonts and the usage of externally defined or pre-defined curve fonts.
	The entities used for the definition of curve fonts are <b>externally_defined_curve_font</b>, <b>pre_defined_curve_font</b>, <b>curve_style_font</b>, <b>curve_style_font_pattern</b>, and <b>curve_style_font_and_scaling</b>.
	The curve width can be specified as measure or pre-defined size.
	Curve ends and corners may be drawn squared or rounded, and extension or shortage can be specified for curve ends.
	The entities supporting this structure are <b>curve_style_with_ends_and_corners</b> and <b>curve_style_with_extension</b>.
	A <b>curve_style_wide</b> allows the specification of a fill area style which is used for filling visible curve segments.
	This has been included to meet draughting requirements for the presentation of curves.
	The <b>curve_style_rendering</b> controls the rendering of curves on a surface and is described together with surface styles.
	</p>
	<p>
	Fill area styles provide the resources to specify the visual appearance of annotation fill areas. 
	They allow the specification of a solid colour, hatches, or tiling patterns.
	The <b>fill_area_style_colour</b> can be used to specify a solid colour that is used for presenting a fill area.
	The hatching patterns can be composed of sets of parallel lines with arbitrary angle.
	Alternatively, hatching patterns may be externally defined or pre-defined.
	The entities for hatches are <b>fill_area_style_hatching</b>, <b>pre_defined_hatch_style</b>, <b>externally_defined_ hatch_style</b>, and <b>one_direction_repeat_factor</b>.
	The tiling patterns can be made of curves, coloured regions, or symbols.
	Alternatively, tiling pattern may be externally defined or pre-defined. 
	Tiling patterns are repeated in two directions which are specified by arbitrary vectors.
	The entities for the definition of tiling patterns are <b>pre_defined_tile_style</b>, <b>externally_defined_tile_style</b>, <b>fill_area_style_tiles</b>, 
	<b>fill_area_style_tile_curve_with_style</b>, <b>fill_area_style_tile_coloured_region</b>, <b>fill_area_style_tile_symbol_with_style</b>, <b>pre_defined_tile</b>, 
	<b>externally_defined_tile</b>, and <b>two_direction_repeat_factor</b>.
	</p>
	<p>
	Surface styles provide the resources to specify the visual appearance of surfaces.
	Separate surface styles may be applied to each side of a surface, or the same surface styles can be used for both sides.
	The surface style usage specifies a surface side style for one or both sides of a surface.
	Entities for the assignment of style to sides of a surface are <b>surface_style_usage</b> and <b>surface_side_style</b>.
	A surface side style may be any combination of fill area style, boundary style, silhouette style, segmentation curve style, control grid style, parameter line style, or rendering style.
	</p>
	<p>
	A fill area style specifies a solid colour, hatches, or a tiling pattern for filling the side of a surface.
	</p>
	<p>
	A boundary style specifies a curve style or a rendering method and properties for presenting the boundary curves of a surface. 
	If no boundary style is specified, the boundary curves shall not be presented.
	</p>
	<p>
	A silhouette style specifies a curve style or a rendering method and properties for presenting the silhouette curves of a surface.
	If no silhouette style is specified, silhouette curves shall not be presented.
	</p>
	<p>
	A segmentation curve style specifies a curve style or a rendering method and properties for presenting the segmentation curves of a surface.
	This style affects only surfaces which are divided into segments such as <b>B</b>-spline surfaces.
	If no segmentation curve style is specified, segmentation curves shall not be presented.
	</p>
	<p>
	A control grid style specifies a curve style or a rendering method and properties for presenting the mesh of control points which are used for the definition of a surface.
	This style affects only surfaces which are defined over a mesh of control points, such as <b>B</b>-spline surfaces.
	If no control grid style is specified, the control grid shall not be presented.
	</p>
	<p>
	A parameter line style specifies a curve style or a rendering method and properties for presenting iso-parameter lines of a surface.
	The number of parameter lines in each parameter direction has to be specified for this style.
	If no parameter line style is specified, the parameter lines shall not be presented.
	</p>
	<p>
	The entities defining these surface styles are <b>surface_fill_area</b>, <b>surface_style_boundary</b>, <b>surface_style_silhouette</b>, <b>surface_style_segmentation_curve</b>, 
	<b>surface_style_control_grid</b>, and <b>surface_style_parameter_line</b>.
	</p>
	<p>
	The entities <b>curve_style_rendering</b> and <b>surface_rendering_properties</b> specify the rendering method and properties for curves on a surface.
	A rendering style specifies the method which shall be used for rendering the surface.
	If this style is specified, surface rendering using reflectance calculations is performed for presenting the surface.
	For this style, a colour shall be specified for the surface.
	Additional rendering properties including transparency and ambient, diffuse, and specular reflectance coeficients can optionally be specified.
	The entities for rendering styles are <b>surface_style_rendering</b>, <b>surface_style_rendering_with_properties</b>, <b>surface_style_transparent</b>, 
	<b>surface_style_reflectance_ambient</b>, <b>surface_style_reflectance_ambient_diffuse</b>, and <b>surface_style_reflectance_ambient_diffuse_specular</b>.
	Besides those styles listed above, surface styles may also be pre-defined.
	</p>
	<p>
	Text styles provide the resources to specify the visual appearance of annotation text.
	Text justification, box characteristics, character spacing, and mirror axis affect the appearance of the whole text, while character glyph style affects the appearance of the individual characters or symbols which make up the text.
	Text justification specifies how the text is aligned.
	The supported types of alignment are specified by Application Protocols.
	The box characteristics specify the geometry of the character box.
	The character box is a parallelogram for which the width, height, slant angle, and rotation angle may be specified.
	Text spacing defines the spacing which shall be included between adjacent character boxes of a string, in addition to the spacing included in the font definition.
	Text mirroring specifies a mirror axis which shall be used for mirroring the text.
	Mirroring shall be performed after all remaining text styles have been applied.
	The entities supporting the definition of these text styles are <b>text_style</b>, <b>text_style_with_spacing</b>, <b>text_style_with_mirror</b>, <b>text_style_with_justification</b>, and <b>text_style_with_box_characteristics</b>.
	A character glyph style may be a outline style, stroke style, or only a text colour.
	An outline style is a curve style that is used for presenting the outlines which make up a character glyph.
	Optionally, a fill area style for filling the outlines may be specified.
	An outline style affects only character glyphs which are defined by outlines.
	A stroke style is a curve style that is used for presenting the strokes which make up a character glyph.
	A stroke style affects only character glyphs which are defined by strokes.
	For pre-defined and externally defined fonts, only a colour shall be specified.
	The entities supporting the definition of these character glyph styles are <b>character_glyph_style_stroke</b>, <b>character_glyph_style_outline</b>, 
	<b>character_glyph_style_outline_with_characteristics</b>, and <b>text_style_for_defined_font</b>.
	</p>
	<p>
	Symbol styles provide the resources to specify the visual appearance of annotation symbols.
	A symbol style is an arbitrary collection of point styles, curve styles, fill area styles, surface styles, and text styles.
	The entities supporting the definition of these symbol styles are <b>symbol_style</b>, <b>symbol_element_style</b>, and <b>symbol_colour</b>.
	</p>
	
	<!-- Approximation tolerances -->
	<b><i>Approximation tolerances</i></b>
	<p>
	Approximation tolerances specify the allowable tolerances between the shape of the presented elements and their mathematically exact position and shape.
	Approximation tolerances apply to curves and surfaces and can be specified in parameter space, product shape space, or presentation area space.
	The space in which the tolerances are specified depends on the approximation method used.
	For the chordal deviation and chordal length approximation methods, the tolerance can be specified in product-shape or presentation-area space.
	For the parameter approximation method, the tolerance shall be specified in parameter space.
	</p>
	
	<!-- Occlusion and invisibility -->
	<b><i>Occlusion and invisibility</i></b>
	<p>
	The <b>presentation_appearance_schema</b> provides resources to specify the intended appearance of items which hide each other because they overlap in two-dimensional space.
	Those items include the elements of the presentation hierarchy which are defined in clause 4 in this part of ISO 10303, 
	<b>annotation_fill_area</b>s, annotation texts with delineations, character glyphs, and symbols.
	For this purpose, an <b>occlusion_precedence</b> can be specified for any two of these items.
	</p>
	<p>
	In addition, the <b>presentation_appearance_schema</b> provides resources to specify the invisibility of <b>styled_item</b>s or layers.
	</p>
   </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="presentation_appearance_schemaexpg1.xml"/>
   </express-g>
</schema>

<!-- 7 Presentation resource schema -->
<schema name="presentation_resource_schema">
<!-- Note schema EXPRESS are in ..\resources\resource_name name_of_schema.xml -->

<!-- 7.1 Introduction -->
   <introduction>
   <p>
   The subject of the presentation resource schema is the specification of basic resources for presentation.
   There are three types of information specified in the presentation resource schema:
   </p>
   <ul>
   		<li>text font resources;</li>
   		<li>colour definition resources;</li>
   		<li>geometric resources.</li>
   </ul>
   <p>
   This schema specifies the resources necessary for construction of character fonts and annotation symbol fonts.
   The character fonts and annotation symbol fonts are dened within a local coordinate system.
   The characters and annotation symbols may be scaled and transformed depending on application usage.
   </p>
   <p>
   There are two types of colour definition resources.
   The first is a direct colour specification based on the RGB colour model.
   The second makes use of a colour mapping table to associate a colour with a state variable along a continuous scale.
   </p>
   <p>
   Geometric resources are geometric elements used in this part of ISO 10303 to support miscellaneous aspects of picture construction.
   </p>
   </introduction>
   
<!-- 7.2 Fundamental concepts and assumptions -->
   <fund_cons>
   </fund_cons>

<!-- EXPRESS-G -->
   <express-g>
     <imgfile file="presentation_resource_schemaexpg1.xml"/>
   </express-g>
</schema>



 <!-- shortnames  -->
 <shortnames>
 <shortname name="SHRTNM" entity="full_name"/>
 </shortnames>

 <!-- optional annexes 
 <tech_discussion/>

 <examples/>

 <add_scope/>

 <bibliography/>
-->
</resource>

