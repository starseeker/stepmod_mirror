<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" reference="ISO 10303-503">
   <application name="JSDAI" owner="LKSoft" source="aic_geometrically_bounded_2d_wireframe schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="aic_geometrically_bounded_2d_wireframe">
      <interface kind="use" schema="geometric_model_schema">
         <interfaced.item name="geometric_curve_set"/>
         <interfaced.item name="geometric_set"/>
      </interface>
      <interface kind="use" schema="geometry_schema">
         <interfaced.item name="axis2_placement_2d"/>
         <interfaced.item name="b_spline_curve_with_knots"/>
         <interfaced.item name="bezier_curve"/>
         <interfaced.item name="circle"/>
         <interfaced.item name="composite_curve"/>
         <interfaced.item name="composite_curve_segment"/>
         <interfaced.item name="curve"/>
         <interfaced.item name="curve_replica"/>
         <interfaced.item name="ellipse"/>
         <interfaced.item name="geometric_representation_context"/>
         <interfaced.item name="hyperbola"/>
         <interfaced.item name="line"/>
         <interfaced.item name="offset_curve_2d"/>
         <interfaced.item name="parabola"/>
         <interfaced.item name="point_on_curve"/>
         <interfaced.item name="polyline"/>
         <interfaced.item name="quasi_uniform_curve"/>
         <interfaced.item name="rational_b_spline_curve"/>
         <interfaced.item name="trimmed_curve"/>
         <interfaced.item name="uniform_curve"/>
      </interface>
      <interface kind="use" schema="product_property_representation_schema">
         <interfaced.item name="shape_representation"/>
      </interface>
      <interface kind="use" schema="representation_schema">
         <interfaced.item name="mapped_item"/>
      </interface>
      <entity name="geometrically_bounded_2d_wireframe_representation" supertypes="shape_representation">
         <where expression="SELF.context_of_items\geometric_representation_context.&#10;            coordinate_space_dimension = 2" label="WR1"/>
         <where expression="SIZEOF (QUERY (item &lt;* SELF.items |&#10;         NOT (SIZEOF (TYPEOF (item) *&#10;['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET',          &#10;'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.AXIS2_PLACEMENT_2D',&#10;            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM']) = 1)&#10;       )) = 0" label="WR2"/>
         <where expression="SIZEOF (QUERY (item &lt;* SELF.items |&#10;         SIZEOF (TYPEOF (item) *          &#10;['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET',&#10;            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM']) = 1&#10;       )) &gt;= 1" label="WR3"/>
         <where expression="SIZEOF (QUERY (mi &lt;* QUERY (item &lt;* SELF.items |&#10;     ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM'&#10;           IN TYPEOF (item))) |&#10;         NOT ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.' +&#10;              'GEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION'&#10;           IN TYPEOF&#10;              (mi\mapped_item.mapping_source.mapped_representation))&#10;       )) = 0" label="WR4"/>
         <where expression="SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |&#10;     ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'&#10;                IN TYPEOF (item))) |&#10;         NOT (SIZEOF (QUERY (elem &lt;* gcs\geometric_set.elements |&#10;           NOT (SIZEOF (TYPEOF (elem) *&#10;             ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.B_SPLINE_CURVE',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CIRCLE',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.COMPOSITE_CURVE',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.ELLIPSE',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.OFFSET_CURVE_2D',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POLYLINE',&#10;              'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.TRIMMED_CURVE']) =&#10;               1)&#10;         )) = 0)&#10;       )) = 0" label="WR5"/>
         <where expression="SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |&#10;     ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'&#10;                IN TYPEOF (item))) |&#10;         NOT (SIZEOF (QUERY (crv &lt;* &#10;           QUERY (elem &lt;* gcs\geometric_set.elements |&#10;              ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CURVE'&#10;                   IN TYPEOF (elem))) |&#10;           NOT (valid_basis_curve_in_2d_wireframe&#10;              (crv))&#10;         )) = 0)&#10;       )) = 0" label="WR6"/>
         <where expression="SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |         &#10;       ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'&#10;                IN TYPEOF (item))) |&#10;         NOT (SIZEOF (QUERY (pnt &lt;*&#10;           QUERY (elem &lt;* gcs\geometric_set.elements |&#10;             ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT'&#10;                  IN TYPEOF(elem))) |&#10;             NOT (SIZEOF (TYPEOF (pnt) *&#10;               ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CARTESIAN_POINT',&#10;                'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT_ON_CURVE'])&#10;          = 1)&#10;         )) = 0)&#10;       )) = 0" label="WR7"/>
      </entity>
      <function name="valid_basis_curve_in_2d_wireframe">
         <parameter name="crv">
            <typename name="curve"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF SIZEOF (['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POLYLINE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.B_SPLINE_CURVE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.ELLIPSE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CIRCLE'] * 
               TYPEOF (crv)) = 1
    THEN RETURN (TRUE);
  ELSE
    -- if the curve is a trimmed_curve
    IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.TRIMMED_CURVE') 
    IN TYPEOF (crv)) THEN
      -- if a line, parabola, or hyperbola is being trimmed, then valid
      IF SIZEOF (['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.LINE',
                   'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.PARABOLA',
                   'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.HYPERBOLA'] *
           TYPEOF(crv\trimmed_curve.basis_curve)) = 1
        THEN RETURN (TRUE);
      -- otherwise, recursively check basis_curve
      ELSE RETURN (valid_basis_curve_in_2d_wireframe
                         (crv\trimmed_curve.basis_curve));
      END_IF;
    ELSE
      -- recursively check the offset_curve basis curve
      IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.OFFSET_CURVE_2D') 
      IN TYPEOF (crv))
        THEN RETURN (valid_basis_curve_in_2d_wireframe
                           (crv\offset_curve_2d.basis_curve));
      ELSE
        -- recursively check the curve_replica parent curve
        IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CURVE_REPLICA') 
        IN TYPEOF (crv))
          THEN RETURN (valid_basis_curve_in_2d_wireframe
                         (crv\curve_replica.parent_curve));
        ELSE
          -- recursively check the composite_curve segments
          IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.COMPOSITE_CURVE') 
          IN TYPEOF (crv)) THEN
            RETURN (SIZEOF (QUERY (ccs &lt;* crv\composite_curve.segments |
                      NOT (valid_basis_curve_in_2d_wireframe
                             (ccs.parent_curve)))) = 0);
          END_IF;
        END_IF;
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);</algorithm>
      </function>
   </schema>
</express>
