<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="logical_expressions_schema" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2002/12/17 22:29:40 $" rcs.revision="$Revision: 1.5 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: logical_expressions_schema
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="logical_expressions_schema">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_and  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.and_epxression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_and">
	The logical_and entity carries the semantics of the 'AND' operator in ISO 10303-11 and uses its associativity property to handle multiple arity.
	<note> The AND operator requires at least two Logical expressions and evaluates to a Logical value that is the conjuction of the operands.
</note>

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: binary_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.binary_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.binary_logical_expression">
 A binary_logical_expression is an operator operating on two logical_expressions.


</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: default_boolean_literal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.default_boolean_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.default_boolean_literal">
The default_boolean_literal is a logical_literal restricted to the BOOLEAN type values.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: default_boolean_literal  Attribute: the_value 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.default_boolean_literal.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="logical_expressions_schema.default_boolean_literal.the_value">the literal value of Boolean type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: default_boolean_variable  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.default_boolean_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.default_boolean_variable">
A default_boolean_variable is a logical variable restricted to the BOOLEAN type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: equals_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.equals_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.instance_equal">
A instance_equal carries the semantics of the value equal opeator ( :=: ) defined in ISO 10303-11 restricted to the ENTITY data types. Both operands shall have the same data type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison">
The logical_comparison expressions carries the semantics of the different value comparison operators. All the comparison operators defined in ISO 10303-11 are included, in addition to a User_defined_comparison subtype which facilitates other definable comparison operations that can be performed by human or automated mechanical means. 

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  Attribute: parameter 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison.parameter"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison.the_parameter">
the parameter to be compared to a specified value in a comparison operation. 
The parameter shall be a typed variable.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  Attribute: the_value 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="logical_expressions_schema.logical_comparison.specified_value">
	  the value to be compared with in the comparison operation
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison_equal">
A logical_equal carries the semantics of the value equal opeator ( = ) defined in ISO 10303-11 restricted to the NUMBER, LOGICAL, BOOLEAN and STRING data types. Both operands shall have the same data type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_expression">
An expression which takes on the value of an Express LOGICAL type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_greater  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_greater"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_greater">
 A logical_greater carries the semantics of the value greater opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_greater_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_greater_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_greater_equal">
A logical_greater_equal carries the semantics of the value greater than or equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_less  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_less"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_less">
A logical_less carries the semantics of the value less than opeator.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_less_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_less_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_less_equal">
A logical_less_equal carries the semantics of the value less than or equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_like  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_like"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_like">
A logical_like expression carries the semantics of the LIKE string operator defined in clause 12.2.5 of ISO 10303-11. The first operand is the target string. The second operand is the pattern string. The special characters (often called "wild cards") in the patern string are defined in clause 12.2.5 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_literal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_literal">
A logical_literal is a literal expression taking on the value of a LOGICAL type.
</ext_description>
<ext_description linkend="logical_expressions_schema.logical_literal.the_value">
the literal value whose range is the logical type.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_not_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_not_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_not_equal">
 A logical_not_equal carries the semantics of the value not equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_variable  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_variable">
A logical_variable is a variable that stands for a LOGICAL value.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: multiple_arity_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.multiple_arity_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.multiple_arity_logical_expression">
A multiple_arity_logical_expression is a m-ary operator for which the range is a LOGICAL type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: multiple_arity_logical_expression  Attribute: logical_operands 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.multiple_arity_logical_expression.logical_operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.multiple_arity_logical_expression.logical_operands">
the operands of the multiple_arity_logical_expression operator whose range must be a logical_expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_not  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.not_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_not">
The not_expression carries the semantics of the 'NOT' operator defined in clause 12.4.1 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: or_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.or_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_or">
The or_expression entity carries the semantics of the 'OR' operator defined in clause 12.4.3 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: simple_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.simple_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.simple_logical_expression">
A simple_logical_expression is an unary operator for which the range is LOGICAL.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: unary_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.unanry_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.unary_logical_expression">
A unary_logical_expression is an unary operator for which the range is LOGICAL.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: unanry_logical_expression  Attribute: the_operand 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.unanry_logical_expression.the_operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.unanry_logical_expression.the_operand">
the operand of the unary_logical_expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison">
A user_defined_logical_comparison is a comparison operator for which the semantics is defined by the user.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  Attribute: comparison_declaration 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison.comparison_declaration"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
  <ext_description linkend="logical_expressions_schema.user_defined_logical_comparison.declaration">  
	  the label conveying the meaning of the user defined comparison. The declaration can be a computer interpretable source code.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  Attribute: description 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison.description">
a description of the comparison semantics.
</ext_description>
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison.language">
the language used in the declaration. In the case of a computer executable declaration, this attribute identifies the commonly known identification (name) of the language.
</ext_description>

<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment">
The variable_assignment is an assignment of a variable to a defined_function.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  Attribute: the_function 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment.the_function"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment.the_function">
the function to which the variable is assigned.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  Attribute: the_variable 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment.the_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment.the_variable">
the variable assigned to the fucntion.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_entity_type  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_entity_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_entity_type">
A variable which stands for an Express ENTITY instance.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: xor_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.xor_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_xor">
 The xor_expression entity carries the semantics of the 'XOR' operator defined in clause 12.4.4 of ISO 10303-11.

</ext_description>
</ext_descriptions>
