<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="logical_expressions_schema" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2002/12/09 11:14:30 $" rcs.revision="$Revision: 1.2 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: logical_expressions_schema
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="logical_expressions_schema">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Type: assignment_target_select 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.assignment_target_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.assignment_target_select">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Type: entity_instance_select 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_instance_select"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_instance_select">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: and_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.and_epxression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.and_expression">
The and_expression entity carries the semantics of the 'AND' operator in ISO 10303-11 and uses its associativity property to handle multiple arity.
<note> The AND operator requires at least two Logical expressions and evaluates to a Logical value that is the conjuction of the two operands.
</note>

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: binary_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.binary_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.binary_logical_expression">
 A binary_logical_expression is an operator operating on two logical_expressions.


</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: binary_logical_expression  Attribute: logical_perands 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.binary_logical_expression.logical_perands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.binary_logical_expression.logical_perands">
the occurences of logical_expression that represents the parameters of the binary operator.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: default_boolean_literal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.default_boolean_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.default_boolean_literal">
The default_boolean_literal is a logical_literal restricted to the BOOLEAN type values.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: default_boolean_variable  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.default_boolean_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.default_boolean_variable">
A default_boolean_variable is a logical variable restricted to the BOOLEAN type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: entity_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_expression">
	The entity_expression treats any Express ENTITY as an expression that can be operated in expressions. An ENTITY type defined in an Express schema within ISO 10303 can be used as a variable who's value is represented by the ENTITY instances.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: entity_expression  Attribute: entity_name 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_expression.entity_name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_expression.entity_name">
the lable of the entity, within the same file or repository, under consideration.
<note>Current consideration is using this entity, the entity_expression, within the scope of one repository or one ISO 10303-21 file. As such, the entity name label must be unigue and only imply one type of entity instance entries. The universal identification of schemas and entity identifications or instances are out of scope for this part of ISO standard.</note>

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: entity_instance  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_instance"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_instance">
An entity_instance is a literal representation of an entity_expression. The entity_instance points to (references) an entity within an ISO 10303-21 file or a compliant data repository.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: entity_instance  Attribute: the_entity 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_instance.the_entity"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_instance.the_entity">
pointing to an entity_expression instance which provides the identification of the entity type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: entity_instance  Attribute: the_instance 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.entity_instance.the_instance"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.entity_instance.the_instance">
pointing to an isntace of the entity within the file or repository.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: equals_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.equals_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.equals_expression">
A logical_equal carries the semantics of the value equal opeator ( = ) defined in ISO 10303-11 restricted to the NUMBER, LOGICAL, BOOLEAN and STRING data types. Both operands shall have the same data type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_assignment  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_assignment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_assignment">
The assignment of an expression within a specific context.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_assignment  Attribute: assign_to_object 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_assignment.assign_to_object"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_assignment.assign_to_object">
the object to which the expression is assigned.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_assignment  Attribute: assigned_expression 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_assignment.assigned_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_assignment.assigned_expression">
the expression being assigned
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_assignment  Attribute: role 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_assignment.role"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_assignment.role">
the role of the Expression assignment.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_relationship  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_relationship"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_relationship">
 A general association between one expression and another.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_relationship  Attribute: related 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_relationship.related"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_relationship.related">
the related expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: expression_relationship  Attribute: relating 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.expression_relationship.relating"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.expression_relationship.relating">
the relating expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: literal_assignment  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.literal_assignment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.literal_assignment">
The literal_assignment entity relates a literal value to an expression subject to a context of an entity instance.
<example> The power of airplane 123456 is "ON" can be represented by a logical_expression "POWERON" having a logical_literal value of "TRUE" with respect to the entity_instance with the_entity pointing to an entity_expression with "name" equal to "AIRPLANE" and the_instance attribute pointing to an "AIRPLANE" instance with airplane_id = 123456.
</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: literal_assignment  Attribute: base 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.literal_assignment.base"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.literal_assignment.base">
the expression for which the literal value represents.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: literal_assignment  Attribute: context 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.literal_assignment.context"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.literal_assignment.context">
the entity instance to which the expression literal value is associated with.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: literal_assignment  Attribute: literal_value 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.literal_assignment.literal_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.literal_assignment.literal_value">
the value of the expression, recorded at the time of evaluation.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison">
The logical_comparison expressions carries the semantics of the different value comparison operators. All the comparison operators defined in clause 12.2.1 and 12.2.5 of ISO 10303-11 are included, in addition to a User_defined_comparison subtype which facilitates other definable comparison operations that can be performed by human or automated mechanical means. 

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  Attribute: parameter 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison.parameter"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison.parameter">
the parameter to be compared to a specified value in a comparison operation. 
The parameter shall be a typed variable.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_comparison  Attribute: the_value 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_comparison.the_value"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_comparison.the_value">the value to be compared with in the comparison operation
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_equal">
A logical_equal carries the semantics of the value equal opeator ( = ) defined in ISO 10303-11 restricted to the NUMBER, LOGICAL, BOOLEAN and STRING data types. Both operands shall have the same data type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_expression">
An expression which takes on the value of an Express LOGICAL type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_greater  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_greater"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_greater">
 A logical_greater carries the semantics of the value greater opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_greater_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_greater_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_greater_equal">
A logical_greater_equal carries the semantics of the value greater than or equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_less  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_less"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_less">
A logical_less carries the semantics of the value less than opeator.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_less_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_less_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_less_equal">
A logical_less_equal carries the semantics of the value less than or equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_like  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_like"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_like">
A logical_like expression carries the semantics of the LIKE string operator defined in clause 12.2.5 of ISO 10303-11. The first operand is the target string. The second operand is the pattern string. The special characters (often called "wild cards") in the patern string are defined in clause 12.2.5 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_literal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_literal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_literal">
A logical_literal is a literal expression taking on the value of a LOGICAL type.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_not_equal  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_not_equal"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_not_equal">
 A logical_not_equal carries the semantics of the value not equal opeator.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: logical_variable  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.logical_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.logical_variable">
A logical_variable is a variable that stands for a LOGICAL value.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: multiple_arity_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.multiple_arity_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.multiple_arity_logical_expression">
A multiple_arity_logical_expression is a m-ary operator for which the range is a LOGICAL type.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: multiple_arity_logical_expression  Attribute: logical_operands 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.multiple_arity_logical_expression.logical_operands"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.multiple_arity_logical_expression.logical_operands">
the operands of the multiple_arity_logical_expression operator whose range must be a logical_expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: named_function  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.named_function"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.named_function">
The named_function is an extension of a defined_function with a given string label representing the fucntion.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: named_function  Attribute: name 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.named_function.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.named_function.name">
the string that represents the function.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: named_variable  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.named_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.named_variable">
The named_variable is an extension of the "variable" entity with a given string label representing the variable.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: named_variable  Attribute: name 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.named_variable.name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.named_variable.name">
the string that represents the function.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: not_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.not_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.not_expression">
The not_expression carries the semantics of the 'NOT' operator defined in clause 12.4.1 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: or_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.or_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.or_expression">
The or_expression entity carries the semantics of the 'OR' operator defined in clause 12.4.3 of ISO 10303-11.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: simple_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.simple_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.simple_logical_expression">
A simple_logical_expression is an unary operator for which the range is LOGICAL.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: unanry_logical_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.unanry_logical_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.unanry_logical_expression">
A unary_logical_expression is an unary operator for which the range is LOGICAL.

</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: unanry_logical_expression  Attribute: the_operand 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.unanry_logical_expression.the_operand"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.unanry_logical_expression.the_operand">
the operand of the unary_logical_expression.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison">
A user_defined_logical_comparison is a comparison operator for which the semantics is defined by the user.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  Attribute: comparison_declaration 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison.comparison_declaration"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison.comparison_declaration">  the label conveying the meaning of the user defined comaprison.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: user_defined_logical_comparison  Attribute: description 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.user_defined_logical_comparison.description"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.user_defined_logical_comparison.description">
a description of the comparison semantics.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment">
The variable_assignment is an assignment of a variable to a defined_function.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  Attribute: the_function 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment.the_function"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment.the_function">
the function to which the variable is assigned.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_assignment  Attribute: the_variable 
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_assignment.the_variable"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_assignment.the_variable">
the variable assigned to the fucntion.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: variable_entity_type  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.variable_entity_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.variable_entity_type">
A variable which stands for an Express ENTITY instance.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: logical_expressions_schema  Entity: xor_expression  
   <express_ref linkend="logical_expressions_schema::logical_expressions_schema.xor_expression"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="logical_expressions_schema.xor_expression">
 The xor_expression entity carries the semantics of the 'XOR' operator defined in clause 12.4.4 of ISO 10303-11.

</ext_description>
</ext_descriptions>
