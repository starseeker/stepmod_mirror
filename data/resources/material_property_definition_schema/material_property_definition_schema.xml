<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" reference="ISO 10303-45" rcs.date="$Date$" rcs.revision="$Revision$" description.file="descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="material_property_definition_schema schema_instance"/>
   <schema name="material_property_definition_schema">
      <interface kind="reference" schema="material_property_representation_schema">
         <interfaced.item name="material_property_representation"/>
      </interface>
      <interface kind="reference" schema="measure_schema">
         <interfaced.item name="measure_with_unit"/>
      </interface>
      <interface kind="reference" schema="product_definition_schema">
         <interfaced.item name="product_definition_relationship"/>
      </interface>
      <interface kind="reference" schema="product_property_definition_schema">
         <interfaced.item name="characterized_definition"/>
         <interfaced.item name="property_definition"/>
      </interface>
      <interface kind="reference" schema="qualified_measure_schema">
         <interfaced.item name="maths_value_with_unit"/>
      </interface>
      <interface kind="reference" schema="support_resource_schema">
         <interfaced.item name="label"/>
         <interfaced.item name="text"/>
         <interfaced.item name="bag_to_set"/>
      </interface>
      <type name="characterized_material_property">
         <select selectitems="material_property_representation product_material_composition_relationship"/>
      </type>
      <type name="characterized_product_composition_value">
         <select selectitems="maths_value_with_unit measure_with_unit"/>
      </type>
      <entity name="material_designation">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="definitions">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="characterized_definition"/>
         </explicit>
      </entity>
      <entity name="material_designation_characterization">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="designation">
            <typename name="material_designation"/>
         </explicit>
         <explicit name="property">
            <typename name="characterized_material_property"/>
         </explicit>
      </entity>
      <entity name="material_property" supertypes="property_definition">
         <unique label="UR1">
            <unique.attribute entity-ref="property_definition" attribute="name"/>
            <unique.attribute entity-ref="property_definition" attribute="definition"/>
         </unique>
         <where label="WR1" expression="('PRODUCT_PROPERTY_DEFINITION_SCHEMA.CHARACTERIZED_OBJECT' IN&#10;          TYPEOF(SELF\property_definition.definition)) OR&#10;       (SIZEOF(bag_to_set(USEDIN(SELF ,&#10;                     'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' +&#10;                     'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) -&#10;              QUERY(temp &lt;* bag_to_set(USEDIN(SELF ,&#10;                       'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' +&#10;                       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |&#10;                       ('MATERIAL_PROPERTY_REPRESENTATION_SCHEMA.' +&#10;                      'MATERIAL_PROPERTY_REPRESENTATION' IN&#10;                      TYPEOF(temp)))) = 0)"/>
      </entity>
      <entity name="product_material_composition_relationship" supertypes="product_definition_relationship">
         <explicit name="class">
            <typename name="label"/>
         </explicit>
         <explicit name="constituent_amount">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="characterized_product_composition_value"/>
         </explicit>
         <explicit name="composition_basis">
            <typename name="label"/>
         </explicit>
         <explicit name="determination_method">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="property_definition_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_property_definition">
            <typename name="property_definition"/>
         </explicit>
         <explicit name="related_property_definition">
            <typename name="property_definition"/>
         </explicit>
      </entity>
      <function name="acyclic_property_definition_relationship">
         <parameter name="relation">
            <typename name="property_definition_relationship"/>
         </parameter>
         <parameter name="relatives">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="property_definition"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
    x                : SET OF property_definition_relationship;
  END_LOCAL;
  IF relation.relating_property_definition IN 
            relatives THEN
    RETURN (FALSE);
  END_IF;             -- IN is based in instance equality
  x := QUERY (pd &lt;* bag_to_set (USEDIN
       (relation.relating_property_definition,
        'MATERIAL_PROPERTY_DEFINITION_SCHEMA.' +
        'PROPERTY_DEFINITION_RELATIONSHIP.' +
        'RELATED_PROPERTY_DEFINITION')) |
         specific_relation IN TYPEOF (pd));
  REPEAT I := 1 TO HIINDEX(x);             -- pre-checked loop
    IF NOT acyclic_property_definition_relationship
      (x[I],
       relatives + relation.relating_property_definition,
       specific_relation) THEN
      RETURN(FALSE);
    END_IF;
  END_REPEAT;
  RETURN(TRUE);</algorithm>
      </function>
   </schema>
</express>
