<?xml version="1.0"?>
<!-- $Id: express2xml.js,v 1.22 2002/08/14 06:43:41 goset1 Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="1"
  reference="ISO 10303-41"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.22"
    source="../data/resources/measure_schema/measure_schema.exp"/>

  <schema name="measure_schema">
    <interface
      kind="reference"
      schema="basic_attribute_schema">
      <interfaced.item
        name="name_attribute"/>
      <interfaced.item
        name="get_name_value"/>
    </interface>

    <interface
      kind="reference"
      schema="representation_schema">
      <interfaced.item
        name="representation_context"/>
    </interface>

    <interface
      kind="reference"
      schema="support_resource_schema">
    </interface>

    <type name="amount_of_substance_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="area_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="celsius_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="context_dependent_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="count_measure">
      <builtintype
        type="NUMBER">
      </builtintype>


    </type>
    <type name="descriptive_measure">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="electric_current_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="length_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="luminous_intensity_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="mass_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="measure_value">
      <select
        selectitems="length_measure mass_measure time_measure electric_current_measure thermodynamic_temperature_measure celsius_temperature_measure amount_of_substance_measure luminous_intensity_measure plane_angle_measure solid_angle_measure area_measure volume_measure ratio_measure parameter_value numeric_measure context_dependent_measure descriptive_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure count_measure">
      </select>

    </type>
    <type name="numeric_measure">
      <builtintype
        type="NUMBER">
      </builtintype>


    </type>
    <type name="parameter_value">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="plane_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="positive_length_measure">
      <typename
        name="length_measure"/>

      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>
    <type name="positive_plane_angle_measure">
      <typename
        name="plane_angle_measure"/>

      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>
    <type name="positive_ratio_measure">
      <typename
        name="ratio_measure"/>

      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>
    <type name="ratio_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="si_prefix">
      <enumeration
        items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto">
      </enumeration>


    </type>
    <type name="si_unit_name">
      <enumeration
        items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_Celsius lumen lux becquerel gray sievert">
      </enumeration>


    </type>
    <type name="solid_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="thermodynamic_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="time_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <type name="unit">
      <select
        selectitems="named_unit derived_unit">
      </select>

    </type>
    <type name="volume_measure">
      <builtintype
        type="REAL">
      </builtintype>


    </type>
    <entity
      name="amount_of_substance_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="amount_of_substance_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="area_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.AREA_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="area_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 2.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="celsius_temperature_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="context_dependent_unit"
      supertypes="named_unit">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
    </entity>

    <entity
      name="conversion_based_unit"
      supertypes="named_unit">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="conversion_factor">
        <typename
          name="measure_with_unit"/>
      </explicit>
    </entity>

    <entity
      name="derived_unit">
      <explicit
        name="elements">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="derived_unit_element"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value (SELF)">
        <typename
          name="label"/>
      </derived>
      <where
        label="WR1"
        expression="(SIZEOF (elements) &gt; 1) OR        ((SIZEOF (elements) = 1) AND (elements[1].exponent &lt;&gt; 1.0))">
      </where>
      <where
        label="WR2"
        expression="SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +                       'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="derived_unit_element">
      <explicit
        name="unit">
        <typename
          name="named_unit"/>
      </explicit>
      <explicit
        name="exponent">
        <builtintype
          type="REAL"/>
      </explicit>
    </entity>

    <entity
      name="dimensional_exponents">
      <explicit
        name="length_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="mass_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="time_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="electric_current_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="thermodynamic_temperature_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="amount_of_substance_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
      <explicit
        name="luminous_intensity_exponent">
        <builtintype
          type="REAL"/>
      </explicit>
    </entity>

    <entity
      name="electric_current_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.ELECTRIC_CURRENT_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="electric_current_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 1.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="global_unit_assigned_context"
      supertypes="representation_context">
      <explicit
        name="units">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="unit"/>
      </explicit>
    </entity>

    <entity
      name="length_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.LENGTH_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="length_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 1.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="luminous_intensity_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.LUMINOUS_INTENSITY_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="luminous_intensity_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.0)">
      </where>
    </entity>

    <entity
      name="mass_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.MASS_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="mass_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 1.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="measure_with_unit"
      super.expression="(ONEOF (length_measure_with_unit,                      mass_measure_with_unit,                      time_measure_with_unit,                      electric_current_measure_with_unit,                      thermodynamic_temperature_measure_with_unit,                      celsius_temperature_measure_with_unit,                      amount_of_substance_measure_with_unit,                      luminous_intensity_measure_with_unit,                      plane_angle_measure_with_unit,                      solid_angle_measure_with_unit,                      area_measure_with_unit,                      volume_measure_with_unit,                      ratio_measure_with_unit ))">
      <explicit
        name="value_component">
        <typename
          name="measure_value"/>
      </explicit>
      <explicit
        name="unit_component">
        <typename
          name="unit"/>
      </explicit>
      <where
        label="WR1"
        expression="valid_units (SELF)">
      </where>
    </entity>

    <entity
      name="named_unit"
      super.expression="(ONEOF (si_unit,                       conversion_based_unit,                       context_dependent_unit)               ANDOR               ONEOF  (length_unit,                       mass_unit,                       time_unit,                       electric_current_unit,                       thermodynamic_temperature_unit,                       amount_of_substance_unit,                       luminous_intensity_unit,                       plane_angle_unit,                       solid_angle_unit,                       area_unit,                       volume_unit,                       ratio_unit ))">
      <explicit
        name="dimensions">
        <typename
          name="dimensional_exponents"/>
      </explicit>
    </entity>

    <entity
      name="plane_angle_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.PLANE_ANGLE_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="plane_angle_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND    (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="ratio_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.RATIO_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="ratio_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND    (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="si_unit"
      supertypes="named_unit">
      <explicit
        name="prefix"
        optional="YES">
        <typename
          name="si_prefix"/>
      </explicit>
      <explicit
        name="name">
        <typename
          name="si_unit_name"/>
      </explicit>
      <derived
        name="SELF\named_unit.dimensions"
        expression="dimensions_for_si_unit (name)">
        <typename
          name="dimensional_exponents"/>
      </derived>
    </entity>

    <entity
      name="solid_angle_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.SOLID_ANGLE_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="solid_angle_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="thermodynamic_temperature_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF          (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="thermodynamic_temperature_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="time_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1'MEASURE_SCHEMA.TIME_UNIT'"
        expression="'MEASURE_SCHEMA.TIME_UNIT' IN TYPEOF        (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="time_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 1.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND     (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="volume_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'MEASURE_SCHEMA.VOLUME_UNIT' IN TYPEOF           (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="volume_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 3.0) AND   (SELF\named_unit.dimensions.mass_exponent = 0.0) AND   (SELF\named_unit.dimensions.time_exponent = 0.0) AND   (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND    (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND   (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND   (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <function
      name="derive_dimensional_exponents">
      <parameter
        name="x">
        <typename
          name="unit"/>
      </parameter>
      <typename
        name="dimensional_exponents"/>
      <algorithm>
  LOCAL
    result : dimensional_exponents :=
            dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
  END_LOCAL;
  IF 'MEASURE_SCHEMA.DERIVED_UNIT' IN TYPEOF(x) THEN -- x is a derived unit
    REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
      result.length_exponent                   :=
        result.length_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.length_exponent);
      result.mass_exponent                     :=
        result.mass_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.mass_exponent);
     result.time_exponent :=
        result.time_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.time_exponent);
      result.electric_current_exponent         :=
        result.electric_current_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.electric_current_exponent);
      result.thermodynamic_temperature_exponent :=
        result.thermodynamic_temperature_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.thermodynamic_temperature_exponent);
      result.amount_of_substance_exponent       :=
        result.amount_of_substance_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.amount_of_substance_exponent);
      result.luminous_intensity_exponent        :=
        result.luminous_intensity_exponent +
        (x.elements[i].exponent *
         x.elements[i].unit.dimensions.luminous_intensity_exponent);
    END_REPEAT;
  ELSE -- x is a unitless or a named unit
    result := x.dimensions;
  END_IF;
  RETURN (result);
      </algorithm>

    </function>

    <function
      name="dimensions_for_si_unit">
      <parameter
        name="n">
        <typename
          name="si_unit_name"/>
      </parameter>
      <typename
        name="dimensional_exponents"/>
      <algorithm>
  CASE n OF
    metre          : RETURN (dimensional_exponents
                          (1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    gram           : RETURN (dimensional_exponents
                         (0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    second         : RETURN (dimensional_exponents
                         (0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
    ampere         : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
    kelvin         : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
    mole           : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
    candela        : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    radian         : RETURN (dimensional_exponents
                           (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    steradian      : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    hertz          : RETURN (dimensional_exponents
                         (0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
    newton         : RETURN (dimensional_exponents
                         (1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    pascal         : RETURN (dimensional_exponents
                         (-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    joule          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    watt           : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
    coulomb        : RETURN (dimensional_exponents
                         (0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
    volt           : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
    farad          : RETURN (dimensional_exponents
                         (-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
    ohm            : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
    siemens        : RETURN (dimensional_exponents
                         (-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
    weber          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
    tesla          : RETURN (dimensional_exponents
                         (0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
    henry          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
    degree_Celsius : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
    lumen          : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    lux            : RETURN (dimensional_exponents
                         (-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    becquerel      : RETURN (dimensional_exponents
                         (0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
    gray           : RETURN (dimensional_exponents
                         (2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    sievert        : RETURN (dimensional_exponents
                         (2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    OTHERWISE      : RETURN (?);
  END_CASE;
      </algorithm>

    </function>

    <function
      name="valid_units">
      <parameter
        name="m">
        <typename
          name="measure_with_unit"/>
      </parameter>
      <builtintype
        type="BOOLEAN"/>
      <algorithm>
  IF 'MEASURE_SCHEMA.LENGTH_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.MASS_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.TIME_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.ELECTRIC_CURRENT_MEASURE' 
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_MEASURE'
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.CELSIUS_TEMPERATURE_MEASURE'
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.AMOUNT_OF_SUBSTANCE_MEASURE' 
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.LUMINOUS_INTENSITY_MEASURE' 
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.SOLID_ANGLE_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.AREA_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.VOLUME_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.RATIO_MEASURE' IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.POSITIVE_LENGTH_MEASURE' 
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'MEASURE_SCHEMA.POSITIVE_PLANE_ANGLE_MEASURE' 
  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  RETURN (TRUE);
      </algorithm>

    </function>

  </schema>

</express>
