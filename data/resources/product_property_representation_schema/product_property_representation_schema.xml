<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="descriptions.xml" language_version="2" rcs.date="$Date: 2017/06/06 20:13:53 $" rcs.revision="$Revision: 1.35 $" reference="ISO 10303-41">
   <application name="JSDAI" owner="LKSoft" source="product_property_representation_schema schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="product_property_representation_schema">
      <interface kind="reference" schema="basic_attribute_schema">
         <interfaced.item name="description_attribute"/>
         <interfaced.item name="description_attribute_select"/>
         <interfaced.item name="get_description_value"/>
         <interfaced.item name="get_name_value"/>
         <interfaced.item name="name_attribute"/>
         <interfaced.item name="name_attribute_select"/>
      </interface>
      <interface kind="reference" schema="material_property_definition_schema">
         <interfaced.item name="property_definition_relationship"/>
      </interface>
      <interface kind="reference" schema="product_definition_schema">
         <interfaced.item name="product_definition"/>
         <interfaced.item name="product_definition_relationship"/>
      </interface>
      <interface kind="reference" schema="product_property_definition_schema">
         <interfaced.item name="characterized_object"/>
         <interfaced.item name="characterized_definition"/>
         <interfaced.item name="general_property"/>
         <interfaced.item name="product_definition_shape"/>
         <interfaced.item name="property_definition"/>
         <interfaced.item name="shape_aspect"/>
         <interfaced.item name="shape_aspect_relationship"/>
      </interface>
      <interface kind="reference" schema="representation_schema">
         <interfaced.item name="representation"/>
         <interfaced.item name="representation_item"/>
         <interfaced.item name="representation_relationship"/>
         <interfaced.item name="representation_reference"/>
         <interfaced.item name="using_representations"/>
         <interfaced.item name="mapped_item"/>
         <interfaced.item name="representation_context"/>
         <interfaced.item name="representation_map"/>
         <interfaced.item name="list_representation_item"/>
         <interfaced.item name="set_representation_item"/>
         <interfaced.item name="get_representation_for_item"/>
      </interface>
      <interface kind="reference" schema="support_resource_schema">
         <interfaced.item name="bag_to_set"/>
         <interfaced.item name="label"/>
         <interfaced.item name="text"/>
      </interface>
      <type name="chained_representation_link">
         <select selectitems="mapped_item representation_context representation_relationship"/>
      </type>
      <type name="denoted_object_select">
         <select extensible="YES" genericentity="YES"/>
      </type>
      <type name="item_identified_representation_usage_definition">
         <select extensible="YES" genericentity="YES" selectitems="represented_definition"/>
      </type>
      <type name="item_identified_representation_usage_select">
         <select selectitems="representation_item list_representation_item set_representation_item"/>
      </type>
      <type name="pprs_description_attribute_select">
         <select basedon="description_attribute_select" selectitems="context_dependent_shape_representation property_definition_representation"/>
      </type>
      <type name="pprs_name_attribute_select">
         <select basedon="name_attribute_select" selectitems="context_dependent_shape_representation property_definition_representation"/>
      </type>
      <type name="represented_definition">
         <select selectitems="general_property property_definition property_definition_relationship shape_aspect shape_aspect_relationship"/>
      </type>
      <entity name="chain_based_item_identified_representation_usage" supertypes="item_identified_representation_usage">
         <explicit name="nodes">
            <aggregate lower="2" type="LIST" unique="YES" upper="?"/>
            <typename name="representation"/>
         </explicit>
         <explicit name="undirected_link">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="chained_representation_link"/>
         </explicit>
         <derived expression="nodes[1]" name="root">
            <typename name="representation"/>
         </derived>
         <derived expression="nodes[HIINDEX(nodes)]" name="leaf">
            <typename name="representation"/>
            <redeclaration entity-ref="item_identified_representation_usage" old_name="used_representation"/>
         </derived>
         <derived expression="get_directed_link(nodes, undirected_link)" name="directed_link">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="representation_relationship"/>
         </derived>
         <where expression="EXISTS(directed_link)" label="WR1"/>
      </entity>
      <entity name="characterized_chain_based_item_within_representation" supertypes="characterized_item_within_representation">
         <explicit name="nodes">
            <aggregate lower="2" type="LIST" unique="YES" upper="?"/>
            <typename name="representation"/>
         </explicit>
         <explicit name="undirected_link">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="chained_representation_link"/>
         </explicit>
         <derived expression="nodes[1]" name="root">
            <typename name="representation"/>
         </derived>
         <derived expression="nodes[HIINDEX(nodes)]" name="leaf">
            <typename name="representation"/>
            <redeclaration entity-ref="characterized_item_within_representation" old_name="rep"/>
         </derived>
         <derived expression="get_directed_link(nodes, undirected_link)" name="directed_link">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="representation_relationship"/>
         </derived>
         <where expression="EXISTS(directed_link)" label="WR1"/>
      </entity>
      <entity name="characterized_item_within_representation" supertypes="characterized_object">
         <explicit name="item">
            <typename name="representation_item"/>
         </explicit>
         <explicit name="rep">
            <typename name="representation"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="item"/>
            <unique.attribute attribute="rep"/>
         </unique>
         <where expression="rep IN using_representations(item)" label="WR1"/>
      </entity>
      <entity name="context_dependent_shape_representation">
         <explicit name="representation_relation">
            <typename name="shape_representation_relationship"/>
         </explicit>
         <explicit name="represented_product_relation">
            <typename name="product_definition_shape"/>
         </explicit>
         <derived expression="get_description_value(SELF)" name="description">
            <typename name="text"/>
         </derived>
         <derived expression="get_name_value(SELF)" name="name">
            <typename name="label"/>
         </derived>
         <where expression="'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF.represented_product_relation.definition)" label="WR1"/>
         <where expression="SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1" label="WR2"/>
         <where expression="SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1" label="WR3"/>
      </entity>
      <entity name="item_identified_representation_usage">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="definition">
            <typename name="item_identified_representation_usage_definition"/>
         </explicit>
         <explicit name="used_representation">
            <typename name="representation"/>
         </explicit>
         <explicit name="identified_item">
            <typename name="item_identified_representation_usage_select"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="used_representation"/>
            <unique.attribute attribute="identified_item"/>
         </unique>
         <unique label="UR2">
            <unique.attribute attribute="used_representation"/>
            <unique.attribute attribute="definition"/>
         </unique>
         <where expression="NOT (SIZEOF(identified_item) = 1) OR (used_representation IN using_representations(identified_item))" label="WR1"/>
         <where expression="NOT (SIZEOF(identified_item) > 1) OR (used_representation IN get_representations_for_items(identified_item))" label="WR2"/>
      </entity>
      <entity name="property_definition_denotation">
         <explicit name="name" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="definition">
            <typename name="represented_definition"/>
         </explicit>
         <explicit name="denoted_object">
            <typename name="denoted_object_select"/>
         </explicit>
      </entity>
      <entity name="property_definition_representation">
         <explicit name="definition">
            <typename name="represented_definition"/>
         </explicit>
         <explicit name="used_representation">
            <typename name="representation"/>
         </explicit>
         <derived expression="get_description_value(SELF)" name="description">
            <typename name="text"/>
         </derived>
         <derived expression="get_name_value(SELF)" name="name">
            <typename name="label"/>
         </derived>
         <where expression="SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1" label="WR1"/>
         <where expression="SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1" label="WR2"/>
      </entity>
      <entity name="shape_definition_representation" supertypes="property_definition_representation">
         <explicit name="definition">
            <typename name="property_definition"/>
            <redeclaration entity-ref="property_definition_representation"/>
         </explicit>
         <explicit name="used_representation">
            <typename name="shape_representation"/>
            <redeclaration entity-ref="property_definition_representation"/>
         </explicit>
         <where expression="('PRODUCT_PROPERTY_DEFINITION_SCHEMA.PRODUCT_DEFINITION_SHAPE' IN TYPEOF(definition)) OR&#10;         ('PRODUCT_PROPERTY_DEFINITION_SCHEMA.SHAPE_DEFINITION' IN TYPEOF(definition\property_definition.definition))" label="WR1"/>
      </entity>
      <entity name="shape_representation" supertypes="representation"/>
      <entity name="shape_representation_reference" supertypes="representation_reference">
		 <where expression="'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_REPRESENTATION' = SELF\pre_defined_item.name" label="WR1"/>
	  </entity>
      <entity name="shape_representation_relationship" supertypes="representation_relationship">
         <where expression="SIZEOF(['PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_REPRESENTATION',
         'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_REPRESENTATION_REFERENCE'] * 
         (TYPEOF( SELF\representation_relationship.rep_1 ) + TYPEOF(SELF\representation_relationship.rep_2 ) ) )
               >= 1" label="WR1"/>
      </entity>
      <function name="get_directed_link">
         <parameter name="nodes">
            <aggregate lower="0" type="LIST" upper="?"/>
            <typename name="representation"/>
         </parameter>
         <parameter name="undirected_link">
            <aggregate lower="0" type="LIST" upper="?"/>
            <typename name="chained_representation_link"/>
         </parameter>
         <aggregate lower="0" type="LIST" upper="?"/>
         <typename name="representation_relationship"/>
         <algorithm>LOCAL
   directed_link : LIST OF representation_relationship := [];
  END_LOCAL;

  IF (SIZEOF(nodes) &lt;&gt; SIZEOF(undirected_link) + 1) OR
     (value_unique(nodes) = FALSE)
  THEN
   RETURN(?);
  END_IF;
  
  REPEAT i := 1 to SIZEOF(undirected_link);
   CASE TRUE OF
    ('REPRESENTATION_SCHEMA.REPRESENTATION_CONTEXT' IN TYPEOF(undirected_link[i])) :
    BEGIN
     IF ((nodes[i]\representation.context_of_items   :=: undirected_link[i]) AND 
         (nodes[i+1]\representation.context_of_items :=: undirected_link[i])) THEN
       INSERT(directed_link, representation_relationship('','',nodes[i+1],nodes[i]), (i - 1));
     ELSE
       RETURN(?); 
     END_IF;
    END;

    ('REPRESENTATION_SCHEMA.REPRESENTATION_RELATIONSHIP' IN TYPEOF(undirected_link[i])) :
    BEGIN
     IF (((nodes[i]   :=: undirected_link[i]\representation_relationship.rep_1) AND
          (nodes[i+1] :=: undirected_link[i]\representation_relationship.rep_2)) OR
         ((nodes[i]   :=: undirected_link[i]\representation_relationship.rep_2) AND
          (nodes[i+1] :=: undirected_link[i]\representation_relationship.rep_1))) THEN
       INSERT(directed_link, representation_relationship('','',nodes[i+1],nodes[i]), (i - 1));
     ELSE
       RETURN(?); 
     END_IF;
    END;

    ('REPRESENTATION_SCHEMA.MAPPED_ITEM' IN TYPEOF(undirected_link[i])) :
    BEGIN
     IF ((nodes[i] IN using_representations(undirected_link[i])) AND 
         (nodes[i+1] :=: undirected_link[i]\mapped_item.mapping_source\representation_map.mapped_representation)) THEN
       INSERT(directed_link, representation_relationship('','',nodes[i+1],nodes[i]), (i - 1));
     ELSE
       RETURN(?); 
     END_IF;
    END;

    OTHERWISE : RETURN(?);
   END_CASE;
  END_REPEAT;
  
  IF (value_unique(directed_link) = FALSE)
  THEN
   RETURN(?);
  END_IF;
  
  RETURN(directed_link);</algorithm>
      </function>
      <function name="get_property_definition_representations">
         <parameter name="c_def_instance">
            <typename name="characterized_definition"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="property_definition_representation"/>
         <algorithm>LOCAL
      pd_set : SET OF property_definition := [];
      pdr_set : SET OF property_definition_representation := [];
    END_LOCAL;

    pd_set := bag_to_set(USEDIN(c_def_instance, 'PRODUCT_PROPERTY_DEFINITION_SCHEMA.PROPERTY_DEFINITION.DEFINITION'));
    IF (SIZEOF(pd_set) &lt; 1) THEN
      RETURN (pdr_set);
    END_IF;
    REPEAT i := 1 TO HIINDEX(pd_set);
      pdr_set := pdr_set + bag_to_set(USEDIN(pd_set[i], 'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'));
    END_REPEAT;
    RETURN (pdr_set);</algorithm>
      </function>
      <function name="relatives_of_product_definitions">
         <parameter name="definition_set">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="product_definition"/>
         </parameter>
         <parameter name="relation_subtype">
            <builtintype type="STRING"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="product_definition"/>
         <algorithm>FUNCTION local_relatives_of_product_definitions (definition_set : SET OF product_definition; total_definitions : SET OF product_definition; relation_subtype : STRING):SET OF product_definition;
      LOCAL
        local_def : SET OF product_definition := [];
        local_pdr : SET OF product_definition_relationship := [];
        local_total : SET OF product_definition := [];
      END_LOCAL;

      REPEAT i := 1 TO HIINDEX(definition_set);
        local_pdr := local_pdr + bag_to_set(USEDIN(definition_set[i], relation_subtype + '.RELATING_PRODUCT_DEFINITION'));
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX(local_pdr);
        local_def := local_def + local_pdr[i].related_product_definition;
      END_REPEAT;
      IF (SIZEOF(local_def) - SIZEOF(total_definitions)) = 0 THEN
        RETURN (local_def);
      ELSE
        local_total := total_definitions + local_def;
        RETURN (local_def + (local_relatives_of_product_definitions(local_def - total_definitions, local_total, relation_subtype)));
      END_IF;
    END_FUNCTION;

    RETURN (local_relatives_of_product_definitions(definition_set, definition_set, relation_subtype));</algorithm>
      </function>
      <function name="relatives_of_shape_representations">
         <parameter name="shape_representation_set">
            <aggregate lower="0" type="SET" upper="?"/>
            <typename name="shape_representation"/>
         </parameter>
         <aggregate lower="0" type="SET" upper="?"/>
         <typename name="shape_representation"/>
         <algorithm>FUNCTION local_relatives_of_shape_representations (shape_representation_set : SET OF shape_representation; total_reps : SET OF shape_representation):SET OF shape_representation;
      LOCAL
        local_shape_rep : SET OF shape_representation := [];
        local_srr : SET OF shape_representation_relationship := [];
        local_total : SET OF shape_representation := [];
      END_LOCAL;

      REPEAT i := 1 TO HIINDEX(shape_representation_set);
        local_srr := local_srr + QUERY(rr &lt;* bag_to_set(USEDIN(shape_representation_set[i], 'REPRESENTATION_SCHEMA.REPRESENTATION_RELATIONSHIP.REP_1')) | 'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_REPRESENTATION_RELATIONSHIP' IN TYPEOF(rr));
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX(local_srr);
        IF 'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' + 'SHAPE_REPRESENTATION_RELATIONSHIP' IN TYPEOF(local_srr[i]) THEN
          local_shape_rep := local_shape_rep + local_srr[i].rep_2;
        END_IF;
      END_REPEAT;
      IF SIZEOF(local_shape_rep - total_reps) = 0 THEN
        RETURN (shape_representation_set);
      ELSE
        local_total := total_reps + local_shape_rep;
        RETURN (local_shape_rep + (local_relatives_of_shape_representations(local_shape_rep - total_reps, local_total)));
      END_IF;
    END_FUNCTION;

    RETURN (local_relatives_of_shape_representations(shape_representation_set, shape_representation_set));</algorithm>
      </function>
   </schema>
</express>
