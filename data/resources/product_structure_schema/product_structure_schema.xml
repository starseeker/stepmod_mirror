<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" reference="ISO 10303-44">
   <application name="JSDAI" owner="LKSoft" source="product_structure_schema schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="product_structure_schema">
      <interface kind="reference" schema="product_definition_schema">
         <interfaced.item name="product"/>
         <interfaced.item name="product_definition"/>
         <interfaced.item name="product_definition_formation"/>
         <interfaced.item name="product_definition_reference"/>
         <interfaced.item name="product_definition_relationship"/>
         <interfaced.item name="acyclic_product_definition_relationship"/>
         <interfaced.item name="product_definition_or_reference"/>
         <interfaced.item name="generic_product_definition_reference"/>
      </interface>
      <interface kind="reference" schema="measure_schema">
         <interfaced.item name="measure_with_unit"/>
      </interface>
      <interface kind="reference" schema="support_resource_schema">
         <interfaced.item name="identifier"/>
         <interfaced.item name="label"/>
         <interfaced.item name="text"/>
      </interface>
      <type name="product_definition_occurrence_or_reference">
         <select selectitems="product_definition_occurrence product_definition_occurrence_reference"/>
      </type>
      <type name="product_definition_or_occurrence_or_reference">
         <select basedon="product_definition_or_reference" selectitems="product_definition_occurrence"/>
      </type>
      <entity name="alternate_product_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="definition" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="alternate">
            <typename name="product"/>
         </explicit>
         <explicit name="base">
            <typename name="product"/>
         </explicit>
         <explicit name="basis">
            <typename name="text"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="alternate"/>
            <unique.attribute attribute="base"/>
         </unique>
         <where expression="alternate :&lt;&gt;: base" label="WR1"/>
      </entity>
      <entity name="assembly_component_usage" super.expression="quantified_assembly_component_usage ANDOR ONEOF (multi_level_reference_designator, next_assembly_usage_occurrence, promissory_usage_occurrence, specified_higher_usage_occurrence)" supertypes="product_definition_usage">
         <explicit name="reference_designator" optional="YES">
            <typename name="identifier"/>
         </explicit>
      </entity>
      <entity name="assembly_component_usage_substitute">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="definition" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="base">
            <typename name="assembly_component_usage"/>
         </explicit>
         <explicit name="substitute">
            <typename name="assembly_component_usage"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="base"/>
            <unique.attribute attribute="substitute"/>
         </unique>
         <where expression="base.relating_product_definition :=:&#10;       substitute.relating_product_definition" label="WR1"/>
         <where expression="base :&lt;&gt;: substitute" label="WR2"/>
      </entity>
      <entity name="assembly_component_usage_substitute_with_ranking" supertypes="assembly_component_usage_substitute">
         <explicit name="ranking">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="ranking_rationale">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="make_from_usage_option" supertypes="product_definition_usage">
         <explicit name="ranking">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="ranking_rationale">
            <typename name="text"/>
         </explicit>
         <explicit name="quantity">
            <typename name="measure_with_unit"/>
         </explicit>
         <where expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component)))&#10;       OR (quantity.value_component &gt; 0)" label="WR1"/>
      </entity>
      <entity name="make_from_usage_option_group">
         <explicit name="members">
            <aggregate lower="2" type="SET" upper="?"/>
            <typename name="make_from_usage_option"/>
         </explicit>
         <where expression="SIZEOF (QUERY (example &lt;* members |&#10;       example.related_product_definition&#10;       :=: members[1].related_product_definition)) =SIZEOF(members)" label="WR1"/>
      </entity>
      <entity name="multi_level_reference_designator" supertypes="assembly_component_usage">
         <explicit name="location">
            <aggregate lower="1" type="LIST" unique="YES" upper="?"/>
            <typename name="next_assembly_usage_occurrence"/>
         </explicit>
         <derived expression="location[1]\product_definition_relationship.relating_product_definition" name="root">
            <typename name="product_definition"/>
            <redeclaration entity-ref="product_definition_relationship" old_name="relating_product_definition"/>
         </derived>
         <derived expression="location[HIINDEX(location)]\product_definition_relationship.related_product_definition" name="leaf">
            <typename name="product_definition_or_reference"/>
            <redeclaration entity-ref="product_definition_relationship" old_name="related_product_definition"/>
         </derived>
         <unique label="UR1">
            <unique.attribute attribute="location"/>
         </unique>
         <where expression="unambiguously_specified_multi_level_reference_designator(location)" label="WR1"/>
         <where expression="SIZEOF(QUERY(cp &lt;* location | NOT (&#10;         EXISTS(cp\assembly_component_usage.reference_designator)))) = 0" label="WR2"/>
      </entity>
      <entity name="next_assembly_usage_occurrence" supertypes="assembly_component_usage">
         <unique label="UR1">
            <unique.attribute attribute="SELF\assembly_component_usage.reference_designator"/>
            <unique.attribute attribute="SELF\product_definition_relationship.relating_product_definition"/>
         </unique>
      </entity>
      <entity name="product_definition_occurrence" super.expression="product_definition_specified_occurrence ANDOR product_definition_occurrence_reference_with_local_representation">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="definition">
            <typename name="product_definition_or_occurrence_or_reference"/>
         </explicit>
         <where expression="('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF(definition)) XOR ('PRODUCT_STRUCTURE_SCHEMA.PRODUCT_DEFINITION_SPECIFIED_OCCURRENCE' IN TYPEOF(SELF))" label="WR1"/>
      </entity>
      <entity name="product_definition_occurrence_reference" supertypes="product_definition_reference">
         <explicit name="product_occurrence_id">
            <typename name="identifier"/>
         </explicit>
      </entity>
      <entity name="product_definition_occurrence_reference_with_local_representation" supertypes="product_definition_occurrence generic_product_definition_reference"/>
      <entity name="product_definition_occurrence_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="occurrence">
            <typename name="product_definition"/>
         </explicit>
         <explicit name="occurrence_usage">
            <typename name="assembly_component_usage"/>
         </explicit>
         <where expression="occurrence_usage.relating_product_definition :&lt;&gt;: &#10;       occurrence" label="WR1"/>
         <where expression="occurrence_usage.related_product_definition :&lt;&gt;: &#10;       occurrence" label="WR2"/>
         <where expression="occurrence.formation :=:&#10;       occurrence_usage.related_product_definition.formation" label="WR3"/>
      </entity>
      <entity name="product_definition_specified_occurrence" supertypes="product_definition_occurrence">
         <explicit name="definition">
            <typename name="product_definition_occurrence_or_reference"/>
            <redeclaration entity-ref="product_definition_occurrence"/>
         </explicit>
         <explicit name="occurrence_usage">
            <typename name="assembly_component_usage"/>
         </explicit>
      </entity>
      <entity name="product_definition_usage" super.expression="ONEOF (make_from_usage_option, assembly_component_usage)" supertypes="product_definition_relationship">
         <unique label="UR1">
            <unique.attribute attribute="SELF\product_definition_relationship.id"/>
            <unique.attribute attribute="SELF\product_definition_relationship.relating_product_definition"/>
            <unique.attribute attribute="SELF\product_definition_relationship.related_product_definition"/>
         </unique>
         <where expression="acyclic_product_definition_relationship&#10;         (SELF,&#10;         [SELF\product_definition_relationship.related_product_definition],&#10;         'PRODUCT_STRUCTURE_SCHEMA.PRODUCT_DEFINITION_USAGE')" label="WR1"/>
      </entity>
      <entity name="promissory_usage_occurrence" supertypes="assembly_component_usage"/>
      <entity name="quantified_assembly_component_usage" supertypes="assembly_component_usage">
         <explicit name="quantity">
            <typename name="measure_with_unit"/>
         </explicit>
         <where expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component)))&#10;       OR (quantity.value_component &gt; 0)" label="WR1"/>
      </entity>
      <entity name="specified_higher_usage_occurrence" supertypes="assembly_component_usage">
         <explicit name="upper_usage">
            <typename name="assembly_component_usage"/>
         </explicit>
         <explicit name="next_usage">
            <typename name="next_assembly_usage_occurrence"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute attribute="upper_usage"/>
            <unique.attribute attribute="next_usage"/>
         </unique>
         <where expression="SELF :&lt;&gt;: upper_usage" label="WR1"/>
         <where expression="SELF\product_definition_relationship.relating_product_definition&#10;       :=: upper_usage.relating_product_definition" label="WR2"/>
         <where expression="SELF\product_definition_relationship.related_product_definition&#10;       :=: next_usage.related_product_definition" label="WR3"/>
         <where expression="(upper_usage.related_product_definition :=:&#10;       next_usage.relating_product_definition) OR&#10;       (SIZEOF (QUERY (pdr &lt;* USEDIN (upper_usage.related_product_definition,&#10;       'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP.' +&#10;       'RELATED_PRODUCT_DEFINITION') |&#10;        pdr.relating_product_definition :=: &#10;        next_usage.relating_product_definition)) = 1)" label="WR4"/>
         <where expression="SIZEOF (['PRODUCT_STRUCTURE_SCHEMA.NEXT_ASSEMBLY_USAGE_OCCURRENCE',&#10;       'PRODUCT_STRUCTURE_SCHEMA.SPECIFIED_HIGHER_USAGE_OCCURRENCE']&#10;       * TYPEOF(upper_usage)) = 1" label="WR5"/>
      </entity>
      <function name="unambiguously_specified_multi_level_reference_designator">
         <parameter name="links">
            <aggregate lower="1" type="LIST" upper="?"/>
            <typename name="next_assembly_usage_occurrence"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>REPEAT i := 1 to SIZEOF(links) - 1;
--case 1 all in one file; had to disambiguate link[i].relating instance type to distinguish case 1 from case 3.
   CASE TRUE OF
      ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF(links[i]\product_definition_relationship.relating_product_definition)) 
       AND
      ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF(links[i]\product_definition_relationship.related_product_definition)) 
       AND
      ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF(links[i+1]\product_definition_relationship.relating_product_definition)) :
     BEGIN
        IF NOT (
                (links[i]\product_definition_relationship.related_product_definition :=:
                 links[i+1]\product_definition_relationship.relating_product_definition)
                 OR
                ((SIZEOF (QUERY (pdr &lt;* USEDIN(links[i]\product_definition_relationship.related_product_definition,
                          'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION') |
                          pdr\product_definition_relationship.relating_product_definition :=: 
                          links[i+1]\product_definition_relationship.relating_product_definition)) = 1)
                  AND
                   (links[i]\product_definition_relationship.related_product_definition\product_definition.formation\product_definition_formation.of_product
                    :=:
                    links[i+1]\product_definition_relationship.relating_product_definition\product_definition.formation\product_definition_formation.of_product)))
         THEN
          RETURN(FALSE);
        END_IF;
     END;

--case 2 ; intermediate node reference from main to external file or both node references in external file. links[i].relating instance can be either pd or pdref.
     ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_REFERENCE' IN TYPEOF(links[i]\product_definition_relationship.related_product_definition))
       AND
     ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_REFERENCE' IN TYPEOF(links[i+1]\product_definition_relationship.relating_product_definition)) :
       BEGIN
         IF NOT (
                (links[i]\product_definition_relationship.related_product_definition :=:
                 links[i+1]\product_definition_relationship.relating_product_definition)
                 OR
                ((SIZEOF (QUERY (pdr &lt;* USEDIN(links[i]\product_definition_relationship.related_product_definition,
                          'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION') |
                          pdr\product_definition_relationship.relating_product_definition :=: 
                          links[i+1]\product_definition_relationship.relating_product_definition)) = 1)
                  AND
                   (links[i]\product_definition_relationship.related_product_definition\product_definition_reference.product_id
                    =
                    links[i+1]\product_definition_relationship.relating_product_definition\product_definition_reference.product_id)
                  AND
                   (links[i]\product_definition_relationship.related_product_definition\product_definition_reference.id_owning_organization_name
                    =
                    links[i+1]\product_definition_relationship.relating_product_definition\product_definition_reference.id_owning_organization_name)
                  AND
                   (links[i]\product_definition_relationship.related_product_definition\product_definition_reference.product_definition_id
                   &lt;&gt; 
                    links[i+1]\product_definition_relationship.relating_product_definition\product_definition_reference.product_definition_id)))
         THEN
          RETURN(FALSE);
        END_IF;
     END;

--case 3 should never see -- link in external file referencing a node in main assembly file. Note link is just links[i].
     ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_REFERENCE' IN TYPEOF(links[i]\product_definition_relationship.relating_product_definition))
       AND
     ('PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION' IN TYPEOF(links[i]\product_definition_relationship.related_product_definition)) :
     RETURN(FALSE);

     OTHERWISE : RETURN(FALSE);
   END_CASE;

END_REPEAT;
RETURN(TRUE);</algorithm>
      </function>
   </schema>
</express>
