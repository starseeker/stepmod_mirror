<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" 
  href="../../../xsl/express.xsl"
?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express language_version="2" rcs.date="$Date: 2003/10/22 18:36:45 $" rcs.revision="$Revision: 1.5 $" reference="ISO 10303-41" description.file="descriptions.xml">
	<application name="GraphicalEXPRESS" owner="Eurostep" url="www.eurostep.com" version="1.3.14" source="qualifications_schema_v008.vsd"/>
	<schema name="qualifications_schema">
		<interface kind="reference" schema="support_resource_schema">
			<interfaced.item name="identifier"/>
			<interfaced.item name="label"/>
			<interfaced.item name="text"/>
		</interface>
		<entity name="qualification">
			<explicit name="id">
				<typename name="identifier"/>
			</explicit>
			<explicit name="name">
				<typename name="label"/>
			</explicit>
			<explicit name="description" optional="YES">
				<typename name="text"/>
			</explicit>
			<graphic.element page="2" xcoord="383" ycoord="340"/>
		</entity>
		<entity name="qualification_relationship">
			<explicit name="id">
				<typename name="identifier"/>
			</explicit>
			<explicit name="name">
				<typename name="label"/>
			</explicit>
			<explicit name="description" optional="YES">
				<typename name="text"/>
			</explicit>
			<explicit name="relating_qualification">
				<typename name="qualification"/>
			</explicit>
			<explicit name="related_qualification">
				<typename name="qualification"/>
			</explicit>
			<graphic.element page="2" xcoord="99" ycoord="340"/>
		</entity>
		<entity name="qualification_type">
			<explicit name="id">
				<typename name="identifier"/>
			</explicit>
			<explicit name="name">
				<typename name="label"/>
			</explicit>
			<explicit name="description" optional="YES">
				<typename name="text"/>
			</explicit>
			<graphic.element page="2" xcoord="383" ycoord="198"/>
		</entity>
		<entity name="qualification_type_relationship">
			<explicit name="id">
				<typename name="identifier"/>
			</explicit>
			<explicit name="name">
				<typename name="label"/>
			</explicit>
			<explicit name="description" optional="YES">
				<typename name="text"/>
			</explicit>
			<explicit name="relating_qualification_type">
				<typename name="qualification_type"/>
			</explicit>
			<explicit name="related_qualification_type">
				<typename name="qualification_type"/>
			</explicit>
			<graphic.element page="2" xcoord="99" ycoord="198"/>
		</entity>
		<function name="acyclic_qualification_relationship">
			<parameter name="relation">
				<typename name="qualification_relationship"/>
			</parameter>
			<parameter name="relatives">
				<aggregate type="SET"/>
				<typename name="qualification"/>
			</parameter>
			<parameter name="specific_relation">
				<builtintype type="STRING"/>
			</parameter>
			<builtintype type="BOOLEAN"/>
			<algorithm>
   LOCAL
      x : SET OF qualification_relationship;
    END_LOCAL;

    IF relation.relating_qualification IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(qual &lt;* bag_to_set(USEDIN(relation.relating_qualification, 'QUALIFICATIONS_SCHEMA.' + ''QUALIFICATION_RELATIONSHIP.' + 'RELATED_QUALIFICATION')) | specific_relation IN TYPEOF(qual));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_qualification_relationship(x[i], relatives + relation.relating_qualification, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
			</algorithm>
		</function>
		<function name="acyclic_qualification_type_relationship">
			<parameter name="relation">
				<typename name="qualification_type_relationship"/>
			</parameter>
			<parameter name="relatives">
				<aggregate type="SET"/>
				<typename name="qualification_type"/>
			</parameter>
			<parameter name="specific_relation">
				<builtintype type="STRING"/>
			</parameter>
			<builtintype type="BOOLEAN"/>
			<algorithm>
   LOCAL
      x : SET OF qualification_type_relationship;
    END_LOCAL;

    IF relation.relating_qualification_type IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(qultyp &lt;* bag_to_set(USEDIN(relation.relating_qualification_type, 'QUALIFICATIONS_SCHEMA.' + ''QUALIFICATION_TYPE_RELATIONSHIP.' + 'RELATED_QUALIFICATION_TYPE')) | specific_relation IN TYPEOF(qultyp));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_qualification_type_relationship(x[i], relatives + relation.relating_qualification_type, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
			</algorithm>
		</function>
		<graphic.element page="1" xcoord="113" ycoord="184"/>
	</schema>
</express>
