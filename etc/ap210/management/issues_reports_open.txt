================== AP210 =================


---------------------------------------------------------
module ==> altered_part
issue against: 
<description>
For Tom
Need to add Programmed_packaged_part which references software_definition to this module. Maybe model it with a programming relationship in order to keep the stepmod style. The subtype is not an Altered_package_part subtype.  Ok to leave the altered_packaged_part subtype alone since we are using it in production.  Otherwise will have to remove the redeclared attribute from altered_packaged_part (should not make it optional.) and have to make altered_packaged_part ABS.
  </description>

---------------------------------------------------------
module ==> ap210_assembly_functional_interface_requirements
issue against: 
<description>
This module uses from the assembly_physical_interface_requirement_arm. It isn't clear why this is so.
for Giedrius
  </description>

---------------------------------------------------------
module ==> ap210_assembly_physical_interface_requirements
issue against: 
<description>
For Giedrius
This module shall USE FROM assemby_physical_interface_requirement_arm.
  </description>

---------------------------------------------------------
module ==> ap210_assembly_requirement_allocation
issue against: 
<description>
For Lothar
Is this module necessary? The intro states that it is a superset of all the other ap210_assembly_xxx_requirements.
If the intro is correct, the scope, keywords, and USE_FROMs need to be updated.
  </description>

---------------------------------------------------------
module ==> ap210_device_functional_and_physical_characterization
issue against: 
<description>
For Giedrius
Why the reference here to a white box model? This is a black box model module.
  </description>

---------------------------------------------------------
module ==> ap210_functional_decomposition
issue against: 
<description>
For Giedrius
The following USE FROMs are to be removed and placed where specified (or deleted):
<p>USE FROM Functional_decomposition_to_assembly_design_arm; 
(move to ap210_assembly_functional_requirements)

USE FROM Functional_decomposition_to_design_arm; 
(delete this use from)

USE FROM Functional_decomposition_to_interconnect_design_arm; 
(move to ap10_interconnect_functional_requirements)

USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_arm; 
(move to ap210_assembly_functional_requirements)
</p>

  </description>

---------------------------------------------------------
module ==> ap210_functional_decomposition
issue against: 
<description>
For Giedrius
Equivalent_functional_unit_definition_assignment does not belong in this module.  It belongs in the functional_usage_view module.

  </description>


---------------------------------------------------------
module ==> ap210_interconnect_requirement_allocation
issue against: 
<description>
For Lothar
This module appears redundant to ap210_interconnect_functional_requirements in combination with ap210_interconnect_physical_requirements.  How is it justified by itself?  Until this is resolved, we don't need to bother with boilerplate.
  </description>

---------------------------------------------------------
module ==> assembly_component_placement_requirements
issue against: 
<description>
For Lothar
This module appears to be incomplete.  There is no reference to Layout_spacing_requirement_occurrence that I can see and acpr_requirement_assignment_item does not appear to be used.  If this module is intended to use Lsro, then when that is added, the intro and scope will need to be updated to reflect category to category relationships
  </description>

---------------------------------------------------------
module ==> assembly_functional_interface_requirement
issue against: Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal.wr:WR1
<description>
For Tom
  	The WR refers a non-existing attribute "requirement_assignment.assigned_requirement.reference_protocol".
  </description>

---------------------------------------------------------
module ==> assembly_functional_interface_requirement
issue against: Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal.wr:WR2
<description>
For Tom
  	The WR refers a non-existing attribute "requirement_assignment.assigned_requirement.reference_protocol".
  </description>

---------------------------------------------------------
module ==> assembly_functional_interface_requirement
issue against: 
<description>
For Giedrius
This module refers to assemly_physical_interface_requirement_arm.  It should not.
  </description>

---------------------------------------------------------
module ==> assembly_functional_interface_requirement
issue against: Assembly_functional_interface_requirement_arm.Mating_connector_termination.signal_definition
<description>
For Tom
The top level query used here returns Requirement_assignment, not the Requirement_view_definition.
  </description>

---------------------------------------------------------
module ==> assembly_functional_interface_requirement
issue against: Assembly_functional_interface_requirement_arm.Minimally_defined_connector.wr:WR3
<description>
For Tom
potting compound attribute does not exists.
  </description>

---------------------------------------------------------
module ==> assembly_technology
issue against: Assembly_technology_arm.Assembly_bond_definition.wr:WR2
<description>
For Tom
 This rule is wrong and I don't know how to fix it. The problem is that Assembly_bond_definition can not be in MATERIAL_IDENTIFICATION.ITEMS.
  </description>

---------------------------------------------------------
module ==> assembly_technology
issue against: Assembly_technology_arm.Reference_packaged_part_assembly_implementation.wr:WR1
<description>
For Tom
 Product_category_hierarchy.super_category is of type Product_category and not of Product_category_assignment.
  </description>

---------------------------------------------------------
module ==> bare_die
issue against: Bare_die_arm.Bare_die_terminal.wr:WR1
<description>
For Tom
The problem is that Bare_die_terminal can not be in Material_identification.items.
  </description>

---------------------------------------------------------
module ==> chemical_substance
issue against: 
<description>
For Lothar

  <p>
    ENTITY Substance_composition_relationship 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.related_view RENAMED constituent                : Substance_view_definition; 
      SELF\View_definition_relationship.relating_view RENAMED whole                     : Substance_view_definition; 
      composition_basis : Substance_composition_basis;
      determination_method : STRING; 
      amount : SET[1:?] OF Value_with_unit; 
      (** unit shall be ratio, representing the fraction of 
  WHERE 
       WR1: ; --  unit shall be ratio *)
  END_ENTITY; 
</p>
<p>
    This AO is a copy of product_material_composition_relationship from part 45.
    I know of no application in electrical design where we have an explicit tolerance
    on bulk material in a bom.  suggest a subtype of Scr with a amount: SET[1:1]
    to support that case.
    also, need an ip that states that the members of amount (when there are more than
    one) need to be different complex instances of Value_with_unit and qualified_measure_schema AOs.
      I don't know where the requirement that Value_with_unit shall only be a ratio.
    </p>
  </description>

---------------------------------------------------------
module ==> conductivity_material_aspects
issue against: 
<description>
For Giedrius
The name of cma_property_assignment_select shall be cma_property_class_assignment_select, as this is for classification of a material property and not for assigning specific value.
  </description>

---------------------------------------------------------
module ==> device_marking
issue against: Device_marking_arm.Marking.wr:WR4
<description>
For Tom
The problem is that Marking can not be in Material_identification.items.
  </description>

---------------------------------------------------------
module ==> fabrication_joint
issue against: 
<description>
For Tom
Proposal:
add a new AO Passage_terminal_based_fabrication_joint_link.  
The Passage_terminal_based_fabrication_joint_link is to be added to fabrication_joint_arm. see the arm.exp for details.  This issue is in support of an issue in interconnect_module_connection_routing_arm
  </description>

---------------------------------------------------------
module ==> fabrication_joint
issue against: Fabrication_joint_arm.Fabrication_joint
<description>
For Tom
There is no rule preventing features_1 from being features_2.  It is needed.
  </description>

---------------------------------------------------------
module ==> feature_and_connection_zone
issue against: Feature_and_connection_zone_arm.Connection_zone.wr:WR1
<description>
For Tom
The EXPRESS implementation of this rule is weak.
  </description>

---------------------------------------------------------
module ==> interconnect_module_connection_routing
issue against: Interconnect_module_connection_routing_arm.Physical_connectivity_abstraction_map.geometric_context_based_definition
<description>
For Tom
The attribute does not support mapping of vertical structures, for instance vias, in the sequence of conductive interconnect elements.  The attribute does not support mapping of individual links in a conductive interconnect element.
Proposal:
add a SELECT type that references a Conductive_interconnect_element_terminal_link and a new AO Passage_terminal_based_fabrication_joint_link.  The Passage_terminal_based_fabrication_joint_link is to be added to fabrication_joint_arm. see the arm.exp for fabrication_joint_arm and for this module.
<p>
Here is the SELECT:
 	TYPE map_link = SELECT(
 		Conductive_interconnect_element_link,
		Passage_terminal_based_fabrication_joint_link);
	END_TYPE;
</p>
<p>
Here is the modified AO:
  ENTITY Physical_connectivity_abstraction_map;
      name_space_context_based_definition : physical_connectivity_element;
      geometric_context_based_definition  : map_link;
    UNIQUE
      UR1 : name_space_context_based_definition,
 geometric_context_based_definition;
  END_ENTITY; -- physical_connectivity_abstraction_map
</p>
  </description>

---------------------------------------------------------
module ==> layered_2d_shape
issue against: Layered_2d_shape_arm.Part_template_or_physical_unit_2d_shape_representation_relationship
<description>
For Tom
  The following where rule is missing and is needed (split into two rules for ease of coding).
 WR2: principal_part_shape and related_part_shape shall be for the same definition
or item and shall exist in the same Cartesian_coordinate_system.
  </description>

---------------------------------------------------------
module ==> layered_3d_shape
issue against: Layered_3d_shape_arm.Part_template_or_physical_unit_3d_shape_representation_relationship
<description>
For Tom
  The following where rule is missing and is needed (split into two rules for ease of coding).
 WR2: principal_part_shape and related_part_shape shall be for the same definition
or item and shall exist in the same Cartesian_coordinate_system.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_3d_shape
issue against: 
<description>
For Lothar
Not all these AOs may be in a 3d shape arm. (i.e., cutout)  This severely limits the capability of 2d design.  The critical AOs probably need to be split.(example::Inter_stratum_feature_edge_segment_template?)
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Default_component_termination_passage_definition.wr:WR3
<description>
For Tom
This rule has been removed from express, but it looks like it should exist.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Default_via_definition.wr:WR3
<description>
For Tom
This rule has been removed from express, but it looks like it should exist.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Intra_stratum_join_relationship
<description>
For Tom
Why did this WR was removed: All Layer_connection_points specified shall be on the same Design_layer_stratum?
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Laminate_component.wr:WR2
<description>
For Tom
The result of this WR is always TRUE.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Laminate_component.wr:WR3
<description>
For Tom
This WR allows laminate_component to be not assembled.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Laminate_component.wr:WR4
<description>
For Tom
This WR allows laminate_component to be assembled by all possible ways.
  </description>

---------------------------------------------------------
module ==> layered_interconnect_module_design
issue against: Layered_interconnect_module_design_arm.Passage_technology.wr:WR1
<description>
For Tom
This rule has been removed from express, but it looks like it should exist.
  </description>

---------------------------------------------------------
module ==> network_functional_design_view
issue against: 
<description>
For Tom
Functional_unit_network_node_definition.valid_conservative_node should be moved to an IP.  The expression is a placeholder and should be deleted.
  </description>

---------------------------------------------------------
module ==> network_functional_usage_view
issue against: network_functional_usage_view:mim:network_functional_usage_view_mim.make_from_functional_unit_terminal_definition_relationship.wr:WR9
<description>
For Tom
  	Not found design_make_from_relationship
  </description>

---------------------------------------------------------
module ==> packaged_part_black_box_model
issue against: Packaged_part_black_box_model_arm.Packaged_part
<description>
For Jurgita
Figure 1 does not belong in this module.  It belongs in packaged_part_white_box_model
  </description>

---------------------------------------------------------
module ==> part_template_2d_shape
issue against: Part_template_2d_shape_arm.Footprint_definition.wr:WR3
<description>
For Giedrius
See comment
  </description>

---------------------------------------------------------
module ==> part_template_2d_shape
issue against: Part_template_2d_shape_arm.Footprint_definition.wr:WR4
<description>
For Giedrius
See comment
  </description>

---------------------------------------------------------
module ==> part_template_2d_shape
issue against: Part_template_2d_shape_arm.Footprint_definition.wr:WR5
<description>
For Giedrius
See comment
  </description>

---------------------------------------------------------
module ==> part_template_extension
issue against: Part_template_extension_arm.Trace_template
<description>
For Tom
Figure 1 does not belong here.  (There is too much detail in the figure that is not supported in the model of Trace_template.  Maybe on Printed_part_cross_section_template, which does have support for this level of detail.  Also a reference could be in routed_printed_component.
  </description>

---------------------------------------------------------
module ==> physical_connectivity_definition
issue against: Physical_connectivity_definition_arm.termination_or_junction
<description>
For Tom

The needed option in the SELECT of Topological_junction is missing. Topological_junction belongs specifically in this module.
  </description>

---------------------------------------------------------
module ==> physical_connectivity_definition
issue against: 
<description>
For Tom
A formal definition is needed for "tree structure" and for Steiner tree.
  </description>

---------------------------------------------------------
module ==> physical_connectivity_definition
issue against: 
<description>
For Tom
A bibliographical entry for Steiner tree is needed.
  </description>

---------------------------------------------------------
module ==> physical_unit_interconnect_definition
issue against: Physical_unit_interconnect_definition_arm.Connector_based_interconnect_definition
<description>
For Viktoras
arm has been updated
WR13 and WR14 should be documented per issues.xml.
  </description>

---------------------------------------------------------
module ==> product_rule
issue against: Product_rule_arm.Rule_set.purpose
<description>
For Tom
  The purpose attribute derivation seems to be incorrect, product_view_definition
  does not have a context_description attribute, I think the path should go back to
  the view_definition_context.description.
  </description>

---------------------------------------------------------
module ==> product_rule
issue against: Product_rule_arm.Rule_set.wr:WR1
<description>
For Tom
product_view_definition.context_description does not exist.
  </description>

---------------------------------------------------------
module ==> requirement_decomposition
issue against: Requirement_decomposition_arm.Operational_requirement_occurrence_relationship
<description>
For Tom
  References to Requirements_group_occurrence could not be resolved, I can't find any place that
  entity is defined in a module at this time. This probably needs some work to harmonize
  with the pending AP233 view of requirements.
  </description>

---------------------------------------------------------
module ==> requirement_decomposition
issue against: Requirement_decomposition_arm.Operational_requirement_occurrence_relationship
<description>
For Tom
<p>There is no actual possibility for the structure as defined to actually represent the application of an operation to the two operands since there is no possibility for the result to be referenced.</p>
<p>proposal:  Make Operational_requirement_occurrence_relationship a subtype of Requirement_view_definition.</p>
<p>Then the result of the operation would be a subtype of the operand and that would allow it to be easily added to the Requirement_collection_relationship.</p>
<p>  ENTITY Operational_requirement_occurrence_relationship</p>
<p>SUBTYPE OF (Requirement_view_definition);</p>               
      <p>relationship_type               : relationship_operation;</p>
<p>      relating_requirement_occurrence : requirement_view_definition;</p>
      <p>related_requirement_occurrence  : requirement_view_definition;</p>
<p>    WHERE</p>
      <p>WR1 : relating_requirement_occurrence :&lt;&gt;: related_requirement_occurrence;</p>
<p>      WR2: SELF :&lt;&gt;: relating...</p>
<p>      WR3: SELF :&lt;&gt;: related...</p>
<p>  END_ENTITY; -- operational_requirement_occurrence_relationship</p>

<p>(two new rules added)</p>
<p>The mapping would be to an AP210 entity: operational_requirement_occurence_relationship, which would be a subtype of product_definition and product_definition_relationship.
</p>
  </description>

---------------------------------------------------------
module ==> requirement_decomposition
issue against: Requirement_decomposition_arm.relationship_operation
<description>
For Tom
Whith the change proposed in issue TRT-1, it is no longer valid for one of the relationship types to be derived from.  If derived from is still needed in this module, it needs to be a separate Requirement_view_definition_relationship subtype itself, since the operation relationship is now actually a representation of an operation and derived from is not an operation.
 </description>

---------------------------------------------------------
module ==> signal
issue against: Signal_arm.Signal_property
<description>
For Lothar
The definition of this ao does not correspond to that in wd48_8.  A table is required to support capture of the ordinate and the measure value.  A list does not suffice.
<p>
  ENTITY signal_property
    SUPERTYPE OF (composite_signal_property)
    SUBTYPE OF (managed_design_object);
      signal_property_representation : characteristic_data_table;
      characterized_signal           : signal;
      signal_property_category       : external_definition;
  END_ENTITY; -- signal_property
</p>
  </description>

---------------------------------------------------------
module ==> specification_document
issue against: Specification_document_arm.Structured_text.content_markup
<description>
For Lothar
There seems to be a mismatch between the text and the ARM, but I am not too sure
how to adjust it. It appears the attributes of External_source_identification have
changed significantly from whatever the original ARM attributes were.
</description>

---------------------------------------------------------
module ==> styled_curve
issue against: 
<description>
For Giedrius
  <p>
externally_defined_curve_font should be a subtype of externally_defined_item......
</p>
  </description>

---------------------------------------------------------
module ==> styled_curve
issue against: 
<description>
For Lothar
  <p>
Does anyone know what styled_area_representation is??????
</p>
  </description>

---------------------------------------------------------
module ==> styled_curve
issue against: 
<description>
For Lothar
  <p>
Does anyone know what a curve_style_font is??????
</p>
  </description>

---------------------------------------------------------
module ==> styled_text
issue against: 
<description>
For Lothar
  <p>
The arm express still seems not what we actually do.  
We have this:
 ENTITY Styled_text
    SUBTYPE OF (Detailed_geometric_model_element);
      text_font : font_select;
  END_ENTITY; -- styled_text
--This doesn't allow us to get to a single character and glyph.--??


Should not we have instead:
ENTITY Styled_character
    SUBTYPE OF (Detailed_geometric_model_element);
      message: string [1:1]
      text_font: font_select;
end_entity;
</p>
  </description>

---------------------------------------------------------
module ==> test_requirement_allocation
issue against: Test_requirement_allocation_arm.Test_requirement_allocation.wr:WR1
<description>
For Tom
The source attribute does not exist for Analytical_model_port_assignment.
  </description>

---------------------------------------------------------
module ==> test_requirement_allocation
issue against: Test_requirement_allocation_arm.Test_requirement_allocation.wr:WR2
<description>
For Tom
The target attribute does not exist for Analytical_model_port_assignment.
  </description>

---------------------------------------------------------
module ==> test_requirement_allocation
issue against: Test_requirement_allocation_arm.Test_requirement_allocation.wr:WR4
<description>
For Tom
requirement_assignment.assigned_requirement refers Requirement_view_definition and not
Requirement_definition_property.
  </description>

---------------------------------------------------------
module ==> test_requirement_allocation
issue against: Test_requirement_allocation_arm.Test_requirement_allocation.wr:WR6
<description>
For Tom
requirement_assignment.assigned_requirement refers Requirement_view_definition and not
Requirement_definition_property.
  </description>

---------------------------------------------------------
module ==> test_requirement_allocation
issue against: Test_requirement_allocation_arm.Test_requirement_allocation.wr:WR7
<description>
For Tom
requirement_assignment.assigned_requirement refers Requirement_view_definition and not
Requirement_definition_property.
  </description>

---------------------------------------------------------
module ==> value_with_unit_extension
issue against: 
<description>
For Lothar
  <p>
The definitions for the units need to be provided, as well as the normative references.</p>
  </description>

---------------------------------------------------------
module ==> via_component
issue against: 
<description>
For Jurgita

  <p>
The definitions for Via, interfacial_connection, blind via, buried via from clause 3 in sgml need to be moved to here.</p>
  </description>
