================== AP210 =================
here is regex to look for open issues.xml

\<issue.*\n\s.*id.*\n\s.*type.*\n\s.*linkend.*\n\s.*status="open
---------------------------------------------------------
module ==> assembly_component_placement_requirements
issue against: assembly_module_terminal IPs
For Jurgita/Darla,
The IPs need to be imported from the sgml source
---------------------------------------------------------
module ==> assembly_component_placement_requirements
issue against: 
For Giedrius
Added Assembly_spacing_requirement_occurrence
mapping from  fabrication_technology will need to be cloned.

also arm.xml and descriptions.xml need to be updated, based on clone from
Layout_spacing_requirement_occurrence except for name change,
and not all categories are used.
---------------------------------------------------------
module ==> Assembly_physical_requirement_allocation_arm
issue against: Assembly_separation_requirement_allocation IPs
2005-02-19
For Jurgita/Darla
The IPs need to be imported from the sgml
---------------------------------------------------------
module ==> Characteristic
2005-02-19
issue against: statistical_tolerance_characteristic IPs
For Jurgita/Darla
The description of the IPs from the sgml source need to be imported.
---------------------------------------------------------
module ==> extended_geometric_tolerance_arm
2005-02-19
issue against: Apex IPs
For Jurgita/Darla
The description of the IPs from the sgml source need to be imported into the 
Apex description
---------------------------------------------------------
module ==> network_functional_design_view
issue against: Functional_unit_network_node_definition IPs
2005-02-19
<description>
For Jurgita/Darla
add correct xml in arm.xml to show up IPs in browser.
---------------------------------------------------------
module ==> layered_2d_shape
issue against: Layered_2d_shape_arm.Part_template_or_physical_unit_2d_shape_representation_relationship
For Tom
  The following where rule is missing and is needed (split into two rules for ease of coding).
 WR2: principal_part_shape and related_part_shape shall be for the same definition
or item and shall exist in the same Cartesian_coordinate_system.
---------------------------------------------------------
module ==> layered_3d_shape
issue against: Layered_3d_shape_arm.Part_template_or_physical_unit_3d_shape_representation_relationship
For Tom
  The following where rule is missing and is needed (split into two rules for ease of coding).
 WR2: principal_part_shape and related_part_shape shall be for the same definition
or item and shall exist in the same Cartesian_coordinate_system.
---------------------------------------------------------
module ==> layered_interconnect_module_3d_shape
For Giedrius
Move the following AOs to layered_interconnect_module_design
cutout, 
cutout_edge_segment,
dielectric_material_passage,
Interconnect_module_edge,
Interconnect_module_edge_segment,
Partially_plated_cutout,
Partially_plated_interconnect_module_edge
Physical_connectivity_interrupting_cutout
Plated_cutout
Plated_cutout_edge_segment
Plated_interconnect_module_edge
Plated_interconnect_module_edge_segment
(and do whatever you need to do with the types and subtype constraints)

Move the following AOs to part_template_extension
Inter_stratum_feature_edge_segment_template
Inter_stratum_feature_edge_template

I believe this will leave exactly the Edge_segment_cross_section in this
module which is ok with me.
---------------------------------------------------------
module ==> physical_unit_2d_design_view
issue against: Component_2d_location
For Jurgita/Darls
Import IPs from SGML for Cartesian_transformation_operator_2d and place them in 
Component_2d_location.
---------------------------------------------------------
module ==> layered_interconnect_module_design (and maybe others..)
issue against: Blind_passage_template
issue against: Unsupported_passage
issue against: Documentation_layer_stratum
issue against: dielectric_material_passage
issue against: design_view_connection_zone_position_relationship--this name has been changed to Connection_zone_in_design_view
issue against: design_layer_stratum
issue against: dependently_located_layer_connection_point
issue against: closed_curve
issue against: component_feature
issue against: component_terminal
issue against: component_placement_restriction_assignment

For Jurgita/Darla
Import IPs from SGML
---------------------------------------------------------
for Jurgita:
module ==> layered_interconnect_module_design
layered_interconnect_module_design_arm

Generic_physical_network IPs
All Laminate_component_terminals referenced by a Generic_physical_network in the role of
connectivity_requirement_element shall be in the current_associated_definition.
---
Routed_physical_network IPs
All join_relationships referenced by a routed_physical_network in the role of
routed_connectivity_requirement_element or in the role of unrouted_connectivity_requirement_element
 shall be in the current_associated_definition.

All unrouted_join_relationships referenced by a routed_physical_network in the role of
unrouted_connectivity_requirement_element shall be in the current_associated_definition.

The material_electrical_conductivity_category shall be the same for all materials
that implement the physical_network.

Routed_physical_network WR3:
reference_connected_terminals.associated_definition =
SELF\Generic_physical_network.current_associated_definition\Part_design_view.usage_view;
---------------------------------------------------------
module ==> Packaged_part
issue against: Packaged_part IPs
For Jurgita/Darla
The description of the IPs from the sgml source need to be imported.
---------------------------------------------------------
module ==> part_template_extension
issue against: Part_template_extension_arm.Trace_template
For Tom
Figure 1 does not belong here.  (There is too much detail in the figure that is not supported in the model of Trace_template.  Maybe on Printed_part_cross_section_template, which does have support for this level of detail.  Also a reference could be in routed_printed_component.
---------------------------------------------------------
module ==> printed_physical_layout_template
issue against: Printed_part_template IPs
For Jurgita/Darla
The description of the IPs from the sgml source need to be imported.
---------------------------------------------------------
module ==> requirement_decomposition
issue against: Requirement_decomposition_arm.Operational_requirement_occurrence_relationship
For Giedrius:
Split Operational_requirement_occurrence_relationship into two different AOs.
1-Operational_requirement_occurrence_relationship
2-Requirement_view_definition_relationship.
(also need to split out relationship_operation into two types)

--
for 1)-Operational_requirement_occurrence_relationship
Make Operational_requirement_occurrence_relationship a subtype of 
View_definition_relationship and of Assigned_Property.

ENTITY Operational_requirement_occurrence_relationship
     SUBTYPE OF (Assigned_property, View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED operand_1 : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED operand_2 : Requirement_view_definition;
  SELF\Assigned_property.described_element RENAMED result : Requirement_view_definition;
  relationship_type               : relationship_operation;
WHERE
WR1 : operand_1 :<>: operand_2;
END_ENTITY; -- operational_requirement_occurrence_relationship

TYPE relationship_operation = ENUMERATION OF
    (and_operation,
     or_operation);
END_TYPE;
    
(Probably need to add an EXTENSION to property_assignment_arm.property_assignment_select 
that points to Requirement_view_definition for this.)

The mapping is to an AP210 entity: operational_requirement_occurence_relationship, 
which is to be a subtype of property_definition and product_definition_relationship.
The relationship_type is mapped to a product_definition_relationship.name with the following values:
{('and operation')
('or operation')}
////////////////////////////////////////////////////
for 2)-Requirement_view_definition_relationship
Make Requirement_view_definition_relationship a subtype of 
View_definition_relationship.

ENTITY Requirement_view_definition_relationship
     SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED primary : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED secondary : Requirement_view_definition;
  relationship_type               : requirement_view_relationship_type;
WHERE
WR1 : primary :<>: secondary;
END_ENTITY; -- Requirement_view_definition_relationship

TYPE requirement_view_relationship_type = ENUMERATION OF
    (derived_from,
     precedence,
     supplemental);
END_TYPE;
    
The mapping is to an AP210 entity: Requirement_view_definition_relationship, 
which is to be a subtype of product_definition_relationship.

The relationship_type is mapped to a product_definition_relationship.name with the following values:
{('derived from')
('precedence')
('supplemental')}
---------------------------------------------------------
module test_requirement_allocation
For Jurgita--update arm.xml and arm_descriptions.xml for deleted rules
----------------------------------------------------------
module ==> value_with_unit_extension
For Lothar
The definitions for the units need to be provided, as well as the normative references.</p>
---------------------------------------------------------
module ==> via_component
For Jurgita
The definitions for Via, interfacial_connection, blind via, buried via from clause 3 in sgml need to be moved to here.
_____________________________________________________________
reference notes on IPs; here are all the AOs with IPs.  
not all of them apply due to the restructuring when transitioning to modules.
Angular_dimension_with_direction_vector.sgm
Angularity_tolerance.sgm
Apex.sgm
Assembly_material_composition_relationship.sgm
Assembly_module_terminal.sgm
Assembly_module_usage_view.sgm
Assembly_separation_requirement_allocation.sgm
Blind_passage_template.sgm
Cartesian_transformation_operator_2d.sgm
Centre_axis.sgm
Centre_plane.sgm
Centre_point.sgm
Circular_runout_tolerance.sgm
Circularity_tolerance.sgm
Closed_curve.sgm
Component_feature.sgm
Component_placement_restriction_assignment.sgm
Component_terminal.sgm
Concentricity_and_coaxiality_tolerance.sgm
Curve_dimension.sgm
Cylindricity_tolerance.sgm
Datum_usage_in_datum_system_relationship.sgm
Dependently_located_layer_connection_point.sgm
Design_layer_stratum.sgm
Design_view_connection_zone_position_relationship.sgm
Dielectric_material_passage.sgm
Dimension_location_with_direction_vector.sgm
Dimensional_characteristic.sgm
Dimensional_size_based_on_opposing_boundaries.sgm
Directed_axis.sgm
Documentation_layer_stratum.sgm
External_definition.sgm
Flatness_tolerance.sgm
Functional_unit_network_node_definition.sgm
Geometric_alignment.sgm
Geometric_intersection.sgm
Geometric_tolerance.sgm
Linear_extension.sgm
Next_higher_assembly_relationship.sgm
Non_feature_shape_element.sgm
Packaged_part.sgm
Parallelism_tolerance.sgm
Perpendicularity_tolerance.sgm
Physical_feature_or_part_template.sgm
Position_tolerance.sgm
Printed_part_template.sgm
Profile_of_any_line_tolerance.sgm
Projected_zone_and_base_relationship.sgm
Runout_tolerance_zone_orienting_relationship.sgm
Statistical_tolerance_characteristic.sgm
Straightness_tolerance.sgm
Symmetry_tolerance.sgm
Tangent_plane.sgm
Tangent_shape_element.sgm
Total_runout_tolerance.sgm
Unsupported_passage.sgm
Usage_concept_usage_relationship.sgm
Work_request.sgm  
_____________________________________________________________
Below is the complete list of module AO names that exactly match the sgml AO names that have IPs
Angularity_tolerance
Apex
Assembly_module_terminal
Assembly_module_usage_view
Assembly_separation_requirement_allocation
Blind_passage_template
Centre_axis
Centre_plane
Centre_point
Circular_runout_tolerance
Closed_curve
Component_feature
Component_placement_restriction_assignment
Component_terminal
Curve_dimension
Cylindricity_tolerance
Dependently_located_layer_connection_point
Design_layer_stratum
Dielectric_material_passage
Dimensional_size_based_on_opposing_boundaries
Directed_axis
Documentation_layer_stratum
Flatness_tolerance
Functional_unit_network_node_definition
Geometric_alignment
Geometric_intersection
Geometric_tolerance
Linear_extension
Non_feature_shape_element
Packaged_part
Parallelism_tolerance
Perpendicularity_tolerance
Position_tolerance
Printed_part_template
Projected_zone_and_base_relationship
Runout_tolerance_zone_orienting_relationship
Statistical_tolerance_characteristic
Straightness_tolerance
Symmetry_tolerance
Tangent_plane
Tangent_shape_element
Total_runout_tolerance
Unsupported_passage
Usage_concept_usage_relationship
Work_request
------------------------------------------
