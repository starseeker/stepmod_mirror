(*
  $Id: arm.exp,v 1.17 2004/10/28 18:01:06 darla Exp $
 ISO TC184/SC4/WG12 N2941 - ISO/TS 10303-1047 Activity - EXPRESS ARM
*)

SCHEMA Activity_arm; 

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;

ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;

ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;

ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_arm

(*
 $Id: arm.exp,v 1.11 2004/10/28 18:02:36 darla Exp $
 ISO TC184/SC4/WG12 N2943 - ISO/TS 10303-1049 Activity method - EXPRESS ARM
*)


SCHEMA Activity_method_arm; 


ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_arm

(*
 $Id: arm.exp,v 1.5 2004/11/19 21:37:33 robbod Exp $
 ISO TC184/SC4/WG12 N2998 - ISO/TS 10303-1249 Activity method assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2306
*) 


SCHEMA Activity_method_assignment_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;

ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_assignment_arm
(*
 $Id: arm.exp,v 1.8 2004/10/21 14:47:38 darla Exp $
 ISO TC184/SC4/WG12 N1288 - ISO/TS 10303-1514 Advanced boundary representation - EXPRESS ARM
*)

SCHEMA Advanced_boundary_representation_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Advanced_brep_shape_representation
	SUBTYPE OF (Geometric_model);
END_ENTITY;
END_SCHEMA;

(*
 $Id: arm.exp,v 1.13 2006/10/20 03:19:38 thomasrthurman Exp $
 ISO TC184/SC4/WG12 N1120 - ISO/TS 10303-1025 Alias identification - EXPRESS ARM
*)

SCHEMA Alias_identification_arm;

USE FROM Identification_assignment_arm;

TYPE ai_identification_item = SELECT BASED_ON identification_item WITH
 (alias_identification_item);
END_TYPE;

TYPE alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY Alias_identification
SUBTYPE OF (Identification_assignment);
  SELF\Identification_assignment.items : SET [1 : ?] OF alias_identification_item;
DERIVE
  SELF\Identification_assignment.role : STRING := 'alias';
END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.22 2006/01/20 08:43:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3825 - ISO/TS 10303-1601 Altered package - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3282
*)

SCHEMA Altered_package_arm;

	USE FROM Package_arm;	-- ISO/TS 10303-1707

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE ap_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Surface_prepped_terminal);
	END_TYPE; 

 	TYPE ap_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Altered_package);
	END_TYPE;

  TYPE predefined_geometric_status = ENUMERATION OF
    (undefined,
     standard_datum_condition,
     perpendicular_primary_datum_axis,
     perpendicular_primary_datum_plane);
  END_TYPE;

  ENTITY Altered_package
    SUBTYPE OF (Package);
      of_geometric_status          : OPTIONAL predefined_geometric_status;
      modified_terminal_separation : OPTIONAL Length_data_element;
      package_to_be_altered        : Package;
    INVERSE
	  of_external_geometric_status : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (of_geometric_status)) XOR ((SIZEOF(of_external_geometric_status)) = 1);
	  WR2: NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Altered_package_terminal
    ABSTRACT SUPERTYPE OF ((shape_formed_terminal ANDOR
 Surface_prepped_terminal) ANDOR
 Length_trimmed_terminal)
    SUBTYPE OF (Package_terminal);
      terminal_to_be_altered                  : Package_terminal;
      SELF\Part_feature.associated_definition : Altered_package;
  END_ENTITY;

  ENTITY Length_trimmed_terminal
    SUBTYPE OF (Altered_package_terminal);
      trimmed_length : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Shape_formed_terminal
    SUBTYPE OF (Altered_package_terminal);
  END_ENTITY;

  ENTITY Surface_prepped_terminal
    SUBTYPE OF (Altered_package_terminal);
	DERIVE
	  surface_preparation: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'surface preparation', 
  			'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/06/10 19:33:15 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3828 - ISO/TS 10303-1602 Altered part - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3285
*)

SCHEMA Altered_part_arm;

	USE FROM Altered_package_arm;	-- ISO/TS 10303-1601
	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710

  ENTITY Altered_packaged_part
    SUBTYPE OF (Packaged_part);
      base_packaged_part              : Packaged_part;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
      WR2 : ((SIZEOF(SELF\Packaged_part.used_package) = 1) AND ('ALTERED_PACKAGE_ARM.ALTERED_PACKAGE' IN TYPEOF(used_package[1]))) OR
            (EXISTS(SELF\Packaged_part.implemented_function) AND
            (SELF\Packaged_part.implemented_function :<>: base_packaged_part\Packaged_part.implemented_function));            
  END_ENTITY;
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.52 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3831 - ISO/TS 10303-1603 Analytical model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3288
*)

SCHEMA Analytical_model_arm;

	USE FROM Model_parameter_arm;	-- ISO/TS 10303-1703
	USE FROM Software_arm;	-- ISO/TS 10303-1746
	USE FROM Document_structure_arm;	-- ISO/TS 10303-1124
	USE FROM Specification_document_arm;	-- ISO/TS 10303-1747
	USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
	REFERENCE FROM product_identification_arm(types_of_product); -- ISO/TS 10303-1017 
	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

 	TYPE am_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Digital_analytical_model_vector_port);
	END_TYPE;
	
	TYPE am_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Analytical_model_definition);
	END_TYPE; 

	TYPE analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

  TYPE port_property_type = ENUMERATION OF
    (string_property_type,
     boolean_property_type,
     logical_property_type,
     numeric_property_type,
     physical_property_type);
  END_TYPE;

  TYPE signal_flow_direction = ENUMERATION OF
    (unknown_direction,
     not_applicable,
     output_direction,
     input_direction,
     bidirectional);
  END_TYPE;

  ENTITY Across_port_variable
    SUBTYPE OF (Analog_port_variable);
    WHERE
      WR1 : EXISTS(SELF\Analog_port_variable.unit_of_measure);
  END_ENTITY;

  ENTITY Analog_analytical_model_port
    SUBTYPE OF (Analytical_model_port);
    INVERSE
      signal_variable : SET[1:?] OF analog_port_variable FOR associated_port;
  END_ENTITY;

  ENTITY Analog_port_variable
    SUPERTYPE OF (ONEOF (Through_port_variable,
 Across_port_variable,
 Transform_port_variable));
      associated_port : Analog_analytical_model_port;
      variable_name   : STRING; 
      unit_of_measure : OPTIONAL Unit; --STRING;
    UNIQUE
      UR1 : variable_name,
 associated_port;
  END_ENTITY;

  ENTITY Analytical_model
  	SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  	WHERE 
      WR1 : SIZEOF(['analytical model', 'information'] * types_of_product(SELF)) = 2;
  END_ENTITY;

  ENTITY Analytical_model_application
    SUBTYPE OF (Representation);  
      model_parameter_assignment     : SET[1:?] OF Parameter_assignment;
      model_representation           : Analytical_model_definition;
    UNIQUE
      UR1 : SELF\Representation.name;
  END_ENTITY;

  ENTITY Analytical_model_definition
    SUBTYPE OF (Information_definition);
      SELF\Product_view_definition.defined_version 	: Analytical_model_version;
      source_code : SET [1:1] OF Digital_file;
    DERIVE  
		representation_language: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'representation language', 
  			'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
    INVERSE
      access_mechanism : SET[1:?] OF analytical_model_port FOR accessed_analytical_model;
      parameter        : SET[1:?] OF analytical_model_parameter FOR accessed_analytical_model;
	  reference_document : document_assignment FOR is_assigned_to;    	
  END_ENTITY;

  ENTITY Analytical_model_make_from_relationship
  	SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED reusable_model : Analytical_model_definition;
      SELF\View_definition_relationship.related_view RENAMED resultant_model : Analytical_model_definition;
    UNIQUE
      UR1 : reusable_model, resultant_model;
    WHERE
      WR1 : reusable_model :<>: resultant_model;
  END_ENTITY;

  ENTITY Analytical_model_parameter
    SUBTYPE OF (Model_parameter);
      accessed_analytical_model : Analytical_model_definition;
    UNIQUE
      UR1 : SELF\Independent_property.id,
 accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_port
    SUPERTYPE OF (analytical_model_vector_port ANDOR
 (ONEOF (Analog_analytical_model_port,
 Digital_analytical_model_port)));
      accessed_analytical_model : Analytical_model_definition;
      port_name                 : STRING; 
    UNIQUE
      UR1 : port_name,
 accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_port_assignment;
	assigned_analytical_model_port	: Analytical_model_port;
	assigned_item					: analytical_model_port_assignment_select;
	associated_analytical_model_application :Analytical_model_application;
   UNIQUE
    UR1 : assigned_analytical_model_port,assigned_item,associated_analytical_model_application;
   WHERE
    WR1 : assigned_analytical_model_port.accessed_analytical_model =
   associated_analytical_model_application.model_representation;
  END_ENTITY;
   
  ENTITY Analytical_model_port_make_from_relationship;
      associated_make_from : Analytical_model_make_from_relationship;
      reusable_feature     : Analytical_model_port;
      resultant_feature    : Analytical_model_port;
    UNIQUE
      UR1 : reusable_feature,
 resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.accessed_analytical_model :<>: resultant_feature.accessed_analytical_model;
  END_ENTITY;

  ENTITY Analytical_model_scalar_port
    SUBTYPE OF (Analytical_model_vector_port);
    WHERE
      WR1 : SIZEOF(SELF\Analytical_model_vector_port.element_port) = 1;
      WR2 : SELF = SELF\Analytical_model_vector_port.element_port[1];
  END_ENTITY;

  ENTITY Analytical_model_vector_port
    SUPERTYPE OF (Analytical_model_scalar_port)
    SUBTYPE OF (Analytical_model_port);
    element_port : LIST [1:?] OF Analytical_model_scalar_port;
  DERIVE    
      size : INTEGER := SIZEOF(element_port); -- positive_integer;      
  END_ENTITY;
  
  ENTITY Analytical_model_version
  	SUBTYPE OF (Information_version);
  		SELF\Product_version.of_product : Analytical_model;
  END_ENTITY; 

  ENTITY Digital_analytical_model_port
  	ABSTRACT SUPERTYPE OF (Digital_analytical_model_vector_port)
    SUBTYPE OF (Analytical_model_port);
      nominal_signal_flow_direction : signal_flow_direction;
      port_type                     : port_property_type;
    WHERE
      WR1 : not_applicable <> nominal_signal_flow_direction;
      WR2 : numeric_property_type <> port_type;
      WR3 : physical_property_type <> port_type;
      WR4 : unknown_direction <> nominal_signal_flow_direction;
  END_ENTITY;

  ENTITY Digital_analytical_model_scalar_port
    SUBTYPE OF (Digital_analytical_model_vector_port, Analytical_model_scalar_port);
  END_ENTITY;

  ENTITY Digital_analytical_model_vector_port
    SUBTYPE OF (Digital_analytical_model_port,Analytical_model_vector_port);
    INVERSE
      data_encoding_method 	: External_source_identification FOR item;
    WHERE
     WR1 : SELF\Digital_analytical_model_port.port_type = port_property_type.string_property_type;
  END_ENTITY;

	ENTITY Terminal_pair_port_equivalence_relationship;
      equivalent_port : Analytical_model_port;
      scalar_ports    : Analytical_model_vector_port;
	 WHERE
	  WR1: (SIZEOF (scalar_ports.element_port) = 2);
  	END_ENTITY;

  ENTITY Through_port_variable
    SUBTYPE OF (Analog_port_variable);
    WHERE
      WR1 : EXISTS(SELF\Analog_port_variable.unit_of_measure);
  END_ENTITY;
  
  ENTITY Transform_port_variable
    SUBTYPE OF (Analog_port_variable);
      nominal_signal_flow_direction : signal_flow_direction;
    WHERE
      WR1 : not_applicable <> nominal_signal_flow_direction;
      WR2 : bidirectional <> nominal_signal_flow_direction;
  END_ENTITY;

RULE analytical_model_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_VERSION' IN TYPEOF ( pv) ) ) AND ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE analytical_model_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'ANALYTICAL_MODEL_ARM.' + 'ANALYTICAL_MODEL_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/06/06 21:44:55 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N1945 - ISO/TS 10303-1604 AP210 assembly functional interface requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1611
*)

SCHEMA Ap210_assembly_functional_interface_requirements_arm;
	USE FROM Assembly_module_usage_view_arm;	-- ISO/TS 10303-1642
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/01/25 08:02:05 liutkuviene Exp $
   ISO TC184/SC4/WG3 N1950 - ISO/TS 10303-1605 AP210 assembly functional requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1614
*)

SCHEMA Ap210_assembly_functional_requirements_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Functional_decomposition_to_assembly_design_arm;	-- ISO/TS 10303-1675
	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_arm;	-- ISO/TS 10303-1678
	USE FROM Physical_node_requirement_to_implementing_component_allocation_arm;	-- ISO/TS 10303-1723
	USE FROM Planned_characteristic_arm;	-- ISO/TS 10303-1733
	USE FROM Test_requirement_allocation_arm;	-- ISO/TS 10303-1751
END_SCHEMA;

(*
   $Id: arm.exp,v 1.21 2006/07/03 04:47:05 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N1955 - ISO/TS 10303-1606 AP210 assembly physical design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1617
*)

SCHEMA Ap210_assembly_physical_design_arm;
	USE FROM Altered_part_arm;	-- ISO/TS 10303-1602
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Assembly_2d_shape_arm;	-- ISO/TS 10303-1632
	USE FROM Assembly_3d_shape_arm;	-- ISO/TS 10303-1633
	USE FROM Assembly_functional_interface_requirement_arm;	-- ISO/TS 10303-1635
	USE FROM Assembly_module_with_cable_component_2d_arm;	-- ISO/TS 10303-1638
	USE FROM Assembly_module_with_cable_component_3d_arm;	-- ISO/TS 10303-1639
	USE FROM Assembly_module_with_macro_component_arm;	-- ISO/TS 10303-1640
	USE FROM Chemical_substance_arm;	-- ISO/TS 10303-1655
	USE FROM Design_specific_assignment_to_assembly_usage_view_arm;	-- ISO/TS 10303-1662
	USE FROM Device_marking_arm;	-- ISO/TS 10303-1664
    USE FROM Interconnect_module_to_assembly_module_relationship_arm;	-- ISO/TS 10303-1685
	USE FROM Physical_unit_interconnect_definition_arm;	-- ISO/TS 10303-1729

	TYPE ap210_apd_assembly_module_or_assembly_group_component = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembly_module_or_assembly_group_component WITH (
		Assembly_group_component);
	END_TYPE;
(** Assembly_module_with_packaged_connector_component_arm and 
Assembly_module_with_interconnect_component_arm  - most likely in some Assembly CC *)
	SUBTYPE_CONSTRAINT physical_component_interface_terminal_subtypes FOR Physical_component_interface_terminal;     
		(ONEOF (Packaged_connector_component_interface_terminal,
		 Interconnect_component_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

(** most likely some Assembly_module CC *)
	SUBTYPE_CONSTRAINT packaged_part_subtypes FOR Packaged_part; 
	    (ONEOF (Minimally_defined_connector, -- Assembly_functional_interface_requirement_arm
	 	Packaged_connector) ANDOR -- Packaged_connector_model_arm
	 	Altered_packaged_part); -- Altered_part_arm
	END_SUBTYPE_CONSTRAINT;
	
	SUBTYPE_CONSTRAINT ap210_apd_part_view_definition_subtypes FOR Part_view_definition ; 
		(ONEOF (Part_usage_view,
		Part_design_view,
		Stratum,
		Physical_unit_interconnect_definition));
	END_SUBTYPE_CONSTRAINT; 
	
	(** It most likely should be in Assembly_module CC *)
	SUBTYPE_CONSTRAINT ap210_physical_component_subtypes FOR Physical_component;  
		(ONEOF (Assembly_module_component, --Assembly_module_with_subassembly_arm
		Bare_die_component, -- Assembly_module_design_arm
		Cable_component, -- Assembly_module_with_cable_component_arm
		Interconnect_module_component, -- Assembly_module_with_interconnect_component_arm
		Packaged_component, -- Assembly_module_design_arm
		Routed_interconnect_component, -- Assembly_module_design_arm
		Routed_physical_component)); -- Assembly_module_design_arm 
	END_SUBTYPE_CONSTRAINT;
	
	(** It most likely should be in Assembly_module CC *)
	SUBTYPE_CONSTRAINT ap210_part_usage_view_subtypes FOR Part_usage_view;  
	    ONEOF (Package,
		 Bare_die,
		 Cable_usage_view,
		 Packaged_part,
		 Assembly_module_usage_view,
		 Interconnect_module_usage_view);
	END_SUBTYPE_CONSTRAINT;

   
END_SCHEMA;

(*
   $Id: arm.exp,v 1.11 2006/01/23 10:33:30 liutkuviene Exp $
   ISO TC184/SC4/WG3 N1960 - ISO/TS 10303-1607 AP210 assembly physical interface requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1620
   
*)

SCHEMA Ap210_assembly_physical_interface_requirements_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Assembly_physical_requirement_allocation_arm;	-- ISO/TS 10303-1648
END_SCHEMA;

(*
   $Id: arm.exp,v 1.11 2006/01/23 10:33:30 liutkuviene Exp $
   ISO TC184/SC4/WG3 N1965 - ISO/TS 10303-1608 AP210 assembly physical requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1623
*)

SCHEMA Ap210_assembly_physical_requirements_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Assembly_module_usage_view_arm;	-- ISO/TS 10303-1642
	USE FROM Test_requirement_allocation_arm;	-- ISO/TS 10303-1751
END_SCHEMA;

(*
   $Id: arm.exp,v 1.10 2006/01/23 10:33:35 liutkuviene Exp $
   ISO TC184/SC4/WG3 N1970 - ISO/TS 10303-1609 AP210 assembly requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1626
*)
SCHEMA Ap210_assembly_requirement_allocation_arm;
	USE FROM Ap210_assembly_functional_requirements_arm;	-- ISO/TS 10303-1605
	USE FROM Ap210_assembly_physical_interface_requirements_arm;	-- ISO/TS 10303-1607
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/01/23 10:33:32 liutkuviene Exp $
   ISO TC184/SC4/WG3 N1975 - ISO/TS 10303-1610 AP210 assembly technology constraints - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1629
*)

SCHEMA Ap210_assembly_technology_constraints_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Specification_document_arm;	-- ISO/TS 10303-1747
END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/06/06 22:52:07 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N1980 - ISO/TS 10303-1611 AP210 connection zone based model extraction - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1632
*)

SCHEMA Ap210_connection_zone_based_model_extraction_arm;
	USE FROM Analytical_model_arm;	-- ISO/TS 10303-1603
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
    USE FROM Feature_and_connection_zone_arm; -- ISO/TS 10303-1671

  TYPE aczbmea_analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH 
           (Connection_zone); 
  END_TYPE; 



END_SCHEMA;

(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG3 N1985 - ISO/TS 10303-1759 AP210 datum difference based model definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1745
*)

SCHEMA Ap210_datum_difference_based_model_definition_arm;

	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Datum_difference_based_model_arm;	-- ISO/TS 10303-1660

TYPE addbmd_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Part_usage_view);
END_TYPE; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.16 2006/06/06 22:52:07 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N1990 - ISO/TS 10303-1612 AP210 device functional and physical characterization - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1635
*)

SCHEMA Ap210_device_functional_and_physical_characterization_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_arm;	-- ISO/TS 10303-1655
	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710
	USE FROM Part_feature_grouping_arm;	-- ISO/TS 10303-1713
END_SCHEMA;

(*
   $Id: arm.exp,v 1.69 2006/10/23 10:51:40 liutkus Exp $
   ISO TC184/SC4/WG3 N1995 - ISO/TS 10303-410 AP210 electronic assembly interconnect and packaging design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1638
*)

SCHEMA Ap210_electronic_assembly_interconnect_and_packaging_design_arm;

	USE FROM Ap210_assembly_functional_interface_requirements_arm;	-- ISO/TS 10303-1604
	USE FROM Ap210_assembly_functional_requirements_arm;	-- ISO/TS 10303-1605
	USE FROM Ap210_assembly_physical_design_arm;	-- ISO/TS 10303-1606
	USE FROM Ap210_assembly_physical_interface_requirements_arm;	-- ISO/TS 10303-1607
	USE FROM Ap210_assembly_physical_requirements_arm;	-- ISO/TS 10303-1608
	USE FROM Ap210_assembly_requirement_allocation_arm;	-- ISO/TS 10303-1609
	USE FROM Ap210_assembly_technology_constraints_arm;	-- ISO/TS 10303-1610
	USE FROM Ap210_connection_zone_based_model_extraction_arm;	-- ISO/TS 10303-1611
	USE FROM Ap210_datum_difference_based_model_definition_arm;	-- ISO/TS 10303-1759
	USE FROM Ap210_device_functional_and_physical_characterization_arm;	-- ISO/TS 10303-1612
	USE FROM Ap210_functional_decomposition_arm;	-- ISO/TS 10303-1614
	USE FROM Ap210_functional_requirement_allocation_arm;	-- ISO/TS 10303-1615
	USE FROM Ap210_functional_specification_arm;	-- ISO/TS 10303-1616
	USE FROM Ap210_interconnect_design_for_microwave_arm;	-- ISO/TS 10303-1618
	USE FROM Ap210_interconnect_functional_requirements_arm;	-- ISO/TS 10303-1619
	USE FROM Ap210_interconnect_physical_requirements_arm;	-- ISO/TS 10303-1620
	USE FROM Ap210_interconnect_requirement_allocation_arm;	-- ISO/TS 10303-1621
	USE FROM Ap210_interconnect_technology_constraints_arm;	-- ISO/TS 10303-1622
	USE FROM Ap210_laminate_assembly_design_arm;	-- ISO/TS 10303-1623
	USE FROM Ap210_package_functional_and_physical_characterization_arm;	-- ISO/TS 10303-1624
	USE FROM Ap210_packaged_part_white_box_model_arm;	-- ISO/TS 10303-1625
	USE FROM Ap210_physical_unit_physical_characterization_arm;	-- ISO/TS 10303-1626
	USE FROM Ap210_printed_part_functional_and_physical_characterization_arm;	-- ISO/TS 10303-1627
	USE FROM Ap210_production_rule_arm;	-- ISO/TS 10303-1630

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  SUBTYPE_CONSTRAINT ap210_eaiapd_restrict_product_subtypes FOR Product;
    ABSTRACT SUPERTYPE;
    ONEOF (Document, Information_product, Part, Requirement, Substance, Template);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT ap210_eaiapd_restrict_product_view_definition_subtypes FOR Product_view_definition;
          ONEOF (Part_view_definition, Requirement_view_definition,
     Document_definition, Functional_unit_network_node_definition,
     Information_definition, Product_occurrence, Substance_view_definition,
     Template_definition);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT ap210_eaiapd_restrict_information_product_subtypes FOR Information_product;
    ONEOF (Software, Analytical_model);
  END_SUBTYPE_CONSTRAINT;

(** Need a CC having both Assembly_2d_shape and Interconnect_2d_shape_arm *)
SUBTYPE_CONSTRAINT component_2d_location_subtypes FOR Component_2d_location;         
    ONEOF (Component_2d_edge_location,
 Component_2d_embedded_location,
 Component_2d_stacked_location,
 Component_2d_surface_location);    
END_SUBTYPE_CONSTRAINT;

(** Design_specific_assignment_to_assembly_usage_view_arm, 
Design_specific_assignment_to_interconnect_usage_view_arm  and
Assembly_module_macro_definition_arm needs to be brought together for this *)  
SUBTYPE_CONSTRAINT component_feature_to_physical_usage_view_assignment_subtypes FOR Component_feature_to_physical_usage_view_assignment;     
ONEOF (Component_terminal_to_assembly_module_macro_terminal_assignment,
 Component_terminal_to_assembly_module_interface_terminal_assignment,
 Component_terminal_to_interconnect_module_macro_terminal_assignment,
 Component_terminal_to_interconnect_module_interface_terminal_assignment,
 Component_terminal_to_pca_terminal_assignment);
END_SUBTYPE_CONSTRAINT;

(** Subtypes are totally mixed and appear in various schemas - most likely this constraint will remain in some CC *)
SUBTYPE_CONSTRAINT geometric_representation_relationship_subtypes FOR Geometric_model_relationship;     
(ONEOF (Component_part_2d_geometric_representation_relationship,
 Component_part_2d_non_planar_geometric_representation_relationship, 
 Component_part_3d_geometric_representation_relationship,
 Shape_definition_3d_intersection,
 shape_definition_3d_plane_projection 
 ));    
END_SUBTYPE_CONSTRAINT;

(** Since this includes both pca and pca - I guess it will be it top most schema *)
SUBTYPE_CONSTRAINT part_terminal_subtypes FOR Part_terminal; 
ONEOF (Minimally_defined_bare_die_terminal, -- *pca*
 Assembly_module_terminal, -- *pca*
 Cable_terminal, -- *pca*
 Interconnect_module_terminal, -- *PCB*
 Packaged_part_terminal); -- *pca*
END_SUBTYPE_CONSTRAINT;

(** It most likely should be in TOP AP210 schema *)
SUBTYPE_CONSTRAINT part_design_view_subtypes FOR Part_design_view;  
    ONEOF (Assembly_module,
 Interconnect_module);
END_SUBTYPE_CONSTRAINT;

TYPE ap210_managed_design_object = EXTENSIBLE SELECT BASED_ON managed_design_object WITH 
(Adjacent_stratum_surface_definition,
 Adjacent_stratum_surface_embedded_physical_component_surface_definition,
 Alias_identification,
 Alternate_product_relationship,
 Analytical_model_definition,
 Analytical_model_make_from_relationship,
 Analytical_model_port,
 Analytical_model_port_assignment,
 Analytical_model_application,
 Assembly_bond_definition,
 Assembly_component,
 Assembly_component_placement_link,
 Assembly_component_relationship,
 Assembly_item_number,
 Assembly_joint,
 Bond_assembly_position,
 Boundary_size_characteristic,
 Bus_element_link,
 Bus_structural_definition,
 Geometric_coordinate_space,
 Certification,
 Representation_item,
 Component_2d_location,
 Component_3d_location,
 Component_external_reference,
 Component_feature,
 Component_feature_external_reference,
 Component_feature_make_from_relationship,
 Component_feature_relationship,
 Component_feature_to_layout_feature_relationship,
 Component_feature_to_physical_usage_view_assignment,
 Component_group_assignment,
 Component_make_from_relationship,
 Component_mounting_clearance_relationship,
 Component_non_planar_location,
 Component_overlap_relationship,
 Component_placement_restriction_assignment,
 Component_to_physical_usage_view_assignment,
 Composite_curve_segment,
 Composite_signal_property_relationship,
 Conductive_interconnect_element_terminal_link,
 Configuration_controlled_message,
 Conical_tolerance_zone_boundary_and_surface_relationship,
 Conical_tolerance_zone_boundary_diametrical_size_characteristic,
 Connection_zone,
 Connectivity_allocation,
 Connectivity_allocation_to_physical_network,
 Connection_zone_bare_die_interface_plane_relationship,
 Connection_zone_package_interface_plane_relationship,
 Connection_zone_map_identification,
 Property_value_representation,
 Curve_appearance,
 Curve_style_parameters,
 Value_with_unit,
 Calendar_date,
 Date_time,
 Datum_axis_and_tolerance_zone_orienting_relationship,
 Datum_axis_related_orientation,
 Datum_based_direction_vector,
 Datum_based_length_measure,
 Datum_based_vector_orientation,
 Datum_difference_functional_unit_usage_view_terminal_assignment,
 Single_datum, 
 Datum, 
 Datum_target_usage_in_datum_target_set_relationship,
 Design_composition_path,
 Design_functional_unit_allocation_to_assembly_joint,
 Design_functional_unit_allocation_to_fabrication_joint,
 Assembly_connection_zone_position_relationship,
 Interconnect_connection_zone_position_relationship,
 Design_view_terminal_component_shape_relationship,
 Device_2d_position,
 Device_3d_position,
 Device_terminal_map,
 Device_terminal_map_relationship,
 Geometric_dimension, 
 Dimensional_characteristic_representation,
 Dimension_qualifier,
 Dimension_set,
 Direct_stratum_component_join_implementation,
 Direction,
 Direction_element,
 Approval,
 Document_definition,
 Material_identification,
 Product,
 Product_category,
 Product_category_hierarchy,
 Product_configuration,
 Product_view_definition,
 Product_concept,
 Product_specific_parameter_value_assignment,
 Product_version,
 Predefined_requirement_view_definition,
 Text_representation_item,
 View_definition_relationship,
 Equivalent_functional_terminals_assignment,
 Equivalent_functional_unit_definition_assignment,
 Evaluated_characteristic,
 Externally_defined_curve_font,
 Externally_defined_hatch_style,
 Externally_defined_tile_style,
 External_item_identification,
 Fabrication_joint,
 User_defined_hatch_style,
 User_defined_tile_style,
 Frozen_assignment,
 Functional_specification,
 Functional_terminal_group,
 Functional_terminal_group_assignment,
 Functional_unit,
 Functional_unit_network_node_definition,
 Functional_unit_network_terminal_definition_bus_assignment,
 Functional_unit_network_terminal_definition_node_assignment,
 Functional_unit_terminal,
 Functional_unit_terminal_bus_assignment,
 Functional_unit_terminal_node_assignment,
 Functional_unit_usage_view_terminal_definition,
 Functional_usage_view_to_part_terminal_assignment,
 Functional_usage_view_to_printed_part_template_terminal_assignment,
 Geometric_tolerance,
 Geometric_tolerance_qualifier,
 Interconnect_module_product_assembly_view_fabrication_joint,
 Interconnect_module_stratum_assembly_relationship,
 Interface_component_allocation,
 Interface_mounted_join,
 Internal_stratum_access,
 Inter_stratum_extent,
 Inter_stratum_join_implementation,
 Join_relationship,
 Junction_vertex_allocation,
 Stratum_based_pattern,
 Layer_connection_point,
 Layout_junction,
 Layout_spacing_requirement_non_conforming_design_object,
 Line_width_class,
 Linear_array_placement_group_component_link,
 Located_interconnect_module_thickness_requirement,
 Marking,
 Mating_connector_usage,
 Mating_connector_placement_relationship,
 Mating_connector_termination,
 Model_parameter,
 Independent_property_relationship, 
 Next_higher_assembly_interface_requirement,
 Operational_requirement_occurrence_relationship,
 Requirement_view_definition_relationship,
 Organization,
 Package_external_reference,
 Package_terminal_external_reference,
 Packaged_connector_terminal_relationship,
 Parameter_assignment,
 Parameter_assignment_override,
 Part_connected_terminals_definition,
 Part_device,
 Part_device_terminal,
 Part_template_shape_representation_relationship,
 Part_terminal_external_reference,
 Passage_technology,
 Person,
 Person_in_organization,
 Physical_connectivity_abstraction_map,
 Physical_connectivity_definition,
 Physical_connectivity_definition_relationship,
 Physical_connectivity_element,
 Physical_connectivity_make_from_relationship,
 Physical_unit_shape_representation_relationship,
 Connector_based_interconnect_definition,
 Generic_physical_network,
 Physical_node_requirement_to_implementing_component_allocation,
 Part_definition_relationship,
 Pitch_class,
 Placement_group_requirement_definition,
 Placement_group_area_assignment,
 Planned_characteristic,
 Effectivity,
 Analog_port_variable,
 Positional_boundary_and_profile_boundary_member_relationship,
 Positional_boundary_definition,
 Positional_boundary_member_definition,
 Positional_boundary_offset,
 Printed_connector_template_terminal_relationship,
 Printed_part_template_connected_terminals_definition,
 Printed_part_template_material,
 Printed_part_template_material_link,
 Product_version_relationship,
 Projected_zone_and_base_relationship,
 Projected_zone_height_characteristic,
 Promissory_usage,
 Reference_composition_path,
 Reference_functional_unit_assignment_to_part,
 Draughting_pre_defined_text_font,
 Externally_defined_text_font,
 Text_font,
 Requirement_assignment,
 Requirement_collection_relationship,
 Restraint_condition,
 Complex_clause,
 Func,
 Rule_justification,
 Rule_priority,
 Simple_clause,
 Stratum_feature_based_derived_pattern,
 Runout_tolerance_zone_orienting_relationship,
 Runout_zone_orientation,
 Security_classification,
 Scalar_terminal_definition_link,
 Separate_geometric_tolerance_requirement,
 Geometric_model,
 Shape_dimension_representation,
 Shape_element,
 Shape_element_locating_relationship,
 Shape_element_relationship,
 Detailed_geometric_model_element,
 Signal,
 Signal_property,
 Signal_specification,
 Simultaneous_geometric_tolerance_requirement,
 Solid_curve_font,
 Specification_allocation,
 Stratum_feature_conductive_join,
 Dielectric_crossover_area,
 Stratum_concept_to_physical_usage_view_assignment,
 Stratum_feature_shape_stratum_average_surface_shape_relationship,
 Stratum_feature_shape_stratum_surface_shape_relationship,
 Stratum_interconnect_module_3d_position,
 Stratum_interconnect_module_planar_position,
 Stratum_average_surface,
 Stratum_surface,
 Stratum_technology,
 Stratum_technology_occurrence_link,
 Assembly_relationship_substitution,
 Component_upper_level_identification,
 Sub_model_placement_2d,
 Sub_model_placement_3d,
 Supplied_part_relationship,
 Terminal_pair_port_equivalence_relationship,
 Termination_constraint,
 Thermal_isolation_requirement,
 Tolerance_zone_and_viewing_plane_orienting_relationship,
 Tolerance_zone_definition,
 Tolerance_zone_boundary_member_offset,
 Tolerance_zone_form,
 Tolerance_zone_per_unit_size_specification,
 Topological_junction,
 Transmission_line_functional_unit_terminal_allocation,
 True_profile,
 Usage_concept_usage_relationship,
 Usage_view_connection_zone_terminal_shape_relationship,
 Vector,
 Viewing_plane_based_orientation,
 Viewing_plane_definition,
 Work_order,
 Work_request,
 Organization_or_person_in_organization_assignment
);
  END_TYPE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/01/23 10:33:29 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2000 - ISO/TS 10303-1614 AP210 functional decomposition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1641
*)

SCHEMA Ap210_functional_decomposition_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Electrical_network_definition_arm;	-- ISO/TS 10303-1665
	USE FROM Thermal_network_definition_arm;	-- ISO/TS 10303-1752
END_SCHEMA;

(*
   $Id: arm.exp,v 1.12 2006/01/23 10:33:45 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2005 - ISO/TS 10303-1615 AP210 functional requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1644
*)

SCHEMA Ap210_functional_requirement_allocation_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Functional_unit_requirement_allocation_arm;	-- ISO/TS 10303-1680
   -- look to IS what to add further
END_SCHEMA;

(*
   $Id: arm.exp,v 1.11 2006/01/23 10:33:34 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2010 - ISO/TS 10303-1616 AP210 functional specification - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1647
*)

SCHEMA Ap210_functional_specification_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Functional_specification_arm;	-- ISO/TS 10303-1679
END_SCHEMA;

(*
   $Id: arm.exp,v 1.11 2006/06/07 23:09:21 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2020 - ISO/TS 10303-1618 AP210 interconnect design for microwave - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1653
*)

SCHEMA Ap210_interconnect_design_for_microwave_arm;

	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_arm;	-- ISO/TS 10303-1655
	USE FROM Connectivity_allocation_to_physical_network_arm;	-- ISO/TS 10303-1658
	USE FROM Design_specific_assignment_to_interconnect_usage_view_arm;	-- ISO/TS 10303-1663
	USE FROM Device_marking_arm;	-- ISO/TS 10303-1664
	USE FROM Interconnect_2d_shape_arm;	-- ISO/TS 10303-1682
	USE FROM Interconnect_non_planar_shape_arm;	-- ISO/TS 10303-1688	
	USE FROM Interconnect_module_to_assembly_module_relationship_arm;	-- ISO/TS 10303-1685
	USE FROM Layered_interconnect_module_2d_design_arm;	-- ISO/TS 10303-1695
	USE FROM Layered_interconnect_module_3d_design_arm;	-- ISO/TS 10303-1696
	USE FROM Layout_macro_definition_arm;	-- ISO/TS 10303-1701
	USE FROM Pre_defined_datum_symbol_arm;	-- ISO/TS 10303-1734
	USE FROM Via_component_arm;	-- ISO/TS 10303-1754

(** Most likely it is in CC Interconnect_module *)    
	SUBTYPE_CONSTRAINT laminate_component_interface_terminal_subtypes FOR Laminate_component_interface_terminal; 
		 (ONEOF (Printed_connector_component_interface_terminal,
		 Component_termination_passage_interface_terminal,
		 Land_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

(** Most likely it is in CC Interconnect_module *)    
	SUBTYPE_CONSTRAINT laminate_component_join_terminal_subtypes FOR Laminate_component_join_terminal; 
		 (ONEOF (Component_termination_passage_join_terminal,
		 Land_join_terminal,
		 Embedded_physical_component_terminal,
		 Printed_component_join_terminal));
	END_SUBTYPE_CONSTRAINT;
   
(** It most likely should be in Interconnect_module CC *)
SUBTYPE_CONSTRAINT planar_projected_shape_model_subtypes FOR Planar_projected_shape_model;  
	(ONEOF ((Assembly_component_2d_shape_model ANDOR
	 (ONEOF (Part_template_planar_shape_model,
	 Physical_unit_planar_shape_model))),
	 Stratum_planar_shape_model));
END_SUBTYPE_CONSTRAINT; 

(** Pre_defined_datum_symbol_arm and Layered_interconnect_module_3d_shape_arm are not linked in any way.
Most likely it should be defined in Interconnect_module CC *)
 SUBTYPE_CONSTRAINT shape_definition_3d_intersection_subtypes FOR Shape_definition_3d_intersection;  
	 (ONEOF (Edge_segment_cross_section,
	 Pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship,
	 Pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship,
	 Pre_defined_parallel_datum_axis_symbol_3d_2d_relationship));
 END_SUBTYPE_CONSTRAINT;  
END_SCHEMA;

(*
   $Id: arm.exp,v 1.14 2006/07/03 17:42:50 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2025 - ISO/TS 10303-1619 AP210 interconnect functional requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1656
*)

SCHEMA Ap210_interconnect_functional_requirements_arm;
	USE FROM Ap210_functional_decomposition_arm;	-- ISO/TS 10303-1614
	USE FROM Functional_decomposition_to_interconnect_design_arm;	-- ISO/TS 10303-1677
	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_arm;	-- ISO/TS 10303-1678
	USE FROM Interconnect_module_to_assembly_module_relationship_arm;	-- ISO/TS 10303-1685
	USE FROM Planned_characteristic_arm;	-- ISO/TS 10303-1733
	USE FROM Test_requirement_allocation_arm;	-- ISO/TS 10303-1751
END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/07/03 17:42:50 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2030 - ISO/TS 10303-1620 AP210 interconnect physical requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1659
*)

SCHEMA Ap210_interconnect_physical_requirements_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Fabrication_requirement_arm;	-- ISO/TS 10303-1669
	USE FROM Interconnect_placement_requirements_arm;	-- ISO/TS 10303-1690
	USE FROM Interconnect_module_to_assembly_module_relationship_arm;	-- ISO/TS 10303-1685
	USE FROM Test_requirement_allocation_arm;	-- ISO/TS 10303-1751
END_SCHEMA;

(*
   $Id: arm.exp,v 1.10 2006/01/23 10:33:36 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2035 - ISO/TS 10303-1621 AP210 interconnect requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1662
*)

SCHEMA Ap210_interconnect_requirement_allocation_arm;
	USE FROM Ap210_interconnect_functional_requirements_arm;	-- ISO/TS 10303-1619
	USE FROM Ap210_interconnect_physical_requirements_arm;	-- ISO/TS 10303-1620
END_SCHEMA;

(*
   $Id: arm.exp,v 1.16 2006/07/05 17:06:23 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2040 - ISO/TS 10303-1622 AP210 interconnect technology constraints - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1665
*)

SCHEMA Ap210_interconnect_technology_constraints_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Fabrication_technology_arm;	-- ISO/TS 10303-1670


TYPE aitc_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Part_usage_view);
END_TYPE; 
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/07/03 17:42:50 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2045 - ISO/TS 10303-1623 AP210 laminate assembly design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1668
*)

SCHEMA Ap210_laminate_assembly_design_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Interconnect_module_to_assembly_module_relationship_arm;	-- ISO/TS 10303-1685
	USE FROM Sequential_laminate_assembly_design_arm;	-- ISO/TS 10303-1741
   --- look IS
END_SCHEMA;

(*
   $Id: arm.exp,v 1.12 2006/01/23 10:33:32 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2050 - ISO/TS 10303-1624 AP210 package functional and physical characterization - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1671
*)

SCHEMA Ap210_package_functional_and_physical_characterization_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_arm;	-- ISO/TS 10303-1655
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	USE FROM Part_feature_grouping_arm;	-- ISO/TS 10303-1713
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/01/25 08:06:45 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2055 - ISO/TS 10303-1625 AP210 packaged part white box model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1674
*)

SCHEMA Ap210_packaged_part_white_box_model_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Packaged_part_white_box_model_arm;	-- ISO/TS 10303-1709
	USE FROM Part_feature_grouping_arm;	-- ISO/TS 10303-1713
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/07/03 17:42:50 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2060 - ISO/TS 10303-1626 AP210 physical unit physical characterization - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1677
*)

SCHEMA Ap210_physical_unit_physical_characterization_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Part_feature_grouping_arm;	-- ISO/TS 10303-1713
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726
	USE FROM Physical_unit_3d_shape_arm;	-- ISO/TS 10303-1727
TYPE apupc_analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH  
	(Part_feature);
END_TYPE;

TYPE apupc_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Part_usage_view);
END_TYPE; 


   -- look to IS what to add further
END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/07/03 17:42:50 thomasrthurman Exp $
   ISO TC184/SC4/WG3 N2065 - ISO/TS 10303-1627 AP210 printed part functional and physical characterization - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1680
*)

SCHEMA Ap210_printed_part_functional_and_physical_characterization_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_arm;	-- ISO/TS 10303-1655
	USE FROM Physical_layout_template_arm;	-- ISO/TS 10303-1722
	USE FROM Printed_physical_layout_template_arm; -- ISO/TS 10303-1737
END_SCHEMA;

(*
   $Id: arm.exp,v 1.6 2006/01/23 10:33:31 liutkuviene Exp $
   ISO TC184/SC4/WG3 N2070 - ISO/TS 10303-1630 AP210 production rule - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG3 N1686
*)

SCHEMA Ap210_production_rule_arm;
	USE FROM Design_product_data_management_arm;	-- ISO/TS 10303-1628
	USE FROM Production_rule_arm;	-- ISO/TS 10303-1739
END_SCHEMA;

(*
 $Id: arm.exp,v 1.17 2004/10/28 16:15:51 darla Exp $
 ISO TC184/SC4/WG12 N2909 - ISO/TS 10303-1012 Approval - EXPRESS ARM
*)



SCHEMA Approval_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE approval_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Approval;
  status : Approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Approval_assignment;
  assigned_approval : Approval;
  items : SET[1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;

ENTITY Approval_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_approval : Approval;
  related_approval : Approval;
END_ENTITY;

ENTITY Approval_status;
  status_name : STRING;
END_ENTITY;

ENTITY Approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : Approval;
  role : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Approval_arm
(*
   $Id: arm.exp,v 1.12 2006/01/20 08:43:38 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3840 - ISO/TS 10303-1631 Area 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3636
*)

SCHEMA Area_2d_arm;

	USE FROM Extended_basic_geometry_arm;	-- ISO/TS 10303-1667
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753

  ENTITY Circular_area
    SUBTYPE OF (Primitive_2d);
      centre : Cartesian_point;
      radius : Length_data_element;
  END_ENTITY;

  ENTITY Elliptic_area
    SUBTYPE OF (Primitive_2d);
      position    : Axis_placement_2d;
      semi_axis_1 : Length_data_element;
      semi_axis_2 : Length_data_element;
  END_ENTITY;

  ENTITY Polygonal_area
    SUBTYPE OF (Primitive_2d);
      bounds : LIST[3:?] OF UNIQUE Cartesian_point;
  END_ENTITY;

  ENTITY Primitive_2d
    ABSTRACT SUPERTYPE OF (ONEOF (Circular_area,
 Elliptic_area,
 Rectangular_area,
 Polygonal_area))
    SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Rectangular_area
    SUBTYPE OF (Primitive_2d);
      position : Axis_placement_2d;
      x        : Length_data_element;
      y        : Length_data_element;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.23 2006/04/19 20:31:28 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3843 - ISO/TS 10303-1632 Assembly 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3639
*)

SCHEMA Assembly_2d_shape_arm;

	USE FROM Assembly_technology_arm;	-- ISO/TS 10303-1649
	USE FROM Physical_unit_2d_design_view_arm;	-- ISO/TS 10303-1724

	SUBTYPE_CONSTRAINT a2ds_component_2d_location_subtypes FOR Component_2d_location;         
	    ONEOF (Component_2d_edge_location,
	 Component_2d_stacked_location,
	 Component_2d_surface_location);    
	END_SUBTYPE_CONSTRAINT;

  ENTITY Bond_assembly_2d_position;
      bond                      : Assembled_with_bonding;
      assembly_model            : Physical_unit_planar_shape_model;
      bond_model                : Default_assembly_bond_shape_model;
      bond_definition_placement : Axis_placement_2d;
   UNIQUE
   	UR1 : bond;
  END_ENTITY;

  ENTITY Component_2d_edge_location
    SUBTYPE OF (Component_2d_location);
      reference_terminal_assembly_joint : Assembly_joint;
      mounting_surface_assembly_joint   : Assembly_joint;
    WHERE
      WR1 : reference_terminal_assembly_joint <> mounting_surface_assembly_joint;
      WR2 : SELF\Component_2d_location.substrate_location = FALSE;
      WR3 : SIZEOF(['ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_TERMINAL',
                    'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE'] * TYPEOF(mounting_surface_assembly_joint.assembly_feature_1)) >= 1;
      WR4 : 'PACKAGE_ARM.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(reference_terminal_assembly_joint\assembly_joint.assembly_feature_1);
      WR5 : NOT EXISTS(SELF\Representation_relationship.description);
  END_ENTITY;

  ENTITY Component_2d_stacked_location
    SUBTYPE OF (Component_2d_location);
      mounting_joint : Assembly_joint;
    WHERE
      WR1 : SIZEOF(['ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_TERMINAL',
                    'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE'] * TYPEOF(mounting_joint.assembly_feature_1)) = 0;
      WR2 : SIZEOF(['ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_TERMINAL',
                    'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE'] * TYPEOF(mounting_joint.assembly_feature_2)) = 0;
      WR3 : SELF\Component_2d_location.substrate_location = FALSE;
      WR4 : NOT EXISTS(SELF\Representation_relationship.description);
  END_ENTITY;

  ENTITY Component_2d_surface_location
    SUBTYPE OF (Component_2d_location);
      mounting_surface_assembly_joint : Assembly_joint;
    WHERE
      WR1 : SELF\Component_2d_location.substrate_location = FALSE;
      WR2 : SIZEOF(['ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_TERMINAL',
                    'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_ARM.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE'] * TYPEOF(mounting_surface_assembly_joint.assembly_feature_1)) >= 1;
      WR3 : NOT EXISTS(SELF\Representation_relationship.description);
  END_ENTITY;

END_SCHEMA;


(*
   $Id: arm.exp,v 1.12 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3846 - ISO/TS 10303-1633 Assembly 3d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3642
*)

SCHEMA Assembly_3d_shape_arm;

	USE FROM Assembly_technology_arm; -- ISO/TS 10303-1649
    USE FROM Physical_unit_3d_shape_arm; -- ISO/TS 10303-1727

  ENTITY Bond_assembly_position;
      bond                      : Assembled_with_bonding;
      assembly_model            : Physical_unit_3d_shape_model;
      bond_model                : Default_assembly_bond_shape_model;
      bond_definition_placement : Axis_placement_3d;
   UNIQUE
   	UR1 : bond;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.49 2006/10/12 11:27:24 liutkus Exp $
   ISO TC184/SC4/WG12 N3849 - ISO/TS 10303-1634 Assembly component placement requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3291
*)

SCHEMA Assembly_component_placement_requirements_arm;

	USE FROM Assembly_module_with_interconnect_component_arm;	-- ISO/TS 10303-1643
	
	REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

    SUBTYPE_CONSTRAINT acpr_predefined_requirement_view_definition_subtypes FOR Predefined_requirement_view_definition;   
 	  (ONEOF (Assembly_spacing_requirement_occurrence,
 	  Assembly_group_spacing_requirement_occurrence,
 	  Item_restricted_requirement_occurrence));
    END_SUBTYPE_CONSTRAINT;  
 
	TYPE restriction_basis_item = EXTENSIBLE SELECT(
		Predefined_requirement_view_definition,
   		Part_feature);
	END_TYPE;

TYPE acpr_requirement_assignment_item = EXTENSIBLE SELECT BASED_ON requirement_assignment_item WITH 
    (restriction_basis_item,
  	Placement_group_requirement_definition);
END_TYPE; 

TYPE assembly_product_design_object_category = EXTENSIBLE ENUMERATION OF
    (assembly_component_category,
     assembly_module_component_category,
     assembly_module_component_terminal_category,
     assembly_module_macro_component_category,
     assembly_module_macro_component_join_terminal_category,
     bare_die_component_category,
     bare_die_component_terminal_category,
     buried_via_category,
     cable_component_category,
     component_feature_category,
     component_termination_passage_category,
     conductive_interconnect_element_with_pre_defined_transitions_category,
     cutout_category,
     cutout_edge_segment_category,
     dielectric_material_passage_category,
     embedded_physical_component_terminal_category,
     fiducial_category,
     fill_area_category,
     inter_stratum_feature_category,
     interconnect_component_interface_terminal_category,
     interconnect_component_join_terminal_category,
     interconnect_module_component_category,
     interconnect_module_component_stratum_based_terminal_category,
     interconnect_module_component_surface_feature_category,
     interconnect_module_component_terminal_category,
     interconnect_module_edge_category,
     interconnect_module_edge_segment_category,
     interconnect_module_macro_component_category,
     interconnect_module_macro_component_join_terminal_category,
     interface_access_material_removal_laminate_component_category,
     interface_access_stratum_feature_template_component_category,
     interface_component_category,
     interfacial_connection_category,
     internal_probe_access_area_category,
     laminate_component_category,
     minimally_defined_component_terminal_category,
     packaged_component_category,
     packaged_component_join_terminal_category,
     packaged_connector_component_category,
     packaged_connector_component_interface_terminal_category,
     physical_component_category,
     plated_passage_or_unsupported_passage_category,
     routed_interconnect_component_category,
     routed_physical_component_category,
     stratum_feature_category,
     via_category);
END_TYPE;

TYPE assembly_product_design_object_category_or_group = SELECT(
   assembly_product_design_object_category,
   Group);
END_TYPE;    

TYPE assembly_component_or_component_feature = SELECT(
   Assembly_component,
   Component_feature);
END_TYPE;    

TYPE assembly_spacing_type = EXTENSIBLE ENUMERATION OF
    (nearest_boundary,
     centroid,
     furthest_boundary);
END_TYPE;

  ENTITY Assembly_group_spacing_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      reference_group : Placement_group_requirement_definition;
      dependent_group : Placement_group_requirement_definition;
      SELF\Predefined_requirement_view_definition.required_characteristic : Length_tolerance_characteristic;
      of_spacing_type : assembly_spacing_type;
  END_ENTITY;

  ENTITY Assembly_spacing_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      reference_design_object_category                                    : assembly_product_design_object_category_or_group;
      dependent_design_object_category                                    : assembly_product_design_object_category_or_group;
      SELF\Predefined_requirement_view_definition.required_characteristic : Length_tolerance_characteristic;
      of_spacing_type                                                     : assembly_spacing_type;
  END_ENTITY;

  ENTITY Component_group_assignment;
      associated_group   : Placement_group_requirement_definition;
      assigned_component : assembly_component_or_component_feature;
  END_ENTITY;

  ENTITY Component_placement_restriction_assignment;
      maximum_negative_component_height : OPTIONAL Length_tolerance_characteristic;
      maximum_positive_component_height : OPTIONAL Length_tolerance_characteristic;
      area                              : OPTIONAL Mounting_restriction_area;
      volume                            : OPTIONAL Mounting_restriction_volume;
      requirement                       : Item_restricted_requirement_occurrence;
      components_permitted              : BOOLEAN;
      mounting_clearance                : OPTIONAL Length_tolerance_characteristic;
    WHERE
      WR1 : EXISTS(area) OR EXISTS(volume);
  END_ENTITY;

  ENTITY Item_restricted_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      basis : restriction_basis_item;
    WHERE
      WR1 : SELF :<>: basis;
  END_ENTITY;

  ENTITY Mounting_restriction_area
    SUBTYPE OF (Non_feature_shape_element);
      mounting_surface                     : Interconnect_module_component_surface_feature;
      SELF\Non_feature_shape_element.scope : Assembly_module;
    WHERE
      WR1 : (SIZEOF(SELF\Non_feature_shape_element.element_shape) = 0) OR
            (SIZEOF(QUERY(es <* SELF\Non_feature_shape_element.element_shape | 
             NOT ('CONSTRUCTION_GEOMETRY_ARM.CONSTRUCTIVE_GEOMETRY' IN TYPEOF(es))
                  )) = 0);      
  END_ENTITY;

  ENTITY Mounting_restriction_volume
    SUBTYPE OF (Non_feature_shape_element);
      mounting_surface                     : Interconnect_module_component_surface_feature;
      SELF\Non_feature_shape_element.scope : Assembly_module;
    INVERSE
      volume : non_feature_shape_model FOR associated_element;
  END_ENTITY;

  ENTITY Placement_group_requirement_definition
    SUBTYPE OF (Requirement_view_definition);
      design_specific_usage : STRING; 
	DERIVE
  		requirement: SET[0:?] OF Requirement_view_definition :=
  		bag_to_set((QUERY(rvdr <* USEDIN (SELF, 'REQUIREMENT_DECOMPOSITION_ARM.'+
	'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.PRIMARY') | (rvdr.relation_type = 'derived_from'))));
    INVERSE
      composition : SET [1:?] OF Component_group_assignment FOR associated_group;
	WHERE
   		WR1: EXISTS (requirement) AND (SIZEOF(requirement) >= 1);
        WR2: NOT EXISTS (SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Placement_group_area_assignment;
      placed_group : Placement_group_requirement_definition;
      area         : Mounting_restriction_area;
  END_ENTITY;

  ENTITY Placement_group_volume_assignment;
      placed_group : Placement_group_requirement_definition;
      volume       : Mounting_restriction_volume;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.42 2006/04/24 12:35:31 liutkus Exp $
   ISO TC184/SC4/WG12 N3852 - ISO/TS 10303-1635 Assembly functional interface requirement - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3294
*)

SCHEMA Assembly_functional_interface_requirement_arm;

	USE FROM Altered_part_arm;	-- ISO/TS 10303-1602
	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710

REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE afir_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Protocol_physical_layer_definition);
	END_TYPE; 

  ENTITY Minimally_defined_connector
    SUBTYPE OF (Packaged_part);
    	SELF\Packaged_part.used_package	: SET[1:?] OF Package_external_reference;
    INVERSE
      terminal : SET[1:?] OF Shape_element FOR containing_shape;
    WHERE
      WR1 : SIZEOF(SELF\Packaged_part.access_mechanisms) = 0;
      WR2 : NOT EXISTS(SELF\Packaged_part.implemented_function);
      WR3 : NOT ('ALTERED_PART_ARM.ALTERED_PACKAGED_PART' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Protocol_physical_layer_definition
    SUBTYPE OF (Requirement_view_definition);
      host_connector                       : OPTIONAL Minimally_defined_connector;
      host_functional_definition           : Functional_unit_usage_view;
      media_connector                      : OPTIONAL Minimally_defined_connector;
      media_functional_definition          : OPTIONAL Functional_unit_usage_view;
	DERIVE
		reference_document: SET[0:?] OF Document_definition :=
  			get_document_definition(SELF, 'reference document', 
  			'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION');
	WHERE
   		WR1 : EXISTS (reference_document) AND (SIZEOF(reference_document) = 1);
      	WR2 : EXISTS(host_functional_definition) OR EXISTS(media_functional_definition);   		
  END_ENTITY;
  
  ENTITY Protocol_physical_layer_definition_with_characterization 
    SUBTYPE OF (Protocol_physical_layer_definition);
       host_rcv_functional_characterization : OPTIONAL SET[1:?] OF Functional_specification_definition;
       host_xmt_functional_characterization : OPTIONAL SET[1:?] OF Functional_specification_definition;
       media_functional_characterization    : OPTIONAL SET[1:?] OF Functional_specification_definition;
	WHERE
       WR1 : EXISTS (host_rcv_functional_characterization) OR EXISTS (host_xmt_functional_characterization) OR EXISTS(media_functional_characterization);	
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.43 2006/10/12 10:49:41 liutkus Exp $
   ISO TC184/SC4/WG12 N3855 - ISO/TS 10303-1636 Assembly module design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3297
*)

SCHEMA Assembly_module_design_arm;

	USE FROM Altered_package_arm;	-- ISO/TS 10303-1601
	USE FROM Assembly_module_usage_view_arm;	-- ISO/TS 10303-1642
	USE FROM Bare_die_arm;	-- ISO/TS 10303-1650
	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721
	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718

	SUBTYPE_CONSTRAINT physical_component_subtypes FOR Physical_component;         
	    ONEOF (Bare_die_component,
		Packaged_component,
		Routed_interconnect_component,
		Routed_physical_component);    
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT amd_physical_component_terminal_subtypes FOR Physical_component_terminal;         
	    ONEOF (Bare_die_component_terminal,
		Minimally_defined_component_terminal,
		Packaged_component_join_terminal);    
	END_SUBTYPE_CONSTRAINT;

 	TYPE assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT
 		(Bare_die_component_terminal,
     	Component_mounting_feature,
 		Packaged_component_join_terminal);
	END_TYPE;

	TYPE assembly_module_or_assembly_group_component = 
		EXTENSIBLE GENERIC_ENTITY SELECT 
		(Assembly_module);
	END_TYPE;

  ENTITY Assembly_connection_zone_position_relationship;
      associating_design_view_shape               : Geometric_model;
      associated_usage                            : Connection_zone_in_design_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
      associating_design_view                     : Assembly_module;
  END_ENTITY;

  ENTITY Assembly_module
    SUBTYPE OF (Assembly_definition, Part_design_view);
  WHERE
    WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Bare_die_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Bare_die;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Bare_die_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Bare_die_terminal;
      SELF\Component_feature.associated_component : Bare_die_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Component_external_reference;
      design_owner          : STRING;
      part_number           : STRING;
      revision_code         : STRING;
      product_definition_id : STRING;
      reference_designation : STRING;
  END_ENTITY;

  ENTITY Component_feature_external_reference;
      name                 : STRING;
      associated_component : Component_external_reference;
    UNIQUE
      UR1 : associated_component,
 name;
  END_ENTITY;

  ENTITY Component_mounting_clearance_relationship;
      feature_relationship : Component_feature_relationship;
      mounting_clearance   : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Component_mounting_feature
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.definition : Part_mounting_feature;
  END_ENTITY;

  ENTITY Component_overlap_relationship;
      previously_placed_component : Next_assembly_usage;
      current_component           : Next_assembly_usage;
      added_clearance             : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Minimally_defined_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition : Part_terminal_external_reference;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Movable_packaged_component_join_terminal
    SUBTYPE OF (Packaged_component_join_terminal);
      wire_terminal_length      : Length_tolerance_characteristic;
    WHERE
      WR1 : SIZEOF(QUERY(pt <* SELF\Component_feature.definition\Packaged_part_terminal.terminal_of_package | 
            NOT('PACKAGE_ARM.WIRE_TERMINAL' IN TYPEOF (pt)))) = 0;
  END_ENTITY;

  ENTITY Packaged_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Packaged_part;
      selected_package_alternate               : OPTIONAL Altered_package;
    INVERSE
      access_mechanism : SET[1:?] OF packaged_component_join_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Packaged_component_join_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Packaged_part_join_terminal;
      SELF\Component_feature.associated_component : Packaged_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Pca
    SUBTYPE OF (Assembly_module);
      SELF\Part_design_view.usage_view : Pca_usage_view;
  END_ENTITY;

  ENTITY Routed_interconnect_component
    SUBTYPE OF (Physical_component);
      routed_centreline_shape : Planar_path_shape_model_with_parameters;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Routed_physical_component
    SUBTYPE OF (Physical_component);
      routed_centreline_shape : Planar_path_shape_model_with_parameters;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.18 2006/04/19 20:31:28 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3858 - ISO/TS 10303-1637 Assembly module macro definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3351
*)

SCHEMA Assembly_module_macro_definition_arm;

	USE FROM Interconnect_module_with_macros_arm;	-- ISO/TS 10303-1687

	SUBTYPE_CONSTRAINT assembly_module_terminal_subtypes FOR Assembly_module_terminal; 
	((ONEOF (Assembly_module_interface_terminal,
	 Assembly_module_macro_terminal)) ANDOR
	 (Pca_terminal));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Assembly_module_macro_terminal
    SUBTYPE OF (Assembly_module_terminal);
    INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
    WHERE
      WR1 : 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_MACRO_TERMINAL' IN TYPEOF(defining_terminal.assigned_terminal);
      WR2 : 'ASSEMBLY_MODULE_MACRO_DEFINITION_ARM.' + 'COMPONENT_TERMINAL_TO_ASSEMBLY_MODULE_MACRO_TERMINAL_ASSIGNMENT' IN TYPEOF(defining_terminal);
      WR3 : NOT (SIZEOF(USEDIN(SELF,
 '')) > 0) OR (SIZEOF(QUERY(ct <* USEDIN(SELF,
 '') | NOT ('ASSEMBLY_MODULE_WITH_MACRO_COMPONENT_ARM.ASSEMBLY_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN TYPEOF(ct)))) = 0);
  END_ENTITY;

  ENTITY Component_terminal_to_assembly_module_macro_terminal_assignment
    SUBTYPE OF (Component_feature_to_physical_usage_view_assignment);
		SELF\Component_feature_to_physical_usage_view_assignment.defined_part_feature RENAMED usage_view_terminal : Assembly_module_macro_terminal;
		SELF\Component_feature_to_physical_usage_view_assignment.assigned_design_object RENAMED assigned_terminal : Interconnect_module_macro_component_join_terminal;
    UNIQUE
      UR1 : usage_view_terminal;
  END_ENTITY;

END_SCHEMA;


(*
   $Id: arm.exp,v 1.26 2006/06/14 02:33:12 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3873 - ISO/TS 10303-1642 Assembly module usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3300
*)

SCHEMA Assembly_module_usage_view_arm;

	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Packaged_connector_model_arm;	-- ISO/TS 10303-1708


  ENTITY Assembly_module_interface_terminal
    SUBTYPE OF (Assembly_module_terminal);
  END_ENTITY;

  ENTITY Assembly_module_terminal
    SUPERTYPE OF (assembly_module_interface_terminal ANDOR
 Pca_terminal)
    SUBTYPE OF (Part_terminal);
      SELF\Part_feature.associated_definition : Assembly_module_usage_view;
      reference_terminal                      : OPTIONAL Packaged_part_interface_terminal;
      related_connector                       : OPTIONAL Next_assembly_usage;
      SELF\Shape_feature.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
    WHERE
      WR1 : NOT EXISTS(related_connector) OR 
            (SELF\Shape_element.containing_shape.described_element = 
             related_connector\View_definition_relationship.related_view);
      WR2 : NOT EXISTS(related_connector) OR EXISTS(related_connector.location_indicator);
      WR3 : EXISTS(related_connector) OR 
            (SELF\Shape_element.containing_shape.described_element = 
             SELF\Part_feature.associated_definition);
  END_ENTITY;

  ENTITY Assembly_module_usage_view
    SUPERTYPE OF (Pca_usage_view)
    SUBTYPE OF (Part_usage_view);
      implemented_function              : OPTIONAL Functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET[0:?] OF assembly_module_terminal FOR associated_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Pca_terminal
    SUBTYPE OF (Assembly_module_terminal);
      SELF\Part_feature.associated_definition : Pca_usage_view;
  END_ENTITY;

  ENTITY Pca_usage_view
    SUBTYPE OF (Assembly_module_usage_view);
      maximum_negative_component_height : OPTIONAL Datum_based_length_measure;
      maximum_positive_component_height : OPTIONAL Datum_based_length_measure;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.12 2006/01/20 08:43:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3879 - ISO/TS 10303-1644 Assembly module with cable component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3303
*)

SCHEMA Assembly_module_with_cable_component_arm;
 
	USE FROM Cable_arm;	-- ISO/TS 10303-1653

	SUBTYPE_CONSTRAINT amwcc_part_terminal_subtypes FOR Part_terminal; 
		ONEOF (Minimally_defined_bare_die_terminal,
		 Assembly_module_terminal,
		 Cable_terminal,
		 Packaged_part_terminal);
	END_SUBTYPE_CONSTRAINT;

  ENTITY Cable_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Cable_usage_view;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3861 - ISO/TS 10303-1638 Assembly module with cable component 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3378
*)

SCHEMA Assembly_module_with_cable_component_2d_arm;

	USE FROM Assembly_module_with_cable_component_arm;	-- ISO/TS 10303-1644
	USE FROM Physical_unit_2d_design_view_arm;	-- ISO/TS 10303-1724

  ENTITY Routed_cable_component_2d_shape_model
    SUBTYPE OF (Assembly_component_2d_shape_model);
      cable_path_shape                                               : SET[1:?] OF Curve;
      connector_placement                                            : SET[1:?] OF Sub_model_placement_2d;
      junction_placement                                             : OPTIONAL SET[1:?] OF Geometric_model_element_relationship;
      SELF\Assembly_component_2d_shape_model.shape_characterized_component : SET[1:1] OF Cable_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Sub_model_placement_2d;
      placement : Axis_placement_2d;
      sub_model : Component_2d_location;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.17 2006/01/20 08:43:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3864 - ISO/TS 10303-1639 Assembly module with cable component 3d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3381
*)

SCHEMA Assembly_module_with_cable_component_3d_arm;

	USE FROM Assembly_module_with_cable_component_arm;	-- ISO/TS 10303-1644
	USE FROM Curve_swept_solid_arm;	-- ISO/TS 10303-1659
	USE FROM Physical_unit_3d_design_view_arm;	-- ISO/TS 10303-1725


  ENTITY Routed_cable_component_3d_shape_model
    SUBTYPE OF (Assembly_component_3d_shape_model);
      cable_path_shape                                               : SET[1:?] OF Curve_swept_solid;
      connector_placement                                            : SET[1:?] OF Sub_model_placement_3d;
      junction_placement                                             : OPTIONAL SET[1:?] OF Geometric_model_element_relationship;
      SELF\Assembly_component_3d_shape_model.shape_characterized_component : SET[1:1] OF Cable_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Sub_model_placement_3d;
      placement : Axis_placement_3d;
      sub_model : Component_3d_location;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.27 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3876 - ISO/TS 10303-1643 Assembly module with interconnect component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3306
*)

SCHEMA Assembly_module_with_interconnect_component_arm;

	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Interconnect_module_usage_view_arm;	-- ISO/TS 10303-1686
	USE FROM Interface_component_arm;	-- ISO/TS 10303-1691

 	TYPE amwic_assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembled_feature_select WITH   
    (Interconnect_component_join_terminal,
     Interconnect_component_interface_terminal,
     Interconnect_module_component_surface_feature,
     Interconnect_module_component_terminal);
  END_TYPE;

 	TYPE conductive_interconnect_terminal_or_interconnect_component_join_terminal = SELECT
 		(Interconnect_component_interface_terminal,
     	Interconnect_component_join_terminal,
     	Movable_packaged_component_join_terminal);
	END_TYPE;

  ENTITY Design_view_terminal_component_shape_relationship;
      associating_component_shape          : Geometric_model;
      associated_usage                     : conductive_interconnect_terminal_or_interconnect_component_join_terminal;
      associated_terminal_shape_definition : Geometric_model;
      associated_usage_placement           : Axis_placement;
  END_ENTITY;

  ENTITY Interconnect_component_interface_terminal
    SUBTYPE OF (Physical_component_interface_terminal);
      connection : OPTIONAL Connection_zone_in_design_view;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Interconnect_component_join_terminal
    SUBTYPE OF (Physical_component_terminal, Shape_feature);
      SELF\Shape_feature.connection_area          : OPTIONAL SET[1:1] OF Connection_zone_in_design_view;
      SELF\Component_feature.associated_component : Physical_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Interconnect_module_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Interconnect_module_usage_view;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Interconnect_module_component_surface_feature
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.definition : Interconnect_module_surface_feature;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Interconnect_module_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Interconnect_module_terminal;
      SELF\Component_feature.associated_component : Interconnect_module_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2006/04/22 19:39:26 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3867 - ISO/TS 10303-1640 Assembly module with macro component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3354
*)

SCHEMA Assembly_module_with_macro_component_arm;
	USE FROM Assembly_module_macro_definition_arm;	-- ISO/TS 10303-1637
	USE FROM Assembly_module_with_subassembly_arm;	-- ISO/TS 10303-1641

  ENTITY Assembly_module_macro_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Assembly_module;
    INVERSE
      join_access_mechanisms : SET[1:?] OF assembly_module_macro_component_join_terminal FOR associated_component;
    WHERE
      WR1 : SIZEOF(QUERY(ammcjt <* join_access_mechanisms | ammcjt\Component_feature.definition\Shape_element.containing_shape :<>: SELF\Definition_based_product_occurrence.derived_from\Part_design_view.usage_view)) = 0;
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Assembly_module_macro_component_join_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Assembly_module_macro_terminal;
      SELF\Component_feature.associated_component : Assembly_module_macro_component;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.17 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3882 - ISO/TS 10303-1645 Assembly module with packaged connector component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3651
*)

SCHEMA Assembly_module_with_packaged_connector_component_arm;

	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Interface_component_arm;	-- ISO/TS 10303-1691

 	TYPE amwpcc_assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembled_feature_select WITH   
    (Packaged_connector_component_interface_terminal);
  END_TYPE;

  ENTITY Interface_mounted_join;
      connection_to_interconnect_module_component : Packaged_connector_component_interface_terminal;
      access_to_interface_mounted_component       : Physical_component_terminal;
  END_ENTITY;

  ENTITY Packaged_connector_component
    SUBTYPE OF (Interface_component,
 Packaged_component);
      SELF\Definition_based_product_occurrence.derived_from : Packaged_connector;
    INVERSE
      interface_access_mechanism : SET[1:?] OF packaged_connector_component_interface_terminal FOR associated_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Packaged_connector_component_interface_terminal
    SUBTYPE OF (Physical_component_interface_terminal);
      SELF\Component_feature.definition           : Packaged_part_interface_terminal;
      SELF\Component_feature.associated_component : Packaged_connector_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.16 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3870 - ISO/TS 10303-1641 Assembly module with subassembly - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3357
*)

SCHEMA Assembly_module_with_subassembly_arm;

	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636

 	TYPE amws_assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembled_feature_select WITH   
    (Assembly_module_component_terminal);
  END_TYPE;

  ENTITY Assembly_module_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Assembly_module_usage_view;
    INVERSE
      access_mechanisms : SET[2:?] OF assembly_module_component_terminal FOR associated_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Assembly_module_component_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Assembly_module_terminal;
      SELF\Component_feature.associated_component : Assembly_module_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.29 2006/06/22 09:08:04 liutkus Exp $
   ISO TC184/SC4/WG12 N3888 - ISO/TS 10303-1647 Assembly physical interface requirement - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3360
*)

SCHEMA Assembly_physical_interface_requirement_arm;

	USE FROM Assembly_functional_interface_requirement_arm;	-- ISO/TS 10303-1635
	USE FROM Layered_3d_shape_arm;	-- ISO/TS 10303-1694
	USE FROM Printed_physical_layout_template_arm; -- ISO/TS 10303-1737

	REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740	

	TYPE apir_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Mating_connector_termination,
	    Termination_constraint);
	END_TYPE; 

	TYPE mating_connector_definition_select = SELECT
		(Packaged_part_terminal,
		Printed_part_template_terminal);
	END_TYPE;

	TYPE three_dimensional_shape = SELECT
		(Advanced_brep_shape_representation,
		Curve_swept_solid,
	 	Geometrically_bounded_surface_shape_representation);
	END_TYPE;

  ENTITY Interface_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      interface_to_next_higher_assembly : OPTIONAL Next_higher_assembly_interface_requirement;
      reference_protocol                : OPTIONAL Protocol_physical_layer_definition;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'design'; 
  END_ENTITY;

  ENTITY Mating_connector_usage
    SUBTYPE OF (Product_view_definition);
      definition            : Product_view_definition;
      reference_designation : OPTIONAL STRING; 
    INVERSE
      placement_context : mating_connector_placement_relationship FOR placed_connector;
  END_ENTITY;

  ENTITY Mating_connector_placement_relationship;
      placed_connector    : Mating_connector_usage;
      interface_context   : Next_higher_assembly_interface_requirement;
      connector_placement : Axis_placement;
  END_ENTITY;

  ENTITY Mating_connector_termination;
      name               : STRING;
      definition         : mating_connector_definition_select;
      accessed_connector : Mating_connector_usage;
	DERIVE
  		signal_definition: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'signal definition');
    UNIQUE
      UR1 : definition,
 accessed_connector;
	WHERE
   		WR1 : (SIZEOF(signal_definition) <= 1);
  END_ENTITY;

  ENTITY Next_higher_assembly_interface_requirement;
      shape                           : three_dimensional_shape;
      version_of_next_higher_assembly : Product_version;
  END_ENTITY;

  ENTITY Protocol_requirement_allocation_to_part_terminal
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Part_terminal;
      protocol_signal                                   : Functional_unit_usage_view_terminal_definition;
      SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property  : Interface_requirement_occurrence;
    WHERE
      WR1 : EXISTS(assigned_requirement_property\Interface_requirement_occurrence.reference_protocol);
      WR2 : protocol_signal IN assigned_requirement_property\Interface_requirement_occurrence.reference_protocol.host_functional_definition\Functional_unit_usage_view.access_mechanism;
  END_ENTITY;

  ENTITY Termination_constraint
  	SUBTYPE OF (Constraint_occurrence);
      constrained_termination      : SET[2:?] OF Mating_connector_termination;
	DERIVE
  		termination_usage_constraint: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'termination usage constraint');
	WHERE
   		WR1 : (SIZEOF(termination_usage_constraint) <= 1);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.28 2006/01/30 13:40:59 liutkus Exp $
   ISO TC184/SC4/WG12 N3891 - ISO/TS 10303-1648 Assembly physical requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3309
*)

SCHEMA Assembly_physical_requirement_allocation_arm;

	USE FROM Assembly_physical_interface_requirement_arm;	-- ISO/TS 10303-1647
	USE FROM Assembly_technology_arm;	-- ISO/TS 10303-1649
	USE FROM Discrete_shield_arm;	-- ISO/TS 10303-1744

	TYPE apra_requirement_assignment_item = EXTENSIBLE SELECT BASED_ON requirement_assignment_item WITH 
    	(component_or_feature,
    	Physical_shield);
	END_TYPE; 

 	TYPE component_or_feature = EXTENSIBLE GENERIC_ENTITY SELECT
 		(Assembly_component,
 		Assembly_joint,
 		Component_feature);
	END_TYPE;

  ENTITY Assembly_shield_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Physical_shield;
      SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property  : Predefined_requirement_view_definition;
    WHERE
     WR1 : assigned_requirement_property\Product_view_definition.initial_context\View_definition_context.application_domain = 'electrical';
  END_ENTITY;

   ENTITY Assembly_requirement_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : component_or_feature;
  END_ENTITY;
 
  ENTITY Assembly_separation_requirement_allocation
    SUBTYPE OF (Assembly_requirement_allocation);
      disjoint_assignment : SET[1:?] OF component_or_feature;
  END_ENTITY;

  ENTITY Electromagnetic_compatibility_requirement_allocation
    SUBTYPE OF (Assembly_requirement_allocation);
  END_ENTITY;

  ENTITY Interface_component_allocation;
      mating_solution    : Interface_component;
      mating_requirement : Mating_connector_usage;
  END_ENTITY;

  ENTITY Thermal_requirement_allocation
    SUBTYPE OF (Assembly_requirement_allocation);
      SELF\Requirement_assignment.assigned_to : Thermal_component;
      SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property  : Predefined_requirement_view_definition;
    WHERE
     WR1 : assigned_requirement_property\Product_view_definition.initial_context\View_definition_context.application_domain = 'thermal';
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.16 2004/11/15 21:22:40 thendrix Exp $
ISO TC184/SC4/WG12 N3222 - ISO/TS 10303-1026 Assembly structure - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2515
*) 


SCHEMA Assembly_structure_arm;

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Assembly_component_relationship
  ABSTRACT SUPERTYPE OF (ONEOF (Next_assembly_usage,
                                Promissory_usage,
                                Component_upper_level_identification))
  SUBTYPE OF (View_definition_usage);
  quantity : OPTIONAL Value_with_unit;
  location_indicator : OPTIONAL STRING;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship ;
  WR2: SELF\View_definition_relationship.relating_view :=: upper_assembly_relationship\View_definition_relationship.relating_view;
  WR3: SELF\View_definition_relationship.related_view :=: sub_assembly_relationship\View_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\View_definition_relationship.related_view :=: sub_assembly_relationship\View_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\View_definition_relationship.related_view , 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\View_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE', 'ASSEMBLY_STRUCTURE_ARM.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;

END_SCHEMA;  -- Assembly_structure_arm
(*
   $Id: arm.exp,v 1.48 2006/11/03 17:27:18 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3894 - ISO/TS 10303-1649 Assembly technology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3312
*)


SCHEMA Assembly_technology_arm;
	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
	USE FROM Product_identification_extension_arm;	-- ISO/TS 10303-1738

 	TYPE at_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Assembly_bond_definition);
	END_TYPE;

	TYPE at_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Assembly_bond_definition);
	END_TYPE;

  TYPE at_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Assembly_bond_definition);
  END_TYPE; 

	TYPE at_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Assembly_joint);
	END_TYPE; 
	
  TYPE degree_of_freedom = ENUMERATION OF
    (x,
     y,
     z,
     u,
     v,
     w);
  END_TYPE;

	SUBTYPE_CONSTRAINT process_specification_subtypes FOR Process_specification;   
		(ONEOF (Assembly_technology_specification,
		Fabrication_technology_specification));
	END_SUBTYPE_CONSTRAINT; 

  ENTITY Assembled_with_bonding
    SUBTYPE OF (Assembly_joint);
      default_bond_definition : Assembly_bond_definition;
    WHERE
      WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
  END_ENTITY;

  ENTITY Assembled_with_fasteners
    SUBTYPE OF (Assembly_joint);
      SELF\Assembly_joint.associated_assembly : Assembly_group_component;
  END_ENTITY;

  ENTITY Assembly_bond_definition;
      name                                    : STRING;   
      analytical_assembly_bond_representation : OPTIONAL SET[1:?] OF Analytical_model_application;
      associated_definition                   : Externally_defined_view_definition;
      bonded_feature_1                        : Part_feature;
      bonded_feature_2                        : Part_feature;
    INVERSE
      default_shape : SET[0:1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
	  bond_category	: External_source_identification FOR item;
	  bond_material : material_identification FOR items;      
    UNIQUE
      UR1 : name;
      UR2 : associated_definition;
    WHERE
      WR1 : bonded_feature_1 <> bonded_feature_2;
      WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (bond_material);
  END_ENTITY;

  ENTITY Assembly_joint
    SUPERTYPE OF (Assembled_with_fasteners ANDOR
 Assembled_with_bonding)
    SUBTYPE OF (Component_feature_joint);
      SELF\Component_feature_joint.feature_1 RENAMED assembly_feature_1             : assembled_feature_select;
      SELF\Component_feature_joint.feature_2 RENAMED assembly_feature_2             : assembled_feature_select;
      SELF\Component_feature_joint.associated_definition RENAMED associated_assembly : assembly_module_or_assembly_group_component;
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
        associated_assembly;
    WHERE
      WR1 : assembly_feature_1 :<>: assembly_feature_2;
      WR2 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Product_occurrence.occurrence_contexts | ay.related_view <> associated_assembly)) = 0));
      WR3 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Product_occurrence.occurrence_contexts | ay.related_view <> associated_assembly)) = 0));
  END_ENTITY;

  ENTITY Assembly_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;

  ENTITY Component_mating_constraint_condition;
      name                          : STRING;  
      constraining_joint            : SET[1:3] OF Assembly_joint;
      constrained_degree_of_freedom : SET[1:5] OF degree_of_freedom;
      of_context                    : Part_design_view;
    UNIQUE
      UR1 : name,
 of_context;
  END_ENTITY;

  ENTITY Connection_zone_based_assembly_joint
    SUBTYPE OF (Assembly_joint);
      zone_1 : Connection_zone_in_design_view;
      zone_2 : Connection_zone_in_design_view;
    WHERE
      WR1 : zone_1 :<>: zone_2;
  END_ENTITY;

  ENTITY Default_assembly_bond_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : Assembly_bond_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
      WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;      
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.12 2004/11/19 21:37:34 robbod Exp $
 ISO TC184/SC4/WG12 N3019 - ISO/TS 10303-1246 Attribute classification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2255
*) 


SCHEMA Attribute_classification_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070


TYPE classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Attribute_classification;
  allowed_value : Class;
  attribute_name : STRING;
  classified_entity : SET[1:?] OF classified_attribute_select;
END_ENTITY;

END_SCHEMA;  -- Attribute_classification_arm


(*
   $Id: arm.exp,v 1.35 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3897 - ISO/TS 10303-1650 Bare die - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3315
*)

SCHEMA Bare_die_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Part_feature_function_arm;	-- ISO/TS 10303-1712
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

	TYPE bd_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
	   	(Bare_die);
	END_TYPE; 

	TYPE bd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Bare_die_terminal,
		 Bare_die_template_terminal);
	END_TYPE;

	TYPE derived_zone_shape_class = ENUMERATION OF(
		area,
		edge);
	END_TYPE;
	
  ENTITY Bare_die
    SUBTYPE OF (Part_usage_view);
      least_material_condition_centroid_location   : OPTIONAL Cartesian_point;
      maximum_height_above_seating_plane           : OPTIONAL Length_data_element;
      maximum_material_condition_centroid_location : OPTIONAL Cartesian_point;
      implemented_function                         : Functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET[2:?] OF minimally_defined_bare_die_terminal FOR associated_definition;
      die_seating_plane : non_feature_shape_element FOR scope;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE') | ('BARE_DIE_ARM.' + 'BARE_DIE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4 : 'NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN TYPEOF(die_seating_plane);
  END_ENTITY;

  ENTITY Bare_die_bottom_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Bare_die_edge_segment_surface
    SUBTYPE OF (Bare_die_surface);
      composed_surface                        : Bare_die_edge_surface;
      start_vertex                            : Edge_segment_vertex;
      end_vertex                              : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
      WR2 : SELF\Shape_element.containing_shape :=: composed_surface\Shape_element.containing_shape;
  END_ENTITY;

  ENTITY Bare_die_edge_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Bare_die_surface
    ABSTRACT SUPERTYPE OF (ONEOF (Bare_die_top_surface,
 Bare_die_bottom_surface,
 Bare_die_edge_segment_surface,
 Bare_die_edge_surface))
    SUBTYPE OF (Part_mounting_feature);
			SELF\Part_feature.associated_definition : Bare_die;    
  END_ENTITY;

  ENTITY Bare_die_terminal
    SUBTYPE OF (Minimally_defined_bare_die_terminal, Placed_feature);
      SELF\Placed_feature.definition : Bare_die_template_terminal;
  END_ENTITY;

  ENTITY Bare_die_template_terminal
    SUBTYPE OF (Part_feature_template_definition, Shape_feature);
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
      seating_plane_zone                 : OPTIONAL Connection_zone_bare_die_interface_plane_relationship;
   INVERSE
	  material : material_identification FOR items;      
   WHERE  
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (material);
  END_ENTITY;

  ENTITY Bare_die_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\Shape_element_relationship.relating : Bare_die_surface;
      SELF\Shape_element_relationship.related  : Bare_die_terminal;
  END_ENTITY;

  ENTITY Bare_die_top_surface
    SUBTYPE OF (Bare_die_surface);
  END_ENTITY;

  ENTITY Connection_zone_bare_die_interface_plane_relationship;
      interface_plane          : Seating_plane;
      mating_zone              : Connection_zone_in_usage_view;
      derived_zone             : Connection_zone_in_usage_view;
      derived_zone_shape_class : derived_zone_shape_class;
    INVERSE
      associated_bare_die_terminal : SET[0:1] OF bare_die_template_terminal FOR seating_plane_zone;
    UNIQUE
      UR1 : interface_plane,
 mating_zone;
  END_ENTITY; 

  ENTITY Guided_wave_bare_die_terminal
    SUBTYPE OF (Minimally_defined_bare_die_terminal);
  END_ENTITY;

  ENTITY Minimally_defined_bare_die_terminal
    SUPERTYPE OF (guided_wave_bare_die_terminal ANDOR
 Bare_die_terminal)
    SUBTYPE OF (Part_terminal);
      SELF\Part_feature.associated_definition : Bare_die;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.14 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3900 - ISO/TS 10303-1651 Basic curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3366
*)

SCHEMA Basic_curve_arm;

	USE FROM Basic_geometry_arm;	-- ISO/TS 10303-1652
	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128

	SUBTYPE_CONSTRAINT curve_subtypes FOR Curve;         
	    ONEOF (Composite_curve,
		Trimmed_curve);    
	END_SUBTYPE_CONSTRAINT;

  ENTITY Closed_curve
    SUBTYPE OF (Curve);
  END_ENTITY;

  ENTITY Composite_curve
    SUBTYPE OF (Curve);
      curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
  END_ENTITY;

  ENTITY Composite_curve_segment;
      segment_curve : Curve;
    INVERSE
      using_curves : SET[1:?] OF composite_curve FOR curve_segment;
  END_ENTITY;

	ENTITY Measurement_path;
	          defined_by : Curve;
	          defined_in : Geometric_coordinate_space;
	END_ENTITY;

	ENTITY Trimmed_curve
	  SUBTYPE OF (Curve);
	    start_point : Cartesian_point;
	    end_point : Cartesian_point;
	END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.10 2006/01/20 08:43:36 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3903 - ISO/TS 10303-1652 Basic geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3369
*)

SCHEMA Basic_geometry_arm;

	USE FROM Elemental_geometric_shape_arm;	-- ISO/TS 10303-1004

	SUBTYPE_CONSTRAINT alternate_geometry_items FOR Detailed_geometric_model_element;
	  ONEOF (Cartesian_point,
	         Direction,
	         Axis_placement,
	         Cartesian_transformation_2d,
	         Cartesian_transformation_3d,
	         Curve,
	         Point_on_curve,
	         Point_on_surface,
	         Surface);
	END_SUBTYPE_CONSTRAINT;

		TYPE constructive_element_select = EXTENSIBLE GENERIC_ENTITY SELECT 
		   (Axis_placement,  
		    Curve,  
		    point_select,  
		    Surface); 
		END_TYPE; 

     TYPE point_select = EXTENSIBLE GENERIC_ENTITY SELECT
        (Cartesian_point, 
         Point_on_curve, 
         Point_on_surface);
     END_TYPE; 
     
     ENTITY Curve
       SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
     
     ENTITY Line
       SUBTYPE OF (Curve);
     END_ENTITY;
     
     ENTITY Plane
       SUBTYPE OF (Surface);
     END_ENTITY;
     
     ENTITY Point_on_curve
       SUBTYPE OF (Detailed_geometric_model_element);
       supporting_curve : Curve;
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
     
     ENTITY Point_on_surface
       SUBTYPE OF (Detailed_geometric_model_element);
       supporting_surface : Surface;
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;
     
     ENTITY Surface
       SUBTYPE OF (Detailed_geometric_model_element);
--     WHERE
--       WR1: NOT EXISTS (SELF\Representation_item.name);
     END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.23 2006/06/14 02:35:23 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3906 - ISO/TS 10303-1653 Cable - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3318
*)

SCHEMA Cable_arm;

	USE FROM Assembly_module_with_packaged_connector_component_arm;	-- ISO/TS 10303-1645

  ENTITY Cable_terminal
    SUBTYPE OF (Part_terminal);
      SELF\Part_feature.associated_definition : Cable_usage_view;
      mapped_terminal                         : Packaged_connector_component_interface_terminal;
      SELF\Shape_feature.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
    WHERE
      WR1 : SELF\Part_feature.associated_definition :=: 
      mapped_terminal\Component_feature.associated_component\Product_occurrence.occurrence_contexts[1].relating_view;
  END_ENTITY;

  ENTITY Cable_usage_view
    SUBTYPE OF (Part_usage_view);
    INVERSE
      access_mechanisms : SET[1:?] OF cable_terminal FOR associated_definition;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.8 2004/10/28 17:48:07 darla Exp $
 ISO TC184/SC4/WG12 N2932 - ISO/TS 10303-1044 Certification - EXPRESS ARM
*)



SCHEMA Certification_arm; 


TYPE certification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;

ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Certification_arm
(*
   $Id: arm.exp,v 1.42 2006/11/03 17:27:33 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3909 - ISO/TS 10303-1654 Characteristic - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3321
*)

SCHEMA Characteristic_arm;

	USE FROM Document_assignment_arm;	-- ISO/TS 10303-1122
	USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106
	USE FROM Characterizable_object_arm;     -- ISO/TS 10303-xxxx	
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
  
  TYPE characteristic = SELECT
    (String_representation_item,
    Numerical_item_with_unit,
    Value_list,
    Value_set);
  END_TYPE;

	TYPE c_documented_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH 
	   (Property_value_representation);
	END_TYPE; 
  
	TYPE list_characteristic = LIST[1:?] OF characteristic;
	END_TYPE; 

  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

  TYPE scalar_or_coordinated_characteristics = SELECT
    (Property_value_representation,
     characteristic);
  END_TYPE;

  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier);
  END_TYPE;

  ENTITY Characteristic_data_table
    SUBTYPE OF (Characterizable_object, Measure_item);
      property_value : LIST[1:?] OF Characteristic_data_table_row;
      index_value    : LIST[1:?] OF INTEGER;
    UNIQUE
      UR1: SELF\Characterizable_object.name;
    WHERE
      WR1: SIZEOF(property_value) = SIZEOF(index_value);
      WR2: SIZEOF(QUERY( pv <* property_value |
                  NOT (SIZEOF(pv.property_value) = SIZEOF(property_value[1].property_value))
                  )) = 0;
      WR3: SIZEOF(USEDIN
                 (SELF,'PROPERTY_ASSIGNMENT_ARM.ASSIGNED_PROPERTY.DESCRIBED_ELEMENT')) = 0;
  END_ENTITY;

  ENTITY Characteristic_data_table_row
    SUBTYPE OF (Measure_item);
      property_value : LIST[1:?] OF list_characteristic;
  END_ENTITY;

  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;

  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('EXTENDED_MEASURE_REPRESENTATION_ARM.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

  ENTITY Logical_representation_item
    SUBTYPE OF (String_representation_item);
    WHERE 
      WR1: SELF\Representation_item.name IN ['.BOOLEAN.', '.LOGICAL.'];
      WR2: SELF\String_representation_item.string_value IN ['.TRUE.', '.FALSE.','.UNKNOWN.', '.UNDEFINED.'];
      WR3: NOT (SELF\Representation_item.name = '.BOOLEAN.') OR
        (SELF\String_representation_item.string_value IN ['.TRUE.', '.FALSE.', '.UNDEFINED.']);
  END_ENTITY;

  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.limit_qualifier = limit_qualifier_list.maximum;
  END_ENTITY;

  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
  END_ENTITY;

  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.limit_qualifier = limit_qualifier_list.minimum;
  END_ENTITY;

  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;

  ENTITY Precision_qualifier;
      precision_value : INTEGER;
  END_ENTITY;

  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;

  ENTITY Range_characteristic
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
  WHERE
    WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
    WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
    WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;

  ENTITY Standard_uncertainty
    SUPERTYPE OF (Expanded_uncertainty)
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;

  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'VALUE_WITH_UNIT_EXTENSION_ARM.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;

  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  END_ENTITY;

  ENTITY Tolerance_characteristic
    ABSTRACT SUPERTYPE OF ((ONEOF (Minimum_tolerance_characteristic,
 Statistical_tolerance_characteristic,
 Symmetrical_tolerance_characteristic,
 Maximum_tolerance_characteristic,
 Plus_minus_tolerance_characteristic,
 Nominal_tolerance_characteristic)) ANDOR Length_tolerance_characteristic)
    SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Type_qualifier;
      name : STRING;
  END_ENTITY;

  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (Standard_uncertainty,
 Qualitative_uncertainty));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;

SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR
Property_value_representation;
          ONEOF (Range_characteristic, Tolerance_characteristic);
END_SUBTYPE_CONSTRAINT;

FUNCTION get_value (
         input1 : string;
         np : SET OF Representation_item) : Numerical_item_with_unit;
REPEAT i := 1 to SIZEOF(np) by 1;
  IF input1 = np[i]\Representation_item.name THEN
       RETURN(np[i]);
  END_IF;
END_REPEAT;
  RETURN(?);
END_FUNCTION; -- get_value

  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
   RETURN(TRUE);
  END_FUNCTION; 
  
END_SCHEMA;
(*
   $Id: arm.exp,v 1.6 2006/02/20 09:50:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4296 - ISO/TS 10303-1765 Characterizable object - EXPRESS ARM
*)

SCHEMA Characterizable_object_arm;

ENTITY Characterizable_object;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

  FUNCTION bag_to_set(
    the_bag : BAG OF GENERIC : intype
  ) : SET OF GENERIC : intype;

    LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.36 2006/01/31 07:41:16 liutkus Exp $
   ISO TC184/SC4/WG12 N3912 - ISO/TS 10303-1655 Chemical substance - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3372
*)

SCHEMA Chemical_substance_arm;   

	USE FROM Assembly_structure_arm;	-- ISO/TS 10303-1026
	USE FROM Generic_material_aspects_arm;	-- ISO/TS 10303-1681	
	USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023
	USE FROM Person_organization_assignment_arm;	-- ISO/TS 10303-1013
 
REFERENCE FROM Product_identification_arm    --  ISO/TS 10303-1017 
  (types_of_product);  

REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
 
 
CONSTANT 
 
  -- normative reference: ISO 31-9, Annex A 
  -- posistion is identical to Atomic number 
  chemical_elements : LIST OF STRING := [
      'HYDROGEN',
      'HELIUM',
      'LITHIUM',
      'BERYLLIUM',
      'BORON',
      'CARBON',
      'NITROGEN',
      'OXYGEN',
      'FLUORINE',
      'NEON',
      'SODIUM',
      'MAGNESIUM',
      'ALUMINIUM',
      'SILICON',
      'PHOSPHORUS',
      'SULPHUR',
      'CHLORINE',
      'ARGON',
      'POTASSIUM',
      'CALCIUM',
      'SCANDIUM',
      'TITANIUM',
      'VANADIUM',
      'CHROMIUM',
      'MANGANESE',
      'IRON',
      'COBALT',
      'NICKEL',
      'COPPER',
      'ZINC',
      'GALLIUM',
      'GERMANIUM',
      'ARSENIC',
      'SELENIUM',
      'BROMINE',
      'KRYPTON',
      'RUBIDIUM',
      'STRONTIUM',
      'YTTRIUM',
      'ZIRCONIUM',
      'NIOBIUM',
      'MOLYBDENUM',
      'TECHNETIUM',
      'RUTHENIUM',
      'RHODIUM',
      'PALLADIUM',
      'SILVER',
      'CADMIUM',
      'INDIUM',
      'TIN',
      'ANTIMONY',
      'TELLURIUM',
      'IODINE',
      'XENON',
      'CAESIUM',
      'BARIUM',
      'LANTHANUM',
      'CERIUM',
      'PRASEODYMIUM',
      'NEODYMIUM',
      'PROMETHIUM',
      'SAMARIUM',
      'EUROPIUM',
      'GADOLINIUM',
      'TERBIUM',
      'DYSPROSIUM',
      'HOLMIUM',
      'ERBIUM',
      'THULIUM',
      'YTTERBIUM',
      'LUTETIUM',
      'HAFNIUM',
      'TANTALUM',
      'TUNGSTEN',
      'RHENIUM',
      'OSMIUM',
      'IRIDIUM',
      'PLATINUM',
      'GOLD',
      'MERCURY',
      'THALLIUM',
      'LEAD',
      'BISMUTH',
      'POLONIUM',
      'ASTATINE',
      'RADON',
      'FRANCIUM',
      'RADIUM',
      'ACTINIUM',
      'THORIUM',
      'PROTACTINIUM',
      'URANIUM',
      'NEPTUNIUM',
      'PLUTONIUM',
      'AMERICIUM',
      'CURIUM',
      'BERKELIUM',
      'CALIFORNIUM',
      'EINSTEINIUM',
      'FERMIUM',
      'MENDELEVIUM',
      'NOBELIUM',
      'LAWRENCIUM',
      'RUTHERFORDIUM',
      'DUBNIUM',
      'SEABORGIUM',
      'BOHRIUM',
      'HASSIUM',
      'MEITNERIUM',
      'DARMSTADTIUM',
      'ROENTGENIUM'];
  END_CONSTANT; 

  TYPE cs_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
    (Substance_view_definition);
  END_TYPE;

  TYPE substance_composition_basis = EXTENSIBLE ENUMERATION OF ( 
       VOLUME, 
       MASS, 
       MOLES, 
       ATOMS);      
  END_TYPE; 
 
  ENTITY Chemical_compound 
    SUBTYPE OF (Substance); 
	DERIVE
  		id_owner: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         QUERY(temp <* bag_to_set(USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')) |
                         (temp.role = 'id owner') );
  WHERE 
     WR1: SIZEOF([ 'chemical compound' ] * types_of_product(SELF))= 1 ; 
     WR2 : EXISTS (id_owner) AND (SIZEOF(id_owner) = 1);
  END_ENTITY; 
   
  ENTITY Chemical_element 
    SUBTYPE OF (Substance); 
  WHERE 
     WR1: SIZEOF([ 'chemical element' ] * types_of_product(SELF))= 1 ; 
  END_ENTITY; 
   
 
  ENTITY Physical_particle
    SUBTYPE OF (Substance);
  WHERE 
     WR1: SIZEOF([ 'physical particle' ] * types_of_product(SELF))= 1 ;
  END_ENTITY;

   ENTITY Raw_material_definition_relationship
      SUBTYPE OF (View_definition_usage);
     		SELF\View_definition_relationship.related_view RENAMED application : Part_view_definition;
     		SELF\View_definition_relationship.relating_view RENAMED definition : Substance_view_definition;  
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
   END_ENTITY;
   
  ENTITY Substance
    SUPERTYPE OF (ONEOF(Chemical_element, Chemical_compound, Physical_particle))
    SUBTYPE OF (Product);    
    UNIQUE 
      UR1: SELF\Product.id;
    WHERE 
      WR1: SIZEOF([ 'substance' ] * types_of_product(SELF))= 1 ; 
  END_ENTITY; 
   
  ENTITY Substance_composition_relationship 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.related_view RENAMED constituent : Substance_view_definition; 
      SELF\View_definition_relationship.relating_view RENAMED whole      : Substance_view_definition; 
      composition_basis                                                  : Substance_composition_basis;
      determination_method                                               : STRING; 
      amount 															 : Value_with_unit; 
    WHERE
      WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(amount.unit);      
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY; 

  ENTITY Substance_version 
    SUBTYPE OF (Product_version); 
    SELF\Product_version.of_product : Substance; 
  END_ENTITY; 
 
  
  ENTITY Substance_view_definition 
    SUBTYPE OF (Product_view_definition); 
    SELF\Product_view_definition.defined_version : Substance_version; 
  END_ENTITY; 

RULE substance_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE substance_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

RULE chemical_element_constraint FOR 
(Product);
WHERE
  WR1: SIZEOF ( QUERY ( p <* Product | 
               (('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND ((p\Product.name) IN chemical_elements) ) 
                OR
               (NOT('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND NOT((p\Product.name) IN chemical_elements) )
       )) =
       SIZEOF ( Product);
END_RULE; 

END_SCHEMA; 
(*
 $Id: arm.exp,v 1.8 2004/11/19 21:37:34 robbod Exp $
 ISO TC184/SC4/WG12 N3022 - ISO/TS 10303-1070 Class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2258
*) 


SCHEMA Class_arm;


ENTITY Class
  SUPERTYPE OF (ONEOF (Class_by_extension,
                       Class_by_intension));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;

ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;

END_SCHEMA;  -- Class_arm

(*
 $Id: arm.exp,v 1.6 2004/11/30 17:13:38 robbod Exp $
 ISO TC184/SC4/WG12 N3248 - ISO/TS 10303-1114 Classification assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2229
*)

SCHEMA Classification_assignment_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070


TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Classification_assignment_arm
(*
 $Id: arm.exp,v 1.17 2006/10/16 11:36:09 liutkus Exp $
 ISO TC184/SC4/WG12 N4272 - ISO/TS 10303-1111 Classification with attributes - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2616
*)

SCHEMA Classification_with_attributes_arm;

USE FROM Class_arm;

USE FROM Classification_assignment_arm;

USE FROM External_class_arm;

USE FROM Extended_measure_representation_arm;

USE FROM Plib_class_reference_arm;

USE FROM Product_identification_arm;

USE FROM Product_version_arm;

USE FROM Product_view_definition_arm;

USE FROM Independent_property_arm;

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	Product, 
	Product_version,
	Product_view_definition) ;
END_TYPE;

TYPE classified_element_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Product, 
	Product_version,
	Product_view_definition) ;
END_TYPE;

TYPE external_class_select = SELECT(Plib_class_reference, External_class);
END_TYPE;

TYPE definable_objects = SELECT (
	Product, 
	Product_version, 
	Product_view_definition);
END_TYPE;

ENTITY Class_with_attributes
SUBTYPE OF (Class);
  version_id: OPTIONAL STRING;
  used_classification_system: OPTIONAL Classification_system;
INVERSE
  characterization_attributes: SET[0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY;

ENTITY Class_hierarchy;
  super_class: Class_with_attributes;
  sub_class: Class_with_attributes;
END_ENTITY;

ENTITY Classification_association
SUBTYPE OF (Classification_assignment);
   SELF\Classification_assignment.assigned_class: Class_with_attributes;
   definitional: LOGICAL;
WHERE
WR1: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.DEFINABLE_OBJECTS' IN TYPEOF(it)) AND definitional ))=0;
WR2: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it)) )) =0;
END_ENTITY;

ENTITY Classification_attribute;
   id: STRING;
   name: OPTIONAL STRING;
   description: OPTIONAL STRING;
   allowed_values: OPTIONAL SET[1:?] OF Measure_item;
   characterized_class: Class_with_attributes;
   attribute_definition: Independent_property;
END_ENTITY;

ENTITY Classification_system;
  id: STRING;
  description: OPTIONAL STRING;
END_ENTITY;

ENTITY External_class_with_attributes
SUBTYPE OF (Class_with_attributes);
  source: external_class_select;
END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.4 2006/03/24 18:09:46 thendrix Exp $
ISO TC184/SC4/WG12 N4242 - ISO/TS 10303-1002 Colour - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N671
*) 


SCHEMA Colour_arm; 


ENTITY Colour;
  name : STRING;
END_ENTITY;

ENTITY Externally_defined_colour
  SUBTYPE OF (Colour);
  source : STRING;
END_ENTITY;

ENTITY Pre_defined_colour
  SUBTYPE OF (Colour);
WHERE
  WR1: SELF.name IN ['red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'];
END_ENTITY;

ENTITY User_defined_colour
  SUBTYPE OF (Colour);
  red : REAL;
  green : REAL;
  blue : REAL;
WHERE
  WR1: {0.0 <= red <= 1.0};
  WR2: {0.0 <= green <= 1.0};
  WR3: {0.0 <= blue <= 1.0};
END_ENTITY;

END_SCHEMA;  -- Colour_arm
(*
   $Id: arm.exp,v 1.25 2006/04/18 13:05:39 liutkus Exp $
   ISO TC184/SC4/WG12 N3918 - ISO/TS 10303-1657 Component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3324
*)

SCHEMA Component_feature_arm;

	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728

	TYPE cf_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Component_feature);
	END_TYPE; 

	TYPE feature_select = EXTENSIBLE GENERIC_ENTITY SELECT
		(Part_feature);
	END_TYPE;

  ENTITY Component_feature
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Shape_element);
      definition           : OPTIONAL feature_select;
      SELF\Shape_element.containing_shape RENAMED associated_component : Assembly_component;
      SELF\Shape_element.element_name : STRING;
    UNIQUE
      UR1 : definition,associated_component;
      UR2 : SELF\Shape_element.element_name, associated_component;
  END_ENTITY;

  ENTITY Component_feature_joint
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature_relationship, Shape_element);
    SELF\Shape_element.element_name : STRING;
    SELF\Shape_element_relationship.relating RENAMED feature_1 : Component_feature;
    SELF\Shape_element_relationship.related RENAMED feature_2 : Component_feature;
    SELF\Shape_element.containing_shape RENAMED associated_definition : Item_shape;
    WHERE
      WR1 : feature_1 <> feature_2;
      WR2 : 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' in TYPEOF(associated_definition);
      WR3 : SELF\Shape_element.containing_shape\Item_shape.described_element = feature_1\Shape_element.containing_shape\Item_shape.described_element;      
  END_ENTITY;

  ENTITY Component_feature_make_from_relationship
		SUBTYPE OF (Component_feature_relationship);
      SELF\Shape_element_relationship.relating RENAMED reusable_feature	: Component_feature;
      SELF\Shape_element_relationship.related RENAMED resultant_feature	: Component_feature;
  END_ENTITY;

  ENTITY Component_feature_relationship
    SUPERTYPE OF (ONEOF(Component_feature_joint,
      Component_feature_make_from_relationship))
  	SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Component_feature;  	
      SELF\Shape_element_relationship.related  : Component_feature;
  END_ENTITY;

  ENTITY Component_feature_to_physical_usage_view_assignment;
      defined_part_feature   : Part_feature;
      assigned_design_object : Component_feature;
    UNIQUE 
    	UR1 : assigned_design_object;
    	UR2 : defined_part_feature;
  END_ENTITY;

  ENTITY Component_terminal
    SUBTYPE OF (Component_feature);
      local_swappable  : OPTIONAL BOOLEAN;
      global_swappable : OPTIONAL BOOLEAN;
      swap_code        : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.15 2006/02/02 05:39:14 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3915 - ISO/TS 10303-1656 Component grouping - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3327
*)

SCHEMA Component_grouping_arm;

	USE FROM Interface_component_arm;	-- ISO/TS 10303-1691
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
	
  ENTITY Array_placement_group
    ABSTRACT SUPERTYPE OF(ONEOF (Linear_array_placement_group_component,
		Rectangular_array_placement_group_component))
    SUBTYPE OF (Assembly_group_component);
  END_ENTITY;

  ENTITY Assembly_component_placement_link;
      precedent_element  : Assembly_component;
      subsequent_element : Assembly_component;
    INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_assembly_component_placement_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.ASSEMBLY_COMPONENT_PLACEMENT_LINK');
  END_ENTITY;
      
  ENTITY Assembly_group_component
    SUBTYPE OF (Assembly_component);
    INVERSE
      components : SET[1:?] OF next_assembly_usage FOR relating_view;
    WHERE
      WR1: components[1].relation_type = 'group component';
      WR2: SIZEOF(QUERY(co <* components | NOT(('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT') IN TYPEOF(co\View_definition_relationship.related_view)))) = 0;
  END_ENTITY;

  ENTITY Interfaced_group_component
    SUBTYPE OF (Assembly_group_component);
      group_interface_component : SET[1:?] OF Interface_component;
  END_ENTITY;

  ENTITY Linear_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                               : SET[1:?] OF Assembly_component_placement_link;
      initial_node_positive_x_displacement  : Length_data_element;
      terminus_node_positive_x_displacement : Length_data_element;
      location_uncertainty                  : Length_data_element;
    WHERE  
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_ac(element);
  END_ENTITY;

  ENTITY Linear_array_placement_group_component_link;
      precedent_element  : Linear_array_placement_group_component;
      subsequent_element : Linear_array_placement_group_component;
    INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_linear_array_placement_group_component_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK');
  END_ENTITY;

  ENTITY Rectangular_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                              : SET[1:?] OF Linear_array_placement_group_component_link;
      initial_row_positive_y_displacement  : Length_data_element;
      terminus_row_positive_y_displacement : Length_data_element;
      location_uncertainty                 : Length_data_element;
    WHERE
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_lapgc(element);
  END_ENTITY;

FUNCTION acyclic_assembly_component_placement_link
  (relation : Assembly_component_placement_link; relatives : SET[1:?] OF
  Assembly_component; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Assembly_component_placement_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
        'COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' +
        'subsequent_element')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_assembly_component_placement_link(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION acyclic_linear_array_placement_group_component_link
  (relation : Linear_array_placement_group_component_link; relatives :
  SET[1:?] OF Linear_array_placement_group_component; specific_relation : STRING): BOOLEAN; 
LOCAL
      x : SET OF Linear_array_placement_group_component_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
       'COMPONENT_GROUPING_ARM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' + 'SUBSEQUENT_ELEMENT'))
       | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_linear_array_placement_group_component_link(x[i], relatives
        + relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION cg_get_sz_ac (input : SET[1:?] OF Assembly_component_placement_link) : INTEGER;
LOCAL
    ac : SET OF Assembly_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac + input[i]\Assembly_component_placement_link.precedent_element +
      input[i]\Assembly_component_placement_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

FUNCTION cg_get_sz_lapgc (input : SET[1:?] OF Linear_array_placement_group_component_link) : INTEGER;
LOCAL
  ac : SET OF Linear_array_placement_group_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
        input[i]\Linear_array_placement_group_component_link.precedent_element +
        input[i]\Linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.27 2006/01/31 07:41:16 liutkus Exp $
   ISO TC184/SC4/WG12 N4215 - ISO/TS 10303-1756 Conductivity material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3654
*)

SCHEMA Conductivity_material_aspects_arm;

	USE FROM Classification_assignment_arm;	-- ISO/TS 10303-1114
	USE FROM Generic_material_aspects_arm;	-- ISO/TS 10303-1681
	USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE cma_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
		(Material_identification_with_conductivity_classification);
	END_TYPE;

	TYPE cma_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Part_view_definition);
	END_TYPE;

	SUBTYPE_CONSTRAINT cma_class_subtypes FOR Class; 
	    (ONEOF (Conductivity_material_property_class,
		 Relative_permeability_material_property_class,
		 Relative_optical_insertion_loss_material_property_class,
		 Relative_permittivity_material_property_class));
	END_SUBTYPE_CONSTRAINT;

	
 ENTITY Conductivity_material_property_class
	ABSTRACT SUPERTYPE OF (ONEOF (Material_electrical_conductivity_class, 
		Material_thermal_conductivity_class))
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['conductive', 'non conductive', 'resistive', 'semi conductive', 'super conductive'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_permeability_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['free space permeabilty', 'low permeability', 'medium permeability', 'highly permeable'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_optical_insertion_loss_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['vacuum', 'very low loss', 'low loss', 'medium loss', 'high loss'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

 ENTITY Relative_permittivity_material_property_class
  SUBTYPE OF (Class);
  WHERE
	WR1: SELF\Class.name IN 
       ['vacuum permittivity', 'low permittivity', 'medium permittivity', 'high permittivity'];
    WR2: NOT EXISTS(SELF\Class.description);
 END_ENTITY;

ENTITY Material_electrical_conductivity_class
  SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY;

ENTITY Material_thermal_conductivity_class
  SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY;

 ENTITY Material_identification_with_conductivity_classification
  SUBTYPE OF (Material_identification);
  DERIVE
    electrical_conductivity_classification : STRING := get_cond_class(SELF,'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS');
    magnetic_permeability_classification   : STRING := get_cond_class(SELF,'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS');
    optical_insertion_loss_classification  : STRING := get_cond_class(SELF,'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS');
    thermal_conductivity_classification    : STRING := get_cond_class(SELF,'MATERIAL_THERMAL_CONDUCTIVITY_CLASS');
    dielectric_permittivity_classification : STRING := get_cond_class(SELF,'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS');
  WHERE 	
  	WR1: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS' IN TYPEOF (ca.assigned_class)))) = 1);
  	WR2: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'MATERIAL_THERMAL_CONDUCTIVITY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR3: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR4: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
  	WR5: (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS' IN TYPEOF (ca.assigned_class)))) <= 1);
 END_ENTITY;
 
 FUNCTION get_cond_class(input1 : Material_identification_with_conductivity_classification;
                         input2 : STRING) : STRING;
 LOCAL
  car : SET OF Classification_assignment := [];
 END_LOCAL;
  car := QUERY(ca <* bag_to_set(USEDIN(input1,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')) |
	 	('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+
	 	input2 IN TYPEOF (ca.assigned_class)));
 IF SIZEOF(car) = 1
  THEN
    RETURN(car[1].assigned_class\class.name);
  ELSE
    RETURN('?');
 END_IF;
 END_FUNCTION;
 
 END_SCHEMA;
(*
$Id: arm.exp,v 1.12 2005/06/02 20:42:26 thendrix Exp $
ISO TC184/SC4/WG12 N2949 - ISO/TS 10303-1058 Configuration effectivity - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2518
*) 

SCHEMA Configuration_effectivity_arm;

USE FROM Configuration_item_arm;    -- ISO/CD-TS 10303-1056

USE FROM Effectivity_arm;    -- ISO/TS 10303-1057

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041


ENTITY Item_usage_effectivity;
  effectivity_domain : Effectivity;
  item_usage_relationship : View_definition_usage;
  resolved_configuration : Item_design_association;
END_ENTITY;

END_SCHEMA;  -- Configuration_effectivity_arm




(*
 $Id: arm.exp,v 1.8 2004/02/25 16:07:46 robbod Exp $
 ISO TC184/SC4/WG12 N2532 - ISO/TS 10303-1056 Configuration item - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2482
*) 


SCHEMA Configuration_item_arm;

USE FROM Product_concept_identification_arm;    -- ISO/TS 10303-1060

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;

ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;

END_SCHEMA;  -- Configuration_item_arm

(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N3921 - ISO/TS 10303-1658 Connectivity allocation to physical network - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3375
*)

SCHEMA Connectivity_allocation_to_physical_network_arm;

	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_arm;	-- ISO/TS 10303-1678
	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

  ENTITY Connectivity_allocation_to_physical_network;
      implementation           : Generic_physical_network;
      connectivity_requirement : Aggregate_connectivity_requirement;
    UNIQUE
      UR1 : implementation;
  END_ENTITY;

END_SCHEMA;  
(*
$Id: arm.exp,v 1.12 2006/03/24 19:22:09 thendrix Exp $
ISO TC184/SC4/WG12 N4281 - ISO/TS 10303-1131 Construction geometry - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2867
*) 


SCHEMA Construction_geometry_arm;

USE FROM Basic_curve_arm;    -- ISO/TS 10303-1651

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

TYPE constructive_geometry_select = SELECT
   (Constructive_geometry, 
    Geometric_model);
END_TYPE; 

ENTITY Constructive_geometry
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_coordinate_space;
WHERE
  WR1: SIZEOF(SELF\Representation.items) = SIZEOF(QUERY (it <* SELF\Representation.items | 'CONSTRUCTION_GEOMETRY_ARM.CONSTRUCTIVE_ELEMENT_SELECT' IN TYPEOF(it)));
END_ENTITY;

ENTITY Constructive_geometry_association;
  auxiliary_geometry : Constructive_geometry;
  base_geometry : constructive_geometry_select;
  description : STRING;
WHERE
  WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
END_ENTITY;

END_SCHEMA;  -- Construction_geometry_arm
(*
   $Id: arm.exp,v 1.8 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4140 - ISO/TS 10303-1731 Constructive solid geometry 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3330
*) 
SCHEMA Constructive_solid_geometry_2d_arm;
 
	USE FROM Elemental_geometric_shape_arm;	-- ISO/TS 10303-1004
	
ENTITY Csg_2d_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;

 ENTITY Single_area_csg_2d_model
    SUBTYPE OF (Csg_2d_model);
 END_ENTITY;

 ENTITY Single_boundary_csg_2d_model
    SUBTYPE OF (Single_area_csg_2d_model);
--  WHERE
--    WR: only one outline (no holes)
  END_ENTITY;

END_SCHEMA;  -- Constructive_solid_geometry_2d_arm
(*
   $Id: arm.exp,v 1.5 2006/03/24 18:27:55 thendrix Exp $
   ISO TC184/SC4/WG12 N4251 - ISO/TS 10303-1027 Contextual shape positioning - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N1138
*) 

SCHEMA Contextual_shape_positioning_arm;

--USE FROM Elemental_geometric_shape_arm;    --  ISO/TS 10303-1004
USE FROM Extended_basic_geometry_arm; -- ISO/TS 10303-1667
USE FROM Foundation_representation_arm;    --  ISO/TS 10303-1006
USE FROM Shape_property_assignment_arm;    --  ISO/TS 10303-1032


TYPE template_instance = SELECT
   (Geometric_placement_operation, 
    Geometric_model_relationship_with_transformation);
END_TYPE; 

TYPE template_definition_select = EXTENSIBLE SELECT (Geometric_model);
-- not sure on Styled_model
END_TYPE; 

ENTITY Contextual_shape_representation;
   contextual_shape : Contextual_item_shape;
   representing_relationship : Geometric_model_relationship;
 DERIVE
   context_representation : Geometric_model := representing_relationship.rep_2 ;
   positioned_representation : Geometric_model := representing_relationship.rep_1 ;
END_ENTITY;

ENTITY Geometric_composition_with_operator_transformation
  SUBTYPE OF (Geometric_relationship_with_operator_transformation,
Definitional_representation_relationship);
END_ENTITY;

ENTITY Geometric_composition_with_placement_transformation
  SUBTYPE OF (Geometric_relationship_with_placement_transformation,
Definitional_representation_relationship);
END_ENTITY; 

ENTITY Geometric_placement
  SUBTYPE OF (Geometric_placement_operation);
   target : Axis_placement;
END_ENTITY; 

ENTITY Geometric_placement_model
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
END_ENTITY;

ENTITY Geometric_placement_operation
  ABSTRACT SUPERTYPE OF ( ONEOF (Geometric_placement,
    Geometric_operator_transformation))
  SUBTYPE OF (Detailed_geometric_model_element);
   source : Axis_placement;  
   template_definition : template_definition_select;
END_ENTITY; 

ENTITY Geometric_model_relationship_with_transformation
  ABSTRACT SUPERTYPE OF (ONEOF (Geometric_relationship_with_placement_transformation,
Geometric_relationship_with_operator_transformation))
  SUBTYPE OF (Geometric_model_relationship);
WHERE  
  WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
END_ENTITY;
-- wr1: both Geometric_representations must belong to different geometric contexts

ENTITY Geometric_operator_transformation
  SUBTYPE OF (Geometric_placement_operation);
   target : cartesian_transformation;
END_ENTITY; 

ENTITY Geometric_relationship_with_operator_transformation
  SUBTYPE OF (Geometric_model_relationship_with_transformation);
  transformation: cartesian_transformation;
WHERE
  WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
END_ENTITY;
-- wr1: both geometric_representations must have the same dimensionality.

ENTITY Geometric_relationship_with_placement_transformation
  SUBTYPE OF (Geometric_model_relationship_with_transformation);
  transformation: Axis_placement_mapping;
WHERE
  WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
END_ENTITY;
-- wr1: both geometric_representations must have the same dimensionality.
-- Note: case that target is a cartesian_transformation is not supported here
-- since this is already covered in
-- Geometric_inclusion_with_cartesian_transformation

ENTITY Shape_placement_association
  SUBTYPE OF (Shape_description_association);
  SELF\Shape_description_association.representation : Geometric_placement_model;
  SELF\Shape_description_association.represented_characteristic : Contextual_item_shape;
END_ENTITY;

END_SCHEMA;  -- Contextual_shape_positioning_arm

(*
 $Id: arm.exp,v 1.13 2004/10/21 15:46:07 darla Exp $
 ISO TC184/SC4/WG12 N1126 - ISO/TS 10303-1062 Contract - EXPRESS ARM
*)   
SCHEMA Contract_arm;

   
TYPE contract_item = EXTENSIBLE SELECT;
END_TYPE;

ENTITY Contract;
  id             : STRING;
  purpose        : STRING;
  kind	     : STRING;
END_ENTITY;
   
ENTITY Contract_assignment;
  assigned_contract  : Contract;
  items              : SET [1:?] OF contract_item;
END_ENTITY;

   
END_SCHEMA;

(*
   $Id: arm.exp,v 1.8 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3924 - ISO/TS 10303-1659 Curve swept solid - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3333
*)

SCHEMA Curve_swept_solid_arm;

USE FROM Elemental_geometric_shape_arm;    --  ISO/TS 10303-1004

ENTITY Curve_swept_solid
   SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.9 2004/10/28 16:57:14 darla Exp $
 ISO TC184/SC4/WG12 N2913 - ISO/TS 10303-1010 Date time - EXPRESS ARM
*) 


SCHEMA Date_time_arm;


TYPE date_or_date_time_select = SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 

TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 

TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 

TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 

TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 

TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 

TYPE year_number = INTEGER;
END_TYPE; 

ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;

ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;

ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;

ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;

END_SCHEMA;  -- Date_time_arm
(*
 $Id: arm.exp,v 1.9 2004/10/21 16:33:53 darla Exp $
 ISO TC184/SC4/WG12 N1093 - ISO/TS 10303-1014 Date time assignment - EXPRESS ARM
*)
SCHEMA Date_time_assignment_arm;

USE FROM Date_time_arm; -- ISO/TS 10303-1010

   
TYPE date_or_date_time_item = EXTENSIBLE SELECT;
END_TYPE;
   
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
  
END_SCHEMA;

(*
   $Id: arm.exp,v 1.12 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3927 - ISO/TS 10303-1660 Datum difference based model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3384
*)

SCHEMA Datum_difference_based_model_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

	SUBTYPE_CONSTRAINT ddbm_model_parameter_subtypes FOR Model_parameter; 
		ONEOF (Datum_difference_based_model_parameter,
	 	Schema_based_model_parameter);
	END_SUBTYPE_CONSTRAINT;

  ENTITY Datum_difference_based_model_parameter
    SUBTYPE OF (Model_parameter);
      of_datum_difference : Datum_difference;
  END_ENTITY;

  ENTITY Datum_difference_functional_unit_usage_view_terminal_assignment;
      assigned_functional_terminal_definition : Functional_unit_usage_view_terminal_definition;
      assigned_datum_difference               : Datum_difference;
  END_ENTITY;

END_SCHEMA;
(*  
$Id: arm.exp,v 1.9 2006/03/24 18:40:52 thendrix Exp $ 
ISO TC184/SC4/WG12 N4260 - ISO/TS 10303-1052 Default tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2870
*) 


SCHEMA Default_tolerance_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032


TYPE cell_entry_select = SELECT
   (Plus_minus_toleranced_datum, 
    Upper_lower_toleranced_datum);
END_TYPE; 

TYPE default_context_select = SELECT
   (Item_shape);
END_TYPE; 

TYPE default_setting_select = EXTENSIBLE SELECT
   (General_tolerances);
END_TYPE; 

TYPE general_tolerance_table_select = EXTENSIBLE SELECT
   (General_tolerance_table);
END_TYPE; 

TYPE limit_select = SELECT
   (Significant_number_of_digits, 
    Upper_lower_limit);
END_TYPE; 

ENTITY Default_setting_association;
  default_value : SET[0:?] OF default_setting_select;
  default_context : default_context_select;
END_ENTITY;

ENTITY General_tolerance_table;
  tolerance_type : STRING;
INVERSE
  cell : SET[1:?] OF Tolerance_table_cell FOR tolerance_table;
END_ENTITY;

ENTITY General_tolerances;
  table_definition : general_tolerance_table_select;
  tolerance_class : STRING;
END_ENTITY;

ENTITY Plus_minus_toleranced_datum;
  tolerance_value : Numerical_item_with_unit;
END_ENTITY;

ENTITY Significant_number_of_digits;
  number_of_digits : STRING;
END_ENTITY;

ENTITY Tolerance_table_cell;
  cell_value : cell_entry_select;
  description : STRING;
  limit : limit_select;
  tolerance_class : STRING;
  tolerance_table : General_tolerance_table;
END_ENTITY;

ENTITY Upper_lower_limit;
  upper_limit : Numerical_item_with_unit;
  lower_limit : Numerical_item_with_unit;
END_ENTITY;

ENTITY Upper_lower_toleranced_datum;
  lower_tolerance_value : Numerical_item_with_unit;
  upper_tolerance_value : Numerical_item_with_unit;
END_ENTITY;

END_SCHEMA;  -- Default_tolerance_arm
(* 
$Id: arm.exp,v 1.7 2006/03/24 18:41:48 thendrix Exp $  
ISO TC184/SC4/WG12 N4278 - ISO/TS 10303-1130 Derived shape element - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2864
*) 


SCHEMA Derived_shape_element_arm;

USE FROM Basic_geometry_arm;    

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Derived_geometry;
  derived_from : SET[1:?] OF Shape_element;
  geometry : constructive_element_select;
  role : STRING;
END_ENTITY;

ENTITY Derived_shape_element
  SUBTYPE OF (Shape_element);
  derived_from : SET[1:?] OF Shape_element;
  SELF\Shape_element.description RENAMED role : STRING;
END_ENTITY;

ENTITY Offset_shape_element
  SUBTYPE OF (Derived_shape_element);
  offset : Value_with_unit;
END_ENTITY;

END_SCHEMA;  -- Derived_shape_element_arm
(*
   $Id: arm.exp,v 1.20 2006/10/23 22:13:32 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3930 - ISO/TS 10303-1661 Design management - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3387
*)

SCHEMA Design_management_arm;

	USE FROM Approval_arm;	-- ISO/TS 10303-1012
	USE FROM Product_view_definition_arm;	-- ISO/TS 10303-1019
	USE FROM Work_order_arm;	-- ISO/TS 10303-1043

    TYPE dm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH
   		(Frozen_assignment);
    END_TYPE;

    TYPE managed_design_object = EXTENSIBLE GENERIC_ENTITY SELECT
    (Product_view_definition);
    END_TYPE;

  	ENTITY Add_design_object_management_relationship
      SUBTYPE OF (Design_object_management_relationship);
    	current_design_object : managed_design_object;
      UNIQUE
        UR1 : current_design_object;
	END_ENTITY;

  	ENTITY Change_design_object_management_relationship
      SUBTYPE OF (Design_object_management_relationship);
    	current_design_object  : managed_design_object;
      	previous_design_object : OPTIONAL managed_design_object;
      	attribute_name : OPTIONAL STRING;
      WHERE
      	WR1: TYPEOF(current_design_object) = TYPEOF(previous_design_object);
       	WR2: current_design_object <> previous_design_object;
  	END_ENTITY;

  	ENTITY Delete_design_object_management_relationship
      SUBTYPE OF (Design_object_management_relationship);
      	previous_design_object : managed_design_object;
      UNIQUE
      	UR1 : previous_design_object;
  	END_ENTITY;

  	ENTITY Design_object_management_relationship
   	  ABSTRACT SUPERTYPE OF (ONEOF
		(Change_design_object_management_relationship,
       	Delete_design_object_management_relationship,
		Add_design_object_management_relationship)ANDOR
		(View_dependent_design_object_management_relationship))
      SUBTYPE OF (Activity);
      WHERE
        WR1 : NOT EXISTS(SELF\Activity.name);
  	END_ENTITY;


  	ENTITY Frozen_assignment;
    	frozen_item       : SET[1:?] OF managed_design_object;
    INVERSE
      assigned_approval : SET [1:1] OF Approval_assignment FOR items;
  	END_ENTITY;

  	ENTITY View_dependent_design_object_management_relationship
      SUBTYPE OF (Design_object_management_relationship);
      	previous_design : Product_view_definition;
      	current_design  : Product_view_definition;
  	END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.16 2006/10/20 04:43:16 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3837 - ISO/TS 10303-1628 Design product data management - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3348
*)

SCHEMA Design_product_data_management_arm;

	USE FROM Product_data_management_arm;	-- ISO/TS 10303-1231
	USE FROM Classification_with_attributes_arm;	-- ISO/TS 10303-1111
	USE FROM Generic_material_aspects_arm;	-- ISO/TS 10303-1681
	USE FROM Group_arm;	-- ISO/TS 10303-1113
	USE FROM Part_occurrence_arm;	-- ISO/TS 10303-1715
	USE FROM Pre_defined_product_data_management_specializations_arm; -- ISO/TS 10303-1760
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
	USE FROM Requirement_view_definition_relationship_arm;	-- ISO/TS 10303-1142
	USE FROM Test_select_product_arm;	-- ISO/TS 10303-1757
	USE FROM Activity_method_assignment_arm;    -- ISO/TS 10303-1249
	USE FROM Attribute_classification_arm; -- ISO/TS 10303-1246

TYPE design_activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON
activity_method_item WITH (
          Document,
          Document_version);
END_TYPE;

TYPE design_pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_affected_item_select WITH 
   (Work_request);  -- ??? check this if really needed
END_TYPE; 

TYPE design_pdm_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH 
   (Group,
   Group_relationship,
   Product,
   Product_view_definition);
END_TYPE; 

TYPE design_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_approval_item WITH 
   (Certification,
   Document_definition,
   Effectivity,
   Group,
   Group_relationship,
   Independent_property_relationship, 
   Product_configuration,
   Product_version,
   Product_view_definition,
   Requirement_assignment,
   Security_classification,
   Supplied_part_relationship,
   Work_order);
END_TYPE;


TYPE design_pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_certification_item WITH 
   (Alternate_product_relationship,
   Product_version);
END_TYPE; 

TYPE design_pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (definable_objects,
    classified_element_select,
    Characterizable_object);
END_TYPE; 

TYPE design_pdm_classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classified_attribute_select WITH (
	Activity,
	Activity_method,
	Activity_method_assignment,
	Activity_property,
	Activity_property_representation,
	Activity_relationship,
	Address_assignment,
	Affected_items_assignment,
	Alternate_part_relationship,
	Applied_activity_assignment,
	Approval,
	Approval_assignment,
	Approval_relationship,
	Approval_status,
	Approving_person_organization,
	Assigned_property,
	Certification,
	Certification_assignment,
	Context_dependent_unit,
	Contract,
	Date_or_date_time_assignment,
	Descriptive_document_property,
	Digital_file,
	Document_assignment,
	Document_definition_relationship,
	Document_location_identification,
	Document_property_representation,
	Effectivity,
	Effectivity_assignment,
	Event_assignment,
	Event_relationship,
	External_item_identification,
	External_source_identification,
	File_location_identification,
	File_relationship,
    Group,
    Group_relationship,
	Hardcopy,
	Identification_assignment,
	Independent_property,
	Independent_property_relationship,
	Independent_property_representation,
	Language,
	Market,
	Numerical_document_property,
	Organization_or_person_in_organization_assignment,
	Organization_relationship,
	Part_view_definition,
	Partial_document_assignment,
	Person_in_organization,
	Product,
	Product_category,
	Product_concept,
	Product_version,
	Product_version_relationship,
	Product_view_definition,
	Project_assignment,
	Project_relationship,
	Property_representation,
	Representation,
	Representation_context,
	Representation_item,
	Security_classification,
	Time_interval_relationship,
	Uncertainty_with_unit,
	Unit,
	Value_with_unit,
	View_definition_context,
	View_definition_relationship,
	Work_order,
	Work_request,
	Work_request_status);
END_TYPE;

TYPE design_pdm_contract_item = EXTENSIBLE SELECT BASED_ON contract_item WITH 
   (organization_or_person_in_organization_select,
   Product_version,
   Work_order);
END_TYPE;

TYPE design_pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_date_or_date_time_item WITH 
   (Contract,
    Document_definition,
    Product_view_definition,
    Security_classification,
    Work_order);
END_TYPE; 

TYPE design_pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_documented_element_select WITH 
   (Class_with_attributes,
    External_item_identification,
    Group,
    Group_relationship,
    Material_identification,
    Product_category,
    Product_view_definition,
    Representation_item);
END_TYPE; 

TYPE design_pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_identification_item WITH 
   (Group,
    Group_relationship,
    Material_identification,
    Organization,   
    Product,
    Product_category,
    Product_configuration,
    Product_concept,
    Product_version);
END_TYPE; 

TYPE design_pdm_groupable_item = SELECT BASED_ON groupable_item WITH 
   (Group_relationship);
END_TYPE; 

TYPE design_pdm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
   (Part_view_definition);
END_TYPE;

TYPE design_pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Alias_identification,
    Classification_assignment,
    Classification_association,
    Document_definition,
    Supplied_part_relationship,
    Work_order);
END_TYPE; 

TYPE design_pdm_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Product_configuration,
    Product_class,
    Product_view_definition,
    Product_version,
    Product,
    View_definition_relationship);
END_TYPE; 

TYPE design_pdm_requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_source_item WITH 
   (Group,
    Group_relationship,
    Product_view_definition,
    Product_version,
    Product,
    Shape_element,
    Characterizable_object,
    View_definition_relationship);
END_TYPE; 

TYPE design_pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_security_classification_item WITH 
   (Document_definition,
    Product_version,
    Product_view_definition,
    Promissory_usage);
END_TYPE; 

RULE unique_document_id FOR
    (Document);
WHERE
  WR1:  SIZEOF(QUERY (p1 <* Document | SIZEOF(QUERY (p2 <* Document | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
END_RULE;

RULE unique_part_id FOR
    (Part);
WHERE
  WR1:  SIZEOF(QUERY (p1 <* Part | SIZEOF(QUERY (p2 <* Part | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
END_RULE;

RULE unique_requirement_id FOR
    (Requirement);
WHERE
  WR1:  SIZEOF(QUERY (p1 <* Requirement | SIZEOF(QUERY (p2 <* Requirement | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
END_RULE;

RULE unique_product_version_id FOR
    (Product);
WHERE
  WR1:  SIZEOF(QUERY (p <* Product | 
   (SIZEOF (QUERY (pv1 <*
USEDIN(p,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VERSION.OF_PRODUCT') |  
   (SIZEOF (QUERY (pv2 <*
USEDIN(p,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VERSION.OF_PRODUCT')
|  pv1.id = pv2.id)) > 1)
     )) > 0)
   )) = 0;  
END_RULE;

RULE unique_product_view_definition_id FOR
    (Product_version);
WHERE
  WR1:  SIZEOF(QUERY (pv <* Product_version | 
   (SIZEOF (QUERY (pvd1 <*
USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |  
     (SIZEOF (QUERY (pvd2 <*
USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')
|  pvd1.id = pvd2.id)) > 1)
     )) > 0)
   )) = 0;  
END_RULE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.15 2006/04/05 03:03:58 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3933 - ISO/TS 10303-1662 Design specific assignment to assembly usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3390
*)

SCHEMA Design_specific_assignment_to_assembly_usage_view_arm;

	USE FROM Assembly_module_with_interconnect_component_arm;	-- ISO/TS 10303-1643
	USE FROM Assembly_module_with_subassembly_arm;	-- ISO/TS 10303-1641

	SUBTYPE_CONSTRAINT dsatauv_component_feature_to_physical_usage_view_assignment_subtypes FOR Component_feature_to_physical_usage_view_assignment;     
		ONEOF (Component_terminal_to_assembly_module_interface_terminal_assignment,
		 Component_terminal_to_pca_terminal_assignment);
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT dsatauv_physical_component_terminal_subtypes FOR Physical_component_terminal; 
		(ONEOF (Assembly_module_component_terminal,
		 Bare_die_component_terminal,
		 Interconnect_component_join_terminal,
		 Interconnect_module_component_terminal,
		 Minimally_defined_component_terminal,
		 Packaged_component_join_terminal));
	END_SUBTYPE_CONSTRAINT;

	TYPE pca_interface_select = SELECT
	    (Interconnect_module_component_terminal,
	     Physical_component_interface_terminal,
	     Assembly_module_component_terminal);
  	END_TYPE;
 
  ENTITY Component_terminal_to_assembly_module_interface_terminal_assignment
    SUBTYPE OF (Component_feature_to_physical_usage_view_assignment);
    SELF\Component_feature_to_physical_usage_view_assignment.defined_part_feature RENAMED usage_view_terminal : Assembly_module_interface_terminal;
    SELF\Component_feature_to_physical_usage_view_assignment.assigned_design_object RENAMED assigned_terminal : pca_interface_select;
    UNIQUE
      UR1 : usage_view_terminal;
  END_ENTITY;

  ENTITY Component_terminal_to_pca_terminal_assignment
    SUBTYPE OF (Component_feature_to_physical_usage_view_assignment);
    	SELF\Component_feature_to_physical_usage_view_assignment.defined_part_feature RENAMED usage_view_terminal : Pca_terminal;
    	SELF\Component_feature_to_physical_usage_view_assignment.assigned_design_object RENAMED assigned_terminal : pca_interface_select;
    UNIQUE
      UR1 : usage_view_terminal;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.22 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3936 - ISO/TS 10303-1663 Design specific assignment to interconnect usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3393
*)

SCHEMA Design_specific_assignment_to_interconnect_usage_view_arm;

	USE FROM Fabrication_joint_arm;	-- ISO/TS 10303-1668

	SUBTYPE_CONSTRAINT dsatiuv_component_feature_to_physical_usage_view_assignment_subtypes FOR Component_feature_to_physical_usage_view_assignment;     
		ONEOF (Component_terminal_to_interconnect_module_macro_terminal_assignment,
		 Component_terminal_to_interconnect_module_interface_terminal_assignment);
	END_SUBTYPE_CONSTRAINT;

 	TYPE interconnect_or_assembly_module_select = SELECT
 		(Component_termination_passage_interface_terminal,
     	Printed_connector_component_interface_terminal,
     	Land_interface_terminal);
	END_TYPE;

  ENTITY Component_terminal_to_interconnect_module_interface_terminal_assignment
    SUBTYPE OF (Component_feature_to_physical_usage_view_assignment);
      SELF\Component_feature_to_physical_usage_view_assignment.defined_part_feature RENAMED usage_view_terminal	: Interconnect_module_interface_terminal;
      SELF\Component_feature_to_physical_usage_view_assignment.assigned_design_object RENAMED assigned_terminal	: interconnect_or_assembly_module_select;
  END_ENTITY;

  ENTITY Component_terminal_to_interconnect_module_macro_terminal_assignment
    SUBTYPE OF (Component_feature_to_physical_usage_view_assignment);
      SELF\Component_feature_to_physical_usage_view_assignment.defined_part_feature RENAMED usage_view_terminal : Interconnect_module_macro_terminal;
      SELF\Component_feature_to_physical_usage_view_assignment.assigned_design_object RENAMED assigned_terminal	: fabricated_feature_select;
  END_ENTITY;

  ENTITY Stratum_concept_to_physical_usage_view_assignment;
      assigned_design_object : stratum_concept;
      defined_part_feature   : Part_feature;
      purpose                : OPTIONAL STRING; 
    UNIQUE
    	UR1 : defined_part_feature;
    WHERE
      WR1 : NOT ('DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.INTERCONNECT_MODULE_TERMINAL' IN TYPEOF(defined_part_feature));
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.29 2006/11/03 17:27:49 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3939 - ISO/TS 10303-1664 Device marking - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3396
*)

SCHEMA Device_marking_arm;

    USE FROM Approval_arm; -- ISO/TS 10303-1012
	USE FROM Part_template_2d_shape_arm;	-- ISO/TS 10303-1716
	USE FROM Part_template_non_planar_shape_arm;	-- ISO/TS 10303-1719
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726
	
REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE dm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Marking);
	END_TYPE;

	TYPE dm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Marking);
	END_TYPE; 

  TYPE marked_message_select = SELECT
    (Configuration_controlled_message,
     Text_representation_item);
  END_TYPE;

TYPE marking_shape_select = SELECT
    (Part_template_3d_shape_model,
     Physical_unit_3d_shape_model,
     Part_template_non_planar_2d_shape_model,
     Part_template_planar_shape_model,
     Physical_unit_planar_shape_model);
END_TYPE;

  	TYPE message_source_select = SELECT
      	(Organization,
		Approval,
     	Product_version);
	END_TYPE;

  TYPE message_type = ENUMERATION OF
    (part_number,
     manufacturer_code,
     revision_identifier,
     approval_date);
  END_TYPE;
    
  ENTITY Configuration_controlled_message;
      message_source             : message_source_select;
      message_content            : STRING;
      message_type_specification : message_type;
  END_ENTITY;

  ENTITY Marking;
      marked_message              : marked_message_select;
      marked_device_shape         : marking_shape_select;
      placement                   : Axis_placement;
      message_representation      : Geometric_model;
      message_representation_text : Text_literal_with_extent;
	DERIVE
		marking_specification: SET[0:?] OF Document_definition :=
  			get_document_definition(SELF, 'marking specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SPECIFICATION_DEFINITION');
	INVERSE
		marking_material : material_identification FOR items;
    WHERE
      WR1 : SIZEOF(QUERY(st <* message_representation\Geometric_model.items | (st = message_representation_text))) = 1;
      WR2 : SIZEOF(QUERY(ap <* marked_device_shape\Geometric_model.items | (ap = placement))) = 1;
      WR3 : SIZEOF(TYPEOF(marked_device_shape) * ['DEVICE_MARKING_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
 'DEVICE_MARKING_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL']) = 1;
      WR4 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (marking_material);
   	  WR5 : EXISTS (marking_specification) AND (SIZEOF(marking_specification) = 1);
  END_ENTITY;

END_SCHEMA;

(*
$Id: arm.exp,v 1.18 2004/11/17 23:24:28 thendrix Exp $
ISO TC184/SC4/WG12 N2873 - ISO/TS 10303-1050 Dimension tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1547
*) 


SCHEMA Dimension_tolerance_arm;

USE FROM Construction_geometry_arm;    -- ISO/TS 10303-1131

USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


TYPE dimension_tolerance_document_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH 
   (Externally_defined_size_dimension);
END_TYPE; 

TYPE dimension_value_select = SELECT
   (Dimension_value_with_limitation, 
    Numerical_item_with_unit, 
    Tolerance_range, 
    Value_limit);
END_TYPE; 

TYPE element_with_dimension_select = EXTENSIBLE GENERIC_ENTITY SELECT
   (Shape_element);
END_TYPE; 

TYPE limitation_definition_select = SELECT
   (Limits_and_fits, 
    Plus_minus_bounds);
END_TYPE; 

TYPE placed_element_select = EXTENSIBLE SELECT
   (constructive_element_select, 
    Derived_geometry, 
    element_with_dimension_select);
END_TYPE; 

ENTITY Angular_location_dimension
  SUBTYPE OF (Location_dimension);
  orientation : Axis_placement;
END_ENTITY;

ENTITY Angular_size_dimension
  SUBTYPE OF (Size_dimension);
  full : BOOLEAN;
  major_angle : BOOLEAN;
END_ENTITY;

ENTITY Curved_distance_dimension
  SUBTYPE OF (Location_dimension);
  used_path : Measurement_path;
END_ENTITY;

ENTITY Curved_size_dimension
  SUBTYPE OF (Size_dimension);
END_ENTITY;

ENTITY Diameter_size_dimension
  SUBTYPE OF (Size_dimension);
END_ENTITY;

ENTITY Dimension_value_with_limitation;
  defined_by : limitation_definition_select;
  limited_value : Numerical_item_with_unit;
END_ENTITY;

ENTITY Externally_defined_size_dimension
  SUBTYPE OF (Size_dimension);
  name : STRING;
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Geometric_dimension
  ABSTRACT SUPERTYPE OF (ONEOF (Location_dimension,
                                Size_dimension));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
END_ENTITY;

ENTITY Height_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Length_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Limits_and_fits;
  deviation : STRING;
  fitting_type : OPTIONAL STRING;
  grade : STRING;
END_ENTITY;

ENTITY Linear_distance_dimension
  SUBTYPE OF (Location_dimension);
  orientation : OPTIONAL Axis_placement;
END_ENTITY;

ENTITY Location_dimension
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_location_dimension,
                                Curved_distance_dimension,
                                Linear_distance_dimension))
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : placed_element_select;
  target : placed_element_select;
END_ENTITY;

ENTITY Plus_minus_bounds;
  lower_bound : Value_with_unit;
  significant_digits : OPTIONAL INTEGER;
  upper_bound : Value_with_unit;
  value_determination : OPTIONAL STRING;
END_ENTITY;

ENTITY Radial_size_dimension
  SUBTYPE OF (Size_dimension);
  radius_type : STRING;
END_ENTITY;

ENTITY Size_dimension
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_size_dimension,
                                Curved_size_dimension,
                                Diameter_size_dimension,
                                Externally_defined_size_dimension,
                                Height_size_dimension,
                                Length_size_dimension,
                                Radial_size_dimension,
                                Thickness_size_dimension,
                                Width_size_dimension))
  SUBTYPE OF (Geometric_dimension);
  envelope_principle : OPTIONAL BOOLEAN;
  is_applied_to : element_with_dimension_select;
END_ENTITY;

ENTITY Thickness_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Tolerance_range;
  lower_range : Numerical_item_with_unit;
  significant_digits : OPTIONAL INTEGER;
  upper_range : Numerical_item_with_unit;
END_ENTITY;

ENTITY Width_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

END_SCHEMA;  -- Dimension_tolerance_arm
(*
 $Id: arm.exp,v 1.4 2005/09/19 11:00:17 liutkus Exp $
 ISO TC184/SC4/WG12 N4179 - ISO/TS 10303-1744 Discrete shield - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3603
*)

SCHEMA Discrete_shield_arm;

USE FROM Assembly_component_placement_requirements_arm;	-- ISO/TS 10303-1634
USE FROM Physical_connectivity_definition_arm; -- ISO/TS 10303-1755

 TYPE physical_shieldable_item = SELECT 
    (Assembly_component, 
    Component_feature, 
    Physical_connectivity_definition, 
    Placement_group_requirement_definition); 
 END_TYPE; 

  ENTITY Physical_shield 
    SUBTYPE OF (Physical_component); 
      shielded_item : SET[1:?] OF physical_shieldable_item; 
  END_ENTITY; 

ENTITY Routed_physical_shield
   SUBTYPE OF (Routed_physical_component, Physical_shield);
END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.15 2005/06/02 20:42:27 thendrix Exp $
ISO TC184/SC4/WG12 N2957 - ISO/TS 10303-1121 Document and version identification - EXPRESS ARM
*)


SCHEMA Document_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;

RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

END_SCHEMA;  -- Document_and_version_identification_arm
(*
 $Id: arm.exp,v 1.9 2004/10/21 17:06:33 darla Exp $
 ISO TC184/SC4/WG12 N1189 - ISO/TS 10303-1122 Document assignment - EXPRESS ARM
*)


SCHEMA Document_assignment_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

TYPE assigned_document_select = SELECT 
  (Document,
   Document_definition,
   Document_version,
   File);
END_TYPE;

TYPE documented_element_select = EXTENSIBLE SELECT ;
END_TYPE;

ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : documented_element_select;
  role : STRING;
END_ENTITY;

ENTITY Partial_document_assignment
SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.18 2004/11/15 21:22:46 thendrix Exp $
ISO TC184/SC4/WG12 N3225 - ISO/TS 10303-1123 Document definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1192
*) 


SCHEMA Document_definition_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE document_location_select = SELECT BASED_ON external_identification_item WITH 
   (Document_definition);
END_TYPE; 

ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;

ENTITY Document_definition
  SUPERTYPE OF (ONEOF (Digital_document_definition,
                       Physical_document_definition))
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.name RENAMED description : OPTIONAL STRING;
  SELF\Product_view_definition.defined_version RENAMED associated_document_version : Document_version;
END_ENTITY;

ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;

RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

END_SCHEMA;  -- Document_definition_arm
(*
 $Id: arm.exp,v 1.9 2004/11/19 21:37:35 robbod Exp $
 ISO TC184/SC4/WG12 N3037 - ISO/TS 10303-1290 Document management - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2330
*) 


SCHEMA Document_management_arm;

USE FROM Alias_identification_arm;    -- ISO/TS 10303-1025

USE FROM Contract_arm;    -- ISO/TS 10303-1062

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM Document_properties_arm;    -- ISO/TS 10303-1126

USE FROM Document_structure_arm;    -- ISO/TS 10303-1124

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Management_resource_information_arm;    -- ISO/TS 10303-1288

USE FROM Product_categorization_arm;    -- ISO/TS 10303-1016

USE FROM Security_classification_arm;    -- ISO/TS 10303-1015


TYPE document_management_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_approval_item WITH 
   (Digital_document_definition, 
    Document_definition_relationship, 
    Document_version, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
   (Document_version);
END_TYPE; 

TYPE document_management_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_or_date_time_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document_definition_relationship, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_organization_or_person_in_organization_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_string_select WITH 
   (Digital_document_definition, 
    Document, 
    Document_assignment, 
    Document_definition_relationship, 
    Document_version, 
    External_item_identification, 
    External_source_identification, 
    File_relationship, 
    Physical_document_definition, 
    Product_category);
END_TYPE; 

END_SCHEMA;  -- Document_management_arm
(*
 $Id: arm.exp,v 1.18 2006/04/06 07:29:17 liutkus Exp $
ISO TC184/SC4/WG12 N3226 - ISO/TS 10303-1126 Document properties - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1201
*) 


SCHEMA Document_properties_arm;

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 

TYPE document_property_item = SELECT BASED_ON property_assignment_select WITH 
   (Document_definition, 
    File);
END_TYPE; 

ENTITY Assigned_document_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : document_property_item;
DERIVE
  SELF\Assigned_property.name : STRING := 'document property';
UNIQUE
  UR1: SELF\Assigned_property.described_element;
WHERE
  WR1: SIZEOF(['DOCUMENT_PROPERTIES_ARM.DOCUMENT_DEFINITION', 'DOCUMENT_PROPERTIES_ARM.FILE']*TYPEOF(SELF\Assigned_property.described_element)) = 1;
END_ENTITY;

ENTITY Descriptive_document_property
  SUBTYPE OF (String_representation_item);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;

ENTITY Document_property_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF descriptive_or_numerical;
WHERE
  WR1: SIZEOF(QUERY( pr <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.REP') | 'DOCUMENT_PROPERTIES_ARM.ASSIGNED_PROPERTY' IN TYPEOF (pr\Property_representation.property)))> 0;
  WR2: SELF\Representation.context_of_items.kind = 'document parameters';
  WR3: valid_document_property_representation(SELF);
  WR4: SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name)) > 1 ))= 0;
END_ENTITY;

ENTITY Numerical_document_property
  SUBTYPE OF (Numerical_item_with_unit);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;

FUNCTION valid_document_property_representation
 (rep : Document_property_representation) : LOGICAL; 

CASE rep.name OF
'document content': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['detail level', 'geometry type', 'real world scale'])))= 0
 );
   END;

'document creation': 
   BEGIN
IF NOT (SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['creating interface', 'creating system', 'operating system'])))= 0
 ) THEN
  RETURN(FALSE);
END_IF;
IF NOT (SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['creating system'])))= 1
 ) THEN
  RETURN(FALSE);
ELSE
  RETURN(TRUE);
END_IF;

   END;

'document format': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['character code', 'data format', 'size format', 'size format standard'])))= 0
 );
   END;

'document size': 
   BEGIN
RETURN (
  SIZEOF(QUERY( items <* rep\Representation.items | 
  NOT (items.name IN ['file size', 'page count'])))= 0
 );
   END;

OTHERWISE:
  RETURN(UNKNOWN);
END_CASE;
        END_FUNCTION; 

END_SCHEMA;  -- Document_properties_arm
(*
 $Id: arm.exp,v 1.9 2004/10/21 17:26:46 darla Exp $
 ISO TC184/SC4/WG12 N1195 - ISO/TS 10303-1124 Document structure - EXPRESS ARM
*)


SCHEMA Document_structure_arm;

USE FROM Document_definition_arm;  
USE FROM File_identification_arm; 
  
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;

ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2006/04/24 12:35:31 liutkus Exp $
   ISO TC184/SC4/WG12 N3966 - ISO/TS 10303-1673 Edge shape feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3414
*)

SCHEMA Edge_shape_feature_arm;

	USE FROM Layered_3d_shape_arm;	-- ISO/TS 10303-1694
	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654	

  TYPE board_side = ENUMERATION OF (primary, secondary); 
  END_TYPE;

  ENTITY Bevel_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      bevel_width : Length_tolerance_characteristic;
      bevel_angle : Tolerance_characteristic;
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
           )) = 1);
  END_ENTITY;

  ENTITY Edge_shape_model
    ABSTRACT SUPERTYPE OF (ONEOF (Bevel_edge_feature_shape_model,
 Step_edge_feature_shape_model,
 Radius_edge_feature_shape_model))
    SUBTYPE OF (Planar_shape_model);
      applied_surface : board_side;
    WHERE
      WR1 : SIZEOF(QUERY(escss <* USEDIN(SELF,
 'LAYERED_3D_SHAPE_ARM.SHAPE_DEFINITION_3D_INTERSECTION.SURFACE_INTERSECTION_RESULT') | NOT ('PART_TEMPLATE_3D_SHAPE_ARM.EDGE_SEGMENT_CROSS_SECTION' IN TYPEOF(escss)))) = 0;
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Radius_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      radius_length : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Step_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      step_width : Length_tolerance_characteristic;
      step_depth : Length_tolerance_characteristic;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.10 2004/10/21 17:46:04 darla Exp $
 ISO TC184/SC4/WG12 N1168 - ISO/TS 10303-1057 Effectivity - EXPRESS ARM
*)
   
SCHEMA Effectivity_arm;

USE FROM Time_interval_arm;  -- ISO/TS 10303-1065
USE FROM Value_with_unit_arm;  -- ISO/TS 10303-1054

   
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : date_or_event;
  end_bound   : OPTIONAL date_or_event;
END_ENTITY;

ENTITY Effectivity
  SUPERTYPE OF (ONEOF (Serial_effectivity, Dated_effectivity, Lot_effectivity, Time_interval_effectivity));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;

ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;

ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;

ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
   
END_SCHEMA;
(*
 $Id: arm.exp,v 1.5 2004/10/21 17:49:23 darla Exp $
 ISO TC184/SC4/WG12 N1174 - ISO/TS 10303-1059 Effectivity application - EXPRESS ARM
*)
   
SCHEMA Effectivity_application_arm;
   
USE FROM Effectivity_arm; -- ISO/TS 10303-1057
   
TYPE effectivity_item = EXTENSIBLE SELECT; 
END_TYPE;
   
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;

   
END_SCHEMA;

(* Last update -  10 Apr 2002 *)
(*
   $Id: arm.exp,v 1.9 2006/01/20 08:43:37 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3942 - ISO/TS 10303-1665 Electrical network definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3336
*)

SCHEMA Electrical_network_definition_arm;

	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704

  ENTITY Electrical_network_definition
    SUBTYPE OF (Functional_unit_network_definition);
  END_ENTITY;
  
END_SCHEMA;  
(* 
$Id: arm.exp,v 1.13 2006/03/24 18:43:16 thendrix Exp $
ISO TC184/SC4/WG12 N4248 - ISO/TS 10303-1004 Elemental geometric shape - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2102
*)
   
SCHEMA Elemental_geometric_shape_arm;
 
USE FROM Foundation_representation_arm;

USE FROM Value_with_unit_arm;	

USE FROM Identification_assignment_arm; -- ISO 10303-1021

TYPE cartesian_transformation = SELECT (Cartesian_transformation_2d, Cartesian_transformation_3d);
END_TYPE;

TYPE geometric_mapping_target = SELECT (Axis_placement, cartesian_transformation);
END_TYPE;

ENTITY Geometric_coordinate_space
SUBTYPE OF (Numerical_representation_context);
  dimension_count: INTEGER;
WHERE
WR1: dimension_count >0;
END_ENTITY;

ENTITY Geometric_model
SUBTYPE OF (Representation);
  version_id    : OPTIONAL STRING;
  model_extent  : OPTIONAL length_measure;
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items: SET[1:?] OF Detailed_geometric_model_element;
END_ENTITY;
   
ENTITY Detailed_geometric_model_element
ABSTRACT SUPERTYPE OF (ONEOF(Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d,
	Cartesian_transformation_3d))
SUBTYPE OF (Representation_item);
END_ENTITY;

ENTITY Cartesian_point
SUBTYPE OF (Detailed_geometric_model_element);
  coordinates: LIST[1:3] OF length_measure;
END_ENTITY;

ENTITY Direction
SUBTYPE OF (Detailed_geometric_model_element);
  coordinates: LIST[2:3] OF length_measure;  
END_ENTITY;

ENTITY Axis_placement
SUBTYPE OF (Detailed_geometric_model_element);
  origin: Cartesian_point;
  x_axis: Direction;
  y_axis: Direction;
DERIVE
  dim: INTEGER := SIZEOF(origin.coordinates);
WHERE
WR1: dim >1;
WR2: dim = SIZEOF(x_axis.coordinates);
WR3: dim = SIZEOF(y_axis.coordinates);
END_ENTITY;
   
ENTITY Cartesian_transformation_2d
SUBTYPE OF (Detailed_geometric_model_element);
   multiplication_matrix: ARRAY[1:2] OF Direction;
   translation: Cartesian_point;
WHERE
WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=2;
WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=2;
WR3: SIZEOF(translation.coordinates)=2;
END_ENTITY;

ENTITY Cartesian_transformation_3d
SUBTYPE OF (Detailed_geometric_model_element);
   multiplication_matrix: ARRAY[1:3] OF Direction;
   translation: Cartesian_point;
WHERE
WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=3;
WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=3;
WR3: SIZEOF(multiplication_matrix[3]\Direction.coordinates)=3;
WR4: SIZEOF(translation.coordinates)=3;
END_ENTITY;

ENTITY Axis_placement_mapping;
  source: Axis_placement;
  target: Axis_placement;
WHERE
WR1: source\Axis_placement.dim = target\Axis_placement.dim;
END_ENTITY;

END_SCHEMA;












(*
 $Id: arm.exp,v 1.14 2004/10/21 17:51:29 darla Exp $
 ISO TC184/SC4/WG12 N2114 - ISO/TS 10303-1064 Event - EXPRESS ARM
*)

SCHEMA Event_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;

ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;

END_SCHEMA;  -- Event_arm
(*
 $Id: arm.exp,v 1.4 2003/10/14 14:34:41 robbod Exp $
 ISO TC184/SC4/WG12 N2116 - ISO/TS 10303-1364 Event assignment - EXPRESS ARM
*) 


SCHEMA Event_assignment_arm; 

USE FROM Event_arm;    -- ISO/TS 10303-1064


TYPE event_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Event_assignment_arm

(*
   $Id: arm.exp,v 1.15 2006/11/01 20:36:35 liutkus Exp $
   ISO TC184/SC4/WG12 N3948 - ISO/TS 10303-1667 Extended basic geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3672
*)

SCHEMA Extended_basic_geometry_arm;

	USE FROM Basic_geometry_arm;	-- ISO/TS 10303-1652

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR
Detailed_geometric_model_element;
  ONEOF (Cartesian_point,
         Direction,
         Axis_placement,
         Cartesian_transformation_2d,
         Cartesian_transformation_3d,
         Curve,
         Point_on_curve,
         Point_on_surface,
         Surface,
         Vector);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT axis_placement_subtypes FOR Axis_placement;
  ONEOF (Axis_placement_2d,
  Axis_placement_3d);
END_SUBTYPE_CONSTRAINT;
 
  ENTITY Axis_placement_2d
    SUBTYPE OF (Axis_placement);
--  WHERE
--    WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Axis_placement_3d
    SUBTYPE OF (Axis_placement);
--  WHERE
--    WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Definitional_representation_relationship
    SUBTYPE OF (Representation_relationship);
   WHERE
    WR1: acyclic_representation_relationship(SELF,
       [SELF\representation_relationship.rep_2],
       'FOUNDATION_REPRESENTATION_ARM.'+
       'REPRESENTATION');
  END_ENTITY;  

  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;

  ENTITY Geometric_model_relationship
   SUBTYPE OF (Representation_relationship);
      SELF\Representation_relationship.rep_1 : Geometric_model;
      SELF\Representation_relationship.rep_2 : Geometric_model;
    WHERE
      WR1 : rep_1 <> rep_2;
  END_ENTITY;

  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;

 ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
--      WR2: NOT EXISTS (SELF\Representation_item.name);
 END_ENTITY;

FUNCTION acyclic_representation_relationship
 (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
 LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;

    IF relation.rep_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'FOUNDATION_REPRESENTATION_ARM.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
END_FUNCTION; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.51 2006/06/14 15:25:22 liutkus Exp $
   ISO TC184/SC4/WG12 N3945 - ISO/TS 10303-1666 Extended geometric tolerance - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3399
*)

SCHEMA Extended_geometric_tolerance_arm;
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740
	USE FROM Default_tolerance_arm;	-- ISO/TS 10303-1052
	USE FROM Dimension_tolerance_arm;	-- ISO/TS 10303-1050
	USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
	USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740
	
	TYPE physical_feature_or_part_template = 
		EXTENSIBLE GENERIC_ENTITY SELECT
		(Datum_feature);
	END_TYPE;

  TYPE centre_type = ENUMERATION OF
    (centred_on_arc,
     centred_on_radial);
  END_TYPE;

  TYPE descriptive_or_geometric_orientation = SELECT
    (measure_orientation,
     Direction);
  END_TYPE;

  TYPE dimension_qualifiers = ENUMERATION OF
    (free_state,
     average);
  END_TYPE;

  TYPE dimensional_location_or_dimensional_size = SELECT
    (Size_dimension,
     Location_dimension);
  END_TYPE;

 	TYPE egt_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Externally_defined_dimension_representation);
	END_TYPE;

	TYPE egt_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Restraint_condition,
	  	Statistical_dimensional_location,
	  	Statistical_dimensional_size,
	  	Statistical_geometric_tolerance);
	END_TYPE; 

  TYPE geometric_or_dimension_select = SELECT
    (Geometric_tolerance,
     Geometric_dimension);
  END_TYPE;

  TYPE geometric_tolerance_qualifiers = ENUMERATION OF
    (pitch_diameter,
     minor_diameter,
     each_element,
     major_diameter,
     each_radial_element,
     not_concave,
     not_convex,
     free_state);
  END_TYPE;

  TYPE locating_or_refinement_linear_profile_tolerance = SELECT
    (Line_profile_tolerance,
     Composite_linear_profile_refinement_tolerance);
  END_TYPE;

  TYPE locating_or_refinement_surface_profile_tolerance = SELECT
    (Surface_profile_tolerance,
     Composite_surface_profile_refinement_tolerance);
  END_TYPE;

  TYPE measure_orientation = ENUMERATION OF
    (reversed,
     normal);
  END_TYPE;

	SUBTYPE_CONSTRAINT egt_non_feature_shape_element_subtypes FOR Non_feature_shape_element; 
	    (ONEOF (
		 Derived_non_feature_shape_element,
		 Directed_axis,
		 Positional_boundary,
		 Positional_boundary_member,
		 Tolerance_zone_boundary,
		 Tolerance_zone_boundary_member,
		 Viewing_plane,
		 Seating_plane,
		 Reference_graphic_registration_mark));
	END_SUBTYPE_CONSTRAINT;

  TYPE offset_types = ENUMERATION OF
    (towards_material,
     away_from_material);
  END_TYPE;

  TYPE orientation_select = SELECT
    (Datum_axis_related_orientation,
     Viewing_plane_based_orientation,
     Datum_based_vector_orientation);
  END_TYPE;

  TYPE restrained_item_select = SELECT
    (Single_datum,
     physical_feature_or_part_template);
  END_TYPE;

	TYPE true_profile_representations = EXTENSIBLE SELECT(
		Dimension_set,
     	Document_definition,
     	Func);
	END_TYPE;

  ENTITY Apex
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Boundary_size_characteristic
    ABSTRACT SUPERTYPE OF (ONEOF (Diametrical_boundary_size_characteristic,
 Opposing_boundary_set_size_characteristic));
      tolerance_value         : Length_data_element;
      maximum_tolerance_value : OPTIONAL Length_data_element;
  END_ENTITY;

  ENTITY Centre_axis
    SUBTYPE OF (Centre_of_symmetry);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Centre_of_symmetry
    ABSTRACT SUPERTYPE OF (ONEOF (Centre_axis,
 Centre_plane,
 Centre_point))
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Centre_plane
    SUBTYPE OF (Centre_of_symmetry);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Centre_point
    SUBTYPE OF (Centre_of_symmetry);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Composite_linear_profile_refinement_tolerance
    SUBTYPE OF (Line_profile_tolerance);
      refined_control : locating_or_refinement_linear_profile_tolerance;
    WHERE
      WR1 : NOT EXISTS(SELF\Geometric_tolerance.name);
  END_ENTITY;

  ENTITY Composite_surface_profile_refinement_tolerance
    SUBTYPE OF (Surface_profile_tolerance);
      refined_control : locating_or_refinement_surface_profile_tolerance;
    WHERE
      WR1 : NOT EXISTS(SELF\Geometric_tolerance.name);
  END_ENTITY;

  ENTITY Conical_tolerance_zone_boundary
    SUBTYPE OF (Tolerance_zone_boundary);
    INVERSE
      boundary_and_surface_relationships : SET[2:2] OF conical_tolerance_zone_boundary_and_surface_relationship FOR sized_tolerance_zone_boundary;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conical_tolerance_zone_boundary_and_surface_relationship;
      sized_tolerance_zone_boundary : Conical_tolerance_zone_boundary;
      terminating_surface           : physical_feature_or_part_template;
    INVERSE
      size_characteristic : conical_tolerance_zone_boundary_diametrical_size_characteristic FOR sized_boundary_at_surface;
  END_ENTITY;

  ENTITY Conical_tolerance_zone_boundary_diametrical_size_characteristic;
      sized_boundary_at_surface : Conical_tolerance_zone_boundary_and_surface_relationship;
      tolerance_value           : Length_data_element;
  END_ENTITY;

  ENTITY Conical_tolerance_zone_definition
    SUBTYPE OF (Tolerance_zone_definition);
-- LK input needed      SELF\Tolerance_zone_definition.boundary_definition : conical_tolerance_zone_boundary_definition;
  END_ENTITY;

  ENTITY Datum_axis
    SUBTYPE OF (Datum_shape_element);
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Datum_axis_and_tolerance_zone_orienting_relationship;
      oriented_tolerance_zone : Tolerance_zone;
      orienting_datum_axis    : Datum_axis;
    INVERSE
      zone_orientation : datum_axis_related_orientation FOR orienting_relationship;
  END_ENTITY;

  ENTITY Datum_axis_related_orientation;
      orienting_relationship : Datum_axis_and_tolerance_zone_orienting_relationship;
      orientation_type       : centre_type;
  END_ENTITY;

  ENTITY Datum_based_direction_vector;
      direction_vector_representation : Axis_placement;
      vector_of                       : Datum_plane;
      positive_direction_vector       : BOOLEAN;
  END_ENTITY;

  ENTITY Datum_based_length_measure;
      measure             : Length_data_element;
      measure_orientation : descriptive_or_geometric_orientation;
      of_datum            : Datum_plane;
  END_ENTITY;

  ENTITY Datum_based_vector_orientation;
      direction_components : SET[2:2] OF Direction_element;
  END_ENTITY;

  ENTITY Datum_difference
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating RENAMED precedent_datum : Datum_shape_element;
      SELF\Shape_element_relationship.related RENAMED subsequent_datum : Datum_shape_element;
  END_ENTITY;

  ENTITY Datum_difference_based_characteristic
    SUBTYPE OF (Representation_item); --characteristic);
      of_datum_difference : Datum_difference;
  END_ENTITY;

  ENTITY Datum_feature
    SUPERTYPE OF (Datum_target_set)
    SUBTYPE OF (Shape_element);
  END_ENTITY;

  ENTITY Datum_plane
    SUBTYPE OF (Datum_shape_element);
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Datum_point
    SUBTYPE OF (Datum_shape_element);
  END_ENTITY;

	ENTITY Datum_shape_element
	  SUBTYPE OF (Datum, Non_feature_shape_element);
	END_ENTITY;

  ENTITY Datum_target_set
    SUBTYPE OF (Datum_feature);
    INVERSE
      included_datum_targets : SET[1:?] OF datum_target_usage_in_datum_target_set_relationship FOR defined_datum_target_set;
  END_ENTITY;

  ENTITY Datum_target_usage_in_datum_target_set_relationship;
      defined_datum_target_set : Datum_target_set;
      used_datum_target        : Datum_target;
      datum_target_number      : INTEGER; -- positive_integer;
    UNIQUE
      UR1 : used_datum_target,
 defined_datum_target_set;
      UR2 : datum_target_number,
 defined_datum_target_set;
  END_ENTITY;

  ENTITY Derived_non_feature_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (Apex,
 Centre_of_symmetry,
 Linear_extension,
 Geometric_intersection,
 Geometric_alignment,
 Tangent_shape_element))
    SUBTYPE OF (Non_feature_shape_element);
    INVERSE
      deriving_relationships : SET[1:?] OF shape_element_deriving_relationship FOR relating;
  END_ENTITY; 

  ENTITY Diametrical_boundary_size_characteristic
    SUBTYPE OF (Boundary_size_characteristic);
      sized_boundary : Tolerance_zone_circular_or_cylindrical_or_spherical_boundary;
  END_ENTITY; 

  ENTITY Dimension_qualifier
    ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_dimension_qualifier,
 User_defined_dimension_qualifier));
      qualified_dimensions : SET[1:?] OF Geometric_dimension;
  END_ENTITY;

  ENTITY Dimension_related_positional_boundary
    SUBTYPE OF (Positional_boundary);
      boundary_members             : SET[1:?] OF Positional_boundary_member;
      constrained_physical_feature : physical_feature_or_part_template;
  END_ENTITY;

  ENTITY Dimension_related_positional_boundary_definition
    SUBTYPE OF (Positional_boundary_definition);
      SELF\Positional_boundary_definition.defined_positional_boundary : Dimension_related_positional_boundary;
      characterized_boundary_member_definitions                       : SET[1:?] OF Positional_boundary_member_definition;
  END_ENTITY;

  ENTITY Dimension_set;
      associated_dimensions : SET[1:?] OF Geometric_dimension;
  END_ENTITY;

  ENTITY Dimensional_characteristic_representation;
      representation                     : Shape_dimension_representation;
      dimension                          : dimensional_location_or_dimensional_size;
      auxiliary_dimension_representation : BOOLEAN;
  END_ENTITY;

  ENTITY Dimensional_size_based_on_opposing_boundaries
    SUBTYPE OF (Size_dimension);
      boundary_separation           		: Shape_element_locating_relationship;
      SELF\Size_dimension.is_applied_to : Composite_unit_shape_element;
  END_ENTITY;

  ENTITY Directed_axis
    SUBTYPE OF (Non_feature_shape_element);
      axis_to_be_oriented : Centre_axis;
      start_shape_element : Shape_element;
      end_shape_element   : Shape_element;
    UNIQUE
      UR1 : axis_to_be_oriented,
 start_shape_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Direction_element;
      direction                     : Datum_based_direction_vector;
      angle_value                   : Angle_data_element;
      base_datum_plane              : Datum_plane;
      direction_of_half_datum_plane : Datum_based_direction_vector;
    INVERSE
      elements_of : SET[1:?] OF datum_based_vector_orientation FOR direction_components;
  END_ENTITY;

  ENTITY Edge_segment_vertex
    SUBTYPE OF (Datum_point);
  END_ENTITY;

  ENTITY Externally_defined_dimension_representation
    SUBTYPE OF (Shape_dimension_representation);
      dimension_value : OPTIONAL Value_with_unit;
    INVERSE
      definitions			: SET[1:?] OF External_source_identification FOR item;
  END_ENTITY;

  ENTITY Geometric_alignment
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Geometric_intersection
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Geometric_tolerance_qualifier
    ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_geometric_tolerance_qualifier,
 User_defined_geometric_tolerance_qualifier));
      qualified_geometric_tolerances : SET[1:?] OF Geometric_tolerance;
  END_ENTITY;

  ENTITY Geometric_tolerance_with_applied_material_condition_property
    SUBTYPE OF (Geometric_tolerance);
      applied_material_condition_property_name : material_condition_property_names;
  END_ENTITY; 
  
  ENTITY Limit_dimension_representation
    SUBTYPE OF (Shape_dimension_representation);
      upper_dimension_value : Value_with_unit;
      lower_dimension_value : Value_with_unit;
  END_ENTITY;

  ENTITY Linear_extension
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Maximum_dimension_representation
    SUBTYPE OF (Singular_dimension_representation);
  END_ENTITY;

  ENTITY Minimum_dimension_representation
    SUBTYPE OF (Singular_dimension_representation);
  END_ENTITY;

  ENTITY Opposing_boundary_set_size_characteristic
    SUBTYPE OF (Boundary_size_characteristic);
      sized_boundary_set : Tolerance_zone_opposing_boundary_set;
  END_ENTITY;

  ENTITY Parallel_shape_element_relationship
    SUBTYPE OF (Shape_element_relationship);
    WHERE
      WR1 : NOT EXISTS (SELF\Shape_element_relationship.relation_type);
  END_ENTITY;

  ENTITY Perpendicular_shape_element_relationship
    SUBTYPE OF (Shape_element_relationship);
    WHERE
      WR1 : NOT EXISTS (SELF\Shape_element_relationship.relation_type);
  END_ENTITY; 

  ENTITY Positional_boundary
    ABSTRACT SUPERTYPE OF (ONEOF (Profile_related_positional_boundary,
 Dimension_related_positional_boundary))
    SUBTYPE OF (Non_feature_shape_element);
    INVERSE
      boundary_definition : positional_boundary_definition FOR defined_positional_boundary;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Positional_boundary_and_profile_boundary_member_relationship;
      offset_positional_boundary                  : Profile_related_positional_boundary;
      base_profile_tolerance_zone_boundary_member : Tolerance_zone_boundary_member;
    INVERSE
      offset : positional_boundary_offset FOR offset_boundary_relationship;
  END_ENTITY;

  ENTITY Positional_boundary_definition
    ABSTRACT SUPERTYPE OF (ONEOF (Profile_related_positional_boundary_definition,
 Dimension_related_positional_boundary_definition));
      defined_positional_boundary : Positional_boundary;
  END_ENTITY;

  ENTITY Positional_boundary_member
    SUBTYPE OF (Non_feature_shape_element);
    INVERSE
      composed_positional_boundary : dimension_related_positional_boundary FOR boundary_members;
      boundary_member_definition   : positional_boundary_member_definition FOR defined_positional_boundary_member;
  END_ENTITY;

  ENTITY Positional_boundary_member_definition;
      defined_positional_boundary_member : Positional_boundary_member;
      tolerance_value                    : Length_data_element;
      associated_dimension               : Size_dimension;
    INVERSE
      boundary_definition : dimension_related_positional_boundary_definition FOR characterized_boundary_member_definitions;
  END_ENTITY;

  ENTITY Positional_boundary_offset;
      offset_boundary_relationship : Positional_boundary_and_profile_boundary_member_relationship;
      tolerance_value              : Length_data_element;
    INVERSE
      boundary_definition : profile_related_positional_boundary_definition FOR boundary_offset;
  END_ENTITY;

  ENTITY Pre_defined_dimension_qualifier
    SUBTYPE OF (Dimension_qualifier);
      description : dimension_qualifiers;
  END_ENTITY;

  ENTITY Pre_defined_geometric_tolerance_qualifier
    SUBTYPE OF (Geometric_tolerance_qualifier);
      description : geometric_tolerance_qualifiers;
  END_ENTITY; 

  ENTITY Profile_related_positional_boundary
    SUBTYPE OF (Positional_boundary);
    INVERSE
      associating_relationship : positional_boundary_and_profile_boundary_member_relationship FOR offset_positional_boundary;
  END_ENTITY;

  ENTITY Profile_related_positional_boundary_definition
    SUBTYPE OF (Positional_boundary_definition);
      SELF\Positional_boundary_definition.defined_positional_boundary : Profile_related_positional_boundary;
      boundary_offset                                                 : Positional_boundary_offset;
  END_ENTITY;

  ENTITY Projected_zone_and_base_relationship;
      base_physical_feature : physical_feature_or_part_template;
      projected_zone        : Tolerance_zone;
    INVERSE
      size_characteristic : projected_zone_height_characteristic FOR defined_height_of;
  END_ENTITY;

  ENTITY Projected_zone_height_characteristic;
      defined_height_of      : Projected_zone_and_base_relationship;
      projected_height_value : Length_data_element;
-- LK input needed    INVERSE
-- LK input needed      zone_definition : projection FOR defining; --projected_zone_height;
  END_ENTITY;
 
  ENTITY Restraint_condition
    SUPERTYPE OF (Tolerance_specific_restraint_condition);
      applied_to            : restrained_item_select;
	DERIVE
  		restraint_description: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'restraint description');
	WHERE
   		WR1 : (SIZEOF(restraint_description) = 1);
  END_ENTITY;
  
  ENTITY Runout_tolerance_zone_definition_with_specified_angle
    SUBTYPE OF (Tolerance_zone_definition);
      runout_orientation : Runout_zone_orientation;
  END_ENTITY;

  ENTITY Runout_tolerance_zone_orienting_relationship;
      oriented_zone  : Tolerance_zone;
      orienting_axis : Directed_axis;
    INVERSE
      angular_size_characteristic : runout_zone_orientation FOR oriented_relationship;
  END_ENTITY;

  ENTITY Runout_zone_orientation;
      oriented_relationship : Runout_tolerance_zone_orienting_relationship;
      semi_angle_value      : Angle_data_element;
    INVERSE
      zone_definition : runout_tolerance_zone_definition_with_specified_angle FOR runout_orientation;
  END_ENTITY;

  ENTITY Separate_geometric_tolerance_requirement;
      separated_geometric_tolerances : SET[1:?] OF Geometric_tolerance;
  END_ENTITY;

  ENTITY Shape_dimension_representation
    ABSTRACT SUPERTYPE OF (ONEOF (Limit_dimension_representation,
 Singular_dimension_representation,
 externally_defined_dimension_representation
 -- ,plus_minus_tolerance_range_representation
 ));
  END_ENTITY;

  ENTITY Shape_element_deriving_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Derived_non_feature_shape_element;
    UNIQUE
      UR1 : SELF\Shape_element_relationship.related, 
 SELF\Shape_element_relationship.relating;
  END_ENTITY;

  ENTITY Simultaneous_geometric_tolerance_requirement;
      grouped_geometric_tolerances : SET[2:?] OF Geometric_tolerance;
  END_ENTITY;

  ENTITY Singular_dimension_representation
    ABSTRACT SUPERTYPE OF (ONEOF (Theoretically_exact_dimension_representation,
 Maximum_dimension_representation,
 Minimum_dimension_representation))
    SUBTYPE OF (Shape_dimension_representation);
      dimension_value : Value_with_unit;
  END_ENTITY;

  ENTITY Statistical_dimensional_location
    SUBTYPE OF (Geometric_dimension);
      alternate_dimension             : OPTIONAL Geometric_dimension;
	DERIVE
  		statistical_control_requirement: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'statistical control requirement');
	WHERE
   		WR1 : (SIZEOF(statistical_control_requirement) = 1);
  END_ENTITY;

  ENTITY Statistical_dimensional_size
    SUBTYPE OF (Geometric_dimension);
      alternate_dimension             : OPTIONAL Geometric_dimension;
	DERIVE
  		statistical_control_requirement: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'statistical control requirement');
	WHERE
   		WR1 : (SIZEOF(statistical_control_requirement) = 1);
  END_ENTITY;

  ENTITY Statistical_geometric_tolerance
    SUBTYPE OF (Geometric_tolerance);
      alternate_tolerance             : OPTIONAL Geometric_tolerance;
	DERIVE
  		statistical_control_requirement: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'statistical control requirement');
	WHERE
   		WR1 : (SIZEOF(statistical_control_requirement) = 1);
  END_ENTITY;

  ENTITY Tangent_plane
    SUBTYPE OF (Tangent_shape_element);
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Tangent_shape_element
    SUPERTYPE OF (Tangent_plane)
    SUBTYPE OF (Derived_non_feature_shape_element);
  END_ENTITY;

  ENTITY Theoretically_exact_dimension_representation
    SUBTYPE OF (Singular_dimension_representation);
  END_ENTITY;

  ENTITY Tolerance_specific_restraint_condition
    SUBTYPE OF (Restraint_condition);
      affected_tolerances : SET[1:?] OF geometric_or_dimension_select;
  END_ENTITY;

  ENTITY Tolerance_zone_and_viewing_plane_orienting_relationship;
      orienting_viewing_plane : Viewing_plane;
      oriented_tolerance_zone : Tolerance_zone;
    INVERSE
      zone_orientation : viewing_plane_based_orientation FOR orienting_relationship;
  END_ENTITY;

  ENTITY Tolerance_zone_boundary
    ABSTRACT SUPERTYPE OF (ONEOF (Tolerance_zone_circular_or_cylindrical_or_spherical_boundary,
 Tolerance_zone_opposing_boundary_set,
 Conical_tolerance_zone_boundary))
    SUBTYPE OF (Non_feature_shape_element);
--    INVERSE
-- LK input needed      bounded_zone             : tolerance_zone FOR zone_boundary;
--      boundary_zone_definition : tolerance_zone_boundary_definition FOR defined_zone_boundary;
  END_ENTITY;

  ENTITY Tolerance_zone_boundary_member
    SUBTYPE OF (Non_feature_shape_element);
    INVERSE
      explicit_opposing_boundary_set : tolerance_zone_explicit_opposing_boundary_set FOR boundary_members;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Tolerance_zone_boundary_member_offset;
      offset_tolerance_zone_boundary_member : Tolerance_zone_boundary_member;
      offset_value                          : Length_data_element;
      type_of_offset                        : offset_types;
--    INVERSE
--      boundary_definition : profile_boundary_definition_with_offsets FOR boundary_offsets;
  END_ENTITY;

  ENTITY Tolerance_zone_circular_or_cylindrical_or_spherical_boundary
    SUBTYPE OF (Tolerance_zone_boundary);
    INVERSE
      size_characteristic : diametrical_boundary_size_characteristic FOR sized_boundary;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Tolerance_zone_definition_with_per_unit_size_specification
    SUBTYPE OF (Tolerance_zone_definition);
      per_unit_size_specification : Tolerance_zone_per_unit_size_specification;
  END_ENTITY;

  ENTITY Tolerance_zone_definition_with_specified_orientation
    SUBTYPE OF (Tolerance_zone_definition);
      zone_orientation : orientation_select;
  END_ENTITY;

  ENTITY Tolerance_zone_explicit_opposing_boundary_set
    SUBTYPE OF (Tolerance_zone_opposing_boundary_set);
      boundary_members : SET[2:2] OF Tolerance_zone_boundary_member;
  END_ENTITY;

  ENTITY Tolerance_zone_form;
      name                         : STRING; 
      characterized_tolerance_zone : Tolerance_zone;
-- LK input needed    INVERSE
-- LK input needed      zone_definition : tolerance_zone_definition FOR form;
  END_ENTITY;

  ENTITY Tolerance_zone_implicit_opposing_boundary_set
    SUBTYPE OF (Tolerance_zone_opposing_boundary_set);
  END_ENTITY;

  ENTITY Tolerance_zone_opposing_boundary_set
    ABSTRACT SUPERTYPE OF (ONEOF (Tolerance_zone_explicit_opposing_boundary_set,
 Tolerance_zone_implicit_opposing_boundary_set))
    SUBTYPE OF (Tolerance_zone_boundary);
    INVERSE
      size_characteristic : opposing_boundary_set_size_characteristic FOR sized_boundary_set;
  END_ENTITY;

  ENTITY Tolerance_zone_per_unit_size_specification;
      specified_tolerance_zone : Tolerance_zone;
      per_unit_size            : SET[1:2] OF Length_data_element;
    INVERSE
      zone_definition : tolerance_zone_definition_with_per_unit_size_specification FOR per_unit_size_specification;
  END_ENTITY;

  ENTITY True_profile;
      profiled_surface       : physical_feature_or_part_template;
      profile_representation : true_profile_representations;
--    INVERSE
--      boundary_definition : SET[1:?] OF profile_boundary_definition FOR basic_profile;
  END_ENTITY;

  ENTITY User_defined_dimension_qualifier
    SUBTYPE OF (Dimension_qualifier);
      name        : STRING; 
      description : STRING; 
  END_ENTITY;

  ENTITY User_defined_geometric_tolerance_qualifier
    SUBTYPE OF (Geometric_tolerance_qualifier);
      name        : STRING; 
      description : STRING; 
  END_ENTITY;

  ENTITY Viewing_plane
    SUBTYPE OF (Non_feature_shape_element);
    INVERSE
      viewing_plane_specification : viewing_plane_definition FOR defined_viewing_plane;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Viewing_plane_based_orientation;
      orienting_relationship      : Tolerance_zone_and_viewing_plane_orienting_relationship;
      viewing_plane_specification : Viewing_plane_definition;
  END_ENTITY;

  ENTITY Viewing_plane_definition;
      defined_viewing_plane        : Viewing_plane;
      viewing_plane_representation : Axis_placement;
    INVERSE
      zone_orientation : viewing_plane_based_orientation FOR viewing_plane_specification;
  END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.23 2006/03/24 18:43:57 thendrix Exp $
ISO TC184/SC4/WG12 N4269 - ISO/TS 10303-1106 Extended measure representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N3231
*) 


SCHEMA Extended_measure_representation_arm;

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


TYPE limit_qualifier_list = ENUMERATION OF 
   (minimum,
    maximum);
END_TYPE; 

ENTITY Measure_item_with_precision
  SUBTYPE OF (Measure_item);
  significant_digits : INTEGER;
END_ENTITY;

ENTITY Qualified_property_value_representation
  SUBTYPE OF (Property_value_representation);
  value_determination : OPTIONAL STRING;
  qualifier : OPTIONAL STRING;
END_ENTITY;

ENTITY Value_limit
  SUBTYPE OF (Measure_item);
  limit_qualifier : limit_qualifier_list;
  limit : Value_with_unit;
END_ENTITY;

ENTITY Value_limit_with_global_unit
  SUBTYPE OF (Measure_item);
  limit : Numerical_item_with_global_unit;
  limit_qualifier : limit_qualifier_list;
END_ENTITY;

ENTITY Value_list
  SUBTYPE OF (Measure_item);
  values : LIST[1:?] OF Measure_item;
END_ENTITY;

ENTITY Value_range
  SUBTYPE OF (Measure_item);
  lower_limit : Numerical_item_with_unit;
  upper_limit : Numerical_item_with_unit;
END_ENTITY;

ENTITY Value_range_with_global_unit
  SUBTYPE OF (Measure_item);
  lower_limit : Numerical_item_with_global_unit;
  upper_limit : Numerical_item_with_global_unit;
END_ENTITY;

ENTITY Value_set
  SUBTYPE OF (Measure_item);
  values : SET[1:?] OF Measure_item;
END_ENTITY;

ENTITY Value_with_tolerances
  SUBTYPE OF (Measure_item);
  item_value : Numerical_item_with_unit;
  lower_limit : REAL;
  upper_limit : REAL;
END_ENTITY;

SUBTYPE_CONSTRAINT alternate_measure_items FOR Measure_item;
  ABSTRACT SUPERTYPE;
  ONEOF (Measure_item_with_precision,
         Numerical_item_with_global_unit,
         Numerical_item_with_unit,
         Value_limit,
         Value_limit_with_global_unit,
         Value_list,
         Value_range,
         Value_range_with_global_unit,
         Value_set,
         Value_with_tolerances);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Extended_measure_representation_arm
(*
 $Id: arm.exp,v 1.9 2004/11/19 21:37:35 robbod Exp $
 ISO TC184/SC4/WG12 N3049 - ISO/TS 10303-1275 External class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2264
*) 


SCHEMA External_class_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070

USE FROM Name_assignment_arm;    -- ISO/TS 10303-1340


TYPE external_class_assigned_name_select = SELECT BASED_ON assigned_name_select WITH 
   (External_class_library);
END_TYPE; 

ENTITY External_class
  SUBTYPE OF (Class);
  external_source : External_class_library;
END_ENTITY;

ENTITY External_class_library;
  id : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- External_class_arm


(*
 $Id: arm.exp,v 1.12 2004/10/21 17:59:15 darla Exp $
 ISO TC184/SC4/WG12 N1207 - ISO/TS 10303-1128 External item identification assignment - EXPRESS ARM
*)

 
SCHEMA External_item_identification_assignment_arm;

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;

ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.3 2004/10/21 18:01:38 darla Exp $
 ISO TC184/SC4/WG12 N1228 - ISO/TS 10303-1033 External model - EXPRESS ARM
*)

SCHEMA External_model_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM File_identification_arm;

ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.20 2006/06/07 08:13:38 liutkus Exp $
   ISO TC184/SC4/WG12 N3951 - ISO/TS 10303-1668 Fabrication joint - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3402
*)

SCHEMA Fabrication_joint_arm;

	USE FROM Land_arm;	-- ISO/TS 10303-1692
	USE FROM Layered_interconnect_module_with_printed_component_design_arm;	-- ISO/TS 10303-1700
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

 	TYPE fabricated_feature_select = SELECT(
 		Component_termination_passage_join_terminal,
 		Conductive_interconnect_element_terminal,
	    Embedded_physical_component_terminal,
 		Land_join_terminal,
 		Printed_component_join_terminal,
         Via_terminal);
	END_TYPE;

  ENTITY Connection_zone_based_fabrication_joint
    SUBTYPE OF (Fabrication_joint);
      zone_1 : Connection_zone_in_design_view;
      zone_2 : Connection_zone_in_design_view;
    WHERE
      WR1 : zone_1 :<>: zone_2;
  END_ENTITY;

  ENTITY Fabrication_joint
  	SUBTYPE OF (Component_feature_joint);
      SELF\Component_feature_joint.feature_1 RENAMED fabrication_feature_1                      : fabricated_feature_select;
      SELF\Component_feature_joint.feature_2 RENAMED fabrication_feature_2                      : fabricated_feature_select;
      auxiliary_joint_material                                                                  : OPTIONAL Stratum_feature_template_component;
      SELF\Component_feature_joint.associated_definition RENAMED associated_interconnect_module : Interconnect_module;      
    WHERE
      WR1 : fabrication_feature_1 <> fabrication_feature_2;
      WR2 : TYPEOF(fabrication_feature_1) <> TYPEOF(auxiliary_joint_material);
      WR3 : TYPEOF(fabrication_feature_2) <> TYPEOF(auxiliary_joint_material);        
  END_ENTITY;
  
  ENTITY Passage_terminal_based_fabrication_joint_link;
      associated_terminal : fabricated_feature_select;
      precedent_point     : Fabrication_joint;
      subsequent_point    : Fabrication_joint;
    UNIQUE
      UR1 : associated_terminal, precedent_point, subsequent_point;
    WHERE
      WR1 : precedent_point <> subsequent_point;
      WR2 : precedent_point.fabrication_feature_2 = associated_terminal;
      WR3 : subsequent_point.fabrication_feature_1 = associated_terminal;
      WR4 : SIZEOF(TYPEOF(associated_terminal) *
            ['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' + 
             'COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL',
             'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' + 
             'VIA_TERMINAL']) = 1;
      WR5 : acyclic_passage_terminal_based_fabrication_joint_link (SELF,
        [subsequent_point],
        'FABRICATION_JOINT_ARM.PASSAGE_TERMINAL_BASED_FABRICATION_JOINT_LINK');
  END_ENTITY; 
  
  FUNCTION acyclic_passage_terminal_based_fabrication_joint_link
     (relation : Passage_terminal_based_fabrication_joint_link; 
     relatives : SET[1:?] OF Fabrication_joint; 
     specific_relation : STRING) : BOOLEAN; 
     LOCAL
       x : SET OF Passage_terminal_based_fabrication_joint_link;
     END_LOCAL;

     IF relation.precedent_point IN relatives THEN
       RETURN (FALSE);
     END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_point,
       'FABRICATION_JOINT_ARM.' + 'PASSAGE_TERMINAL_BASED_FABRICATION_JOINT_LINK.' +
       'SUBSEQUENT_POINT')) | specific_relation IN TYPEOF(pd));
     REPEAT i := 1 TO HIINDEX(x);
       IF NOT acyclic_passage_terminal_based_fabrication_joint_link(x[i],
         relatives + relation.precedent_point, specific_relation) THEN
         RETURN (FALSE);
       END_IF;
     END_REPEAT;
   RETURN (TRUE);
  END_FUNCTION;  

END_SCHEMA;
(*
   $Id: arm.exp,v 1.22 2006/04/05 02:54:24 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3954 - ISO/TS 10303-1669 Fabrication requirement - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3405
*)

SCHEMA Fabrication_requirement_arm; 

	USE FROM Fabrication_technology_arm;	-- ISO/TS 10303-1670

  TYPE metal_or_dielectric = ENUMERATION OF
    (over_finished_conductor,
     over_finished_dielectric);
  END_TYPE;

  ENTITY Fabrication_thickness_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      characterized_class       : metal_or_dielectric;
      characterized_class_range : Range_characteristic;
      tolerance                 : Tolerance_characteristic;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
      WR2: NOT EXISTS(SELF\Product_view_definition.id);
  END_ENTITY;

  ENTITY Layout_land_width_tolerance_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      mating_feature_pitch_class : Pitch_class;
      maximum_negative_deviation : Length_data_element;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
  END_ENTITY;

  ENTITY Layout_line_width_tolerance_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      characterized_stratum_technology : Stratum_technology;
      tolerance_line_width_class       : Line_width_class;
      maximum_negative_deviation       : Length_data_element;
      maximum_positive_deviation       : Length_data_element;
   WHERE    
      WR1: SELF\Product_view_definition.initial_context.life_cycle_stage = 'test'; 
  END_ENTITY;

  ENTITY Line_width_class;
      class_member : Range_characteristic;
      class_name   : STRING; 
    WHERE
      WR1 : SIZEOF(QUERY(np <* class_member\Representation.items | NOT ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(np)))) = 0;
  END_ENTITY;

  ENTITY Pitch_class;
      class_member : Range_characteristic;
      class_name   : STRING; 
    WHERE
      WR1 : SIZEOF(QUERY(np <* class_member\Representation.items | NOT ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(np)))) = 0;
  END_ENTITY;

	SUBTYPE_CONSTRAINT fr_predefined_requirement_view_definition_subtypes FOR Predefined_requirement_view_definition;     
	    (ONEOF (Layout_line_width_tolerance_requirement_occurrence,
	 Layout_land_width_tolerance_requirement_occurrence,
	 Fabrication_thickness_requirement_occurrence));
	END_SUBTYPE_CONSTRAINT;    

END_SCHEMA;

(*
   $Id: arm.exp,v 1.122 2006/11/02 23:30:15 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3957 - ISO/TS 10303-1670 Fabrication technology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3663
*)

SCHEMA Fabrication_technology_arm;
    USE FROM Constructive_solid_geometry_2d_arm; 	-- ISO/TS 10303-1731
	USE FROM Part_feature_location_arm; -- ISO/TS 10303-1714
	USE FROM Physical_layout_template_arm;	-- ISO/TS 10303-1722
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740
	USE FROM Extended_geometric_tolerance_arm;  -- ISO/TS 10303-1666
	USE FROM Part_template_shape_with_parameters_arm; -- ISO/TS 10303-1720

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
	

	TYPE ft_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Passage_technology,
	   Stratum_technology);
	END_TYPE; 
	
  TYPE ft_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
	(Filled_via_template,
	Passage_technology,
	Stratum_technology);
  END_TYPE;

  TYPE ft_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Stratum_technology, 
     Passage_technology);
  END_TYPE; 

	TYPE ft_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	   (Passage_technology,
      Stratum_technology,
      Stratum_technology_occurrence);
	END_TYPE; 

	SUBTYPE_CONSTRAINT ft_shape_feature_subtypes FOR Shape_feature; 
	    (ONEOF (Via_template_terminal,
         Component_termination_passage_template_terminal,
         Land_template_terminal));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT ft_template_definition_subtypes FOR Template_definition; 
	    (ONEOF (Geometric_template,
	    Single_stratum_template,
		 Stratum_stack_model));
	END_SUBTYPE_CONSTRAINT;

  TYPE land_template_terminal_class = ENUMERATION OF
    (surface_point_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class);
  END_TYPE;

  TYPE layer_position_type = ENUMERATION OF
    (secondary,
     all,
     external,
     primary,
     internal);
  END_TYPE;

  TYPE layer_purpose = ENUMERATION OF
    (other_signal,
     lands_only,
     power_or_ground,
     embedded_passive_capacitor_dielectric,
     embedded_passive_resistor);
  END_TYPE;

 	TYPE mt_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Land_physical_template,
		Documentation_layer_technology);
	END_TYPE;

	TYPE mt_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Land_template_terminal);
	END_TYPE;

  TYPE predefined_documentation_layer_purpose = ENUMERATION OF
    (soldermask,
     solderpaste,
     silkscreen,
     generic_layer,
     glue,
     gluemask,
     pastemask);
  END_TYPE;

  TYPE stiffness_class = ENUMERATION OF
    (fluid_like,
     stiff_laminate);
  END_TYPE;

  ENTITY Blind_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      of_measure_orientation               : measure_orientation;
      datum_reference_layer                : Stratum_technology_occurrence;
      datum_reference_side                 : Stratum_technology_occurrence_link;
      bottom_distance_from_datum_reference : Shape_dimension_representation;
  END_ENTITY;

  ENTITY Component_termination_passage_template
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_component_termination_passage_definition;
    INVERSE
      access_mechanisms : SET[2:?] OF component_termination_passage_template_terminal FOR associated_definition;
  END_ENTITY;

  ENTITY Component_termination_passage_template_interface_terminal
    SUBTYPE OF (Component_termination_passage_template_terminal);
  END_ENTITY;

  ENTITY Component_termination_passage_template_join_terminal
    SUBTYPE OF (Component_termination_passage_template_terminal);
      disallowed_inter_stratum_extent : OPTIONAL SET[1:?] OF Stratum_technology_occurrence_link;
  END_ENTITY;

  ENTITY Component_termination_passage_template_terminal
    ABSTRACT SUPERTYPE OF (ONEOF (Component_termination_passage_template_interface_terminal,
 Component_termination_passage_template_join_terminal))
    SUBTYPE OF (Shape_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition : Component_termination_passage_template;
      SELF\Shape_feature.connection_area                                : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
 associated_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;
  
  ENTITY Continuous_template
    SUBTYPE OF (Geometric_template);
  WHERE
    WR1 : SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
          NOT 
          (SIZEOF(['CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_AREA_CSG_2D_MODEL',
                   'PART_TEMPLATE_EXTENSION_ARM.PLANAR_PATH_SHAPE_MODEL_WITH_PARAMETERS'] * TYPEOF(s))
           = 1)
          )) = 0;
  END_ENTITY;

  ENTITY Counterbore_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      smaller_passage : Unsupported_passage_template;
      larger_passage  : Blind_passage_template;
  END_ENTITY;

  ENTITY Countersunk_passage_template
    SUBTYPE OF (Unsupported_passage_template);
      constant_diameter_passage : Unsupported_passage_template;
      tapered_passage           : Blind_passage_template;
  END_ENTITY;

  ENTITY Default_attachment_size_based_land_physical_template
    SUBTYPE OF (Land_physical_template, Shape_feature);
      SELF\Shape_feature.connection_area RENAMED minimum_attachment_region_size : OPTIONAL SET[1:1] OF Connection_zone_in_layout_template;
      maximum_attachment_region_size : OPTIONAL Connection_zone_in_layout_template;
    DERIVE
      SELF\Shape_element.containing_shape : Default_attachment_size_based_land_physical_template := SELF;
      SELF\Shape_feature.element_name : STRING := '';      
      SELF\Shape_element.id : STRING := SELF\Item_shape.id;      
    INVERSE
      interface_access_mechanisms : SET[1:?] OF land_template_interface_terminal FOR associated_definition;
    WHERE
      WR1 : NOT (EXISTS(minimum_attachment_region_size) AND EXISTS(maximum_attachment_region_size)) OR (minimum_attachment_region_size[1] :<>: maximum_attachment_region_size);
      WR2 : NOT (EXISTS(minimum_attachment_region_size)) OR (SIZEOF(QUERY(mars <* minimum_attachment_region_size |
                 NOT(mars\Shape_element.containing_shape :=: SELF)
                 )) = 0);
      WR3 : maximum_attachment_region_size\Shape_element.containing_shape :=: SELF;
  END_ENTITY;

  ENTITY Default_component_termination_passage_definition
    SUBTYPE OF (Passage_technology);
      allowed_component_terminal_extent                        : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_passage_extent       : Length_tolerance_characteristic;
    INVERSE
      SELF\Passage_technology.deposition_material : SET [1:1] OF material_identification FOR items;
    WHERE
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]);
  END_ENTITY;

  ENTITY Default_passage_based_land_physical_template
    ABSTRACT SUPERTYPE OF (ONEOF (Default_plated_passage_based_land_physical_template,
    Default_unsupported_passage_based_land_physical_template))
    SUBTYPE OF (Land_physical_template);
      minimum_fabrication_allowance : Length_data_element;
      of_passage_technology         : Passage_technology;
      minimum_annular_ring          : Length_data_element;
  END_ENTITY;

	ENTITY Default_plated_passage_based_land_physical_template
	  SUBTYPE OF (Default_passage_based_land_physical_template);
	 WHERE
	   WR1 : SELF\Default_passage_based_land_physical_template.of_passage_technology.plated_passage = TRUE;
	END_ENTITY;

  ENTITY Default_tapered_blind_via_definition
    SUBTYPE OF (Default_via_definition);
      as_finished_interior_passage_extent      : Length_tolerance_characteristic;
    WHERE
      WR1: less(as_finished_interior_passage_extent, SELF\default_via_definition.as_finished_passage_extent);
  END_ENTITY;

  ENTITY Default_unsupported_passage_based_land_physical_template
    SUBTYPE OF (Default_passage_based_land_physical_template);
      SELF\Default_passage_based_land_physical_template.of_passage_technology : Default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY Default_unsupported_passage_definition
    SUBTYPE OF (Passage_technology);
      SELF\Passage_technology.as_finished_passage_extent : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Default_via_definition
    SUBTYPE OF (Passage_technology);
      SELF\Passage_technology.as_finished_deposition_thickness : Length_tolerance_characteristic;
      SELF\Passage_technology.as_finished_passage_extent       : Length_tolerance_characteristic;
    INVERSE
      SELF\Passage_technology.deposition_material : SET [1:1] OF material_identification FOR items;
    WHERE
      WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]);
  END_ENTITY;

  ENTITY Design_layer_technology
    SUBTYPE OF (Stratum_technology);
      design_layer_purpose                                     : layer_purpose;
      SELF\Stratum_technology.minimum_finished_feature_size    : Length_data_element;
      SELF\Stratum_technology.minimum_finished_feature_spacing : Length_data_element;
   WHERE
	WR1 : (SIZEOF([SELF\Stratum_technology.stratum_material.electrical_conductivity_classification,
           SELF\Stratum_technology.stratum_material.thermal_conductivity_classification] *
           ['conductive']) >= 1) OR
       (SELF\Stratum_technology.stratum_material.magnetic_permeability_classification IN ['highly permeable']) OR
       (SELF\Stratum_technology.stratum_material.optical_insertion_loss_classification IN ['vacuum', 'very low loss', 'low loss']);
  END_ENTITY;

  ENTITY Documentation_layer_technology
    SUBTYPE OF (Stratum_technology);
      pre_defined_documentation_layer_purpose : OPTIONAL predefined_documentation_layer_purpose;
    INVERSE
	  externally_defined_documentation_layer_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (pre_defined_documentation_layer_purpose)) XOR ((SIZEOF(externally_defined_documentation_layer_purpose)) = 1);
  END_ENTITY;

  ENTITY Filled_via_template
    SUBTYPE OF (Via_template);
    INVERSE
      fill_material : SET[1:1] OF Material_identification FOR items;
    WHERE
      WR1: 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (fill_material[1]);
  END_ENTITY;

  ENTITY Inter_stratum_feature_template
    SUPERTYPE OF (ONEOF(Component_termination_passage_template,
      Unsupported_passage_template,
      Via_template))
    SUBTYPE OF (Geometric_template);
      of_passage_technology : Passage_technology;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Land_physical_template
    SUPERTYPE OF (ONEOF (Default_passage_based_land_physical_template,
		 Default_attachment_size_based_land_physical_template))
    SUBTYPE OF (Stratum_feature_template);
      SELF\Single_stratum_template.of_stratum_technology : OPTIONAL SET[1:?] OF Design_layer_technology;
    INVERSE
      access_mechanisms                                   : SET[1:?] OF land_template_terminal FOR containing_shape;
      pre_defined_classification_code                     : SET[0:1] OF External_source_identification FOR item;      
    WHERE
      WR1 : SIZEOF(QUERY(ltjt <* access_mechanisms | NOT ('FABRICATION_TECHNOLOGY_ARM.LAND_TEMPLATE_JOIN_TERMINAL' IN TYPEOF(ltjt)))) = 0;
      WR2 : SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
             NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_AREA_CSG_2D_MODEL' IN TYPEOF(s)))) = 0;
      WR3 : SIZEOF(SELF\Geometric_template.shapes) > 0;
  END_ENTITY;

  ENTITY Land_template_interface_terminal
    SUBTYPE OF (Land_template_terminal);
      SELF\Land_template_terminal.associated_definition : Default_attachment_size_based_land_physical_template;
  END_ENTITY;

  ENTITY Land_template_join_terminal
    SUBTYPE OF (Land_template_terminal);
  END_ENTITY;

  ENTITY Land_template_terminal
    ABSTRACT SUPERTYPE OF (ONEOF (Land_template_join_terminal,
 Land_template_interface_terminal))
    SUBTYPE OF (Shape_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition : Land_physical_template;
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
      connection_zone_category                                          : OPTIONAL SET[1:?] OF land_template_terminal_class;
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
 associated_definition;
    WHERE
      WR1 : NOT (EXISTS(SELF\Shape_feature.connection_area)) OR EXISTS(connection_zone_category);
      WR2 : NOT (EXISTS(SELF\Shape_feature.connection_area)) OR (SIZEOF(SELF\Shape_feature.connection_area) = SIZEOF(connection_zone_category));
      WR3 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Material_removal_feature_template
    SUBTYPE OF (Single_stratum_continuous_template);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
      WR2 : SIZEOF(SELF\Geometric_template.shapes) > 0;
  END_ENTITY;

	ENTITY Passage_technology
		SUPERTYPE OF (ONEOF (Default_via_definition,
 			Default_component_termination_passage_definition,
 			Default_unsupported_passage_definition));
      name                              : STRING;
      as_finished_deposition_thickness  : OPTIONAL Length_tolerance_characteristic;
      as_finished_passage_extent        : OPTIONAL Length_tolerance_characteristic;      
      maximum_aspect_ratio              : OPTIONAL REAL;      
      minimum_finished_size             : OPTIONAL Length_data_element;      
      plated_passage                    : BOOLEAN;
	 DERIVE
		specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_ARM.PROCESS_SPECIFICATION');
     INVERSE
	  deposition_material : SET [0:1] OF material_identification FOR items;      
     UNIQUE
       UR1 : name;
	 WHERE
	  WR1 : NOT (SIZEOF(deposition_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (deposition_material[1]));
      WR2: NOT (plated_passage) OR (SIZEOF(deposition_material) = 1);
      WR3: NOT EXISTS(as_finished_deposition_thickness) OR (SIZEOF(deposition_material) = 1);
      WR4: NOT (plated_passage) OR
           (SIZEOF([deposition_material[1].electrical_conductivity_classification,
                    deposition_material[1].thermal_conductivity_classification] *
                   ['conductive']) >= 1);
	END_ENTITY;

  ENTITY Single_stratum_continuous_template
    ABSTRACT SUPERTYPE OF (ONEOF (Stratum_feature_template,
                                Material_removal_feature_template))  
    SUBTYPE OF (Continuous_template, Single_stratum_template);
  END_ENTITY;

  ENTITY Single_stratum_template
    ABSTRACT SUPERTYPE OF (Single_stratum_continuous_template)
    SUBTYPE OF (Template_definition);
      of_stratum_technology : OPTIONAL SET [1:?] OF stratum_technology;
  END_ENTITY;

  ENTITY Stratum_feature_template
    SUPERTYPE OF (Land_physical_template)
    SUBTYPE OF (Single_stratum_continuous_template);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Stratum_stack_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF(Template_definition);
    DERIVE
      composing_occurrence : SET [1:?] OF Stratum_technology_occurrence := get_stack(composing_link);
    INVERSE
      composing_link : SET[1:?] OF Stratum_technology_occurrence_link FOR scope;
  END_ENTITY;

  ENTITY Stratum_technology
    SUPERTYPE OF (ONEOF (Design_layer_technology,
 Documentation_layer_technology));
      name                             : STRING;  
      layer_position                   : layer_position_type;
      stratum_thickness                : Length_tolerance_characteristic;
      minimum_finished_feature_size    : OPTIONAL Length_data_element;
      laminate_stiffness_class         : OPTIONAL stiffness_class;
      minimum_finished_feature_spacing : OPTIONAL Length_data_element;
      maximum_feature_size_requirement : OPTIONAL Length_data_element;
      minimum_aspect_ratio             : OPTIONAL REAL;
	DERIVE
		specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'specification', 
  			'SPECIFICATION_DOCUMENT_ARM.PROCESS_SPECIFICATION');
		surface_specification: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'surface specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
   INVERSE
	  stratum_material : SET[1:1] OF material_identification FOR items;      
    UNIQUE
      UR1 : name;
    WHERE
      WR1 : NOT (layer_position = layer_position_type.primary) OR ('FABRICATION_TECHNOLOGY_ARM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
      WR2 : NOT (layer_position = layer_position_type.secondary) OR ('FABRICATION_TECHNOLOGY_ARM.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF(SELF));
	  WR3 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (stratum_material);
  END_ENTITY;

  ENTITY Stratum_technology_occurrence;
    name       : STRING; 
    definition : Stratum_technology;
  UNIQUE
    UR1: name;  
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_link;
    precedent_sto  : Stratum_technology_occurrence;
    subsequent_sto : Stratum_technology_occurrence;
    scope          : Stratum_stack_model;
  WHERE
   WR1 : NOT (precedent_sto :=: subsequent_sto) OR (SIZEOF(scope.composing_link) = 1);
   WR2 : acyclic_stratum_technology_occurrence_link(SELF, [subsequent_sto], 
     'FABRICATION_TECHNOLOGY_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK');
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_swap_relationship;
    primary_sto  : Stratum_technology_occurrence;
    secondary_sto : Stratum_technology_occurrence;
    scope : Stratum_stack_model;
   UNIQUE
    UR1 : primary_sto, scope;
    UR2 : secondary_sto, scope;
  WHERE
   WR1 : primary_sto <> secondary_sto;
   WR2 : (primary_sto IN scope\Stratum_stack_model.composing_occurrence) AND
         (secondary_sto IN scope\Stratum_stack_model.composing_occurrence);
   WR3 : acyclic_stratum_technology_occurrence_swap_relationship(SELF,
     [secondary_sto], 
     'FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE_SWAP_RELATIONSHIP');
  END_ENTITY;

  ENTITY Stratum_technology_swap_relationship;
    primary_stratum_technology   : Stratum_technology;
    secondary_stratum_technology : Stratum_technology;
   UNIQUE
    UR1: primary_stratum_technology;
    UR2: secondary_stratum_technology;
   WHERE 
    WR1 : NOT (('FABRICATION_TECHNOLOGY_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(primary_stratum_technology)) AND
              EXISTS(primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose))
          OR
          (primary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose =
           secondary_stratum_technology\Documentation_layer_technology.pre_defined_documentation_layer_purpose);
    WR2: TYPEOF(primary_stratum_technology) = TYPEOF(secondary_stratum_technology);
    WR3: primary_stratum_technology\Stratum_technology.layer_position = layer_position_type.primary;
    WR4: secondary_stratum_technology\Stratum_technology.layer_position = layer_position_type.secondary;
    WR5: primary_stratum_technology <> secondary_stratum_technology;
    WR6: acyclic_stratum_technology_swap_relationship(SELF,
      [secondary_stratum_technology], 
     'FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP');
  END_ENTITY;

  ENTITY Unsupported_passage_template
    SUPERTYPE OF (ONEOF (Counterbore_passage_template,
      Countersunk_passage_template,
      Blind_passage_template))
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY Via_template
    SUBTYPE OF (Continuous_template, Inter_stratum_feature_template);
      SELF\Inter_stratum_feature_template.of_passage_technology : Default_via_definition;
    INVERSE
      access_mechanisms : SET[2:?] OF via_template_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY Via_template_terminal
    SUBTYPE OF (Shape_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition : Via_template;
      disallowed_inter_stratum_extent                                   : OPTIONAL SET [1:?] OF Stratum_technology_occurrence_link;
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
 associated_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;


  FUNCTION acyclic_stratum_technology_occurrence_link
    (relation : Stratum_technology_occurrence_link; 
    relatives : SET[1:?] OF Stratum_technology_occurrence; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_occurrence_link := [];
  END_LOCAL;
    IF relation.subsequent_sto IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.subsequent_sto,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_OCCURRENCE_LINK.' +
      'SUBSEQUENT_STO')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_Stratum_technology_occurrence_link(x[i], relatives +
        relation.subsequent_sto, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_occurrence_swap_relationship
    (relation : Stratum_technology_occurrence_swap_relationship; 
    relatives : SET[1:?] OF Stratum_technology_occurrence; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_occurrence_swap_relationship := [];
  END_LOCAL;
    IF relation.secondary_sto IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.secondary_sto,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_OCCURRENCE_SWAP_RELATIONSHIP.' +
      'SECONDARY_STO')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_occurrence_swap_relationship(x[i],
        relatives +
        relation.secondary_sto, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_stratum_technology_swap_relationship
    (relation : Stratum_technology_swap_relationship; 
    relatives : SET[1:?] OF Stratum_technology; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Stratum_technology_swap_relationship := [];
  END_LOCAL;

    IF relation.secondary_stratum_technology IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.secondary_stratum_technology,
      'FABRICATION_TECHNOLOGY_ARM.' +
      'STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP.' +
      'SECONDARY_STRATUM_TECHNOLOGY')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_stratum_technology_swap_relationship(x[i], relatives +
        relation.secondary_stratum_technology, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
  
FUNCTION get_electrical_conductivity
  (mi : SET[0:?] OF Material_identification) : BOOLEAN;
	REPEAT i := 1 to SIZEOF(mi) by 1;
	  IF ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' 
	  	IN TYPEOF (mi[i])) THEN
		  IF((EXISTS(mi[i].electrical_conductivity_classification)) AND 
		  (mi[i].electrical_conductivity_classification IN ['conductive', 'semi conductive', 'super conductive'])) THEN
	  		RETURN (TRUE);
	  	END_IF;	
	  END_IF;
	END_REPEAT;
	RETURN (FALSE);
END_FUNCTION;

 FUNCTION get_stack(input : SET OF Stratum_technology_occurrence_link) : SET OF Stratum_technology_occurrence;
  LOCAL
   sto : SET OF Stratum_technology_occurrence := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   sto := sto + input[i].precedent_sto + input[i].subsequent_sto;
  END_REPEAT;
  RETURN(sto);
  END_FUNCTION;

  FUNCTION less(input1 : Length_tolerance_characteristic;
              input2 : Length_tolerance_characteristic) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

RULE unique_land_physical_template FOR (Land_physical_template);
   LOCAL
     esi : BAG OF External_source_identification := [];
     iid : BAG OF String := [];
     itype : BAG OF String := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Land_physical_template) by 1;
     esi  := esi + Land_physical_template[i].pre_defined_classification_code[1];
     iid := iid + Land_physical_template[i].pre_defined_classification_code[1]
\External_source_identification.source_id;
     itype := itype + Land_physical_template[i].pre_defined_classification_code
[1]\External_source_identification.source_type;
   END_REPEAT;  
  WHERE
   WR1 : (SIZEOF(esi) = SIZEOF(bag_to_set(esi))) AND
         (SIZEOF(iid) = SIZEOF(bag_to_set(iid))) AND
         (1 = SIZEOF(bag_to_set(itype)));
  END_RULE;



END_SCHEMA;
(*
 $Id: arm.exp,v 1.8 2004/10/21 18:05:39 darla Exp $
 ISO TC184/SC4/WG12 N1285 - ISO/TS 10303-1512 Faceted boundary representation - EXPRESS ARM
*)

SCHEMA Faceted_boundary_representation_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Faceted_brep_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.22 2006/06/13 22:16:54 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3960 - ISO/TS 10303-1671 Feature and connection zone - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3408
*)

SCHEMA Feature_and_connection_zone_arm; 
    USE FROM Shape_feature_arm; -- new

  ENTITY Connection_zone
  	ABSTRACT SUPERTYPE
  	SUBTYPE OF (Shape_feature_occurrence);
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF, 'FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA.CONNECTION_AREA')) +
             SIZEOF(USEDIN(SELF, 'FEATURE_AND_CONNECTION_ZONE_ARM.SHAPE_FEATURE.CONNECTION_AREA')))
            = 1;
      WR2 : NOT EXISTS (SELF\Shape_element.description);
      WR3 : NOT EXISTS (SELF\Shape_element.element_name);
  END_ENTITY;

  ENTITY Feature_definition_with_connection_area
    SUBTYPE OF (Shape_feature_definition);
    connection_area : SET [1:?] OF Connection_zone;
  END_ENTITY;

  ENTITY Location_shape_model
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
  
  ENTITY Shape_feature
  	ABSTRACT SUPERTYPE
       SUBTYPE OF (Shape_element);
   		connection_area : OPTIONAL SET[1:?] OF Connection_zone;
   		SELF\Shape_element.element_name : STRING;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, 
      SELF\shape_element.containing_shape;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.15 2004/10/21 18:07:44 darla Exp $
 ISO TC184/SC4/WG12 N2123 - ISO/TS 10303-1127 File identification - EXPRESS ARM
*)

SCHEMA File_identification_arm;

USE FROM External_item_identification_assignment_arm;

TYPE located_select = SELECT BASED_ON external_identification_item WITH (File);
END_TYPE;

ENTITY Digital_file
SUBTYPE OF (File);
END_ENTITY;

ENTITY File
ABSTRACT SUPERTYPE OF (ONEOF(Digital_file, Hardcopy));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;

ENTITY Hardcopy
SUBTYPE OF (File);
END_ENTITY;

ENTITY File_location_identification
SUBTYPE OF (External_item_identification);
WHERE
WR1: 'FILE_IDENTIFICATION_ARM.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.8 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3963 - ISO/TS 10303-1672 Fill area style - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3411
*)

SCHEMA Fill_area_style_arm;

	USE FROM Basic_curve_arm;	-- ISO/TS 10303-1651
	USE FROM Styled_curve_arm;	-- ISO/TS 10303-1749
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753

	USE FROM Extended_basic_geometry_arm; 	-- ISO/TS 10303-1667 

	TYPE fill_area_style_select = SELECT
	   (Hatch_style, 
	    Tile_style);
	END_TYPE; 

  ENTITY Hatch_style
    ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_hatch_style, User_defined_hatch_style))
    SUBTYPE OF (Detailed_geometric_model_element);
--    WHERE
--      WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Externally_defined_hatch_style -- mapps to Externally_defined_hatch_style 
    SUBTYPE OF (Hatch_style); 
  END_ENTITY;

  ENTITY User_defined_hatch_style -- mapps to Fill_area_style_hatching
    SUBTYPE OF (Hatch_style);
      hatch_line_appearance         : Curve_appearance;
      start_of_next_hatch_line      : Vector;
      point_of_reference_hatch_line : Cartesian_point;
      pattern_start                 : Cartesian_point;
      hatch_line_angle              : Angle_data_element;
    WHERE
     WR1 : 'STYLED_CURVE_ARM.SOLID_CURVE_FONT' IN TYPEOF(SELF.hatch_line_appearance.font);
  END_ENTITY;

	ENTITY Tile_style
	  ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_tile_style, User_defined_tile_style))
	  SUBTYPE OF (Detailed_geometric_model_element);
--    WHERE
--      WR1: NOT EXISTS (SELF\Representation_item.name);
	END_ENTITY;

  ENTITY Externally_defined_tile_style -- mapps to Externally_defined_tile_style
    SUBTYPE OF (Tile_style); 
  END_ENTITY;

-- This entity specifies the shape of the tile and how it is repeated. Details are defined in part 46.
  ENTITY User_defined_tile_style -- mapps to Fill_area_style_tiles
    SUBTYPE OF (Tile_style);
      first_direction_repeat_factor  : Vector;
      second_direction_repeat_factor : Vector;
--      tile                           : Tile_shape;
      tiling_scale                   : INTEGER; -- positive_ratio_measure;
  END_ENTITY;
  (* Similar like Tiling - could be subtype of Tiling *)

END_SCHEMA;
(*
   $Id: arm.exp,v 1.15 2006/04/26 20:58:48 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3885 - ISO/TS 10303-1646 Footprint definition - EXPRESS ARM
*)

SCHEMA Footprint_definition_arm;

    USE FROM Part_template_2d_shape_arm; -- ISO/TS 10303-1716
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  SUBTYPE_CONSTRAINT structured_template_planar_shape_model_subtypes FOR Structured_template_planar_shape_model;   
 	(ONEOF (Breakout_footprint_definition_shape_model, Footprint_definition_shape_model));
  END_SUBTYPE_CONSTRAINT;  

  SUBTYPE_CONSTRAINT multi_stratum_structured_template_subtypes FOR Multi_stratum_structured_template;   
 	(ONEOF (Padstack_definition, Generic_footprint_definition, Multi_stratum_special_symbol_template));
  END_SUBTYPE_CONSTRAINT;  

  ENTITY Breakout_footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_footprint : Footprint_definition;
    INVERSE
      breakout_traces : SET[1:?] OF Stratum_feature_template_location_in_breakout_footprint_definition FOR assembly;
    WHERE
      WR1: SELF\Multi_stratum_structured_template.location = reference_footprint\Multi_stratum_structured_template.location;
  END_ENTITY;

  ENTITY Breakout_footprint_definition_shape_model
    SUBTYPE OF (Structured_template_planar_shape_model);
      SELF\Structured_template_planar_shape_model.shape_characterized_definition : SET[1:1] OF Breakout_footprint_definition;
      reference_shape : Footprint_definition_shape_model;
    WHERE
      WR1 : reference_shape.shape_characterized_definition[1] :=: shape_characterized_definition[1].reference_footprint;
  END_ENTITY;

  ENTITY Footprint_definition
    SUBTYPE OF (Generic_footprint_definition);
      reference_package : OPTIONAL Part_usage_view;
    WHERE
      WR1 : SIZEOF (QUERY(shape <* SELF\Structured_template.shapes |
               NOT ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION_SHAPE_MODEL' IN TYPEOF(shape))
              )) = 0;
      WR2 : SIZEOF (QUERY(tlist <* SELF\Structured_template.templates |
               ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(tlist.template))
              )) = 0;
  END_ENTITY;

  ENTITY Footprint_definition_shape_model
    SUBTYPE OF (Structured_template_planar_shape_model);
      SELF\Structured_template_planar_shape_model.shape_characterized_definition : SET[1:1] OF Footprint_definition;
      reference_shape : OPTIONAL physical_unit_shape_model_select;
    WHERE
      WR1 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
            NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_definition)) OR
            NOT ('PART_TEMPLATE_2D_SHAPE_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(shape_characterized_definition[1])) OR      
                 (shape_characterized_definition[1]\Footprint_definition.reference_package :=: 
                  reference_shape\Physical_unit_shape_model.shape_characterized_definition);

      WR2 : NOT (SIZEOF(['PHYSICAL_UNIT_3D_SHAPE_ARM.PHYSICAL_UNIT_3D_SHAPE_MODEL',
                         'PHYSICAL_UNIT_2D_SHAPE_ARM.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
                ('PACKAGE_ARM.PACKAGE' IN TYPEOF(reference_shape\Physical_unit_shape_model.shape_characterized_definition));

      WR3 : NOT (SIZEOF(['PART_TEMPLATE_3D_SHAPE_ARM.PART_TEMPLATE_3D_SHAPE_MODEL',
                         'PART_TEMPLATE_2D_SHAPE_ARM.PART_TEMPLATE_PLANAR_SHAPE_MODEL'] * TYPEOF(reference_shape)) = 1) OR 
                ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE' 
                   IN TYPEOF(reference_shape\Part_template_shape_model.shape_characterized_definition));
      WR4 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Generic_footprint_definition
    ABSTRACT SUPERTYPE OF (ONEOF (Footprint_definition, Breakout_footprint_definition))
    SUBTYPE OF (Multi_stratum_structured_template);
    DERIVE 
      SELF\Multi_stratum_structured_template.location : template_arrangement := get_template_arrangement(padstacks);
      padstacks : SET[1:?] OF Template_location_in_structured_template := bag_to_set(QUERY(tlict <* SELF\Structured_template.templates |
         ('PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION' IN TYPEOF(tlict.template))));
    WHERE
      WR1 : SIZEOF(QUERY(ps <* templates | (ps.template\Multi_stratum_structured_template.location <> location)
              AND (ps.template\Multi_stratum_structured_template.location <> template_arrangement.symmetrical))) = 0;
      WR2 : ((location = template_arrangement.top) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top')) OR 
            (NOT (location = template_arrangement.top) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'top'));
      WR3 : ((location = template_arrangement.bottom) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom')) OR 
            (NOT (location = template_arrangement.bottom) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'bottom'));
      WR4 : ((location = template_arrangement.symmetrical) AND (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical')) OR 
            (NOT (location = template_arrangement.symmetrical) AND NOT (SELF\Product_view_definition.initial_context\View_definition_context.description = 'symmetrical'));
  END_ENTITY;

  ENTITY Part_feature_based_template_location
    SUBTYPE OF (Template_location_in_structured_template);
      reference_feature : Part_feature;
    DERIVE
      all_reference_feature : SET [1:?] OF Part_feature := bag_to_set(USEDIN
      (SELF\Template_location_in_structured_template.assembly,
      'PART_TEMPLATE_2D_SHAPE_ARM.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.ASSEMBLY')); 
      SELF\Template_location_in_structured_template.reference_designation :
        STRING := reference_feature\Shape_element.element_name;      
    WHERE
      WR1: SIZEOF(QUERY( arf <* all_reference_feature | NOT(reference_feature.associated_definition :=: arf.associated_definition))) = 0;
  END_ENTITY;

  ENTITY Stratum_feature_template_location_in_breakout_footprint_definition
    SUBTYPE OF (Stratum_specific_template_location);
      SELF\Template_location_in_structured_template.assembly : Breakout_footprint_definition;
      SELF\Template_location_in_structured_template.template : Stratum_feature_template;
      original_padstack : Part_feature_based_template_location;
      breakout_padstack : Template_location_in_structured_template;
    WHERE
    -- original_padstack must belong to Footprint_definition
      WR1: original_padstack.assembly :=: assembly.reference_footprint;
    -- breakout_padstack must belong to Breakout_footprint_definition
      WR2: breakout_padstack.assembly :=: assembly;
  END_ENTITY;

  FUNCTION get_template_arrangement(
    input : SET OF Template_location_in_structured_template
  ) : template_arrangement;

    LOCAL
      tlist : SET OF Template_location_in_structured_template := 
        (QUERY(inx <* input | ('PART_TEMPLATE_2D_SHAPE_ARM.MULTI_STRATUM_STRUCTURED_TEMPLATE' IN TYPEOF(inx.template))));
      pabt : BAG OF STRING := [];
      pabb : BAG OF STRING := [];
      pabs : BAG OF STRING := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(tlist) BY 1;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.top) THEN
        pabt := pabt + 'top';
      END_IF;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.bottom) THEN
        pabb := pabb + 'bottom';
      END_IF;
      IF (tlist[i].template\Multi_stratum_structured_template.location = template_arrangement.symmetrical) THEN
        pabs := pabs + 'symmetrical';
      END_IF;
    END_REPEAT;
    IF ((SIZEOF(pabt) > 0) AND (SIZEOF(pabb) = 0)) THEN
      RETURN(template_arrangement.top);
    END_IF;
    IF ((SIZEOF(pabb) > 0) AND (SIZEOF(pabt) = 0)) THEN
      RETURN(template_arrangement.bottom);
    END_IF;
    IF ((SIZEOF(pabb) = 0) AND (SIZEOF(pabt) = 0) AND (SIZEOF(pabs) > 0)) THEN
      RETURN(template_arrangement.symmetrical);
    END_IF;
    RETURN(?);
  END_FUNCTION;

END_SCHEMA;
(*
$Id: arm.exp,v 1.17 2006/03/24 18:31:03 thendrix Exp $
ISO TC184/SC4/WG12 N4348 - ISO/TS 10303-1006 Foundation representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2905
*) 


SCHEMA Foundation_representation_arm; 

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;

ENTITY Representation;
  id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;

ENTITY Representation_item
  ABSTRACT SUPERTYPE ;
  name : OPTIONAL STRING;
END_ENTITY;

ENTITY Representation_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;

END_SCHEMA;  -- Foundation_representation_arm
(*
   $Id: arm.exp,v 1.8 2006/04/18 13:05:39 liutkus Exp $
   ISO TC184/SC4/WG12 N3969 - ISO/TS 10303-1674 Functional assignment to part - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3669
*)

SCHEMA Functional_assignment_to_part_arm;

	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732

	TYPE fatp_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Part_connected_terminals_definition);
	END_TYPE; 

  ENTITY Functional_usage_view_to_part_terminal_assignment;
      physical_usage_view_terminal   : Part_terminal;
      functional_usage_view_terminal : Scalar_terminal_definition;
    UNIQUE
      UR1 : functional_usage_view_terminal,
 physical_usage_view_terminal;
  END_ENTITY;

  ENTITY Part_connected_terminals_definition;
      name                  : STRING;   
      associated_definition : Part_usage_view;
      connected_terminals   : SET[2:?] OF Part_terminal;
    UNIQUE
      UR1 : name,
 associated_definition;
    WHERE
      WR1 : SIZEOF(QUERY(ct <* connected_terminals | NOT (associated_definition = ct\Shape_element.containing_shape))) = 0;
  END_ENTITY;

  ENTITY Part_terminal
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Part_feature);
    INVERSE
      connection_requirement         : SET[0:1] OF part_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET[0:1] OF functional_usage_view_to_part_terminal_assignment FOR physical_usage_view_terminal;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.10 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3972 - ISO/TS 10303-1675 Functional decomposition to assembly design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3417
*)

SCHEMA Functional_decomposition_to_assembly_design_arm;

	USE FROM Assembly_technology_arm;	-- ISO/TS 10303-1649
	USE FROM Functional_decomposition_to_design_arm; -- ISO/TS 10303-1676

  ENTITY Design_functional_unit_allocation_to_assembly_joint;
      functional_design_definition_path : Design_composition_path;
      implementation                    : Assembly_joint;
    UNIQUE
      UR1 : functional_design_definition_path;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2006/10/23 22:17:30 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3975 - ISO/TS 10303-1676 Functional decomposition to design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3420
*)

SCHEMA Functional_decomposition_to_design_arm;

	USE FROM Design_management_arm;	-- ISO/TS 10303-1661
	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728
	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704	

    TYPE fdtd_managed_design_object = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON managed_design_object WITH
   		(Design_functional_unit_allocation_to_assembly_component,
         Design_functional_unit_allocation_to_reference_functional_unit);
    END_TYPE;

	SUBTYPE_CONSTRAINT change_design_object_management_relationship_subtypes FOR Change_design_object_management_relationship;             
	    (ONEOF (Terminal_swap_specification,
	 	Gate_path_swap_specification,
	 	Component_swap_specification));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Component_swap_specification
    SUBTYPE OF (Change_design_object_management_relationship);
      SELF\Change_design_object_management_relationship.current_design_object  : Design_functional_unit_allocation_to_assembly_component;
      SELF\Change_design_object_management_relationship.previous_design_object : Design_functional_unit_allocation_to_assembly_component;
  END_ENTITY;

  ENTITY Design_composition_path;
      path_element           : SET[1:?] OF Functional_unit;
      design_functional_unit : Functional_unit;
  END_ENTITY;

  ENTITY Design_functional_unit_allocation_to_assembly_component;
      functional_design_definition_path : Design_composition_path;
      implementation                    : Assembly_component;
      global_swappable                  : BOOLEAN;
      local_swappable                   : BOOLEAN;
      of_property                       : OPTIONAL SET[1:?] OF Property_value_representation;
      path_alias                        : STRING; 
      swap_code                         : STRING;
    UNIQUE
      UR1 : implementation,
 path_alias;
  END_ENTITY;

  ENTITY Design_functional_unit_allocation_to_reference_functional_unit;
      reference_definition_path : Reference_composition_path;
      design_definition_path    : Design_composition_path;
  END_ENTITY;

  ENTITY Gate_path_swap_specification
    SUBTYPE OF (Change_design_object_management_relationship);
      SELF\Change_design_object_management_relationship.current_design_object  : Design_functional_unit_allocation_to_reference_functional_unit;
      SELF\Change_design_object_management_relationship.previous_design_object : Design_functional_unit_allocation_to_reference_functional_unit;
  END_ENTITY;

  ENTITY Reference_composition_path;
      path_element              : SET[1:?] OF Functional_unit;
      reference_functional_unit : Functional_unit;
  END_ENTITY;

  ENTITY Reference_functional_unit_assignment_to_template;
      functional_design_definition_path : Reference_composition_path;
      implementation                    : Template_definition;
      of_property                       : OPTIONAL SET[1:?] OF Property_value_representation;
      path_alias                        : STRING; 
      swap_code                         : OPTIONAL STRING;
    UNIQUE
      UR1 : implementation,
 path_alias;
  END_ENTITY; 

  ENTITY Reference_functional_unit_assignment_to_part;
      functional_design_definition_path : Reference_composition_path;
      implementation                    : Part_view_definition;
      of_property                       : OPTIONAL SET[1:?] OF Property_value_representation;
      path_alias                        : STRING; 
      swap_code                         : OPTIONAL STRING;
    UNIQUE
      UR1 : implementation,
 path_alias;
  END_ENTITY; 

  ENTITY Terminal_swap_specification
    SUBTYPE OF (Change_design_object_management_relationship);
      SELF\Change_design_object_management_relationship.previous_design_object : Functional_unit_terminal_node_assignment;
      SELF\Change_design_object_management_relationship.current_design_object  : Functional_unit_terminal_node_assignment;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3978 - ISO/TS 10303-1677 Functional decomposition to interconnect design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3423
*)
SCHEMA Functional_decomposition_to_interconnect_design_arm;

	USE FROM Fabrication_joint_arm;	-- ISO/TS 10303-1668
	USE FROM Functional_decomposition_to_design_arm; -- ISO/TS 10303-1676	

  ENTITY Design_functional_unit_allocation_to_fabrication_joint;
      functional_design_definition_path : Design_composition_path;
      implementation                    : Fabrication_joint;
    UNIQUE
      UR1 : functional_design_definition_path;
  END_ENTITY;

  ENTITY Transmission_line_functional_unit_terminal_allocation;
      implementation                             : Printed_component_join_terminal;
      transmission_line_functional_unit_terminal : Functional_unit_terminal;
      functional_unit_design_path                : Transmission_line_functional_unit_to_routed_transmission_line_allocation;
    UNIQUE
      UR1 : implementation,
 transmission_line_functional_unit_terminal;
  END_ENTITY;

  ENTITY Transmission_line_functional_unit_to_routed_transmission_line_allocation
    SUBTYPE OF (Design_functional_unit_allocation_to_assembly_component);
      SELF\Design_functional_unit_allocation_to_assembly_component.implementation : Routed_transmission_line;
  END_ENTITY;
END_SCHEMA;
(*
   $Id: arm.exp,v 1.15 2006/05/21 17:04:39 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3981 - ISO/TS 10303-1678 Functional decomposition with nodal representation to packaged mapping - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3429
*)

SCHEMA Functional_decomposition_with_nodal_representation_to_packaged_mapping_arm;

	USE FROM Functional_decomposition_to_design_arm; -- ISO/TS 10303-1676
	USE FROM Physical_connectivity_definition_arm;	-- ISO/TS 10303-1755

  ENTITY Aggregate_connectivity_requirement;
      connectivity_requirement : SET [1:?] OF Functional_unit_network_node_definition;
  END_ENTITY;

  ENTITY Connectivity_allocation;
      implementation           : Physical_connectivity_definition;
      connectivity_requirement : Aggregate_connectivity_requirement;
    UNIQUE
      UR1 : implementation;
  END_ENTITY;

END_SCHEMA;


(*
   $Id: arm.exp,v 1.10 2006/01/20 08:43:38 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3984 - ISO/TS 10303-1679 Functional specification - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3426
*)

SCHEMA Functional_specification_arm;

	USE FROM Signal_arm;	-- ISO/TS 10303-1745
	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704	

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE fs_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Signal_specification);
	END_TYPE; 

 	TYPE fs_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Functional_specification);
	END_TYPE;

  ENTITY Functional_specification;
      associated_definition          	: Functional_specification_definition;
      reference_signal               	: Signal_specification;
      characterizing_functional_unit 	: Functional_unit;
      characterizing_signal          	: Signal_specification;
    INVERSE
      characteristic_category					: External_source_identification FOR item;
    WHERE
      WR1 : characterizing_functional_unit.composed_network = associated_definition;
  END_ENTITY;

  ENTITY Functional_specification_definition
    SUBTYPE OF (Functional_unit_network_definition);
    INVERSE
      composing_specification : SET[1:?] OF functional_specification FOR associated_definition;
  END_ENTITY;

  ENTITY Signal_specification;
      measurement_access_mechanism : Functional_unit_terminal;
      reference_access_mechanism   : OPTIONAL Functional_unit_terminal;
      minimum_characteristic       : Signal_property;
      maximum_characteristic       : Signal_property;
      characterization_network     : Functional_unit_network_definition;
	DERIVE
	  measurement_condition: SET[1:1] OF Document_definition :=
  			get_document_definition(SELF, 'measurement condition', 
  			'SPECIFICATION_DOCUMENT_ARM.TEST_SPECIFICATION');
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N3987 - ISO/TS 10303-1680 Functional unit requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3432
*)

SCHEMA Functional_unit_requirement_allocation_arm;

	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704

TYPE fura_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
   (Functional_unit);
END_TYPE; 

  ENTITY Functional_unit_requirement_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Functional_unit;
    WHERE
      WR1 : NOT EXISTS (SELF\Requirement_assignment.description);
  END_ENTITY;

END_SCHEMA;  

(*
   $Id: arm.exp,v 1.16 2006/01/31 07:41:16 liutkus Exp $
   ISO TC184/SC4/WG12 N4062 - ISO/TS 10303-1705 Functional usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3342
*)

SCHEMA Functional_usage_view_arm;

 USE FROM Analytical_model_arm;		-- ISO/TS 10303-1603
 
 USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032
 
REFERENCE FROM Product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  
  USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
  
	TYPE fuuv_am_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH  
		(Functional_unit_usage_view_terminal_definition);
	END_TYPE;
  
  
  ENTITY Equivalent_functional_terminals_assignment;
      name                 : STRING;   
      equivalent_terminals : SET[2:?] OF Functional_unit_usage_view_terminal_definition;
  END_ENTITY;
 
  ENTITY Equivalent_functional_unit_definition_assignment;
      name                                   : STRING;   
      equivalent_functional_unit_definitions : SET[2:?] OF Functional_unit_definition;
  END_ENTITY;

  ENTITY Functional_product
  	SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
    WHERE 
      WR1 : SIZEOF([ 'functional' ] * types_of_product(SELF))= 1 ;
  END_ENTITY;
  
  ENTITY Functional_terminal_group;
      name              : STRING; 
      group_description : STRING;
      group_type        : STRING;
    UNIQUE
      UR1 : name;
  END_ENTITY;

  ENTITY Functional_terminal_group_assignment;
      composed_group                 : Functional_terminal_group;
      functional_usage_view_terminal : Scalar_terminal_definition;
  END_ENTITY;
 
  ENTITY Functional_unit_definition
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Information_definition, Item_shape);
      SELF\Product_view_definition.defined_version : Functional_version;
    DERIVE
      SELF\Item_shape.described_element : shapeable_item := SELF;
  END_ENTITY;

	ENTITY Functional_unit_make_from_relationship
		SUBTYPE OF (View_definition_relationship);
		  SELF\View_definition_relationship.relating_view : Functional_unit_usage_view;		
		  SELF\View_definition_relationship.related_view 	: Functional_unit_usage_view;
		WHERE
          WR1 : acyclic_functional_unit_make_from_relationship (SELF, [related_view], 
            'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP');
	END_ENTITY;

  ENTITY Functional_unit_usage_view
    SUBTYPE OF (Functional_unit_definition);
     DERIVE analytical_model_application_reference : SET[0:?] OF Analytical_model_application := get_ama(access_mechanism[1]);
     INVERSE
      access_mechanism : SET[0:?] OF functional_unit_usage_view_terminal_definition FOR associated_functional_unit_definition;
     WHERE
      WR1: SIZEOF(analytical_model_application_reference) <= 1;
      WR2: NOT(SIZEOF(analytical_model_application_reference) = 1) OR
        (SIZEOF(QUERY( am <* access_mechanism |
           NOT((SIZEOF(USEDIN(am,'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM')) = 0) OR
              (SIZEOF(QUERY( ampa <* USEDIN(am, 'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM') |
                 NOT(analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application) 
                 )) = 0))
        )) = 0);
  END_ENTITY;

  ENTITY Functional_unit_usage_view_terminal_definition
    SUPERTYPE OF (Scalar_terminal_definition);
      associated_functional_unit_definition : Functional_unit_usage_view;
      signal_name                           : STRING; 
    UNIQUE
      UR1 : signal_name,
 associated_functional_unit_definition;
  END_ENTITY;

  ENTITY Functional_unit_usage_view_terminal_definition_make_from_relationship;
      associated_make_from : Functional_unit_make_from_relationship;
      reusable_feature     : Functional_unit_usage_view_terminal_definition;
      resultant_feature    : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : reusable_feature,
 resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.associated_functional_unit_definition :<>: resultant_feature.associated_functional_unit_definition;
      WR3 : reusable_feature.associated_functional_unit_definition :=: 
      		associated_make_from\Functional_unit_make_from_relationship.relating_view;
      WR4 : resultant_feature.associated_functional_unit_definition :=: 
      		associated_make_from\Functional_unit_make_from_relationship.related_view;
      WR5 : acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship
        (SELF, [resultant_feature], 
        'FUNCTIONAL_USAGE_VIEW_ARM.FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP');
  END_ENTITY;

  ENTITY Functional_version
  	SUBTYPE OF (Information_version);
	  SELF\Product_version.of_product : Functional_product;
  END_ENTITY;

  ENTITY Scalar_terminal_definition
    SUBTYPE OF (Functional_unit_usage_view_terminal_definition);
  END_ENTITY;

  ENTITY Scalar_terminal_definition_link;
      precedent_terminal_definition  : Scalar_terminal_definition;
      subsequent_terminal_definition : Scalar_terminal_definition;
    UNIQUE
      UR1 : precedent_terminal_definition,
 subsequent_terminal_definition;
    WHERE
      WR1 : precedent_terminal_definition :<>: subsequent_terminal_definition;
      WR2 : acyclic_scalar_terminal_definition_link (SELF,
        [subsequent_terminal_definition],
        'FUNCTIONAL_USAGE_VIEW_ARM.SCALAR_TERMINAL_DEFINITION_LINK');
  END_ENTITY;

  FUNCTION acyclic_functional_unit_make_from_relationship
    (relation : Functional_unit_make_from_relationship; relatives : SET[1:?] OF 
    Scalar_terminal_definition; specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Functional_unit_make_from_relationship;
  END_LOCAL;

    IF relation.relating_view IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_view,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP.' +
      'RELATED_VIEW')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_functional_unit_make_from_relationship(x[i], relatives +
        relation.relating_view, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship
     (relation : Functional_unit_usage_view_terminal_definition_make_from_relationship; 
     relatives : SET[1:?] OF Functional_unit_usage_view_terminal_definition; 
     specific_relation: STRING) : BOOLEAN; 
     LOCAL
       x : SET OF Functional_unit_usage_view_terminal_definition_make_from_relationship;
     END_LOCAL;
    
     IF relation.reusable_feature IN relatives THEN
       RETURN (FALSE);
     END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.reusable_feature,
      'FUNCTIONAL_USAGE_VIEW_ARM.' +
      'FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP.' +
      'RESULTANT_FEATURE')) | specific_relation IN TYPEOF(pd));
     REPEAT i := 1 TO HIINDEX(x);
       IF NOT
         acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship(x[i],
         relatives + relation.reusable_feature, specific_relation) THEN
           RETURN (FALSE);
       END_IF;
     END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 

  FUNCTION acyclic_scalar_terminal_definition_link
    (relation : Scalar_terminal_definition_link; relatives : SET[1:?] OF
    Scalar_terminal_definition; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF Scalar_terminal_definition_link;
    END_LOCAL;

    IF relation.precedent_terminal_definition IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_terminal_definition,
      'FUNCTIONAL_USAGE_VIEW_ARM.' + 'SCALAR_TERMINAL_DEFINITION_LINK.' +
      'SUBSEQUENT_TERMINAL_DEFINITION')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_scalar_terminal_definition_link(x[i], relatives +
        relation.precedent_terminal_definition, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
   RETURN (TRUE);
  END_FUNCTION;

  FUNCTION get_ama(
	input : analytical_model_port_assignment_select) : SET OF Analytical_model_application;
   LOCAL
	ama : SET[0:?] OF Analytical_model_application := [];  --this gives us access to the information base
	ampa : SET[0:?] OF Analytical_model_port_assignment :=[];
   END_LOCAL;
	ampa := bag_to_set(USEDIN (input, 'ANALYTICAL_MODEL_ARM.'+'ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'));
	-- iterate over ampa
	REPEAT i := 1 to SIZEOF(ampa) by 1;
		ama := ama + ampa[i].associated_analytical_model_application;
	END_REPEAT;

	RETURN(ama);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N3990 - ISO/TS 10303-1681 Generic material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3657
*)

SCHEMA Generic_material_aspects_arm;

	USE FROM Independent_property_arm;	-- ISO/TS 10303-1036
	USE FROM Independent_property_representation_arm;	-- ISO/TS 10303-1038
	USE FROM Property_assignment_arm;	-- ISO/TS 10303-1030

TYPE material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE material_property_select = SELECT (Material_property, General_material_property);
END_TYPE;

TYPE dependent_or_independent_property_representation = SELECT(
  Independent_property_representation,
  Property_representation);
END_TYPE;

 ENTITY Applied_independent_material_property SUBTYPE OF
    (Material_property, Applied_independent_property);
     SELF\Applied_independent_property.base_independent_property: General_material_property;
  END_ENTITY;

 ENTITY Data_environment;
  environment_name : STRING;
  description : OPTIONAL STRING;
  environment_characterization: SET[1:?] OF dependent_or_independent_property_representation;
 END_ENTITY;

 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;

 ENTITY Material_property
  SUBTYPE OF (Assigned_property);
 END_ENTITY;

 ENTITY Material_property_association;
  described_material : Material_identification;
  associated_property_value : Material_property_value_representation;
  definitional : OPTIONAL BOOLEAN;
 END_ENTITY;

 ENTITY Material_property_value_representation
  SUBTYPE OF (Property_definition_representation);
    environment_condition                                               : Data_environment;
    SELF\Property_definition_representation.definition RENAMED property : material_property_select;
 END_ENTITY;

 ENTITY General_material_property
  SUBTYPE OF (Independent_property);
  WHERE
    WR1:  SIZEOF(QUERY( aip <* USEDIN(SELF,'PROPERTY_ASSIGNMENT_ARM.APPLIED_INDEPENDENT_PROPERTY.'+
                     'BASE_INDEPENDENT_PROPERTY') |
               NOT
			('GENERIC_MATERIAL_ASPECTS_ARM.APPLIED_INDEPENDENT_MATERIAL_PROPERTY' IN
                    TYPEOF(aip)))) = 0;
 END_ENTITY;


END_SCHEMA;
(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N4230 - ISO/TS 10303-1762 Generic product occurrence - EXPRESS ARM
*)

SCHEMA Generic_product_occurrence_arm;

	USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
	USE FROM Value_with_unit_arm;	-- ISO/TS 10303-1054	
	USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106	
	USE FROM Specified_product_arm;	-- ISO/TS 10303-1104	

TYPE extended_value_with_unit = EXTENSIBLE SELECT (
     Value_with_unit, 
     Value_limit, 
     Value_range);
END_TYPE;

	ENTITY Definition_based_product_occurrence
		ABSTRACT SUPERTYPE
		SUBTYPE OF (Product_occurrence);
  		derived_from: Product_view_definition;
  	WHERE
			WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
	END_ENTITY;

ENTITY Product_occurrence
ABSTRACT SUPERTYPE OF ((ONEOF (Definition_based_product_occurrence,
         Specification_based_product_occurrence)) AND 
         ONEOF (Product_occurrence_with_quantity, 
         Single_instance))
SUBTYPE OF (Product_view_definition);
INVERSE
  occurrence_contexts: SET[1:?] OF View_definition_relationship FOR related_view;
END_ENTITY;

ENTITY Product_occurrence_with_quantity
  ABSTRACT SUPERTYPE OF (ONEOF (Quantified_instance, Selected_instance))
  SUBTYPE OF (Product_occurrence);
  occurrence_quantity : OPTIONAL extended_value_with_unit;
END_ENTITY;

ENTITY Quantified_instance
  SUBTYPE OF (Product_occurrence_with_quantity);
  SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
END_ENTITY;

ENTITY Selected_instance
  SUBTYPE OF (Product_occurrence_with_quantity);
  quantity_criterion : OPTIONAL STRING;
END_ENTITY;

ENTITY Single_instance
  SUBTYPE OF (Product_occurrence);
END_ENTITY;

ENTITY Specification_based_product_occurrence
  ABSTRACT SUPERTYPE 
  SUBTYPE OF (Product_occurrence);
  SELF\Product_view_definition.defined_version : Specification_based_product_version;
END_ENTITY;
-- IP1: further specializations of this entity have to ensure that:

END_SCHEMA;
(*
$Id: arm.exp,v 1.17 2005/07/21 18:50:52 thendrix Exp $
ISO TC184/SC4/WG12 N2876 - ISO/TS 10303-1051 Geometric tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1550
*) 


SCHEMA Geometric_tolerance_arm;

USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Angularity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

ENTITY Circular_runout_tolerance
  SUBTYPE OF (Geometric_tolerance);
  angle : OPTIONAL REAL;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

ENTITY Coaxiality_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

ENTITY Common_datum
  SUBTYPE OF (Datum);
  made_up_by : SET[2:?] OF Single_datum;
END_ENTITY;

ENTITY Concentricity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

ENTITY Cylindricity_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Datum;
END_ENTITY;

ENTITY Datum_defined_by_derived_shape
  SUBTYPE OF (Derived_geometry, Single_datum);
END_ENTITY;

ENTITY Datum_defined_by_feature
  SUBTYPE OF (Single_datum);
  defined_by : Shape_element;
END_ENTITY;

ENTITY Datum_defined_by_targets
  SUBTYPE OF (Single_datum);
  defined_by : SET[1:?] OF Datum_target;
  rule_description : STRING;
END_ENTITY;

ENTITY Datum_reference;
  precedence : INTEGER;
  referenced_datum : Datum;
END_ENTITY;

ENTITY Datum_target;
  id : STRING;
END_ENTITY;

ENTITY Flatness_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Geometric_tolerance
  ABSTRACT SUPERTYPE OF (ONEOF (Angularity_tolerance,
                                Circular_runout_tolerance,
                                Coaxiality_tolerance,
                                Concentricity_tolerance,
                                Cylindricity_tolerance,
                                Flatness_tolerance,
                                Line_profile_tolerance,
                                Parallelism_tolerance,
                                Perpendicularity_tolerance,
                                Position_tolerance,
                                Roundness_tolerance,
                                Straightness_tolerance,
                                Surface_profile_tolerance,
                                Symmetry_tolerance,
                                Total_runout_tolerance));
  name : OPTIONAL STRING;
  applied_to : Shape_element;
  modification : OPTIONAL Tolerance_condition;
  qualifying_note : OPTIONAL STRING;
  segment_size : OPTIONAL Value_with_unit;
  significant_digits : OPTIONAL INTEGER;
  tolerance_value : Value_with_unit;
  value_determination : OPTIONAL STRING;
WHERE
  WR1: (NOT (EXISTS(segment_size))) OR ('GEOMETRIC_TOLERANCE_ARM.LENGTH_MEASURE' IN TYPEOF(segment_size.value_component));
  WR2: (NOT (EXISTS(tolerance_value))) OR ('GEOMETRIC_TOLERANCE_ARM.LENGTH_MEASURE' IN TYPEOF(tolerance_value.value_component));
  WR3: (NOT (EXISTS(significant_digits))) OR (significant_digits > 0);
END_ENTITY;

ENTITY Geometric_tolerance_relationship;
  relation_type : STRING;
  relating : Geometric_tolerance;
  related : Geometric_tolerance;
END_ENTITY;

ENTITY Line_profile_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;

ENTITY Parallelism_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

ENTITY Perpendicularity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:3] OF Datum_reference;
END_ENTITY;

ENTITY Placed_target
  ABSTRACT SUPERTYPE OF (ONEOF (Target_circle,
                                Target_point,
                                Target_rectangle,
                                Target_straight_line))
  SUBTYPE OF (Datum_target);
  defined_in : Geometric_coordinate_space;
  parameter_reference : Axis_placement;
END_ENTITY;

ENTITY Position_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;

ENTITY Projection
  SUBTYPE OF (Tolerance_zone_definition);
  projection_end : Shape_element;
  projection_length : Value_with_unit;
END_ENTITY;

ENTITY Roundness_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Single_datum
  SUBTYPE OF (Datum);
  datum_name : STRING;
  modification : OPTIONAL Tolerance_condition;
END_ENTITY;

ENTITY Straightness_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
END_ENTITY;

ENTITY Surface_profile_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;

ENTITY Symmetry_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:3] OF Datum_reference;
END_ENTITY;

ENTITY Target_area
  SUBTYPE OF (Datum_target);
END_ENTITY;

ENTITY Target_circle
  SUBTYPE OF (Placed_target);
  diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_point
  SUBTYPE OF (Placed_target);
END_ENTITY;

ENTITY Target_rectangle
  SUBTYPE OF (Placed_target);
  target_length : Numerical_item_with_unit;
  target_width : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_straight_line
  SUBTYPE OF (Placed_target);
  target_length : Numerical_item_with_unit;
END_ENTITY;

ENTITY Tolerance_condition;
  condition : STRING;
END_ENTITY;

ENTITY Tolerance_zone;
  form_type : STRING;
  zone_for : SET[1:?] OF Geometric_tolerance;
END_ENTITY;

ENTITY Tolerance_zone_definition;
  defining : Tolerance_zone;
  first_element : Shape_element;
  second_element : OPTIONAL Shape_element;
END_ENTITY;

ENTITY Total_runout_tolerance
  SUBTYPE OF (Geometric_tolerance);
  angle : REAL;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;

END_SCHEMA;  -- Geometric_tolerance_arm
(*
 $Id: arm.exp,v 1.6 2004/10/22 13:55:12 darla Exp $
 ISO TC184/SC4/WG12 N1273 - ISO/TS 10303-1507 Geometrically bounded surface - EXPRESS ARM
*)

SCHEMA Geometrically_bounded_surface_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Geometrically_bounded_surface_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.9 2006/03/24 18:45:20 thendrix Exp $
 ISO TC184/SC4/WG12 N4275 - ISO/TS 10303-1113 Group - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3245
 *) 


SCHEMA Group_arm;


TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT;
WHERE
  WR1: NOT ('GROUP_ARM.GROUP' IN TYPEOF(SELF));
END_TYPE; 

ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;

ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;

END_SCHEMA;  -- Group_arm
(*
 $Id: arm.exp,v 1.9 2004/10/22 14:14:16 darla Exp $
 ISO TC184/SC4/WG12 N1111 - ISO/TS 10303-1021 Identification assignment - EXPRESS ARM
*)
  
SCHEMA Identification_assignment_arm;

   
TYPE identification_item = EXTENSIBLE SELECT;
END_TYPE;

   
ENTITY Identification_assignment;
  identifier  : STRING;
  role        : STRING;
  description : OPTIONAL STRING;
  items       : SET [1:?] OF identification_item;
END_ENTITY;

END_SCHEMA;
(* 
$Id: arm.exp,v 1.9 2006/11/02 23:32:21 thomasrthurman Exp $
ISO TC184/SC4/WG12 N2634 - ISO/TS 10303-1349 Incomplete data reference mechanism - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2071
*)

SCHEMA Incomplete_data_reference_mechanism_arm;

USE FROM Classification_assignment_arm;

USE FROM Document_definition_arm;

USE FROM Part_view_definition_arm;


TYPE idrm_marked_item  = EXTENSIBLE SELECT BASED_ON classification_item WITH
      (Digital_document_definition, Digital_file,
       Part_view_definition);
END_TYPE;


ENTITY Incomplete_reference_marking
SUBTYPE OF (Classification_assignment);
WHERE
WR1: SIZEOF (QUERY( item <* SELF\Classification_assignment.items | 
	NOT ('CLASSIFICATION_ASSIGNMENT_ARM.CLASSIFICATION_ITEM' IN TYPEOF(item) ) )) = 0;

WR2: SELF\Classification_assignment.assigned_class.id = 'reference';
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.11 2004/10/28 19:05:37 darla Exp $
 ISO TC184/SC4/WG12 N2964 - ISO/TS 10303-1036 Independent property - EXPRESS ARM
*) 


SCHEMA Independent_property_arm; 


ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_arm
(*
 $Id: arm.exp,v 1.10 2006/03/24 18:37:02 thendrix Exp $
 ISO TC184/SC4/WG12 N4371 - ISO/TS 10303-1038 Independent property representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2966
*) 


SCHEMA Independent_property_representation_arm; 

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030 

ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_representation_arm
(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N4227 - ISO/TS 10303-1761 Information product - EXPRESS ARM
*)

SCHEMA Information_product_arm;

USE FROM Product_view_definition_arm;    --  ISO/TS 10303-1019
USE FROM File_identification_arm;	--  ISO/TS 10303-1127

REFERENCE FROM Product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

(* Note: further specializations are needed *)
ENTITY Information_product
  ABSTRACT SUPERTYPE 
  	SUBTYPE OF (Product);
  WHERE
    WR1 : SIZEOF(['document', 'information'] * types_of_product(SELF)) = 0;
END_ENTITY;

ENTITY Information_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Information_product;
END_ENTITY;

ENTITY Information_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY;

(*
Every Product_version referencing an Information_product is a
Information_version. EXPRESS specification:
*)
RULE Information_product_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT (
  'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_VERSION' IN TYPEOF
  ( pv) ) ) AND ( 'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_PRODUCT' IN TYPEOF (
pv.of_product) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N4233 - ISO/TS 10303-1763 Integral shield - EXPRESS ARM
*)

SCHEMA Integral_shield_arm;

USE FROM Layered_interconnect_module_with_printed_component_design_arm;	-- ISO/TS 10303-1700

USE FROM Requirement_assignment_arm; -- ISO/TS 10303-1233

 TYPE laminate_shieldable_item = SELECT 
    (Component_external_reference, 
    Component_feature, 
    Component_feature_external_reference,
   	Component_group_external_reference, 
   	Generic_physical_network,
  	Physical_connectivity_definition, 
  	Physical_connectivity_definition_external_reference, 
  	Stratum_feature_template_component); 
 END_TYPE; 

 ENTITY Component_group_external_reference; 
	name					: STRING;
	associated_definition	: STRING;
	UNIQUE
		UR1: name, associated_definition; 
 END_ENTITY; 

  ENTITY Integral_shield 
    SUBTYPE OF (Laminate_component); 
      shielded_item : SET[1:?] OF laminate_shieldable_item; 
  END_ENTITY; 
 
 ENTITY Physical_connectivity_definition_external_reference; 
	  name					: STRING;
	  associated_definition	: STRING;
	UNIQUE
	  UR1: name, associated_definition;
 END_ENTITY; 
 
  ENTITY Routed_shield 
    SUBTYPE OF (Integral_shield); 
      routed_centreline_shape                  : Curve;
      SELF\Definition_based_product_occurrence.derived_from : Printed_part_cross_section_template;
      component_extent                         : Inter_stratum_extent;
      curve_parameters                         : Curve_style_parameters;
  END_ENTITY; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.36 2006/10/13 13:31:58 liutkus Exp $
   ISO TC184/SC4/WG12 N3993 - ISO/TS 10303-1682 Interconnect 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3435
*)

SCHEMA Interconnect_2d_shape_arm;

	USE FROM Fabrication_joint_arm;	-- ISO/TS 10303-1668
	USE FROM Physical_unit_2d_design_view_arm;	-- ISO/TS 10303-1724

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
    
  ENTITY Component_2d_embedded_location
    SUBTYPE OF (Component_2d_location);
      precedent_surface  : Adjacent_stratum_surface_embedded_physical_component_surface_definition;
      subsequent_surface : Adjacent_stratum_surface_embedded_physical_component_surface_definition;
      reference_terminal : Fabrication_joint;
    UNIQUE
      UR1 : precedent_surface,
 reference_terminal,
 subsequent_surface;
    WHERE
      WR1 : precedent_surface <> subsequent_surface;
      WR2 : SELF\Component_2d_location.substrate_location = FALSE;
      WR3 : NOT EXISTS(SELF\Representation_relationship.description);
  END_ENTITY;

RULE no_component_assembly_2d_location_for_area_component FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR
       (no_2d_location_for_component(ac))) 
  )) = 0;
END_RULE;  

RULE component_in_assembly_2d_context FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR 
        (in_2d_assembly_context(ac)))
          )) = 0;
END_RULE;  

FUNCTION in_2d_assembly_context(comp : Assembly_component) : BOOLEAN;
  LOCAL
    shapes : SET OF Assembly_component_2d_shape_model := [];
    shapes_in_context : SET OF Physical_unit_planar_shape_model := [];
    assemblies : SET OF Product_view_definition := [];
    i, j : INTEGER := 0;
    in_context : BOOLEAN := TRUE;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
  END_REPEAT;

  shapes := bag_to_set(USEDIN(comp,'PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'));
  REPEAT i := 1 TO SIZEOF(shapes);
    shapes_in_context := bag_to_set(USEDIN(shapes[i]\Geometric_model.context_of_items,'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'));
    in_context := FALSE;
    j := 1;
    REPEAT WHILE ((j <= SIZEOF(shapes_in_context)) AND (NOT(in_context)));
      in_context := (shapes_in_context[j].shape_characterized_definition IN assemblies);
      j := j + 1;
    END_REPEAT;
    
    IF NOT (in_context) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  
  RETURN (SIZEOF(shapes) > 0);
END_FUNCTION;

FUNCTION no_2d_location_for_component(comp : Assembly_component) : BOOLEAN;
  LOCAL
    i, j : INTEGER;
    cis : SET OF Contextual_item_shape;
    loc : SET OF Component_2d_location;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    cis := bag_to_set(USEDIN(comp.occurrence_contexts[i],'SHAPE_PROPERTY_ASSIGNMENT_ARM.CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'));
    REPEAT j := 1 TO SIZEOF(cis);
      loc := bag_to_set(USEDIN(cis[j],'CONTEXTUAL_SHAPE_POSITIONING_ARM.CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'));
      IF (SIZEOF(loc) > 0) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_REPEAT;

  RETURN (TRUE);
END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.29 2006/06/11 18:44:04 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N3999 - ISO/TS 10303-1684 Interconnect module connection routing - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3441
*)

SCHEMA Interconnect_module_connection_routing_arm;

	USE FROM Fabrication_joint_arm;	-- ISO/TS 10303-1668
	USE FROM Interconnect_module_with_macros_arm;	-- ISO/TS 10303-1687

	TYPE imcr_termination_or_junction = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON termination_or_junction WITH 
    	(Inter_stratum_join_relationship,
     	Explicitly_located_layer_connection_point);
  	END_TYPE;

	SUBTYPE_CONSTRAINT layer_connection_point_subtypes FOR Layer_connection_point; 
		(ONEOF (Explicitly_located_layer_connection_point,
		Dependently_located_layer_connection_point));
	END_SUBTYPE_CONSTRAINT; 

	TYPE terminal_or_inter_stratum_feature = SELECT(
  		Embedded_physical_component_terminal,
		Inter_stratum_feature,
		Interconnect_module_macro_component_join_terminal,
     	Interconnect_module_terminal,
     	Printed_component_join_terminal);
	END_TYPE;

  	TYPE map_link = SELECT(
  		Conductive_interconnect_element_terminal_link,
		Passage_terminal_based_fabrication_joint_link);
	END_TYPE;

  	TYPE trace_junction_or_via = EXTENSIBLE SELECT
     	(Explicitly_located_layer_connection_point);
	END_TYPE; -- trace_junction_or_via

 
  	ENTITY Dependently_located_layer_connection_point
    	SUBTYPE OF (Layer_connection_point);
      		associated_design_object : terminal_or_inter_stratum_feature;
      		reference_zone           : OPTIONAL Connection_zone_in_design_view;
  	END_ENTITY; 

  	ENTITY Dielectric_crossover_area;
      	relating_concept               : Stratum_feature;    
      	related_concept                : Stratum_feature;
      	resulting_dielectric_crossover : Stratum_feature;
        resulting_shape        : OPTIONAL Geometric_model;
      INVERSE
	    technology_requirement : SET[1:?] OF requirement_assignment FOR assigned_to;
  	END_ENTITY; 

  	ENTITY Direct_stratum_component_join_implementation;
      	implementing_joint      : Fabrication_joint;
      	topological_requirement : Stratum_embedded_physical_component_join_relationship;
  	END_ENTITY; 

  	ENTITY Explicitly_located_layer_connection_point
    	SUBTYPE OF (Layer_connection_point);
  	END_ENTITY; 

  	ENTITY Indirect_stratum_component_join_implementation
    	SUBTYPE OF (Plated_inter_stratum_feature);
      		indirect_topological_requirement : Stratum_embedded_physical_component_join_relationship;
      		implementing_joint               : Fabrication_joint;
    	UNIQUE
      		UR1 : indirect_topological_requirement,
 				implementing_joint;
  	END_ENTITY; 

  	ENTITY Inter_stratum_join_implementation
    	ABSTRACT SUPERTYPE OF (ONEOF (Physical_network_supporting_stratum_feature_conductive_join,
 			Physical_network_supporting_inter_stratum_feature));
      		topological_requirement : Inter_stratum_join_relationship;
  	END_ENTITY; 

  	ENTITY Join_two_physical_connectivity_definition_supporting_inter_stratum_feature
    	SUBTYPE OF (Physical_network_supporting_inter_stratum_feature);
      		joined_definitions : SET[2:2] OF Physical_connectivity_definition;
  	END_ENTITY; 

  	ENTITY Junction_vertex_allocation;
			implementation_point : trace_junction_or_via;
      		required_vertex      : Topological_junction;
    	UNIQUE
      		UR1 : required_vertex;
  	END_ENTITY; 

  	ENTITY Physical_connectivity_abstraction_map;
      		name_space_context_based_definition : Physical_connectivity_element;
      		geometric_context_based_definition  : map_link;
    	UNIQUE
      UR1 : name_space_context_based_definition,
 		geometric_context_based_definition;
  	END_ENTITY; 

  	ENTITY Physical_network_supporting_inter_stratum_feature
    	SUPERTYPE OF (Join_two_physical_connectivity_definition_supporting_inter_stratum_feature)
    	SUBTYPE OF (Plated_inter_stratum_feature,
 			Inter_stratum_join_implementation);
  	END_ENTITY; 

  	ENTITY Physical_network_supporting_stratum_feature_conductive_join
    	SUBTYPE OF (Stratum_feature_conductive_join,
		Inter_stratum_join_implementation);
  	END_ENTITY; 

  	ENTITY Stratum_feature_conductive_join
    	SUPERTYPE OF (Physical_network_supporting_stratum_feature_conductive_join);
      	relating_concept : Stratum_feature_template_component;    
      	related_concept  : Stratum_feature_template_component;
        resulting_shape        : OPTIONAL Geometric_model;
      INVERSE
	    technology_requirement : SET[1:?] OF requirement_assignment FOR assigned_to;
    WHERE
      WR1 : related_concept.resident_stratum :<>: relating_concept.resident_stratum;
	END_ENTITY; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.23 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4002 - ISO/TS 10303-1685 Interconnect module to assembly module relationship - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3444
*)

SCHEMA Interconnect_module_to_assembly_module_relationship_arm;

	USE FROM Interconnect_module_connection_routing_arm;	-- ISO/TS 10303-1684
	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

  TYPE component_based_message_type = ENUMERATION OF
    (component_reference_designation,
     terminal_designation);
  END_TYPE;

 	TYPE component_or_component_feature = SELECT
 		(Assembly_component,
	     Component_external_reference,
	     Component_feature,
	     Component_feature_external_reference);
	END_TYPE;

	TYPE imtar_bare_die_component_or_packaged_component = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON bare_die_component_or_packaged_component WITH  
    (Packaged_component,
     Bare_die_component);
  END_TYPE;

	TYPE imtar_bare_die_terminal_or_packaged_part_terminal = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON bare_die_terminal_or_packaged_part_terminal WITH  
    (Bare_die_terminal,
     Packaged_part_terminal);
  END_TYPE;

	TYPE imtar_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Component_feature_to_layout_feature_relationship);
	END_TYPE; 

	TYPE imtar_restriction_basis_item = EXTENSIBLE SELECT BASED_ON restriction_basis_item WITH 
	   (component_or_component_feature);
	END_TYPE; 

	TYPE imtar_documented_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH 
	    (component_or_component_feature);
	END_TYPE;

	ENTITY Assembly_requirement_for_interconnect_relationship 
 		SUBTYPE OF (Part_definition_relationship);
	      SELF\View_definition_relationship.relating_view	: Assembly_module; 		
			SELF\View_definition_relationship.related_view	: Interconnect_module;
	END_ENTITY;
   
  ENTITY Component_based_annotation_symbol_placement_relationship
    SUBTYPE OF (Component_feature_to_layout_feature_relationship);
      SELF\Component_feature_to_layout_feature_relationship.related_stratum_concept : special_symbol_component;
  END_ENTITY;

  ENTITY Component_based_annotation_text_relationship
    SUBTYPE OF (Component_feature_to_layout_feature_relationship);
      SELF\Component_feature_to_layout_feature_relationship.related_stratum_concept : Laminate_text_string_component;
      message_type                                                                  : component_based_message_type;
  END_ENTITY;

  ENTITY Component_feature_to_layout_feature_relationship
	  SUPERTYPE OF (ONEOF (Component_based_annotation_symbol_placement_relationship,
	         Component_based_annotation_text_relationship));
      relating_feature        : component_or_component_feature;  
      related_stratum_concept : stratum_concept;
    INVERSE
	  requirement : SET[0:1] OF requirement_assignment FOR assigned_to;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.32 2006/06/14 02:36:57 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4005 - ISO/TS 10303-1686 Interconnect module usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3447
*)

SCHEMA Interconnect_module_usage_view_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

	TYPE cavity_reference_select = SELECT(
		Interconnect_module_primary_surface,
		Interconnect_module_secondary_surface);
	END_TYPE;

  ENTITY Interconnect_module_cavity_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      reference_surface : cavity_reference_select;
    WHERE
      WR1 : SELF :<>: reference_surface;
      WR2 : SIZEOF(QUERY(ucur <* USEDIN(SELF,
            'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
            'ASSOCIATED_USAGE') | NOT
            ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(ucur.associated_shape_definition))
            )) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_cutout_segment_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      composed_surface : Interconnect_module_cutout_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
      WR2 : SIZEOF(QUERY(ucur <* USEDIN(SELF,
            'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
            'ASSOCIATED_USAGE') | NOT
            (('PART_TEMPLATE_EXTENSION_ARM.PLANAR_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(ucur.associated_shape_definition)) AND NOT
            ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(ucur.associated_shape_definition)))            
            )) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_cutout_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  WHERE
    WR1: SIZEOF(QUERY(ucur <* USEDIN(SELF,
         'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
         'ASSOCIATED_USAGE') | NOT
         ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN
         TYPEOF(ucur.associated_shape_definition)))) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_edge_segment_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
      composed_surface : Interconnect_module_edge_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
      WR2 : SIZEOF(QUERY(ucur <* USEDIN(SELF,
            'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
            'ASSOCIATED_USAGE') | NOT
            (('PART_TEMPLATE_EXTENSION_ARM.PLANAR_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(ucur.associated_shape_definition)) AND NOT
            ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(ucur.associated_shape_definition)))            
            )) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_edge_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  WHERE
    WR1: SIZEOF(QUERY(ucur <* USEDIN(SELF,
         'PART_FEATURE_LOCATION_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP.' +
         'ASSOCIATED_USAGE') | NOT
         ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN
         TYPEOF(ucur.associated_shape_definition)))) = 0;  
  END_ENTITY;

  ENTITY Interconnect_module_interface_terminal
    SUBTYPE OF (Interconnect_module_terminal);
  END_ENTITY;

  ENTITY Interconnect_module_primary_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  END_ENTITY;

  ENTITY Interconnect_module_secondary_surface
    SUBTYPE OF (Interconnect_module_surface_feature);
  END_ENTITY;

  ENTITY Interconnect_module_surface_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Interconnect_module_cavity_surface,
 Interconnect_module_cutout_segment_surface,
 Interconnect_module_cutout_surface,
 Interconnect_module_secondary_surface,
 Interconnect_module_primary_surface,
 Interconnect_module_edge_surface,
 Interconnect_module_edge_segment_surface))
    SUBTYPE OF (Part_feature);
      SELF\Part_feature.associated_definition : Interconnect_module_usage_view;
  END_ENTITY;

  ENTITY Interconnect_module_terminal
    SUBTYPE OF (Part_terminal);
      SELF\Shape_feature.connection_area      : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
      SELF\Part_feature.associated_definition : Interconnect_module_usage_view;
  END_ENTITY;

  ENTITY Interconnect_module_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\Shape_element_relationship.relating : Interconnect_module_surface_feature;
      SELF\Shape_element_relationship.related  : Interconnect_module_terminal;
  END_ENTITY;

  ENTITY Interconnect_module_usage_view
    SUPERTYPE OF (Pcb_usage_view)
    SUBTYPE OF (Part_usage_view);
      thickness_over_dielectric_requirement : OPTIONAL Length_tolerance_characteristic;
      thickness_over_metal_requirement      : OPTIONAL Length_tolerance_characteristic;
      measurement_condition                 : OPTIONAL Restraint_condition;
      located_thickness_requirement         : OPTIONAL SET[1:?] OF Located_interconnect_module_thickness_requirement;
      implemented_function                  : OPTIONAL Functional_unit_usage_view;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_SECONDARY_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE.ASSOCIATED_DEFINITION') | ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 'INTERCONNECT_MODULE_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR4 : EXISTS(thickness_over_metal_requirement) OR EXISTS(thickness_over_dielectric_requirement);
      WR5 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Located_interconnect_module_thickness_requirement;
      reference_location    : Axis_placement;
      thickness_requirement : Length_tolerance_characteristic;
    INVERSE
      design : SET[1:?] OF interconnect_module_usage_view FOR located_thickness_requirement;
    UNIQUE
      UR1 : design,
 reference_location;
  END_ENTITY;

  ENTITY Pcb_usage_view
    SUBTYPE OF (Interconnect_module_usage_view);
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.14 2006/04/23 05:24:06 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4008 - ISO/TS 10303-1687 Interconnect module with macros - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3450
*)

SCHEMA Interconnect_module_with_macros_arm;

	USE FROM Assembly_module_with_interconnect_component_arm;	-- ISO/TS 10303-1643
	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

  ENTITY Interconnect_module_macro_component
    SUBTYPE OF (Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Interconnect_module;
    INVERSE
      join_access_mechanisms : SET[1:?] OF interconnect_module_macro_component_join_terminal FOR associated_component;
    WHERE
      WR1 : SIZEOF(QUERY(immcjt <* join_access_mechanisms | immcjt\Component_feature.definition\Shape_element.containing_shape :<>: SELF\Definition_based_product_occurrence.derived_from\Part_design_view.usage_view)) = 0;
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Interconnect_module_macro_component_join_terminal
    SUBTYPE OF (Physical_component_terminal);
      SELF\Component_feature.definition           : Interconnect_module_macro_terminal;
      SELF\Component_feature.associated_component : Interconnect_module_macro_component;
  END_ENTITY;
END_SCHEMA;
(*
   $Id: arm.exp,v 1.24 2006/03/22 09:01:53 liutkus Exp $
   ISO TC184/SC4/WG12 N4011 - ISO/TS 10303-1688 Interconnect non planar shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3453
*)

SCHEMA Interconnect_non_planar_shape_arm;

    USE FROM Physical_unit_3d_shape_arm;	-- ISO/TS 10303-1727	
	USE FROM Physical_unit_non_planar_design_view_arm;	-- ISO/TS 10303-1613
	USE FROM Part_template_2d_shape_arm;	-- ISO/TS 10303-1716

  ENTITY Component_non_planar_location;
      transformation  : Axis_placement_3d;
      placement_fixed : BOOLEAN;
      component_model : Assembly_component_non_planar_shape_model;
      assembly_model  : Physical_unit_3d_shape_model;
      component       : Next_assembly_usage;
  END_ENTITY;

  ENTITY Component_part_2d_non_planar_geometric_representation_relationship
    SUBTYPE OF (Geometric_model_relationship);
    	SELF\Geometric_model_relationship.rep_1 RENAMED part_shape      : Part_template_planar_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED component_shape : Assembly_component_non_planar_shape_model;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation_relationship.relation_type);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.46 2006/06/14 15:25:23 liutkus Exp $
   ISO TC184/SC4/WG12 N4014 - ISO/TS 10303-1689 Interconnect physical requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3456
*)

 SCHEMA Interconnect_physical_requirement_allocation_arm;

	USE FROM Fabrication_technology_arm;	-- ISO/TS 10303-1670
	
	USE FROM Requirement_view_definition_relationship_arm; -- ISO/TS 10303-1142
	
	USE FROM Integral_shield_arm; -- ISO/TS 10303-xxxx

	REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE land_physical_template_or_inter_stratum_feature_template = SELECT
       (Land_physical_template,
        Inter_stratum_feature_template);
  END_TYPE;

  ENTITY Dependent_electrical_isolation_removal_template
    SUBTYPE OF (Electrical_isolation_removal_template);
      associated_item : land_physical_template_or_inter_stratum_feature_template;
  END_ENTITY;

  ENTITY Dependent_thermal_isolation_removal_template
    SUBTYPE OF (Thermal_isolation_removal_template);
      associated_item : Land_physical_template;
  END_ENTITY;

  ENTITY Electrical_isolation_removal_template
    SUBTYPE OF (Material_removal_feature_template);
    DERIVE
      electrical_isolation_spacing_requirement : SET[1:?] OF Requirement_view_definition := 
        get_rvd(SELF, 'electrical requirement');
    WHERE
      WR1: SIZEOF(QUERY(eisr <* electrical_isolation_spacing_requirement |
         NOT('INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_ARM.ELECTRICAL_ISOLATION_REQUIREMENT'
        IN TYPEOF(eisr)) )) =0;
      WR2: SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
        ('PART_TEMPLATE_EXTENSION_ARM.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS' IN TYPEOF(s)))) = 0;
      WR3: SIZEOF(QUERY(s <* SELF\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(s)))) = 0;        
  END_ENTITY;

  ENTITY Electrical_isolation_requirement
    SUBTYPE OF (Requirement_view_definition);
    DERIVE
      effective_voltage_withstand_capacity_requirement : SET[1:1] OF Predefined_requirement_view_definition := 
        get_specific_requirement_view_definition_for_collector(SELF, 'effective voltage withstand capacity requirement');
      electrical_isolation_spacing_requirement : SET[1:1] OF Predefined_requirement_view_definition :=
        get_specific_requirement_type_for_primary_rvd_relationship(SELF, 'electrical isolation spacing requirement', 'LAYOUT_SPACING_REQUIREMENT_OCCURRENCE');
    WHERE
      WR1: 'INTERCONNECT_PLACEMENT_REQUIREMENTS_ARM.LAYOUT_SPACING_REQUIREMENT_OCCURRENCE' IN TYPEOF(electrical_isolation_spacing_requirement[1]);
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Interconnect_shield_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Integral_shield;
      SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property  : Predefined_requirement_view_definition;
    WHERE
     WR1 : assigned_requirement_property\Product_view_definition.initial_context\View_definition_context.application_domain = 'electrical';
  END_ENTITY;
		
  ENTITY Thermal_isolation_removal_template
    SUBTYPE OF (Material_removal_structured_template);
	DERIVE
  		thermal_isolation_spacing_requirement: SET[1:1] OF Requirement_view_definition :=
		  get_rvd(SELF, 'thermal requirement');
	WHERE
	  WR1: SIZEOF(QUERY(tisr <* THERMAL_ISOLATION_SPACING_REQUIREMENT |
       NOT('INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_ARM.THERMAL_ISOLATION_REQUIREMENT' IN TYPEOF(tisr))
       )) =0;
  END_ENTITY;

  ENTITY Thermal_isolation_requirement
  	SUBTYPE OF (Requirement_view_definition);
      thermal_bar_width : OPTIONAL Length_tolerance_characteristic;
      number_of_bars    : OPTIONAL INTEGER;
  	DERIVE
      effective_current_capacity_requirement : SET [0:1] OF Predefined_requirement_view_definition :=
        get_specific_requirement_view_definition_for_collector(SELF, 'effective current capacity requirement');

      angular_orientation_requirement : SET [1:1] OF Predefined_requirement_view_definition := 
        get_specific_requirement_view_definition_for_collector(SELF, 'angular orientation requirement');
 
      thermal_isolation_spacing_requirement : SET [1:1] OF Predefined_requirement_view_definition :=
        get_specific_requirement_type_for_primary_rvd_relationship(SELF, 'thermal isolation spacing requirement', 'LAYOUT_SPACING_REQUIREMENT_OCCURRENCE');
   WHERE
     WR1 : 'INTERCONNECT_PLACEMENT_REQUIREMENTS_ARM.LAYOUT_SPACING_REQUIREMENT_OCCURRENCE' IN TYPEOF(thermal_isolation_spacing_requirement[1]);
     WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
     WR3 : (thermal_bar_width) XOR (number_of_bars);
  END_ENTITY;

FUNCTION get_specific_requirement_view_definition_for_collector(
	input : Requirement_view_definition;
	id : STRING
) : SET OF Predefined_requirement_view_definition; 
LOCAL
    rcr : SET[0:?] OF Requirement_collection_relationship := [];--this gives us access to the information base
    rdp : SET[0:?] OF Predefined_requirement_view_definition :=[];
END_LOCAL;
    rcr := bag_to_set(QUERY(rai <* USEDIN (input, 'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP_ARM.'+
	'REQUIREMENT_COLLECTION_RELATIONSHIP.COLLECTION') | 
          (rai\View_definition_relationship.relation_type = id)));

	-- iterate over rcr 
    REPEAT i := 1 to SIZEOF(rcr) by 1;
        -- get rdp 
      rdp := rdp + rcr[i].member;
    END_REPEAT;

	RETURN(rdp);
END_FUNCTION;

FUNCTION get_specific_requirement_type_for_primary_rvd_relationship(
	input : Requirement_view_definition;
	id : STRING;
    reqType : STRING
) : SET OF Predefined_requirement_view_definition; 

LOCAL
    rvdr : SET[0:?] OF Requirement_view_definition_relationship := [];
    rdp : SET[0:?] OF Predefined_requirement_view_definition := [];  --this gives us access to the information base
END_LOCAL;
	rvdr := bag_to_set(QUERY(rvdre <* USEDIN (input, 'REQUIREMENT_DECOMPOSITION_ARM.'+ 'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.SECONDARY')|
	                           ((rvdre.relation_type = id) AND (reqType IN TYPEOF(rvdre.primary)))
                       ));
	-- iterate over rvdr
	REPEAT i := 1 to SIZEOF(rvdr) by 1;
      rdp := rdp + rvdr[i].primary;
	END_REPEAT;

	RETURN(rdp);
END_FUNCTION;
  
 END_SCHEMA;
(*
   $Id: arm.exp,v 1.34 2006/06/05 07:57:57 liutkus Exp $
   ISO TC184/SC4/WG12 N4017 - ISO/TS 10303-1690 Interconnect placement requirements - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3459
*)

SCHEMA Interconnect_placement_requirements_arm;

	USE FROM Assembly_component_placement_requirements_arm;	-- ISO/TS 10303-1634
	USE FROM Land_arm;	-- ISO/TS 10303-1692
	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718

    SUBTYPE_CONSTRAINT ipr_predefined_requirement_view_definition_subtypes FOR Predefined_requirement_view_definition;   
 	  (ONEOF (Assembly_spacing_requirement_occurrence,
 	  Assembly_group_spacing_requirement_occurrence,
 	  Item_restricted_requirement_occurrence,
 	  Layout_spacing_requirement_occurrence));
    END_SUBTYPE_CONSTRAINT;  

	TYPE assembly_or_interconnect_design_object_select = EXTENSIBLE SELECT
    (Assembly_component,
     Component_feature,
     interconnect_module_design_object_select);
	END_TYPE;

	TYPE interconnect_module_design_object_select = EXTENSIBLE SELECT 
    (Via,
     Cutout,
     Component_termination_passage,
     Land,
     Conductor,
     Conductive_filled_area,
     Stratum_feature,
     Laminate_component,
     Inter_stratum_feature,
     Printed_component);
  END_TYPE;

  TYPE interconnect_module_design_object_category = EXTENSIBLE ENUMERATION OF
    (assembly_component_category,
     embedded_physical_component_terminal_category,
     interconnect_module_via,
     interconnect_module_inter_stratum_feature,
     interconnect_module_cutout,
     interconnect_module_fill_area,
     interconnect_module_stratum_feature);
  END_TYPE;

  TYPE interconnect_module_design_object_category_or_group = SELECT(
     interconnect_module_design_object_category,
     Group);
  END_TYPE;    

	TYPE ipr_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Interconnect_module_constraint_region);
	END_TYPE; 

  TYPE pca_product_design_object_category = ENUMERATION OF
    (assembly_component_category,
     assembly_module_category,
     assembly_module_component_category,
     assembly_module_component_terminal_category,
     assembly_module_macro_component_category,
     assembly_module_macro_component_join_terminal_category,
     bare_die_component_category,
     bare_die_component_terminal_category,
     bonded_conductive_base_blind_via_category,
     buried_via_category,
     cable_component_category,
     component_feature_category,
     component_mounting_feature_category,
     component_termination_passage_category,
     component_termination_passage_and_contact_size_dependent_land_category,
     component_termination_passage_interface_terminal_category,
     component_termination_passage_join_terminal_category,
     conductive_interconnect_element_terminal_category,
     conductive_interconnect_element_with_pre_defined_transitions_category,
     conductive_interconnect_element_with_user_defined_single_transition_category,
     connected_area_component_category,
     contact_size_dependent_land_category,
     cutout_category,
     cutout_edge_segment_category,
     dielectric_material_passage_category,
     electrical_isolation_laminate_component_category,
     embedded_physical_component_terminal_category,
     fiducial_category,
     fill_area_category,
     inter_stratum_feature_category,
     interconnect_component_interface_terminal_category,
     interconnect_component_join_terminal_category,
     interconnect_module_component_category,
     interconnect_module_component_stratum_based_terminal_category,
     interconnect_module_component_surface_feature_category,
     interconnect_module_component_terminal_category,
     interconnect_module_edge_category,
     interconnect_module_edge_segment_category,
     interconnect_module_macro_component_category,
     interconnect_module_macro_component_join_terminal_category,
     interface_access_material_removal_laminate_component_category,
     interface_access_stratum_feature_template_component_category,
     interface_component_category,
     interfacial_connection_category,
     internal_probe_access_area_category,
     join_two_physical_connectivity_definition_supporting_inter_stratum_feature_category,
     join_two_physical_connectivity_definition_supporting_printed_component_category,
     laminate_component_category,
     generic_laminate_text_component_category,
     laminate_text_string_component_category,
     land_category,
     land_interface_terminal_category,
     land_join_terminal_category,
     material_removal_laminate_component_category,
     minimally_defined_component_terminal_category,
     movable_packaged_component_join_terminal_category,
     multi_layer_material_removal_laminate_component_category,
     multi_layer_stratum_feature_template_component_category,
     multi_stratum_special_symbol_component_category,
     non_conductive_base_blind_via_category,
     packaged_component_category,
     packaged_component_join_terminal_category,
     packaged_connector_component_category,
     packaged_connector_component_interface_terminal_category,
     partially_plated_cutout_category,
     partially_plated_interconnect_module_edge_category,
     physical_component_category,
     physical_connectivity_interrupting_cutout_category,
     physical_laminate_component_category,
     physical_network_supporting_inter_stratum_feature_category,
     plated_conductive_base_blind_via_category,
     plated_cutout_category,
     plated_cutout_edge_segment_category,
     plated_interconnect_module_edge_category,
     plated_interconnect_module_edge_segment_category,
     plated_passage_category,
     plated_passage_or_unsupported_passage_category,
     primary_stratum_indicator_symbol_category,
     printed_component_join_terminal_category,
     printed_connector_component_interface_terminal_category,
     probe_access_area_category,
     routed_interconnect_component_category,
     routed_physical_component_category,
     single_stratum_special_symbol_component_category,
     stratum_feature_category,
     stratum_feature_template_component_category,
     thermal_isolation_laminate_component_category,
     unrouted_conductive_interconnect_element_category,
     unsupported_passage_category,
     unsupported_passage_dependent_land_category,
     via_category,
     via_terminal_category);
  END_TYPE;

  TYPE pca_product_design_object_category_or_group = SELECT(
     pca_product_design_object_category,
     Group);
  END_TYPE;    

  TYPE spacing_type = ENUMERATION OF
    (nearest_boundary,
     centroid,
     furthest_boundary);
  END_TYPE;

	SUBTYPE_CONSTRAINT ipr_non_feature_shape_element_subtypes FOR Non_feature_shape_element; 
	    (ONEOF (
		 Derived_non_feature_shape_element,
		 Directed_axis,
		 Positional_boundary,
		 Positional_boundary_member,
		 Tolerance_zone_boundary,
		 Tolerance_zone_boundary_member,
		 Viewing_plane,
		 Seating_plane,
		 Template_material_cross_section_boundary,
		 Interconnect_module_constraint_region,
		 Reference_graphic_registration_mark,
		 Mounting_restriction_area,
		 Mounting_restriction_volume));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Interconnect_module_constraint_region
    SUBTYPE OF (Non_feature_shape_element);
      keepout                                          : BOOLEAN;
      non_conformant_interconnect_module_design_object : OPTIONAL SET[1:?] OF interconnect_module_design_object_select;
      SELF\Non_feature_shape_element.scope             : Interconnect_module;
      design_specific_purpose                          : STRING; 
      associated_stratum_extent                        : SET[1:?] OF Inter_stratum_extent;
      constrained_design_object_category               : interconnect_module_design_object_category_or_group;
    INVERSE
      precedent_version_constraint_region : SET[0:1] OF non_feature_shape_element_relationship FOR related;
      requirement : SET[1:1] OF requirement_assignment FOR assigned_to;
    WHERE
      WR1 : NOT (SIZEOF(precedent_version_constraint_region) = 1) OR ('INTERCONNECT_PLACEMENT_REQUIREMENTS_ARM.INTERCONNECT_MODULE_CONSTRAINT_REGION' IN TYPEOF(precedent_version_constraint_region[1]\Non_feature_shape_element_relationship.relating));
      WR2 : NOT EXISTS(SELF\Shape_element.description);
      WR3 : valid_non_conformant_design_object_context(non_conformant_interconnect_module_design_object, scope);
  END_ENTITY;

  ENTITY Layer_qualified_layout_spacing_requirement_occurrence
    SUBTYPE OF (Layout_spacing_requirement_occurrence);
      layer_context : SET[1:?] OF Inter_stratum_extent;
  END_ENTITY;

  ENTITY Layout_spacing_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      design_object_category_1                                                            : pca_product_design_object_category_or_group;
      design_object_category_2                                                            : pca_product_design_object_category_or_group;
      SELF\Predefined_requirement_view_definition.required_characteristic RENAMED spacing : Length_tolerance_characteristic;
      of_spacing_type                                                                     : spacing_type;
  END_ENTITY;

  ENTITY Layout_spacing_requirement_non_conforming_design_object;
      non_conformant_design_object : SET[1:?] OF assembly_or_interconnect_design_object_select;
      design_object_1              : assembly_or_interconnect_design_object_select;
      design_object_2              : assembly_or_interconnect_design_object_select;
      design_requirement           : Layout_spacing_requirement_occurrence;
      violation_value              : OPTIONAL Length_data_element;
      violation_shape              : OPTIONAL Geometric_model;
      intersection_violation       : LOGICAL;
    WHERE
     WR1: EXISTS(violation_value) OR EXISTS(violation_shape);      
  END_ENTITY;

  FUNCTION valid_non_conformant_design_object_context(input1 : SET OF interconnect_module_design_object_select;
                  input2 : Interconnect_module) : BOOLEAN;
  LOCAL
    vdr : SET OF View_definition_relationship := [];
    valid : BOOLEAN := TRUE;
    pvd : SET OF Product_view_definition := [];
  END_LOCAL;

   REPEAT i := 1 to HIINDEX(input1);
    IF ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT' IN TYPEOF(input1[i]))
    THEN
       vdr := input1[i]\Assembly_component.occurrence_contexts;
       pvd := [];
      REPEAT j := 1 to HIINDEX(vdr);
       pvd := pvd + vdr[j]\View_definition_relationship.relating_view;
      END_REPEAT;
       IF NOT (input2 IN pvd) 
         THEN valid := FALSE; 
       END_IF;
    END_IF;
   END_REPEAT;
   
    RETURN(valid);
  END_FUNCTION;

END_SCHEMA;



(*
   $Id: arm.exp,v 1.12 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4020 - ISO/TS 10303-1691 Interface component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3462
*)

SCHEMA Interface_component_arm;

	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721

	SUBTYPE_CONSTRAINT physical_component_feature_subtypes FOR Physical_component_feature;
		(ONEOF (Physical_component_terminal,
	 	Physical_component_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Physical_component_interface_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Physical_component_feature);
      SELF\Component_feature.associated_component : Interface_component;
  END_ENTITY;

  ENTITY Interface_component
    SUBTYPE OF (Physical_component);
    INVERSE
      access_mechanism : SET[1:?] OF physical_component_interface_terminal FOR associated_component;
  END_ENTITY;

END_SCHEMA;

(*
 $Id: arm.exp,v 1.17 2006/03/24 18:53:29 thendrix Exp $
 ISO TC184/SC4/WG12 N4293 - ISO/TS 10303-1345 Item definition structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2619
*)

SCHEMA Item_definition_structure_arm;

USE FROM Effectivity_application_arm;

USE FROM Part_occurrence_arm;

USE FROM Product_structure_arm;

REFERENCE FROM Product_identification_arm(
	types_of_product);


TYPE effectivity_item_for_replacement  = SELECT BASED_ON effectivity_item WITH
      (Part_definition_relationship);
END_TYPE;


ENTITY Assembled_part_association
SUBTYPE OF (Part_occurrence_definition_relationship, Assembly_component_relationship);
  SELF\View_definition_relationship.relating_view : Assembly_definition;
END_ENTITY;

ENTITY Assembly_definition
SUBTYPE OF (Part_view_definition);
WHERE
WR1: 'assembly' IN types_of_product(SELF\Product_view_definition.defined_version.of_product);
END_ENTITY;

ENTITY Geometrical_relationship
  SUBTYPE OF (Part_definition_relationship);
  definition_placement: Geometric_model_relationship_with_transformation;
DERIVE
  SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
END_ENTITY;

ENTITY Part_definition_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
END_ENTITY;

RULE Definition_replacement_requires_effectivity_assignment FOR 
	(Part_definition_relationship);
WHERE 
WR1: SIZEOF( QUERY( pdr <* Part_definition_relationship | 
	(pdr\View_definition_relationship.relation_type = 'definition replacement') AND 
	(SIZEOF( USEDIN(pdr,'ITEM_DEFINITION_STRUCTURE_ARM.EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	 = 0; 
END_RULE; 

RULE Mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);
LOCAL
  assemblies_of_parts: SET OF Assembly_component_relationship := [];
END_LOCAL;
--  assemblies_of_parts := QUERY(acr <* Assembly_component_relationship |
--	'ITEM_DEFINITION_STRUCTURE_MIM.PART_VIEW_DEFINITION' IN TYPEOF(SELF\View_definition_relationship.relating_view));
WHERE
WR1: SIZEOF(QUERY(ar <* assemblies_of_parts | 
	NOT ('ITEM_DEFINITION_STRUCTURE_ARM.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar)) ))= 0;
END_RULE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.34 2006/06/13 22:16:54 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4023 - ISO/TS 10303-1692 Land - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3465
*)

SCHEMA Land_arm;

	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

	SUBTYPE_CONSTRAINT l_laminate_component_interface_terminal_subtypes FOR Laminate_component_interface_terminal; 
		 (ONEOF (Component_termination_passage_interface_terminal,
		 Land_interface_terminal));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT l_laminate_component_join_terminal_subtypes FOR Laminate_component_join_terminal; 
		 (ONEOF (Component_termination_passage_join_terminal,
		 Land_join_terminal,
		 Embedded_physical_component_terminal));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT stratum_feature_template_component_subtypes FOR Stratum_feature_template_component;   
		(ONEOF (Area_component,
		Land));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Contact_size_dependent_land
    SUBTYPE OF (Land);
      SELF\Definition_based_product_occurrence.derived_from : Default_attachment_size_based_land_physical_template;
    INVERSE
      external_access_mechanism : SET[1:2] OF land_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Inter_stratum_feature_dependent_land
    ABSTRACT SUPERTYPE OF (ONEOF (Plated_passage_dependent_land,
      Unsupported_passage_dependent_land))
    SUBTYPE OF (Land);
    SELF\Definition_based_product_occurrence.derived_from : Default_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY Land
    SUPERTYPE OF (ONEOF (
 Contact_size_dependent_land,
 Inter_stratum_feature_dependent_land))
    SUBTYPE OF (Stratum_feature_template_component);
      alternate_land_definition                             : OPTIONAL Land_physical_template;
      SELF\Definition_based_product_occurrence.derived_from : Land_physical_template;
    DERIVE
       functional: BOOLEAN :=
         ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN 
           TYPEOF(SELF\Stratum_feature_template_component.implementation_or_resident_stratum)) AND
         (SIZEOF(QUERY(sftc <* USEDIN(SELF\Stratum_feature_template_component.implementation_or_resident_stratum,
         'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM') |
         ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS' IN TYPEOF(sftc))
          )) > 1);
    INVERSE
      access_mechanism : SET[1:?] OF land_join_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Land_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Land_template_interface_terminal;
      SELF\Component_feature.associated_component : Contact_size_dependent_land;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Land_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Land_template_join_terminal;
      SELF\Component_feature.associated_component : Land;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

ENTITY Plated_passage_dependent_land
  SUBTYPE OF (Inter_stratum_feature_dependent_land);
    reference_plated_passage             : Plated_passage;
    SELF\Assembly_component.derived_from : Default_plated_passage_based_land_physical_template;
END_ENTITY;

  ENTITY Unsupported_passage_dependent_land
    SUBTYPE OF (Inter_stratum_feature_dependent_land);
      reference_passage                                     : Unsupported_passage;
      SELF\Definition_based_product_occurrence.derived_from : Default_unsupported_passage_based_land_physical_template;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.33 2006/02/07 20:13:09 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4026 - ISO/TS 10303-1693 Layered 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3468
*)

SCHEMA Layered_2d_shape_arm;

	USE FROM Constructive_solid_geometry_2d_arm;	-- ISO/TS 10303-1731
	USE FROM Wireframe_2d_arm; 	-- ISO/TS 10303-1347
	USE FROM Shape_feature_arm;	-- ISO/TS 10303-xxxx
	USE FROM Area_2d_arm;	-- ISO/TS 10303-1631


  	TYPE part_template_or_physical_unit_2d_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  	END_TYPE;

  ENTITY Planar_projected_shape_model
    SUBTYPE OF (Planar_shape_model);
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Planar_shape_model
    ABSTRACT SUPERTYPE OF(Planar_projected_shape_model) 
    SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : SELF\Geometric_model.context_of_items.dimension_count = 2;
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.29 2006/06/22 09:08:04 liutkus Exp $
   ISO TC184/SC4/WG12 N4029 - ISO/TS 10303-1694 Layered 3d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3471
*)

SCHEMA Layered_3d_shape_arm;

    USE FROM Layered_2d_shape_arm; -- -- ISO/TS 10303-1693
	USE FROM Physical_unit_3d_shape_arm;	-- ISO/TS 10303-1727
	USE FROM Advanced_boundary_representation_arm;	-- ISO/TS 10303-1514
	USE FROM Curve_swept_solid_arm;	-- ISO/TS 10303-1659
    USE FROM Faceted_boundary_representation_arm;    -- ISO/TS 10303-1512
	USE FROM Geometrically_bounded_surface_arm;	-- ISO/TS 10303-1507	
	
	SUBTYPE_CONSTRAINT l3ds_geometric_representation_relationship_subtypes FOR Geometric_model_relationship;     
		(ONEOF (Shape_definition_3d_intersection,
		 Shape_definition_3d_plane_projection 
		 ));    
	END_SUBTYPE_CONSTRAINT;

	TYPE l3ds_feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON feature_or_non_feature_usage WITH 
 		(part_template_or_physical_unit_3d_shape_model_select);
	END_TYPE;

 	  TYPE part_template_or_physical_unit_3d_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT
	    (Physical_unit_3d_shape_model);
	  END_TYPE;

  ENTITY Shape_definition_3d_intersection
    SUBTYPE OF (Geometric_model_relationship);
      orientation_intersection_plane : Axis_placement_3d;
      planar_shape_origin            : Axis_placement_2d;
      SELF\Geometric_model_relationship.rep_1 RENAMED surface_intersection_result : Planar_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED projected_volume            : Geometric_model;
    WHERE
      WR1 : NOT ('LAYERED_3D_SHAPE_ARM.PLANAR_SHAPE_MODEL' IN TYPEOF(projected_volume));
      WR2 : NOT EXISTS(SELF\Representation_relationship.relation_type);
  END_ENTITY;

  ENTITY Shape_definition_3d_plane_projection
    SUBTYPE OF (Geometric_model_relationship);
      viewing_plane       : Axis_placement_3d;
      planar_shape_origin : Axis_placement_2d;
      SELF\Geometric_model_relationship.rep_1 RENAMED surface_projection_result : Planar_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED projected_volume          : Geometric_model;
    WHERE
      WR1 : NOT ('LAYERED_3D_SHAPE_ARM.PLANAR_SHAPE_MODEL' IN TYPEOF(projected_volume));
      WR2 : NOT EXISTS(SELF\Representation_relationship.relation_type);
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.25 2006/04/14 12:41:25 liutkus Exp $
   ISO TC184/SC4/WG12 N4032 - ISO/TS 10303-1695 Layered interconnect module 2d design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3477
*)
SCHEMA Layered_interconnect_module_2d_design_arm;

	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726

  ENTITY Stratum_feature_planar_shape_model
    SUBTYPE OF (Single_area_csg_2d_model);
      shape_characterized_component : Stratum_feature;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Stratum_interconnect_module_planar_position;
      stratum_component         : Interconnect_module_stratum_assembly_relationship;
      stratum_shape             : Stratum_planar_shape_model;
      interconnect_module_shape : Physical_unit_planar_shape_model;
      transformation            : Axis_placement_2d;
   UNIQUE
   	UR1 : stratum_component;
  END_ENTITY;

  ENTITY Stratum_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model);
      shape_characterized_component : Stratum;
    UNIQUE
      UR1 : shape_characterized_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.27 2006/04/18 14:39:45 liutkus Exp $
   ISO TC184/SC4/WG12 N4035 - ISO/TS 10303-1696 Layered interconnect module 3d design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3480
*)

SCHEMA Layered_interconnect_module_3d_design_arm;

	USE FROM Physical_unit_3d_design_view_arm;	-- ISO/TS 10303-1725
	USE FROM Stratum_non_planar_shape_arm;	-- ISO/TS 10303-1748

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE stratum_feature_3d_shape_select = SELECT
    (Stratum_feature_non_planar_2d_shape_model,
     Stratum_feature_3d_shape_model);
  END_TYPE;

  ENTITY Stratum_3d_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_component : Stratum;
    WHERE
      WR1 : NOT ('LAYERED_INTERCONNECT_MODULE_3D_DESIGN_ARM.PLANAR_SHAPE_MODEL' IN TYPEOF(SELF));
      WR2 : NOT EXISTS(SELF\Representation.name);
      WR3 : NOT EXISTS(SELF\Representation.description);
      WR4 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;            
  END_ENTITY;

  ENTITY Stratum_feature_3d_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_component : Stratum_feature;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
      WR2 : NOT EXISTS(SELF\Representation.description);
      WR3 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;      
  END_ENTITY;

  ENTITY Stratum_interconnect_module_3d_position;
      stratum_component         : Interconnect_module_stratum_assembly_relationship;
      stratum_shape             : Stratum_3d_shape_model;
      interconnect_module_shape : Physical_unit_3d_shape_model;
      transformation            : Axis_placement_3d;
   UNIQUE
   	UR1 : stratum_component;
  END_ENTITY;

RULE no_component_assembly_3d_location_for_area_component FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR
       (no_3d_location_for_component(ac))) 
  )) = 0;
END_RULE;  

RULE component_in_assembly_3d_context FOR (Area_component);
WHERE
  WR1:  SIZEOF(QUERY( ac <* Area_component | NOT(
       (SIZEOF(USEDIN(ac,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT')) = 0) OR 
        (in_3d_assembly_context(ac)))
          )) = 0;
END_RULE;  

FUNCTION in_3d_assembly_context(comp : Assembly_component) : BOOLEAN;
  LOCAL
    shapes : SET OF Assembly_component_3d_shape_model := [];
    shapes_in_context : SET OF Physical_unit_3d_shape_model := [];
    assemblies : SET OF Product_view_definition := [];
    i, j : INTEGER := 0;
    in_context : BOOLEAN := TRUE;
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
  END_REPEAT;

  shapes := bag_to_set(USEDIN(comp,'PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'));
  REPEAT i := 1 TO SIZEOF(shapes);
    shapes_in_context := bag_to_set(USEDIN(shapes[i]\Geometric_model.context_of_items,'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'));
    in_context := FALSE;
    j := 1;
    REPEAT WHILE ((j <= SIZEOF(shapes_in_context)) AND (NOT (in_context)));
      in_context := (shapes_in_context[j].shape_characterized_definition IN assemblies);
      j := j + 1;
    END_REPEAT;
    
    IF NOT (in_context) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  
  RETURN (SIZEOF(shapes) > 0);
END_FUNCTION;

FUNCTION no_3d_location_for_component(comp : Assembly_component) : BOOLEAN;
  LOCAL
    i, j : INTEGER := 0;
    cis : SET OF Contextual_item_shape := [];
    loc : SET OF Component_3d_location := [];
  END_LOCAL;
  
  REPEAT i := 1 TO SIZEOF(comp.occurrence_contexts);
    cis := bag_to_set(USEDIN(comp.occurrence_contexts[i],'SHAPE_PROPERTY_ASSIGNMENT_ARM.CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'));
    REPEAT j := 1 TO SIZEOF(cis);
      loc := bag_to_set(USEDIN(cis[j],'CONTEXTUAL_SHAPE_POSITIONING_ARM.CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'));
      IF (SIZEOF(loc) > 0) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_REPEAT;

  RETURN (TRUE);
END_FUNCTION;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.247 2006/10/12 10:44:09 liutkus Exp $
   ISO TC184/SC4/WG12 N4041 - ISO/TS 10303-1698 Layered interconnect module design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3483
*)

SCHEMA Layered_interconnect_module_design_arm;

	USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
	USE FROM Edge_shape_feature_arm;	-- ISO/TS 10303-1673
	USE FROM Interconnect_module_usage_view_arm;	-- ISO/TS 10303-1686
	USE FROM Interconnect_physical_requirement_allocation_arm;	-- ISO/TS 10303-1689
	USE FROM Footprint_definition_arm;	-- ISO/TS 10303-1646
	USE FROM Physical_connectivity_definition_arm;	-- ISO/TS 10303-1755
	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718
	USE FROM Interconnect_module_connection_routing_arm;
	USE FROM Assembly_component_placement_requirements_arm;	-- ISO/TS 10303-1634	

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

   TYPE area_component_templates = SELECT (
     Stratum_feature_template, -- when area_component comes from library
     Fill_area_template); -- when area_component is defined in place
   END_TYPE;

	TYPE limd_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Generic_physical_network,
	   Stratum);
	END_TYPE; 

	TYPE limd_restriction_basis_item = EXTENSIBLE SELECT BASED_ON restriction_basis_item WITH 
	   (stratum_concept,
	   Stratum);
	END_TYPE; 

    TYPE stratum_feature_or_stratum = SELECT (
      Stratum_feature,
      Stratum);
    END_TYPE;

    TYPE stratum_feature_template_component_or_stratum = SELECT
      (Stratum_feature_template_component, Stratum);
    END_TYPE;
    
	SUBTYPE_CONSTRAINT limd_assembly_component_subtypes FOR Assembly_component; 
	    (ONEOF (Physical_component,
	 	Laminate_component));
	END_SUBTYPE_CONSTRAINT;
	
	SUBTYPE_CONSTRAINT array_placement_group_subtypes FOR Array_placement_group; 
		(ONEOF (Laminate_text_string_component,
		 Linear_array_placement_group_component,
		 Rectangular_array_placement_group_component));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT component_feature_subtypes FOR Component_feature;     
		 ONEOF (Physical_component_feature,
		 Laminate_component_feature);
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT component_terminal_subtypes FOR Component_terminal;     
		 ONEOF (Physical_component_terminal,
		 Laminate_component_join_terminal);
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT inter_stratum_feature_subtypes FOR Inter_stratum_feature;     
		 ONEOF (Cutout,
		 Interconnect_module_edge);
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT interconnect_module_terminal_subtypes FOR Interconnect_module_terminal;     
		(ONEOF (Interconnect_module_interface_terminal,
		 Interconnect_module_macro_terminal));
	END_SUBTYPE_CONSTRAINT; 

	SUBTYPE_CONSTRAINT limd_part_view_definition_subtypes FOR Part_view_definition; 
		(ONEOF (Part_usage_view,
		Part_design_view,
		Stratum));
	END_SUBTYPE_CONSTRAINT; 
	
	SUBTYPE_CONSTRAINT limd_template_definition_subtypes FOR Template_definition; 
	    (ONEOF (
           ONEOF(Printed_part_template, Special_symbol_template) ANDOR  Geometric_template, 
           Non_conductive_cross_section_template,
           Part_string_template, 
           Parametric_template,
           Part_text_template,
           Stratum_stack_model));
	END_SUBTYPE_CONSTRAINT;

    TYPE material_removal_feature_template_or_parametric_template = SELECT
      (Material_removal_feature_template, Parametric_template);
    END_TYPE;

    TYPE special_symbol_component = SELECT
      (Single_stratum_special_symbol_component, Multi_stratum_special_symbol_component);
    END_TYPE;

    TYPE stratum_feature_template_or_parametric_template = SELECT
      (Stratum_feature_template, Parametric_template);
    END_TYPE;

 	TYPE bare_die_component_or_packaged_component = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

 	TYPE bare_die_terminal_or_packaged_part_terminal = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

 	TYPE component_feature_or_stratum_surface = EXTENSIBLE GENERIC_ENTITY SELECT
		(Component_feature,
		Stratum_surface);
 	END_TYPE;

	TYPE limd_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Template_definition,
   	Part_usage_view,
   	Part_design_view,
   	Stratum);
	END_TYPE; 

 	TYPE limd_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Stratum_based_pattern,
		Stratum_feature_based_derived_pattern,
		Stratum,
		Laminate_component);
	END_TYPE;

	TYPE limd_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON feature_select WITH 
	   	(Printed_part_template_terminal,
	   	Land_template_terminal,
	   	Component_termination_passage_template_terminal,
	   	Via_template_terminal,
	   	Part_terminal_external_reference);
	END_TYPE; 

	TYPE limd_physical_feature_or_part_template = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_feature_or_part_template WITH 
	   (Part_feature,
		Physical_component_feature,
	 	Laminate_component,
	 	Template_definition,
	 	Stratum_feature);
	END_TYPE;

	TYPE limd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Stratum_feature_conductive_join,
	     Dielectric_crossover_area,
	    Interconnect_module);
	END_TYPE; 

	TYPE limd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	    (stratum_concept,
	     Stratum);
	END_TYPE;

	TYPE limd_trace_junction_or_via_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON trace_junction_or_via WITH 
		(Inter_stratum_join_relationship);
	END_TYPE;

	TYPE limd_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Component_termination_passage_template_terminal,
	     Via_template_terminal);
	END_TYPE;

 	TYPE material_or_specification = SELECT
 		(Predefined_requirement_view_definition,
     	Material_identification);
	END_TYPE;

 	TYPE stratum_concept = EXTENSIBLE GENERIC_ENTITY SELECT
    (Laminate_component,
     Inter_stratum_feature,
     Stratum_feature,
     Stratum,
     Stratum_surface,
     Structured_layout_component);
	END_TYPE;

    TYPE stratum_surface_designation = ENUMERATION OF
    (average_surface,
     primary_surface,
     secondary_surface);
    END_TYPE;

  ENTITY Adjacent_stratum_surface_definition;
      name               : STRING;
      precedent_surface  : Stratum_surface;
      subsequent_surface : Stratum_surface;
    DERIVE
      of_product : Product := precedent_surface.of_stratum\Product_view_definition.defined_version.of_product;      
    UNIQUE
      UR1 : name;
      UR2 : precedent_surface, subsequent_surface;
    WHERE
      WR1: precedent_surface.name = stratum_surface_designation.secondary_surface;
      WR2: subsequent_surface.name = stratum_surface_designation.primary_surface;
      WR3: of_product :=: subsequent_surface.of_stratum\Product_view_definition.defined_version.of_product;
      WR4: acyclic_adjacent_stratum_surface_definition(SELF, [subsequent_surface], 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.ADJACENT_STRATUM_SURFACE_DEFINITION');
  END_ENTITY;

  ENTITY Adjacent_stratum_surface_embedded_physical_component_surface_definition;
      name            : STRING;
      precedent_item  : component_feature_or_stratum_surface;
      subsequent_item : component_feature_or_stratum_surface;
    UNIQUE
      UR1 : name;
      UR2 : precedent_item,
 subsequent_item;
    WHERE
      WR1 : precedent_item <> subsequent_item;
      WR2 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_FEATURE' IN TYPEOF(precedent_item)) OR 
        (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.BARE_DIE_SURFACE',
               'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PACKAGE_BODY_SURFACE',
               'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SECONDARY_SURFACE'] * TYPEOF(precedent_item.definition)) = 1);
      WR3 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_FEATURE' IN TYPEOF(subsequent_item)) OR 
        (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.BARE_DIE_SURFACE',
                 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PACKAGE_BODY_SURFACE',
                 'INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE'] * TYPEOF(subsequent_item.definition)) = 1);
      WR4 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_SURFACE' IN TYPEOF(precedent_item)) OR 
                (precedent_item.name = stratum_surface_designation.secondary_surface);
      WR5 : NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_SURFACE' IN TYPEOF(subsequent_item)) OR 
                (precedent_item.name = stratum_surface_designation.primary_surface);                 
  END_ENTITY;

  ENTITY Area_component
    SUPERTYPE OF (Connected_area_component)
    SUBTYPE OF (Stratum_feature_template_component);
      explicitly_created : BOOLEAN;    
      is_base : BOOLEAN;
      replaced_component : OPTIONAL Area_component;
      SELF\Definition_based_product_occurrence.derived_from : area_component_templates;
    DERIVE
      is_final : BOOLEAN := (SIZEOF(replaced_by) = 0);
    INVERSE
      replaced_by : SET [0:?] OF Area_component FOR replaced_component;
    WHERE
      WR1: NOT(is_final XOR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(implementation_or_resident_stratum)));
      WR2: is_final OR (SIZEOF(QUERY(rp <* replaced_by | SELF\Stratum_feature_template_component.resident_stratum :<>: 
        get_resident_stratum(rp))) = 0);      
      WR3: NOT(SELF IN replaced_by);
      WR4: NOT(replaced_component IN replaced_by);
      WR5: is_final XOR (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT')) > 0);
      WR6: NOT EXISTS(replaced_component) OR 
            acyclic_area_component(SELF, [replaced_component], 
            'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT');
  END_ENTITY;

  ENTITY Breakout_occurrence
    SUBTYPE OF (Footprint_occurrence);
      SELF\Definition_based_product_occurrence.derived_from : Breakout_footprint_definition;
      associated_footprint : Footprint_occurrence;
    WHERE
      WR1: associated_footprint <> SELF;
      WR2: derived_from.reference_footprint = associated_footprint.derived_from;
  END_ENTITY;

  ENTITY Component_termination_passage
    SUBTYPE OF (Plated_passage);
      SELF\Definition_based_product_occurrence.derived_from : Component_termination_passage_template;
    INVERSE
      access_mechanism           : SET[1:?] OF component_termination_passage_join_terminal FOR containing_shape;
      interface_access_mechanism : component_termination_passage_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Component_termination_passage_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Component_termination_passage_template_interface_terminal;
      SELF\Component_feature.associated_component : Component_termination_passage;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Component_termination_passage_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Component_termination_passage_template_join_terminal;
      SELF\Component_feature.associated_component : Component_termination_passage;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_filled_area
    SUPERTYPE OF (Connected_filled_area)
    SUBTYPE OF (Stratum_feature);
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_interconnect_element
    ABSTRACT SUPERTYPE OF (ONEOF (Unrouted_conductive_interconnect_element, Conductive_interconnect_element_with_pre_defined_transitions))
    SUBTYPE OF (Stratum_feature_template_component);
    INVERSE
      access_mechanisms : SET [2:?] OF Conductive_interconnect_element_terminal FOR associated_component;
      connected_points : SET [1:?] OF Conductive_interconnect_element_terminal_link FOR associated_element;
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PROBE_ACCESS_AREA' IN TYPEOF(SELF));
      WR3: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FIDUCIAL' IN TYPEOF(SELF));
      WR4: correlated_terminals(SELF\Conductive_interconnect_element.access_mechanisms,
         connected_points);      
      WR5 : (1 + SIZEOF(connected_points)) = limd_get_sz_cp(connected_points);         
  END_ENTITY;

  ENTITY Conductive_interconnect_element_terminal
    SUBTYPE OF (Laminate_component_feature, Shape_feature);
      SELF\Component_feature.associated_component : Conductive_interconnect_element;
      SELF\Shape_feature.connection_area          : OPTIONAL SET[1:1] OF Connection_zone_in_design_view;
      location                                    : Layer_connection_point;
    UNIQUE
      UR1 : SELF\Component_feature.element_name, SELF\Component_feature.associated_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Conductive_interconnect_element_terminal_link;
      associated_element : Conductive_interconnect_element;
      precedent_point    : Conductive_interconnect_element_terminal;
      subsequent_point   : Conductive_interconnect_element_terminal;
    UNIQUE
      UR1 : precedent_point,
 subsequent_point;
    WHERE
      WR1 : precedent_point <> subsequent_point;
      WR2 : precedent_point.associated_component = associated_element;
      WR3 : subsequent_point.associated_component = associated_element;
      WR4 : acyclic_conductive_interconnect_element_terminal_link(SELF,
        [subsequent_point], 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK');
  END_ENTITY;

  ENTITY Conductive_interconnect_element_with_pre_defined_transitions
    SUPERTYPE OF (Join_two_physical_connectivity_definition_supporting_conductive_interconnect_element)
    SUBTYPE OF (Conductive_interconnect_element);
      centreline_shape                                                           : Planar_path_shape_model_with_parameters;
      SELF\Definition_based_product_occurrence.derived_from                      : Trace_template;
      SELF\Stratum_feature_template_component.implementation_or_resident_stratum : Stratum_feature;
    WHERE
      WR1: SIZEOF(connected_points) = SIZEOF(SELF\Conductive_interconnect_element.access_mechanisms) - 1;
      WR2: SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTOR',
            'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_FILLED_AREA'] *
            TYPEOF(SELF\Stratum_feature_template_component.implementation_or_resident_stratum)) = 1;
      WR3: centreline_shape.parameters = derived_from.trace_style;            
      WR4 : SIZEOF(QUERY(ciet <* SELF\Conductive_interconnect_element.access_mechanisms |
             NOT(ciet.location.resident_design_layer_stratum = 
            SELF\Stratum_feature_template_component.implementation_or_resident_stratum.resident_stratum)
                  )) = 0;
  END_ENTITY;

  ENTITY Conductor
    SUBTYPE OF (Stratum_feature);
      SELF\Stratum_feature.resident_stratum : Design_layer_stratum;
      implementation_requirement            : SET [1:?] OF Intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0:?] OF Join_two_physical_network_supporting_single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
      WR2 : SIZEOF(implementation_requirement) - SIZEOF(join_component) = 1;
  END_ENTITY;

  ENTITY Connected_area_component
    SUBTYPE OF (Area_component);
      associated_layer_connection_point : SET[1:?] OF Layer_connection_point;
  END_ENTITY;

  ENTITY Connected_filled_area
    SUBTYPE OF (Conductive_filled_area);
      SELF\Stratum_feature.resident_stratum : Design_layer_stratum;
      implementation_requirement            : SET [1:?] OF Intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0:?] OF Join_two_physical_network_supporting_single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      WR1 : SIZEOF(implementation_requirement) - SIZEOF(join_component) = 1;
  END_ENTITY;

  ENTITY Cutout
    SUPERTYPE OF (ONEOF (Physical_connectivity_interrupting_cutout,
 Plated_cutout,
 Partially_plated_cutout))
    SUBTYPE OF (Inter_stratum_feature);
    vertical_reference : OPTIONAL Interconnect_module_edge;
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: SIZEOF(QUERY(shape <* SELF\Inter_stratum_feature.derived_from\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(shape)))) = 0;      
      WR3: EXISTS(SELF\Inter_stratum_feature.vertical_extent) XOR EXISTS(vertical_reference);
  END_ENTITY;

  ENTITY Cutout_edge_segment
    SUPERTYPE OF (Plated_cutout_edge_segment)
    SUBTYPE OF (Inter_stratum_feature);
      composed_cutout                             : Cutout;
      start_vertex                                : Edge_segment_vertex;
      end_vertex                                  : Edge_segment_vertex;
      SELF\Inter_stratum_feature.derived_from : Inter_stratum_feature_edge_segment_template;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Dependent_thermal_isolation_removal_component
    SUBTYPE OF (Material_removal_structured_component);
      SELF\Definition_based_product_occurrence.derived_from : Dependent_thermal_isolation_removal_template;
      associated_land : Land;
    WHERE
      WR1 : associated_land\Definition_based_product_occurrence.derived_from :=:
            SELF\Definition_based_product_occurrence.derived_from\Dependent_thermal_isolation_removal_template.associated_item;
  END_ENTITY;

  ENTITY Derived_stratum
     SUBTYPE OF (Stratum);
   WHERE
     WR1: SIZEOF(QUERY(sbpise <* USEDIN(SELF, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTER_STRATUM_EXTENT.INCLUDED_STRATUM')|
                      ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_BASED_PATTERN_INTER_STRATUM_EXTENT' IN TYPEOF(sbpise))))=1;
  END_ENTITY;

  ENTITY Design_layer_stratum
    SUBTYPE OF (Stratum);
      primary_design_layer_stratum : BOOLEAN;
      SELF\Stratum.of_technology   : Design_layer_technology;
    INVERSE
      existence_dependence : SET[1:?] OF layer_connection_point FOR resident_design_layer_stratum;
    WHERE
      WR1 : (NOT (primary_design_layer_stratum) AND (SIZEOF(QUERY(imps <* USEDIN(SELF,
 'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT') | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 0)) OR ((primary_design_layer_stratum) AND (SIZEOF(QUERY(imps <* USEDIN(SELF,
 'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.' + 'ASSIGNED_DESIGN_OBJECT') | ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(imps.defined_part_feature)))) = 1));
  END_ENTITY;

  ENTITY Dielectric_material_passage
    SUBTYPE OF (Inter_stratum_feature);
      feature_material  : OPTIONAL material_or_specification;
      precedent_passage : Cutout;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Documentation_layer_stratum
    SUBTYPE OF (Stratum);
      SELF\Stratum.of_technology : Documentation_layer_technology;
  END_ENTITY;

  ENTITY Electrical_isolation_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Electrical_isolation_removal_template;
  END_ENTITY;

  ENTITY Embedded_physical_component_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : bare_die_terminal_or_packaged_part_terminal;
      SELF\Component_feature.associated_component : bare_die_component_or_packaged_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Fiducial
    SUBTYPE OF (Laminate_component);
  END_ENTITY;

  ENTITY Fiducial_stratum_feature
    SUBTYPE OF (Stratum_feature);
  END_ENTITY;

  ENTITY Filled_via
    SUBTYPE OF (Via);
      SELF\Definition_based_product_occurrence.derived_from : Filled_via_template;
  END_ENTITY;  

  ENTITY Footprint_occurrence
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Generic_footprint_definition;
  END_ENTITY;

  ENTITY Footprint_occurrence_sub_assembly_relationship
	SUBTYPE OF (Structured_layout_component_sub_assembly_relationship);
      SELF\Structured_layout_component_sub_assembly_relationship.relating_view : Footprint_occurrence;	
      SELF\Structured_layout_component_sub_assembly_relationship.related_view : Laminate_component;
      SELF\Structured_layout_component_sub_assembly_relationship.first_location RENAMED terminal_location : Part_feature_based_template_location;
      SELF\Structured_layout_component_sub_assembly_relationship.second_location RENAMED sub_assembly_reference_designation : Template_location_in_structured_template; 
   UNIQUE
      UR1 : sub_assembly_reference_designation,
       relating_view,
       terminal_location;
    WHERE
      WR1 : terminal_location.assembly :=: relating_view.derived_from;
      WR2 : terminal_location.template :=: sub_assembly_reference_designation.assembly;
      WR3 : 'PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION' IN TYPEOF(sub_assembly_reference_designation.assembly);
  END_ENTITY;

  ENTITY Generic_physical_network
    ABSTRACT SUPERTYPE OF (ONEOF(Unrouted_physical_network, Routed_physical_network));
      name                                         : STRING;
      current_associated_definition                : Interconnect_module;
      prior_associated_definition                  : OPTIONAL SET[1:?] OF Interconnect_module;      
      connectivity_requirement_element             : SET[1:?] OF Laminate_component_join_terminal;
      reference_connected_terminals                : OPTIONAL Part_connected_terminals_definition;    
      unrouted_connectivity_requirement_element    : OPTIONAL SET[1:?] OF Unrouted_join_relationship;
    UNIQUE
      UR1 : name,
 current_associated_definition;
 		WHERE
      WR1 : NOT (EXISTS(prior_associated_definition)) OR NOT (current_associated_definition IN prior_associated_definition); 
  END_ENTITY; 

  ENTITY Interface_access_material_removal_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      accessed_interface : Laminate_component_interface_terminal;
  END_ENTITY;

  ENTITY Inter_stratum_extent
    SUBTYPE OF (Part_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED from_stratum : Stratum;
      SELF\View_definition_relationship.related_view RENAMED to_stratum    : Stratum;
    DERIVE
      included_stratum : SET [1:?] OF Stratum := get_included_stratum(from_stratum,to_stratum);
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Inter_stratum_feature
		ABSTRACT SUPERTYPE OF (ONEOF (Unsupported_passage,
			Plated_inter_stratum_feature))  
    SUBTYPE OF (Laminate_component);
      feature_of_size                                       : BOOLEAN;
      vertical_extent                                       : OPTIONAL Passage_technology_allocation_to_stack_model;
      SELF\Definition_based_product_occurrence.derived_from : Inter_stratum_feature_template;
    WHERE
      WR1: NOT EXISTS(vertical_extent) OR (SIZEOF(QUERY(nauor <* get_assemblies(SELF) |
         NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE' IN TYPEOF(nauor\View_definition_relationship.relating_view)) AND             
              (vertical_extent\Passage_technology_allocation_to_stack_model.associated_stackup =
                   nauor\View_definition_relationship.relating_view.stackup_model[1].concept))
                   )) = 0);
  END_ENTITY;

  ENTITY Inter_stratum_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      points_to_be_connected : SET[2:?] OF Layer_connection_point;
  END_ENTITY;

  ENTITY Interconnect_connection_zone_position_relationship;
      associating_design_view_shape               : Geometric_model;
      associated_usage                            : Connection_zone_in_design_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
      associating_design_view                     : Interconnect_module;
  END_ENTITY;

  ENTITY Interconnect_module
  	SUPERTYPE OF (Pcb)
    SUBTYPE OF (Assembly_definition, Part_design_view);
    INVERSE
      requirements : SET[0:?] OF Requirement_assignment FOR assigned_to;
      stackup_model : SET[0:1] OF Stratum_stack_model_to_interconnect_assignment FOR design;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.' + 'ASSEMBLY')) = 0)
      OR
      (SIZEOF(QUERY(imsar <* USEDIN(SELF, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.' + 'ASSEMBLY') | 
              (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DESIGN_LAYER_STRATUM' IN TYPEOF(imsar.component)) AND 
               (imsar.component\Design_layer_stratum.primary_design_layer_stratum = TRUE)))) = 1);
      WR2: NOT EXISTS (SELF\Product_view_definition.additional_characterization);
      WR3 : SIZEOF(QUERY(vdr <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.' + 'RELATING_VIEW') | 
              (('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(vdr)) AND
              ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_EDGE' IN TYPEOF(vdr.related_view)))
                  )) = 1;
  END_ENTITY;

  ENTITY Interconnect_module_edge
    SUPERTYPE OF (ONEOF (Partially_plated_interconnect_module_edge,
 Plated_interconnect_module_edge))
    SUBTYPE OF (Inter_stratum_feature);
    WHERE
      WR1: SIZEOF(QUERY(shape <* SELF\Inter_stratum_feature.derived_from\Geometric_template.shapes |
        NOT ('CONSTRUCTIVE_SOLID_GEOMETRY_2D_ARM.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF(shape)))) = 0;
      WR2: NOT EXISTS(SELF\Inter_stratum_feature.vertical_extent);
  END_ENTITY;

  ENTITY Interconnect_module_edge_segment
    SUPERTYPE OF (ONEOF(Plated_interconnect_module_edge_segment,
                        Unplated_interconnect_module_edge_segment))
    SUBTYPE OF (Inter_stratum_feature);
      composed_edge                               : Interconnect_module_edge;
      start_vertex                                : Edge_segment_vertex;
      end_vertex                                  : Edge_segment_vertex;
      SELF\Inter_stratum_feature.derived_from : Inter_stratum_feature_edge_segment_template;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Interconnect_module_macro_terminal
    SUBTYPE OF (Interconnect_module_terminal);
    INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
    WHERE
      WR1 : SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL',
 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.VIA_TERMINAL',
 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PRINTED_COMPONENT_JOIN_TERMINAL',
 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL',
 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAND_JOIN_TERMINAL'] * TYPEOF(defining_terminal.assigned_design_object)) = 1;
  END_ENTITY;

  ENTITY Interconnect_module_stratum_assembly_relationship;
      assembly              : Interconnect_module;
      component             : Stratum;
      reference_designation : STRING; 
    UNIQUE
      UR1 : assembly,
 reference_designation;
  END_ENTITY;

  ENTITY Interface_access_stratum_feature_template_component
    SUBTYPE OF (Stratum_feature_template_component);
      accessed_interface : Laminate_component_interface_terminal;
  END_ENTITY;

  ENTITY Internal_probe_access_area
    SUBTYPE OF (Probe_access_area);
      stratum_feature_implementation : Stratum_feature;
    INVERSE
      internal_access : internal_stratum_access FOR connected_probe;
  END_ENTITY;

  ENTITY Internal_stratum_access;
      connected_probe       : Internal_probe_access_area;
      inter_stratum_feature : Via;
    UNIQUE
      UR1 : connected_probe,
 Inter_stratum_feature;
  END_ENTITY;

  ENTITY Intra_stratum_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      points_to_be_connected : SET[2:?] OF Layer_connection_point;
    DERIVE
      associated_stratum : Design_layer_stratum := points_to_be_connected[1].resident_design_layer_stratum;
    INVERSE
      ordered_implementation : SET[0:1] OF conductor FOR implementation_requirement;
      random_implementation  : SET[0:1] OF connected_filled_area FOR implementation_requirement;
    WHERE
      WR1 : (SIZEOF(ordered_implementation) = 1) XOR (SIZEOF(random_implementation) = 1);      
      WR2 : SIZEOF(QUERY(ptbc <* points_to_be_connected |
            NOT(ptbc.resident_design_layer_stratum = associated_stratum)
              )) = 0;
  END_ENTITY;

  ENTITY Join_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (Routed_join_relationship,
	 	Unrouted_join_relationship));
      associated_layout : Interconnect_module;
  END_ENTITY;

  ENTITY Join_two_physical_connectivity_definition_supporting_conductive_interconnect_element
    SUBTYPE OF (Conductive_interconnect_element_with_pre_defined_transitions);
      joined_definitions : SET[2:2] OF Physical_connectivity_definition;
  END_ENTITY;

  ENTITY Laminate_component
		SUPERTYPE OF (ONEOF (Material_removal_laminate_component,
			Stratum_feature_template_component ANDOR Probe_access_area,
			Inter_stratum_feature,
			Generic_laminate_text_component,
			Laminate_text_string_component) ANDOR
			Fiducial)
    SUBTYPE OF (Assembly_component);
      SELF\Definition_based_product_occurrence.derived_from : Template_definition;
    INVERSE
	  cad_layer						: SET[0:1] OF External_source_identification FOR item;      	  
    WHERE
    WR1:('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1]\View_definition_relationship.relating_view))
         OR
        ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1]));
    WR2: SIZEOF(QUERY(oc <* SELF\Assembly_component.occurrence_contexts |
                NOT(TYPEOF(oc) = TYPEOF(SELF\Assembly_component.occurrence_contexts[1]))
                )) = 0;
  END_ENTITY;

  ENTITY Laminate_component_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Conductive_interconnect_element_terminal,
 Laminate_component_interface_terminal,
 Laminate_component_join_terminal,
 Via_terminal))
    SUBTYPE OF (Component_feature);
  END_ENTITY;

  ENTITY Laminate_component_interface_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Laminate_component_feature);
  END_ENTITY;

  ENTITY Laminate_component_join_terminal
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Laminate_component_feature,
 Component_terminal);
    INVERSE
      node_implementation : SET[0:1] OF Generic_physical_network FOR connectivity_requirement_element;
  END_ENTITY;

  ENTITY Laminate_group_component_make_from_relationship
    SUBTYPE OF (Component_make_from_relationship);
      SELF\Component_make_from_relationship.reusable_component  : Assembly_group_component;
      SELF\Component_make_from_relationship.resultant_component : Assembly_group_component;
      stratum_mapping                                           : SET[1:?] OF Part_definition_relationship;
    WHERE
     WR1: SIZEOF(QUERY(sar <* SELF\Component_make_from_relationship.reusable_component.components | NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT' IN TYPEOF(sar\view_definition_relationship.related_view)))) = 0;
     WR2: SIZEOF(QUERY(sar <* SELF\Component_make_from_relationship.resultant_component.components | NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT' IN TYPEOF(sar\view_definition_relationship.related_view)))) = 0;

  END_ENTITY;

  ENTITY Generic_laminate_text_component
    ABSTRACT SUPERTYPE OF (ONEOF (Additive_laminate_text_component,
      Material_removal_laminate_text_component))
    SUBTYPE OF (Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Part_text_template;
	DERIVE
      of_character : STRING(1) := SELF\Definition_based_product_occurrence.derived_from.of_character.character;      
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Laminate_text_string_component
    SUBTYPE OF (Array_placement_group,
 Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : Part_string_template;
      message_contents            : Text_literal_with_extent;
    WHERE
      WR1 : SIZEOF(QUERY(sar <* SELF\Assembly_group_component.components | 
            NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.GENERIC_LAMINATE_TEXT_COMPONENT' IN  TYPEOF(sar.related_view)) )) = 0;  
      WR2 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Layer_connection_point
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Shape_element);
      SELF\Shape_element.element_name : STRING;
      location_2d                   : OPTIONAL Cartesian_point;
      location_3d                   : OPTIONAL Cartesian_point;
      SELF\Shape_element.containing_shape RENAMED resident_design_layer_stratum : Design_layer_stratum;
    DERIVE
      aggregate_join    : SET[1:?] OF join_relationship := 
           make_aggregate_join(
               inter_join_path,
               intra_join_path,
               embedded_physical_component_path,
               unrouted_join_path);
      reference_network : Generic_physical_network := aggregate_join[1].network_topology;
    INVERSE
      inter_join_path         : SET[0:1] OF Inter_stratum_join_relationship FOR points_to_be_connected;
      intra_join_path         : SET [0:?] OF Intra_stratum_join_relationship FOR points_to_be_connected;
      embedded_physical_component_path : SET[0:?] OF Stratum_embedded_physical_component_join_relationship FOR point_to_be_connected;
      unrouted_join_path         : SET [0:1] OF Unrouted_join_relationship FOR unrouted_lcp;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, resident_design_layer_stratum;
    WHERE
      WR1 : EXISTS(location_2d) OR EXISTS(location_3d);
      WR2 : NOT (EXISTS(location_2d)) OR ((SIZEOF(location_2d\Cartesian_point.coordinates)) = 2);
      WR3 : NOT (EXISTS(location_3d)) OR ((SIZEOF(location_3d\Cartesian_point.coordinates)) = 3);
      WR4 : EXISTS(reference_network); 
      WR5 : NOT EXISTS (SELF\Shape_element.description);
      WR6 : SIZEOF(QUERY(ijp <* intra_join_path | NOT(resident_design_layer_stratum :=: ijp.associated_stratum)
                  )) = 0;
  END_ENTITY;

  ENTITY Layout_junction;
      name                  : STRING;  
      associated_definition : Interconnect_module;
      net                   : Generic_physical_network;
      location              : Cartesian_point;
    UNIQUE
      UR1 : location,
 net;
      UR2 : name,
 net;
    WHERE
      WR1 : associated_definition :=: net.current_associated_definition;
  END_ENTITY;

  ENTITY Library_reference_view_definition_relationship
    SUBTYPE OF (View_definition_relationship);
  WHERE
    WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Material_removal_laminate_component
    SUPERTYPE OF (Electrical_isolation_laminate_component)
    SUBTYPE OF (Laminate_component);
      causal_item                                           : OPTIONAL restriction_basis_item;
      design_intent                                         : SET[1:?] OF stratum_feature_template_component_or_stratum;
      SELF\Definition_based_product_occurrence.derived_from : material_removal_feature_template_or_parametric_template;
      explicitly_created                                    : BOOLEAN;
    WHERE
      WR1:   SIZEOF(QUERY(sa <* design_intent | NOT(
         NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(sa)) OR
           (SIZEOF(design_intent) = 1)))) = 0;
  END_ENTITY;

  ENTITY Material_removal_structured_component
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Material_removal_structured_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Multi_layer_material_removal_laminate_component
    SUBTYPE OF (Material_removal_laminate_component);
      derived_layer_geometry : Stratum_feature_based_derived_pattern;
  END_ENTITY;

  ENTITY Multi_stratum_special_symbol_component
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Multi_stratum_special_symbol_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Multi_layer_stratum_feature
    SUBTYPE OF (Stratum_feature);
      derived_layer_geometry : Stratum_feature_based_derived_pattern;
    WHERE
      WR1: SELF\Stratum_feature.resident_stratum = derived_layer_geometry.reference_stratum_feature.resident_stratum;
  END_ENTITY;

  ENTITY Multi_layer_stratum_feature_template_component
    SUBTYPE OF (Stratum_feature_template_component);
      derived_layer_geometry : Stratum_feature_based_derived_pattern;
    WHERE
      WR1: SELF\Stratum_feature_template_component.implementation_or_resident_stratum\Stratum_feature.resident_stratum
        :=: derived_layer_geometry.reference_stratum_feature.resident_stratum;
  END_ENTITY;

  ENTITY Material_removal_laminate_text_component
    SUBTYPE OF (Generic_laminate_text_component);
      design_intent : SET [1:?] OF stratum_feature_template_component_or_stratum;
    WHERE
      WR1: SIZEOF(QUERY(sa <* design_intent | NOT(
         NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(sa)) OR
           (SIZEOF(design_intent) = 1)))) = 0;
  END_ENTITY;

  ENTITY Padstack_occurrence
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Padstack_definition;
    INVERSE
      SELF\Assembly_group_component.components : SET [1:?] OF Structured_layout_component_sub_assembly_relationship FOR relating_view;
    WHERE
      WR1 : SIZEOF(QUERY(sar <* components |
            EXISTS(sar.second_location)
                  )) = 0;
  END_ENTITY;

  ENTITY Partially_plated_cutout
    SUBTYPE OF (Cutout);
    INVERSE
      plated_segment   : SET[1:?] OF Plated_cutout_edge_segment FOR composed_cutout;
      unplated_segment : SET[1:?] OF Unplated_cutout_edge_segment FOR composed_cutout;
  END_ENTITY;
  
  ENTITY Partially_plated_interconnect_module_edge
    SUBTYPE OF (Interconnect_module_edge);
    INVERSE
      plated_segment   : SET[1:?] OF Plated_interconnect_module_edge_segment FOR composed_edge;
      unplated_segment : SET[1:?] OF Unplated_interconnect_module_edge_segment FOR composed_edge;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Pcb
    SUBTYPE OF (Interconnect_module);
      SELF\Part_design_view.usage_view : OPTIONAL Pcb_usage_view;
    INVERSE
      SELF\Interconnect_module.stackup_model : SET [1:1] OF Stratum_stack_model_to_interconnect_assignment FOR design;
  END_ENTITY;

  ENTITY Physical_connectivity_interrupting_cutout
    SUBTYPE OF (Cutout);
      interrupted_connectivity_element : SET[1:?] OF Conductive_interconnect_element;
  END_ENTITY;

  ENTITY Plated_cutout
    SUBTYPE OF (Cutout,
 Plated_inter_stratum_feature);
  END_ENTITY;

  ENTITY Plated_cutout_edge_segment
    SUBTYPE OF (Cutout_edge_segment,
 Plated_inter_stratum_feature);
      SELF\Cutout_edge_segment.composed_cutout : Partially_plated_cutout;
  END_ENTITY;

  ENTITY Plated_inter_stratum_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Plated_cutout,
		 Plated_interconnect_module_edge,
		 Plated_cutout_edge_segment,
		 Plated_interconnect_module_edge_segment,
		 Plated_passage))
    SUBTYPE OF (Inter_stratum_feature);
    WHERE
      WR1 : SELF\Inter_stratum_feature.vertical_extent.allocated_technology.plated_passage = TRUE;
  END_ENTITY;

  ENTITY Plated_interconnect_module_edge
    SUBTYPE OF (Interconnect_module_edge,
 Plated_inter_stratum_feature);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Plated_interconnect_module_edge_segment
    SUBTYPE OF (Plated_inter_stratum_feature,
 Interconnect_module_edge_segment);
      SELF\Interconnect_module_edge_segment.composed_edge : Partially_plated_interconnect_module_edge;
  END_ENTITY;

  ENTITY Plated_passage
    SUPERTYPE OF (ONEOF (Component_termination_passage,
 Via))
    SUBTYPE OF (Plated_inter_stratum_feature);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Additive_laminate_text_component
    SUBTYPE OF (Generic_laminate_text_component);
      stratum_feature_implementation : SET [1:?] OF Stratum_feature;
    WHERE
      WR1: SIZEOF(QUERY(sf <* stratum_feature_implementation | sf.resident_stratum :<>: stratum_feature_implementation[1].resident_stratum)) = 0;
  END_ENTITY;

  ENTITY Primary_stratum_indicator_symbol
    SUBTYPE OF (Single_stratum_special_symbol_component);
  END_ENTITY;

  ENTITY Probe_access_area
    SUPERTYPE OF (Internal_probe_access_area)
    SUBTYPE OF (Laminate_component, Shape_feature);
    	SELF\Definition_based_product_occurrence.derived_from : Stratum_feature_template;
        probed_layout_item                                    : Stratum_feature;
        SELF\Shape_feature.connection_area                    : SET[1:1] OF Connection_zone_in_design_view;
    	stratum_feature_material_stackup                      : OPTIONAL Multi_layer_stratum_feature;
    DERIVE
      SELF\Shape_element.containing_shape : Probe_access_area := SELF;
      SELF\Shape_feature.element_name : STRING := '';      
      SELF\Shape_element.id : STRING := SELF\Item_shape.id;      
    INVERSE
      network : Routed_physical_network FOR probe;
  END_ENTITY;

  ENTITY Routed_join_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
        Inter_stratum_join_relationship,
		Intra_stratum_join_relationship,
	 	Stratum_embedded_physical_component_join_relationship))
    SUBTYPE OF (Join_relationship);
    INVERSE
      network_topology : Routed_physical_network FOR routed_connectivity_requirement_element;
  END_ENTITY;

  ENTITY Routed_physical_network
    SUBTYPE OF (Generic_physical_network);
      routed_connectivity_requirement_element 	                     : SET[1:?] OF Routed_join_relationship;
      probe                                                          : OPTIONAL SET[1:?] OF Probe_access_area;
    DERIVE
    	complete	: BOOLEAN := NOT EXISTS(unrouted_connectivity_requirement_element);
        valid_net   : BOOLEAN := (SIZEOF(SELF\Generic_physical_network.connectivity_requirement_element) > 1 );
    WHERE
      WR1 : SIZEOF(QUERY(cre <* SELF\Generic_physical_network.connectivity_requirement_element | NOT 
      (NOT ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAND_JOIN_TERMINAL' IN TYPEOF(cre)) OR 
           (SIZEOF(TYPEOF(cre\Component_feature.associated_component) * 
            ['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONTACT_SIZE_DEPENDENT_LAND']) = 1)))) = 0;
      WR2: NOT EXISTS(SELF\Generic_physical_network.reference_connected_terminals) OR
                     (SELF\Generic_physical_network.reference_connected_terminals.associated_definition = 
                      SELF\Generic_physical_network.current_associated_definition\Part_design_view.usage_view);
  END_ENTITY; 

  ENTITY Single_stratum_special_symbol_component
    SUPERTYPE OF (Primary_stratum_indicator_symbol)
    SUBTYPE OF (Structured_layout_component);
      SELF\Definition_based_product_occurrence.derived_from : Single_stratum_special_symbol_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Stratum
    SUPERTYPE OF (ONEOF (Documentation_layer_stratum,
 Design_layer_stratum))
    SUBTYPE OF (Part_view_definition, Item_shape);
      SELF\Product_view_definition.id : STRING;
      of_technology 			: Stratum_technology;
    DERIVE
      of_average_surface 	: SET[0:1] OF stratum_average_surface := 
        QUERY(tmp <* of_surface | 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_AVERAGE_SURFACE' IN TYPEOF(tmp));

      SELF\Item_shape.described_element : shapeable_item := SELF;
      
      of_product_version : SET [1:?] OF product_version := 
          bag_to_set(QUERY(pv <* USEDIN(assembly[1].assembly.defined_version.of_product, 'PRODUCT_VERSION_ARM.PRODUCT_VERSION.OF_PRODUCT') | 
                (SIZEOF(QUERY( pd <* USEDIN(pv, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |
                     (SIZEOF(QUERY(nauo <* USEDIN(pd, 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY') | (SELF = nauo.component))) = 1)
                     )) = 1)
               ));
      base_component : SET [0:?] OF Area_component := get_base_component(SELF);               
    INVERSE
      of_surface         	: SET[1:3] OF stratum_surface FOR of_stratum;
      assembly           	: SET[1:?] OF interconnect_module_stratum_assembly_relationship FOR component;
	  stratum_usage			: SET[0:1] OF External_source_identification FOR item;      
	  material_product      : SET [0:1] OF Make_from_relationship FOR related_view;
   WHERE
    WR1: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.average_surface)) <= 1;
    WR2: NOT(SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.average_surface)) = 1) OR
            (SIZEOF(of_surface) < 3);    
    WR3: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.primary_surface)) <= 1;
    WR4: SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.secondary_surface)) <= 1;
    WR5: NOT(SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.secondary_surface)) = 1) OR
            (SIZEOF(QUERY(tmp <* of_surface | tmp\Stratum_surface.name = stratum_surface_designation.primary_surface)) = 1);
    WR6: NOT EXISTS (SELF\Product_view_definition.additional_characterization);
    WR7: SIZEOF(QUERY(asse <* assembly |
                NOT(asse.assembly.defined_version.of_product = assembly[1].assembly.defined_version.of_product)
         )) = 0;
    WR8: SIZEOF(of_product_version) = SIZEOF(assembly);
    WR9: SELF\Product_view_definition.defined_version IN of_product_version;
    WR10: NOT ( SIZEOF(material_product)= 1) OR (material_product[1].relating_view IN               
          of_technology.stratum_material.items);   
    WR11: SIZEOF(base_component) < 2;
  END_ENTITY;

  ENTITY Stratum_average_surface
      SUBTYPE OF (Stratum_surface);
   WHERE
    WR1 : SELF\Stratum_surface.name = stratum_surface_designation.average_surface;
  END_ENTITY;

  ENTITY Stratum_based_pattern;
      name        : STRING;  
      extent      : Inter_stratum_extent;
    INVERSE
      layer_usage	: SET[0:1] OF External_source_identification FOR item;
    UNIQUE
      UR1 : name;
  END_ENTITY;

  ENTITY Stratum_based_pattern_inter_stratum_extent
    SUBTYPE OF (Inter_stratum_extent);
      reference_stratum : Stratum;
    WHERE
      WR1: reference_stratum IN SELF\Inter_stratum_extent.included_stratum;

      WR2: SIZEOF(QUERY(rs <* SELF\Inter_stratum_extent.included_stratum | 
      (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DESIGN_LAYER_STRATUM',
               'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_STRATUM'] * TYPEOF(rs)) = 1)
                  )) = 1;
  END_ENTITY;

  ENTITY Stratum_embedded_physical_component_join_relationship
    SUBTYPE OF (Routed_join_relationship);
      terminal_to_be_connected : SET[1:?] OF Embedded_physical_component_terminal;
      point_to_be_connected    : SET[1:?] OF Layer_connection_point;
    DERIVE
      associated_component : Assembly_component := terminal_to_be_connected[1]\Component_feature.associated_component;
    WHERE
      WR1 : SIZEOF(QUERY(t <* terminal_to_be_connected | t.associated_component <> associated_component)) = 0;
  END_ENTITY;

  ENTITY Stratum_feature
		SUPERTYPE OF (ONEOF (Conductor,
 			Conductive_filled_area) ANDOR (Fiducial_stratum_feature))    
		SUBTYPE OF (Shape_element); 			
      SELF\Shape_element.containing_shape RENAMED resident_stratum  : Stratum;
      SELF\Shape_element.element_name : STRING;
      feature_of_size                                               : BOOLEAN;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, resident_stratum;
    WHERE
      WR1 : SIZEOF(query ( ac <* USEDIN(SELF,'') |
                  ('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT' IN TYPEOF(ac))
                   AND
                  (get_assemblies(ac) <> get_ims(resident_stratum))
                  ))
                  = 0;      
  END_ENTITY;

  ENTITY Stratum_feature_based_derived_pattern;
      extent                    : Inter_stratum_extent;
      reference_stratum_feature : Stratum_feature;
    INVERSE
      layer_usage	: SET[0:1] OF External_source_identification FOR item;
    WHERE
      WR1: reference_stratum_feature\Stratum_feature.resident_stratum IN extent\Inter_stratum_extent.included_stratum;
      WR2: SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DESIGN_LAYER_STRATUM',
                   'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_STRATUM'] * TYPEOF(reference_stratum_feature\Stratum_feature.resident_stratum)) = 1;
      WR3: SIZEOF(QUERY(ds <* extent\Inter_Stratum_extent.included_stratum |
             NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DERIVED_STRATUM' IN TYPEOF(ds))
                 )) = 1;
  END_ENTITY;

  ENTITY Stratum_feature_template_component
    SUBTYPE OF (Laminate_component);
      SELF\Definition_based_product_occurrence.derived_from : stratum_feature_template_or_parametric_template;
      implementation_or_resident_stratum : stratum_feature_or_stratum; 
      causal_item : OPTIONAL restriction_basis_item;
    DERIVE
      resident_stratum : Stratum := get_resident_stratum(SELF);
    WHERE
      WR1: NOT EXISTS(SELF\Product_view_definition.name);
      WR2: 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS' IN TYPEOF(SELF) OR
        NOT('PART_TEMPLATE_EXTENSION_ARM.TRACE_TEMPLATE' IN TYPEOF(derived_from));        
  END_ENTITY;

  ENTITY Stratum_stack_model_to_interconnect_assignment
    SUBTYPE OF (View_definition_relationship);
     SELF\View_definition_relationship.relating_view RENAMED concept : Design_stack_model;
     SELF\View_definition_relationship.related_view RENAMED design   : Interconnect_module;
    WHERE
     WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Stratum_surface;
      name       : stratum_surface_designation;  
      of_stratum : Stratum;
    UNIQUE
      UR1 : name,
 of_stratum;
  END_ENTITY;

  ENTITY Stratum_technology_occurrence_to_stratum_mapping_relationship;
    technology_occurrence_link : Stratum_technology_occurrence_link;
    stratum_link               : Adjacent_stratum_surface_definition;
    mapping_context            : Stratum_stack_model_to_interconnect_assignment;
   UNIQUE
    UR1: mapping_context, technology_occurrence_link;
   WHERE
    WR1: technology_occurrence_link.precedent_sto.definition :=:
         stratum_link.precedent_surface.of_stratum.of_technology; 
    WR2: technology_occurrence_link.subsequent_sto.definition :=:
         stratum_link.subsequent_surface.of_stratum.of_technology; 
  END_ENTITY;

  ENTITY Structured_layout_component
    ABSTRACT SUPERTYPE OF (ONEOF (Footprint_occurrence, 
            Material_removal_structured_component,
			Multi_stratum_special_symbol_component,
            Padstack_occurrence, 
            Single_stratum_special_symbol_component))
    SUBTYPE OF (Assembly_group_component);
      SELF\Definition_based_product_occurrence.derived_from : Structured_template;
    WHERE
      WR1 : SIZEOF(TYPEOF(SELF) *
        ['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.LAMINATE_COMPONENT',
        'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PHYSICAL_COMPONENT']) = 0;
      WR2: SIZEOF(QUERY(agc <* SELF\Assembly_group_component.components |
        NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(agc)))) = 0;
  END_ENTITY;

ENTITY Structured_layout_component_sub_assembly_relationship
    SUPERTYPE OF (Footprint_occurrence_sub_assembly_relationship)
    SUBTYPE OF (Next_assembly_usage_occurrence_relationship);
      SELF\View_definition_relationship.relating_view : Structured_layout_component;
      SELF\View_definition_relationship.related_view : Assembly_component;
      first_location : Template_location_in_structured_template;
      second_location : OPTIONAL Template_location_in_structured_template;
      overriding_shape : OPTIONAL Part_template_shape_model;
   DERIVE
      first_location_overridden : BOOLEAN := NOT EXISTS(second_location) AND
                  (SELF\View_definition_relationship.related_view\Assembly_component.derived_from
                   :<>: first_location.template);      
      second_location_overridden : BOOLEAN := EXISTS(second_location) AND
                  (SELF\View_definition_relationship.related_view\Assembly_component.derived_from
                   :<>: second_location.template);
    UNIQUE
      UR1 : first_location, second_location,relating_view,related_view;
    WHERE
     WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
     WR2 : NOT EXISTS(SELF\View_definition_relationship.id);
     WR3 : NOT EXISTS(SELF\Assembly_component_relationship.location_indicator);
     WR4 : NOT EXISTS(SELF\Assembly_component_relationship.quantity);
     WR5 : first_location_overridden OR 
          (SELF\View_definition_relationship.relating_view\Assembly_component.derived_from :=: first_location.assembly);
     WR6 : first_location :<>: second_location;
     WR7 : NOT first_location_overridden OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(relating_view));
     WR8 : NOT second_location_overridden OR ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(relating_view));
     WR9 : NOT (first_location_overridden AND second_location_overridden);
     WR10: NOT (EXISTS(overriding_shape) XOR (first_location_overridden OR second_location_overridden));
     WR11: NOT EXISTS(overriding_shape) OR (related_view.derived_from IN overriding_shape.shape_characterized_definition);
  END_ENTITY;

  ENTITY Unplated_cutout_edge_segment
    SUBTYPE OF (Cutout_edge_segment);
      SELF\Cutout_edge_segment.composed_cutout : Partially_plated_cutout;
   WHERE
    WR1 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Unplated_interconnect_module_edge_segment
    SUBTYPE OF (Interconnect_module_edge_segment);
      SELF\Interconnect_module_edge_segment.composed_edge : Partially_plated_interconnect_module_edge;
   WHERE
    WR1 : NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Unrouted_conductive_interconnect_element
    SUBTYPE OF (Conductive_interconnect_element);
      SELF\Stratum_feature_template_component.implementation_or_resident_stratum : Stratum;
  END_ENTITY;

  ENTITY Unrouted_join_relationship
    SUBTYPE OF (Join_relationship);
      unrouted_terminals : OPTIONAL SET[1:?] OF Laminate_component_join_terminal;
      unrouted_lcp       : OPTIONAL SET[1:?] OF Layer_connection_point;
      unrouted_junction  : OPTIONAL SET[1:?] OF Layout_junction;
      unrouted_paa       : OPTIONAL SET[1:?] OF Probe_access_area;
      unrouted_via       : OPTIONAL SET[1:?] OF Via_terminal;
    INVERSE
      network_topology : Generic_physical_network FOR unrouted_connectivity_requirement_element;
    WHERE
      WR1: (SIZEOF(unrouted_terminals) + SIZEOF(unrouted_lcp) + SIZEOF(unrouted_paa) + SIZEOF(unrouted_via) + SIZEOF(unrouted_junction)) > 0;
  END_ENTITY;

  ENTITY Unrouted_physical_network
    SUBTYPE OF (Generic_physical_network);
  END_ENTITY; 

  ENTITY Unsupported_passage
    SUBTYPE OF (Inter_stratum_feature);
      SELF\Definition_based_product_occurrence.derived_from : Unsupported_passage_template;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Via
    ABSTRACT SUPERTYPE OF (Filled_via)
    SUBTYPE OF (Plated_passage);
      SELF\Definition_based_product_occurrence.derived_from : Via_template;
  END_ENTITY;

  ENTITY Via_terminal
    SUBTYPE OF (Laminate_component_feature);
      SELF\Component_feature.definition           : Via_template_terminal;
      SELF\Component_feature.associated_component : Via;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  FUNCTION acyclic_area_component
    (relation : Area_component; relatives : SET[1:?] OF 
    Area_component; specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Area_component;
  END_LOCAL;

    IF relation.replaced_component IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.replaced_component,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'AREA_COMPONENT.' +
      'REPLACED_COMPONENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_area_component(x[i], relatives +
        relation.replaced_component, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

  FUNCTION acyclic_adjacent_stratum_surface_definition
    (relation : Adjacent_stratum_surface_definition; 
    relatives : SET[1:?] OF Stratum_surface; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Adjacent_stratum_surface_definition := [];
  END_LOCAL;

    IF relation.subsequent_surface IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.subsequent_surface,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'ADJACENT_STRATUM_SURFACE_DEFINITION.' +
      'SUBSEQUENT_SURFACE')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_adjacent_stratum_surface_definition(x[i], relatives +
        relation.subsequent_surface, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
  
  FUNCTION acyclic_conductive_interconnect_element_terminal_link
    (relation : Conductive_interconnect_element_terminal_link; 
    relatives : SET[1:?] OF Conductive_interconnect_element_terminal; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Conductive_interconnect_element_terminal_link := [];
  END_LOCAL;

    IF relation.subsequent_point IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.subsequent_point,
      'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
      'CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK.' +
      'SUBSEQUENT_POINT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_conductive_interconnect_element_terminal_link(x[i], relatives +
        relation.subsequent_point, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
  
  FUNCTION correlated_terminals(
    input1 : SET OF Conductive_interconnect_element_terminal ;
    input2 : SET OF Conductive_interconnect_element_terminal_link
  ) : BOOLEAN;

    LOCAL
      pass : BOOLEAN := FALSE;
      ciet : SET OF conductive_interconnect_element_terminal := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input2) BY 1;
      ciet := ciet + input2[i].precedent_point;
      ciet := ciet + input2[i].subsequent_point;
    END_REPEAT;
    pass := (input1 = ciet);
    RETURN(pass);
  END_FUNCTION;

FUNCTION get_base_component(input : Stratum): SET OF Area_component;
LOCAL
   sf : SET OF Stratum_feature := bag_to_set(USEDIN(input,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE.RESIDENT_STRATUM'));
   sftc : SET OF Stratum_feature_template_component := bag_to_set(
            USEDIN(input,'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'));
   i : INTEGER := 0;
   ac: SET OF Area_component;
END_LOCAL;
   REPEAT i := 1 TO HIINDEX(sf) BY 1;
   ac := bag_to_set(QUERY(temp <* USEDIN(sf[i],
                   'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM') | 
                    (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(temp)) AND
                     (temp.is_base = TRUE))));
   END_REPEAT;
   REPEAT i := 1 to HIINDEX(sftc) BY 1;
      IF(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.AREA_COMPONENT' IN TYPEOF(sftc[i])) AND
         (sftc[i].is_base = TRUE))
      THEN
       ac := ac + sftc[i];
      END_IF;
   END_REPEAT;
  RETURN(ac);
END_FUNCTION;

  FUNCTION get_included_stratum(
    input1 : Stratum;
    input2 : Stratum
  ) : SET OF Stratum;
    RETURN (?);
  END_FUNCTION;

  FUNCTION limd_get_sz_cp (
    input : SET[1:?] OF Conductive_interconnect_element_terminal_link) : INTEGER;
  LOCAL
    ac : SET OF Conductive_interconnect_element_terminal := [];
  END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
      input[i]\Conductive_interconnect_element_terminal_link.precedent_point +
      input[i]\Conductive_interconnect_element_terminal_link.subsequent_point;
    END_REPEAT;
    RETURN (SIZEOF(ac));
  END_FUNCTION;

  FUNCTION make_aggregate_join(
    input1 : SET OF Inter_stratum_join_relationship ;
    input2 : SET OF Intra_stratum_join_relationship ;
    input3 : SET OF Stratum_embedded_physical_component_join_relationship;
    input4 : SET OF Unrouted_join_relationship) : SET OF Join_relationship;

    LOCAL
      v1 : SET OF join_relationship := input1;
    END_LOCAL;

    v1 := v1 + input2 + input3 + input4;
    RETURN(v1);
  END_FUNCTION;

FUNCTION get_assemblies(input : Assembly_component) : SET OF
Product_view_definition;
LOCAL
  acr : SET OF Assembly_component_relationship := input.occurrence_contexts;
  pvd : SET OF Product_view_definition := [];
END_LOCAL;

REPEAT i := 1 TO HIINDEX(acr) BY 1;
  IF NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
'STRUCTURED_LAYOUT_COMPONENT' IN
TYPEOF(acr[i]\View_definition_relationship.relating_view))
  THEN
  pvd := pvd + acr[i]\View_definition_relationship.relating_view; 
  ELSE
  pvd := pvd + get_assemblies(acr[i]\View_definition_relationship.relating_view);
  END_IF;
END_REPEAT;

RETURN (pvd);
END_FUNCTION;

FUNCTION get_ims(input : Stratum) : SET OF Product_view_definition;
LOCAL
  imsar : SET OF Interconnect_module_stratum_assembly_relationship := input.assembly;
  pvd : SET OF Product_view_definition := [];
END_LOCAL;
REPEAT i := 1 TO HIINDEX(imsar) BY 1;
  pvd := pvd + imsar[i].assembly; 
END_REPEAT;

RETURN (pvd);
END_FUNCTION;

FUNCTION get_resident_stratum(input: Stratum_feature_template_component) : Stratum;
   IF 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_FEATURE' IN TYPEOF(input.implementation_or_resident_stratum)
     THEN RETURN(input.implementation_or_resident_stratum.resident_stratum);
   ELSE 
     IF 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM' IN TYPEOF(input.implementation_or_resident_stratum)
       THEN RETURN(input.implementation_or_resident_stratum);
     END_IF;  
   END_IF;
   RETURN(?); 
END_FUNCTION;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.43 2006/10/13 16:06:13 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4047 - ISO/TS 10303-1700 Layered interconnect module with printed component design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3486
*)

SCHEMA Layered_interconnect_module_with_printed_component_design_arm;   

	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698
	USE FROM Printed_physical_layout_template_arm;	-- ISO/TS 10303-1737

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

 	TYPE limwpcd_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Printed_component);
	END_TYPE;

 	TYPE conductor_or_conductive_filled_area = SELECT
		(Conductor, 
		 Conductive_filled_area);
	END_TYPE;

	SUBTYPE_CONSTRAINT limwpcd_assembly_component_subtypes FOR Assembly_component; 
	    (ONEOF (Physical_component,
		 Printed_component,
	 	Laminate_component));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT limwpcd_structured_layout_component_subtypes FOR Structured_layout_component; 
		(ONEOF (Footprint_occurrence,
			Material_removal_structured_component,
            Multi_stratum_printed_component, 
			Multi_stratum_special_symbol_component,
			Padstack_occurrence,
			Single_stratum_printed_component,
			Single_stratum_special_symbol_component));
	END_SUBTYPE_CONSTRAINT; 

  ENTITY Basic_multi_stratum_printed_component 
    SUBTYPE OF (Printed_component);
      material_stack : Stratum_feature_based_derived_pattern;
      SELF\Printed_component.derived_from : Basic_multi_stratum_printed_part_template;
    DERIVE
      stratum_feature_implementation : Stratum_feature := material_stack.reference_stratum_feature;
  END_ENTITY;

  ENTITY Join_two_physical_network_supporting_single_stratum_printed_component
    SUBTYPE OF (Single_stratum_printed_component);
      joined_networks : SET[2:2] OF Generic_physical_network;
      SELF\Single_stratum_printed_component.stratum_feature_implementation : SET [1:1] OF conductor_or_conductive_filled_area;
    WHERE
     WR1 : SIZEOF(SELF\Printed_component.access_mechanism) = 2;
     WR2 : SIZEOF(QUERY(ac <* access_mechanism |
         NOT(ac\Printed_component_join_terminal.
         stratum_concept_implementation\Stratum_feature_template_component
         .resident_stratum = stratum_feature_implementation[1]\Stratum_feature.resident_stratum)
               )) = 0;
    WR3 : SIZEOF(QUERY(jn <* joined_networks |
                 NOT(SIZEOF(SELF\Printed_component.access_mechanism * jn\Generic_physical_network.connectivity_requirement_element) = 1 )
                 )) = 0;               
  END_ENTITY;
  
  ENTITY Join_multiple_physical_network_supporting_multi_stratum_printed_component
    SUBTYPE OF (Multi_stratum_printed_component);
    DERIVE
      joined_networks : SET OF Generic_physical_network := get_gpn(SELF\Printed_component.access_mechanism);
      tiebar_component_sub_assembly_relationship : SET [1:1] OF Structured_layout_component_sub_assembly_relationship :=
                 (QUERY(co <* components |
                 ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_ARM.SINGLE_STRATUM_PRINTED_COMPONENT' IN
                  TYPEOF(co.related_view))
                 ));
      tiebar_component : Single_stratum_printed_component := tiebar_component_sub_assembly_relationship[1].related_view;
   INVERSE
    SELF\Assembly_group_component.components  : 
             SET [3:3] OF Structured_layout_component_sub_assembly_relationship FOR relating_view;
    WHERE
     WR1 : SIZEOF(QUERY(co <* components |
                 ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_ARM.SINGLE_STRATUM_PRINTED_COMPONENT' IN
                  TYPEOF(co.related_view))
                 )) = 1;
     WR2 : SIZEOF(QUERY(co <* components |
                 ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(co))
                 )) = 2;             
     WR3 : SIZEOF(tiebar_component\Single_stratum_printed_component.stratum_feature_implementation) = 1;       
     WR4 : SIZEOF(joined_networks) > 1;
     WR5 : (SIZEOF(get_gpn(tiebar_component.access_mechanism)) = 0) OR 
           ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_ARM.JOIN_TWO_PHYSICAL_NETWORK_SUPPORTING_SINGLE_STRATUM_PRINTED_COMPONENT' IN TYPEOF(tiebar_component));  
  END_ENTITY;
  
FUNCTION get_gpn(
	input : SET OF printed_component_join_terminal) : SET OF Generic_physical_network; 
LOCAL
	gpn : SET[0:?] OF Generic_physical_network := [];  --this gives us access to the information base
END_LOCAL;

	REPEAT i := 1 to SIZEOF(input) by 1;
		gpn := gpn + bag_to_set(USEDIN(input[i],'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.GENERIC_PHYSICAL_NETWORK.CONNECTIVITY_REQUIREMENT_ELEMENT'));
	END_REPEAT;

	RETURN(gpn);
END_FUNCTION;
  
  ENTITY Multi_stratum_printed_component
    SUBTYPE OF (Printed_component, Structured_layout_component);
      SELF\Printed_component.derived_from : Multi_stratum_printed_part_template;
  END_ENTITY;

  ENTITY Single_stratum_printed_component
    SUBTYPE OF (Printed_component, Structured_layout_component);
      SELF\Printed_component.derived_from : Single_stratum_printed_part_template;
      stratum_feature_implementation : SET [1:?] OF Stratum_feature;
   WHERE
    WR1 : SIZEOF(QUERY(sfi <* stratum_feature_implementation |
         NOT(sfi.resident_stratum = stratum_feature_implementation[1].resident_stratum)
               )) = 0;
  END_ENTITY;

  ENTITY Printed_component
     ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_printed_component, 
    Basic_multi_stratum_printed_component,
    Multi_stratum_printed_component))
    SUBTYPE OF (Assembly_component);
      SELF\Definition_based_product_occurrence.derived_from : printed_part_template;
    INVERSE
      access_mechanism : SET[1:?] OF printed_component_join_terminal FOR associated_component;
      cad_layer	: SET[0:1] OF External_source_identification FOR item;
    WHERE
      WR5 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_component_join_terminal
    SUBTYPE OF (Laminate_component_join_terminal);
      SELF\Component_feature.definition           : Printed_part_template_join_terminal;
      SELF\Component_feature.associated_component : Printed_component;
      stratum_concept_implementation              : Stratum_feature_template_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Printed_connector_component
    SUBTYPE OF (Printed_component);
      SELF\Definition_based_product_occurrence.derived_from : Printed_connector_template;
    INVERSE
      interface_access_mechanism : SET[1:?] OF Printed_connector_component_interface_terminal FOR associated_component;
  END_ENTITY;

  ENTITY Printed_connector_component_interface_terminal
    SUBTYPE OF (Laminate_component_interface_terminal);
      SELF\Component_feature.definition           : Printed_part_template_interface_terminal;
      SELF\Component_feature.associated_component : Printed_connector_component;
      stratum_concept_implementation              : Stratum_feature_template_component;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Routed_transmission_line
    SUBTYPE OF (Assembly_component);
      routed_centreline_shape                  : Curve;
      SELF\Definition_based_product_occurrence.derived_from : Printed_part_cross_section_template;
      component_extent                         : Inter_stratum_extent;
      curve_parameters                         : Curve_style_parameters;
  END_ENTITY;

END_SCHEMA; 
(*
   $Id: arm.exp,v 1.21 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4050 - ISO/TS 10303-1701 Layout macro definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3489
*)

SCHEMA Layout_macro_definition_arm; 

	USE FROM Fabrication_joint_arm;	-- ISO/TS 10303-1668

	SUBTYPE_CONSTRAINT printed_component_subtypes FOR Printed_component;  
	(ONEOF (Layout_macro_component,
	 Printed_connector_component));
	END_SUBTYPE_CONSTRAINT;  

	SUBTYPE_CONSTRAINT printed_part_template_subtypes FOR Printed_part_template;  
		 (ONEOF (Basic_multi_stratum_printed_part_template,
		Layout_macro_floor_plan_template,
		Printed_connector_template,
		Structured_printed_part_template));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Layout_macro_component
    SUBTYPE OF (Printed_component);
      design_definition                       	: Layout_macro_definition;
      SELF\Printed_component.derived_from		: Layout_macro_floor_plan_template;
  END_ENTITY;

  ENTITY Layout_macro_definition
    SUBTYPE OF (Interconnect_module);
      floor_layout_view : Layout_macro_floor_plan_template;
    WHERE
      WR1 : NOT (EXISTS(SELF\Part_design_view.usage_view));
      WR2 : SIZEOF(USEDIN(SELF,
 'GENERIC_PRODUCT_OCCURRENCE_ARM.DEFINITION_BASED_PRODUCT_OCCURRENCE.DERIVED_FROM')) = 0;
  END_ENTITY;

  ENTITY Layout_macro_definition_terminal_to_usage_terminal_assignment;
      defined_template_feature : Printed_part_template_terminal;
      assigned_design_object   : fabricated_feature_select;
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,
 'LAYOUT_MACRO_DEFINITION_ARM.LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE.ACCESS_MAPS')) = 1;
  END_ENTITY;

  ENTITY Layout_macro_floor_plan_template
    SUBTYPE OF (Printed_part_template);
      access_maps : SET[1:?] OF Layout_macro_definition_terminal_to_usage_terminal_assignment;
    INVERSE
      macro_definition : SET[0:1] OF layout_macro_definition FOR floor_layout_view;
    WHERE
      WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\Printed_part_template ||
                                 SELF\Template_definition ||
                                 SELF\Item_shape ||
                                 SELF\Product_view_definition ||
                                 SELF\Layout_macro_floor_plan_template)) = 0;
  END_ENTITY;


END_SCHEMA;
(*
 $Id: arm.exp,v 1.9 2006/03/24 18:54:48 thendrix Exp $
 ISO TC184/SC4/WG12 N4287 - ISO/TS 10303-1288 Management resource information - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3079
*) 


SCHEMA Management_resource_information_arm;

USE FROM Alias_identification_arm;    -- ISO/TS 10303-1025

USE FROM Approval_arm;    -- ISO/TS 10303-1012

USE FROM Certification_arm;    -- ISO/TS 10303-1044

USE FROM Contract_arm;    -- ISO/TS 10303-1062

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Multi_linguism_arm;    -- ISO/TS 10303-1105

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Project_arm;    -- ISO/TS 10303-1061

USE FROM Security_classification_arm;    -- ISO/TS 10303-1015


TYPE mri_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH 
   (Approval_status, 
    Contract, 
    Organization, 
    Security_classification);
END_TYPE; 

TYPE mri_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
   (Certification, 
    Contract);
END_TYPE; 

TYPE mri_date_or_date_time_item = EXTENSIBLE SELECT BASED_ON date_or_date_time_item WITH 
   (Certification, 
    Contract, 
    Organization_or_person_in_organization_assignment, 
    Security_classification_assignment);
END_TYPE; 

TYPE mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (Approval_status, 
    Contract, 
    Organization, 
    Security_classification);
END_TYPE; 

TYPE mri_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Contract, 
    Identification_assignment, 
    Security_classification_assignment);
END_TYPE; 

TYPE mri_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH 
   (Approval, 
    Approval_relationship, 
    Approval_status, 
    Certification, 
    Contract, 
    Date_or_date_time_assignment, 
    Identification_assignment, 
    Organization_relationship, 
    Person_in_organization, 
    Project, 
    Project_assignment, 
    Project_relationship);
END_TYPE; 

END_SCHEMA;  -- Management_resource_information_arm


(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4053 - ISO/TS 10303-1702 Manifold subsurface - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3474
*)

SCHEMA Manifold_subsurface_arm;

	USE FROM Manifold_surface_arm;	-- ISO/TS 10303-1509

  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.6 2004/10/22 14:19:31 darla Exp $
 ISO TC184/SC4/WG12 N1276 - ISO/TS 10303-1509 Manifold surface - EXPRESS ARM
*)


SCHEMA Manifold_surface_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Manifold_surface_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.11 2004/10/28 19:08:56 darla Exp $
 ISO TC184/SC4/WG12 N2968 - ISO/TS 10303-1118 Measure representation - EXPRESS ARM
*) 


SCHEMA Measure_representation_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Measure_item
  ABSTRACT SUPERTYPE 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))>0;
END_ENTITY;

ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS')| 'MEASURE_REPRESENTATION_ARM.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;

ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;

ENTITY Property_value_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;

END_SCHEMA;  -- Measure_representation_arm
(*
   $Id: arm.exp,v 1.28 2006/10/25 14:03:51 liutkus Exp $
   ISO TC184/SC4/WG12 N4056 - ISO/TS 10303-1703 Model parameter - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3492
*)



SCHEMA Model_parameter_arm;
	USE FROM Activity_method_assignment_arm;	-- ISO/TS 10303-1249
	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654
	USE FROM Classification_with_attributes_arm;	-- ISO/TS 10303-1111
	USE FROM Independent_property_representation_arm;	-- ISO/TS 10303-1038
	USE FROM Group_arm;	-- ISO/TS 10303-1113

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747

	TYPE mp_activity_method_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item WITH 
	   (Test_method_based_parameter_assignment);
	END_TYPE; 

	TYPE mp_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Group_relationship);
	END_TYPE; 

	TYPE mp_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Model_parameter);
	END_TYPE; 

  ENTITY Category_model_parameter
    SUBTYPE OF (Model_parameter);
    INVERSE 
      associated_attribute : SET[1:1] OF Classification_attribute FOR attribute_definition;
  END_ENTITY;

  ENTITY Independent_property_with_unit 
    SUBTYPE OF (Independent_property);
      unit_of_measure: SET [1:?] OF Unit;
  END_ENTITY;

  ENTITY Model_parameter
   SUBTYPE OF (Independent_property);
      valid_range        : OPTIONAL SET[1:?] OF Value_range;
      default_value      : OPTIONAL scalar_or_coordinated_characteristics;
	DERIVE
		reference_document: SET[0:?] OF Document_definition :=
  			get_document_definition(SELF, 'reference document', 
  			'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION');
	WHERE
   		WR1 : EXISTS (reference_document) AND (SIZEOF(reference_document) = 1);
  END_ENTITY;


  ENTITY Parameter_assignment
    SUBTYPE OF (Independent_property_representation);
      SELF\Independent_property_representation.property: Model_parameter;
  END_ENTITY;

  ENTITY Parameter_assignment_override;
      overridden_parameter_assignment : Parameter_assignment;
      overriding_parameter_assignment : Parameter_assignment;
  END_ENTITY;

  ENTITY Schema_based_model_parameter
    SUBTYPE OF (Model_parameter);
      entity_name    : Independent_property;
      attribute_name : OPTIONAL Independent_property;
      schema_identifier : Independent_property;
    UNIQUE
      UR1 : entity_name,
 attribute_name,
 schema_identifier;
  END_ENTITY;

  ENTITY Product_specific_parameter_value_assignment;
      of_product         : Product;
      assigned_parameter : Parameter_assignment;
    DERIVE
      the_model_parameter : model_parameter := assigned_parameter\Independent_property_representation.property;
    UNIQUE
      UR1 : the_model_parameter, of_product;
  END_ENTITY;

  ENTITY Test_method_based_parameter_assignment
    SUBTYPE OF (Parameter_assignment);
   WHERE
    WR1 : SIZEOF(USEDIN(SELF,'ACTIVITY_METHOD_ASSIGNMENT_ARM.APPLIED_ACTIVITY_METHOD_ASSIGNMENT.ITEMS')) = 1;
  END_ENTITY;

END_SCHEMA;

(* 
 $Id: arm.exp,v 1.13 2004/11/30 17:12:57 robbod Exp $
 ISO TC184/SC4/WG12 N3242 - ISO/TS 10303-1105 Multi linguism - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2223
*)

SCHEMA Multi_linguism_arm;

TYPE string_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;

ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;

ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;

END_SCHEMA; -- Multi_linguism_arm
(*
 $Id: arm.exp,v 1.4 2004/11/19 21:37:37 robbod Exp $
 ISO TC184/SC4/WG12 N3085 - ISO/TS 10303-1340 Name assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2282
*) 


SCHEMA Name_assignment_arm;


TYPE assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;

END_SCHEMA;  -- Name_assignment_arm


(*
   $Id: arm.exp,v 1.36 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4059 - ISO/TS 10303-1704 Network functional design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3339
*)

SCHEMA Network_functional_design_view_arm;

	USE FROM Generic_product_occurrence_arm;	-- ISO/TS 10303-xxxx
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233

	SUBTYPE_CONSTRAINT functional_unit_definition_subtypes FOR Functional_unit_definition;     
		(ONEOF (Functional_unit_network_definition,
		Functional_unit_usage_view));
	END_SUBTYPE_CONSTRAINT; 

  TYPE bus_structural_definition_or_node = SELECT
    (Functional_unit_network_node_definition,
     Bus_structural_definition);
  END_TYPE;

TYPE nfdw_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Functional_unit);
END_TYPE; 

  ENTITY Bus_element_link;
      precedent_element  : bus_structural_definition_or_node;
      subsequent_element : bus_structural_definition_or_node;
    UNIQUE
      UR1 : precedent_element,
 subsequent_element;
    WHERE
      WR1 : precedent_element <> subsequent_element;
  END_ENTITY;

  ENTITY Bus_structural_definition;
      bus_name    : STRING; 
      composition : SET[1:?] OF Bus_element_link;
    INVERSE
      external_bus_access : SET[0:1] OF Functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
    UNIQUE
      UR1 : bus_name;
    WHERE
      WR1 : consistent_bus_structural_definition(composition);
  END_ENTITY;

  ENTITY Functional_unit
  	SUBTYPE OF(Definition_based_product_occurrence);
      SELF\Definition_based_product_occurrence.derived_from RENAMED definition   : Functional_unit_definition;
      SELF\Product_view_definition.id RENAMED reference_designation : STRING; 
      functional_property   : OPTIONAL SET[1:?] OF Parameter_assignment_override;
    DERIVE  
		composed_network    : Functional_unit_network_definition := SELF\Product_occurrence.occurrence_contexts[1].relating_view;    
		SELF\Product_view_definition.defined_version : Product_version := SELF\Definition_based_product_occurrence.derived_from.defined_version;
    INVERSE
      access_mechanisms : SET[1:?] OF functional_unit_terminal FOR accessed_functional_unit;
    UNIQUE
      UR1 : reference_designation, composed_network;
    WHERE
      WR1 : SIZEOF(SELF\Product_occurrence.occurrence_contexts) = 1;
      WR2 : EXISTS(composed_network);
  END_ENTITY;

  ENTITY Functional_unit_network_definition
    SUBTYPE OF (Functional_unit_definition);
      usage_view : Functional_unit_usage_view;
  END_ENTITY;

  ENTITY Functional_unit_network_node_definition
    SUBTYPE OF (Product_view_definition);
      associated_functional_unit_definition                                                              : Functional_unit_network_definition;
      SELF\Product_view_definition.additional_characterization RENAMED functional_unit_network_node_name : STRING; 
    DERIVE
      SELF\Product_view_definition.defined_version : Functional_version := associated_functional_unit_definition.defined_version;
      valid_conservative_node : BOOLEAN := ( ( SIZEOF (USEDIN ( SELF ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.PRECEDENT_ELEMENT' ) )
        + SIZEOF ( USEDIN ( SELF ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT' )
        ) + SIZEOF (USEDIN ( SELF ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE'
        )) + SIZEOF ( external_node_access ) ) > 1 );
    INVERSE
      external_node_access : SET[0:1] OF functional_unit_network_terminal_definition_node_assignment FOR composed_node;
    UNIQUE
      UR1 : functional_unit_network_node_name,
 associated_functional_unit_definition;
    WHERE
      WR1 : EXISTS(valid_conservative_node);
  END_ENTITY;

  ENTITY Functional_unit_network_terminal_definition_bus_assignment;
      connected_bus      : Bus_structural_definition;
      connected_terminal : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : connected_bus, connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_network_terminal_definition_node_assignment;
      composed_node      : Functional_unit_network_node_definition;
      connected_terminal : Functional_unit_usage_view_terminal_definition;
    UNIQUE
      UR1 : composed_node, connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal;
      accessed_functional_unit : Functional_unit;
      definition               : Functional_unit_usage_view_terminal_definition;
    INVERSE
      bus_assignment  : SET[0:1] OF functional_unit_terminal_bus_assignment FOR connected_terminal;
      node_assignment : SET[0:1] OF functional_unit_terminal_node_assignment FOR connected_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal_bus_assignment;
      connected_bus      : Bus_structural_definition;
      connected_terminal : Functional_unit_terminal;
  END_ENTITY;

  ENTITY Functional_unit_terminal_node_assignment;
      composed_node      : Functional_unit_network_node_definition;
      connected_terminal : Functional_unit_terminal;
  END_ENTITY;

  FUNCTION consistent_bus_structural_definition(
    input : SET OF Bus_element_link
  ) : BOOLEAN;

    LOCAL
      vertex        : SET OF bus_structural_definition_or_node := [];
      edge          : INTEGER := SIZEOF(input);
      vc            : INTEGER := 0;
      vertex_degree : INTEGER := 0;
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input) BY 1;
      vertex := vertex + input[i].precedent_element;
      vertex := vertex + input[i].subsequent_element;
    END_REPEAT;
    vc := SIZEOF(vertex);
    IF (vc <> (edge + 1)) THEN
      RETURN(FALSE);
    END_IF;
    REPEAT i := 1 TO vc BY 1;
      vertex_degree := 0;
      REPEAT j := 1 TO SIZEOF(input) BY 1;
        IF input[j].precedent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
        IF input[j].subsequent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
      END_REPEAT;
      IF (vertex_degree > 2) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);
  END_FUNCTION;


END_SCHEMA;
(*
   $Id: arm.exp,v 1.58 2006/07/03 04:47:26 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4065 - ISO/TS 10303-1706 Non feature shape element - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3495
*)

SCHEMA Non_feature_shape_element_arm; 

	USE FROM Physical_unit_shape_with_parameters_arm;	-- ISO/TS 10303-1730
  
  TYPE ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

	TYPE nfse_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Non_feature_shape_element);
	END_TYPE;

    TYPE nfse_feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON feature_or_non_feature_usage WITH 
		(Usage_view_level_non_feature_shape_model);
	END_TYPE;
	
  TYPE view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT
        (Physical_unit_shape_model);
  END_TYPE;
  
  ENTITY Design_view_level_non_feature_shape_model
    SUBTYPE OF (Non_feature_shape_model);
      SELF\Non_feature_shape_model.associated_element : View_level_non_feature_shape_element;
      SELF\Non_feature_shape_model.model_shape        : Physical_unit_shape_model;
    WHERE
      WR1 : SELF\Geometric_model.context_of_items :=: SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items;
      WR2: SIZEOF(USEDIN(SELF, 'EXTENDED_BASIC_GEOMETRY_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_1')) = 0;
      WR3: SIZEOF(USEDIN(SELF, 'CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_OPERATION.TEMPLATE_DEFINITION')) = 0;
      WR4: SELF\Non_feature_shape_model.associated_element.scope :=:
           SELF\Non_feature_shape_model.model_shape\Physical_unit_shape_model.shape_characterized_definition;
  END_ENTITY;
  
  ENTITY Interface_plane
    SUBTYPE OF (Non_feature_shape_element);
   WHERE
    WR1 : (SELF\Shape_element.element_name = 'interface plane');
  END_ENTITY;

  ENTITY Non_feature_shape_model
  SUPERTYPE OF (ONEOF (Design_view_level_non_feature_shape_model,
	    Usage_view_level_non_feature_shape_model))   
    SUBTYPE OF (Geometric_model);
      associated_element : Non_feature_shape_element;
      model_shape        : OPTIONAL Geometric_model;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(model_shape);
      WR2 : NOT EXISTS(SELF\Representation.id);
      WR3 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;            
  END_ENTITY;

  ENTITY Non_feature_shape_element
    SUBTYPE OF (Shape_element);
      SELF\Shape_element.element_name : STRING;
      SELF\Shape_element.containing_shape RENAMED scope : ee_product_definition_with_annotation_elements;
    INVERSE
      element_shape            : SET[0:?] OF non_feature_shape_model FOR associated_element;
      associated_usage_concept : SET[0:?] OF usage_concept_usage_relationship FOR associated_usage;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, scope;
    WHERE
      WR1 : NOT ((SIZEOF(associated_usage_concept) > 0) OR (SIZEOF(element_shape) > 0));
      WR2 : 'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE' IN TYPEOF(scope);
  END_ENTITY;

  ENTITY Non_feature_shape_element_relationship
    SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Non_feature_shape_element;    
      SELF\Shape_element_relationship.related : Non_feature_shape_element;
    UNIQUE
      UR1 : SELF\Shape_element_relationship.related,
 SELF\Shape_element_relationship.relating;
    WHERE
      WR1 : NOT EXISTS (SELF\Shape_element_relationship.relation_type);
  END_ENTITY;

   ENTITY Reference_graphic_registration_mark
    SUBTYPE OF (Non_feature_shape_element);
  END_ENTITY;

  ENTITY Seating_plane
    SUBTYPE OF (Non_feature_shape_element);
   WHERE
    WR1 : (SELF\Shape_element.element_name = 'seating plane');
  END_ENTITY;

  ENTITY Usage_view_level_non_feature_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Non_feature_shape_model);
      SELF\Non_feature_shape_model.associated_element : View_level_non_feature_shape_element;    
      SELF\Non_feature_shape_model.model_shape        : view_shape_select;
    WHERE
      WR1 : SELF\Geometric_model.context_of_items = SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items;
  END_ENTITY;

  ENTITY View_level_non_feature_shape_element
    SUBTYPE OF (Non_feature_shape_element);
     WHERE
      WR1: NOT(SIZEOF(SELF\Non_feature_shape_element.element_shape) > 0) OR
      valid_es('NON_FEATURE_SHAPE_ELEMENT_ARM.USAGE_VIEW_LEVEL_NON_FEATURE_SHAPE_MODEL',
      (SELF\Non_feature_shape_element.element_shape));
      WR2 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;
  
  FUNCTION valid_es(input1 : STRING;
                  input2 : SET OF NON_FEATURE_SHAPE_MODEL) : BOOLEAN;
   REPEAT i := 1 to HIINDEX(input2);
    IF NOT (input1 IN TYPEOF(input2)) THEN RETURN(FALSE);
    END_IF;
   END_REPEAT;
    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.66 2006/11/03 17:28:17 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4068 - ISO/TS 10303-1707 Package - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3498
*)

SCHEMA Package_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Part_feature_function_arm;	-- ISO/TS 10303-1712
	
	REFERENCE FROM Product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  	TYPE mounting_technology_type = ENUMERATION OF
    	(surface_mount,
     	through_hole);
  	END_TYPE;

	TYPE pa_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   		(Package);
	END_TYPE; 

 	TYPE pa_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Package_terminal_template_definition,
		 Package);
	END_TYPE;
 
 	TYPE pa_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select  WITH
   		(Package_body,
    	Package_terminal_template_definition);
	END_TYPE; 

	SUBTYPE_CONSTRAINT part_feature_subtypes FOR Part_feature; 
		(ONEOF (Package_orientation_feature,
		Package_body));
	END_SUBTYPE_CONSTRAINT;

  TYPE predefined_lead_form = ENUMERATION OF
    (gull_wing,
     j_lead,
     reversed_j_lead,
     integral_terminal,
     undefined,
     ball,
     straight);
  END_TYPE;

  TYPE seating_plane_intersection_type = ENUMERATION OF
    (surface_intersection,
     through_intersection,
     does_not_intersect);
  END_TYPE;

 	TYPE interface_plane_or_seating_plane =  SELECT
		(Seating_plane,
		 Interface_plane);
	END_TYPE;
 
  ENTITY Connection_zone_in_part_feature_template_definition
  	SUBTYPE OF (Connection_zone);
  	DERIVE
  		associated_definition : Part_feature_template_definition := containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY; 

  ENTITY Connection_zone_package_interface_plane_relationship;
      interface_plane          : interface_plane_or_seating_plane;
      mating_zone              : Connection_zone_in_part_feature_template_definition;
      derived_zone             : Connection_zone_in_part_feature_template_definition;
      derived_zone_shape_class : STRING;
    INVERSE
      associated_package_terminal  : SET[0:1] OF package_terminal_template_definition FOR seating_plane_zone;
    UNIQUE
      UR1 : interface_plane, mating_zone;
    WHERE
      WR1 : derived_zone_shape_class IN ['area','edge'];
  END_ENTITY;

  ENTITY Visual_orientation_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Package_terminal;
  END_ENTITY;

  ENTITY Guided_wave_terminal
    SUBTYPE OF (Package_terminal);
  END_ENTITY;

  ENTITY Package
    SUBTYPE OF (Part_usage_view);
      mounting_technology                        : mounting_technology_type;
      maximum_seating_plane_installation_offset  : OPTIONAL Length_data_element;
      nominal_mounting_lead_pitch                : OPTIONAL Length_data_element;
      nominal_mounting_lead_span                 : OPTIONAL Length_data_element;
      maximum_body_height_above_seating_plane    : Length_data_element;
      maximum_body_height_below_seating_plane    : OPTIONAL Length_data_element;
      body_clearance_above_seating_plane         : OPTIONAL Length_tolerance_characteristic;
      body_clearance_below_seating_plane         : OPTIONAL Length_tolerance_characteristic;
      maximum_lead_length_below_seating_plane    : OPTIONAL Length_data_element;
      least_lead_length_below_seating_plane      : OPTIONAL Length_data_element;
    DERIVE
      maximum_package_total_vertical_extent : length_data_element := max_data_element(add_data_element(maximum_body_height_above_seating_plane,
 maximum_body_height_below_seating_plane),
 add_data_element(maximum_body_height_above_seating_plane,
 maximum_lead_length_below_seating_plane));
      cutout_required                       : BOOLEAN := (maximum_body_height_below_seating_plane\Value_with_unit.value_component > 0.0);
      maximum_installed_height              : length_data_element := add_data_element(maximum_body_height_above_seating_plane,
 maximum_seating_plane_installation_offset);
      one_orientation_feature               : BOOLEAN := (SIZEOF(orientation_feature) = 1);
      two_orientation_features              : BOOLEAN := (SIZEOF(orientation_feature) = 2);
      three_orientation_features            : BOOLEAN := (SIZEOF(orientation_feature) = 3);
      package_seating_plane                 : SET OF Seating_plane := bag_to_set(QUERY(nfse <* USEDIN(SELF, 'NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_ELEMENT.SCOPE')|
                                                'NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN TYPEOF(nfse)));
      interface_plane                       : SET OF Interface_plane := bag_to_set(QUERY(nfse <* USEDIN(SELF, 'NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_ELEMENT.SCOPE')|
                                                'NON_FEATURE_SHAPE_ELEMENT_ARM.INTERFACE_PLANE' IN TYPEOF(nfse)));
    INVERSE
      body                                  : SET[0:1] OF Package_body FOR associated_definition;
      package_accesses                      : SET[0:?] OF Package_terminal FOR associated_definition;
      package_polarity_indication           : SET[0:1] OF Polarity_indication_feature FOR associated_definition;
      orientation_feature                   : SET[0:3] OF Package_orientation_feature FOR associated_definition;
    WHERE
      WR1  : NOT (mounting_technology = surface_mount) OR (NOT (EXISTS(maximum_lead_length_below_seating_plane) OR EXISTS(least_lead_length_below_seating_plane)));
      WR2  : NOT (EXISTS(maximum_lead_length_below_seating_plane)) OR (maximum_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
      WR3  : NOT (EXISTS(least_lead_length_below_seating_plane)) OR (least_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
      WR4  : SIZEOF(package_seating_plane) = 1;
      WR5  : 'package' IN types_of_product(SELF\Product_view_definition.defined_version.of_product);
      WR6  : SIZEOF(QUERY(pa <* package_accesses | 'PACKAGE_ARM.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(pa))) = 1;
	  WR7  : SIZEOF(QUERY(nt <* package_accesses |
	                      EXISTS(nt\Part_feature.precedent_feature)
	               )) = (SIZEOF(package_accesses) - 1);
	  WR8  : SIZEOF(QUERY(nt <* package_accesses |
	                     (SIZEOF(nt\Part_feature.subsequent_feature) = 1)
	               )) = (SIZEOF(package_accesses) - 1);
      WR9  : NOT one_orientation_feature    OR ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orientation_feature[1]));
      WR10 : NOT two_orientation_features   OR ((SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1));
      WR11 : NOT three_orientation_features OR ((SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.PRIMARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.SECONDARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1) AND
                                                (SIZEOF(QUERY(orf <* orientation_feature |
                                                  ('PACKAGE_ARM.TERTIARY_ORIENTATION_FEATURE' IN TYPEOF(orf)))) = 1));
  END_ENTITY;

  ENTITY Package_body
    SUBTYPE OF (Part_feature);
      SELF\Part_feature.associated_definition : Package;
INVERSE
   body_material : Material_identification FOR items;
    WHERE
      WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_TOP_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_BOTTOM_SURFACE' IN TYPEOF(pf)))) <= 1;
      WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'PACKAGE_ARM.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY') | ('PACKAGE_ARM.' + 'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF(pf)))) <= 1;
     WR4: 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (body_material);
  END_ENTITY;

  ENTITY Package_body_bottom_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_edge_segment_surface
    SUBTYPE OF (Package_body_surface);
      composed_surface : Package_body_edge_surface;
      start_vertex     : Edge_segment_vertex;
      end_vertex       : Edge_segment_vertex;
    WHERE
      WR1 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Package_body_edge_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_body_surface
    ABSTRACT SUPERTYPE OF (ONEOF (Package_body_bottom_surface,
 Package_body_top_surface,
 Package_body_edge_segment_surface,
 Package_body_edge_surface))
    SUBTYPE OF (Part_feature);
      associated_package_body : Package_body;
  END_ENTITY;

  ENTITY Package_body_top_surface
    SUBTYPE OF (Package_body_surface);
  END_ENTITY;

  ENTITY Package_orientation_feature
    ABSTRACT SUPERTYPE OF (ONEOF(Primary_orientation_feature, Secondary_orientation_feature, Tertiary_orientation_feature))
    SUBTYPE OF (Part_feature, Datum_feature);    
           associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
      SELF\Part_feature.associated_definition : Package;
  END_ENTITY;

  ENTITY Package_terminal
    SUBTYPE OF (Part_feature, Placed_feature);
      SELF\Placed_feature.definition 		  : Package_terminal_template_definition;
      SELF\Part_feature.associated_definition : Package;
   INVERSE
      feature_shape : SET[1:?] OF usage_concept_usage_relationship FOR associated_usage;
  END_ENTITY;

  ENTITY Package_terminal_template_definition
    SUBTYPE OF (Part_feature_template_definition);
      external_connection_zone                : OPTIONAL SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      internal_connection_zone                : OPTIONAL SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      lead_form                               : OPTIONAL predefined_lead_form;
      seating_plane_intersection              : seating_plane_intersection_type;
      terminal_characteristic                 : OPTIONAL SET[1:?] OF characteristic;
      terminal_diametrical_extent             : Length_tolerance_characteristic;
      seating_plane_zone                      : OPTIONAL Connection_zone_package_interface_plane_relationship;
    DERIVE
      mates_with_substrate : BOOLEAN := (EXISTS(seating_plane_zone));
      terminal_core_material : SET [0:1] OF Material_identification := bag_to_set(QUERY( temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') | 
     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'terminal core material')) = 1)));
      terminal_surface_material : SET [0:1] OF Material_identification := bag_to_set(QUERY( temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') | 
     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'terminal surface material')) = 1)));
 	INVERSE
	  external_lead_form                      : SET[0:1] OF External_source_identification FOR item;            
    WHERE
      WR1 : NOT EXISTS(seating_plane_zone) OR (SIZEOF(QUERY(cz <* external_connection_zone | (seating_plane_zone.derived_zone = cz))) = 1);
      WR2 : NOT EXISTS(seating_plane_zone) OR (SIZEOF(QUERY(cz <* external_connection_zone | (seating_plane_zone.mating_zone = cz))) = 1);
      WR3 : NOT EXISTS(seating_plane_zone) OR ((seating_plane_intersection = surface_intersection) OR (seating_plane_intersection = through_intersection));
      WR4 : NOT ((seating_plane_intersection = does_not_intersect) AND (EXISTS(seating_plane_zone)));
      WR5 : NOT (SIZEOF(terminal_core_material) = 1) OR
                ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (terminal_core_material[1]));
      WR6: (SIZEOF(terminal_surface_material) = 1) AND
                ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (terminal_surface_material[1]));
	  WR7: (EXISTS (lead_form)) XOR ((SIZEOF(external_lead_form)) = 1);
  END_ENTITY;

  ENTITY Package_terminal_surface_constituent_relationship
    SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\Shape_element_relationship.relating : Package_body_surface;
      SELF\Shape_element_relationship.related  : Package_terminal;
  END_ENTITY;

  ENTITY Polarity_indication_feature
    SUBTYPE OF (Part_feature);
      associated_body_vertical_extent : OPTIONAL SET[1:2] OF Package_body_surface;
      associated_terminal             : Package_terminal;
      SELF\Part_feature.associated_definition : Package;
  END_ENTITY;

  ENTITY Primary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Primary_reference_terminal
    SUBTYPE OF (Package_terminal);
    WHERE
      WR1 : NOT (EXISTS(SELF\Part_feature.precedent_feature));
  END_ENTITY;

  ENTITY Secondary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Tertiary_orientation_feature
    SUBTYPE OF (Package_orientation_feature);
  END_ENTITY;

  ENTITY Wire_terminal
    SUBTYPE OF (Package_terminal);
   WHERE
    WR1 : SIZEOF(SELF\Package_terminal.feature_shape) = 0;
  END_ENTITY;

  ENTITY Wire_terminal_template_definition
    SUBTYPE OF (Package_terminal_template_definition);
      SELF\Package_terminal_template_definition.internal_connection_zone : SET[1:?] OF Connection_zone_in_part_feature_template_definition;
      wire_terminal_length                                               : Length_tolerance_characteristic;
  END_ENTITY;

  FUNCTION add_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

  FUNCTION max_data_element(
    input1 : Length_data_element ;
    input2 : Length_data_element
  ) : Length_data_element;

    RETURN(input1);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.16 2006/01/20 08:43:38 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4071 - ISO/TS 10303-1708 Packaged connector model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3501
*)

SCHEMA Packaged_connector_model_arm; 

	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710

	SUBTYPE_CONSTRAINT packaged_part_terminal_subtypes FOR Packaged_part_terminal; 
		(ONEOF (Packaged_part_interface_terminal,
	 	Packaged_part_join_terminal));
	END_SUBTYPE_CONSTRAINT;

  ENTITY Mating_connector_relationship
    SUBTYPE OF (Part_definition_relationship);
      SELF\View_definition_relationship.relating_view : Packaged_connector;
      SELF\View_definition_relationship.related_view : Packaged_connector;
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Packaged_connector
    SUBTYPE OF (Packaged_part);
    INVERSE
      characterized_connector_terminal_relationship : SET[1:?] OF packaged_connector_terminal_relationship FOR connector;
  END_ENTITY;
	
  ENTITY Packaged_connector_terminal_relationship;
      connector          : Packaged_connector;
      join_terminal      : Packaged_part_join_terminal;
      interface_terminal : Packaged_part_interface_terminal;
    UNIQUE
      UR1 : join_terminal;
      UR2 : interface_terminal,
 connector;
  END_ENTITY;

  ENTITY Packaged_part_interface_terminal
    SUBTYPE OF (Packaged_part_terminal);
    INVERSE
      external_connector_function : SET[0:?] OF packaged_connector_terminal_relationship FOR interface_terminal;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.28 2006/02/05 19:53:41 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4077 - ISO/TS 10303-1710 Packaged part black box model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3345
*)

SCHEMA Packaged_part_black_box_model_arm;

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Package_arm;	-- ISO/TS 10303-1707
	USE FROM Part_external_reference_arm;	-- ISO/TS 10303-1711

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE package_or_package_external_reference = SELECT
  		(Package,
   		package_external_reference);
	END_TYPE;

	TYPE ppbbm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Packaged_part);
	END_TYPE;

  ENTITY Packaged_part
    SUBTYPE OF (Part_usage_view);
      used_package         : SET[1:?] OF package_or_package_external_reference;
      implemented_function : OPTIONAL Functional_unit_usage_view;
    DERIVE
		potting_compound : SET [0:1] OF Material_identification := 
		bag_to_set(QUERY( temp <* USEDIN(SELF,
		     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS') | 
		     (SIZEOF( QUERY( cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
		 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS') | cla.role = 'potting compound')) = 1)));
    INVERSE
      access_mechanisms : SET[0:?] OF packaged_part_terminal FOR associated_definition;
    WHERE
      WR1 : NOT (EXISTS(implemented_function) XOR (SIZEOF(access_mechanisms) > 0));
      WR2 : single_package_version(SELF);
  END_ENTITY;

  ENTITY Packaged_part_join_terminal
    SUBTYPE OF (Packaged_part_terminal);
  END_ENTITY;

  ENTITY Packaged_part_terminal
  	ABSTRACT SUPERTYPE
    SUBTYPE OF (Part_terminal);
      terminal_of_package                     : SET[1:?] OF Package_terminal;
      SELF\Part_feature.associated_definition : Packaged_part;
    WHERE
      WR1 : disjoint_package_terminals(SELF);
      WR2 : NOT EXISTS(SELF\Part_feature.precedent_feature);
  END_ENTITY;

  FUNCTION disjoint_package_terminals(
    input : Packaged_part_terminal
  ) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION;

  FUNCTION single_package_version(
    input : Packaged_part
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4074 - ISO/TS 10303-1709 Packaged part white box model - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3504
*)

SCHEMA Packaged_part_white_box_model_arm;

	USE FROM Bare_die_arm;	-- ISO/TS 10303-1650
	USE FROM Packaged_part_black_box_model_arm;	-- ISO/TS 10303-1710
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726
	USE FROM Physical_unit_3d_shape_arm;	-- ISO/TS 10303-1727

  	TYPE ppwbm_analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH  
 		(Functional_unit_usage_view_terminal_definition,
 		Connection_zone,
 		Datum_difference,
  	Part_device_terminal,
    Part_feature);
	END_TYPE;

	SUBTYPE_CONSTRAINT physical_unit_keepout_shape_model_subtypes FOR Physical_unit_keepout_shape_model;  
	    (ONEOF (Physical_unit_3d_keepout_shape_model,
	 	Physical_unit_planar_keepout_shape_model));
	END_SUBTYPE_CONSTRAINT; 

	SUBTYPE_CONSTRAINT physical_unit_shape_model_subtypes FOR Physical_unit_shape_model;  
	    (ONEOF (Physical_unit_3d_shape_model,
	 	Physical_unit_planar_shape_model));
	END_SUBTYPE_CONSTRAINT; 

  ENTITY Device_2d_position;
      placed_device  : Part_device;
      transformation : Axis_placement_2d;
      part_shape     : Physical_unit_planar_shape_model;
      device_shape   : Physical_unit_planar_shape_model;
  END_ENTITY;

  ENTITY Device_3d_position;
      placed_device  : Part_device;
      transformation : Axis_placement_3d;
      part_shape     : Physical_unit_3d_shape_model;
      device_shape   : Physical_unit_3d_shape_model;
  END_ENTITY;

  ENTITY Device_terminal_map;
      target_terminal        : Packaged_part_terminal;
      mapped_device_terminal : Part_device_terminal;
    UNIQUE
      UR1 : mapped_device_terminal,
 target_terminal;
  END_ENTITY;

  ENTITY Device_terminal_map_relationship;
      relating_device_terminal_map : Device_terminal_map;  
      related_device_terminal_map  : Device_terminal_map;
  END_ENTITY;

  ENTITY Part_device;
      defined_packaged_part : Packaged_part;
      included_device       : Bare_die;
      item_identification   : STRING; 
     INVERSE
      device_3d_position : SET[0:1] OF device_3d_position FOR placed_device;
      device_2d_position : SET[0:1] OF device_2d_position FOR placed_device;
    UNIQUE
      UR1 : defined_packaged_part,
 item_identification;
   END_ENTITY;

  ENTITY Part_device_terminal;
      used_bare_die_terminal : Minimally_defined_bare_die_terminal;
      terminated_device      : Part_device;
    UNIQUE
      UR1 : used_bare_die_terminal,
 terminated_device;
  END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.16 2004/11/03 22:07:56 abf Exp $
ISO TC184/SC4/WG12 N2917 - ISO/TS 10303-1022 Part and version identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1114
*) 


SCHEMA Part_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

REFERENCE FROM Product_identification_arm   -- ISO/TS 10303-1017
  (types_of_product); 


ENTITY Part
  SUBTYPE OF (Product);
WHERE
  WR1: SIZEOF(['part', 'raw material', 'tool']*types_of_product(SELF))=1;
END_ENTITY;

ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;

RULE part_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'PART_AND_VERSION_IDENTIFICATION_ARM.' + 'PART_VERSION' IN TYPEOF ( pv) ) ) AND ( 'PART_AND_VERSION_IDENTIFICATION_ARM.' + 'PART' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;  -- Part_and_version_identification_arm



(*
 $Id: arm.exp,v 1.7 2004/10/22 14:34:57 darla Exp $
 ISO TC184/SC4/WG12 N1326 - ISO/TS 10303-1055 Part definition relationship - EXPRESS ARM
*)
  
SCHEMA Part_definition_relationship_arm;
 
USE FROM Product_view_definition_relationship_arm;
USE FROM Part_view_definition_arm;
USE FROM Value_with_unit_arm;
      
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.12 2006/01/30 15:12:16 liutkus Exp $
   ISO TC184/SC4/WG12 N4080 - ISO/TS 10303-1711 Part external reference - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3507
*)

SCHEMA Part_external_reference_arm;

	USE FROM Physical_layout_template_arm;	-- ISO/TS 10303-1722

  ENTITY Package_external_reference;
      design_owner          : STRING;
      part_number           : STRING;
      revision_code         : STRING;
      product_definition_id : STRING;
  END_ENTITY;
  
  ENTITY Package_terminal_external_reference;
      name                  : STRING;  
      associated_definition : Package_external_reference;
    UNIQUE
      UR1 : associated_definition,
 name;
  END_ENTITY;

  ENTITY Part_terminal_external_reference;
      associated_definition : physical_unit_or_part_template;
      feature_name          : STRING; 
      feature_type          : STRING; 
    UNIQUE
      UR1 : associated_definition,
 feature_name,
 feature_type;
  END_ENTITY;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.18 2006/06/14 02:41:38 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4083 - ISO/TS 10303-1712 Part feature function - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3510
*)

SCHEMA Part_feature_function_arm;

	USE FROM Geometric_tolerance_arm;	-- ISO/TS 10303-1051
	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732

  ENTITY Fiducial_part_feature
    SUBTYPE OF (Part_tooling_feature);
  END_ENTITY;

  ENTITY Part_interface_access_feature
    SUBTYPE OF (Part_feature);
      accessed_interface                 : Part_feature;
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;                  
    WHERE
      WR1 : SELF\Part_feature.material_state_change = material_removal;
      WR2 : SELF <> accessed_interface;
      WR3 : NOT ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF));
      WR4 : NOT ('PACKAGE_ARM.PACKAGE_BODY' IN TYPEOF(SELF));
      WR5 : NOT ('PART_FEATURE_FUNCTION_ARM.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR6 : NOT ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR7 : NOT ('PACKAGE_ARM.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR8 : NOT ('PACKAGE_ARM.PACKAGE_BODY_SURFACE' IN TYPEOF(SELF));
      WR9 : NOT ('PACKAGE_ARM.POLARITY_INDICATION_FEATURE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Part_mating_feature
    SUBTYPE OF (Part_feature);
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;                  
    WHERE
      WR1 : NOT ('PART_FEATURE_FUNCTION_ARM.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
      WR2 : NOT ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
      WR3 : NOT ('PACKAGE_ARM.PACKAGE_TERMINAL' IN TYPEOF(SELF));
      WR4 : NOT ('FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Part_mounting_feature
    SUBTYPE OF (Part_feature);
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_usage_view;            
  END_ENTITY;

  ENTITY Part_tooling_feature
    SUPERTYPE OF (ONEOF (Fiducial_part_feature,
 Tool_registration_mark) ANDOR
 Test_point_part_feature)
    SUBTYPE OF (Part_feature);
  END_ENTITY;

  ENTITY Test_point_part_feature
    SUBTYPE OF (Part_tooling_feature);
  WHERE
   WR1: 'FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF);
  END_ENTITY;

  ENTITY Thermal_feature
    SUBTYPE OF (Part_feature);
  END_ENTITY;

  ENTITY Tool_registration_mark
    SUBTYPE OF (Part_tooling_feature);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4086 - ISO/TS 10303-1713 Part feature grouping - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3513
*)

 SCHEMA Part_feature_grouping_arm;
 
	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732

  ENTITY Part_array_feature
    ABSTRACT SUPERTYPE OF (ONEOF (Part_linear_array_feature,
 Part_rectangular_array_feature))
    SUBTYPE OF (Part_group_feature);
  END_ENTITY;

  ENTITY Part_feature_placement_link;
      precedent_element  : Part_feature;
      subsequent_element : Part_feature;
    INVERSE
      referenced_by : part_linear_array_feature FOR element;
  END_ENTITY;
   
  ENTITY Part_group_feature
    SUPERTYPE OF (Part_array_feature)
    SUBTYPE OF (Part_feature,
 Composite_shape_element);
  END_ENTITY;

  ENTITY Part_linear_array_feature
    SUBTYPE OF (Part_array_feature);
      element                               : SET[1:?] OF Part_feature_placement_link;
      initial_node_positive_x_displacement  : Length_data_element;
      terminus_node_positive_x_displacement : Length_data_element;
      location_uncertainty                  : Length_data_element;
  END_ENTITY;

  ENTITY Part_linear_array_feature_link;
      precedent_element  : Part_linear_array_feature;
      subsequent_element : Part_linear_array_feature;
    INVERSE
      referenced_by : part_rectangular_array_feature FOR element;
  END_ENTITY;

  ENTITY Part_rectangular_array_feature
    SUBTYPE OF (Part_array_feature);
      element                              : SET[1:?] OF Part_linear_array_feature_link;
      initial_row_positive_y_displacement  : Length_data_element;
      terminus_row_positive_y_displacement : Length_data_element;
      location_uncertainty                 : Length_data_element;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.30 2006/06/27 12:59:40 liutkus Exp $
   ISO TC184/SC4/WG12 N4089 - ISO/TS 10303-1714 Part feature location - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3516
*)

SCHEMA Part_feature_location_arm;

	USE FROM Shape_feature_arm;	-- ISO/TS 10303-xxxx
	
	TYPE feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

	TYPE usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

  ENTITY Usage_concept_usage_relationship
     SUBTYPE OF (Geometric_placement_operation);
       SELF\Geometric_placement_operation.template_definition RENAMED associated_shape_definition : Geometric_model;
       associated_usage                                                                           : usage_concept;
       associating_usage_shape                                                                    : feature_or_non_feature_usage;
     INVERSE
       composed_model : SET[1:1] OF Geometric_model FOR items;
     WHERE
       WR1 : (  ('NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_MODEL' IN TYPEOF(associated_shape_definition)) AND 
                ('NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_MODEL' IN TYPEOF(associating_usage_shape))) OR 
             (('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(associated_shape_definition)) AND 
              ('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(associating_usage_shape)));
       WR2 : NOT ( ('PART_FEATURE_LOCATION_ARM.GEOMETRIC_OPERATOR_TRANSFORMATION' IN
               TYPEOF(SELF)) AND ('PART_FEATURE_LOCATION_ARM.CARTESIAN_TRANSFORMATION_2D' IN 
               TYPEOF(SELF\Geometric_operator_transformation.target))) OR 
             ('NON_FEATURE_SHAPE_ELEMENT_ARM.NON_FEATURE_SHAPE_MODEL' IN TYPEOF(associating_usage_shape));  
       WR3 : associating_usage_shape = composed_model[1]; 
       WR4 : NOT EXISTS(SELF\Representation_item.name);
       WR5 : ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT' IN TYPEOF(SELF)) OR
             ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_OPERATOR_TRANSFORMATION' IN TYPEOF(SELF));
       WR6 : NOT('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_MODEL' IN TYPEOF(composed_model[1]));
  END_ENTITY;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.26 2006/01/20 08:43:37 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4092 - ISO/TS 10303-1715 Part occurrence - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3648
*)

SCHEMA Part_occurrence_arm;

	USE FROM Generic_product_occurrence_arm;	-- ISO/TS 10303-xxxx
	USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023
	USE FROM Assembly_structure_arm;	-- ISO/TS 10303-1026		

ENTITY Definition_based_part_occurrence
  SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence);
  SELF\Definition_based_product_occurrence.derived_from : Part_view_definition;
END_ENTITY;

ENTITY Part_occurrence
  ABSTRACT SUPERTYPE
  SUBTYPE OF (Product_occurrence);
  SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY;

ENTITY Part_occurrence_definition_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Part_view_definition;
  SELF\View_definition_relationship.related_view : Part_occurrence;
DERIVE
  SELF\View_definition_relationship.id : STRING :=
SELF\View_definition_relationship.related_view\Product_view_definition.id;
WHERE
  WR1: NOT (('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN
TYPEOF(SELF))AND (EXISTS(SELF\Assembly_component_relationship.quantity)));
END_ENTITY;

ENTITY Specification_based_part_occurrence
  SUBTYPE OF (Specification_based_product_occurrence, Part_occurrence);
END_ENTITY;

END_SCHEMA; 
(*
   $Id: arm.exp,v 1.133 2006/10/12 09:55:23 liutkus Exp $
   ISO TC184/SC4/WG12 N4095 - ISO/TS 10303-1716 Part template 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3519
*)

SCHEMA Part_template_2d_shape_arm;

	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718
	USE FROM Physical_unit_2d_shape_arm; -- ISO/TS 10303-1726

	REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740
	REFERENCE FROM Fabrication_technology_arm(get_stack);	-- ISO/TS 10303-1670
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE pt2ds_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH 
   	(Structured_template);
	END_TYPE; 

   TYPE pt2ds_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
      (Structured_template,
      Template_location_in_structured_template);
   END_TYPE; 

  	TYPE pt2ds_part_template_or_physical_unit_2d_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_2d_shape_select WITH 
    	(Part_template_planar_shape_model);
  	END_TYPE;

	TYPE pt2ds_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_shape_model_select WITH 
	    (Physical_unit_planar_shape_model);
  	END_TYPE;

	SUBTYPE_CONSTRAINT pt2ds_geometric_template_subtypes FOR Geometric_template; 
	    (ONEOF (Continuous_template,
		 Structured_template));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT pt2ds_stratum_stack_model_subtypes FOR Stratum_stack_model;
	    (ONEOF (Design_stack_model,
		 Library_stack_model));
	END_SUBTYPE_CONSTRAINT;

  TYPE template_arrangement = ENUMERATION OF
    (top,
     bottom,
     symmetrical,
     swappable);
  END_TYPE;

  TYPE location_stratum_technology_occurrence_or_stratum_technology = SELECT
    (stratum_technology_occurrence_or_stratum_technology,
    Template_location_in_structured_template);
  END_TYPE;
  
  TYPE stratum_technology_occurrence_or_stratum_technology = SELECT
   (Stratum_technology_occurrence,
    Stratum_technology);
  END_TYPE;

  ENTITY Complex_passage_padstack_definition
   SUBTYPE OF (Stratum_stack_dependent_template, Passage_padstack_definition);
  END_ENTITY;

  ENTITY Dependent_template_location_in_padstack_definition
    SUBTYPE OF (Stratum_specific_template_location);
    reference_location : location_stratum_technology_occurrence_or_stratum_technology;    
    SELF\Template_location_in_structured_template.assembly : Multi_stratum_structured_template;
    WHERE
      WR1: SELF\Stratum_specific_template_location.bound_stratum :<>: reference_location;     
      WR2: SELF <> reference_location;
      WR3: SELF\Template_location_in_structured_template.assembly :=: reference_location.assembly;
      WR4: NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(reference_location)) OR
           ((reference_location IN 
           SELF\Template_location_in_structured_template.assembly.composing_occurrence) AND
           ('FABRICATION_TECHNOLOGY_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF
          (SELF\Template_location_in_structured_template.assembly.composing_occurrence)));
      WR5 : NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(reference_location)) OR
           ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(bound_stratum));
      WR6 : NOT('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
           TYPEOF(reference_location)) OR (SIZEOF 
           (['FABRICATION_TECHNOLOGY_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE',
           'FABRICATION_TECHNOLOGY_ARM.PASSAGE_PADSTACK_DEFINITION'] * TYPEOF
           (SELF\Template_location_in_structured_template.assembly)) = 2);
  END_ENTITY;

  ENTITY Design_stack_model -- choose some of the Stratum_technology_occurrence
    SUBTYPE OF(Stratum_stack_model);
      reference_model : OPTIONAL Library_stack_model; 
    INVERSE
      passage: SET [1:?] OF Passage_technology_allocation_to_stack_model for associated_stackup;
    WHERE
      WR1: NOT EXISTS(reference_model) OR 
          ((SELF\Stratum_stack_model.composing_occurrence * reference_model\Stratum_stack_model.composing_occurrence) = 
           SELF\Stratum_stack_model.composing_occurrence);
  END_ENTITY;

  ENTITY Inter_stratum_feature_template_location
  	SUBTYPE OF (Template_location_in_structured_template);
      SELF\Template_location_in_structured_template.assembly : Multi_stratum_structured_template;
      SELF\Template_location_in_structured_template.template : Inter_stratum_feature_template;
    WHERE
      WR1: SIZEOF(['PART_TEMPLATE_EXTENSION_ARM.INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE',
                   'PART_TEMPLATE_EXTENSION_ARM.INTER_STRATUM_FEATURE_EDGE_TEMPLATE'] * TYPEOF(template)) = 0;
  END_ENTITY;

  ENTITY Library_stack_model 
    SUBTYPE OF (Stratum_stack_model);
  DERIVE
    padstacks : SET[0:?] OF Padstack_definition := bag_to_set(QUERY(p <* USEDIN(SELF,
      'PART_TEMPLATE_2D_SHAPE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE.STACK') | ('PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION' IN TYPEOF(p))));
  END_ENTITY;

  ENTITY Material_removal_structured_template
    SUBTYPE OF (Single_stratum_structured_template);
  WHERE
    WR1 : SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
         SIZEOF(['FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE',
           'PART_TEMPLATE_2D_SHAPE_ARM.MATERIAL_REMOVAL_STRUCTURED_TEMPLATE'] * TYPEOF(tlict.template)) = 0)) = 0;
  END_ENTITY;

  ENTITY Multi_stratum_special_symbol_template
    SUBTYPE OF (Multi_stratum_structured_template, Special_symbol_template);
  END_ENTITY;

  ENTITY Multi_stratum_structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Padstack_definition, Multi_stratum_special_symbol_template)
      ANDOR Stratum_stack_dependent_template)
    SUBTYPE OF (Structured_template);
      location : template_arrangement;
  END_ENTITY;

  ENTITY Padstack_definition
    SUPERTYPE OF (Passage_padstack_definition)
    SUBTYPE OF (Multi_stratum_structured_template);
    WHERE
      WR1 : SIZEOF(QUERY(prpc <* USEDIN(SELF\Product_view_definition.defined_version.of_product,
 'PRODUCT_IDENTIFICATION_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS') | (prpc.category\Product_category.name = 'template model'))) > 0;
      WR2: NOT('PART_TEMPLATE_2D_SHAPE_ARM.PASSAGE_PADSTACK_DEFINITION' IN TYPEOF(SELF)) XOR 
          (SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
         ('PART_TEMPLATE_2D_SHAPE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(tlict)))) > 0);
      WR3: SIZEOF(QUERY(tlict <* SELF\Structured_template.templates |
         (NOT ('PART_TEMPLATE_2D_SHAPE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(tlict))) AND
          (NOT ('PART_TEMPLATE_2D_SHAPE_ARM.STRATUM_SPECIFIC_TEMPLATE_LOCATION' IN TYPEOF(tlict))))) = 0;
  END_ENTITY;

  ENTITY Part_template_keepout_shape_allocation_to_stratum_stack;
      keepout_shape : Part_template_keepout_shape_model;
      kept_out_layers : SET [1:?] OF Stratum_technology_occurrence;
    DERIVE
      swappable : BOOLEAN :=
        (keepout_shape.shape_characterized_definition\Multi_stratum_structured_template.location
        = template_arrangement.swappable);
      stack_model : Library_stack_model :=
        keepout_shape.shape_characterized_definition\Stratum_stack_dependent_template.stack;
    UNIQUE
      UR1 : keepout_shape,stack_model;
    WHERE
      WR1 : keepout_shape.constrained_design_object_category
       IN [keepout_product_design_object_category.interconnect_module_via,
       keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
       keepout_product_design_object_category.interconnect_module_cutout,
       keepout_product_design_object_category.interconnect_module_fill_area,
       keepout_product_design_object_category.interconnect_module_stratum_feature];
     WR2 : 'PART_TEMPLATE_2D_SHAPE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF(keepout_shape.shape_characterized_definition);
     WR3 :  kept_out_layers = kept_out_layers * stack_model\Stratum_stack_model.composing_occurrence;
  END_ENTITY;  

  ENTITY Part_template_planar_keepout_shape_model
    SUBTYPE OF (Planar_shape_model,
 			Non_feature_shape_model,
 			Part_template_keepout_shape_model);
      SELF\Non_feature_shape_model.model_shape : Part_template_planar_shape_model; 			
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
	WHERE
   		WR1 : (SIZEOF(application_technology_constraint) <= 1);
   		WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Part_template_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model, Part_template_shape_model);
  WHERE
    WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Passage_padstack_definition
    SUBTYPE OF (Padstack_definition);
    INVERSE
      reference_isft : Inter_stratum_feature_template_location FOR assembly;    
    WHERE
      WR1: NOT(('PART_TEMPLATE_2D_SHAPE_ARM.STRUCTURED_INTER_STRATUM_FEATURE_TEMPLATE' IN TYPEOF(reference_isft.template)) XOR
               ('PART_TEMPLATE_2D_SHAPE_ARM.COMPLEX_PASSAGE_PADSTACK_DEFINITION' IN TYPEOF(SELF)));      
  END_ENTITY;

  ENTITY Passage_technology_allocation_to_stack_model;
      allocated_technology : Passage_technology;
      single_stratum_passage_location : OPTIONAL Stratum_technology_occurrence;
      stratum_technology_sequence : OPTIONAL SET [1:?] OF Stratum_technology_occurrence_link;
      associated_stackup : Design_stack_model;
   WHERE 
     WR1: (NOT EXISTS(single_stratum_passage_location) OR
               (single_stratum_passage_location IN associated_stackup.composing_occurrence));
     WR2: EXISTS(stratum_technology_sequence) XOR EXISTS(single_stratum_passage_location);
     WR3: SIZEOF(QUERY(sts <* stratum_technology_sequence | NOT(associated_stackup :=: sts.scope))
                 ) = 0;
     WR4: SIZEOF(get_stack(stratum_technology_sequence)) = (SIZEOF(stratum_technology_sequence) + 1); 
     WR5: sts_vertex_degree_less_than_three(stratum_technology_sequence);
  END_ENTITY;

  ENTITY Physical_unit_keepout_shape_allocation_to_stratum_stack;
      keepout_shape : Physical_unit_keepout_shape_model;
      stack_model : Library_stack_model;
      swappable : BOOLEAN; 
      kept_out_layers : SET [1:?] OF Stratum_technology_occurrence;
    UNIQUE
      UR1: keepout_shape, stack_model;
    WHERE
      WR1: keepout_shape\Physical_unit_keepout_shape_model.constrained_design_object_category
        IN [keepout_product_design_object_category.interconnect_module_via,
        keepout_product_design_object_category.interconnect_module_inter_stratum_feature,
        keepout_product_design_object_category.interconnect_module_cutout,
        keepout_product_design_object_category.interconnect_module_fill_area,
        keepout_product_design_object_category.interconnect_module_stratum_feature];
  END_ENTITY;
  
  ENTITY Single_stratum_special_symbol_template
    SUBTYPE OF (Single_stratum_structured_template, Special_symbol_template);
  END_ENTITY;

  ENTITY Single_stratum_structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Material_removal_structured_template, Single_stratum_special_symbol_template))
    SUBTYPE OF (Structured_template, Single_stratum_template);
  DERIVE
    SELF\Single_stratum_template.of_stratum_technology : SET [1:?] OF Stratum_technology := 
         SELF\Structured_template.templates[1]\Template_location_in_structured_template.template\Single_stratum_template.of_stratum_technology;
  WHERE
    WR1: SIZEOF (QUERY(tp <* SELF\Structured_template.templates |
               NOT ('FABRICATION_TECHNOLOGY_ARM.SINGLE_STRATUM_TEMPLATE' IN TYPEOF(tp.template))
              )) = 0;
   WR2: SIZEOF(QUERY(tp <* SELF\Structured_template.templates |
               NOT ((SIZEOF(of_stratum_technology * tp.template.of_stratum_technology) = SIZEOF(of_stratum_technology)) 
                 AND (SIZEOF(tp.template.of_stratum_technology) = SIZEOF(of_stratum_technology))
               )
              )) = 0;              
  END_ENTITY;

  ENTITY Special_symbol_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_special_symbol_template, Multi_stratum_special_symbol_template))
    SUBTYPE OF (Template_definition);
  END_ENTITY;

  ENTITY Stratum_specific_template_location
  	SUBTYPE OF (Template_location_in_structured_template);
      bound_stratum : stratum_technology_occurrence_or_stratum_technology;
      SELF\Template_location_in_structured_template.template : Single_stratum_template;
    WHERE
      WR1: (NOT (SIZEOF(['FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY'] * TYPEOF(bound_stratum)) = 1) OR
               (SIZEOF(QUERY(st <* template\Single_stratum_template.of_stratum_technology | st :=: bound_stratum)) = 1))
              AND
              (NOT (SIZEOF(['LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_TECHNOLOGY_OCCURRENCE'] * TYPEOF(bound_stratum)) = 1) OR
               (SIZEOF(QUERY(st <* template\Single_stratum_template.of_stratum_technology | st :=: bound_stratum\Stratum_technology_occurrence.definition)) = 1));
      WR2: NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(bound_stratum)) OR
           (NOT EXISTS(bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           (NOT (bound_stratum\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template))));
      WR3: 
          NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(bound_stratum)) AND
             ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF(bound_stratum\Stratum_technology_occurrence.definition))) OR
           (NOT EXISTS(bound_stratum\Stratum_technology_occurrence.definition\Documentation_layer_technology.pre_defined_documentation_layer_purpose) OR
           (NOT (bound_stratum\Stratum_technology_occurrence.definition\Documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask) OR
          ('FABRICATION_TECHNOLOGY_ARM.MATERIAL_REMOVAL_FEATURE_TEMPLATE' IN TYPEOF(template))));
      WR4 : NOT ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(bound_stratum)) OR
             ('PART_TEMPLATE_2D_SHAPE_ARM.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF(SELF\Template_location_in_structured_template.assembly));
  END_ENTITY;

  ENTITY Stratum_stack_dependent_template
    SUPERTYPE OF (ONEOF (Complex_passage_padstack_definition, Structured_inter_stratum_feature_template))
    SUBTYPE OF (Multi_stratum_structured_template);
      stack : library_stack_model;
  WHERE
    WR1 : SIZEOF(QUERY(temp <* SELF\Structured_template.templates | 
            ('PART_TEMPLATE_2D_SHAPE_ARM.STRATUM_SPECIFIC_TEMPLATE_LOCATION' IN TYPEOF(temp))
            AND (NOT ('FABRICATION_TECHNOLOGY_ARM.STRATUM_TECHNOLOGY_OCCURRENCE' IN TYPEOF(temp\Stratum_specific_template_location.bound_stratum))
                  OR
               NOT (temp\Stratum_specific_template_location.bound_stratum IN stack\Stratum_stack_model.composing_occurrence)
            )
          )) = 0;
    WR2 : SIZEOF(['PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION',
           'PART_TEMPLATE_2D_SHAPE_ARM.MULTI_STRATUM_SPECIAL_SYMBOL_TEMPLATE'] 
          * TYPEOF(SELF)) > 0;          
  END_ENTITY;

  ENTITY Structured_inter_stratum_feature_template
    SUBTYPE OF (Inter_stratum_feature_template, Stratum_stack_dependent_template);
  END_ENTITY;

  ENTITY Structured_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_structured_template, Multi_stratum_structured_template))
    SUBTYPE OF (Geometric_template);
  DERIVE
    empty : BOOLEAN := SIZEOF(templates) = 0;  
  INVERSE
    SELF\Geometric_template.shapes : SET [1:?] OF Structured_template_planar_shape_model FOR shape_characterized_definition;
    templates : SET [0:?] OF Template_location_in_structured_template FOR assembly;
  END_ENTITY;

  ENTITY Structured_template_planar_shape_model
    SUBTYPE OF (Part_template_planar_shape_model);
    SELF\Part_template_shape_model.shape_characterized_definition : SET[1:1] OF Structured_template;
  END_ENTITY;

  ENTITY Template_location_in_structured_template
    SUPERTYPE OF (ONEOF
      (Inter_stratum_feature_template_location,
       Stratum_specific_template_location));

    assembly : Structured_template;
    template : Template_definition;
    reference_designation : STRING;
  INVERSE
    transform : SET [0:?] OF Template_location_in_structured_template_transform FOR reference_location;
  UNIQUE
    UR1: assembly, reference_designation;
  WHERE
    WR1 : (SIZEOF(transform) > 0) XOR ('PART_TEMPLATE_EXTENSION_ARM.TEARDROP_TEMPLATE' IN TYPEOF(template));
    WR2 : NOT ('FABRICATION_TECHNOLOGY_ARM.INTER_STRATUM_FEATURE_TEMPLATE' IN TYPEOF(template)) OR
           ('PART_TEMPLATE_2D_SHAPE_ARM.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION' IN TYPEOF(SELF));
    WR3 : SIZEOF(['PART_TEMPLATE_EXTENSION_ARM.TEARDROP_TEMPLATE',
                  'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.GEOMETRIC_TEMPLATE'] *
                 TYPEOF(template)) > 0;
  END_ENTITY;

  ENTITY Template_location_in_structured_template_transform
    SUBTYPE OF (Geometric_placement);
      SELF\Geometric_placement_operation.template_definition RENAMED template_shape : Part_template_planar_shape_model;
      reference_location : Template_location_in_structured_template;
      assembly_shape : Structured_template_planar_shape_model;
      SELF\Geometric_placement.target RENAMED transform : Axis_placement_2d;
    UNIQUE
      UR1 : reference_location, assembly_shape;
    WHERE
      WR1 : assembly_shape.shape_characterized_definition[1] :=: reference_location.assembly;
  END_ENTITY;

 FUNCTION sts_vertex_degree_less_than_three(input : SET OF Stratum_technology_occurrence_link) : BOOLEAN;
 LOCAL
   psto : LIST OF INTEGER := [0:1000];
   ssto : LIST OF INTEGER := [0:1000];
   sto : SET OF Stratum_technology_occurrence := get_stack(input);
   i : INTEGER := 0;
   j : INTEGER := 0;
   pass : BOOLEAN := TRUE;
 END_LOCAL;
  REPEAT i := 1 TO SIZEOF(sto) BY 1;
   REPEAT j := 1 TO SIZEOF(input) BY 1;
     IF (input[j].precedent_sto :=: sto[i]) THEN 
      psto[i] := psto[i] + 1;
      IF (psto[i] = 2) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
     IF (input[j].subsequent_sto :=: sto[i]) THEN 
      ssto[i] := ssto[i] + 1;  
      IF (ssto[i] = 2) THEN 
       pass := FALSE; 
       ESCAPE; 
      END_IF;
     END_IF;  
   END_REPEAT;                                     
  END_REPEAT;                                     
 RETURN(pass);
 END_FUNCTION;                                 

END_SCHEMA;

(*
   $Id: arm.exp,v 1.32 2006/01/20 08:43:38 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4098 - ISO/TS 10303-1717 Part template 3d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3522
*)

SCHEMA Part_template_3d_shape_arm;

	USE FROM Edge_shape_feature_arm;	-- ISO/TS 10303-1673
	USE FROM Layered_3d_shape_arm;	-- ISO/TS 10303-1694	
	USE FROM Part_template_extension_arm;	-- ISO/TS 10303-1718
	USE FROM Part_template_shape_with_parameters_arm;	-- ISO/TS 10303-1720

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740


	TYPE pt3ds_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_shape_model_select WITH 
	    (Part_template_3d_shape_model);
  	END_TYPE; 

 	  TYPE pt3ds_part_template_or_physical_unit_3d_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_3d_shape_model_select WITH
	    (Part_template_3d_shape_model);
	  END_TYPE;

  ENTITY Edge_segment_cross_section
    SUBTYPE OF (Shape_definition_3d_intersection);
      SELF\Shape_definition_3d_intersection.surface_intersection_result : Edge_shape_model;
      SELF\Shape_definition_3d_intersection.projected_volume            : Part_template_3d_shape_model;
    DERIVE
      cross_section_reference                                           : edge_segment_vertex := 
       SELF\Shape_definition_3d_intersection.projected_volume\Part_template_shape_model.shape_characterized_definition[1]\
       Inter_stratum_feature_edge_segment_template.start_vertex;
      associated_template                                               : Template_definition := 
       SELF\Shape_definition_3d_intersection.projected_volume\Part_template_shape_model.shape_characterized_definition[1];
    INVERSE
      referencing_template : inter_stratum_feature_edge_segment_template_with_cross_section FOR cross_section;
    WHERE
      WR1 : associated_template :=: referencing_template;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_segment_template_with_cross_section
    SUBTYPE OF (Inter_stratum_feature_edge_segment_template);
      cross_section  : Edge_segment_cross_section;
  END_ENTITY;

  ENTITY Part_template_3d_keepout_shape_model
    SUBTYPE OF (Non_feature_shape_model,
    	Part_template_keepout_shape_model);
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
	WHERE
   		WR1 : (SIZEOF(application_technology_constraint) <= 1);
   		WR2 : NOT EXISTS(SELF\Representation.name);
   		WR3 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Part_template_3d_shape_model
    SUBTYPE OF (Part_template_shape_model);
	WHERE
   		WR1 : NOT EXISTS(SELF\Representation.name);
   		WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;


END_SCHEMA;
(*
   $Id: arm.exp,v 1.63 2006/10/13 10:40:05 liutkus Exp $
   ISO TC184/SC4/WG12 N4101 - ISO/TS 10303-1718 Part template extension - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3525
*)

SCHEMA Part_template_extension_arm;

    USE FROM Layered_2d_shape_arm;	-- ISO/TS 10303-1693
    USE FROM Fill_area_style_arm; -- ISO/TS 10303-1672
	USE FROM Fabrication_technology_arm;	-- ISO/TS 10303-1670
	USE FROM Text_representation_arm;	-- ISO/TS 10303-1750

  TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
    (truncate,
     chord_2_extend,
     round,
     extend);
  END_TYPE;

  TYPE extend_or_truncate = ENUMERATION OF
    (truncate,
     extend);
  END_TYPE;

TYPE text_alignment = ENUMERATION OF(
          top_right,
          top_centre,
          top_left,
          centre_right,
          centre_centre,
          centre_left,
          bottom_right,
          bottom_centre,
          bottom_left );
   END_TYPE;

	SUBTYPE_CONSTRAINT inter_stratum_feature_template_subtypes FOR Inter_stratum_feature_template;         
	    (ONEOF (Component_termination_passage_template,
		 Via_template,
		 Unsupported_passage_template,
		 Inter_stratum_feature_edge_segment_template,
		 Inter_stratum_feature_edge_template));
	END_SUBTYPE_CONSTRAINT;        

  TYPE square_or_round = ENUMERATION OF
    (square,
     round);
  END_TYPE;

 SUBTYPE_CONSTRAINT pte_template_definition_subtypes FOR Template_definition;   
 	(ONEOF (Parametric_template,
 	Part_string_template,
    Part_text_template));
 END_SUBTYPE_CONSTRAINT;  

  ENTITY Curve_style_parameters
  	ABSTRACT SUPERTYPE OF(ONEOF(Closed_curve_style_parameters, Curve_style_parameters_with_ends));
      name              : STRING;
      corner_style      : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width       : Length_data_element;
      width_uncertainty : Length_data_element;
    UNIQUE
      UR1 : name;
  END_ENTITY;

  ENTITY Closed_curve_style_parameters
    SUBTYPE OF (Curve_style_parameters);
  END_ENTITY;

  ENTITY Curve_style_parameters_with_ends
    SUBTYPE OF (Curve_style_parameters);
      end_extension     : extend_or_truncate;
      end_style         : square_or_round;
  END_ENTITY;

  ENTITY Default_trace_template
    SUBTYPE OF (Trace_template);
      of_stratum_technology : Stratum_technology;
  END_ENTITY;

  ENTITY Fill_area_template
   SUBTYPE OF (Parametric_template);
    fill_area_style : OPTIONAL fill_area_style_select;
    outer_boundary_style : Closed_curve_style_parameters;
    inner_boundary_style : Closed_curve_style_parameters;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_segment_template
    SUBTYPE OF (Inter_stratum_feature_template);
      composed_edge  : Inter_stratum_feature_edge_template;
      start_vertex   : Edge_segment_vertex;
      end_vertex     : Edge_segment_vertex;
      reference_path : Trimmed_curve;
    WHERE
      WR1 : EXISTS(reference_path.start_point) AND 
            EXISTS(reference_path.end_point);
      WR2 : start_vertex :<>: end_vertex;
  END_ENTITY;

  ENTITY Inter_stratum_feature_edge_template
    SUBTYPE OF (Inter_stratum_feature_template);
    INVERSE
      edges : SET[2:?] OF inter_stratum_feature_edge_segment_template FOR composed_edge;
  END_ENTITY;
  
  ENTITY Parametric_template
    ABSTRACT SUPERTYPE OF (ONEOF (Fill_area_template,
      Teardrop_template,
      Trace_template))
    SUBTYPE OF (Template_definition);
  END_ENTITY;

  ENTITY Part_string_template
    SUBTYPE OF (Template_definition);
      string_alignment : text_alignment;
  END_ENTITY;

  ENTITY Part_text_template
    SUBTYPE OF (Template_definition);
      of_character                            : Character_glyph_symbol;    
  END_ENTITY;

  ENTITY Planar_path_shape_model_with_parameters
    SUBTYPE OF (Single_area_csg_2d_model);
      centreline : Curve;
      parameters : Curve_style_parameters;
    WHERE
      WR1: SIZEOF(QUERY(it <* SELF\Representation.items |
      ('EXTENDED_BASIC_GEOMETRY_ARM.AXIS_PLACEMENT_2D' IN TYPEOF(it))
                )) = 1;
      WR2: SIZEOF(QUERY(it <* SELF\Representation.items |   
      ('EXTENDED_BASIC_GEOMETRY_ARM.AXIS_PLACEMENT_2D' IN TYPEOF(it)) AND
      NOT
      ((it\Axis_placement.origin\Cartesian_point.coordinates[1] = 0.0) AND
      (it\Axis_placement.origin\Cartesian_point.coordinates[2] = 0.0) AND
      (it\Axis_placement.x_axis\Direction.coordinates[1] = 0.0) AND
      (it\Axis_placement.x_axis\Direction.coordinates[2] = 0.0))
                )) = 0;                
  END_ENTITY;

  ENTITY Planar_closed_path_shape_model_with_parameters
    SUBTYPE OF (Planar_path_shape_model_with_parameters);
      SELF\Planar_path_shape_model_with_parameters.centreline : Closed_curve;
      SELF\Planar_path_shape_model_with_parameters.parameters : Closed_curve_style_parameters;
  END_ENTITY;

  ENTITY Solid_character_glyph_2d_symbol
    SUBTYPE OF (Character_glyph_symbol, Csg_2d_model);
  END_ENTITY;
  
  ENTITY Snowball_template
    SUBTYPE OF (Teardrop_template);
      snowball_start_distance     : Length_data_element;
      snowball_end_distance       : OPTIONAL Length_data_element;
      snowball_initial_spacing    : OPTIONAL Length_data_element;
      snowball_end_spacing        : OPTIONAL Length_data_element;
      snowball_initial_radius     : Length_data_element;
      snowball_end_radius         : OPTIONAL Length_data_element;
      snowball_quantity_per_trace : INTEGER; -- positive_integer;
    WHERE
      WR1 : NOT (snowball_quantity_per_trace > 1) OR (EXISTS(snowball_initial_spacing) AND EXISTS(snowball_end_spacing) AND EXISTS(snowball_end_distance) AND EXISTS(snowball_end_radius));
      WR2 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR3 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Teardrop_by_angle_template
    SUBTYPE OF (Teardrop_template);
      teardrop_angle : Angle_data_element;
    WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Teardrop_by_length_template
    SUBTYPE OF (Teardrop_template);
      teardrop_taper_start_distance : Length_data_element;
      teardrop_taper_end_distance   : Length_data_element;
   WHERE
      WR1 : (SIZEOF(USEDIN(SELF,'PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL.' + 'SHAPE_CHARACTERIZED_DEFINITION')) = 0);
      WR2 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Teardrop_template
    SUPERTYPE OF (ONEOF (Snowball_template,
      Teardrop_by_angle_template,
      Teardrop_by_length_template))
    SUBTYPE OF (Parametric_template, Single_stratum_template);
    WHERE
      WR1 : (SIZEOF(['PART_TEMPLATE_EXTENSION_ARM.SNOWBALL_TEMPLATE',
            'PART_TEMPLATE_EXTENSION_ARM.TEARDROP_BY_ANGLE_TEMPLATE',
            'PART_TEMPLATE_EXTENSION_ARM.TEARDROP_BY_LENGTH_TEMPLATE'] * TYPEOF(SELF)) = 1) XOR
            ('PRODUCT_IDENTIFICATION_EXTENSION_ARM.EXTERNALLY_DEFINED_VIEW_DEFINITION' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Trace_template
    SUPERTYPE OF (Default_trace_template)
    SUBTYPE OF (Parametric_template);
      trace_style : Curve_style_parameters;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.16 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4104 - ISO/TS 10303-1719 Part template non planar shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3528
*)
SCHEMA Part_template_non_planar_shape_arm;

    USE FROM Part_template_3d_shape_arm;	-- ISO/TS 10303-1717
	USE FROM Manifold_surface_arm;	-- ISO/TS 10303-1509

	TYPE ptnps_part_template_or_physical_unit_3d_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_3d_shape_model_select WITH 
 		(Part_template_non_planar_2d_shape_model);
	END_TYPE;

  ENTITY Part_template_non_planar_2d_shape_model
    SUBTYPE OF (Manifold_surface_shape_representation,
	 			Part_template_shape_model);
      transformation                    : Axis_placement_3d;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
      WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.25 2006/06/04 17:58:04 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4107 - ISO/TS 10303-1720 Part template shape with parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3531
*)

SCHEMA Part_template_shape_with_parameters_arm;

	USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706
	USE FROM Physical_layout_template_arm;	-- ISO/TS 10303-1722
	USE FROM Shape_parameters_arm;	-- ISO/TS 10303-1743

	SUBTYPE_CONSTRAINT shape_element_subtypes FOR Shape_element;
	  ONEOF (Shape_feature,
	         Non_feature_shape_element);
	END_SUBTYPE_CONSTRAINT;

 	TYPE ptswp_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Part_template_keepout_shape_model);
	END_TYPE;

	TYPE ptswp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Part_template_keepout_shape_model);
	END_TYPE; 

	TYPE ptswp_view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON view_shape_select WITH 
	    (Part_template_shape_model);
	END_TYPE; 

  ENTITY Geometric_template
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Template_definition);
  INVERSE
    shapes : SET [0:?] OF Part_template_shape_model FOR shape_characterized_definition;
    WHERE
     WR1 : SIZEOF(QUERY( gm <* USEDIN(SELF,'')|
        (('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(gm)) AND 
        NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL' IN
        TYPEOF(gm)))
        )) = 0;
  END_ENTITY;

  ENTITY Part_template_keepout_shape_model
		ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);		
	  constrained_design_object_category : keepout_product_design_object_category;
      shape_characterized_definition     : Geometric_template;
      shape_material_condition           : material_condition;
      centroid_location                  : OPTIONAL Cartesian_point;
      shape_environment                  : application_environment;
      shape_purpose                      : OPTIONAL predefined_keepout_purpose;
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
      WR2: SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;      
  END_ENTITY;

  ENTITY Part_template_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : SET[1:?] OF Geometric_template;
      shape_environment              : OPTIONAL application_environment;
      shape_material_condition       : material_condition;
  END_ENTITY;

  ENTITY Part_template_shape_representation_relationship
  	SUBTYPE OF (Geometric_model_relationship);
      SELF\Geometric_model_relationship.rep_1 RENAMED principal_part_shape : Part_template_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED related_part_shape   : Part_template_shape_model;
    UNIQUE
      UR1 : principal_part_shape, related_part_shape;
    WHERE
      WR1 : principal_part_shape :<>: related_part_shape;
      WR2 : NOT EXISTS(SELF\Representation_relationship.relation_type);
      WR3 : principal_part_shape\Geometric_model.context_of_items :=: related_part_shape\Geometric_model.context_of_items;
      WR4 : principal_part_shape\Part_template_shape_model.shape_characterized_definition :=:
            related_part_shape\Part_template_shape_model.shape_characterized_definition;
  END_ENTITY;


END_SCHEMA;
(*
 $Id: arm.exp,v 1.12 2004/11/15 21:22:47 thendrix Exp $
ISO TC184/SC4/WG12 N3220 - ISO/TS 10303-1023 Part view definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2109
*) 


SCHEMA Part_view_definition_arm;

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY;

RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PART_VIEW_DEFINITION_ARM.' + 'PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PART_VIEW_DEFINITION_ARM.' + 'PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;  -- Part_view_definition_arm
(*
 $Id: arm.exp,v 1.16 2004/10/28 17:08:02 darla Exp $
 ISO TC184/SC4/WG12 N2921 - ISO/TS 10303-1011 Person organization - EXPRESS ARM
*)
 


SCHEMA Person_organization_arm;


TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 

ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;

ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;

ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;

ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;

ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;

ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Person_organization_arm
(*
 $Id: arm.exp,v 1.8 2004/10/22 14:39:27 darla Exp $
 ISO TC184/SC4/WG12 N1090 - ISO/TS 10303-1013 Person organization assignment - EXPRESS ARM
*)
  
SCHEMA Person_organization_assignment_arm;

USE FROM Person_organization_arm; -- Person organization

TYPE organization_or_person_in_organization_item = EXTENSIBLE SELECT ;
END_TYPE;

ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role            : STRING;
  items           : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;

   
END_SCHEMA;

(*
   $Id: arm.exp,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N4110 - ISO/TS 10303-1721 Physical component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3534
*)

SCHEMA Physical_component_feature_arm; 

	USE FROM Component_feature_arm;	-- ISO/TS 10303-1657

  ENTITY Physical_component_feature
    SUBTYPE OF (Component_feature);
  END_ENTITY;

  ENTITY Physical_component_terminal
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Component_terminal,
 			Physical_component_feature);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.27 2006/10/16 10:30:38 liutkus Exp $
   ISO TC184/SC4/WG12 N4212 - ISO/TS 10303-1755 Physical connectivity definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3666
*)

SCHEMA Physical_connectivity_definition_arm;

	USE FROM Part_external_reference_arm;	-- ISO/TS 10303-1711
	USE FROM Physical_component_feature_arm;	-- ISO/TS 10303-1721
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740		
REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE pcd_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Physical_connectivity_definition);
	END_TYPE; 

	TYPE pcd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Physical_connectivity_element,
	    Physical_connectivity_definition,
	    Physical_connectivity_definition_relationship);
	END_TYPE; 

	TYPE pcd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
		(Physical_connectivity_element,
		 Physical_connectivity_definition);
	END_TYPE;

	TYPE termination_or_junction = EXTENSIBLE GENERIC_ENTITY SELECT
    	(Component_terminal,
    	 Topological_junction);
  	END_TYPE;

  ENTITY Physical_connectivity_definition
    SUPERTYPE OF (Physical_connectivity_structure_definition)
    SUBTYPE OF (Shape_element);
      associated_terminals  : SET[2:?] OF Physical_component_terminal;
      SELF\Shape_element.element_name : STRING;
      SELF\Shape_element.containing_shape RENAMED associated_definition : Physical_unit_network_definition;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, associated_definition;
  END_ENTITY;

  ENTITY Physical_connectivity_definition_relationship;
      first_definition  : Physical_connectivity_definition;
      second_definition : Physical_connectivity_definition;
      purpose           : STRING;
    INVERSE
      requirement : SET[1:1] OF Requirement_assignment FOR assigned_to;
  END_ENTITY;

  ENTITY Physical_connectivity_element;
      name                 : STRING; 
      start_terminus       : termination_or_junction;
      end_terminus         : termination_or_junction;
      connectivity_context : Physical_connectivity_structure_definition;
    UNIQUE
      UR1 : name, connectivity_context;
    WHERE
      WR1 : start_terminus <> end_terminus;
  END_ENTITY;

  ENTITY Physical_connectivity_make_from_relationship;
      reusable_definition  : Physical_connectivity_definition;
      resultant_definition : Physical_connectivity_definition;
  END_ENTITY;

  ENTITY Physical_connectivity_structure_definition
    SUBTYPE OF (Physical_connectivity_definition);
    DERIVE
      structural_terminal_nodes : SET OF Physical_component_terminal := get_pct(structural_element);
      structural_junction_nodes : SET OF Topological_junction := get_tj(structural_element);
      tree_structure : BOOLEAN := ((SIZEOF(structural_terminal_nodes) + SIZEOF(structural_junction_nodes)) = (SIZEOF(structural_element) + 1));
    INVERSE
      structural_element : SET[1:?] OF Physical_connectivity_element FOR connectivity_context;
    WHERE
      WR1 : SIZEOF(QUERY(stn <* structural_terminal_nodes |
                   NOT(stn IN SELF\Physical_connectivity_definition.associated_terminals)
                   )) = 0;
      WR2 : SIZEOF(structural_terminal_nodes) = 
            SIZEOF(SELF\Physical_connectivity_definition.associated_terminals);
  END_ENTITY;

  ENTITY Physical_unit_network_definition
    SUBTYPE OF (Part_design_view);
    DERIVE
      terminals : SET [0:?] OF Component_terminal := 
      get_terminals(bag_to_set(USEDIN(SELF,'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_DEFINITION')));
    WHERE
      WR1 : NOT (SIZEOF(terminals) > 1) OR
           (SIZEOF(QUERY(t <* terminals | NOT(SIZEOF(USEDIN(t, 'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.' + 
                          'PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_TERMINALS')) = 1))) = 0);
  END_ENTITY;

  ENTITY Topological_junction;
      name  : STRING;   
      scope : Physical_connectivity_structure_definition;
    UNIQUE
      UR1 : name, scope;
  END_ENTITY; 

  FUNCTION get_terminals(input : SET OF Physical_connectivity_definition) : SET OF Component_terminal;
  LOCAL
   ct : SET OF Component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   ct := ct + input[i].associated_terminals;
  END_REPEAT;
  RETURN(ct);
  END_FUNCTION;
  
  FUNCTION get_pct(input : SET OF Physical_connectivity_element) : SET OF Physical_component_terminal;
  LOCAL
   pct : SET OF Physical_component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].start_terminus)) THEN
   pct := pct + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].end_terminus)) THEN
   pct := pct + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(pct);
  END_FUNCTION;


  FUNCTION get_tj(input : SET OF Physical_connectivity_element) : SET OF Topological_junction;
  LOCAL
   tj : SET OF Topological_junction := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].start_terminus)) THEN
   tj := tj + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].end_terminus)) THEN
   tj := tj + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(tj);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.38 2006/10/12 11:02:59 liutkus Exp $
   ISO TC184/SC4/WG12 N4113 - ISO/TS 10303-1722 Physical layout template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3537
*)

SCHEMA Physical_layout_template_arm;

	USE FROM Analytical_model_arm;	-- ISO/TS 10303-1603

	USE FROM Feature_and_connection_zone_arm;	-- ISO/TS 10303-1671
   
	USE FROM Characterizable_object_arm;     -- ISO/TS 10303-xxxx

    USE FROM Generic_material_aspects_arm;

    USE FROM Part_view_definition_arm;   -- ISO/TS 10303-1023

	REFERENCE FROM product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

  TYPE correlated_or_independent = SELECT
    (Property_value_representation,
     characteristic);
  END_TYPE;

  TYPE plp_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON
     material_item_select  WITH
   		(Template_definition);
  END_TYPE;
	
  TYPE physical_unit_or_part_template = SELECT (Part_view_definition, Template_definition);
  END_TYPE;

  ENTITY Connection_zone_in_layout_template
  	SUBTYPE OF (Connection_zone, Instanced_feature);
  	SELF\Shape_element.containing_shape : Template_definition;
  END_ENTITY; 
  
	ENTITY Reference_part_template_for_analytical_model ;
		template					: Template_definition;
		analytical_representation	: Analytical_model_definition;
		UNIQUE
			UR1 : template;
	END_ENTITY;

  ENTITY Template
  	SUBTYPE OF (Product);
    UNIQUE 
      UR1: SELF\Product.id;
  	WHERE 
      WR1 : SIZEOF([ 'template model' ] * types_of_product(SELF))= 1 ;
  END_ENTITY;

  ENTITY Template_definition
    SUBTYPE OF (Item_shape, Product_view_definition);
    	SELF\Product_view_definition.defined_version 	: Template_version;
      	physical_characteristic                 : OPTIONAL SET[1:?] OF correlated_or_independent;
    DERIVE	
    	SELF\Item_shape.described_element     				: template_definition := SELF;      
    WHERE
      WR1 : SIZEOF(QUERY(prpc <* USEDIN(SELF\Product_view_definition.defined_version.of_product,
 'PRODUCT_IDENTIFICATION_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS') | (prpc.category\Product_category.name = 'template model'))) > 0;
  END_ENTITY;

  ENTITY Template_version
 	SUBTYPE OF (Product_version);
  		SELF\Product_version.of_product : Template;
  END_ENTITY;

RULE template_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'TEMPLATE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'TEMPLATE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 


RULE template_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'TEMPLATE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PHYSICAL_LAYOUT_TEMPLATE_ARM.' + 'TEMPLATE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;



(*
   $Id: arm.exp,v 1.17 2006/01/25 22:32:58 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4116 - ISO/TS 10303-1723 Physical node requirement to implementing component allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3540
*)

SCHEMA Physical_node_requirement_to_implementing_component_allocation_arm;

	USE FROM Assembly_module_with_packaged_connector_component_arm;	-- ISO/TS 10303-1645
	USE FROM Assembly_technology_arm;	-- ISO/TS 10303-1649
	USE FROM Physical_connectivity_definition_arm;	-- ISO/TS 10303-1755

  ENTITY Physical_node_requirement_to_implementing_component_allocation;
      physical_node_requirement          : Physical_connectivity_definition;
      implementation_component           : Assembly_component;
      implementation_interface_joint_set : OPTIONAL SET[1:?] OF Interface_mounted_join;
      implementation_joint_set           : OPTIONAL SET[1:?] OF Assembly_joint;
    DERIVE
      implementation_connection_definition_1 : SET[0:1] OF part_connected_terminals_definition := get_pctd(implementation_component,
 implementation_joint_set);
      implementation_connection_definition_2 : SET[0:1] OF packaged_connector_terminal_relationship := get_pctr(implementation_component,
 implementation_interface_joint_set);
    WHERE
      WR1 : EXISTS(implementation_interface_joint_set) XOR EXISTS(implementation_joint_set);
      WR2 : (SIZEOF(implementation_connection_definition_1) + SIZEOF(implementation_connection_definition_2) = 1) OR (('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.INTERFACE_COMPONENT' IN TYPEOF(implementation_component)) AND ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN TYPEOF(get_cit(implementation_component,
 implementation_joint_set)))) OR ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.ROUTED_INTERCONNECT_COMPONENT' IN TYPEOF(implementation_component));
      WR3 : SIZEOF(QUERY(pct <* physical_node_requirement.associated_terminals | pct\Component_feature.associated_component = implementation_component)) = 0;
  END_ENTITY;

  FUNCTION get_cit(
    ac  : Assembly_component ;
    ajb : SET OF Assembly_joint
  ) : Physical_component_interface_terminal;

    LOCAL
      cf  : LIST[1:2] OF component_feature := [ajb[1].assembly_feature_1,
                                               ajb[1].assembly_feature_2];
      cit : Physical_component_interface_terminal;
    END_LOCAL;

    REPEAT i := 1 TO 2 BY 1;
      IF ac :=: cf[i].associated_component THEN
        IF ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.INTERFACE_COMPONENT' IN TYPEOF(cf[i].associated_component)) THEN
          RETURN(cf[i]);
        ELSE
          RETURN(?);
        END_IF;
      ELSE
        RETURN(?);
      END_IF;
    END_REPEAT;
    RETURN(?);
  END_FUNCTION;

  FUNCTION get_pctd(
    ac  : Assembly_component ;
    ajb : SET OF Assembly_joint
  ) : SET OF Part_connected_terminals_definition;

    LOCAL
      cf  : LIST[1:2] OF component_feature := [ajb[1].assembly_feature_1,
                                               ajb[1].assembly_feature_2];
      pctd : SET OF part_connected_terminals_definition := [];
    END_LOCAL;

    REPEAT i := 1 TO 2 BY 1;
      IF ac :=: cf[i].associated_component THEN
        IF ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.PART_TERMINAL' IN TYPEOF(cf[i].definition)) THEN
          pctd := cf[i].definition.connection_requirement;
          RETURN(pctd);
        ELSE
          RETURN(pctd);
        END_IF;
      ELSE
        RETURN(pctd);
      END_IF;
    END_REPEAT;
    RETURN(?);
  END_FUNCTION;

  FUNCTION get_pctr(
    ac   : Assembly_component ;
    imjb : SET OF Interface_mounted_join
  ) : SET OF Packaged_connector_terminal_relationship;

    LOCAL
      cf   : Component_feature;
      pctr : SET OF packaged_connector_terminal_relationship := [];
    END_LOCAL;

    cf := imjb[1].connection_to_interconnect_module_component;
    IF ac :=: cf.associated_component THEN
      IF ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_ARM.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF(cf.definition)) THEN
        pctr := cf.definition.external_connector_function;
        RETURN(pctr);
      ELSE
        RETURN(pctr);
      END_IF;
    ELSE
      RETURN(pctr);
    END_IF;
  END_FUNCTION;

END_SCHEMA;  
(*
   $Id: arm.exp,v 1.49 2006/04/22 20:26:08 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4119 - ISO/TS 10303-1724 Physical unit 2d design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3546
*)

SCHEMA Physical_unit_2d_design_view_arm;

	USE FROM Part_template_shape_with_parameters_arm;  -- ISO/TS 10303-1720
	USE FROM Physical_unit_2d_shape_arm;	-- ISO/TS 10303-1726
	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  ENTITY Assembly_component_2d_shape_model
    SUBTYPE OF (Planar_projected_shape_model);
      shape_characterized_component : SET[1:?] OF Assembly_component;
  END_ENTITY;

  ENTITY Component_2d_location
   SUBTYPE OF (Contextual_shape_representation, Geometric_composition_with_operator_transformation);
     placement_fixed : BOOLEAN;
     SELF\Geometric_relationship_with_operator_transformation.transformation : Cartesian_transformation_2d; -- enforce rep_rel_w_trans by mapping
     SELF\Geometric_model_relationship.rep_2 RENAMED assembly_model : Physical_unit_planar_shape_model;  -- CHANGED
     SELF\Geometric_model_relationship.rep_1 RENAMED component_model : Geometric_model; -- CHANGED
   DERIVE
     component : Next_assembly_usage := SELF\Contextual_shape_representation.contextual_shape.described_element;
     substrate_location : BOOLEAN := substrate_in_assembly(SELF);
     the_context : Geometric_coordinate_space := assembly_model\Representation.context_of_items;
     SELF\Contextual_shape_representation.representing_relationship : Geometric_model_relationship := SELF;   -- NEW
     SELF\Representation_relationship.relation_type : STRING := 'component 2d location';
   WHERE
     WR1: EXISTS (component);  
     WR2: NOT('PHYSICAL_UNIT_2D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship.related_view IN component_model\Assembly_component_2d_shape_model.shape_characterized_component);
     WR3: NOT('PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component_model\Physical_unit_shape_model.shape_characterized_definition :=: 
     component\Next_assembly_usage_occurrence_relationship.related_view\Assembly_component.derived_from);
     WR4: NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship.related_view\Assembly_component.derived_from IN
      component_model\Part_template_shape_model.shape_characterized_definition);
  END_ENTITY;

  ENTITY Component_part_2d_geometric_representation_relationship
    SUBTYPE OF (Geometric_model_relationship);
    	SELF\Geometric_model_relationship.rep_1 RENAMED part_shape  : part_template_or_physical_unit_2d_shape_select;
    	SELF\Geometric_model_relationship.rep_2 RENAMED component_shape : Assembly_component_2d_shape_model;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation_relationship.relation_type);
      WR2 : SIZEOF(QUERY(ac <* component_shape.shape_characterized_component |
                   NOT(part_shape.shape_characterized_definition :=: ac\Assembly_component.derived_from)
                   )) = 0;
      WR3 : part_shape :<>: component_shape;
  END_ENTITY;

  RULE unique_assembly_component_2d_shape_model FOR (Assembly_component_2d_shape_model);
   LOCAL
     ac : BAG OF Assembly_component := [];
     pass : BOOLEAN := TRUE;
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_2d_shape_model) by 1;
     ac  := ac + Assembly_component_2d_shape_model[i].shape_characterized_component;
   END_REPEAT;
  WHERE
   WR1 : SIZEOF(ac) = SIZEOF(bag_to_set(ac));
  END_RULE;

  FUNCTION substrate_in_assembly(
    c2dl : Component_2d_location
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.35 2006/10/25 20:43:09 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4125 - ISO/TS 10303-1726 Physical unit 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3558
*)

SCHEMA Physical_unit_2d_shape_arm;

	USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706
	USE FROM Physical_unit_shape_with_parameters_arm;	-- ISO/TS 10303-1730
	USE FROM Layered_2d_shape_arm; -- ISO/TS 10303-1693

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740


	SUBTYPE_CONSTRAINT planar_shape_model_subtypes FOR Planar_shape_model;  
		(ONEOF (Planar_projected_shape_model,
		Physical_unit_planar_keepout_shape_model));
	END_SUBTYPE_CONSTRAINT; 

 	TYPE pu2ds_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Physical_unit_planar_shape_model);
	END_TYPE;

	TYPE pu2ds_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_shape_model_select WITH 
	    (Physical_unit_planar_shape_model);
  	END_TYPE; 

	TYPE pu2ds_feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON feature_or_non_feature_usage WITH 
 		(part_template_or_physical_unit_2d_shape_select);
	END_TYPE;

	TYPE pu2ds_view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON view_shape_select WITH 
	    (Physical_unit_shape_model);
	END_TYPE; 

  	TYPE pu2ds_part_template_or_physical_unit_2d_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON part_template_or_physical_unit_2d_shape_select WITH 
    	(Physical_unit_planar_shape_model);
  	END_TYPE;


  TYPE predefined_planar_purpose = ENUMERATION OF
    (analysis_input,
     analysis_output,
     shock_analysis_input,
     shock_analysis_output,
     assembly_symbol,
     design,
     design_profile,
     vibration_analysis_input,
     vibration_analysis_output,
     electromagnetic_compatibility_analysis_input,
     electromagnetic_compatibility_analysis_output,
     physical_extent,
     thermal_analysis_input,
     thermal_analysis_output);
  END_TYPE;

  TYPE pu2ds_shape_location = ENUMERATION OF
    (above,
     below,
     congruent);
  END_TYPE;

  TYPE pu2ds_shape_side = ENUMERATION OF
    (same_side,
     opposite_side,
     both_sides);
  END_TYPE;

  TYPE pu2ds_component_application = ENUMERATION OF
    (compliant_components_permitted,
     no_components_permitted);
  END_TYPE;

  ENTITY Physical_unit_planar_keepout_shape_model
    SUBTYPE OF (Planar_shape_model,
 			Usage_view_level_non_feature_shape_model,
 			Physical_unit_keepout_shape_model);
      SELF\Usage_view_level_non_feature_shape_model.model_shape : Physical_unit_shape_model;
      component_application                                    : pu2ds_component_application;
      shape_distance_from_seating_plane                        : OPTIONAL Length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane             : OPTIONAL pu2ds_shape_location;
      side                                                     : OPTIONAL pu2ds_shape_side;
      extrusion                                                : OPTIONAL BOOLEAN;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
    WHERE
      WR1 : NOT ((pu2ds_shape_location.congruent = shape_location_with_respect_to_seating_plane) AND (EXISTS(shape_distance_from_seating_plane)));
   	  WR2 : (SIZEOF(application_technology_constraint) <= 1);
   	  WR3 : NOT EXISTS(SELF\Representation.name);
   	  WR4 : NOT EXISTS(SELF\Representation.description);
   	  WR5 : NOT EXISTS(shape_distance_from_seating_plane) OR EXISTS(shape_location_with_respect_to_seating_plane);
   	  WR6 : NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition)) OR
   	        EXISTS(shape_distance_from_seating_plane);
      WR7 : NOT EXISTS(side) OR ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition));
      WR8 : NOT EXISTS(extrusion) OR EXISTS(side);
  END_ENTITY;

  ENTITY Physical_unit_planar_shape_model
    SUBTYPE OF (Planar_projected_shape_model, Physical_unit_shape_model);
      shape_distance_from_seating_plane            : OPTIONAL Length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane : OPTIONAL pu2ds_shape_location;
      shape_purpose                                : OPTIONAL predefined_planar_purpose;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
                                           get_rvd(SELF, 'application technology constraint');
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
   	  WR2 : (SIZEOF(application_technology_constraint) <= 1);	  
   	  WR3 : NOT EXISTS(SELF\Representation.description);
   	  WR4 : NOT (EXISTS(shape_distance_from_seating_plane) XOR EXISTS(shape_location_with_respect_to_seating_plane));
   	  WR5 : NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(SELF\Physical_unit_shape_model.shape_characterized_definition)) OR
   	        EXISTS(shape_distance_from_seating_plane);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.31 2006/04/22 20:26:08 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4122 - ISO/TS 10303-1725 Physical unit 3d design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3561
*)

SCHEMA Physical_unit_3d_design_view_arm;
  
	USE FROM Layered_3d_shape_arm;	-- ISO/TS 10303-1694
	USE FROM Part_template_shape_with_parameters_arm;  -- ISO/TS 10303-1720
	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
  
  ENTITY Assembly_component_3d_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_component : SET[1:?] OF Assembly_component;
  WHERE
    WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Component_3d_location
    SUBTYPE OF (Contextual_shape_representation, Geometric_composition_with_operator_transformation);
      SELF\Geometric_relationship_with_operator_transformation.transformation  : Cartesian_transformation_3d;
      placement_fixed : BOOLEAN;
      SELF\Geometric_model_relationship.rep_1 RENAMED component_model : Assembly_component_3d_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED assembly_model : Physical_unit_3d_shape_model;
    DERIVE
      component : Next_assembly_usage := SELF\Contextual_shape_representation.contextual_shape.described_element;
      the_context : Geometric_coordinate_space := assembly_model\Representation.context_of_items;
      SELF\Contextual_shape_representation.representing_relationship : Geometric_model_relationship := SELF;   -- NEW
      SELF\Representation_relationship.relation_type : STRING := 'component 3d location';
    WHERE
     WR1: EXISTS (component);  
     WR2: NOT('PHYSICAL_UNIT_3D_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship.related_view IN component_model\Assembly_component_3d_shape_model.shape_characterized_component);
     WR3: NOT('PHYSICAL_UNIT_SHAPE_WITH_PARAMETERS_ARM.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component_model\Physical_unit_shape_model.shape_characterized_definition :=: 
     component\Next_assembly_usage_occurrence_relationship.related_view\Assembly_component.derived_from);
     WR4: NOT('PART_TEMPLATE_SHAPE_WITH_PARAMETERS_ARM.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF(component_model)) OR
     (component\Next_assembly_usage_occurrence_relationship.related_view\Assembly_component.derived_from IN
      component_model\Part_template_shape_model.shape_characterized_definition);
  END_ENTITY;

  ENTITY Component_part_3d_geometric_representation_relationship
    SUBTYPE OF (Geometric_model_relationship);
		SELF\Geometric_model_relationship.rep_1 RENAMED part_shape      : part_template_or_physical_unit_3d_shape_model_select;
	    SELF\Geometric_model_relationship.rep_2 RENAMED component_shape : Assembly_component_3d_shape_model;
	WHERE
	  WR1 : NOT EXISTS(SELF\Representation_relationship.relation_type);
      WR2 : SIZEOF(QUERY(ac <* component_shape.shape_characterized_component |
                   NOT(part_shape.shape_characterized_definition :=: ac\Assembly_component.derived_from)
                   )) = 0;
      WR3 : part_shape :<>: component_shape;
  END_ENTITY;

  RULE unique_assembly_component_3d_shape_model FOR (Assembly_component_3d_shape_model);
   LOCAL
     ac : BAG OF Assembly_component := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_3d_shape_model) by 1;
     ac  := ac + Assembly_component_3d_shape_model[i].shape_characterized_component;
   END_REPEAT;  
  WHERE
   WR1 : SIZEOF(ac) = SIZEOF(bag_to_set(ac));
  END_RULE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.34 2006/10/24 08:56:01 liutkus Exp $
   ISO TC184/SC4/WG12 N4128 - ISO/TS 10303-1727 Physical unit 3d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3564
*)

SCHEMA Physical_unit_3d_shape_arm;

	USE FROM Non_feature_shape_element_arm;	-- ISO/TS 10303-1706
	USE FROM Physical_unit_shape_with_parameters_arm;	-- ISO/TS 10303-1730

REFERENCE FROM Requirement_decomposition_arm(get_rvd);	-- ISO/TS 10303-1740

	TYPE pu3ds_view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON view_shape_select WITH 
	    (Physical_unit_shape_model);
	END_TYPE; 

  TYPE predefined_3d_purpose = ENUMERATION OF
    (analysis_input,
     analysis_output,
     shock_analysis_input,
     shock_analysis_output,
     design,
     vibration_analysis_input,
     vibration_analysis_output,
     electromagnetic_compatibility_analysis_input,
     electromagnetic_compatibility_analysis_output,
     thermal_analysis_input,
     thermal_analysis_output);
  END_TYPE;

 	TYPE pu3ds_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Physical_unit_3d_shape_model);
	END_TYPE;

	TYPE pu3ds_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit_shape_model_select WITH 
	    (Physical_unit_3d_shape_model);
  	END_TYPE;

  TYPE shape_class = ENUMERATION OF
    (extrusion,
     manhattan_block,
     other,
     is_unknown);
  END_TYPE;

  TYPE pu3ds_shape_location = ENUMERATION OF
    (above,
     below);
  END_TYPE;

  TYPE pu3ds_shape_side = ENUMERATION OF
    (same_side,
     opposite_side,
     both_sides);
  END_TYPE;

  TYPE pu3ds_component_application = ENUMERATION OF
    (compliant_components_permitted,
     no_components_permitted);
  END_TYPE;
  
  ENTITY Physical_unit_3d_keepout_shape_model   
    SUBTYPE OF (Usage_view_level_non_feature_shape_model, Physical_unit_keepout_shape_model);
      shape_classification               : shape_class;
      SELF\Usage_view_level_non_feature_shape_model.model_shape : Physical_unit_3d_shape_model;
      component_application                                    : pu3ds_component_application;
      shape_distance_from_seating_plane                        : OPTIONAL Length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane             : OPTIONAL pu3ds_shape_location;
      side                                                     : OPTIONAL pu3ds_shape_side;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
  		get_rvd(SELF, 'application technology constraint');
	WHERE
	  WR1 : (SIZEOF(application_technology_constraint) <= 1);
   	  WR2 : NOT EXISTS(SELF\Representation.name);
   	  WR3 : NOT EXISTS(SELF\Representation.description);
   	  WR4 : NOT (EXISTS(shape_distance_from_seating_plane) XOR EXISTS(shape_location_with_respect_to_seating_plane));
   	  WR5 : NOT ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition)) OR
   	        EXISTS(shape_distance_from_seating_plane);
      WR6 : NOT EXISTS(side) OR ('PACKAGE_ARM.PACKAGE' IN TYPEOF(model_shape.shape_characterized_definition));
  END_ENTITY;

  ENTITY Physical_unit_3d_shape_model
    SUBTYPE OF (Physical_unit_shape_model);
      shape_purpose                     : OPTIONAL predefined_3d_purpose;
      shape_classification              : shape_class;
	DERIVE
  		application_technology_constraint: SET[0:?] OF Requirement_view_definition :=
		  get_rvd(SELF, 'application technology constraint');
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
   	  WR2: (SIZEOF(application_technology_constraint) <= 1);
      WR3 : NOT EXISTS(SELF\Representation.name);
      WR4 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.60 2006/06/25 21:36:42 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4131 - ISO/TS 10303-1728 Physical unit design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3567
*)

SCHEMA Physical_unit_design_view_arm;

	USE FROM Physical_layout_template_arm; -- ISO/TS 10303-1722

	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	SUBTYPE_CONSTRAINT pudv_connection_zone_subtypes FOR Connection_zone;     
		 ONEOF (Connection_zone_in_usage_view,
		 Connection_zone_in_design_view,
		 Connection_zone_in_layout_template);
	END_SUBTYPE_CONSTRAINT;

	TYPE assembly_component_or_item_number = SELECT
    	(Assembly_item_number,
    	 Assembly_component_relationship,
    	 Next_assembly_usage);
	END_TYPE;
	
	TYPE assembly_item_number_or_process_specification = SELECT
    	(Assembly_item_number,
    	 Process_specification);
	END_TYPE;
	
	TYPE pudv_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Assembly_component);
	END_TYPE; 

	TYPE pudv_physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit WITH 
   		(Part_design_view);
	END_TYPE; 

	SUBTYPE_CONSTRAINT pudv_part_view_definition_subtypes FOR Part_view_definition; 
		(ONEOF (Part_usage_view,
		Part_design_view));
	END_SUBTYPE_CONSTRAINT; 

	TYPE pudv_extended_value_with_unit = EXTENSIBLE SELECT BASED_ON extended_value_with_unit WITH 
	   (textual_quantity_specification);
	END_TYPE; 

	TYPE pudv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    	(Assembly_item_number,
    	 Assembly_component_relationship,
    	 Component_bonding_relationship);
	END_TYPE;
	
	TYPE textual_quantity_specification = STRING;
	END_TYPE;
	
  ENTITY Assembly_alternate_product
    SUBTYPE OF (Alternate_product_relationship);
      basis_context : Part_design_view;
    WHERE
      WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;

  ENTITY Assembly_component
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Definition_based_product_occurrence, Item_shape);
	SELF\Definition_based_product_occurrence.derived_from : physical_unit_or_part_template;
    DERIVE
    	SELF\Item_shape.described_element : shapeable_item := SELF;
    INVERSE
      SELF\Product_occurrence.occurrence_contexts : SET[1:?] OF assembly_component_relationship FOR related_view;
    WHERE
      WR1 : NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) XOR ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(derived_from))) OR 
            NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) XOR ('PART_TEMPLATE_2D_SHAPE_ARM.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from)));
      WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
  END_ENTITY;

  ENTITY Assembly_item_number;
      assembly_usage : SET[1:?] OF Assembly_component_relationship;
      item_number    : STRING;
    DERIVE
      assembly : Product_view_definition := assembly_usage[1].relating_view;
      part     : Product := assembly_usage[1].related_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product;
    UNIQUE
      UR1 : assembly, item_number;
    WHERE
      WR1 : SIZEOF(QUERY(au <* assembly_usage | NOT (au.relating_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product = Part))) = 0;
      WR2 : SIZEOF(QUERY(au <* assembly_usage | NOT (au.related_view = assembly))) = 0;
  END_ENTITY;

  ENTITY Component_bonding_relationship;
      associated_design : Part_design_view;  
      component_1   : assembly_component_or_item_number;
      component_2   : assembly_component_or_item_number;
      bond_material : assembly_component_or_item_number;
      specification : assembly_item_number_or_process_specification;
    WHERE
      WR1 : component_1 <> component_2;
      WR2 : component_1 <> bond_material;
      WR3 : component_1 <> specification;
      WR4 : component_2 <> bond_material;
      WR5 : component_2 <> specification;
      WR6 : bond_material <> specification;
      WR7 : valid_assembly_context_for_bond(associated_design, component_1);
      WR8 : valid_assembly_context_for_bond(associated_design, component_2);
      WR9 : valid_assembly_context_for_bond(associated_design, bond_material);
     WR10 : valid_assembly_context_for_bond(associated_design, specification);
  END_ENTITY;

  ENTITY Component_make_from_relationship
		SUBTYPE OF (View_definition_relationship);  
      SELF\View_definition_relationship.relating_view RENAMED reusable_component	: Assembly_component;
      SELF\View_definition_relationship.related_view RENAMED resultant_component	: Assembly_component;
    WHERE
      WR1 : resultant_component <> reusable_component;
  END_ENTITY;

  ENTITY Component_to_physical_usage_view_assignment
  	SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED design_view_component : Assembly_component;  	
      SELF\View_definition_relationship.related_view RENAMED usage_view_component  	: Assembly_component;
    WHERE
      WR1 : design_view_component <> usage_view_component;
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;

  ENTITY Connection_zone_in_design_view
  	SUBTYPE OF (Connection_zone);
  	DERIVE
  		associated_definition : Part_design_view := SELF\Shape_element.containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY; 

  ENTITY Next_assembly_usage_occurrence_relationship
    SUBTYPE OF (Next_assembly_usage);
    component : Product_occurrence;
  UNIQUE
    UR1 : SELF\View_definition_relationship.relating_view, 
          SELF\Assembly_component_relationship.location_indicator;
  END_ENTITY;

  ENTITY Part_design_view
    SUBTYPE OF (Item_shape, Part_view_definition);
      usage_view : OPTIONAL Part_usage_view;
    DERIVE
    	SELF\Item_shape.described_element : shapeable_item := SELF;
    WHERE
      WR1 : ('LAYOUT_MACRO_DEFINITION_ARM.LAYOUT_MACRO_DEFINITION' IN TYPEOF(SELF)) OR EXISTS(usage_view);
      WR2 : SIZEOF(QUERY(nauo <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.RELATING_VIEW') |
                 (('PHYSICAL_UNIT_DESIGN_VIEW_ARM.NEXT_ASSEMBLY_USAGE_OCCURRENCE_RELATIONSHIP' IN TYPEOF(nauo)) XOR
                  ('ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE' IN TYPEOF(nauo)))                 
                 )) = 0;
  END_ENTITY;

  ENTITY Physical_component
    SUBTYPE OF (Assembly_component, Definition_based_part_occurrence);
  END_ENTITY;

  ENTITY Thermal_component
    SUBTYPE OF (Assembly_component);
  END_ENTITY;

  RULE unique_assembly_item_number FOR (Assembly_item_number);
   LOCAL
     acr : BAG OF Assembly_component_relationship := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_item_number) by 1;
     acr  := acr + Assembly_item_number[i].assembly_usage;
   END_REPEAT;  
  WHERE
   WR1 : SIZEOF(acr) = SIZEOF(bag_to_set(acr));
  END_RULE;

FUNCTION valid_assembly_context_for_bond(input1 : Part_design_view;
                                         input2 : GENERIC_ENTITY) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION;                                         

END_SCHEMA;

(*
   $Id: arm.exp,v 1.27 2006/04/25 11:46:51 liutkus Exp $
   ISO TC184/SC4/WG12 N4134 - ISO/TS 10303-1729 Physical unit interconnect definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3570
*)

SCHEMA Physical_unit_interconnect_definition_arm;

	USE FROM Part_occurrence_arm;	-- ISO/TS 10303-1715

ENTITY Connector_based_interconnect_definition;
   name                    : STRING; 
   associated_definition   : Physical_unit_interconnect_definition;
   connector_in_uv_1       : Next_assembly_usage;
   connector_in_uv_2       : Next_assembly_usage;
   component_1             : Next_assembly_usage;
   component_2             : Next_assembly_usage;   
  UNIQUE
    UR1 : name, associated_definition;
WHERE
  WR1: 'ASSEMBLY_MODULE_WITH_PACKAGED_CONNECTOR_COMPONENT_ARM.PACKAGED_CONNECTOR_COMPONENT' IN 
        TYPEOF(connector_in_uv_1\View_definition_relationship.related_view);      
  WR2: 'ASSEMBLY_MODULE_WITH_PACKAGED_CONNECTOR_COMPONENT_ARM.PACKAGED_CONNECTOR_COMPONENT' IN 
        TYPEOF(connector_in_uv_2\View_definition_relationship.related_view);
  WR3: 'PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_USAGE_VIEW' IN 
        TYPEOF(connector_in_uv_1\View_definition_relationship.relating_view);
  WR4: 'PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_USAGE_VIEW' IN 
        TYPEOF(connector_in_uv_2\View_definition_relationship.relating_view);
  WR5: EXISTS(connector_in_uv_1\Assembly_component_relationship.location_indicator);
  WR6: EXISTS(connector_in_uv_2\Assembly_component_relationship.location_indicator);
  WR7: EXISTS(component_1\Assembly_component_relationship.location_indicator);
  WR8: EXISTS(component_2\Assembly_component_relationship.location_indicator);
  WR9: NOT EXISTS(connector_in_uv_1.quantity);
 WR10: NOT EXISTS(connector_in_uv_2.quantity);
 WR11: NOT EXISTS(component_1.quantity);
 WR12: NOT EXISTS(component_2.quantity);
 WR13: component_1\View_definition_relationship.related_view\Definition_based_product_occurrence.derived_from = 
       connector_in_uv_1\View_definition_relationship.relating_view;
 WR14: component_2\View_definition_relationship.related_view\Definition_based_product_occurrence.derived_from = 
       connector_in_uv_2\View_definition_relationship.relating_view;
 WR15: component_1 <> component_2;
 WR16: component_1 <> connector_in_uv_1;
 WR17: connector_in_uv_1 <> component_2;
 WR18: component_1 <> connector_in_uv_2;
 WR19: connector_in_uv_2 <> component_2;
 WR20: 'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_ARM.DEFINITION_BASED_PART_OCCURRENCE' IN 
        TYPEOF(component_1\View_definition_relationship.related_view);      
 WR21: 'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_ARM.DEFINITION_BASED_PART_OCCURRENCE' IN 
        TYPEOF(component_2\View_definition_relationship.related_view);
 WR22: associated_definition = component_1\View_definition_relationship.relating_view;
 WR23: associated_definition = component_2\View_definition_relationship.relating_view;
END_ENTITY;

  ENTITY Physical_unit_interconnect_definition
    SUBTYPE OF (Part_view_definition);
  WHERE
    WR1 : SIZEOF(QUERY(nauo <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.RELATING_VIEW') |
                 (('PHYSICAL_UNIT_DESIGN_VIEW_ARM.NEXT_ASSEMBLY_USAGE_OCCURRENCE_RELATIONSHIP' IN TYPEOF(nauo)) XOR
                  ('ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE' IN TYPEOF(nauo)))                 
                 )) = 0;
  END_ENTITY;

END_SCHEMA;



(*
   $Id: arm.exp,v 1.18 2006/01/31 07:41:16 liutkus Exp $
   ISO TC184/SC4/WG12 N3834 - ISO/TS 10303-1613 Physical unit non planar design view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3573
*)

SCHEMA Physical_unit_non_planar_design_view_arm;
  
	USE FROM Manifold_subsurface_arm;	-- ISO/TS 10303-1702
	USE FROM Physical_unit_design_view_arm;	-- ISO/TS 10303-1728

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  ENTITY Assembly_component_non_planar_shape_model
    SUBTYPE OF (Manifold_subsurface_model);
      shape_characterized_component : SET[1:?] OF Assembly_component;
  WHERE
    WR1 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;


  RULE unique_assembly_component_non_planar_shape_model FOR (Assembly_component_non_planar_shape_model);
   LOCAL
     ac : BAG OF Assembly_component := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_non_planar_shape_model) by 1;
     ac  := ac + Assembly_component_non_planar_shape_model[i].shape_characterized_component;
   END_REPEAT;  
  WHERE
   WR1 : SIZEOF(ac) = SIZEOF(bag_to_set(ac));
  END_RULE;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.26 2006/04/25 11:46:51 liutkus Exp $
   ISO TC184/SC4/WG12 N4137 - ISO/TS 10303-1730 Physical unit shape with parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3576
*)

SCHEMA Physical_unit_shape_with_parameters_arm;

	USE FROM Physical_unit_usage_view_arm;	-- ISO/TS 10303-1732
	USE FROM Shape_parameters_arm;	-- ISO/TS 10303-1743

  TYPE mass_property_quality = ENUMERATION OF
    (high,
     medium,
     low,
     is_unknown);
  END_TYPE;

 	TYPE puswp_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Physical_unit_keepout_shape_model);
	END_TYPE;

	TYPE puswp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Physical_unit_keepout_shape_model,
		Physical_unit_shape_model);
	END_TYPE; 

  TYPE shape_approximation_level = ENUMERATION OF
    (coarse,
     detailed,
     is_unknown);
  END_TYPE;

  TYPE shape_extent = ENUMERATION OF
    (envelope,
     over_body,
     over_lands,
     over_breakout);
  END_TYPE;

	SUBTYPE_CONSTRAINT puswp_geometric_model_subtypes FOR Geometric_model;     
		(ONEOF (Physical_unit_keepout_shape_model,
		 Physical_unit_shape_model 
		 ));    
	END_SUBTYPE_CONSTRAINT;


  ENTITY Physical_unit_keepout_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);    
	  constrained_design_object_category : keepout_product_design_object_category;    
      shape_characterized_definition     : Part_usage_view; --physical_unit;
      shape_material_condition           : material_condition;
      shape_purpose                      : OPTIONAL predefined_keepout_purpose;
      shape_environment                  : application_environment;
      shape_extent                       : shape_extent;			
      shape_approximation_level          : shape_approximation_level;
      centroid_location                  : OPTIONAL Cartesian_point;
    INVERSE
	  external_shape_purpose : SET [0:1] OF External_source_identification FOR item;      
	WHERE
	  WR1: (EXISTS (shape_purpose)) XOR ((SIZEOF(external_shape_purpose)) = 1);
  END_ENTITY;

  ENTITY Physical_unit_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Geometric_model);    
      shape_characterized_definition : physical_unit;
      shape_material_condition       : material_condition;      
      centroid_location              : OPTIONAL Cartesian_point;      
      shape_environment              : application_environment;      
      shape_extent                   : shape_extent;      
      shape_approximation_level      : shape_approximation_level;
      mass_property_quality          : mass_property_quality;
    WHERE
      WR1 : NOT ('PACKAGED_PART_BLACK_BOX_MODEL_ARM.PACKAGED_PART' IN TYPEOF(shape_characterized_definition));
      WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;            
  END_ENTITY;

  ENTITY Physical_unit_shape_representation_relationship
  	SUBTYPE OF (Geometric_model_relationship);
      SELF\Geometric_model_relationship.rep_1 RENAMED principal_part_shape : Physical_unit_shape_model;
      SELF\Geometric_model_relationship.rep_2 RENAMED related_part_shape   : Physical_unit_shape_model;
    UNIQUE
      UR1 : principal_part_shape, related_part_shape;
    WHERE
      WR1 : principal_part_shape :<>: related_part_shape;
      WR2 : NOT EXISTS(SELF\Representation_relationship.relation_type);
      WR3 : principal_part_shape\Geometric_model.context_of_items :=: related_part_shape\Geometric_model.context_of_items;
      WR4 : principal_part_shape\Physical_unit_shape_model.shape_characterized_definition :=:
            related_part_shape\Physical_unit_shape_model.shape_characterized_definition;
  END_ENTITY;


END_SCHEMA;

(*
   $Id: arm.exp,v 1.62 2006/10/17 06:58:17 liutkus Exp $
   ISO TC184/SC4/WG12 N4143 - ISO/TS 10303-1732 Physical unit usage view - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3579
*)

SCHEMA Physical_unit_usage_view_arm;

	USE FROM Analytical_model_arm;	-- ISO/TS 10303-1603
	USE FROM Feature_and_connection_zone_arm;	-- ISO/TS 10303-1671
	USE FROM Item_definition_structure_arm;	-- ISO/TS 10303-1345
	USE FROM Part_feature_location_arm;	-- ISO/TS 10303-1714
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
	USE FROM Shape_composition_arm;	-- ISO/TS 10303-1742
	USE FROM Derived_shape_element_arm; -- ISO/TS 10303-1130

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE material_state_change_enumeration = ENUMERATION OF
    (material_addition,
     material_removal);
  END_TYPE;

	TYPE physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT(Part_usage_view);
	END_TYPE;   

	TYPE puuv_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Part_feature);
	END_TYPE; 

	TYPE puuv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Part_feature,
	    Part_view_definition);
	END_TYPE; 

	TYPE puuv_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
		(Part_feature);
	END_TYPE;

	TYPE puuv_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Part_feature);
	END_TYPE;
	
  ENTITY Derived_part_view_definition_relationship
    SUBTYPE OF(View_definition_relationship);
     SELF\View_definition_relationship.relating_view : Part_view_definition;
     SELF\View_definition_relationship.related_view  : Part_view_definition;
    WHERE
      WR1: SIZEOF(get_derived_shape_element(SELF\View_definition_relationship.related_view)) > 0;
      WR2: SIZEOF(QUERY(gdrse <* get_derived_shape_element(SELF\View_definition_relationship.related_view) |
             (SIZEOF(QUERY(se <* gdrse.derived_from |
              SELF\View_definition_relationship.relating_view <> se.containing_shape.described_element
              )) = 0)
             )) = SIZEOF(get_derived_shape_element(SELF\View_definition_relationship.related_view));
      WR3 : NOT EXISTS(SELF\View_definition_relationship.relation_type);             
  END_ENTITY;

  ENTITY Connection_zone_in_usage_view
  	SUBTYPE OF (Connection_zone);
  	DERIVE
  		associated_definition : Part_usage_view := containing_shape.described_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.element_name);
  END_ENTITY; 

  ENTITY Connection_zone_map_identification;
      reference_connection_zone_shape : Usage_view_connection_zone_terminal_shape_relationship;
      mapped_connection_zone_shape    : Usage_view_connection_zone_terminal_shape_relationship;
    UNIQUE
      UR1 : reference_connection_zone_shape,
 mapped_connection_zone_shape;
    WHERE
      WR1 : reference_connection_zone_shape <> mapped_connection_zone_shape;
      WR2 : reference_connection_zone_shape.associated_connection_zone_shape_definition <> mapped_connection_zone_shape.associated_connection_zone_shape_definition;
  END_ENTITY;

  ENTITY Part_feature
    SUBTYPE OF (Shape_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition : Part_usage_view;
      material_state_change   : OPTIONAL material_state_change_enumeration;
      precedent_feature       : OPTIONAL Part_feature;
    INVERSE
      subsequent_feature      : SET [0:1] OF Part_feature for precedent_feature;
    WHERE
      WR1 : NOT EXISTS(precedent_feature) OR
                NOT( precedent_feature IN subsequent_feature);    
      WR2 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Part_feature_make_from_relationship
  	SUBTYPE OF (Shape_element_relationship);
      associated_make_from : View_definition_relationship;
      SELF\Shape_element_relationship.relating RENAMED reusable_feature	: Part_feature;
      SELF\Shape_element_relationship.related RENAMED resultant_feature	: Part_feature;
    UNIQUE
      UR1 : reusable_feature,
 resultant_feature;
    WHERE
      WR1 : reusable_feature :<>: resultant_feature;
      WR2 : reusable_feature.associated_definition :<>: resultant_feature.associated_definition;
  END_ENTITY;

  ENTITY Part_feature_template_definition
    SUBTYPE OF (Shape_feature_definition);
      id : STRING;
    UNIQUE
      UR1 : id; 
  END_ENTITY;

  ENTITY Part_feature_template_shape_model
    SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : NOT (SIZEOF(USEDIN(SELF, '')) > 1) OR 
       (SIZEOF(QUERY(foo <* USEDIN(SELF,'') | 
       NOT(SIZEOF(['PHYSICAL_UNIT_USAGE_VIEW_ARM.USAGE_CONCEPT_USAGE_RELATIONSHIP',
        'PHYSICAL_UNIT_USAGE_VIEW_ARM.SHAPE_DESCRIPTION_ASSOCIATION'] * TYPEOF(foo))= 1)
        )) 
        = 0);
      WR2 : NOT EXISTS(SELF\Representation.description);
      WR3: ((SIZEOF(USEDIN(SELF,
       'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0) OR
       (SIZEOF(QUERY(sda <* USEDIN(SELF,
       'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION') | 
       NOT (('SHAPE_PROPERTY_ASSIGNMENT_ARM.' +'ITEM_SHAPE' IN
       TYPEOF(sda.represented_characteristic)) AND 
       ('PHYSICAL_UNIT_USAGE_VIEW_ARM.' +'PART_FEATURE_TEMPLATE_DEFINITION' IN
       TYPEOF(sda.represented_characteristic.described_element)))
       )) = 0));
  END_ENTITY;

  ENTITY Part_usage_view
    SUBTYPE OF (Part_view_definition, Item_shape);
    DERIVE
    	SELF\Item_shape.described_element : shapeable_item := SELF;
  END_ENTITY;

  ENTITY Usage_view_connection_zone_terminal_shape_relationship;
      associating_terminal_shape                  : Part_feature_template_shape_model;
      associated_usage                            : Connection_zone_in_usage_view;
      associated_connection_zone_shape_definition : Geometric_model;
      associated_usage_placement                  : Axis_placement;
    WHERE
      WR1 : associating_terminal_shape :<>: associated_connection_zone_shape_definition;
  END_ENTITY;

  RULE unique_assembly_component_relationship FOR (Assembly_component_relationship);
   LOCAL
     gee : SET OF Product_view_definition := [];
     gei : SET OF Product_view_definition := [];
   END_LOCAL;
   REPEAT i := 1 to SIZEOF(Assembly_component_relationship) by 1;
     gee  := gee + Assembly_component_relationship[i]\View_definition_relationship.related_view;
     gei  := gei + Assembly_component_relationship[i]\View_definition_relationship.relating_view;
   END_REPEAT;  
  WHERE
   WR1 : SIZEOF(gee) = SIZEOF(gei);
  END_RULE;

FUNCTION get_derived_shape_element( input : Part_view_definition) : SET OF Derived_shape_element;
LOCAL
 is : SET OF Item_shape := bag_to_set(USEDIN(input, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE.DESCRIBED_ELEMENT'));
 se : SET OF Shape_element := [];
END_LOCAL; 
REPEAT i := 1 to SIZEOF(is) by 1;
   se  := se + bag_to_set(USEDIN(is[i], 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE'));
END_REPEAT;  

RETURN(QUERY(dse <* se | 'DERIVED_SHAPE_ELEMENT_ARM.DERIVED_SHAPE_ELEMENT' IN TYPEOF(se)));
END_FUNCTION;

END_SCHEMA;

(*
   $Id: arm.exp,v 1.16 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4146 - ISO/TS 10303-1733 Planned characteristic - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3543
*)

SCHEMA Planned_characteristic_arm;

	USE FROM Production_rule_arm;	-- ISO/TS 10303-1739
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
 
  TYPE evaluation_result_value = ENUMERATION OF
    (pass,
     fail,
     undefined);
  END_TYPE;

  TYPE evaluation_type = ENUMERATION OF
    (not_evaluatable,
     invalid,
     valid,
     to_be_evaluated);
  END_TYPE;

  ENTITY Evaluated_characteristic
    SUPERTYPE OF (Rule_based_evaluated_characteristic);
      planned_product_data          : Planned_characteristic;
      product_data_status           : evaluation_type;
      product_characterization_data : OPTIONAL SET[1:?] OF Property_value_representation;
      evaluation_result             : evaluation_result_value;
  END_ENTITY;

  ENTITY Evaluation_view_definition
    SUBTYPE OF (Product_view_definition);
      evaluated_product_definition : Product_view_definition;
      evaluation_data              : SET[1:?] OF Evaluated_characteristic;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(evaluated_product_definition);
  END_ENTITY;

  ENTITY Planned_characteristic;
      reference_requirement              : Requirement_assignment;
      planned_coordinated_characteristic : Property_value_representation;
  END_ENTITY;

  ENTITY Rule_based_evaluated_characteristic
    SUBTYPE OF (Evaluated_characteristic);
      evaluating_rule : Rule_definition;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.7 2006/03/24 18:56:42 thendrix Exp $
 ISO TC184/SC4/WG12 N4290 - ISO/TS 10303-1291 Plib class reference - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3239
*) 


SCHEMA Plib_class_reference_arm; 


ENTITY Plib_class_reference;
  code : STRING;
  supplier_bsu : STRING;
  version : STRING;
END_ENTITY;

END_SCHEMA;  -- Plib_class_reference_arm


(*
   $Id: arm.exp,v 1.18 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4152 - ISO/TS 10303-1735 Pre defined datum 2d symbol - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3549
*)

SCHEMA Pre_defined_datum_2d_symbol_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Layered_2d_shape_arm;	-- ISO/TS 10303-1693

	ENTITY Pre_defined_datum_2d_symbol
	  ABSTRACT SUPERTYPE OF (ONEOF(Pre_defined_parallel_datum_axis_2d_symbol, 
	  	Pre_defined_perpendicular_datum_axis_2d_symbol,  
	  	Pre_defined_perpendicular_datum_plane_2d_symbol))
	  SUBTYPE OF (Planar_shape_model, Non_feature_shape_model);	  	
		SELF\Non_feature_shape_model.associated_element : Datum_axis;
	WHERE
      WR1 : NOT EXISTS(SELF\Non_feature_shape_model.model_shape);
      WR2 : SELF\Geometric_model.context_of_items.dimension_count = 2;
      WR3 : NOT EXISTS(SELF\Representation.description);
	END_ENTITY;

  ENTITY Pre_defined_parallel_datum_axis_2d_symbol
    SUBTYPE OF (Pre_defined_datum_2d_symbol);
  END_ENTITY;

  ENTITY Pre_defined_perpendicular_datum_axis_2d_symbol
    SUBTYPE OF (Pre_defined_datum_2d_symbol);
  END_ENTITY;

  ENTITY Pre_defined_perpendicular_datum_plane_2d_symbol
    SUBTYPE OF (Pre_defined_datum_2d_symbol);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2006/01/20 08:43:41 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4155 - ISO/TS 10303-1736 Pre defined datum 3d symbol - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3555
*)

SCHEMA Pre_defined_datum_3d_symbol_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666

  ENTITY Pre_defined_datum_axis_3d_symbol
    SUBTYPE OF (Non_feature_shape_model);
      SELF\Non_feature_shape_model.associated_element : Datum_axis;
    WHERE
      WR1 : NOT EXISTS(SELF\Non_feature_shape_model.model_shape);
      WR2 : SELF\Geometric_model.context_of_items.dimension_count = 3;
      WR3 : NOT EXISTS(SELF\Representation.name);
      WR4 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Pre_defined_datum_plane_3d_symbol
    SUBTYPE OF (Non_feature_shape_model);
      SELF\Non_feature_shape_model.associated_element : Datum_plane;
    WHERE
      WR1 : NOT EXISTS(SELF\Non_feature_shape_model.model_shape);
      WR2 : SELF\Geometric_model.context_of_items.dimension_count = 3;
      WR3 : NOT EXISTS(SELF\Representation.name);
      WR4 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

	SUBTYPE_CONSTRAINT pdd3ds_non_feature_shape_model_subtypes FOR Non_feature_shape_model; 
	(ONEOF (Pre_defined_datum_axis_3d_symbol,
	 Pre_defined_datum_plane_3d_symbol));
	END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.18 2006/01/20 08:43:37 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4149 - ISO/TS 10303-1734 Pre defined datum symbol - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3552
*)

SCHEMA Pre_defined_datum_symbol_arm;

	USE FROM Layered_3d_shape_arm;	-- ISO/TS 10303-1694
	USE FROM Pre_defined_datum_2d_symbol_arm;	-- ISO/TS 10303-1735
	USE FROM Pre_defined_datum_3d_symbol_arm;	-- ISO/TS 10303-1736

	SUBTYPE_CONSTRAINT pdds_non_feature_shape_model_subtypes FOR Non_feature_shape_model; 
		(ONEOF (Design_view_level_non_feature_shape_model,
		Pre_defined_datum_axis_3d_symbol,
		 Pre_defined_datum_plane_3d_symbol,
		 Pre_defined_datum_2d_symbol,
		 Usage_view_level_non_feature_shape_model));
	END_SUBTYPE_CONSTRAINT;

	SUBTYPE_CONSTRAINT pdds_shape_definition_3d_intersection_subtypes FOR Shape_definition_3d_intersection;  
		(ONEOF (Pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship,
		Pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship,
		Pre_defined_parallel_datum_axis_symbol_3d_2d_relationship));
	END_SUBTYPE_CONSTRAINT;  

  ENTITY Pre_defined_parallel_datum_axis_symbol_3d_2d_relationship
    SUBTYPE OF (Shape_definition_3d_intersection);
		SELF\Shape_definition_3d_intersection.surface_intersection_result : Pre_defined_parallel_datum_axis_2d_symbol;
		SELF\Shape_definition_3d_intersection.projected_volume            : Pre_defined_datum_axis_3d_symbol;
  END_ENTITY;

  ENTITY Pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship
    SUBTYPE OF (Shape_definition_3d_intersection);
      SELF\Shape_definition_3d_intersection.surface_intersection_result : Pre_defined_perpendicular_datum_axis_2d_symbol;
      SELF\Shape_definition_3d_intersection.projected_volume            : Pre_defined_datum_axis_3d_symbol;
  END_ENTITY;

  ENTITY Pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship
    SUBTYPE OF (Shape_definition_3d_intersection);
      SELF\Shape_definition_3d_intersection.surface_intersection_result : Pre_defined_perpendicular_datum_plane_2d_symbol;
      SELF\Shape_definition_3d_intersection.projected_volume            : Pre_defined_datum_plane_3d_symbol;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.3 2006/10/09 15:31:45 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4224 - ISO/TS 10303-1760 Pre defined product data management specializations - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3691
*)
SCHEMA Pre_defined_product_data_management_specializations_arm;

USE FROM Activity_arm; -- ISO/TS 10303-1047
USE FROM Approval_arm; -- ISO/TS 10303-1012
USE FROM Date_time_assignment_arm; -- ISO/TS 10303-1014
USE FROM External_item_identification_assignment_arm; -- ISO/TS 10303-1128
USE FROM Person_organization_assignment_arm; -- ISO/TS 10303-1013
USE FROM Security_classification_arm; -- ISO/TS 10303-1015
USE FROM Work_request_arm; -- ISO/TS 10303-1042

CONSTANT
Pre_defined_activity_relationship_types : SET OF STRING := [
	'alternative',
	'decomposition',
	'derivation',
	'exclusiveness',
	'precedence',
	'sequence',
	'simultaneity'];

Pre_defined_security_classification_types : SET OF STRING := [
	'unclassified',
	'classified',
	'proprietary',
	'confidential',
	'secret',
	'top secret'];
	
Pre_defined_address_assignment_types : SET OF STRING := [
	'delivery address',
	'postal address',
	'visitor address'];
	
Pre_defined_organization_or_person_in_organization_assignment_types : SET OF STRING := [
	'author',
	'classification officer',
	'creator',
	'custodian',
	'customer',
	'design supplier',
	'editor',
	'id owner',
	'location',
	'manufacturer',
	'owner',
	'read access',
	'supplier',
	'wholesaler',
	'write access',
	'organization in contract'];

Pre_defined_approval_status_types : SET OF STRING := [
	'approved',
	'disapproved',
	'withdrawn',
	'not yet approved']	;

Pre_defined_approval_types : SET OF STRING := [
	'disposition',
	'equipment order',
	'planning'];
	
Pre_defined_date_or_date_time_assignment_types : SET OF STRING := [
	'creation',
	'installation',
	'production',
	'registration',
	'update',
	'planned',
	'actual',
	'start date',
	'end date',
	'release date',
	'request date'];
	
Pre_defined_work_request_types : SET OF STRING := [
	'change of standard',
	'cost reduction',
	'customer rejection',
	'customer request',
	'durability improvement',
	'government regulation',
	'production alignment',
	'procurement alignment',
	'production relief',
	'production requirement',
	'quality improvement',
	'security reason',
	'standardization',
	'supplier request',
	'technical improvement',
	'tool improvement'];
	
Pre_defined_work_request_status_types : SET OF STRING := [
	'in work',
	'issued',
	'proposed',
	'resolved'];
END_CONSTANT;

TYPE pdpdms_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
      Externally_defined_activity_relationship,
      Externally_defined_security_classification,
      Externally_defined_address_assignment,
      Externally_defined_organization_or_person_in_organization_assignment,
      Externally_defined_approval_status,
      Externally_defined_approval,
      Externally_defined_date_or_date_time_assignment,
      Externally_defined_work_request,
      Externally_defined_work_request_status);
END_TYPE; -- pie_external_identification_item
  
ENTITY Externally_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types);
END_ENTITY;

ENTITY Externally_defined_security_classification
    SUBTYPE OF (Security_classification);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Security_classification.classification_level IN Pre_defined_security_classification_types);
END_ENTITY;

ENTITY Externally_defined_address_assignment
    SUBTYPE OF (Address_assignment);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: (EXISTS(SELF\Address_assignment.address_type)) AND
       (NOT (SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types));
END_ENTITY;

ENTITY Externally_defined_organization_or_person_in_organization_assignment
  SUBTYPE OF (Organization_or_person_in_organization_assignment);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types);
END_ENTITY;

ENTITY Externally_defined_approval_status
  SUBTYPE OF (Approval_status);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Approval_status.status_name IN Pre_defined_approval_status_types);
END_ENTITY;

ENTITY Externally_defined_approval
  SUBTYPE OF (Approval);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Approval.purpose IN Pre_defined_approval_types);
END_ENTITY;

ENTITY Externally_defined_date_or_date_time_assignment
  SUBTYPE OF (Date_or_date_time_assignment);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types);
END_ENTITY;

ENTITY Externally_defined_work_request
  SUBTYPE OF (Work_request);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Work_request.purpose IN Pre_defined_work_request_types);
END_ENTITY;

ENTITY Externally_defined_work_request_status
  SUBTYPE OF (Work_request_status);
INVERSE
  source : External_source_identification FOR item;
WHERE
  WR1: NOT (SELF\Work_request_status.status IN Pre_defined_work_request_status_types);
END_ENTITY;

ENTITY Person_in_organization_relationship;
  description : OPTIONAL STRING; 
  relating : Person_in_organization;
  related : Person_in_organization;
  relation_type : STRING;
END_ENTITY;

ENTITY Pre_defined_activity_relationship
	SUBTYPE OF (Activity_relationship);
WHERE
  WR1: SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types;
END_ENTITY;

ENTITY Pre_defined_security_classification
  SUBTYPE OF (Security_classification);
WHERE
  WR1: SELF\Security_classification.classification_level IN Pre_defined_security_classification_types;
END_ENTITY;

ENTITY Pre_defined_address_assignment
  SUBTYPE OF (Address_assignment);
WHERE
  WR1: SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types;
END_ENTITY;

ENTITY Pre_defined_organization_or_person_in_organization_assignment
  SUBTYPE OF (Organization_or_person_in_organization_assignment);
WHERE
  WR1: SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types; 
END_ENTITY;

ENTITY Pre_defined_approval_status
  SUBTYPE OF (Approval_status);
WHERE
  WR1: SELF\Approval_status.status_name IN Pre_defined_approval_status_types;
END_ENTITY;

ENTITY Pre_defined_approval
  SUBTYPE OF (Approval);
WHERE
  WR1: SELF\Approval.purpose IN Pre_defined_approval_types;
END_ENTITY;

ENTITY Pre_defined_date_or_date_time_assignment
  SUBTYPE OF (Date_or_date_time_assignment);
WHERE
  WR1: SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types;
END_ENTITY;
(* not sure on 'planned', 'actual' because used in mapping of approval ... *)

ENTITY Pre_defined_work_request
  SUBTYPE OF (Work_request);
WHERE
  WR1: SELF\Work_request.purpose IN Pre_defined_work_request_types;
END_ENTITY;
  
ENTITY Pre_defined_work_request_status
  SUBTYPE OF (Work_request_status);
WHERE
  WR1: SELF\Work_request_status.status IN Pre_defined_work_request_status_types;
END_ENTITY;
 
SUBTYPE_CONSTRAINT pdpdms_activity_relationship_subtypes FOR Activity_relationship;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_activity_relationship,
           Externally_defined_activity_relationship);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_security_classification_subtypes FOR Security_classification;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_security_classification,
           Externally_defined_security_classification);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_address_assignment_subtypes FOR Address_assignment;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_address_assignment,
           Externally_defined_address_assignment);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_organization_or_person_in_organization_assignment_subtypes FOR Organization_or_person_in_organization_assignment;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_organization_or_person_in_organization_assignment,
           Externally_defined_organization_or_person_in_organization_assignment);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_approval_status_subtypes FOR Approval_status;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_approval_status,
           Externally_defined_approval_status);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_approval_subtypes FOR Approval;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_approval,
           Externally_defined_approval);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_date_or_date_time_assignment_subtypes FOR Date_or_date_time_assignment;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_date_or_date_time_assignment,
           Externally_defined_date_or_date_time_assignment);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_work_request_subtypes FOR Work_request;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_work_request,
           Externally_defined_work_request);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT pdpdms_work_request_status_subtypes FOR Work_request_status;
	ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_work_request_status,
           Externally_defined_work_request_status);
END_SUBTYPE_CONSTRAINT;
END_SCHEMA;
(*
   $Id: arm.exp,v 1.65 2006/11/02 23:30:39 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4158 - ISO/TS 10303-1737 Printed physical layout template - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3582
*)

SCHEMA Printed_physical_layout_template_arm;

	USE FROM Extended_geometric_tolerance_arm;	-- ISO/TS 10303-1666
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705
	USE FROM Part_template_2d_shape_arm; -- ISO/TS 10303-1716
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE pplt_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH 
		(Printed_part_template_terminal);
	END_TYPE;

	SUBTYPE_CONSTRAINT pplt_template_definition_subtypes FOR Template_definition; 
		ONEOF (Printed_part_template,
		 Non_conductive_cross_section_template);
	END_SUBTYPE_CONSTRAINT;

  TYPE printed_part_template_terminal_class = ENUMERATION OF
    (curve_edge_segment,
     surface_point,
     area_edge_segment,
     surface_area);
  END_TYPE;

  ENTITY Basic_multi_stratum_printed_part_template 
    SUBTYPE OF (Printed_part_template);
      material_stack : Library_stack_model;
      reference_template : Stratum_feature_template;
  END_ENTITY;

  ENTITY Functional_usage_view_to_printed_part_template_terminal_assignment;
      physical_usage_view_terminal   : Printed_part_template_terminal;
      functional_usage_view_terminal : Scalar_terminal_definition;
    UNIQUE
      UR1 : functional_usage_view_terminal,
 physical_usage_view_terminal;
  END_ENTITY;

  ENTITY Multi_stratum_printed_part_template
    SUBTYPE OF (Structured_printed_part_template, Multi_stratum_structured_template);
  END_ENTITY;

  ENTITY Non_conductive_cross_section_template
    SUBTYPE OF (Template_definition);
      template_technology : OPTIONAL SET[1:?] OF Stratum_technology;
      nominal_width       : Length_data_element;
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_connector_template
    SUBTYPE OF (Printed_part_template);
    INVERSE
      characterized_connector_terminal_relationship : SET[1:?] OF printed_connector_template_terminal_relationship FOR connector;
  END_ENTITY;

  ENTITY Printed_connector_template_terminal_relationship;
      join_terminal      : Printed_part_template_join_terminal;
      interface_terminal : Printed_part_template_interface_terminal;
      connector          : Printed_connector_template;
    UNIQUE
      UR1: join_terminal;
    WHERE
      WR1: join_terminal\Printed_part_template_terminal.associated_definition :=: connector;
      WR2: interface_terminal.associated_definition :=: connector;
  END_ENTITY;

  ENTITY Printed_part_cross_section_template
    SUBTYPE OF (Printed_part_template);
      horizontal_material_link                 : OPTIONAL SET[1:?] OF Printed_part_template_material_link;
      vertical_material_link                   : OPTIONAL SET[1:?] OF Printed_part_template_material_link;
      transmission_line_model                  : Analytical_model_definition;
      maximum_transmission_line_characteristic : OPTIONAL SET[1:?] OF Analytical_model_application;
      minimum_transmission_line_characteristic : OPTIONAL SET[1:?] OF Analytical_model_application;
      width                                    : Length_tolerance_characteristic;
      unit_length                              : Length_data_element;
    INVERSE
      SELF\Printed_part_template.access_mechanisms : SET[1:?] OF Printed_part_cross_section_template_terminal FOR associated_definition;
    WHERE
      WR1 : SIZEOF(QUERY(hml <* horizontal_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['right']))) = 0;
      WR2 : SIZEOF(QUERY(hml <* horizontal_material_link | NOT (hml.subsequent_material\Shape_element.element_name IN ['left']))) = 0;
      WR3 : SIZEOF(QUERY(hml <* vertical_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['bottom']))) = 0;
      WR4 : SIZEOF(QUERY(hml <* vertical_material_link | NOT (hml.precedent_material\Shape_element.element_name IN ['top']))) = 0;
      WR5 : SIZEOF(QUERY(hml <* horizontal_material_link |
              (SIZEOF(QUERY(vml <* vertical_material_link |
                          (vml :=: hml)
                    )) > 0)
                  )) = 0;
      WR6 : NOT EXISTS(SELF\Product_view_definition.name);
      WR7 : EXISTS(horizontal_material_link) OR EXISTS(vertical_material_link);
      WR8 : NOT ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_CONNECTOR_TEMPLATE' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Printed_part_cross_section_template_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Printed_part_template_terminal.associated_definition    : Printed_part_cross_section_template;
      material_to_left_of_terminal   : OPTIONAL Printed_part_template_material_link;
      material_to_right_of_terminal  : OPTIONAL Printed_part_template_material_link;
      material_to_top_of_terminal    : OPTIONAL Printed_part_template_material_link;
      material_to_bottom_of_terminal : OPTIONAL Printed_part_template_material_link;
    UNIQUE
      UR1 : associated_definition,
 material_to_left_of_terminal,
 material_to_right_of_terminal,
 material_to_top_of_terminal,
 material_to_bottom_of_terminal;
    WHERE
      WR1 : (SELF\Printed_part_template_terminal.connection_zone_category = curve_edge_segment) OR (SELF\Printed_part_template_terminal.connection_zone_category = area_edge_segment);
      WR2 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_right_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_right_of_terminal);
      WR3 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_top_of_terminal);
      WR4 : NOT (EXISTS(material_to_left_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_left_of_terminal :<>: material_to_bottom_of_terminal);
      WR5 : NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_top_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_top_of_terminal);
      WR6 : NOT (EXISTS(material_to_right_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_right_of_terminal :<>: material_to_bottom_of_terminal);
      WR7 : NOT (EXISTS(material_to_top_of_terminal) AND EXISTS(material_to_bottom_of_terminal)) OR (material_to_top_of_terminal :<>: material_to_bottom_of_terminal);
      WR8 : NOT EXISTS(material_to_left_of_terminal) OR  
                      (material_to_left_of_terminal\Printed_part_template_material_link.precedent_material\Shape_element.element_name = 'right');
      WR9 : NOT EXISTS(material_to_right_of_terminal) OR
                      (material_to_right_of_terminal\Printed_part_template_material_link.subsequent_material\Shape_element.element_name = 'left');
     WR10 : NOT EXISTS(material_to_bottom_of_terminal) OR
                      (material_to_bottom_of_terminal\Printed_part_template_material_link.subsequent_material\Shape_element.element_name = 'top');
     WR11 : NOT EXISTS(material_to_top_of_terminal) OR
                      (material_to_top_of_terminal\Printed_part_template_material_link.precedent_material\Shape_element.element_name = 'bottom');
  END_ENTITY;

  ENTITY Printed_part_template
   ABSTRACT SUPERTYPE OF (ONEOF (Basic_multi_stratum_printed_part_template,
    Structured_printed_part_template,Printed_part_cross_section_template) ANDOR Printed_connector_template)
      SUBTYPE OF (Template_definition);
         implemented_function : OPTIONAL Functional_unit_usage_view;
      INVERSE
        access_mechanisms : SET [1:?] OF Printed_part_template_terminal FOR associated_definition;
      WHERE
        WR1: (SIZEOF(QUERY(prpc <* USEDIN(defined_version.of_product,
            'PRODUCT_IDENTIFICATION_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS')
              | (prpc.category\Product_category.name = 'printed part'))) >= 0) OR 
            ('LAYOUT_MACRO_DEFINITION_ARM.LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN TYPEOF(SELF));
        WR2 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Printed_part_template_connected_terminals_definition;
      name                : STRING;   
      connected_terminals : SET[2:?] OF Printed_part_template_terminal;
    DERIVE
      scope : Printed_part_template := connected_terminals[1].associated_definition;
    UNIQUE
      UR1 : name, scope;
    WHERE
      WR1 : SIZEOF(QUERY(t <* connected_terminals | t.associated_definition :<>: scope)) = 0;
  END_ENTITY;

  ENTITY Printed_part_template_interface_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Printed_part_template_terminal.associated_definition : Printed_connector_template;
    INVERSE
      external_connector_function : SET[1:?] OF printed_connector_template_terminal_relationship FOR interface_terminal;
  END_ENTITY;

  ENTITY Printed_part_template_join_terminal
    SUBTYPE OF (Printed_part_template_terminal);
    INVERSE
      internal_connector_function : SET[0:1] OF printed_connector_template_terminal_relationship FOR join_terminal;
  END_ENTITY;

  ENTITY Printed_part_template_material;
      width             : Length_tolerance_characteristic;
      required_material : Stratum_technology;
    INVERSE
      boundary : SET[0:4] OF template_material_cross_section_boundary FOR associated_definition;
    WHERE
      WR1 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'top')) <= 1;
      WR2 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'bottom')) <= 1;
      WR3 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'left')) <= 1;
      WR4 : SIZEOF(QUERY(temp <* (USEDIN(SELF,
 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.' + 'ASSOCIATED_DEFINITION')) | temp\Shape_element.element_name = 'right')) <= 1;
  END_ENTITY;

  ENTITY Printed_part_template_material_link;
      precedent_material  : Template_material_cross_section_boundary;
      subsequent_material : Template_material_cross_section_boundary;
    UNIQUE
      UR1 : precedent_material, subsequent_material;
    WHERE
      WR1 : precedent_material :<>: subsequent_material;
      WR2 : precedent_material\Shape_element.element_name IN ['bottom', 'right'];
      WR3 : subsequent_material\Shape_element.element_name IN ['top', 'left'];
      WR4 : NOT((precedent_material\Shape_element.element_name IN ['bottom']) XOR (subsequent_material\Shape_element.element_name IN ['top']));
      WR5 : NOT((precedent_material\Shape_element.element_name IN ['right']) XOR (subsequent_material\Shape_element.element_name IN ['left']));
      WR6 : acyclic_printed_part_template_material_link(SELF,
        [subsequent_material], 
        'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.PRINTED_PART_TEMPLATE_MATERIAL_LINK');
  END_ENTITY;

  ENTITY Printed_part_template_terminal
    ABSTRACT SUPERTYPE OF (((ONEOF (Printed_part_template_join_terminal, Printed_part_template_interface_terminal))
      ANDOR (Printed_part_cross_section_template_terminal)) ANDOR Structured_printed_part_template_terminal)
    SUBTYPE OF (Shape_feature);
      SELF\Shape_element.containing_shape RENAMED associated_definition    : Printed_part_template;
      connection_zone_category : printed_part_template_terminal_class;
      SELF\Shape_feature.connection_area : OPTIONAL SET[1:?] OF Connection_zone_in_layout_template;      
    INVERSE
      connection_requirement            : SET[0:1] OF printed_part_template_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal    : SET[0:1] OF functional_usage_view_to_printed_part_template_terminal_assignment FOR physical_usage_view_terminal;
    UNIQUE
      UR1 : SELF\Shape_element.element_name, associated_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Shape_element.description);
  END_ENTITY;

  ENTITY Single_stratum_printed_part_template
    SUBTYPE OF (Structured_printed_part_template, Single_stratum_structured_template);
  END_ENTITY;
  
  ENTITY Structured_printed_part_template
    ABSTRACT SUPERTYPE OF (ONEOF (Single_stratum_printed_part_template, 
      Multi_stratum_printed_part_template))
    SUBTYPE OF (Printed_part_template, Structured_template);
    WHERE
      WR1 : SIZEOF(QUERY(t <* access_mechanisms |
            NOT ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL'
                  IN TYPEOF(t)))) = 0;
      WR2 : SIZEOF(QUERY(t <* SELF\Structured_template.templates |
            'PART_TEMPLATE_2D_SHAPE_ARM.STRUCTURED_TEMPLATE' IN TYPEOF(t.template))) = 0;
  END_ENTITY;

  ENTITY Structured_printed_part_template_terminal
    SUBTYPE OF (Printed_part_template_terminal);
      SELF\Printed_part_template_terminal.associated_definition : Structured_printed_part_template;
      associated_composition_relationship : Template_location_in_structured_template;
    WHERE
      WR1 : associated_composition_relationship.assembly :=: associated_definition;
      WR2 : TYPEOF(SELF) <> TYPEOF(SELF\Structured_printed_part_template_terminal);
  END_ENTITY;

  ENTITY Template_material_cross_section_boundary
    SUBTYPE OF (Non_feature_shape_element);
      associated_definition : Printed_part_template_material;
    UNIQUE
      UR1 : associated_definition, SELF\Shape_element.element_name;
    WHERE
      WR1 : SELF\Shape_element.element_name IN ['top', 'bottom', 'left', 'right'];
  END_ENTITY;

  FUNCTION acyclic_printed_part_template_material_link
    (relation : Printed_part_template_material_link; 
    relatives : SET[1:?] OF Template_material_cross_section_boundary; 
    specific_relation : STRING) : BOOLEAN; 
  LOCAL
     x : SET OF Printed_part_template_material_link := [];
  END_LOCAL;

    IF relation.subsequent_material IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.subsequent_material,
      'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_ARM.' +
      'PRINTED_PART_TEMPLATE_MATERIAL_LINK.' +
      'SUBSEQUENT_MATERIAL')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_printed_part_template_material_link(x[i], relatives +
        relation.subsequent_material, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;
  
END_SCHEMA;
(*
 $Id: arm.exp,v 1.15 2004/10/28 19:10:55 darla Exp $
 ISO TC184/SC4/WG12 N2970 - ISO/TS 10303-1040 Process property assignment - EXPRESS ARM
*)


SCHEMA Process_property_assignment_arm; 

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE characterized_activity_definition = EXTENSIBLE SELECT
   (Activity, 
    Activity_method);
END_TYPE; 

ENTITY Activity_property;
  name : STRING;
  description : STRING;
  described_element : characterized_activity_definition;
END_ENTITY;

ENTITY Activity_property_representation;
  description : OPTIONAL STRING;
  property : Activity_property;
  rep : Representation;
  role : STRING;
END_ENTITY;

ENTITY Applied_independent_activity_property
  SUBTYPE OF (Activity_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Activity_property.name : STRING := base_element_property.property_type;
END_ENTITY;

END_SCHEMA;  -- Process_property_assignment_arm


(*
 $Id: arm.exp,v 1.10 2004/10/22 14:42:52 darla Exp $
 ISO TC184/SC4/WG12 N1099 - ISO/TS 10303-1016 Product categorization - EXPRESS ARM
*)

SCHEMA Product_categorization_arm;   

ENTITY Product_category;  
  id		: OPTIONAL STRING;
  name	: STRING;
  description : OPTIONAL STRING;  
END_ENTITY;   

ENTITY Product_category_hierarchy;  
  super_category : Product_category;  
  sub_category   : Product_category;
END_ENTITY;   

END_SCHEMA;
(*
 $Id: arm.exp,v 1.12 2006/07/26 14:35:45 rugarcia Exp $
 ISO TC184/SC4/WG12 N2640 - ISO/TS 10303-1103 Product class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1586
*)

SCHEMA Product_class_arm;

USE FROM Identification_assignment_arm;

USE FROM Product_concept_identification_arm;

USE FROM Group_arm;

TYPE expression_operator = ENUMERATION OF (or_operator, and_operator, oneof_operator, not_operator);
END_TYPE;

TYPE specification_operand_select = SELECT
		(Specification_expression, Specification);
END_TYPE;

TYPE id_for_class = EXTENSIBLE SELECT BASED_ON identification_item WITH 
   (product_class);
END_TYPE; 

TYPE specification_for_category = EXTENSIBLE SELECT BASED_ON groupable_item;
END_TYPE;

 ENTITY Class_category_association;
  associated_product_class : Product_class;
  mandatory : BOOLEAN;
  associated_category : Specification_category;
 END_ENTITY;

 ENTITY Class_condition_association;
  condition_type : STRING;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_condition : Specification_expression;
 END_ENTITY;

 ENTITY Class_inclusion_association;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_inclusion : Specification_inclusion;
 END_ENTITY;

 ENTITY Class_specification_association;
  associated_product_class : Product_class;
  association_type : STRING;
  associated_specification : Specification;
 END_ENTITY;

ENTITY Product_class
  SUBTYPE OF (Product_concept);
  version_id : OPTIONAL STRING;
  level_type : OPTIONAL STRING;
WHERE
WR1: NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY;

 ENTITY Product_class_relationship;
  description : OPTIONAL STRING;
  relating : Product_class;
  related : Product_class;
  relation_type : STRING;
 END_ENTITY;

 ENTITY Specification;
  id : STRING;
  version_id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  category : Specification_category;
  package : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category;
  id : STRING;
  description : STRING;
  implicit_exclusive_condition : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category_hierarchy;
  sub_category : Specification_category;
  super_category : Specification_category;
 END_ENTITY;

 ENTITY Specification_expression;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  operation : expression_operator;
  operand : SET[1:?] OF specification_operand_select;
 WHERE
 WR1: (operation <> not_operator) OR (SIZEOF(operand)=1); 
 END_ENTITY;

 ENTITY Specification_inclusion;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  if_condition : specification_operand_select;
  included_specification : specification_operand_select;
 END_ENTITY;


END_SCHEMA;

(*
 $Id: arm.exp,v 1.5 2004/10/22 14:44:52 darla Exp $
 ISO TC184/SC4/WG12 N1177 - ISO/TS 10303-1060 Product concept identification - EXPRESS ARM
*)
   
SCHEMA Product_concept_identification_arm;
   
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;

   
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;

   
END_SCHEMA;

(*
$Id: arm.exp,v 1.7 2005/04/18 21:59:20 thendrix Exp $
ISO TC184/SC4/WG3 N1878 - ISO/TS 10303-1231 Product data management - EXPRESS ARM
Supersedes ISO TC184/SC4/WG3 N1485
*) 


SCHEMA Product_data_management_arm;

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049

USE FROM Approval_arm;    -- ISO/TS 10303-1012

USE FROM Assembly_structure_arm;    -- ISO/TS 10303-1026

USE FROM Certification_arm;    -- ISO/TS 10303-1044

USE FROM Class_arm;    -- ISO/TS 10303-1070

USE FROM Classification_assignment_arm;    -- ISO/TS 10303-1114

USE FROM Configuration_effectivity_arm;    -- ISO/TS 10303-1058

USE FROM Configuration_item_arm;    -- ISO/TS 10303-1056

USE FROM Contract_arm;    -- ISO/TS 10303-1062

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Document_management_arm;    -- ISO/TS 10303-1290

USE FROM Document_structure_arm;    -- ISO/TS 10303-1124

USE FROM Effectivity_application_arm;    -- ISO/TS 10303-1059

USE FROM Effectivity_arm;    -- ISO/TS 10303-1057

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Event_assignment_arm;    -- ISO/TS 10303-1364

USE FROM External_class_arm;    -- ISO/TS 10303-1275

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM External_model_arm;    -- ISO/TS 10303-1033

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Incomplete_data_reference_mechanism_arm;    -- ISO/TS 10303-1349

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036

USE FROM Independent_property_representation_arm;    -- ISO/TS 10303-1038

USE FROM Management_resource_information_arm;    -- ISO/TS 10303-1288

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Multi_linguism_arm;    -- ISO/TS 10303-1105

USE FROM Name_assignment_arm;    -- ISO/TS 10303-1340

USE FROM Part_definition_relationship_arm;    -- ISO/TS 10303-1055

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Process_property_assignment_arm;    -- ISO/TS 10303-1040

USE FROM Product_categorization_arm;    -- ISO/TS 10303-1016

USE FROM Product_concept_identification_arm;    -- ISO/TS 10303-1060

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_replacement_arm;    -- ISO/TS 10303-1046

USE FROM Product_structure_arm;    -- ISO/TS 10303-1134

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_properties_arm;    -- ISO/TS 10303-1034

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Project_arm;    -- ISO/TS 10303-1061

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Security_classification_arm;    -- ISO/TS 10303-1015

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032

USE FROM Single_part_representation_arm;    -- ISO/TS 10303-1133

USE FROM Time_interval_assignment_arm;    -- ISO/TS 10303-1365

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054

USE FROM Work_order_arm;    -- ISO/TS 10303-1043

USE FROM Work_request_arm;    -- ISO/TS 10303-1042


TYPE pdm_activity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_item WITH 
   (Item_usage_effectivity, 
    Product_version, 
    Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

TYPE pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON affected_item_select WITH 
   (Assigned_property, 
    Product_version, 
    Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

TYPE pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
   (Activity, 
    Applied_activity_assignment, 
    Item_usage_effectivity, 
    Work_request);
END_TYPE; 

TYPE pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON certification_item WITH 
   (Product_version_relationship);
END_TYPE; 

TYPE pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (Activity, 
    Activity_method, 
    Activity_method_assignment, 
    Activity_property, 
    Activity_relationship, 
    Address, 
    Address_assignment, 
    Affected_items_assignment, 
    Alternate_product_relationship, 
    Applied_activity_assignment, 
    Approval, 
    Approval_assignment, 
    Approval_relationship, 
    Approval_status, 
    Approving_person_organization, 
    Assembly_relationship_substitution, 
    Assigned_property, 
    Attribute_translation_assignment, 
    Calendar_date, 
    Certification, 
    Certification_assignment, 
    Class, 
    Context_dependent_unit, 
    Contract, 
    Contract_assignment, 
    Conversion_based_unit, 
    Date_or_date_time_assignment, 
    Date_time, 
    Derived_unit, 
    Directed_activity, 
    Document_assignment, 
    Effectivity, 
    Event, 
    Event_assignment, 
    External_source_identification, 
    File, 
    File_relationship, 
    Identification_assignment, 
    Independent_property, 
    Independent_property_relationship, 
    Independent_property_representation, 
    Language, 
    Numerical_item_with_unit, 
    Organization, 
    Organization_or_person_in_organization_assignment, 
    Organization_relationship, 
    Person, 
    Product, 
    Product_category, 
    Product_concept, 
    Product_configuration, 
    Product_version, 
    Product_version_relationship, 
    Product_view_definition, 
    Project, 
    Project_assignment, 
    Project_relationship, 
    Representation, 
    Representation_context, 
    Representation_item, 
    Security_classification, 
    Security_classification_assignment, 
    String_representation_item, 
    Uncertainty_with_unit, 
    Value_with_unit, 
    View_definition_context, 
    View_definition_relationship, 
    Work_order, 
    Work_request, 
    Work_request_status);
END_TYPE; 

TYPE pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_item WITH 
   (Activity, 
    Applied_activity_assignment, 
    Work_request);
END_TYPE; 

TYPE pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
   (Activity, 
    Activity_method, 
    Product_version_relationship, 
    Shape_element, 
    Shape_element_relationship, 
    Work_request);
END_TYPE; 

TYPE pdm_effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON effectivity_item WITH 
   (Product_version, 
    Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

TYPE pdm_event_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_item WITH 
   (Project);
END_TYPE; 

TYPE pdm_external_class_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH 
   (External_class_library);
END_TYPE; 

TYPE pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (Shape_element_relationship);
END_TYPE; 

TYPE pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Activity, 
    Applied_activity_assignment, 
    Approval, 
    Contract, 
    Product_configuration, 
    Security_classification, 
    Work_request);
END_TYPE; 

TYPE pdm_project_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON project_item WITH 
   (Activity, 
    Product_concept);
END_TYPE; 

TYPE pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
   (Assembly_component_relationship);
END_TYPE; 

TYPE pdm_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH 
   (Approval, 
    Approval_relationship, 
    Approval_status, 
    Certification, 
    Contract, 
    Document_assignment, 
    External_item_identification, 
    File_relationship, 
    Organization_relationship, 
    Person_in_organization, 
    Product, 
    Product_category, 
    Product_version, 
    Product_view_definition, 
    Project, 
    Project_assignment, 
    Project_relationship, 
    View_definition_relationship);
END_TYPE; 

TYPE pdm_time_interval_item = SELECT BASED_ON time_interval_item WITH 
   (Activity);
END_TYPE; 

END_SCHEMA;  -- Product_data_management_arm
(*
$Id: arm.exp,v 1.15 2005/06/02 20:42:28 thendrix Exp $
ISO TC184/SC4/WG12 N2925 - ISO/TS 10303-1017 Product identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1102
*)


SCHEMA Product_identification_arm;

USE FROM Product_categorization_arm;    -- ISO/TS 10303-1016


ENTITY Product;
  id : STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Product_category_assignment;
  category : Product_category;
  products : SET[1:?] OF Product;
END_ENTITY;

FUNCTION types_of_product
 (obj : Product) : SET OF STRING; 
 LOCAL
 	category_assignments: BAG OF Product_category_assignment;
 	categories: SET OF STRING:=[];
 	i: INTEGER;
 END_LOCAL;
 
 category_assignments := USEDIN(obj,'PRODUCT_IDENTIFICATION_ARM.' + 'PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS');
    
 REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments) BY 1;
       categories := categories + category_assignments[i].category.name;
 END_REPEAT;
 
 RETURN(categories);
       END_FUNCTION; 

END_SCHEMA;  -- Product_identification_arm
(*
   $Id: arm.exp,v 1.14 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4161 - ISO/TS 10303-1738 Product identification extension - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3585
*)

 SCHEMA Product_identification_extension_arm;

	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128
	USE FROM Product_view_definition_arm;	-- ISO/TS 10303-1019

 	TYPE pie_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Externally_defined_view_definition);
	END_TYPE;


  ENTITY Externally_defined_view_definition
    SUBTYPE OF (Product_view_definition);
    INVERSE
      source : External_source_identification FOR item;
  END_ENTITY;



  ENTITY Library_view_definition
    SUBTYPE OF (Externally_defined_view_definition);
    DERIVE
      library : STRING := SELF\Externally_defined_view_definition.source.source_id;
  END_ENTITY;

 END_SCHEMA;
(*
 $Id: arm.exp,v 1.7 2006/03/24 18:58:39 thendrix Exp $
 ISO TC184/SC4/WG12 N4360 - ISO/TS 10303-1046 Product replacement - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1144
*)
  
SCHEMA Product_replacement_arm;

USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026
USE FROM Product_identification_arm; -- ISO/TS 10303-1017
   
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;

   
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;

   
END_SCHEMA;
(*
 $Id: arm.exp,v 1.11 2004/02/29 13:11:05 robbod Exp $
 ISO TC184/SC4/WG12 N2546 - ISO/TS 10303-1134 Product structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1670
*) 


SCHEMA Product_structure_arm;

USE FROM Assembly_structure_arm;    -- ISO/TS 10303-1026

USE FROM Contextual_shape_positioning_arm;    -- ISO/TS 10303-1027

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Part_definition_relationship_arm;    -- ISO/TS 10303-1055

USE FROM Product_replacement_arm;    -- ISO/TS 10303-1046

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Single_part_representation_arm;    -- ISO/TS 10303-1133


TYPE ps_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (View_definition_relationship);
END_TYPE; 

ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;

END_SCHEMA;  -- Product_structure_arm

(*
 $Id: arm.exp,v 1.6 2004/01/13 10:15:26 robbod Exp $
 ISO TC184/SC4/WG12 N2527 - ISO/TS 10303-1018 Product version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1105
*) 


SCHEMA Product_version_arm; 

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017


ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;

END_SCHEMA;  -- Product_version_arm

(*
 $Id: arm.exp,v 1.10 2006/03/24 19:02:40 thendrix Exp $
 ISO TC184/SC4/WG12 N4354 - ISO/TS 10303-1020 Product version relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2937
*)

SCHEMA Product_version_relationship_arm; 

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;

END_SCHEMA;  -- Product_version_relationship_arm

(*
 $Id: arm.exp,v 1.8 2006/03/24 19:03:52 thendrix Exp $
 ISO TC184/SC4/WG12 N4351 - ISO/TS 10303-1019 Product view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1532
*)
   
SCHEMA Product_view_definition_arm;

USE FROM Product_version_arm;
         
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
   
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
   
END_SCHEMA;

(*
 $Id: arm.exp,v 1.12 2004/11/15 21:22:47 thendrix Exp $
ISO TC184/SC4/WG12 N3227 - ISO/TS 10303-1034 Product view definition properties - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1231
*) 


SCHEMA Product_view_definition_properties_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


TYPE product_property_assignment = EXTENSIBLE SELECT BASED_ON property_assignment_select WITH 
   (Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

END_SCHEMA;  -- Product_view_definition_properties_arm
(*
 $Id: arm.exp,v 1.10 2004/10/28 17:55:17 darla Exp $
 ISO TC184/SC4/WG12 N2939 - ISO/TS 10303-1041 Product view definition relationship - EXPRESS ARM
*)


SCHEMA Product_view_definition_relationship_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : Product_view_definition;
  related_view : Product_view_definition;
END_ENTITY;

ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;

END_SCHEMA;  -- Product_view_definition_relationship_arm
(*
   $Id: arm.exp,v 1.17 2006/10/13 09:52:21 liutkus Exp $
   ISO TC184/SC4/WG12 N4164 - ISO/TS 10303-1739 Production rule - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3588 
*)

SCHEMA Production_rule_arm;

REFERENCE FROM Product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

	USE FROM Specification_document_arm;    --  ISO/TS 10303-1747
	USE FROM Software_arm;	-- ISO/TS 10303-1746

	USE FROM Date_time_assignment_arm; -- ISO/TS 10303-1014
	USE FROM Activity_arm; -- ISO/TS 10303-1047

USE FROM Identification_assignment_arm;
USE FROM Product_identification_arm;

REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765


TYPE pr_identification_item = SELECT BASED_ON identification_item WITH 
   (Rule_set);
END_TYPE; 

TYPE pr_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH
   (Rule_action);
END_TYPE;


TYPE clause_select = SELECT (Simple_clause, Complex_clause);
END_TYPE;

TYPE constants = EXTENSIBLE SELECT (any_number_value, any_string_value, Logical_representation_item);
END_TYPE;

TYPE function_symbol = SELECT (any_string_value, built_in_functions);
END_TYPE;

TYPE built_in_functions = EXTENSIBLE ENUMERATION OF (attr_val);
END_TYPE;

TYPE expression_syntax = EXTENSIBLE ENUMERATION OF (express);
END_TYPE;

TYPE pr_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
   (Rule_set);
END_TYPE; 

TYPE predicate_symbol = STRING;
END_TYPE;

TYPE scope_select = SELECT (Rule_definition, Rule_set, Rule_set_group);
END_TYPE;

TYPE term_select = SELECT (Symbol, constants, Func, Scalar_variable, Row_value, Row_variable); 
END_TYPE;


ENTITY Abstract_variable
  ABSTRACT SUPERTYPE OF (ONEOF (Scalar_variable, Row_variable));
  name : STRING;
  scope : scope_select;
 UNIQUE 
  UR1 : name, scope;
END_ENTITY;

ENTITY Atomic_formula
  ABSTRACT SUPERTYPE OF (ONEOF (Rule_condition, Ground_fact));
  predicate_symbol : predicate_symbol;  
  terms : LIST OF term_select;
END_ENTITY;

ENTITY Attribute_assertion
  SUBTYPE OF (Fact_type);
   entity_type : STRING;
   attribute : STRING;
END_ENTITY; 

ENTITY Back_chaining_rule
  SUBTYPE OF (Rule_definition);
  head : Rule_condition;
  body : LIST OF Rule_condition;
 WHERE
  WR1: SELF.head.positive = TRUE;
  WR2:  local_vars_of(SELF.head) <= local_vars_of(SELF.body);
END_ENTITY;

ENTITY Complex_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Complex_conjunctive_clause, Complex_disjunctive_clause));
  clauses : LIST [2:?] OF clause_select;
END_ENTITY;

ENTITY Complex_conjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Complex_disjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Entity_assertion
  SUBTYPE OF (Fact_type);
END_ENTITY;

ENTITY Enum_reference_prefix;
 prefix : STRING;
END_ENTITY;

ENTITY Extent;
  source : STRING;
  variable_id : OPTIONAL STRING;
  query_expression : STRING;
  syntax : OPTIONAL expression_syntax;
END_ENTITY;

ENTITY Fact_type
  ABSTRACT SUPERTYPE OF (ONEOF (Entity_assertion, Attribute_assertion));
   source : Extent;
   predicate_symbol : STRING;
END_ENTITY;

ENTITY Forward_chaining_rule
  SUBTYPE OF (Rule_definition);
  premise : clause_Select; 
  conclusion : Literal_conjunction;
  WHERE
  WR1:  local_vars_of(SELF.conclusion) <= local_vars_of(SELF.premise);
END_ENTITY;

ENTITY Func;
 func_sym : function_symbol;
 terms : LIST OF term_select;
END_ENTITY;

ENTITY Global_assignment;
  variable : Abstract_variable;
  val : term_select;
 WHERE
  WR1: NOT(contains_variable(SELF.val));
END_ENTITY;

ENTITY Ground_fact
 SUBTYPE OF (Atomic_formula);
 WHERE
  WR1: SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r))) = 0;
END_ENTITY;

ENTITY Literal_conjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Literal_disjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Row_value;
  values : LIST OF term_select;
 WHERE
  WR1: SIZEOF(QUERY(v <* SELF.values | contains_variable(v))) = 0;
  WR2: SIZEOF(QUERY(v <* SELF.values | 'PRODUCTION_RULE_ARM.ROW_VALUE' IN TYPEOF(v))) = 0;
END_ENTITY;

ENTITY Row_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Rule_action
   ABSTRACT SUPERTYPE OF (ONEOF (Rule_submission,
                                 Rule_adoption,
                                 Rule_rejection,
                                 Rule_supersedence,
                                 Rule_creation,
                                 Rule_expiration,
                                 Rule_change_request,
                                 Rule_request,
                                 Rule_modification));
   subject_rule : Rule_version;
DERIVE
   subject_action_assignment : SET[0:?] OF Organization_or_person_in_organization_assignment := 
         bag_to_set(QUERY(temp <* USEDIN ( SELF , 'PERSON_ORGANIZATION_ASSIGNMENT_ARM.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS' ) 
                    | ( temp.role = 'subject action assignment')));
  UNIQUE
   UR1: SELF\Rule_action.subject_rule, SELF\Rule_action.subject_action_assignment;
  WHERE
   WR1: EXISTS (subject_action_assignment) AND (SIZEOF(subject_action_assignment) = 1 );
END_ENTITY;

ENTITY Rule_adoption
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_change_request
   SUBTYPE OF (Rule_action);
   change_reason : STRING;
END_ENTITY;

ENTITY Rule_condition
 SUBTYPE OF (Atomic_formula);
  positive : BOOLEAN;
END_ENTITY;

ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
END_ENTITY;
  
ENTITY Rule_definition
  ABSTRACT SUPERTYPE OF (ONEOF (Forward_chaining_rule, Back_chaining_rule))
  SUBTYPE OF (Rule_software_definition);
END_ENTITY; 

ENTITY Rule_expiration
   SUBTYPE OF (Rule_action);
   expiration_rationale : STRING;
END_ENTITY;

ENTITY Rule_justification
   SUBTYPE OF (Rule_action);
   justified_action : Rule_action;
   justification_rationale : STRING;
WHERE
   WR1: SELF <> justified_action ;
END_ENTITY;

ENTITY Rule_modification
   SUBTYPE OF (Rule_action);
   modification_rationale : Rule_change_request;
END_ENTITY;

ENTITY Rule_priority;
   priority : INTEGER;
   prioritized_rule : Rule_definition;
WHERE
   WR1: priority >= 0 ;
END_ENTITY;

ENTITY Rule_product
   SUBTYPE OF (Software);
WHERE
   WR1: SIZEOF ( [ 'rule' ] * types_of_product ( SELF ) ) = 1 ;
END_ENTITY;

ENTITY Rule_rejection
   SUBTYPE OF (Rule_action);
   rejection_reason : STRING;
END_ENTITY;

ENTITY Rule_request
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_set
   SUBTYPE OF (Rule_software_definition);
   conflict_resolution_strategy : OPTIONAL STRING;
   rule_member : SET[1:?] OF Rule_priority;
 DERIVE  
   engine: SET[1:1] OF Document_definition :=
		get_document_definition(SELF, 'engine', 
		'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
 INVERSE
   purpose : Identification_assignment FOR items;
 WHERE
   WR1: purpose.role = 'purpose' ;
END_ENTITY;

ENTITY Rule_set_group
  SUBTYPE OF (Rule_software_definition);
  elements : SET[2:?] OF Rule_set;
END_ENTITY;

ENTITY Rule_software_definition
   SUPERTYPE OF (ONEOF (Rule_definition,
                       Rule_set_group,
                       Rule_set))
   SUBTYPE OF (Software_definition);
   SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY;

ENTITY Rule_submission
   SUBTYPE OF (Rule_action);
   submission_rationale : STRING;
END_ENTITY;

ENTITY Rule_supersedence
   SUBTYPE OF (Rule_action);
   superseded_rule : Rule_version;
END_ENTITY;

ENTITY Rule_version
   SUBTYPE OF (Software_version);
   SELF\Product_version.of_product : Rule_product;
INVERSE
   management_action : SET[1:?] OF Rule_action FOR subject_rule;
   product_definition : SET[1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY;

ENTITY Scalar_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Simple_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Literal_conjunction, Literal_disjunction));
  formulas : LIST [1:?] OF Rule_condition;
END_ENTITY;

ENTITY Symbol
  SUBTYPE OF(Representation_item);
 UNIQUE
  UR1 : SELF\Representation_item.name;
END_ENTITY;

FUNCTION contains_variable (x : Term_select) : BOOLEAN;
  IF ('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(x)) THEN RETURN (TRUE);
      ELSE IF (('PRODUCTION_RULE_ARM.FUNC' IN TYPEOF(X)) AND
              (SIZEOF(QUERY(y <* x.terms | contains_variable(y))) > 0)) 
              THEN RETURN (TRUE);
              ELSE RETURN (FALSE);
           END_IF;
  END_IF;
END_FUNCTION;

FUNCTION local_vars_aux (thing : GENERIC; accum : SET [0:?] OF Scalar_variable) 
                                                : SET [0:?] OF Scalar_variable;
  LOCAL i,j,k : INTEGER; END_LOCAL;
  IF (('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(thing)) AND 
      ('PRODUCTION_RULE_ARM.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN accum := accum + thing;
   ELSE IF ('PRODUCTION_RULE_ARM.RULE_CONDITION' IN TYPEOF(thing))
        THEN REPEAT i := 1 TO HIINDEX(thing\Atomic_formula.terms);
                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);
             END_REPEAT;
        ELSE IF ('PRODUCTION_RULE_ARM.SIMPLE_CLAUSE' IN TYPEOF(thing))
             THEN REPEAT j := 1 TO HIINDEX(thing.formulas);
                        accum := local_vars_aux(thing.formulas[j],accum);
                  END_REPEAT;
             ELSE IF ('PRODUCTION_RULE_ARM.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);
                        accum := local_vars_aux(thing.clauses[k],accum);
                       END_REPEAT;
                  END_IF;
             END_IF;
        END_IF;
  END_IF;
  RETURN(accum);
END_FUNCTION;

FUNCTION local_vars_of (thing : GENERIC) : SET [0:?] OF Scalar_variable;
  LOCAL
    accum : SET [0:?] OF Scalar_variable := [];
  END_LOCAL;
  RETURN (local_vars_aux(thing, accum));
END_FUNCTION;

RULE max_one_entity_prefix FOR (Enum_reference_prefix);
 WHERE
   SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE)) <= 1;
END_RULE;

RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
   WR1: SIZEOF (QUERY ( pvd <* Product_view_definition | ( NOT('PRODUCTION_RULE_ARM.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN TYPEOF(pvd))) 
                       AND ('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF (pvd . defined_version)))) = 0 ;
END_RULE; 

RULE rule_version_constraint FOR (Product_version);
WHERE
   WR1: SIZEOF (QUERY(pv <* Product_version | (NOT('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF(pv))) 
                      AND ( 'PRODUCTION_RULE_ARM.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product)))) = 0 ;
END_RULE;

END_SCHEMA; 

(*
 $Id: arm.exp,v 1.12 2006/04/08 12:10:36 lothartklein Exp $
 ISO TC184/SC4/WG12 N4263 - ISO/TS 10303-1061 Project - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2930
*)


SCHEMA Project_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Event_assignment_arm;    -- ISO/TS 10303-1364

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE project_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;

ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;

END_SCHEMA;  -- Project_arm
(*
 $Id: arm.exp,v 1.14 2006/03/24 19:06:27 thendrix Exp $
 ISO TC184/SC4/WG12 N4374 - ISO/TS 10303-1030 Property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2972
*)


SCHEMA Property_assignment_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE property_assignment_select = EXTENSIBLE SELECT;
END_TYPE; 

TYPE represented_definition = EXTENSIBLE SELECT (
    Independent_property,
    Assigned_property);
END_TYPE;

ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;

ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;

ENTITY Property_definition_representation
  ABSTRACT SUPERTYPE;
    description : OPTIONAL STRING;
    definition : represented_definition;
    rep : Representation;
    role : OPTIONAL STRING;
END_ENTITY;

ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Assigned_property;
END_ENTITY;

END_SCHEMA;  -- Property_assignment_arm
(*
 $Id: arm.exp,v 1.8 2004/11/19 21:37:39 robbod Exp $
 ISO TC184/SC4/WG12 N3124 - ISO/TS 10303-1233 Requirement assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2345
*) 


SCHEMA Requirement_assignment_arm;

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


TYPE requirement_assignment_item = EXTENSIBLE SELECT;
END_TYPE; 

TYPE requirement_source_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Requirement_assignment;
  id : STRING;
  description : OPTIONAL STRING;
  assigned_requirement : Requirement_view_definition;
  assigned_to : requirement_assignment_item;
END_ENTITY;

ENTITY Requirement_source;
  id : STRING;
  description : OPTIONAL STRING;
  source : requirement_source_item;
  sourced_requirement : Requirement_view_definition;
END_ENTITY;

END_SCHEMA;  -- Requirement_assignment_arm
(*
   $Id: arm.exp,v 1.65 2006/10/12 11:25:59 liutkus Exp $
   ISO TC184/SC4/WG12 N4167 - ISO/TS 10303-1740 Requirement decomposition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3591
*)

SCHEMA Requirement_decomposition_arm;

	USE FROM Conductivity_material_aspects_arm;	-- ISO/TS 10303-1756
	USE FROM Elemental_geometric_shape_arm;	-- ISO/TS 10303-1004
	USE FROM Functional_specification_arm;	-- ISO/TS 10303-1679
	USE FROM Production_rule_arm;	-- ISO/TS 10303-1739
    USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141	

	REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

TYPE rd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH
  (Group,
  Group_relationship);
END_TYPE;

  TYPE material_conductivity_classification = ENUMERATION OF
    (conductive,
     resistive,
     semi_conductive,
     non_conductive);
  END_TYPE;

	TYPE characteristic_select = SELECT
	   (Property_value_representation,
	   characteristic);
	END_TYPE; 

	TYPE rd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Predefined_requirement_view_definition);
	END_TYPE; 

	TYPE rd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Predefined_requirement_view_definition);
	END_TYPE;

	TYPE rd_property_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON property_assignment_select WITH
		(Requirement_view_definition);
	END_TYPE;

	TYPE relationship_operation = ENUMERATION OF
    	(and_operation,
		or_operation);
	END_TYPE;

  ENTITY Constraint_occurrence
    SUPERTYPE OF (View_based_constraint_occurrence)
    SUBTYPE OF (Predefined_requirement_view_definition);
      logical_relation : OPTIONAL Complex_clause;
    WHERE
      WR1 : (('REQUIREMENT_DECOMPOSITION_ARM.' + 'VIEW_BASED_CONSTRAINT_OCCURRENCE') IN TYPEOF(SELF)) OR EXISTS(logical_relation);
      WR2 : NOT EXISTS(SELF\Product_view_definition.id);
  END_ENTITY;

  ENTITY Design_characteristic_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
  END_ENTITY;

  ENTITY View_based_constraint_occurrence
    SUPERTYPE OF (Shape_and_view_based_constraint_occurrence)
    SUBTYPE OF (Constraint_occurrence);
      constraining_part : Product_view_definition;
  END_ENTITY;

  ENTITY Material_electrical_conductivity_requirement_occurrence
    SUBTYPE OF (Predefined_requirement_view_definition);
      electrical_conductivity_characteristic : material_conductivity_classification;
  END_ENTITY;

  ENTITY Operational_requirement_occurrence_relationship
     SUBTYPE OF (Assigned_property, View_definition_relationship);
       SELF\View_definition_relationship.relating_view RENAMED operand_1 : Requirement_view_definition;
       SELF\View_definition_relationship.related_view RENAMED operand_2  : Requirement_view_definition;
       SELF\Assigned_property.described_element RENAMED result           : Requirement_view_definition;
       relationship_type                                                 : relationship_operation;
    WHERE
      WR1 : operand_1 :<>: operand_2;
  END_ENTITY;

  ENTITY Predefined_requirement_view_definition
	SUPERTYPE OF(ONEOF(Constraint_occurrence,
		 Design_characteristic_occurrence))
    SUBTYPE OF(Requirement_view_definition);
      required_analytical_representation  : OPTIONAL SET[1:?] OF Analytical_model_application;
      required_functional_specification   : OPTIONAL SET[1:?] OF Functional_specification;
      required_characteristic             : OPTIONAL characteristic_select;
    DERIVE
		requirement_specification: SET[1:?] OF Document_definition :=
  			get_document_definition(SELF, 'requirement specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SPECIFICATION_DEFINITION');
		reference_clause: SET[0:1] OF Document_definition :=
  			get_document_definition(SELF, 'reference clause', 
  			'SPECIFICATION_DOCUMENT_ARM.DOCUMENT_DEFINITION');
   INVERSE
	  required_material : SET [0:1] OF material_identification FOR items;      
    WHERE  
	  WR1 : NOT (SIZEOF(required_material) = 1) OR
            ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (required_material));
      WR2: SELF\Product_view_definition.initial_context.application_domain IN 
          ['mechanical', 'thermal', 'electromechancial', 'electromagnetic compatibility', 'electrical'];
      WR3: SELF\Product_view_definition.initial_context.life_cycle_stage in ['design', 'qualify', 'inspect', 'test'];
      WR4 : NOT EXISTS(SELF\Product_view_definition.name);
  END_ENTITY;

  ENTITY Requirement_view_definition_relationship
     SUBTYPE OF (View_definition_relationship);
       SELF\View_definition_relationship.relating_view RENAMED primary  : Requirement_view_definition;
       SELF\View_definition_relationship.related_view RENAMED secondary : Requirement_view_definition;
       SELF\View_definition_relationship.relation_type                  : STRING;
     WHERE
       WR1 : primary :<>: secondary;
       WR2 : SELF\View_definition_relationship.relation_type IN ['derived from', 'precedence', 'reference to', 'supplemental'];
  END_ENTITY;

  ENTITY Shape_and_view_based_constraint_occurrence
    SUBTYPE OF (View_based_constraint_occurrence);
      constraining_shape : SET[1:?] OF Geometric_model;
    WHERE
      WR1 : valid_constraining_shape(constraining_shape,
 SELF\View_based_constraint_occurrence.constraining_part);
  END_ENTITY;

  FUNCTION valid_constraining_shape(
    sd   : SET OF Geometric_model ;
    eepd : Product_view_definition
  ) : BOOLEAN;

    RETURN(TRUE);
  END_FUNCTION;

FUNCTION get_rvd(
	input : requirement_assignment_item;
	id : STRING
) : SET OF Requirement_view_definition; 

LOCAL
	rvd : SET[0:?] OF Requirement_view_definition := [];  --this gives us access to the information base
	ra : SET[0:?] OF Requirement_assignment :=[];
END_LOCAL;
	ra := bag_to_set((QUERY(rai <* USEDIN (input, 'REQUIREMENT_ASSIGNMENT_ARM.'+
	'REQUIREMENT_ASSIGNMENT.ASSIGNED_TO') | (rai.id = id))));

	-- iterate over ra
	REPEAT i := 1 to SIZEOF(ra) by 1;
		rvd := rvd + ra[i].assigned_requirement;
	END_REPEAT;

	RETURN(rvd);
END_FUNCTION;


END_SCHEMA;

(*
 $Id: arm.exp,v 1.10 2004/11/19 21:37:39 robbod Exp $
 ISO TC184/SC4/WG12 N3127 - ISO/TS 10303-1140 Requirement identification and version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2348
*) 


SCHEMA Requirement_identification_and_version_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020


TYPE requirement_identification_and_version_identification_item = SELECT BASED_ON identification_item WITH 
   (Requirement, 
    Requirement_version);
END_TYPE; 

ENTITY Requirement
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Requirement_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Requirement;
END_ENTITY;

ENTITY Requirement_version_relationship
  SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version RENAMED predecessor : Requirement_version;
  SELF\Product_version_relationship.related_version RENAMED successor : Requirement_version;
END_ENTITY;

END_SCHEMA;  -- Requirement_identification_and_version_arm

(*
 $Id: arm.exp,v 1.10 2006/03/24 19:08:22 thendrix Exp $
 ISO TC184/SC4/WG12 N4284 - ISO/TS 10303-1141 Requirement view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3133
*) 


SCHEMA Requirement_view_definition_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Requirement_identification_and_version_arm;    -- ISO/TS 10303-1140


TYPE requirement_view_definition_identification_item = SELECT BASED_ON identification_item WITH 
   (Requirement_view_definition);
END_TYPE; 

ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
    SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_arm

(*
 $Id: arm.exp,v 1.7 2004/11/19 21:37:40 robbod Exp $
 ISO TC184/SC4/WG12 N3136 - ISO/TS 10303-1142 Requirement view definition relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2357
*) 


SCHEMA Requirement_view_definition_relationship_arm;

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


ENTITY Requirement_collection_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED collection : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED member : Requirement_view_definition;
END_ENTITY;

ENTITY Tracing_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED traces_from : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED traces_to : Requirement_view_definition;
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_relationship_arm
(*
 $Id: arm.exp,v 1.11 2004/11/15 21:22:48 thendrix Exp $
ISO TC184/SC4/WG12 N3221 - ISO/TS 10303-1015 Security classification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1096
*) 


SCHEMA Security_classification_arm;


TYPE security_classification_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;

END_SCHEMA;  -- Security_classification_arm
(*
   $Id: arm.exp,v 1.27 2006/02/06 05:27:14 thomasrthurman Exp $
   ISO TC184/SC4/WG12 N4170 - ISO/TS 10303-1741 Sequential laminate assembly design - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3594
*)

SCHEMA Sequential_laminate_assembly_design_arm;

	USE FROM Assembly_module_with_interconnect_component_arm;	-- ISO/TS 10303-1643
	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

  TYPE slad_groupable_item = SELECT BASED_ON groupable_item WITH 
	(Group_relationship,
	Interconnect_module_stratum_assembly_relationship);
  END_TYPE; 
	
  TYPE slad_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH 
    (Definition_based_part_occurrence);
  END_TYPE;
  
  TYPE slad_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
     (Derived_laminate_assignment,
     Sequential_laminate_assembly_relationship);
  END_TYPE; 

  ENTITY Adjacent_stratum_surface_embedded_sequential_laminate_surface_definition
     SUBTYPE OF(Adjacent_stratum_surface_embedded_physical_component_surface_definition);
     WHERE
      WR1 : NOT ('COMPONENT_FEATURE_ARM.COMPONENT_FEATURE' IN TYPEOF(precedent_item)) OR 
                ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_SECONDARY_SURFACE' IN TYPEOF(precedent_item.definition));
      WR2 : NOT ('COMPONENT_FEATURE_ARM.COMPONENT_FEATURE' IN TYPEOF(subsequent_item)) OR 
                ('INTERCONNECT_MODULE_USAGE_VIEW_ARM.INTERCONNECT_MODULE_PRIMARY_SURFACE' IN TYPEOF(subsequent_item.definition));
  END_ENTITY;
  
  ENTITY Derived_laminate_assignment
    SUBTYPE OF(Group, Requirement_view_definition, Requirement_assignment);
     SELF\Group.elements RENAMED oem_requirement : SET [1:?] OF Interconnect_module_stratum_assembly_relationship;
     SELF\Requirement_assignment.assigned_to RENAMED solution_definition : Sequential_laminate_assembly_relationship;
    DERIVE
     SELF\Requirement_assignment.assigned_requirement : Derived_laminate_assignment := SELF;
    WHERE
      WR1 : SIZEOF(QUERY( oer <* oem_requirement | (oer.assembly = solution_definition.assembly))) = 0;
      WR2 : valid_oem_stratum_references(SELF);
  END_ENTITY;

  ENTITY Derived_stratum_relationship  
    SUBTYPE OF(View_definition_relationship);
      SELF\View_definition_relationship.relating_view RENAMED requirement_definition : Stratum;
      SELF\View_definition_relationship.related_view RENAMED solution_definition     : Sequential_laminate_stackup_component;
    WHERE
      WR1 : SIZEOF(USEDIN(solution_definition\Definition_based_product_occurrence.derived_from,
               'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS')) > 0;
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);             
  END_ENTITY;

  ENTITY Interconnect_module_component_stratum_based_terminal
    SUBTYPE OF (Interconnect_module_component_terminal);
      SELF\Component_feature.definition : Interconnect_module_stratum_based_terminal;
  END_ENTITY;

  ENTITY Interconnect_module_product_assembly_view_fabrication_joint;
      joined_terminal : SET[1:?] OF Interconnect_module_component_stratum_based_terminal;
  END_ENTITY;

  ENTITY Interconnect_module_stratum_based_terminal
    SUBTYPE OF (Interconnect_module_terminal);
    WHERE
      WR1 : SIZEOF(QUERY(imtscr <* USEDIN(SELF,
                        'INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 
                        'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.' + 
                        'RELATED') | 
                        NOT (SIZEOF(['INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 
                            'INTERCONNECT_MODULE_PRIMARY_SURFACE',
                            'INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 
                            'INTERCONNECT_MODULE_SECONDARY_SURFACE'] * TYPEOF(imtscr.relating)) = 1))) = 0;
      WR2 : SIZEOF(USEDIN(SELF,
                         'INTERCONNECT_MODULE_USAGE_VIEW_ARM.' + 
                         'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.' + 'RELATED')) = 1;
      WR3 : SIZEOF(QUERY(sct <* USEDIN(SELF,
          'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_ARM.' +
          'STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.DEFINED_PART_FEATURE') |
          'LAND_ARM.LAND' IN TYPEOF(sct.assigned_design_object)
             )) = 1;
  END_ENTITY;

  ENTITY Sequential_laminate_assembly_relationship
    SUBTYPE OF(Next_assembly_usage);
      SELF\View_definition_relationship.relating_view RENAMED assembly : Sequential_laminate_stackup_definition;
      SELF\View_definition_relationship.related_view RENAMED component : Sequential_laminate_stackup_component;
    WHERE
      WR1: related_view\Definition_based_product_occurrence.derived_from <> relating_view;
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);             
  END_ENTITY;

  ENTITY Sequential_laminate_stackup_component 
    SUBTYPE OF(Physical_component);
      SELF\Definition_based_product_occurrence.derived_from : Interconnect_module_usage_view;
    WHERE  
      WR1 : NOT EXISTS(SELF\Product_view_definition.name);
      WR2 : SIZEOF(USEDIN(derived_from, 'PHYSICAL_UNIT_DESIGN_VIEW_ARM.PART_DESIGN_VIEW.USAGE_VIEW')) > 0;
  END_ENTITY;

  ENTITY Sequential_laminate_stackup_definition 
    SUBTYPE of (Interconnect_module); --look at specifying life cycle attribute?
  END_ENTITY;

  ENTITY Stackup_requirement_to_design_relationship  
    SUBTYPE OF(View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Interconnect_module;
      SELF\View_definition_relationship.related_view : Sequential_laminate_stackup_definition;
    WHERE  
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);             
  END_ENTITY;

FUNCTION valid_oem_stratum_references(
    input : Derived_laminate_assignment
  ) : BOOLEAN;

    LOCAL
      imsa : SET OF Interconnect_module_stratum_assembly_relationship := input.oem_requirement;
      s1 : SET OF Stratum := [];
      ss : SET OF Stratum_surface := [];
      ssp : SET OF Stratum := [];
      sss : SET OF Stratum := [];
      assd : SET OF Adjacent_stratum_surface_definition := [];
      i       : INTEGER := 0;
    END_LOCAL;

    IF SIZEOF(imsa) > 0 THEN
      REPEAT i := 1 TO HIINDEX(imsa);
        s1 := s1 + imsa[i].component;
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX(s1);
        ss := ss + USEDIN(s1[i], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_SURFACE.OF_STRATUM');
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX(ss);
        IF ('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRATUM_AVERAGE_SURFACE' IN TYPEOF(ss[i]))
          THEN ss := ss - ss[i];
        END_IF; 
      END_REPEAT;  
      REPEAT i := 1 TO HIINDEX(ss);
         assd := assd + USEDIN(ss[i], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.ADJACENT_STRATUM_SURFACE_DEFINITION.PRECEDENT_SURFACE');
         assd := assd + USEDIN(ss[i], 'LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.ADJACENT_STRATUM_SURFACE_DEFINITION.SUBSEQUENT_SURFACE');
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX(assd);
         ssp := ssp + assd[i].precedent_surface.of_stratum;
         sss := sss + assd[i].subsequent_surface.of_stratum;
      END_REPEAT;
      IF ((SIZEOF(assd) + 1) = (SIZEOF(ssp) + SIZEOF(sss))) THEN
       RETURN(TRUE);
      ELSE
       RETURN(FALSE);         
      END_IF; 
    END_IF;
  END_FUNCTION;


END_SCHEMA;

(*
   $Id: arm.exp,v 1.18 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4173 - ISO/TS 10303-1742 Shape composition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3597
*)

SCHEMA Shape_composition_arm; 

  	USE FROM Shape_property_assignment_arm;	-- ISO/TS 10303-1032

  ENTITY Composite_group_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

  ENTITY Composite_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (Composite_group_shape_element,
 Composite_unit_shape_element))
    SUBTYPE OF (Shape_element);
    INVERSE
      composing_relationships : SET[2:?] OF shape_element_composing_relationship FOR relating;
  END_ENTITY;

  ENTITY Composite_unit_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

  ENTITY Shape_element_boundary_relationship
    SUBTYPE OF (Shape_element_relationship);
    WHERE
      WR1 : NOT EXISTS (SELF\Shape_element_relationship.relation_type);
  END_ENTITY;

  ENTITY Shape_element_composing_relationship
    SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\Shape_element_relationship.relating : Composite_shape_element;
  END_ENTITY;

  ENTITY Shape_element_constituent_relationship
    SUPERTYPE OF (Shape_element_composing_relationship)
    SUBTYPE OF (Shape_element_relationship);
    UNIQUE
      UR1 : related, relating;
    WHERE
      WR1 : SELF\Shape_element_relationship.related <> SELF\Shape_element_relationship.relating;
      WR2 : NOT EXISTS (SELF\Shape_element_relationship.relation_type);
  END_ENTITY;

  ENTITY Shape_element_locating_relationship
		SUBTYPE OF (Shape_element_constituent_relationship);
      SELF\Shape_element_relationship.relating RENAMED locating_shape_element	: Shape_element;
      SELF\Shape_element_relationship.related RENAMED located_shape_element		: Shape_element;
    UNIQUE
      UR1 : located_shape_element, locating_shape_element;
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.9 2006/06/22 08:29:47 liutkus Exp $
   ISO TC184/SC4/WG12 N4236 - ISO/TS 10303-1764 Shape feature - EXPRESS ARM
*)

SCHEMA Shape_feature_arm;
USE FROM Contextual_shape_positioning_arm;
REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765
USE FROM Property_assignment_arm;

  TYPE sf_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Shape_element, 
     Characterizable_object);
  END_TYPE; 

  ENTITY Shape_feature_definition
    SUBTYPE OF (Characterizable_object);
    DERIVE
      feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
    INVERSE
      of_shape : Item_shape FOR described_element;
    WHERE
      WR1: EXISTS(feature_model);
  END_ENTITY;

ENTITY Shape_feature_occurrence 
  ABSTRACT SUPERTYPE OF (ONEOF (Instanced_feature, Placed_feature))
  SUBTYPE OF (Shape_element);
END_ENTITY;

ENTITY Instanced_feature  
  SUBTYPE OF (Shape_feature_occurrence, Shape_feature_definition);
END_ENTITY;

ENTITY Placed_feature  
  SUBTYPE OF (Shape_feature_occurrence);
   definition : Shape_feature_definition;
END_ENTITY;

 FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
 LOCAL
  sda : SET OF Shape_description_association := [];
  gm : SET OF Geometric_model := [];
 END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'SHAPE_PROPERTY_ASSIGNMENT_ARM.' + 
	 	'SHAPE_DESCRIPTION_ASSOCIATION.' + 'REPRESENTED_CHARACTERISTIC'));
 
 REPEAT i := 1 to SIZEOF(sda) BY 1;
  gm := gm + sda[i].representation;
 END_REPEAT;
 RETURN(gm);
END_FUNCTION;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.14 2006/06/05 10:33:51 liutkus Exp $
   ISO TC184/SC4/WG12 N4176 - ISO/TS 10303-1743 Shape parameters - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3600
*)

SCHEMA Shape_parameters_arm;

	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128

  TYPE application_environment = EXTENSIBLE ENUMERATION OF
    (end_user_application,
     manufacturing);
  END_TYPE;

  TYPE keepout_product_design_object_category = ENUMERATION OF
    (assembly_module_assembly_component,
     assembly_module_component_feature,
     assembly_ee_material,
     interconnect_ee_material,
     interconnect_module_assembly_component,
     interconnect_module_via,
     interconnect_module_inter_stratum_feature,
     interconnect_module_cutout,
     interconnect_module_fill_area,
     interconnect_module_laminate_component,
     interconnect_module_stratum_feature);
  END_TYPE;

  TYPE material_condition = ENUMERATION OF
    (nominal_material_condition,
     minimum_material_condition,
     maximum_material_condition);
  END_TYPE;

  TYPE material_condition_property_names = ENUMERATION OF
    (maximum_material_principle,
     least_material_requirement);
  END_TYPE;

 	TYPE physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT;
	END_TYPE;

  TYPE predefined_keepout_purpose = ENUMERATION OF
    (thermal,
     generic_clearance,
     shock,
     vibration,
     electromagnetic_compatibility);
  END_TYPE;

(* Has to be moved to new module later *)
(*  ENTITY Geometric_model_characterization
   SUBTYPE OF (Representation_relationship); -- not Geometric_model
     SELF\Representation_relationship.rep1 RENAMED characterised_model : Geometric_model;
     SELF\Representation_relationship.rep2 RENAMED characteristic : Representation;
  END_ENTITY;
*)
END_SCHEMA;
 (*
 $Id: arm.exp,v 1.22 2006/03/24 19:08:57 thendrix Exp $
 ISO TC184/SC4/WG12 N4357 - ISO/TS 10303-1032 Shape property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2974
*)


SCHEMA Shape_property_assignment_arm; 

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

USE FROM External_model_arm;    -- ISO/TS 10303-1033

--USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

--USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Characterizable_object_arm;     -- ISO/TS 10303-xxxx


TYPE shape_dependent_select = SELECT
   (Item_shape, 
    Shape_element);
END_TYPE; 

TYPE shape_model = SELECT
   (External_geometric_model, 
    Geometric_model);
END_TYPE; 

TYPE shape_select = SELECT
   (Item_shape, 
    Shape_element, 
    Shape_element_relationship);
END_TYPE; 

TYPE shapeable_item = SELECT
   (Characterizable_object, 
    Product_view_definition, 
    View_definition_usage);
END_TYPE; 

ENTITY Contextual_item_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : View_definition_usage;
DERIVE
  shaped_product : Product_view_definition := described_element\View_definition_relationship.related_view;
END_ENTITY;

ENTITY Item_shape;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  described_element : shapeable_item;
END_ENTITY;

ENTITY Shape_dependent_property_representation;
  characteristic_type : STRING;
  description : OPTIONAL STRING;
  described_element : shape_dependent_select;
  property_representation : Representation;
END_ENTITY;

ENTITY Shape_description_association;
  represented_characteristic : shape_select;
  representation : shape_model;
  role : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Shape_element;
  id : OPTIONAL STRING;
  element_name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  containing_shape : Item_shape;
WHERE
  WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Shape_element_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating : Shape_element;
  related : Shape_element;
WHERE
  WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;

END_SCHEMA;  -- Shape_property_assignment_arm
(*
   $Id: arm.exp,v 1.11 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4182 - ISO/TS 10303-1745 Signal - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3606
*)

SCHEMA Signal_arm;

	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654

 	TYPE s_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Composite_signal_property_relationship,
		Signal_property,
		Signal);
	END_TYPE;

  ENTITY Composite_signal_property
    SUBTYPE OF (Signal_property);
    INVERSE
      signal_property_structure : SET[1:?] OF composite_signal_property_relationship FOR composition;
  END_ENTITY;

  ENTITY Composite_signal_property_relationship;
      composition                        	: Composite_signal_property;
      signal_property_structural_element 	: Signal_property;
    INVERSE
      aggregation_operation								: External_source_identification FOR item;
  END_ENTITY;

  ENTITY Signal;
      name : STRING;
    INVERSE
      signal_category	: External_source_identification FOR item;
    UNIQUE
      UR1 : name;  
  END_ENTITY;

  ENTITY Signal_property
    SUPERTYPE OF (Composite_signal_property);
      signal_property_representation : Characteristic_data_table;
      characterized_signal           : Signal;
    INVERSE
      signal_property_category				: External_source_identification FOR item;
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.6 2004/02/29 13:11:26 robbod Exp $
 ISO TC184/SC4/WG12 N2543 - ISO/TS 10303-1133 Single part representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1667
*) 


SCHEMA Single_part_representation_arm;

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106

USE FROM External_model_arm;    -- ISO/TS 10303-1033

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Part_view_definition_arm;    -- ISO/TS 10303-1023

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Product_categorization_arm;    -- ISO/TS 10303-1016

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032


TYPE spr_documented_element_select = SELECT BASED_ON documented_element_select WITH 
   (Part_view_definition, 
    Part, 
    Part_version);
END_TYPE; 

TYPE spr_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (Part_view_definition);
END_TYPE; 

TYPE spr_organization_or_person_in_organization_item = EXTENSIBLE SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Document, 
    Document_version, 
    Document_definition, 
    Part, 
    Part_view_definition, 
    Part_version);
END_TYPE; 

END_SCHEMA;  -- Single_part_representation_arm

(*
   $Id: arm.exp,v 1.21 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4185 - ISO/TS 10303-1746 Software - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3609
*)



SCHEMA Software_arm;

	USE FROM Document_definition_arm;	-- ISO/TS 10303-1123
	USE FROM Information_product_arm;	-- ISO/TS 10303-xxxx

REFERENCE FROM product_identification_arm(types_of_product); -- ISO/TS 10303-1017 

  ENTITY Software 
    SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  	WHERE 
	  WR1 :  SIZEOF(['software', 'information'] * types_of_product(SELF)) = 2;
  END_ENTITY;

(*  A member of Software_definition may also be a member of
    Information_definition_with_digital_file
*)
  ENTITY Software_definition 
    SUBTYPE OF (Information_definition);
    SELF\Product_view_definition.defined_version : Software_version;
  END_ENTITY;

  ENTITY Software_version
    SUBTYPE OF (Information_version);
    SELF\Product_version.of_product : Software;
  END_ENTITY;

RULE software_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;

(*
   $Id: arm.exp,v 1.36 2006/06/06 11:40:06 liutkus Exp $
   ISO TC184/SC4/WG12 N4188 - ISO/TS 10303-1747 Specification document - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3612
*)

SCHEMA Specification_document_arm;

	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654
	USE FROM Configuration_item_arm;	-- ISO/TS 10303-1056
	USE FROM Tagged_text_representation_arm; -- ISO/TS 10303-1366
	USE FROM Person_organization_assignment_arm;	-- ISO/TS 10303-1013

	REFERENCE FROM Characterizable_object_arm(bag_to_set);  -- ISO/TS 10303-1765

	TYPE sd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
		Product_configuration,
     	Product_view_definition,
     	Product_version,
     	Product);
	END_TYPE;

  ENTITY Design_specification
    SUPERTYPE OF (Interface_specification_document_definition)
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Fabrication_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;

  ENTITY Interface_specification_document_definition
    SUBTYPE OF (Design_specification);
  END_ENTITY;

  ENTITY Language_reference_manual
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Material_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Partial_document_with_structured_text_representation_assignment
    SUBTYPE OF(Partial_document_assignment);
      structured_portion : string_representation_item_select;
    UNIQUE
      UR1: SELF\Partial_document_assignment.document_portion,
      SELF\Document_assignment.assigned_document;
  END_ENTITY;

  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Specification_allocation
  	SUBTYPE OF (Document_assignment);
      SELF\Document_assignment.assigned_document RENAMED allocated_specification : Specification_definition;
  END_ENTITY;

  ENTITY Specification_definition
  	SUPERTYPE OF(ONEOF (Design_specification,
	 Process_specification,
	 Material_specification,
	 Test_specification,
	 Language_reference_manual))
    SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;

  ENTITY Surface_finish_specification
    SUBTYPE OF (Material_specification);
  END_ENTITY;

  ENTITY Test_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

FUNCTION get_document_definition(
	input : documented_element_select;
	role : STRING;
	type_name : STRING
) : SET OF Document_definition; 

LOCAL
	dd : SET[0:?] OF Document_definition := [];  --this gives us access to the information base
	da : SET[0:?] OF Document_assignment :=[];
END_LOCAL;
	da := bag_to_set(QUERY(dr <* USEDIN (input, 'DOCUMENT_ASSIGNMENT_ARM.'+
	'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO') | (dr.role = role)));

	-- iterate over da
	REPEAT i := 1 to SIZEOF(da) by 1;
		IF(type_name IN TYPEOF (da[i].assigned_document))THEN
			dd := dd + da[i].assigned_document;
		END_IF;
	END_REPEAT;
	RETURN(dd);
END_FUNCTION;
	
END_SCHEMA;
(*
 $Id: arm.exp,v 1.10 2005/07/04 15:12:30 rocc Exp $
 ISO TC184/SC4/WG12 N2589 - ISO/TS 10303-1104 Specified product - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1723
*)

SCHEMA Specified_product_arm;

USE FROM Configuration_item_arm;

USE FROM Product_class_arm;

USE FROM Product_version_arm;

ENTITY Product_specification
SUBTYPE OF (Product_configuration);
  version_id: OPTIONAL STRING;
  SELF\Product_configuration.item_context: Product_class;
  defining_specifications: SET [0:?] OF Specification;
END_ENTITY;

ENTITY Specification_based_product_version
SUBTYPE OF (Product_version);
INVERSE
  specification_source: Item_design_association FOR design;
WHERE
WR1 : 'SPECIFIED_PRODUCT_ARM.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
END_ENTITY;
END_SCHEMA;
(*
   $Id: arm.exp,v 1.19 2006/01/20 08:43:40 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4191 - ISO/TS 10303-1748 Stratum non planar shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3615
*)

SCHEMA Stratum_non_planar_shape_arm;

	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698
	USE FROM Manifold_surface_arm;	-- ISO/TS 10303-1509

  TYPE stratum_surface_shape_model_select = SELECT
    (Stratum_surface_shape_model,
     Stratum_average_surface_shape_model);
  END_TYPE;

  ENTITY Stratum_average_surface_shape_model
    SUBTYPE OF (Manifold_surface_shape_representation);
      of_surface : Stratum_average_surface;
    UNIQUE
    	UR1 : of_surface;  
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
      WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Stratum_feature_non_planar_2d_shape_model
    SUBTYPE OF (Manifold_surface_shape_representation);
      shape_characterized_component : Stratum_feature;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
      WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

  ENTITY Stratum_feature_shape_stratum_average_surface_shape_relationship;
      of_stratum_feature_shape         : Stratum_feature_non_planar_2d_shape_model;
      of_stratum_average_surface_shape : Stratum_average_surface_shape_model;
  END_ENTITY;

  ENTITY Stratum_feature_shape_stratum_surface_shape_relationship;
      of_stratum_feature_shape : Stratum_feature_non_planar_2d_shape_model;
      of_stratum_surface_shape : Stratum_surface_shape_model;
  END_ENTITY;
 
   ENTITY Stratum_surface_shape_model
    SUBTYPE OF (Manifold_surface_shape_representation);
      of_surface : Stratum_surface;
    UNIQUE
    	UR1 : of_surface;  
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
      WR2 : NOT EXISTS(SELF\Representation.description);
  END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:39 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4194 - ISO/TS 10303-1749 Styled curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3618
*)

SCHEMA Styled_curve_arm;

USE FROM Colour_arm;    -- ISO/TS 10303-1002

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

ENTITY Curve_appearance;
  colour : Colour;
  font : Curve_font;
  width : REAL;
END_ENTITY;

ENTITY Curve_font
  SUPERTYPE OF (ONEOF (Externally_defined_curve_font,
                       Predefined_curve_font,
                       User_defined_curve_font));
  curve_font_name : STRING;
END_ENTITY;

ENTITY Externally_defined_curve_font
  SUBTYPE OF (Curve_font);
  (* Do as in other AP210 modules IF possible *)
  curve_font_reference : STRING;
END_ENTITY;

ENTITY Predefined_curve_font
  SUBTYPE OF (Curve_font);
WHERE
  WR1: SELF.curve_font_name IN ['continuous', 'chain', 'chain double dash', 'dashed', 'dotted'];
END_ENTITY;

ENTITY Solid_curve_font
  SUBTYPE OF (Predefined_curve_font);
WHERE
  WR1: SELF.curve_font_name IN ['continuous'];
END_ENTITY;


ENTITY User_defined_curve_font
  SUBTYPE OF (Curve_font);
  pattern : SET[1:?] OF Curve_font_pattern;
  segment_symbol : Geometric_model;
END_ENTITY;

ENTITY Curve_font_pattern;
  on_segment : REAL;
  off_segment : REAL;
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.20 2006/10/12 09:00:34 liutkus Exp $
   ISO TC184/SC4/WG12 N3822 - ISO/TS 10303-1366 Tagged text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3706
*)

SCHEMA Tagged_text_representation_arm;

USE FROM Foundation_representation_arm;    --  ISO/TS 10303-1006

TYPE string_representation_item_select = SELECT(
    String_representation_item, 
    Included_text_block,
    Structured_text_composition);
END_TYPE; 

TYPE string_representation_item_list = LIST[1:?] OF
string_representation_item_select;
END_TYPE;

TYPE string_representation_item_set = SET[1:?] OF string_representation_item_select;
END_TYPE;

TYPE string_representation_item_list_or_set =
 SELECT(string_representation_item_list, string_representation_item_set); 
END_TYPE;

SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR String_representation_item;
  ONEOF (Tagged_text_item,
         Uniform_resource_identifier);
END_SUBTYPE_CONSTRAINT;

ENTITY Included_text_block
  SUBTYPE OF (Representation_item);
  source : Structured_text_representation;
END_ENTITY;

 ENTITY Structured_text_composition
   SUBTYPE OF (Representation_item);
  content: string_representation_item_list_or_set;
 END_ENTITY;

ENTITY Structured_text_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET [1:1] OF string_representation_item_select; 
END_ENTITY;

ENTITY Tagged_text_item
  SUBTYPE OF (String_representation_item);
WHERE
  WR1: SIZEOF (QUERY (using_rep <* USEDIN(SELF,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS') |
  NOT ('TAGGED_TEXT_REPRESENTATION_ARM.TAGGED_TEXT_FORMAT' IN
  TYPEOF (using_rep.context_of_items))
       )) = 0;
END_ENTITY;

ENTITY Tagged_text_format
  SUBTYPE OF (Representation_context);
END_ENTITY;

ENTITY Uniform_resource_identifier
  SUBTYPE OF (String_representation_item);
END_ENTITY;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.25 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4200 - ISO/TS 10303-1751 Test requirement allocation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3624
*)

SCHEMA Test_requirement_allocation_arm;

	USE FROM Functional_assignment_to_part_arm;	-- ISO/TS 10303-1674
	USE FROM Requirement_decomposition_arm;	-- ISO/TS 10303-1740
	USE FROM Functional_usage_view_arm;	-- ISO/TS 10303-1705

   TYPE tra_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
      (Product_version);
   END_TYPE; 

  ENTITY Test_requirement_allocation
    SUBTYPE OF (Requirement_assignment);
      SELF\Requirement_assignment.assigned_to : Product_version;
      analytical_model_based_test_access                : OPTIONAL SET[1:?] OF Analytical_model_port_assignment; --part_feature_model_port_assignment;
      functional_specification_based_test_access        : OPTIONAL SET[1:?] OF Functional_usage_view_to_part_terminal_assignment;
      SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property  : Predefined_requirement_view_definition;
    WHERE
      WR1 : EXISTS(analytical_model_based_test_access) XOR EXISTS(functional_specification_based_test_access);
      WR2 : NOT (EXISTS(functional_specification_based_test_access)) OR 
      (SIZEOF(QUERY(fa <* functional_specification_based_test_access | NOT 
      (fa.physical_usage_view_terminal\Shape_element.containing_shape.defined_version = SELF\Requirement_assignment.assigned_to))) = 0);
     WR3 : assigned_requirement_property\Product_view_definition.initial_context\View_definition_context.life_cycle_stage = 'test';
  END_ENTITY;

END_SCHEMA;  

(*
   $Id: arm.exp,v 1.7 2004/10/11 20:17:49 thendrix Exp $
   ISO TC184/SC4/WG12 N4218 - ISO/TS 10303-1757 Test select product - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3679
*)
SCHEMA Test_select_product_arm;

	USE FROM Product_replacement_arm;	-- ISO/TS 10303-1046

  ENTITY Test_select_product
    SUBTYPE OF (Alternate_product_relationship);
  WHERE
    WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;

END_SCHEMA;
(*
$Id: arm.exp,v 1.8 2006/04/06 07:11:06 liutkus Exp $
ISO TC184/SC4/WG12 N2696 - ISO/TS 10303-1136 Text appearance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1700
*) 


SCHEMA Text_appearance_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

TYPE composite_text_element_select = SELECT
   (Composite_presentable_text, 
    Presentable_text_item);
END_TYPE; 

TYPE font_select = SELECT (
  Draughting_pre_defined_text_font,
  Externally_defined_text_font);
END_TYPE;

ENTITY Composite_presentable_text
  SUBTYPE OF (Detailed_geometric_model_element);
  collected_text : LIST[2:?] OF composite_text_element_select;
END_ENTITY;

ENTITY Draughting_pre_defined_text_font;
END_ENTITY;

ENTITY Externally_defined_text_font;
  name : STRING;
END_ENTITY; 

ENTITY Presentable_text_item
  SUBTYPE OF (Detailed_geometric_model_element);
  literal : STRING;
  placement : Axis_placement;
  style : Text_style;
END_ENTITY;

ENTITY Text_literal_with_extent
  SUBTYPE OF (Presentable_text_item);
    font : font_select;
END_ENTITY;  

ENTITY Text_style;
  name : STRING;
END_ENTITY;

END_SCHEMA;  -- Text_appearance_arm
(*
   $Id: arm.exp,v 1.12 2006/04/06 07:11:06 liutkus Exp $
   ISO TC184/SC4/WG12 N4197 - ISO/TS 10303-1750 Text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3621
*)

SCHEMA Text_representation_arm;

	USE FROM Elemental_geometric_shape_arm;	-- ISO/TS 10303-1004
	USE FROM Text_appearance_arm;

  ENTITY Character_glyph_symbol
    SUBTYPE OF (Representation);
      SELF\Representation.name RENAMED character : STRING (1) FIXED; 
  END_ENTITY; 

  ENTITY Character_glyph_font_usage; 
    character : Character_glyph_symbol;
    font      : Text_font;
  END_ENTITY;

  ENTITY Text_font; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    glyphs: SET [1:?] OF Character_glyph_font_usage FOR font;
  END_ENTITY;

  ENTITY Text_font_in_family;
    font   : Text_font;
    family : Text_font_family;
  END_ENTITY;

  ENTITY Text_font_family; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    fonts: SET [1:?] OF Text_font_in_family FOR family;
  END_ENTITY; 

END_SCHEMA;
(*
   $Id: arm.exp,v 1.7 2006/01/20 08:43:42 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4203 - ISO/TS 10303-1752 Thermal network definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3627
*)

SCHEMA Thermal_network_definition_arm;

	USE FROM Network_functional_design_view_arm;	-- ISO/TS 10303-1704

  ENTITY Thermal_network_definition
    SUBTYPE OF (Functional_unit_network_definition);
  END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.14 2004/10/28 18:34:02 darla Exp $
 ISO TC184/SC4/WG12 N2955 - ISO/TS 10303-1065 Time interval - EXPRESS ARM
*)


SCHEMA Time_interval_arm; 

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;

ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;

END_SCHEMA;  -- Time_interval_arm
(*
 $Id: arm.exp,v 1.4 2003/10/14 14:32:49 robbod Exp $ 
 ISO TC184/SC4/WG12 N2120 - ISO/TS 10303-1365 Time interval assignment - EXPRESS ARM
*) 


SCHEMA Time_interval_assignment_arm; 

USE FROM Time_interval_arm;    -- ISO/TS 10303-1065


TYPE time_interval_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Time_interval_assignment;
  assigned_time_interval : Time_interval;
  role : Time_interval_role;
  items : SET[1:?] OF time_interval_item;
END_ENTITY;

ENTITY Time_interval_role;
  name : STRING;
  description : STRING;
END_ENTITY;

END_SCHEMA;  -- Time_interval_assignment_arm

(*
 $Id: arm.exp,v 1.17 2004/10/30 01:02:20 thendrix Exp $
ISO TC184/SC4/WG12 N2976 - ISO/TS 10303-1054 Value with unit - EXPRESS ARM
*) 


SCHEMA Value_with_unit_arm;


TYPE any_number_value = NUMBER;
END_TYPE; 

TYPE any_string_value = STRING;
END_TYPE; 

TYPE length_measure = REAL;
END_TYPE; 

TYPE measure_value = EXTENSIBLE SELECT
   (any_number_value, 
    any_string_value, 
    length_measure, 
    plane_angle_measure);
END_TYPE; 

TYPE plane_angle_measure = REAL;
END_TYPE; 

ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Derived_unit
  SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;

ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;

ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'VALUE_WITH_UNIT_ARM.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;

ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Unit
  SUPERTYPE OF (ONEOF (Amount_of_substance_unit,
                       Electric_current_unit,
                       Length_unit,
                       Luminous_intensity_unit,
                       Mass_unit,
                       Plane_angle_unit,
                       Ratio_unit,
                       Solid_angle_unit,
                       Thermodynamic_temperature_unit,
                       Time_unit));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;

ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;

END_SCHEMA;  -- Value_with_unit_arm
(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:38 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4206 - ISO/TS 10303-1753 Value with unit extension - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3630
*)

SCHEMA Value_with_unit_extension_arm;

	USE FROM Value_with_unit_arm;	-- ISO/TS 10303-1054
	
ENTITY Absorbed_dose_data_element
  SUBTYPE OF (Value_with_unit);
END_ENTITY;

  ENTITY Activity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Amount_of_substance_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Area_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Capacitance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Celsius_temperature_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Conductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Dose_equivalent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_charge_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_current_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Electromotive_force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Energy_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Frequency_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Illuminance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Inductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'VALUE_WITH_UNIT_ARM.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Luminous_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Luminous_intensity_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Magnetic_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Magnetic_flux_density_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Mass_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Power_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Pressure_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Ratio_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Scattering_parameter_data_element
    SUBTYPE OF (Value_with_unit);
      angle : REAL;
      SELF\Value_with_unit.value_component RENAMED radius : REAL;
    WHERE
      WR1 : radius >= 0;
      WR2 : {0<=angle<6.28218519999};
  END_ENTITY;

  ENTITY Solid_angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Thermodynamic_temperature_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Volume_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR Value_with_unit; 
  ONEOF (Absorbed_dose_data_element,
 Activity_data_element,
 Amount_of_substance_data_element,
 Angle_data_element,
 Area_data_element,
 Capacitance_data_element,
 Celsius_temperature_data_element,
 Conductance_data_element,
 Dose_equivalent_data_element,
 Electric_charge_data_element,
 Electric_current_data_element,
 Electromotive_force_data_element,
 Energy_data_element,
 Force_data_element,
 Frequency_data_element,
 Illuminance_data_element,
 Inductance_data_element,
 Length_data_element,
 Luminous_flux_data_element,
 Luminous_intensity_data_element,
 Magnetic_flux_data_element,
 Magnetic_flux_density_data_element,
 Mass_data_element,
 Power_data_element,
 Pressure_data_element,
 Ratio_data_element,
 Resistance_data_element,
 Scattering_parameter_data_element,
 Solid_angle_data_element,
 Thermodynamic_temperature_data_element,
 Volume_data_element); 
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   $Id: arm.exp,v 1.13 2006/01/20 08:43:43 liutkuviene Exp $
   ISO TC184/SC4/WG12 N4209 - ISO/TS 10303-1754 Via component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3633
*)
SCHEMA Via_component_arm;

	USE FROM Interconnect_module_connection_routing_arm;	-- ISO/TS 10303-1684
	USE FROM Layered_interconnect_module_design_arm;	-- ISO/TS 10303-1698

  ENTITY Blind_via
    ABSTRACT SUPERTYPE OF (ONEOF (Bonded_conductive_base_blind_via,
 Non_conductive_base_blind_via,
 Plated_conductive_base_blind_via))
    SUBTYPE OF (Via);
  END_ENTITY;

  ENTITY Bonded_conductive_base_blind_via
    SUBTYPE OF (Blind_via);
      features_join : Stratum_feature_conductive_join;
    UNIQUE
    	UR1 : features_join;
  END_ENTITY;

  ENTITY Buried_via
    SUBTYPE OF (Via);
  END_ENTITY;
  
  ENTITY Interfacial_connection
    SUBTYPE OF (Via);
  END_ENTITY;

  ENTITY Non_conductive_base_blind_via
    SUBTYPE OF (Blind_via);
  END_ENTITY;

  ENTITY Plated_conductive_base_blind_via
    SUBTYPE OF (Blind_via);
  END_ENTITY;

 SUBTYPE_CONSTRAINT via_subtypes FOR Via;   
 	(ONEOF (Blind_via,
 	Buried_via,
 	Interfacial_connection));
 END_SUBTYPE_CONSTRAINT;  

END_SCHEMA;
(*
 $Id: arm.exp,v 1.6 2005/07/04 15:13:17 rocc Exp $
 ISO TC184/SC4/WG12 N2625 - ISO/TS 10303-1347 Wireframe 2d - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1775
*)

SCHEMA Wireframe_2d_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Geometrically_bounded_2d_wireframe_shape_representation
  SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 $Id: arm.exp,v 1.13 2004/10/28 18:03:55 darla Exp $
 ISO TC184/SC4/WG12 N2945 - ISO/TS 10303-1043 Work order - EXPRESS ARM
*)


SCHEMA Work_order_arm; 

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Work_request_arm;    -- ISO/TS 10303-1042


ENTITY Directed_activity
  SUBTYPE OF (Activity);
  directive : Work_order;
END_ENTITY;

ENTITY Work_order;
  name : STRING;
  description : OPTIONAL STRING;
  in_response_to : SET[0:?] OF Work_request;
END_ENTITY;

END_SCHEMA;  -- Work_order_arm
(*
 $Id: arm.exp,v 1.18 2004/10/28 18:13:19 darla Exp $
 ISO TC184/SC4/WG12 N2947 - ISO/TS 10303-1042 Work request - EXPRESS ARM
*)



SCHEMA Work_request_arm; 

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE affected_item_select = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;

ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;

ENTITY Work_request;
  request_id : STRING;
  version_id : STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

ENTITY Work_request_status;
  status : STRING;
  work_request : Work_request;
END_ENTITY;

END_SCHEMA;  -- Work_request_arm

