<!DOCTYPE html
PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<!-- $Id: introduction.htm,v 1.0 2002-06-06 07:57:58+01 rob Exp rob $ -->
<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>GraphicalExpress Introduction</TITLE>
<link rel="stylesheet" type="text/css" href="css/ge.css">
  <SCRIPT language="JavaScript">
    <!--
          function swap(ShowDiv, HideDiv) {
            show(ShowDiv) ;
            hide(HideDiv) ;
          }

          function show(DivID) {
            DivID.style.display="block";
          }

          function hide(DivID) {
            DivID.style.display="none";
          }
        --></SCRIPT>

</HEAD>
<BODY>
  <table border="0" cellspacing="0" cellpadding="0">
    <tr>          
    <td width="300">
      <a href="http://www.eurostep.com">
        <img 
          align="left" 
          border="0"
          width="200" 
          height="40"
          src="./images/eurostep.gif" 
          alt="eurostep"/>
      </a>
    </td>
      <td width="300" align="center">
        <h2>Getting started with GraphicalExpress</h2>
      </td>
    </tr>    
  </table>
  <hr/>

  <!--
  <center>
    <small>
      [
      <a href="#Introduction">Introduction</a>
      &nbsp;|&nbsp;
      <A href="javascript:swap(Installation, NoInstallation);">
        Installation
      </A>
      &nbsp;|&nbsp;
  <a href="index.htm">Help index</a>
      ]
    </small>
  </center>
-->

  <!-- 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       INTRODUCTION 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       -->
  <SPAN id="Introduction" STYLE="display:none">
    <A href="javascript:swap(NoIntroduction, Introduction);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/> 
        Introduction
      </h2>
    </A>
    <blockquote>
      GraphicalExpress is an EXPRESS modelling tool developed by Eurostep 
      <a href="http://www.eurostep.com">http://www.eurostep.com</a>
      <p>
        It is an extension to VISIO that provides an EXPRESS-G
        template for building EXPRESS models. 
      </p>
      <p>
        The development process is to use the EXPRESS-G template to draw and
        document an EXPRESS-G diagram. Then export the model as EXPRESS,
        EXPRESS-G or XML. This ensures that the EXPRESS-G model, the EXPRESS
        and documentation are all consistent. 
      </p>
    </blockquote>
  </SPAN>

  <SPAN id="NoIntroduction">
    <A href="javascript:swap(Introduction, NoIntroduction);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/> 
        Introduction
      </h2>
    </A>
  </SPAN>


  <!-- 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       SYSTEM REQUIREMENTS 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       -->
  <DIV id="SystemRequirements" STYLE="display:none">
    <A href="javascript:swap(NoSystemRequirements, SystemRequirements);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/> 
        System Requirements
      </h2>
    </A>
    <blockquote>
      <h3>VISIO</h3>
      GraphicalExpress is an extension to VISIO and is supported in the
      following versions: 
      <ul>
        <li>
          VISIO5.0c Professional and Enterprise
        </li>
        <li>
          VISIO 2000 Professional and Enterprise
        </li>
        <li>
          VISIO 2002 Professional and Enterprise
        </li>      
      </ul>
      <p>
        It is recommended that the VISIO 2002 is used as this is the
        version that will be supported in the future. 
      </p>
      <h3>XML</h3>
      GraphicalExpress can be used to publish an EXPRESS model (including the
      EXPRESS-G) as XML. A set of XSL stylesheets have been provided for
      displaying the XML in a browser. It is recommended that a browser that
      support XML and XSL is used such as Internet Explorer V6.
      
      <h3>JScript</h3>
      If GraphicalExpress is going to be used for publishing EXPRESS for the
      ISO modules, then a JScript will need to be executed. This assumes that
      JScript is installed on the machine. The later versions of windows have
      this installed be default. 
      <p>
        To test run a DOS command (Start->run>command)
        and then <code>cscript</code>.
    </p>
    <p>
      If CScript is not present on the machine, it can be down loaded from
      Microsoft:
      <small>
        <a href="http://msdn.microsoft.com/downloads/default.asp?url=/downloads/topic.asp?url=/msdn-files/028/001/175/topic.xml">http://msdn.microsoft.com/downloads/default.asp?url=/downloads/topic.asp?url=/msdn-files/028/001/175/topic.xml</a>        
      </small>
    </p>
  </blockquote>
  </DIV>

  <DIV id="NoSystemRequirements">
    <A href="javascript:swap(SystemRequirements, NoSystemRequirements);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/> 
        System Requirements
      </h2>
    </A>
  </DIV>




  <!-- 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       INSTALLATION 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       -->
  <DIV id="Installation" STYLE="display:none">
    <A href="javascript:swap(NoInstallation, Installation);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/> 
        Installation
      </h2>
    </A>
    <blockquote>
      <p>
        First, ensure that any previous version of GraphicalExpress is
        uninstalled.
      </p>
      <p>
        Then run the installation script: GraphicalEXPRESS.msi
      </p>
      <p>
        Having installed GraphicalExpress, check that the installation is
        complete. 
      </p>
      <p>
        Start VISIO and check that there is a set of <code>"Information
      model"</code> templates containing <code>"EXPRESS-G new"</code>.
      </p>
      <p>
        To see this, go to <code>"File->New"</code>. If you do not see
        Information Model, you should force VISIO to rebuild its directory
      cache. In VISIO, select <code>"Tools->Options"</code> then 
      <code>"FilePaths"</code>.
        Delete and replace a letter in the <code>Add-ons</code> field. Note:
      you should not change the entry, just make VISIO think that you have.
      </p>
    <p>
      Press OK and VISO should start rebuilding its directory cache. Once it
      is finished you should see <code>"Information model"</code> templates
    containing <code>"EXPRESS-G new"</code>
    </p>
  </blockquote>
</DIV>

  <DIV id="NoInstallation">
    <A href="javascript:swap(Installation, NoInstallation);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/> 
        Installation
      </h2>
    </A>
  </DIV>
  

  <!-- CreatingExpress -->
  <DIV id="CreateExpress" STYLE="display:none">
    <A href="javascript:swap(NoCreateExpress, CreateExpress);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/> 
        Creating an Express model
      </h2>
    </A>
    <blockquote>
      <p>
        In order to create a new EXPRESS model, start VISIO and select the 
      <code>"Information model"</code> templates and then <code>"EXPRESS-G
      new"</code>. <emphasis>Note: There is an <code>"EXPRESS-G"</code>
      template under 
      <code>"Software"</code> This is provided as standard with VISIO. It does
      not support GraphicalExpress.</emphasis>
    </p>
    <p>
      You will then be prompted to choose the EXPRESS edition that you wish
      to use to build you EXPRESS model. For module development, choose
      "Proposed EXPRESS amendment: ISO DAM 10303-1.
    </p>
    <p>
      Once the diagram is open you need to start creating the necessary
      schemas. GraphicalExpress maintains a single page which displays
      the schemas in the EXPRESS model. Each schema then has a number of pages 
      associated with it where the EXPRESS for that schema
      is drawn.
    </p>
    <p>
      To create a schema, drag the Schema icon from the "EXPRESS-G-schema
      level diagram" template (shown below) on to the page.
    </p>
    <img src="schematmpl.jpg" border="false"/>
    <p>You will then be prompted for the Schema name and description.</p>
    <img src="schemabox.jpg" border="false"/>
    <p>
    Having created the schema, you can then start creating the EXPRESS
    objects in the schema. Select the schema icon on the page, right mouse
    click, and "Page 1" from the menu, this is the first page of the schema. 
    </p>
    <p>
      The "EXPRESS entity level template" will now be open.
    </p>
    <img src="entitytmpl.jpg"/>
    <p>
      To create an entity drag the entity icon onto the page.
    </p>
    <p>
      To add attributes to the entity drag an attribute relation onto the
      page and connect to the entity box. The other end of the relation
      should be attached the type of the attribute, a simple type, entity etc. 
    </p>
    </blockquote>
  </DIV>

  <DIV id="NoCreateExpress">
    <A href="javascript:swap(CreateExpress, NoCreateExpress);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/>
        Creating an Express model
      </h2>
    </A>
  </DIV>



  <!-- ExportExpress-->
  <DIV id="ExportExpress" STYLE="display:none">
    <A href="javascript:swap(NoExportExpress, ExportExpress);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/>
        Exporting the Express
      </h2>
    </A>
    <blockquote>
      To export the EXPRESS-G as an ASCII EXPRESS model, use the EXPRESS-G
      menu and select "Export to EXPRESS file".
    </blockquote>
  </DIV>

  <DIV id="NoExportExpress" STYLE="display:none STYLE="display:none">
    <A href="javascript:swap(ExportExpress, NoExportExpress);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/>
        Exporting the Express
      </h2>
    </A>
  </DIV>


  <!-- PubExpressXML -->
  <DIV id="PubExpressXML" STYLE="display:none">
    <A href="javascript:swap(NoPubExpressXML, PubExpressXML);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/>
        Publishing the Express as XML
      </h2>
    </A>
    <blockquote>
      To publish the EXPRESS-G as XML model, use the EXPRESS-G
      menu and select "Publish as XML".
    </blockquote>
  </DIV>

  <DIV id="NoPubExpressXML">
    <A href="javascript:swap(PubExpressXML, NoPubExpressXML);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/> 
        Publishing the Express as XML
      </h2>
    </A>
  </DIV>


  <!-- MODULE XML -->
  <DIV id="PubModXML" STYLE="display:none">
    <A href="javascript:swap(NoPubModXML, PubModXML);">
      <h2>
        <IMG src="./css/folder_open.gif" border="false"/>
        Generating an ISO module from the XML
      </h2>
    </A>
    <blockquote>
      By default GraphicalExpress will publish all of the schemas and
      EXPRESS-G when publishing as XML.
      <p>
        The ISO module repository requires that each module comprise of a
        schema for the ARM (arm.xml) and a schema for the MIM (mim.xml)
        stored in a directory with the name of the module. All of the
        EXPRESS-G diagrams should be stored in the same directory.        
      </p>
      <p>
        There are two ways to generate the XML for an ISO module. Either on
        a per schema basis, or by extracting all schemas from the XML.
      </p>
      The following steps should be followed to extract a single schema to a
      module.
      <ol>
        <li>
          <a href="#pubxml">Publish the model as XML</a> into a directory,
          say:<br/>
          <p class="code">E:\My Documents\Models\export</p>
        </li>
        <li>
          Run the WSH script: <code>utils/ge2module.wsf</code> 
          (double click to run)
        </li>
        <li>
          Enter the directory where the XML has been published from
          GraphicalExpress. In this example:<br/>
        <p class="code">E:\My Documents\Models\export</p>
        </li>
        <li>
          Enter the name of the schema to be extracted. For example:
          <code">Work_order_arm</code> Note it is case sensitive.
        </li>
        <li>
          A directory <code>modules</code> will be created in the directory
          where GraphicalExpress published the XML. In this example
        <p class="code">E:\My Documents\Models\export\modules</p>
        </li>
        
        <li>
          You will now be asked if you want the extracted XML copied into
          the relevant module directory.
          <p>
            If you answer no, then you will have to copy the XML and GIFs
            manually into the relevant module directory. See 
            <a href="#copyxml">"Copying XML to module"</a>
          </p>
          <p>
            If you answer yes then, the XML and GIFs will be copied into
            the module directory.
          </p>
        </li>	    
      </ol>

      <h3>
        <a name="#updatemodule">
          Updating the module.
        </a>
      </h3>
      Once the XML and GIFs have been copied to the module directory, the
      <tt>module.xml</tt> file must be updated to reflect the new EXPRESS-G
      diagrams.  For example:
          <p class="code">
            &lt;express-g&gt;<br/>
            &nbsp;&nbsp;&lt;imgfile file="armexpg1.xml"/&gt;<br/>
            &nbsp;&nbsp;&lt;imgfile file="armexpg2.xml"/&gt;<br/>
            &lt;/express-g&gt;
          </p>

      <h3>
        <a name="#copyxml">
          Copying the XML to the module
        </a>
      </h3>
      The XML extracted from the GraphicalEXPRESS output can be manually
      copied into the relevant module directory.
      <ol>
	<li>
	  The XML for the schema page of the module will be stored in the
          directory <code>modules\schemaPage</code>. In this example 
        <p class="code">
          E:\My Documents\Models\export\modules\schemaPage
        </p>
          Copy the schema GIF and XML files
          (if the schema is an ARM schema, copy the
          <code>armexpg1.xml</code> and <code>armexpg1.gif</code>, if the 
          schema is a MIM schema copy the
          <code>mimexpg1.xml</code> and <code>mimexpg1.gif</code>) 
          to the module directory in the module repository. 
          <p>In this example, assume that the ISO module repository
          is:</p>
          <p class="code">E:\My Documents\stepmod\</p>          
          so copy 
          <p class="code>
            E:\My Documents\Models\export\modules\schemaPage\armexpg1.xml
          </p>
          to 
          <p class="code">
            E:\My Documents\stepmod\data\modules\work_order\armexpg1.xml
          </code>
          <br/> and copy <br/>
          <p class="code">
            E:\My Documents\Models\export\modules\schemaPage\armexpg1.gif
          </code> 
          to
          <p class="code">
            E:\My Documents\stepmod\data\modules\work_order\armexpg1.gif
          </code>
	</li>
<!--	    
        <li>
          Edit the <code>armexpg1.xml</code> or code>mimexpg1.xml</code> 
          file adding the module name and title to:<br/>
          <p class="code">
           &lt;imgfile.content module="" title=""&gt;
          </p>
	    For example, for the schema page of the Work_order ARM:<br/>
	    <p class="code">
	    &lt;imgfile.content:<br/>
	    &nbsp;module="work_order":<br/>
	    &nbsp;title="Figure C.1 - ARM Partial Schema level EXPRESS-G diagram
	    (1 of 1)"&gt;:<br/>
          </p>
	    For the first entity page of the Work_order ARM:<br/>
	    <p class="code">
              &lt;imgfile.content<br/>
              &nbsp;module="work_order"<br/>
	      &nbsp;title="Figure C.2 - ARM Entity level EXPRESS-G diagram (1 of
	    1)"&gt;
           </p>	    
        </li>
	    -->
        <li>
          The XML for the module will be stored in a sub directory with the
          name of the schema. In this example: 
          <code>E:\My Documents\Models\export\modules\Work_order_arm</code>
        </li>
        <li>
          Copy the XML for the EXPRESS to the module directory in the module
          repository, copy <code>mim.xml</code> or <code>arm.xml</code>
          depending on whether it is an ARM or MIM schema.
          <p>
            In this example, assume that the ISO module repository
            is:
          </p>
          <p class="code">
            E:\My Documents\stepmod\
          </p>
          so copy 
          <p class="code">
            E:\My Documents\Models\export\modules\Work_order_arm\arm.xml
          </p>
          to 
          <p class="code">
            E:\My Documents\stepmod\data\modules\work_order\arm.xml
          </p>
        </li>
        
        <li>
          Copy the graphics (EXPRESS-G) GIF and XML files to the module
          directory in the module repository. <br/>
        In this example
        <code>armexpg2.xml</code> and <code>armexpg2.gif</code> 
        have been created, so copy:
        <p class="code">
          E:\My Documents\Models\export\modules\Work_order_arm\armexpg2.xml
        </p> 
        and 
        <p class="code">
          E:\My Documents\Models\export\modules\Work_order_arm\armexpg2.gif
        </p>
        to
        <p class="code">
          E:\My Documents\stepmod\data\modules\work_order\
        </p>

        </li>
        <li>
          Update the module.xml in the module to reflect the EXPRESS-G
          diagrams. Note that a dummy module.xml file will have been
          created which contains the express-g entries. 
          <p>
            In this example:
          </p>
          <p class="code">
            E:\My Documents\Models\export\modules\Work_order_arm\module.xml
          </p>
          which will contain:
          <p class="code">
            &lt;express-g&gt;<br/>
            &nbsp;&nbsp;&lt;imgfile file="armexpg1.xml"/&gt;<br/>
            &nbsp;&nbsp;&lt;imgfile file="armexpg2.xml"/&gt;<br/>
            &lt;/express-g&gt;
          </p>
        </li>
      </ol>
      <h3>Extracting EXPRESS descriptions</h3>
      <p>
        If you want to extract the EXPRESS descriptions from the
        EXPRESS XML file and
        maintain them in a separate file, then use the Windows Script
        Host file:
      </p>
      <p class="code">
        stepmod/utils/extractDescriptions.wsf
      </p>
      <p>
        <b>Note: this assumes that EXPRESS XML is in a module directory.</b>
      </p>
      <p>
        For example, run  <code>extractDescriptions.wsf</code> on
      <p class="code">
        stepmod\data\modules\work_order\arm.xml
      </p>
      to produce
      <p class="code">
        stepmod\data\modules\work_order\arm_descriptions.xml
      </p>
    </p>
    <p>
      Once you have extracted the description file you will
      need to link the EXPRESS XML file to the external descriptions
      file.
      For example to link <code>arm.xml</code> 
    file to the external descriptions in
    <code>arm_descriptions.xml</code> by adding the 
    <code>description.file</code> attribute to <code>arm.xml</code>
    as below: 
  </p>
  <p class="code">
    &lt;express language_version="2"<br/> 
  &nbsp;&nbsp;&nbsp;rcs.date="$Date: 2002-06-06 07:57:58+01 $" <br/>
  &nbsp;&nbsp;&nbsp;rcs.revision="$Revision: 1.0 $"<br/>
  &nbsp;&nbsp;&nbsp;description.file="arm_descriptions.xml"<br/>
  &gt;
</p>
</li>
</ol>
<p>
  The same process is followed when extracting all schemas, except that 
  the WSH script: <code>utils/ge2moduleAll.wsf</code> is run instead.
<p>
  This will result in directories being created for every schema as
  opposed to the single identified schema.  
</p>
    </blockquote>
  </DIV>

  <DIV id="NoPubModXML">
    <A href="javascript:swap(PubModXML, NoPubModXML);">
      <h2>
        <IMG src="./css/folder.gif" border="false"/> 
        Generating an ISO module from the XML
      </h2>
    </A>
  </DIV>


</BODY>
</HTML>