# $Id: mapping.ent.rnc,v 1.1 2003/12/19 02:13:59 thendrix Exp $

# Mapping specification markup
# declarations

#                     Requires text.ent markup
# declarations for representing 'description'

# descriptive text

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

include "text.ent.rnc"
# use the %description.content defined in text.ent
description =
  element description { description-attlist, description.content* }
description-attlist &= empty
# mapping specification row

# express_ref must contain a rule name
mapping =
  alt?,
  description?,
  aimelt?,
  source?,
  rules?,
  express_ref*,
  refpath?,
  refpath_extend?
# A mapping table
mapping_table =
  element mapping_table { mapping_table-attlist, ae*, sc* }
mapping_table-attlist &= empty
# application entity
ae = element ae { ae-attlist, mapping, alt_map*, aa* }
ae-attlist &=
  attribute entity { xsd:NMTOKEN },
  [ a:defaultValue = "NO" ] attribute extensible { "YES" | "NO" }?,
  attribute original_module { xsd:NMTOKEN }?
# application attribute

# description?, alt*, )
aa = element aa { aa-attlist, mapping, alt_map* }
# note attribute is CDATA to allow for SELF\product.of_product
aa-attlist &=
  attribute attribute { text },
  attribute assertion_to { xsd:NMTOKEN }?,
  attribute inherited_from_module { xsd:NMTOKEN }?,
  attribute inherited_from_entity { xsd:NMTOKEN }?
# contains explanatory text describing the
# alternative                                
# THIS IS DEPRECATED - USE alt_map
alt = element alt { alt-attlist, text }
alt-attlist &= empty
# alternative mapping
alt_map = element alt_map { alt_map-attlist, mapping }
alt_map-attlist &=
  attribute id { text }?,
  attribute alt_map.inc { text }?
# AIM element
aimelt = element aimelt { aimelt-attlist, text* }
aimelt-attlist &=
  [ a:defaultValue = "preserve" ] attribute xml:space { "preserve" }?
# ISO part number
source = element source { source-attlist, text }
source-attlist &=
  [ a:defaultValue = "preserve" ] attribute xml:space { "preserve" }?
# reference path
refpath = element refpath { refpath-attlist, text* }
refpath-attlist &=
  [ a:defaultValue = "preserve" ] attribute xml:space { "preserve" }?
# reference path copied from original module
refpath_extend =
  element refpath_extend { refpath_extend-attlist, text* }
refpath_extend-attlist &=
  attribute extended_select { xsd:NMTOKEN },
  [ a:defaultValue = "preserve" ] attribute xml:space { "preserve" }?
# mapping specification row
scmapping = description?, (constraint | rules), source
# subtype constraint

# not sure if original_module attr needed.
sc = element sc { sc-attlist, (scmapping | alt_scmap+) }
sc-attlist &=
  attribute constraint { xsd:NMTOKEN },
  attribute entity { xsd:NMTOKEN },
  attribute original_module { xsd:NMTOKEN }?
# rules for mapping subtype_constraint
rules = element rules { rules-attlist, text }
rules-attlist &= empty
# constraint for mapping subtype_constraint
constraint = element constraint { constraint-attlist, text }
constraint-attlist &= empty
# alternative mapping  for subtype_constraint
alt_scmap = element alt_scmap { alt_scmap-attlist, scmapping }
alt_scmap-attlist &=
  attribute id { text }?,
  attribute alt_scmap.inc { text }?
