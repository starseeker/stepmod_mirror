<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="changes" page="intro" subpage="xslt-streaming-93"/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: Streaming in XSLT</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: Streaming in XSLT"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>Streaming in XSLT</h1>
      <p>Many more constructs are now acceptable in streaming templates. For full details see 
                  <a class="bodylink" href="../../sourcedocs/streaming/streaming-templates.xml">Streaming Templates</a>.</p>
      <p>Explicit support for streaming is available for the functions <code>data()</code>, <code>avg()</code>, <code>count()</code>, 
                  <code>distinct-values()</code>, <code>empty()</code>, <code>exists()</code>, <code>min()</code>, <code>max()</code>, <code>string()</code>,
    <code>string-join()</code>, <code>sum()</code>; for the operators "," and the <code>(= | != | &lt;= | &lt; | &gt;= | &gt;)</code> family, 
    and for the instructions <code>xsl:attribute</code>, <code>xsl:apply-imports</code>, <code>xsl:apply-templates</code>,
    <code>xsl:choose</code>, <code>xsl:comment</code>, <code>xsl:copy</code>, <code>xsl:copy-of</code>, <code>xsl:document</code>, 
                 <code>xsl:element</code>, <code>xsl:for-each</code>, <code>xsl:iterate</code>, <code>xsl:result-document</code>. Implicit support
    is available for all functions and operators that process singleton items, and for many functions and instructions that operate on sequences
    - such as <code>subsequence()</code> 
    and <code>xsl:for-each-group</code> - with the caveat that their input is buffered in memory. </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="xpath30-93.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>