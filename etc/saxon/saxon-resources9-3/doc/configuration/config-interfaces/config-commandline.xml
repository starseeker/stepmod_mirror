<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="configuration" page="config-interfaces" subpage="config-commandline"/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: Configuration from the command line</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title"
            content="Saxonica: XSLT and XQuery Processing: Configuration from the command line"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>Configuration from the command line</h1>
      <p>The main command-line interfaces to Saxon are <a class="bodylink" href="../../javadoc/net/sf/saxon/Transform.html"><code>net.sf.saxon.Transform</code></a> for 
         <a class="bodylink" href="../../using-xsl/commandline.xml">running a transformation</a>,
         <a class="bodylink" href="../../javadoc/net/sf/saxon/Query.html"><code>net.sf.saxon.Query</code></a> for <a class="bodylink" href="../../using-xquery/commandline.xml">running XQuery</a>,
         and <a class="bodylink" href="../../javadoc/com/saxonica/Validate.html"><code>com.saxonica.Validate</code></a> for 
            <a class="bodylink" href="../../schema-processing/commandline.xml">validating a document against a schema</a>. These
         commands allow many configuration options to be specified by command line options: for example if XML Schema 1.1
         support is wanted, all three commands allow this to be requested using the option <code>-xsdversion:1.1</code>.
         Many of these options correspond directly to the configuration properties available on the <code>Configuration</code>
         object.</p>
      <p>For more specialized options, there is also a fallback mechanism. Each configuration property has a URI, which
            is always of the form <code>http://saxon.sf.net/feature/SOME_NAME</code>. Provided the property allows
a string value (as most do), the property can be set from the command line using the syntax <code>--SOME_NAME:value</code>.
            For example the property identified by <a class="bodylink"
            href="../../javadoc/net/sf/saxon/lib/FeatureKeys.html#LICENSE_FILE_LOCATION"><code>FeatureKeys.LICENSE_FILE_LOCATION</code></a> 
            has the URI
            <code>http://saxon.sf.net/feature/licenseFileLocation</code>, and it can therefore be set on the command line
            using an option such as <code>--licenseFileLocation:c:/saxon/license.lic</code>.
         </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="config-xqj.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>