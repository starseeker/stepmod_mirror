<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="configuration" page="configuration-file" subpage="config-global"/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: The &lt;global&gt; element</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title"
            content="Saxonica: XSLT and XQuery Processing: The &lt;global&gt; element"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>The &lt;global&gt; element</h1>
      <p>The <code>global</code> input element of the configuration file contains properties defining
global configuration options.</p>
      <table>
         <thead>
            <tr>
               <td content="para">
                  <p>
                     <b>Attribute</b>
                  </p>
               </td>
               <td content="para">
                  <p>
                     <b>Values</b>
                  </p>
               </td>
               <td content="para">
                  <p>
                     <b>Effect</b>
                  </p>
               </td>
            </tr>
         </thead>
         <tbody>
            <tr>
               <td content="para">
                  <p>allowExternalFunctions</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>True if calls to external Java or .NET functions are allowed</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>allowMultiThreading</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>True if <code>saxon:threads</code> attribute on <code>xsl:for-each</code>
    causes multi-threading under Saxon-EE; false to disable multi-threading. Default is true (but
    multi-threading only happens if explicitly requested using <code>saxon:threads</code>.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>allowOldJavaUriFormat</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>True if reflexive calls to external Java functions are allowed to use the
    "liberal" syntax (for example "http://my.com/extensions/java.util.Date"). The default is to allow
    only the "strict" form of URI such as "java:java.util.Date"</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>collationUriResolver</p>
               </td>
               <td content="para">
                  <p>Name of a class implementing CollationURIResolver</p>
               </td>
               <td content="para">
                  <p>User-supplied class used to intepret collation URIs</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>collectionUriResolver</p>
               </td>
               <td content="para">
                  <p>Name of a class implementing CollectionURIResolver</p>
               </td>
               <td content="para">
                  <p>User-supplied class used for resolving the URI supplied to the <code>collection()</code> function</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>compileWithTracing</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>generates trace code in the expression tree, allowing a TraceListener to be used at run-time</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>defaultCollation</p>
               </td>
               <td content="para">
                  <p>A collation URI</p>
               </td>
               <td content="para">
                  <p>(Requires Saxon-PE.) The collation URI to be used when no explicit collation is requested.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>defaultCollection</p>
               </td>
               <td content="para">
                  <p>A collection URI</p>
               </td>
               <td content="para">
                  <p>The collection URI to be used when no argument is passed to the <code>collection()</code> function.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>dtdValidation</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Controls whether DTD validation is applied to input files.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>dtdValidationRecoverable</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Controls whether DTD validation errors are recoverable or fatal.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>errorListener</p>
               </td>
               <td content="para">
                  <p>A Java class that implements javax.xml.transform.ErrorListener</p>
               </td>
               <td content="para">
                  <p>Defines the default ErrorListener for reporting both compile-time and run-time errors</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>expandAttributeDefaults</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Controls whether attribute default values found in a DTD or schema are expanded or not.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>lazyConstructionMode</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>If true, causes temporary trees to be constructed lazily</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>lineNumbering</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Controls whether line and column number information is maintained for input files</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>optimizationLevel</p>
               </td>
               <td content="para">
                  <p>integer, 0 to 10</p>
               </td>
               <td content="para">
                  <p>Defines the level of code optimization to be applied</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>preEvaluateDocFunction</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>If true, allows calls on <code>doc()</code> with a literal argument to be
      evaluated early, at compile time</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>preferJaxpParser</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Relevant only on .NET, determines whether the Java Classpath parser is used in preference to the Microsoft .NET parser</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>recognizeUriQueryParameters</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>If true, and the standard URIResolver is in use, query parameters such as <code>val=strict</code>
      will be recognized on URIs supplied to the <code>doc</code> or <code>document()</code> functions.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>schemaValidation</p>
               </td>
               <td content="para">
                  <p>strict|lax|preserve|skip</p>
               </td>
               <td content="para">
                  <p>Controls whether schema validation is applied to input files</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>serializerFactory</p>
               </td>
               <td content="para">
                  <p>Java class that extends net.sf.saxon.event.SerializerFactory</p>
               </td>
               <td content="para">
                  <p>Allows the serialization pipeline to be customized, for example to handle user-defined serialization parameters</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>sourceParser</p>
               </td>
               <td content="para">
                  <p>Java class implementing XMLReader</p>
               </td>
               <td content="para">
                  <p>The SAX parser to be used for reading source files.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>sourceResolver</p>
               </td>
               <td content="para">
                  <p>Java class name implementing net.sf.saxon.SourceResolver</p>
               </td>
               <td content="para">
                  <p>Name of a user-supplied class that resolves unknown implementations of the JAXP Source class into a known implementation.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>stripWhitespace</p>
               </td>
               <td content="para">
                  <p>all|none|ignorable</p>
               </td>
               <td content="para">
                  <p>Controls what whitespace is removed from input documents (all inter-element whitespace, no inter-element whitespace,
or all inter-element whitespace in elements having element-only content models)</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>styleParser</p>
               </td>
               <td content="para">
                  <p>Java Class implementing XMLReader</p>
               </td>
               <td content="para">
                  <p>XML parser used for stylesheets and schema documents</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>timing</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Outputs progress messages to System.err. Equivalent to the -t option on the command line</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>traceExternalFunctions</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Provides diagnostics when external functions are dynamically loaded</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>traceListener</p>
               </td>
               <td content="para">
                  <p>Java Class implementing net.sf.saxon.trace.TraceListener</p>
               </td>
               <td content="para">
                  <p>User-defined class to be used for handling run-time trace output</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>traceOptimizerDecisions</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Causes tracing of decisions made by the optimizer</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>treeModel</p>
               </td>
               <td content="para">
                  <p>linkedTree|tinyTree|tinyTreeCondensed</p>
               </td>
               <td content="para">
                  <p>Determines the tree model implementation used for input files: TinyTree, LinkedTree, or TinyTree(condensed)</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>uriResolver</p>
               </td>
               <td content="para">
                  <p>Name of a JAXP URIResolver</p>
               </td>
               <td content="para">
                  <p>The URIResolver to be used for deferencing URIs used in <code>xsl:include</code>, <code>xsl:import</code>,
      <code>doc()</code>, and <code>document()</code>.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>usePiDisableOutputEscaping</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>When sending output to a user-defined content handler, indicates whether JAXP-defined processing instructions
           are used to signal the start and end of text in which output escaping is disabled</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>useTypedValueCache</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>If true, typed values of element and attribute nodes are cached in the TinyTree. Uses extra memory, may make
      execution faster.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>validationComments</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Only relevant when validationWarnings=true, indicates that validation error messages should where possible
    be added as comments in the document instance being validated
    rather than fatal errors.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>validationWarnings</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>For result trees subjected to schema validation, indicates whether validation failures should be treated as warnings
    rather than fatal errors.</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>versionOfXml</p>
               </td>
               <td content="para">
                  <p>1.0|1.1</p>
               </td>
               <td content="para">
                  <p>Determines whether XML 1.0 or XML 1.1 rules are used for names. (1.0 means the rules before Edition 5)</p>
               </td>
            </tr>
            <tr>
               <td content="para">
                  <p>xInclude</p>
               </td>
               <td content="para">
                  <p>true|false</p>
               </td>
               <td content="para">
                  <p>Controls whether XInclude processing is applied to input files</p>
               </td>
            </tr>
         </tbody>
      </table>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="config-xslt.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>