<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="extensions" page="functions" subpage="compile-stylesheet"/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: saxon:compile-stylesheet()</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title"
            content="Saxonica: XSLT and XQuery Processing: saxon:compile-stylesheet()"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>saxon:compile-stylesheet()</h1>
      <p><b>saxon:compile-stylesheet($stylesheet as document-node()) ==&gt; jt:javax.xml.transform.Templates</b></p>
      <p>This function takes as input a document containing an XSLT stylesheet, and produces as output a compiled
stylesheet suitable for use with the <a class="bodylink" href="../../extensions/functions/transform.xml">saxon:transform()</a> extension function.</p>
      <p>The document node can be supplied as a call on the <code>doc()</code> function to read the stylesheet
from filestore (or from a remote URL), or it can be a variable containing a stylesheet that has been constructed
programmatically. If the document contains any <code>xsl:include</code> or <code>xsl:import</code>
declarations these will be resolved in the usual way (relative to the base URI of the element that contains them).</p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="currentmode.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>