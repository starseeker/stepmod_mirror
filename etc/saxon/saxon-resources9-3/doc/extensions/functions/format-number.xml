<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="extensions" page="functions" subpage="format-number"/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: saxon:format-number()</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title"
            content="Saxonica: XSLT and XQuery Processing: saxon:format-number()"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>saxon:format-number()</h1>
      <p><b>saxon:format-number($value as xs:double, $picture as xs:string) as xs:string </b></p>
      <p><i>This function (in the Saxon namespace) is available in Saxon-EE only. The function is obsolescent 
since it is now available
in the standard <code>fn:</code> namespace, whether you are using XSLT or XQuery.</i></p>
      <p>This function is identical to the two-argument version of the <code>format-number</code>
function in XSLT 2.0, but in the Saxon namespace. It uses the default behavior of the XSLT function when there is no
<code>xsl:decimal-format</code> declaration in the stylesheet, which means that it is not 
possible to change the characters used as the decimal point, grouping separator, and so on.</p>
      <p>For example, the call <code>saxon:format-number(123.4567, '0000.00')</code> produces the output
<code>0123.46</code>.</p>
      <p>For full details, see the  
<a href="http://www.w3.org/TR/xslt20/" class="bodylink">XSLT 2.0 specification</a>.</p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="function.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>