<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_B" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: B</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: B"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>B</h1>
      <p class="subhead">BASE</p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document($uri as item()*, $base as node()*) &#8594; node()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri($relative as xs:string?, $base as xs:string) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">BASE64</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A2 Base64 Encoder/Decoder</a>
      </p>
      <p class="subhead">BASE64BINARY</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/base64Binary-method.xml">The saxon:base64Binary serialization method</a>
      </p>
      <p class="subhead">BASE64BINARY-TO-OCTETS</p>
      <p>
         <a class="bodylink" href="../extensions/functions/base64binarytooctets.xml">saxon:base64Binary-to-octets()</a>
      </p>
      <p class="subhead">BASE64BINARY-TO-STRING</p>
      <p>
         <a class="bodylink" href="../extensions/functions/base64binarytostring.xml">saxon:base64Binary-to-string()</a>
      </p>
      <p class="subhead">BASEURI</p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string, $baseURI as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p class="subhead">BASE-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/base-uri.xml">base-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/base-uri.xml">base-uri() &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/base-uri.xml">base-uri($arg as node()?) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">BIBLE</p>
      <p>
         <a class="bodylink" href="../samples/bible.xml">The Bible</a>
      </p>
      <p class="subhead">BINARY</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/base64Binary-method.xml">binary output files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/hexBinary-method.xml">binary output files</a>
      </p>
      <p class="subhead">BINDING</p>
      <p>
         <a class="bodylink" href="../extensibility/functions/choosing-overload.xml">binding</a>
      </p>
      <p class="subhead">BOOK</p>
      <p>
         <a class="bodylink" href="../samples/books.xml">The Book List Stylesheet</a>
      </p>
      <p class="subhead">BOOLEAN</p>
      <p>
         <a class="bodylink" href="../functions/intro/boolean.xml">boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/boolean.xml">boolean($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/boolean.xml">boolean($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/boolean.xml">Boolean expressions: AND and OR</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/codepoint-equal.xml">codepoint-equal($comparand1 as xs:string?, $comparand2 as xs:string?) &#8594; xs:boolean?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/contains.xml">contains($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/contains.xml">contains($arg1 as xs:string?, $arg2 as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/doc-available.xml">doc-available($uri as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-available.xml">element-available($arg as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/empty.xml">empty($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/ends-with.xml">ends-with($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/ends-with.xml">ends-with($arg1 as xs:string?, $arg2 as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/exists.xml">exists($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/false.xml">false() &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/filter.xml">filter($f as function(item()) as xs:boolean, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string, $arity as xs:integer) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/lang.xml">lang($testlang as xs:string?, $node as node()) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/lang.xml">lang($testlang as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/matches.xml">matches($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/matches.xml">matches($input as xs:string?, $pattern as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/nilled.xml">nilled($arg as node()?) &#8594; xs:boolean?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/not.xml">not($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/starts-with.xml">starts-with($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/starts-with.xml">starts-with($arg1 as xs:string?, $arg2 as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/true.xml">true() &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/type-available.xml">type-available($type as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available($href as xs:string?, $encoding as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available($href as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">BREAK</p>
      <p>
         <a class="bodylink" href="../extensions/instructions/break.xml">saxon:break</a>
      </p>
      <p class="subhead">BUGS</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">bugs</a>
      </p>
      <p>
         <a class="bodylink" href="../about/support/patches.xml">Bugs and patches</a>
      </p>
      <p class="subhead">BUILDING</p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query/embedding.xml">Building a Source Document</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/builder-api.xml">Building a Source Document from an application</a>
      </p>
      <p class="subhead">BURST-MODE</p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">Burst-mode streaming</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-implementation.xml">How burst-mode streaming works</a>
      </p>
      <p class="subhead">BY</p>
      <p>
         <a class="bodylink" href="../extensibility/collation.xml">order by</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/furtherprocessing.xml">Processing the nodes returned by saxon:stream()</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_C.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>