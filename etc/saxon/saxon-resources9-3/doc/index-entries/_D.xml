<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_D" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: D</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: D"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>D</h1>
      <p class="subhead">DATA</p>
      <p>
         <a class="bodylink" href="../functions/intro/data.xml">data</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">data()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/data.xml">data() &#8594; xs:anyAtomicType*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/data.xml">data($arg as item()*) &#8594; xs:anyAtomicType*</a>
      </p>
      <p class="subhead">DATE</p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?, $timezone as xs:dayTimeDuration?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?, $timezone as xs:dayTimeDuration?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/current-date.xml">current-date() &#8594; xs:date</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/dateTime.xml">dateTime($arg1 as xs:date?, $arg2 as xs:time?) &#8594; xs:dateTime?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-date.xml">day-from-date($arg as xs:date?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/month-from-date.xml">month-from-date($arg as xs:date?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-date.xml">timezone-from-date($arg as xs:date?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/year-from-date.xml">year-from-date($arg as xs:date?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DATES</p>
      <p>
         <a class="bodylink" href="../extensibility/localizing.xml">Localizing numbers and dates</a>
      </p>
      <p class="subhead">DATETIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?, $timezone as xs:dayTimeDuration?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?, $timezone as xs:dayTimeDuration?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/dateTime.xml">dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/dateTime.xml">dateTime($arg1 as xs:date?, $arg2 as xs:time?) &#8594; xs:dateTime?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/dateTime.xml">dateTime($arg1 as xs:date?, $arg2 as xs:time?) &#8594; xs:dateTime?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-dateTime.xml">day-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/hours-from-dateTime.xml">hours-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/minutes-from-dateTime.xml">minutes-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/month-from-dateTime.xml">month-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-dateTime.xml">seconds-from-dateTime($arg as xs:dateTime?) &#8594; xs:decimal?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-dateTime.xml">timezone-from-dateTime($arg as xs:dateTime?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/year-from-dateTime.xml">year-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DATETIMESTAMP</p>
      <p>
         <a class="bodylink" href="../functions/intro/current-dateTime.xml">current-dateTime() &#8594; xs:dateTimeStamp</a>
      </p>
      <p class="subhead">DAY-FROM-DATE</p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-date.xml">day-from-date</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-date.xml">day-from-date($arg as xs:date?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DAY-FROM-DATETIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-dateTime.xml">day-from-dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/day-from-dateTime.xml">day-from-dateTime($arg as xs:dateTime?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DAYS-FROM-DURATION</p>
      <p>
         <a class="bodylink" href="../functions/intro/days-from-duration.xml">days-from-duration</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/days-from-duration.xml">days-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DAYTIMEDURATION</p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?, $timezone as xs:dayTimeDuration?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?, $timezone as xs:dayTimeDuration?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?, $timezone as xs:dayTimeDuration?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/implicit-timezone.xml">implicit-timezone() &#8594; xs:dayTimeDuration</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-date.xml">timezone-from-date($arg as xs:date?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-dateTime.xml">timezone-from-dateTime($arg as xs:dateTime?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-time.xml">timezone-from-time($arg as xs:time?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p class="subhead">DEBUGGERS</p>
      <p>
         <a class="bodylink" href="../about/related.xml">Commercial Editors and Debuggers</a>
      </p>
      <p class="subhead">DEBUGGING</p>
      <p>
         <a class="bodylink" href="../extensibility/functions.xml">debugging</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">debugging</a>
      </p>
      <p class="subhead">DECIMAL</p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-dateTime.xml">seconds-from-dateTime($arg as xs:dateTime?) &#8594; xs:decimal?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-duration.xml">seconds-from-duration($arg as xs:duration?) &#8594; xs:decimal?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-time.xml">seconds-from-time($arg as xs:time?) &#8594; xs:decimal?</a>
      </p>
      <p class="subhead">DECIMAL-DIVIDE</p>
      <p>
         <a class="bodylink" href="../extensions/functions/decimaldivide.xml">saxon:decimal-divide()</a>
      </p>
      <p class="subhead">DECIMAL-FORMAT</p>
      <p>
         <a class="bodylink" href="../xsl-elements/decimal-format.xml">xsl:decimal-format</a>
      </p>
      <p class="subhead">DECIMAL-FORMAT-NAME</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">DECLARE</p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">declare option saxon:allow-cycles</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">declare option saxon:default</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">declare option saxon:memo-function</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">declare option saxon:output</a>
      </p>
      <p class="subhead">DECLARING</p>
      <p>
         <a class="bodylink" href="../using-xquery/xquery11support/contextitem.xml">Declaring the Initial Context Item</a>
      </p>
      <p class="subhead">DECODER</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A2 Base64 Encoder/Decoder</a>
      </p>
      <p class="subhead">DEEP-EQUAL</p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/deepequal.xml">saxon:deep-equal()</a>
      </p>
      <p class="subhead">DEFAULT</p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">declare option saxon:default</a>
      </p>
      <p class="subhead">DEFAULT-COLLATION</p>
      <p>
         <a class="bodylink" href="../functions/intro/default-collation.xml">default-collation</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/default-collation.xml">default-collation() &#8594; xs:string</a>
      </p>
      <p class="subhead">DEFAULTS</p>
      <p>
         <a class="bodylink" href="../changes/s90/schema90.xml">Expansion of attribute and element defaults</a>
      </p>
      <p class="subhead">DELETE</p>
      <p>
         <a class="bodylink" href="../sql-extension/delete.xml">sql:delete</a>
      </p>
      <p class="subhead">DEPENDENCY</p>
      <p>
         <a class="bodylink" href="../changes/intro92/install92.xml">JDK dependency</a>
      </p>
      <p class="subhead">DESCRIPTION</p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName?, $description as xs:string, $error-object as item()*) &#8594; none</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName?, $description as xs:string) &#8594; none</a>
      </p>
      <p class="subhead">DIAGNOSTICS</p>
      <p>
         <a class="bodylink" href="../changes/s90/diagnostics90.xml">Diagnostics</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro91/trace91.xml">Diagnostics and Tracing</a>
      </p>
      <p class="subhead">DIFFERENCE</p>
      <p>
         <a class="bodylink" href="../expressions/except.xml">Set difference and intersection</a>
      </p>
      <p class="subhead">DIRECTORIES</p>
      <p>
         <a class="bodylink" href="../sourcedocs/collections.xml">Processing directories</a>
      </p>
      <p class="subhead">DISCARD-DOCUMENT</p>
      <p>
         <a class="bodylink" href="../extensions/functions/discarddocument.xml">saxon:discard-document()</a>
      </p>
      <p class="subhead">DISTINCT-VALUES</p>
      <p>
         <a class="bodylink" href="../functions/intro/distinct-values.xml">distinct-values</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/distinct-values.xml">distinct-values($arg as xs:anyAtomicType*, $collation as xs:string) &#8594; xs:anyAtomicType*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/distinct-values.xml">distinct-values($arg as xs:anyAtomicType*) &#8594; xs:anyAtomicType*</a>
      </p>
      <p class="subhead">DIVISION</p>
      <p>
         <a class="bodylink" href="../expressions/arithmetic/multiplication.xml">Multiplication and division</a>
      </p>
      <p class="subhead">DOC</p>
      <p>
         <a class="bodylink" href="../functions/intro/doc.xml">doc</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/doc.xml">doc($uri as xs:string?) &#8594; document-node()?</a>
      </p>
      <p class="subhead">DOC-AVAILABLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/doc-available.xml">doc-available</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/doc-available.xml">doc-available($uri as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">DOCTYPE</p>
      <p>
         <a class="bodylink" href="../extensions/instructions/doctype.xml">saxon:doctype</a>
      </p>
      <p class="subhead">DOCTYPE-PUBLIC</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras.xml">doctype-public</a>
      </p>
      <p class="subhead">DOCTYPE-SYSTEM</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras.xml">doctype-system</a>
      </p>
      <p class="subhead">DOCUMENT</p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query/embedding.xml">Building a Source Document</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/builder-api.xml">Building a Source Document from an application</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document($uri as item()*, $base as node()*) &#8594; node()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document($uri as item()*) &#8594; node()*</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/optimization90.xml">Document Projection</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/projection.xml">Document Projection</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/document.xml">xsl:document</a>
      </p>
      <p class="subhead">DOCUMENTATION</p>
      <p>
         <a class="bodylink" href="../about/related.xml">XQuery Documentation</a>
      </p>
      <p class="subhead">DOCUMENT-NODE</p>
      <p>
         <a class="bodylink" href="../functions/intro/doc.xml">doc($uri as xs:string?) &#8594; document-node()?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string, $baseURI as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p class="subhead">DOCUMENTS</p>
      <p>
         <a class="bodylink" href="../sourcedocs/intro.xml">Handling Source Documents</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/intro.xml">Handling Source Documents</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/preloading.xml">Preloading shared reference documents</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/partialreading.xml">Reading source documents partially</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/command-line.xml">Source Documents on the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming.xml">Streaming of Large Documents</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/validation.xml">Validation of Source Documents</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/whitespace.xml">Whitespace Stripping in Source Documents</a>
      </p>
      <p class="subhead">DOCUMENT-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/document-uri.xml">document-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">document-uri()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document-uri.xml">document-uri() &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document-uri.xml">document-uri($arg as node()?) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">DOM</p>
      <p>
         <a class="bodylink" href="../sourcedocs/thirdparty.xml">Third-party Object Models: DOM, JDOM, XOM, and DOM4J</a>
      </p>
      <p class="subhead">DOM4J</p>
      <p>
         <a class="bodylink" href="../sourcedocs/thirdparty.xml">Third-party Object Models: DOM, JDOM, XOM, and DOM4J</a>
      </p>
      <p class="subhead">DOUBLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/acos.xml">acos($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/acos.xml">acos($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/asin.xml">asin($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/asin.xml">asin($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/atan.xml">atan($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/atan.xml">atan($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/cos.xml">cos($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/cos.xml">cos($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/number.xml">number() &#8594; xs:double</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/number.xml">number($arg as xs:anyAtomicType?) &#8594; xs:double</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/pi.xml">pi() &#8594; xs:double</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/sin.xml">sin($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/sin.xml">sin($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/sqrt.xml">sqrt($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/sqrt.xml">sqrt($arg as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/subsequence.xml">subsequence($sourceSeq as item()*, $startingLoc as xs:double, $length as xs:double) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/subsequence.xml">subsequence($sourceSeq as item()*, $startingLoc as xs:double, $length as xs:double) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/subsequence.xml">subsequence($sourceSeq as item()*, $startingLoc as xs:double) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/substring.xml">substring($sourceString as xs:string?, $start as xs:double, $length as xs:double) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/substring.xml">substring($sourceString as xs:string?, $start as xs:double, $length as xs:double) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/substring.xml">substring($sourceString as xs:string?, $start as xs:double) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tan.xml">tan($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tan.xml">tan($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p class="subhead">DOUBLE-SPACE</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/double-space.xml">The saxon:double-space attribute</a>
      </p>
      <p class="subhead">DURATION</p>
      <p>
         <a class="bodylink" href="../functions/intro/days-from-duration.xml">days-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/hours-from-duration.xml">hours-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/minutes-from-duration.xml">minutes-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/months-from-duration.xml">months-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-duration.xml">seconds-from-duration($arg as xs:duration?) &#8594; xs:decimal?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/years-from-duration.xml">years-from-duration($arg as xs:duration?) &#8594; xs:integer?</a>
      </p>
      <p class="subhead">DYNAMIC</p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">Tips for Dynamic Loading in .NET"</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_E.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>