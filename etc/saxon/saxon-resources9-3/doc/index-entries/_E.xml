<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_E" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: E</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: E"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>E</h1>
      <p class="subhead">EDITORS</p>
      <p>
         <a class="bodylink" href="../about/related.xml">Commercial Editors and Debuggers</a>
      </p>
      <p class="subhead">ELEMENT</p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-with-id.xml">element-with-id($arg as xs:string*, $node as node()) &#8594; element()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-with-id.xml">element-with-id($arg as xs:string*) &#8594; element()*</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/schema90.xml">Expansion of attribute and element defaults</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/id.xml">id($arg as xs:string*, $node as node()) &#8594; element()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/id.xml">id($arg as xs:string*) &#8594; element()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/in-scope-prefixes.xml">in-scope-prefixes($element as element()) &#8594; xs:string*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/in-scope-prefixes.xml">in-scope-prefixes($element as element()) &#8594; xs:string*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/namespace-uri-for-prefix.xml">namespace-uri-for-prefix($prefix as xs:string?, $element as element()) &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/namespace-uri-for-prefix.xml">namespace-uri-for-prefix($prefix as xs:string?, $element as element()) &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string, $baseURI as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-QName.xml">resolve-QName($qname as xs:string?, $element as element()) &#8594; xs:QName?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-QName.xml">resolve-QName($qname as xs:string?, $element as element()) &#8594; xs:QName?</a>
      </p>
      <p>
         <a class="bodylink"
            href="../configuration/configuration-file/config-collations.xml">The &lt;collations&gt; element</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/configuration-file/config-global.xml">The &lt;global&gt; element</a>
      </p>
      <p>
         <a class="bodylink"
            href="../configuration/configuration-file/config-localizations.xml">The &lt;localizations&gt; element</a>
      </p>
      <p>
         <a class="bodylink"
            href="../configuration/configuration-file/config-resources.xml">The &lt;resources&gt; element</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/configuration-file/config-xquery.xml">The &lt;xquery&gt; element</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/configuration-file/config-xsd.xml">The &lt;xsd&gt; element</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/configuration-file/config-xslt.xml">The &lt;xslt&gt; element</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/element.xml">xsl:element</a>
      </p>
      <p class="subhead">ELEMENT-AVAILABLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/element-available.xml">element-available</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-available.xml">element-available($arg as xs:string) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">ELEMENTS</p>
      <p>
         <a class="bodylink" href="../xsl-elements/lre.xml">Literal Result Elements</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/intro.xml">XSLT Elements</a>
      </p>
      <p class="subhead">ELEMENT-WITH-ID</p>
      <p>
         <a class="bodylink" href="../functions/intro/element-with-id.xml">element-with-id</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-with-id.xml">element-with-id($arg as xs:string*, $node as node()) &#8594; element()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/element-with-id.xml">element-with-id($arg as xs:string*) &#8594; element()*</a>
      </p>
      <p class="subhead">EMPTY</p>
      <p>
         <a class="bodylink" href="../functions/intro/empty.xml">empty</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/empty.xml">empty($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">ENCODE-FOR-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/encode-for-uri.xml">encode-for-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/encode-for-uri.xml">encode-for-uri($uri-part as xs:string?) &#8594; xs:string</a>
      </p>
      <p class="subhead">ENCODER</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A2 Base64 Encoder/Decoder</a>
      </p>
      <p class="subhead">ENCODING</p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text.xml">unparsed-text($href as xs:string?, $encoding as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available($href as xs:string?, $encoding as xs:string) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">ENCODINGS</p>
      <p>
         <a class="bodylink" href="../conformance/encodings.xml">Character Encodings Supported</a>
      </p>
      <p class="subhead">ENDS-WITH</p>
      <p>
         <a class="bodylink" href="../functions/intro/ends-with.xml">ends-with</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/ends-with.xml">ends-with($arg1 as xs:string?, $arg2 as xs:string?, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/ends-with.xml">ends-with($arg1 as xs:string?, $arg2 as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">ENTITY-REF</p>
      <p>
         <a class="bodylink" href="../extensions/instructions/entity-ref.xml">saxon:entity-ref</a>
      </p>
      <p class="subhead">ERROR</p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error() &#8594; none</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName?, $description as xs:string, $error-object as item()*) &#8594; none</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName?, $description as xs:string) &#8594; none</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName) &#8594; none</a>
      </p>
      <p class="subhead">ERROR-OBJECT</p>
      <p>
         <a class="bodylink" href="../functions/intro/error.xml">error($code as xs:QName?, $description as xs:string, $error-object as item()*) &#8594; none</a>
      </p>
      <p class="subhead">ESCAPE-HTML-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/escape-html-uri.xml">escape-html-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/escape-html-uri.xml">escape-html-uri($uri as xs:string?) &#8594; xs:string</a>
      </p>
      <p class="subhead">ETC..</p>
      <p>
         <a class="bodylink" href="../functions/intro/concat.xml">concat($arg1 as xs:anyAtomicType?, $arg2 as xs:anyAtomicType?, $etc... as xs:anyAtomicType?) &#8594; xs:string</a>
      </p>
      <p class="subhead">EVAL</p>
      <p>
         <a class="bodylink" href="../extensions/functions/eval.xml">saxon:eval()</a>
      </p>
      <p class="subhead">EVALUATE</p>
      <p>
         <a class="bodylink" href="../extensions/functions/evaluate.xml">saxon:evaluate()</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/xslt30.xml">xsl:evaluate</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/evaluate.xml">xsl:evaluate</a>
      </p>
      <p class="subhead">EVALUATE-NODE</p>
      <p>
         <a class="bodylink" href="../extensions/functions/evaluate-node.xml">saxon:evaluate-node()</a>
      </p>
      <p class="subhead">EVALUATING</p>
      <p>
         <a class="bodylink" href="../xpath-api/s9api-xpath.xml">Evaluating XPath Expressions using s9api</a>
      </p>
      <p class="subhead">EXACTLY-ONE</p>
      <p>
         <a class="bodylink" href="../functions/intro/exactly-one.xml">exactly-one</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/exactly-one.xml">exactly-one($arg as item()*) &#8594; item()</a>
      </p>
      <p class="subhead">EXAMPLE</p>
      <p>
         <a class="bodylink" href="../extensions/map.xml">Example</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Example</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">Example: selective copying</a>
      </p>
      <p>
         <a class="bodylink" href="../samples/dotnetsamples.xml">Example applications for .NET</a>
      </p>
      <p>
         <a class="bodylink" href="../samples/jdom.xml">JDOM Example</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using Microsoft Access</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using MySQL</a>
      </p>
      <p>
         <a class="bodylink" href="../samples/shakespeare.xml">Shakespeare Example</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">XQuery example using the saxon:stream pragma</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">XSLT example using xsl:copy-of</a>
      </p>
      <p class="subhead">EXAMPLES</p>
      <p>
         <a class="bodylink" href="../xsl-elements/template.xml">Examples:</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/patterns/examples.xml">Examples of Patterns</a>
      </p>
      <p>
         <a class="bodylink" href="../samples/trax.xml">JAXP Transformation Examples</a>
      </p>
      <p class="subhead">EXECUTE</p>
      <p>
         <a class="bodylink" href="../sql-extension/execute.xml">sql:execute</a>
      </p>
      <p class="subhead">EXISTING</p>
      <p>
         <a class="bodylink" href="../changes/s90/oldapi90.xml">Changes to existing APIs</a>
      </p>
      <p class="subhead">EXISTS</p>
      <p>
         <a class="bodylink" href="../functions/intro/exists.xml">exists</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/exists.xml">exists($arg as item()*) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">EXPANSION</p>
      <p>
         <a class="bodylink" href="../changes/s90/schema90.xml">Expansion of attribute and element defaults</a>
      </p>
      <p class="subhead">EXPLAIN</p>
      <p>
         <a class="bodylink" href="../extensions/attributes/explain.xml">saxon:explain</a>
      </p>
      <p class="subhead">EXPORTING</p>
      <p>
         <a class="bodylink" href="../schema-processing/scm.xml">Importing and Exporting Schema Component Models</a>
      </p>
      <p class="subhead">EXPRESSION</p>
      <p>
         <a class="bodylink" href="../changes/s90/expressiontree90.xml">Expression tree changes</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/analyze-string.xml">regular expression</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/expression.xml">saxon:expression()</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/intro.xml">XPath 2.0 Expression Syntax</a>
      </p>
      <p class="subhead">EXPRESSIONS</p>
      <p>
         <a class="bodylink" href="../expressions/arithmetic.xml">Arithmetic expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/boolean.xml">Boolean expressions: AND and OR</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/conditionals.xml">Conditional Expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../xpath-api/s9api-xpath.xml">Evaluating XPath Expressions using s9api</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/filter.xml">Filter expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/for.xml">For Expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/path.xml">Path expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/quantified.xml">Quantified Expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/range.xml">Range expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/sequence.xml">Sequence expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/streamable-xpath.xml">Streamable path expressions</a>
      </p>
      <p class="subhead">EXSLT</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">EXSLT</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/exslt.xml">EXSLT</a>
      </p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">EXSLT extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/exslt.xml">EXSLT Extensions</a>
      </p>
      <p class="subhead">EXTENSIBILITY</p>
      <p>
         <a class="bodylink" href="../changes/intro92/extensibility92.xml">Extensibility</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro91/extensibility91.xml">Extensibility</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/extensibility.xml">Extensibility</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/intro.xml">Extensibility</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/extensibility-93.xml">Extensibility changes</a>
      </p>
      <p class="subhead">EXTENSION</p>
      <p>
         <a class="bodylink"
            href="../xpath-api/jaxp-xpath/jaxp-xpath-extension-functions.xml">Calling JAXP XPath extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/converting-args.net.xml">Converting Arguments to .NET Extension Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/converting-args.xml">Converting Arguments to Java Extension Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.net.xml">Converting the Result of a .NET Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.xml">Converting the Result of a Java Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/attributes.xml">Extension attributes (XSLT only)</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions.xml">Extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/instructions.xml">Extension instructions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/instructions.xml">Implementing extension instructions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/integratedfunctions.xml">Integrated extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/map.xml">The Map Extension</a>
      </p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">The Saxon SQL extension</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/intro.xml">The Saxon SQL Extension</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/sql-93.xml">The SQL Extension</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">Writing reflexive extension functions for .NET</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/functions.xml">Writing reflexive extension functions in Java</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/instructions.xml">Writing XSLT extension instructions</a>
      </p>
      <p class="subhead">EXTENSIONS</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">EXSLT extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/exslt.xml">EXSLT Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/extensions-93.xml">Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro92/extensions92.xml">Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro91/extensions91.xml">Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/extensions90.xml">Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/intro.xml">Saxon Extensions</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/extensions11.xml">Saxon extensions to XML Schema 1.1</a>
      </p>
      <p>
         <a class="bodylink"
            href="../schema-processing/extensions11/extended-uniqueness-constraints.xml">Saxon extensions to XSD uniqueness and referential constraints</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro92/xsd92.xml">Saxon XSD Extensions</a>
      </p>
      <p class="subhead">EXTERNAL</p>
      <p>
         <a class="bodylink" href="../changes/intro92/models92.xml">External Object Models</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_F.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>