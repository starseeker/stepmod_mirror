<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_F" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: F</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: F"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>F</h1>
      <p class="subhead">F</p>
      <p>
         <a class="bodylink" href="../functions/intro/filter.xml">filter($f as function(item()) as xs:boolean, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-left.xml">fold-left($f as function(item()*, item()) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-right.xml">fold-right($f as function(item(), item()*) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/map.xml">map($f as function(item()) as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/map-pairs.xml">map-pairs($f as function(item(), item()) as item()*, $seq1 as item()*, $seq2 as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">FACET</p>
      <p>
         <a class="bodylink" href="../schema-processing/extensions11/preprocess.xml">The saxon:preprocess facet</a>
      </p>
      <p class="subhead">FACETS</p>
      <p>
         <a class="bodylink" href="../schema-processing/extensions11/saxon.message.xml">Messages associated with assertions and other facets</a>
      </p>
      <p class="subhead">FACTORY</p>
      <p>
         <a class="bodylink"
            href="../configuration/config-interfaces/jaxp-configuration.xml">JAXP Factory Interfaces</a>
      </p>
      <p class="subhead">FALLBACK</p>
      <p>
         <a class="bodylink" href="../xsl-elements/fallback.xml">xsl:fallback</a>
      </p>
      <p class="subhead">FALSE</p>
      <p>
         <a class="bodylink" href="../functions/intro/false.xml">false</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/false.xml">false() &#8594; xs:boolean</a>
      </p>
      <p class="subhead">FEATURES</p>
      <p>
         <a class="bodylink" href="../configuration/config-features.xml">Configuration Features</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/intro.xml">implementation-defined features</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/xquery11support/miscellaneous.xml">Miscellaneous XQuery 3.0 Features</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/schema11/misc-xsd11.xml">Miscellaneous XSD 1.1 Features</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/xpath30new.xml">New features in XPath 3.0</a>
      </p>
      <p>
         <a class="bodylink" href="../conformance/schema11.xml">Unimplemented Features</a>
      </p>
      <p class="subhead">FIELD</p>
      <p>
         <a class="bodylink" href="../extensibility/functions.xml">Identifying the Java constructor, method, or field</a>
      </p>
      <p class="subhead">FILE</p>
      <p>
         <a class="bodylink" href="../sourcedocs/ptree.xml">The PTree File Format</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/configuration-file.xml">The Saxon configuration file</a>
      </p>
      <p class="subhead">FILES</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/base64Binary-method.xml">binary output files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/hexBinary-method.xml">binary output files</a>
      </p>
      <p>
         <a class="bodylink" href="../about/installationjava/jarfiles.xml">JAR files included in the product</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/collections.xml">Using catalog files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/uri-resolver.xml">Writing a URI Resolver for Input Files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/output-uri-resolver.xml">Writing a URI Resolver for Output Files</a>
      </p>
      <p class="subhead">FILTER</p>
      <p>
         <a class="bodylink" href="../functions/intro/filter.xml">filter</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">filter()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/filter.xml">filter($f as function(item()) as xs:boolean, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/filter.xml">Filter expressions</a>
      </p>
      <p class="subhead">FILTERS</p>
      <p>
         <a class="bodylink" href="../sourcedocs/input-filters.xml">Writing input filters</a>
      </p>
      <p class="subhead">FINALLY</p>
      <p>
         <a class="bodylink" href="../extensions/instructions/finally.xml">saxon:finally</a>
      </p>
      <p class="subhead">FIND</p>
      <p>
         <a class="bodylink" href="../extensions/functions/find.xml">saxon:find()</a>
      </p>
      <p class="subhead">FLAGS</p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/matches.xml">matches($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:string*</a>
      </p>
      <p class="subhead">FLOOR</p>
      <p>
         <a class="bodylink" href="../functions/intro/floor.xml">floor</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/floor.xml">floor($arg as numeric?) &#8594; numeric?</a>
      </p>
      <p class="subhead">FN</p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">fn:analyze-string()</a>
      </p>
      <p class="subhead">FOLD-LEFT</p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-left.xml">fold-left</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">fold-left()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-left.xml">fold-left($f as function(item()*, item()) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">FOLD-RIGHT</p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-right.xml">fold-right</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">fold-right()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-right.xml">fold-right($f as function(item(), item()*) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">FOR-EACH</p>
      <p>
         <a class="bodylink" href="../xsl-elements/for-each.xml">xsl:for-each</a>
      </p>
      <p class="subhead">FOR-EACH-GROUP</p>
      <p>
         <a class="bodylink" href="../extensions/functions/for-each-group.xml">saxon:for-each-group()</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/for-each-group.xml">xsl:for-each-group</a>
      </p>
      <p class="subhead">FORMAT</p>
      <p>
         <a class="bodylink" href="../using-xquery/resultformat.xml">Result Format</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/ptree.xml">The PTree File Format</a>
      </p>
      <p class="subhead">FORMAT-DATE</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p class="subhead">FORMAT-DATETIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/format-dateTime.xml">saxon:format-dateTime()</a>
      </p>
      <p class="subhead">FORMAT-INTEGER</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-integer.xml">format-integer</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">format-integer()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-integer.xml">format-integer($value as xs:integer?, $picture as xs:string, $language as xs:language) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-integer.xml">format-integer($value as xs:integer?, $picture as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">FORMAT-NUMBER</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number($value as numeric?, $picture as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/format-number.xml">saxon:format-number()</a>
      </p>
      <p class="subhead">FORMAT-TIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p class="subhead">FORUMS</p>
      <p>
         <a class="bodylink" href="../about/support/forum.xml">Lists and forums for getting help</a>
      </p>
      <p class="subhead">FROM</p>
      <p>
         <a class="bodylink" href="../sourcedocs/builder-api.xml">Building a Source Document from an application</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/querycompilation/callingcompiledfromapp.xml">Calling Compiled Queries from an Application</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/callingfunctions.xml">Calling XQuery Functions from Java</a>
      </p>
      <p>
         <a class="bodylink"
            href="../configuration/config-interfaces/config-commandline.xml">Configuration from the command line</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-api.xml">Controlling Validation from Java</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/map.xml">Getting a value from the map</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding.xml">Invoking XSLT from an application</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/querycompilation/compilercommandline.xml">Java Code Generation from the Command Line</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/querycompilation/runningcompiledfromcommandline.xml">Running Compiled Code from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query.xml">Running Queries from a Java Application</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/ant-93.xml">Running Saxon from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/xsltfromant.xml">Running Saxon XSLT transformations from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-from-ant.xml">Running validation from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/commandline.xml">Running Validation from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/commandline.xml">Running XQuery from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/commandline.xml">Running XSLT from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/saqueryapi.xml">Schema-Aware XQuery from Java</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/saquerycmd.xml">Schema-Aware XQuery from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/satransformapi.xml">Schema-Aware XSLT from Java</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/satransformcmd.xml">Schema-Aware XSLT from the Command Line</a>
      </p>
      <p class="subhead">FUNC</p>
      <p>
         <a class="bodylink" href="../functions/intro/function-arity.xml">function-arity($func as function(*)) &#8594; xs:integer</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-name.xml">function-name($func as function(*)) &#8594; xs:QName?</a>
      </p>
      <p class="subhead">FUNCTION</p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.net.xml">Converting the Result of a .NET Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.xml">Converting the Result of a Java Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/filter.xml">filter($f as function(item()) as xs:boolean, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-left.xml">fold-left($f as function(item()*, item()) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/fold-right.xml">fold-right($f as function(item(), item()*) as item()*, $zero as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-arity.xml">function-arity($func as function(*)) &#8594; xs:integer</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string, $arity as xs:integer) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../expressions/functioncalls.xml">Function Calls</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-name.xml">function-name($func as function(*)) &#8594; xs:QName?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/map.xml">map($f as function(item()) as item()*, $seq as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/map-pairs.xml">map-pairs($f as function(item(), item()) as item()*, $seq1 as item()*, $seq2 as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/function.xml">saxon:function()</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/function.xml">xsl:function</a>
      </p>
      <p class="subhead">FUNCTION-ARITY</p>
      <p>
         <a class="bodylink" href="../functions/intro/function-arity.xml">function-arity</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-arity.xml">function-arity($func as function(*)) &#8594; xs:integer</a>
      </p>
      <p class="subhead">FUNCTION-AVAILABLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string, $arity as xs:integer) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-available.xml">function-available($function as xs:string) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">FUNCTION-NAME</p>
      <p>
         <a class="bodylink" href="../functions/intro/function-name.xml">function-name</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/function-name.xml">function-name($func as function(*)) &#8594; xs:QName?</a>
      </p>
      <p class="subhead">FUNCTIONS</p>
      <p>
         <a class="bodylink"
            href="../xpath-api/jaxp-xpath/jaxp-xpath-extension-functions.xml">Calling JAXP XPath extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/callingfunctions.xml">Calling XQuery Functions from Java</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/converting-args.net.xml">Converting Arguments to .NET Extension Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/converting-args.xml">Converting Arguments to Java Extension Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions.xml">Extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">Functions and Operators</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro92/functions92.xml">Functions and Operators</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/xquery11support/higherorderfunctions.xml">Higher Order Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro92/xquery1192.xml">Higher-order functions</a>
      </p>
      <p>
         <a class="bodylink" href="../conformance/xpath20.xml">Implementation-defined aspects of Functions and Operators</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro.xml">Index of Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/integratedfunctions.xml">Integrated extension functions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">Writing reflexive extension functions for .NET</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/functions.xml">Writing reflexive extension functions in Java</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro.xml">XSLT 2.0 and XPath 2.0 Functions</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/xslt30.xml">XSLT 3.0 functions</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_G.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>