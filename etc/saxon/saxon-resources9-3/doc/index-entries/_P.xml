<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_P" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: P</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: P"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>P</h1>
      <p class="subhead">PACKAGE</p>
      <p>
         <a class="bodylink" href="../about/packages.xml">Choosing a software package</a>
      </p>
      <p class="subhead">PARALLEL</p>
      <p>
         <a class="bodylink" href="../extensions/attributes/threads.xml">parallel</a>
      </p>
      <p class="subhead">PARAM</p>
      <p>
         <a class="bodylink" href="../xsl-elements/param.xml">xsl:param</a>
      </p>
      <p class="subhead">PARAMETER1</p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">PARAMETER2</p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*, $collation as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/deep-equal.xml">deep-equal($parameter1 as item()*, $parameter2 as item()*) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">PARAMETERS</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras.xml">Additional serialization parameters</a>
      </p>
      <p class="subhead">PARAMQNAME</p>
      <p>
         <a class="bodylink" href="../functions/intro/QName.xml">QName($paramURI as xs:string?, $paramQName as xs:string) &#8594; xs:QName</a>
      </p>
      <p class="subhead">PARAMS</p>
      <p>
         <a class="bodylink" href="../functions/intro/serialize.xml">serialize($arg as node(), $params as node()*) &#8594; xs:string</a>
      </p>
      <p class="subhead">PARAMURI</p>
      <p>
         <a class="bodylink" href="../functions/intro/QName.xml">QName($paramURI as xs:string?, $paramQName as xs:string) &#8594; xs:QName</a>
      </p>
      <p class="subhead">PARENTHESES</p>
      <p>
         <a class="bodylink" href="../expressions/parentheses.xml">Parentheses and operator precedence</a>
      </p>
      <p class="subhead">PARSE</p>
      <p>
         <a class="bodylink" href="../extensions/functions/parse.xml">saxon:parse()</a>
      </p>
      <p class="subhead">PARSE-HTML</p>
      <p>
         <a class="bodylink" href="../extensions/functions/parse-html.xml">saxon:parse-html()</a>
      </p>
      <p class="subhead">PARSER</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A5 XPath Parser</a>
      </p>
      <p class="subhead">PARSE-XML</p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string, $baseURI as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p class="subhead">PARSING</p>
      <p>
         <a class="bodylink" href="../changes/intro92/parsing92.xml">Parsing</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro92/parsing92.xml">XML Parsing and Serialization</a>
      </p>
      <p>
         <a class="bodylink" href="../dotnet/xmlparsing.xml">XML Parsing in .NET</a>
      </p>
      <p class="subhead">PARTIALLY</p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/partialreading.xml">Reading source documents partially</a>
      </p>
      <p class="subhead">PARTY</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">Third Party Source Components</a>
      </p>
      <p class="subhead">PATCHES</p>
      <p>
         <a class="bodylink" href="../about/support/patches.xml">Bugs and patches</a>
      </p>
      <p class="subhead">PATH</p>
      <p>
         <a class="bodylink" href="../expressions/path.xml">Path expressions</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/path.xml">saxon:path()</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/streamable-xpath.xml">Streamable path expressions</a>
      </p>
      <p class="subhead">PATTERN</p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/analyze-string.xml">analyze-string($input as xs:string?, $pattern as xs:string) &#8594; element(fn:analyze-string-result)</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/matches.xml">matches($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/matches.xml">matches($input as xs:string?, $pattern as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/patterns/syntax.xml">Pattern syntax</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:string*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize($input as xs:string?, $pattern as xs:string) &#8594; xs:string*</a>
      </p>
      <p class="subhead">PATTERNS</p>
      <p>
         <a class="bodylink" href="../xsl-elements/patterns/examples.xml">Examples of Patterns</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/patterns.xml">XSLT Patterns</a>
      </p>
      <p class="subhead">PERFORMANCE</p>
      <p>
         <a class="bodylink" href="../using-xsl/performanceanalysis.xml">Performance Analysis</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/commandline.xml">performance measurement</a>
      </p>
      <p class="subhead">PERFORM-SORT</p>
      <p>
         <a class="bodylink" href="../xsl-elements/perform-sort.xml">xsl:perform-sort</a>
      </p>
      <p class="subhead">PI</p>
      <p>
         <a class="bodylink" href="../functions/intro/pi.xml">pi</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">pi()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/pi.xml">pi() &#8594; xs:double</a>
      </p>
      <p class="subhead">PICTURE</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-integer.xml">format-integer($value as xs:integer?, $picture as xs:string, $language as xs:language) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-integer.xml">format-integer($value as xs:integer?, $picture as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number($value as numeric?, $picture as xs:string, $decimal-format-name as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-number.xml">format-number($value as numeric?, $picture as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p class="subhead">PLACE</p>
      <p>
         <a class="bodylink" href="../functions/intro/format-date.xml">format-date($value as xs:date?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-dateTime.xml">format-dateTime($value as xs:dateTime?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p class="subhead">PLATFORM</p>
      <p>
         <a class="bodylink" href="../about/gettingstarted/gettingstarteddotnet.xml">Getting started with Saxon on the .NET platform</a>
      </p>
      <p>
         <a class="bodylink" href="../about/gettingstarted/gettingstartedjava.xml">Getting started with Saxon on the Java platform</a>
      </p>
      <p>
         <a class="bodylink" href="../about/installationdotnet.xml">Installation: .NET platform</a>
      </p>
      <p>
         <a class="bodylink" href="../about/installationjava.xml">Installation: Java platform</a>
      </p>
      <p>
         <a class="bodylink" href="../about/installationdotnet.xml">Prerequisites: .NET platform</a>
      </p>
      <p class="subhead">PLUS</p>
      <p>
         <a class="bodylink" href="../expressions/arithmetic/unary.xml">Unary plus and minus</a>
      </p>
      <p class="subhead">POSITION</p>
      <p>
         <a class="bodylink" href="../functions/intro/insert-before.xml">insert-before($target as item()*, $position as xs:integer, $inserts as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/position.xml">position</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/position.xml">position() &#8594; xs:integer</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/remove.xml">remove($target as item()*, $position as xs:integer) &#8594; item()*</a>
      </p>
      <p class="subhead">PRAGMA</p>
      <p>
         <a class="bodylink" href="../using-xquery/extensions.xml">The saxon:validate-type pragma</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">XQuery example using the saxon:stream pragma</a>
      </p>
      <p class="subhead">PRECEDENCE</p>
      <p>
         <a class="bodylink" href="../expressions/parentheses.xml">Parentheses and operator precedence</a>
      </p>
      <p class="subhead">PRECISION</p>
      <p>
         <a class="bodylink" href="../functions/intro/round.xml">round($arg as numeric?, $precision as xs:integer) &#8594; numeric?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/round-half-to-even.xml">round-half-to-even($arg as numeric?, $precision as xs:integer) &#8594; numeric?</a>
      </p>
      <p class="subhead">PREFIX</p>
      <p>
         <a class="bodylink" href="../functions/intro/namespace-uri-for-prefix.xml">namespace-uri-for-prefix($prefix as xs:string?, $element as element()) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">PREFIX-FROM-QNAME</p>
      <p>
         <a class="bodylink" href="../functions/intro/prefix-from-QName.xml">prefix-from-QName</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/prefix-from-QName.xml">prefix-from-QName($arg as xs:QName?) &#8594; xs:NCName?</a>
      </p>
      <p class="subhead">PRELOADING</p>
      <p>
         <a class="bodylink" href="../sourcedocs/preloading.xml">Preloading shared reference documents</a>
      </p>
      <p class="subhead">PREPROCESS</p>
      <p>
         <a class="bodylink" href="../schema-processing/extensions11/preprocess.xml">The saxon:preprocess facet</a>
      </p>
      <p class="subhead">PREREQUISITES</p>
      <p>
         <a class="bodylink" href="../about/installationjava/prerequisites.xml">Prerequisites</a>
      </p>
      <p>
         <a class="bodylink" href="../about/installationdotnet.xml">Prerequisites: .NET platform</a>
      </p>
      <p class="subhead">PRESERVE-SPACE</p>
      <p>
         <a class="bodylink" href="../xsl-elements/preserve-space.xml">xsl:preserve-space</a>
      </p>
      <p class="subhead">PRINT-STACK</p>
      <p>
         <a class="bodylink" href="../extensions/functions/printstack.xml">saxon:print-stack()</a>
      </p>
      <p class="subhead">PROBLEMS</p>
      <p>
         <a class="bodylink" href="../about/installationjava/licensefaq.xml">Troubleshooting license key problems</a>
      </p>
      <p class="subhead">PROCESSING</p>
      <p>
         <a class="bodylink" href="../extensions/attributes/threads.xml">Multi-threaded processing</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/collections.xml">Processing directories</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/furtherprocessing.xml">Processing the nodes returned by saxon:stream()</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/pull90.xml">Pull processing in Java</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-api/schema-jaxp.xml">Schema Processing using JAXP</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-api/schema-s9api.xml">Schema Processing using s9api</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/XInclude.xml">XInclude processing</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/intro.xml">XML Schema Processing</a>
      </p>
      <p class="subhead">PROCESSING-INSTRUCTION</p>
      <p>
         <a class="bodylink" href="../xsl-elements/processing-instruction.xml">xsl:processing-instruction</a>
      </p>
      <p class="subhead">PRODUCT</p>
      <p>
         <a class="bodylink" href="../about/installationjava/jarfiles.xml">JAR files included in the product</a>
      </p>
      <p class="subhead">PRODUCTS</p>
      <p>
         <a class="bodylink" href="../about/related.xml">Related Products</a>
      </p>
      <p class="subhead">PROJECTION</p>
      <p>
         <a class="bodylink" href="../changes/s90/optimization90.xml">Document Projection</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/projection.xml">Document Projection</a>
      </p>
      <p class="subhead">PTREE</p>
      <p>
         <a class="bodylink" href="../sourcedocs/ptree.xml">The PTree File Format</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/ptree-method.xml">The saxon:ptree serialization method</a>
      </p>
      <p class="subhead">PUBLIC</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">Mozilla Public License</a>
      </p>
      <p class="subhead">PUBLISHED</p>
      <p>
         <a class="bodylink" href="../conditions/algorithms.xml">Published Algorithms and Specifications</a>
      </p>
      <p class="subhead">PULL</p>
      <p>
         <a class="bodylink" href="../changes/s90/pull90.xml">Pull processing in Java</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_Q.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>