<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_R" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: R</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: R"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>R</h1>
      <p class="subhead">RANDOM</p>
      <p>
         <a class="bodylink" href="../extensions/exslt.xml">random()</a>
      </p>
      <p class="subhead">RANGE</p>
      <p>
         <a class="bodylink" href="../expressions/range.xml">Range expressions</a>
      </p>
      <p class="subhead">READING</p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/partialreading.xml">Reading source documents partially</a>
      </p>
      <p class="subhead">READ-ONCE</p>
      <p>
         <a class="bodylink" href="../extensions/attributes/read-once.xml">saxon:read-once</a>
      </p>
      <p class="subhead">RECEIVER</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/method.xml">Receiver</a>
      </p>
      <p class="subhead">RECOGNIZE-BINARY</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/recognize-binary.xml">The saxon:recognize-binary attribute</a>
      </p>
      <p class="subhead">REDISTRIBUTED</p>
      <p>
         <a class="bodylink" href="../conditions/redistributed.xml">Redistributed Components</a>
      </p>
      <p class="subhead">REDISTRIBUTION</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">Redistribution</a>
      </p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">Redistribution</a>
      </p>
      <p class="subhead">REFERENCE</p>
      <p>
         <a class="bodylink" href="../sourcedocs/preloading.xml">Preloading shared reference documents</a>
      </p>
      <p class="subhead">REFERENCES</p>
      <p>
         <a class="bodylink" href="../expressions/variables.xml">Variable References</a>
      </p>
      <p class="subhead">REFERENTIAL</p>
      <p>
         <a class="bodylink"
            href="../schema-processing/extensions11/extended-uniqueness-constraints.xml">Saxon extensions to XSD uniqueness and referential constraints</a>
      </p>
      <p class="subhead">REFLEXIVE</p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">Writing reflexive extension functions for .NET</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/functions.xml">Writing reflexive extension functions in Java</a>
      </p>
      <p class="subhead">REGEX</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A6 Regex Translator</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/analyze-string.xml">regex</a>
      </p>
      <p class="subhead">REGEX-GROUP</p>
      <p>
         <a class="bodylink" href="../functions/intro/regex-group.xml">regex-group</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/regex-group.xml">regex-group() &#8594; xs:string</a>
      </p>
      <p class="subhead">REGISTERED</p>
      <p>
         <a class="bodylink" href="../sourcedocs/collections.xml">Registered Collections</a>
      </p>
      <p class="subhead">REGULAR</p>
      <p>
         <a class="bodylink" href="../extensions/functions/analyze-string.xml">regular expression</a>
      </p>
      <p class="subhead">RELATED</p>
      <p>
         <a class="bodylink" href="../about/related.xml">Related Products</a>
      </p>
      <p class="subhead">RELATIVE</p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri($relative as xs:string?, $base as xs:string) &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri($relative as xs:string?) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">RELEASE</p>
      <p>
         <a class="bodylink" href="../changes/intro.xml">Changes in this Release</a>
      </p>
      <p class="subhead">REMOVE</p>
      <p>
         <a class="bodylink" href="../functions/intro/remove.xml">remove</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/remove.xml">remove($target as item()*, $position as xs:integer) &#8594; item()*</a>
      </p>
      <p class="subhead">REPACKAGING</p>
      <p>
         <a class="bodylink" href="../changes/intro92/install92.xml">Repackaging</a>
      </p>
      <p class="subhead">REPLACE</p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">REPLACEMENT</p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/replace.xml">replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">REQUIRE-WELL-FORMED</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/require-well-formed.xml">The saxon:require-well-formed attribute</a>
      </p>
      <p class="subhead">RESOLVE-QNAME</p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-QName.xml">resolve-QName</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-QName.xml">resolve-QName($qname as xs:string?, $element as element()) &#8594; xs:QName?</a>
      </p>
      <p class="subhead">RESOLVER</p>
      <p>
         <a class="bodylink" href="../extensibility/uri-resolver.xml">Writing a URI Resolver for Input Files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/output-uri-resolver.xml">Writing a URI Resolver for Output Files</a>
      </p>
      <p class="subhead">RESOLVE-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri($relative as xs:string?, $base as xs:string) &#8594; xs:anyURI?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/resolve-uri.xml">resolve-uri($relative as xs:string?) &#8594; xs:anyURI?</a>
      </p>
      <p class="subhead">RESOURCES</p>
      <p>
         <a class="bodylink"
            href="../configuration/configuration-file/config-resources.xml">The &lt;resources&gt; element</a>
      </p>
      <p class="subhead">RESULT</p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.net.xml">Converting the Result of a .NET Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/function-result.xml">Converting the Result of a Java Extension Function</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/lre.xml">Literal Result Elements</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/resultformat.xml">Result Format</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/schema90.xml">Result tree validation</a>
      </p>
      <p class="subhead">RESULT-DOCUMENT</p>
      <p>
         <a class="bodylink" href="../extensions/functions/result-document.xml">saxon:result-document()</a>
      </p>
      <p>
         <a class="bodylink" href="../xsl-elements/result-document.xml">xsl:result-document</a>
      </p>
      <p class="subhead">RESULTS</p>
      <p>
         <a class="bodylink" href="../conformance/xslt20.xml">Test results</a>
      </p>
      <p class="subhead">RETURN</p>
      <p>
         <a class="bodylink" href="../xpath-api/jaxp-xpath/return-types.xml">Return types</a>
      </p>
      <p class="subhead">RETURNED</p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/furtherprocessing.xml">Processing the nodes returned by saxon:stream()</a>
      </p>
      <p class="subhead">REVERSE</p>
      <p>
         <a class="bodylink" href="../functions/intro/reverse.xml">reverse</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/reverse.xml">reverse($arg as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">ROOT</p>
      <p>
         <a class="bodylink" href="../functions/intro/root.xml">root</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/root.xml">root() &#8594; node()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/root.xml">root($arg as node()?) &#8594; node()?</a>
      </p>
      <p class="subhead">ROUND</p>
      <p>
         <a class="bodylink" href="../functions/intro/round.xml">round</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">round()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/round.xml">round($arg as numeric?, $precision as xs:integer) &#8594; numeric?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/round.xml">round($arg as numeric?) &#8594; numeric?</a>
      </p>
      <p class="subhead">ROUND-HALF-TO-EVEN</p>
      <p>
         <a class="bodylink" href="../functions/intro/round-half-to-even.xml">round-half-to-even</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/round-half-to-even.xml">round-half-to-even($arg as numeric?, $precision as xs:integer) &#8594; numeric?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/round-half-to-even.xml">round-half-to-even($arg as numeric?) &#8594; numeric?</a>
      </p>
      <p class="subhead">RULES</p>
      <p>
         <a class="bodylink"
            href="../extensibility/converting-args/converting-arguments.xml">Converting Method Arguments - General Rules</a>
      </p>
      <p class="subhead">RUNNING</p>
      <p>
         <a class="bodylink" href="../configuration/config-interfaces/config-ant.xml">Configuration when running Ant</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/querycompilation/runningcompiledasservlet.xml">Running a Compiled Query as a Servlet</a>
      </p>
      <p>
         <a class="bodylink"
            href="../using-xquery/querycompilation/runningcompiledfromcommandline.xml">Running Compiled Code from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query.xml">Running Queries from a Java Application</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/ant-93.xml">Running Saxon from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/xsltfromant.xml">Running Saxon XSLT transformations from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using Microsoft Access</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using MySQL</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query/embedding.xml">Running the Query</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-from-ant.xml">Running validation from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/commandline.xml">Running Validation from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/commandline.xml">Running XQuery from the Command Line</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/commandline.xml">Running XSLT from the Command Line</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_S.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>