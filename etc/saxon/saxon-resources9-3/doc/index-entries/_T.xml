<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_T" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: T</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: T"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>T</h1>
      <p class="subhead">TAGSOUP</p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">TagSoup</a>
      </p>
      <p class="subhead">TAIL</p>
      <p>
         <a class="bodylink" href="../functions/intro/tail.xml">tail</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">tail()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tail.xml">tail($arg as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">TAN</p>
      <p>
         <a class="bodylink" href="../functions/intro/tan.xml">tan</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/fo30-93.xml">tan()</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tan.xml">tan($&#952; as xs:double?) &#8594; xs:double?</a>
      </p>
      <p class="subhead">TARGET</p>
      <p>
         <a class="bodylink" href="../functions/intro/insert-before.xml">insert-before($target as item()*, $position as xs:integer, $inserts as item()*) &#8594; item()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/remove.xml">remove($target as item()*, $position as xs:integer) &#8594; item()*</a>
      </p>
      <p class="subhead">TASK</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A7 Ant Saxon Task</a>
      </p>
      <p class="subhead">TECHNICAL</p>
      <p>
         <a class="bodylink" href="../about/support.xml">Technical Support</a>
      </p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">technical support</a>
      </p>
      <p>
         <a class="bodylink" href="../conditions/intro.xml">Technical Support (Saxon-HE)</a>
      </p>
      <p class="subhead">TEMPLATE</p>
      <p>
         <a class="bodylink" href="../xsl-elements/template.xml">xsl:template</a>
      </p>
      <p class="subhead">TEMPLATES</p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/streaming-templates.xml">Streaming Templates</a>
      </p>
      <p class="subhead">TEST</p>
      <p>
         <a class="bodylink" href="../conformance/xslt20.xml">Test results</a>
      </p>
      <p class="subhead">TESTLANG</p>
      <p>
         <a class="bodylink" href="../functions/intro/lang.xml">lang($testlang as xs:string?, $node as node()) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/lang.xml">lang($testlang as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">TESTS</p>
      <p>
         <a class="bodylink" href="../conformance/xquery.xml">Conformance Tests</a>
      </p>
      <p class="subhead">TEXT</p>
      <p>
         <a class="bodylink" href="../xsl-elements/text.xml">xsl:text</a>
      </p>
      <p class="subhead">THIRD</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">Third Party Source Components</a>
      </p>
      <p class="subhead">THIRD-PARTY</p>
      <p>
         <a class="bodylink" href="../sourcedocs/thirdparty.xml">Third-party Object Models: DOM, JDOM, XOM, and DOM4J</a>
      </p>
      <p class="subhead">THREADS</p>
      <p>
         <a class="bodylink" href="../extensions/attributes/threads.xml">saxon:threads</a>
      </p>
      <p class="subhead">TIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?, $timezone as xs:dayTimeDuration?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?, $timezone as xs:dayTimeDuration?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/current-time.xml">current-time() &#8594; xs:time</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/dateTime.xml">dateTime($arg1 as xs:date?, $arg2 as xs:time?) &#8594; xs:dateTime?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string, $language as xs:string?, $calendar as xs:string?, $place as xs:string?) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/format-time.xml">format-time($value as xs:time?, $picture as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/hours-from-time.xml">hours-from-time($arg as xs:time?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/minutes-from-time.xml">minutes-from-time($arg as xs:time?) &#8594; xs:integer?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/seconds-from-time.xml">seconds-from-time($arg as xs:time?) &#8594; xs:decimal?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-time.xml">timezone-from-time($arg as xs:time?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p class="subhead">TIMEZONE</p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-dateTime-to-timezone.xml">adjust-dateTime-to-timezone($arg as xs:dateTime?, $timezone as xs:dayTimeDuration?) &#8594; xs:dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-date-to-timezone.xml">adjust-date-to-timezone($arg as xs:date?, $timezone as xs:dayTimeDuration?) &#8594; xs:date?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/adjust-time-to-timezone.xml">adjust-time-to-timezone($arg as xs:time?, $timezone as xs:dayTimeDuration?) &#8594; xs:time?</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/adjusttociviltime.xml">civil timezone</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/adjusttociviltime.xml">Olson timezone names</a>
      </p>
      <p class="subhead">TIMEZONE-FROM-DATE</p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-date.xml">timezone-from-date</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-date.xml">timezone-from-date($arg as xs:date?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p class="subhead">TIMEZONE-FROM-DATETIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-dateTime.xml">timezone-from-dateTime</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-dateTime.xml">timezone-from-dateTime($arg as xs:dateTime?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p class="subhead">TIMEZONE-FROM-TIME</p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-time.xml">timezone-from-time</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/timezone-from-time.xml">timezone-from-time($arg as xs:time?) &#8594; xs:dayTimeDuration?</a>
      </p>
      <p class="subhead">TIPS</p>
      <p>
         <a class="bodylink" href="../extensibility/dotnetextensions.xml">Tips for Dynamic Loading in .NET"</a>
      </p>
      <p class="subhead">TOKENIZE</p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize($input as xs:string?, $pattern as xs:string, $flags as xs:string) &#8594; xs:string*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/tokenize.xml">tokenize($input as xs:string?, $pattern as xs:string) &#8594; xs:string*</a>
      </p>
      <p class="subhead">TOOLS</p>
      <p>
         <a class="bodylink" href="../about/related.xml">Open Source tools</a>
      </p>
      <p class="subhead">TOUR</p>
      <p>
         <a class="bodylink" href="../samples/tour.xml">Knight's Tour</a>
      </p>
      <p class="subhead">TRACE</p>
      <p>
         <a class="bodylink" href="../functions/intro/trace.xml">trace</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/trace.xml">trace($value as item()*, $label as xs:string) &#8594; item()*</a>
      </p>
      <p class="subhead">TRACING</p>
      <p>
         <a class="bodylink" href="../changes/intro91/trace91.xml">Diagnostics and Tracing</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/commandline.xml">tracing</a>
      </p>
      <p class="subhead">TRANSFORM</p>
      <p>
         <a class="bodylink" href="../extensions/functions/transform.xml">saxon:transform()</a>
      </p>
      <p class="subhead">TRANSFORMATION</p>
      <p>
         <a class="bodylink" href="../samples/trax.xml">JAXP Transformation Examples</a>
      </p>
      <p class="subhead">TRANSFORMATIONS</p>
      <p>
         <a class="bodylink" href="../using-xsl/xsltfromant.xml">Running Saxon XSLT transformations from Ant</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding/jaxp-transformation.xml">Using JAXP for Transformations</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding/s9api-transformation.xml">Using s9api for Transformations</a>
      </p>
      <p class="subhead">TRANSLATE</p>
      <p>
         <a class="bodylink" href="../functions/intro/translate.xml">translate</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/translate.xml">translate($arg as xs:string?, $mapString as xs:string, $transString as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">TRANSLATOR</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A6 Regex Translator</a>
      </p>
      <p class="subhead">TRANSSTRING</p>
      <p>
         <a class="bodylink" href="../functions/intro/translate.xml">translate($arg as xs:string?, $mapString as xs:string, $transString as xs:string) &#8594; xs:string</a>
      </p>
      <p class="subhead">TRAX</p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding.xml">TrAX</a>
      </p>
      <p class="subhead">TREAT</p>
      <p>
         <a class="bodylink" href="../expressions/cast.xml">Cast as, Treat as</a>
      </p>
      <p class="subhead">TREE</p>
      <p>
         <a class="bodylink" href="../sourcedocs/choosingmodel.xml">Choosing a Tree Model</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/expressiontree90.xml">Expression tree changes</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/s90/schema90.xml">Result tree validation</a>
      </p>
      <p class="subhead">TROUBLESHOOTING</p>
      <p>
         <a class="bodylink" href="../about/installationjava/licensefaq.xml">Troubleshooting license key problems</a>
      </p>
      <p class="subhead">TRUE</p>
      <p>
         <a class="bodylink" href="../functions/intro/true.xml">true</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/true.xml">true() &#8594; xs:boolean</a>
      </p>
      <p class="subhead">TRY</p>
      <p>
         <a class="bodylink" href="../extensions/instructions/try-instr.xml">saxon:try</a>
      </p>
      <p>
         <a class="bodylink" href="../extensions/functions/try.xml">saxon:try()</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/xquery11support/trycatch.xml">Try/Catch</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/xslt30.xml">xsl:try and xsl:catch</a>
      </p>
      <p class="subhead">TYPE</p>
      <p>
         <a class="bodylink" href="../schema-processing/schema11/cta.xml">Conditional Type Assignment</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/type-available.xml">type-available($type as xs:string) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">TYPE-ANNOTATION</p>
      <p>
         <a class="bodylink" href="../extensions/functions/typeannotation.xml">saxon:type-annotation()</a>
      </p>
      <p class="subhead">TYPE-AVAILABLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/type-available.xml">type-available</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/type-available.xml">type-available($type as xs:string) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">TYPES</p>
      <p>
         <a class="bodylink" href="../schema-processing/schema11/assertions.xml">Assertions on Complex Types</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/schema11/simpleassert.xml">Assertions on Simple Types</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/jaxpsources.xml">JAXP Source Types</a>
      </p>
      <p>
         <a class="bodylink" href="../xpath-api/jaxp-xpath/return-types.xml">Return types</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_U.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>