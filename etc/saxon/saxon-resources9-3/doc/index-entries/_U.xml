<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="index-entries" page="_U" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: U</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: U"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>U</h1>
      <p class="subhead">UNARY</p>
      <p>
         <a class="bodylink" href="../expressions/arithmetic/unary.xml">Unary plus and minus</a>
      </p>
      <p class="subhead">UNICODE</p>
      <p>
         <a class="bodylink" href="../conditions/third-party-components.xml">A4 Unicode Normalization</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/collation.xml">Unicode Codepoint Collation</a>
      </p>
      <p class="subhead">UNIMPLEMENTED</p>
      <p>
         <a class="bodylink" href="../conformance/schema11.xml">Unimplemented Features</a>
      </p>
      <p class="subhead">UNION</p>
      <p>
         <a class="bodylink" href="../expressions/union.xml">Union</a>
      </p>
      <p class="subhead">UNIQUENESS</p>
      <p>
         <a class="bodylink"
            href="../schema-processing/extensions11/extended-uniqueness-constraints.xml">Saxon extensions to XSD uniqueness and referential constraints</a>
      </p>
      <p class="subhead">UNORDERED</p>
      <p>
         <a class="bodylink" href="../functions/intro/unordered.xml">unordered</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unordered.xml">unordered($sourceSeq as item()*) &#8594; item()*</a>
      </p>
      <p class="subhead">UNPARSED-ENTITIES</p>
      <p>
         <a class="bodylink" href="../extensions/functions/unparsedentities.xml">saxon:unparsed-entities()</a>
      </p>
      <p class="subhead">UNPARSED-ENTITY-PUBLIC-ID</p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-entity-public-id.xml">unparsed-entity-public-id</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-entity-public-id.xml">unparsed-entity-public-id() &#8594; xs:string</a>
      </p>
      <p class="subhead">UNPARSED-ENTITY-URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-entity-uri.xml">unparsed-entity-uri</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-entity-uri.xml">unparsed-entity-uri() &#8594; xs:string</a>
      </p>
      <p class="subhead">UNPARSED-TEXT</p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text.xml">unparsed-text</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text.xml">unparsed-text($href as xs:string?, $encoding as xs:string) &#8594; xs:string?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text.xml">unparsed-text($href as xs:string?) &#8594; xs:string?</a>
      </p>
      <p class="subhead">UNPARSED-TEXT-AVAILABLE</p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available($href as xs:string?, $encoding as xs:string) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/unparsed-text-available.xml">unparsed-text-available($href as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p class="subhead">UNTYPED</p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string, $baseURI as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/parse-xml.xml">parse-xml($arg as xs:string) &#8594; document-node(element(*, xs:untyped))</a>
      </p>
      <p class="subhead">UPDATE</p>
      <p>
         <a class="bodylink" href="../sql-extension/update.xml">sql:update and sql:column</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/update.xml">Using XQuery Update</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro/xquery30-93.xml">XQuery 3.0 and XQuery Update changes</a>
      </p>
      <p>
         <a class="bodylink" href="../conformance/update.xml">XQuery Update 1.0</a>
      </p>
      <p class="subhead">UPDATES</p>
      <p>
         <a class="bodylink" href="../changes/intro92/updates92.xml">XQuery Updates</a>
      </p>
      <p>
         <a class="bodylink" href="../changes/intro91/xqupdate91.xml">XQuery Updates</a>
      </p>
      <p class="subhead">UPPER-CASE</p>
      <p>
         <a class="bodylink" href="../functions/intro/upper-case.xml">upper-case</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/upper-case.xml">upper-case($arg as xs:string?) &#8594; xs:string</a>
      </p>
      <p class="subhead">URI</p>
      <p>
         <a class="bodylink" href="../functions/intro/doc.xml">doc($uri as xs:string?) &#8594; document-node()?</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/doc-available.xml">doc-available($uri as xs:string?) &#8594; xs:boolean</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document($uri as item()*, $base as node()*) &#8594; node()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/document.xml">document($uri as item()*) &#8594; node()*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/escape-html-uri.xml">escape-html-uri($uri as xs:string?) &#8594; xs:string</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/uri-resolver.xml">Writing a URI Resolver for Input Files</a>
      </p>
      <p>
         <a class="bodylink" href="../extensibility/output-uri-resolver.xml">Writing a URI Resolver for Output Files</a>
      </p>
      <p class="subhead">URI-COLLECTION</p>
      <p>
         <a class="bodylink" href="../functions/intro/uri-collection.xml">uri-collection</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/uri-collection.xml">uri-collection() &#8594; xs:anyURI*</a>
      </p>
      <p>
         <a class="bodylink" href="../functions/intro/uri-collection.xml">uri-collection($arg as xs:string?) &#8594; xs:anyURI*</a>
      </p>
      <p class="subhead">URI-PART</p>
      <p>
         <a class="bodylink" href="../functions/intro/encode-for-uri.xml">encode-for-uri($uri-part as xs:string?) &#8594; xs:string</a>
      </p>
      <p class="subhead">USE</p>
      <p>
         <a class="bodylink" href="../using-xquery/usecases.xml">Use Cases</a>
      </p>
      <p class="subhead">USER-DEFINED</p>
      <p>
         <a class="bodylink" href="../extensions/output-extras/user-defined-atts.xml">User-defined serialization attributes</a>
      </p>
      <p class="subhead">USING</p>
      <p>
         <a class="bodylink" href="../configuration/config-interfaces/s9api-config.xml">Configuration using s9api</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/config-interfaces/config-dotnet.xml">Configuration using the .NET API</a>
      </p>
      <p>
         <a class="bodylink" href="../configuration/config-interfaces/config-xqj.xml">Configuration using XQJ</a>
      </p>
      <p>
         <a class="bodylink" href="../xpath-api/s9api-xpath.xml">Evaluating XPath Expressions using s9api</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query/xqj.xml">Invoking XQuery using the XQJ API</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using Microsoft Access</a>
      </p>
      <p>
         <a class="bodylink" href="../sql-extension/example.xml">Running the example using MySQL</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-api/schema-jaxp.xml">Schema Processing using JAXP</a>
      </p>
      <p>
         <a class="bodylink" href="../schema-processing/validation-api/schema-s9api.xml">Schema Processing using s9api</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/collections.xml">Using catalog files</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding/jaxp-transformation.xml">Using JAXP for Transformations</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/embedding/s9api-transformation.xml">Using s9api for Transformations</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/api-query/s9api-query.xml">Using s9api for XQuery</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/streamwithiterate.xml">Using saxon:stream() with saxon:iterate</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/intro.xml">Using XQuery</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xquery/update.xml">Using XQuery Update</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/intro.xml">Using XSLT 2.0</a>
      </p>
      <p>
         <a class="bodylink" href="../using-xsl/intro.xml">Using XSLT 2.0 Stylesheets</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">XQuery example using the saxon:stream pragma</a>
      </p>
      <p>
         <a class="bodylink" href="../sourcedocs/streaming/burst-mode-streaming.xml">XSLT example using xsl:copy-of</a>
      </p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="_V.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>