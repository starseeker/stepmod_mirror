<?xml version="1.0" encoding="iso-8859-1"?>
<?xml-stylesheet href="../make-menu.xsl" type="text/xsl"?><html>
   <head>
      <this-is section="xsl-elements" page="text" subpage=""/>
      <!--
           Generated at 2010-10-29T18:20:48.427+01:00--><title>Saxonica: XSLT and XQuery Processing: xsl:text</title>
      <meta name="coverage" content="Worldwide"/>
      <meta name="copyright" content="Copyright Saxonica Ltd"/>
      <meta name="title" content="Saxonica: XSLT and XQuery Processing: xsl:text"/>
      <meta name="robots" content="noindex,nofollow"/>
      <link rel="stylesheet" href="../saxondocs.css" type="text/css"/>
   </head>
   <body class="main">
      <h1>xsl:text</h1>
      <p>The <code>xsl:text</code> element causes its content to be output.</p>
      <p>The main reason for enclosing text within an <code>xsl:text</code> element is
to allow white space to be output.
White space nodes in the stylesheet are ignored unless they appear immediately within
an <code>xsl:text</code> element.</p>
      <p>The optional <code>disable-output-escaping</code> attribute may be set to "yes" or "no"; the default is
"no". If set to "yes", special characters such as "&lt;" and "&amp;" will be output as themselves,
not as entities. Be aware that in general this can produce non-well-formed XML or HTML. It is useful,
however, when generating things such as ASP or JSP pages. Escaping may not be disabled when writing
to a result tree fragment.</p>
      <p><i>Saxon 7.4 has reverted to the XSLT 1.0 specification of <code>xsl:text</code>: the instruction
must contain only text, it cannot contain a child element.</i></p>
      <table width="100%">
         <tr>
            <td>
               <p align="right"><a class="nav" href="value-of.xml">Next</a></p>
            </td>
         </tr>
      </table>
   </body>
</html>