<!DOCTYPE html
PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<!-- $Id: util.htm,v 1.18 2003/01/06 07:31:28 robbod Exp $ -->
<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>STEP modules help</TITLE>
<link rel="stylesheet" type="text/css" href="../css/stepmod.css">
</HEAD>
<BODY>

  <!-- table of contents -->
  <table border="0" cellspacing="0" cellpadding="0">
    <tr>          
      <td width="120">
        <h3 align="left">
          <b>Help</b><br/>
          <small>$Revision: 1.18 $</small>
        </h3>
      </td>
      <td width="300" align="center">
        <h3 align="left">Help index</h3>
          
      </td>
    </tr>    
  </table>
  <hr/>
  <center>
    <small>
      [
      <a href="../repository_index.htm">STEPmod HTML</a>
      &nbsp;|&nbsp;
      <a href="../repository_index.xml">STEPmod XML</a>
      &nbsp;|&nbsp;
      <a href="index.htm">Help index</a>
      ]
    </small>
  </center>

  <!-- Index -->
  <h2>Express development tool JSDAI</h2>
  JSDAI supports the development of Express data models and Express based applications. It is written in Java and runs either stand-alone or under the Eclipse IDE.
  For the purpose of stepmod the Eclipse IDE plugin is most important, see <a href="http://www.jsdai.net/eclipse">JSDAI for Eclipse</a>.
  JSDAI is available under the Open Source license AGPLv3 at no costs.
  <ul>
    <li><a href="#install">Installation</a></li>
    <li><a href="#create_schema">Stepmod projects for ARM and MIM</a></li>
    <li><a href="#compiling">Compiling ARM and MIM</a></li>
    <li><a href="#xmlhtml">Updating Express-G diagrams</a></li>
    <li><a href="#export_stepmod_xml">Exporting Express-G diagrams and corresponding XML files for STEPMOD</a></li>
    <li><a href="#export_stepmod_xml_index">Exporting XML index for the SMRL (future ISO 10303-1000)</a></li>
  </ul>
  
  <h3><a name="install">Installation</a></h3>
		<p><i>JSDAI for Eclipse</i> runs best under the <i>Indigo Version, Service Release 2</i> of Eclipse. 
		   You can download and install it from here: <a href="https://eclipse.org/indigo/">https://eclipse.org/indigo/</a> </p>
		<p>After installing the <i>Eclipse IDE</i>, you can download and install <i>JSDAI for Eclipse</i> as documented here: <a href="http://www.jsdai.net/download">http://www.jsdai.net/download</a></p>

  
  <h3><a name="projects">Stepmod projects for ARM and MIM</a></h3>
		<p>STEPMOD contains in parallel to the main <i>stepmod</i> directory several other directories. 
			Two of these directories contain JSDAI projects:</p>
    <ul>
    <li><b>jsdai_eclipse_arm/</b> for all modular ARM short form Express files</li>
    <li><b>jsdai_eclipse_mim/</b> for all modular MIM and integrated resources short form Express files</li>
  </ul>
  <p>You will need to check out these projects from STEPMOD CVS in order to use JSDAI.
  	Note that these projects work on the Express short forms only.
  	 Other JSDAI projects - e.g. to support the Express long form of some AP - can be created as needed.</p>

	<p>Each of these JSDAI projects contain the following files and directories:</p>
    <ul>
    <li><b>.settings/</b> - these are for internal JSDAI use. Don't touch.</li>
    <li><b>Complex entities/</b> - not needed for the purpose of STEPMOD development.</li>
    <li><b>Express files/</b> - not needed when working on Express-short forms, see *.exl file.</li>
    <li><b>html/</b> - (Optional) in this directrory an Express documentation in html form can be generated. </li>
    <li><b>Short names/</b> - not needed for the purpose of STEPMOD development.</li>
    <li><b>.cvsignore</b> - this is for internal CVS usage. Don't touch.</li>
    <li><b>.project</b> - this is for Eclipse IDE internal project management. Don't touch.</li>
    <li><b>document_reference.txt</b> - this file contains for each Express schema the corresponding ISO number which is used when e.g. generating an Express documentation. 
    	     When new Express schemas are added this file needs to be extended.</li>
    <li><b>informal_propositions.txt</b> - this file contains the list of all <i>informal propositions</i>. 
    	 These are needed to be able to generate proper express-xml files as the <i>informal propositions</i> are not included in the Express files.
    	 This file has to be updated for new / modified <i>informal propositions</i>.</li>
    <li><b>*.exd</b> - this binary file contains the meta data of all compiled Express files. It is created anew when *.exl is successfully compiled.</li>
    <li><b>*.exg</b> - this binary file contains the meta data of all compiled Express files, together the the Express-G diagrams.
    	  This file has to be updated for new *.exd files to be able to update exisiting Express-G diagrams.</li>
    <li><b>*.exl</b> - this file contains references to all the Express files in the stepmod directory that have to be compiled.
    	  Note that not all Express files are added here as quite a number of Express files on STEPMOD are totally outdated and can't be compiled.</li>
  </ul>

  <h3><a name="compiling">Compiling ARM and MIM</a></h3>
  Select the *.exl file with the right mouse button and choose from the context menu "Compile Express schemas according to the list".
  Watch the output in the Console view for "JSDAI-Developer" and the "Problems" view.
  Only when all errors are fixed a new *.exd file will be generated.
	
  <h3><a name="diagrams">Updating Express-G diagrams</a></h3>
  Open the *exg file. Select the *.exp file witht he right mouse button and select "Import..." from the context menu.
  From the "import source" tree select "JSDAI / JSDAI Express dictionary (*.exd)". 
  The merging process (old diagrams for new Express schemas) will take a few minutes. After this new diagrams can be created or exisiting ones updated.
  For further details see <a href="http://www.jsdai.net/eclipse/express-g">https://eclipse.org/indigo/</a>.
  
	
  <h3><a name="export_stepmod_xml">Exporting Express-G diagrams and corresponding XML files for STEPMOD</a></h3>
  Have one of the Express-G diagram pages for the Express-schema you want to export visible on the screen.
  Select the open *.exl with right mouse button and choose "Export..." from the context menu.
  The Export Select dialogue is displayed. From the tree choose JSDAI/E-G diagrams and stepmod XML.
  This will create the needed *.gif and *.xml files for STEPMOD in the directory where the corresponding Express schema is located, either in a module or resource schema folder.

  <h3><a name="export_stepmod_xml_index">Exporting XML index for the SMRL (future ISO 10303-1000)</a></h3>
	Select the short form ARM or MIM *.exd file with the right mouse button.
	Select "Export..." from the context menu.
	In the Export/Select dialog choose "JSDAI / Express XML index for ISO 10303-1000"
  In the Export /Create XML index dialog ensure that the right *.exd file is selected and the directory is set to the path where the indexes are to be created; e.g. "C:\Users\xxx\workspace_stepmod\stepmod\data\library".
  Press the Finish button and after a few seconds in the selected folder the file "express_index.xml" is displayed.
  Rename this file to the final name, e.g. arm_index.xml or mim_ir_index.xml.
  Note that this index only contains references for the comiled files. All resource schemas or modules that are not included in the compilation list;
  e.g. because they are outdated, withdrawn not compilable etc. are not included.
  </BODY>
</HTML>
