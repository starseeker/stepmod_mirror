<!-- $Id: build.xml,v 1.2 2002/05/07 16:24:13 joshualubell Exp $ -->

<!-- ================================================= -->
<!-- build.xml for the STEP modules repository         -->
<!-- Generates HTML from XML source files              -->
<!--                                                   -->
<!-- written by Josh Lubell, NIST                      -->
<!-- lubell@nist.gov                                   -->
<!--                                                   -->
<!-- For use with the Ant build tool                   -->
<!-- (http://jakarta.apache.org/ant)                   -->
<!--                                                   -->
<!-- Requires a TrAX-compliant XSLT processor (such    -->
<!-- as Saxon or Xalan) and the Sun Java JDK           -->
<!-- ================================================= -->

<!--

Usage:

"ant" or "ant all"
generates HTML for everything in the module repository

"ant clean" 
deletes all generated HTML files

"ant index" 
generates HTML for repository_index.xml

"ant resources" 
generates HTML for all the resource schemas

"ant -DRESOURCES=data/resources/[schema-name] resources" 
generates HTML for a single resource schema

"ant modules" 
generates HTML for all the modules

"ant -DMODULES=data/modules/[module-name] modules" 
generates HTML for a single module

"ant tgz" 
creates a GNU-compatible .tar.gz file, suitable for distribution,
containing all HTML files


"ant zip" 
creates a .zip file, suitable for distribution, containing all HTML
files

The following build targets are intended for automatic backups,
mirroring, and such. Most developers should have no need to use them.

"ant cvsupdate"
does an anonymous (pserver) CVS update of your local copy of the
repository. USE THIS TARGET ONLY WITH AN ANONYMOUSLY CHECKED OUT LOCAL
COPY. DO NOT USE IF YOUR LOCAL REPOSITORY WAS CHECKED OUT USING SSH.

"ant cvstarball"
downloads most recent CVS repository backup from SourceForge (in
tar.gz format)

-->

<project name="repohtml" default="all" basedir="..">

  <target name="init" description="initialize variables">
    <tstamp/>
    <property name="STYLES"  value="xsl"/>
    <property name="DTDDIR" value="dtd"/>
    <property name="RESOURCESDIR" value="data/resources"/>
    <property name="RESOURCES" value="${RESOURCESDIR}/**"/>
    <property name="MODULESDIR" value="data/modules"/>
    <property name="MODULES" value="${MODULESDIR}/**"/>
    <property name="SYS" value="${MODULES}/sys"/>
    <property name="ARCHIVE" value="stepmod-html-${DSTAMP}"/>
    <property name="SFTARBALL"
	      value="http://cvs.sourceforge.net/cvstarballs/stepmod-cvsroot.tar.gz"/>
    <property name="SFCVSROOT"
	      value="cvs.stepmod.sourceforge.net:/cvsroot/stepmod"/>
  </target>

  <target name="clean" depends="init" description="delete generated files">
    <delete>
      <fileset dir="." includes="repository_index.htm*"/>
      <fileset dir="${RESOURCESDIR}" includes="**/*.htm*"/>
      <fileset dir="${MODULESDIR}" includes="**/*.htm*"/>
    </delete>
  </target>

  <target name="index" depends="init" 
          description="generate repository index">
    <dependset>
      <srcfileset dir="${DTDDIR}" includes="**/*.dtd, **/*.ent"/>
      <srcfileset dir="${STYLES}" includes="**/*.xsl"/>
      <targetfileset dir="." includes="repository_index.htm*"/>
    </dependset>
    <style includes="repository_index.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/repository_index.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
  </target>

  <target name="resources" depends="init" 
          description="generate integrated resources">
    <dependset>
      <srcfileset dir="${DTDDIR}" includes="**/*.dtd, **/*.ent"/>
      <srcfileset dir="${STYLES}" includes="**/*.xsl"/>
      <targetfileset dir="." includes="${RESOURCES}/*.htm*"/>
    </dependset>
    <style includes="${RESOURCES}/*.xml"
           destdir="." extension=".htm"
	   style="${STYLES}/express.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
  </target>

  <target name="modules" depends="init" 
          description="generate modules">
    <dependset>
      <srcfileset dir="${DTDDIR}" includes="**/*.dtd, **/*.ent"/>
      <srcfileset dir="${STYLES}" includes="**/*.xsl"/>
      <targetfileset dir="." includes="${MODULES}/*.htm*"/>
    </dependset>
    <style includes="${MODULES}/arm.xml, ${MODULES}/mim.xml,
	   ${MODULES}/mim_lf.xml" destdir="." extension=".htm"
	   style="${STYLES}/express.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${MODULES}/arm_descriptions.xml,
	   ${MODULES}/mim_descriptions.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/descriptions.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${MODULES}/armexpg*.xml,
	   ${MODULES}/mimexpg*.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/imgfile.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/1_scope.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_1_scope.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/2_refs.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_2_refs.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/3_defs.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_3_defs.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/4_info_reqs.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_4_info_reqs.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/5_mapping.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_5_mapping.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/5_mim.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_5_mim.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/a_short_names.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_a_short_names.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/b_obj_reg.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_b_obj_reg.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/biblio.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_biblio.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/c_arm_expg.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_c_arm_expg.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/cover.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_cover.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/d_mim_expg.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_d_mim_expg.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/e_exp.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_e_exp.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/e_exp_arm.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_e_exp_arm.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
<!--    <style includes="${SYS}/e_exp_arm_lf.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_e_exp_arm_lf.xsl">
      <param name="output_type" expression="HTM"/>
    </style>-->
    <style includes="${SYS}/e_exp_mim.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_e_exp_mim.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/e_exp_mim_lf.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_e_exp_mim_lf.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/f_guide.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_f_guide.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/foreword.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_foreword.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/introduction.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_introduction.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
    <style includes="${SYS}/main.xml" destdir="."
	   extension=".htm"
	   style="${STYLES}/sect_main.xsl">
      <param name="output_type" expression="HTM"/>
    </style>
  </target>


  <target name="all" depends="index, resources, modules"
	  description="create HTML for everything"/>

  <target name="tgz" depends="all" 
          description="create .tar.gz file">
    <tar tarfile="../${ARCHIVE}.tar"
         basedir=".."
         includes="stepmod/repository_index.htm, stepmod/css/**,
stepmod/data/**, stepmod/help/**, stepmod/images/**"
         excludes="**/*.xml"
    />
    <gzip src="../${ARCHIVE}.tar"
	  zipfile="../${ARCHIVE}.tar.gz"/>
    <delete file="../${ARCHIVE}.tar"/>
  </target>

  <target name="zip" depends="all" description="create .zip file">
    <zip zipfile="../${ARCHIVE}.zip" basedir=".."
         includes="stepmod/repository_index.htm, stepmod/css/**,
stepmod/data/**, stepmod/help/**, stepmod/images/**"
         excludes="**/*.xml"
    />
  </target>

  <target name="cvsupdate" depends="init" 
          description="update local copy of repository through anonymous CVS">
    <cvs
	 cvsRoot=":pserver:anonymous@${SFCVSROOT}" 
         command="update" compression="true" dest=".."
	 package="stepmod" />
  </target>

  <target name="cvstarball" depends="init" 
          description="download most recent SourceForge CVS repository backup">
    <get
	 src="${SFTARBALL}" dest="../stepmod-cvsroot-${DSTAMP}.tar.gz"
	 verbose="true"/>
  </target>

</project>

