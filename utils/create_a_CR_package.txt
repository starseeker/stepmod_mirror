$Id: create_a_CR_package.txt,v 1.24 2015/11/23 16:42:58 kevletu Exp $
provides detailed step by step instructions to build a CR and evaluate it.
[[!!do not commit any directory with "isopub" in the path!!]]
T. Thurman
--note that this process does NOT product pretty-printed EXPRESS because there is no AP publication involved.
--For the CR that is intended to product long forms that are pretty-printed additional steps are involved.

Step one (iterativly):
Create a CR publication package upon project approval
--update bugzilla for each bug that is addressed by this CR to change the bug
(a)- status/resolution to "resolved/fixed" and assign to hunten (use Gmail account!)
(b)- target milestone to this CR identifier

- execute make_CR.wsf
--that creates stepmod/publication/part1000/CR<NNN> and contents that includes
publication_index.xml
commit publication_index.xml
check out publication_index.xml

build.log
commit build.log
check out build.log

add content to publication_index.xml.
<module number="1232" name="design_material_aspects" team="ap242" version="1" arm.change="y" mim.change="n" collector_bug="0000" />
<resource_doc number="41"....collector_bug="0000"/>
<resource name="management_resources_schema" version="333" collector_bug="0000" />
	We have (description?, contacts, resource_docs?, deleted.resource_docs?, resources?, deleted.resources?, modules?, deleted.modules?, business_object_models?, deleted.business_object_models?)>
	see the dtd referenced by publication_index.xml for required format and sequence.
commit publication_index.xml to sourceforge.

-commit the source files for the JSDAI EXPRESS-G editor that was used to create this change request.
-a new directory has been created for this purpose:
-stepmod/data/tools/change_requests/JSDAI/CR12.
-A new directory based on change requests was chosen because it is impossible to disambiguate the JSDAI dictionary and EXPRESS-G files to an individual
-module or resource as the tool is currently used.

-for the initial trial, Kevin is to create and populate needed subdirectories under 
-stepmod/data/tools/change_requests/JSDAI/CR12
to validate that all required data including property files is committed to stepmod.

-ensure all your mods are committed to stepmod and you have tagged your mods with the right CR tag!
--one way to it is to check out CRxxxx and look at the result
-to avoid conflicts, only tag data directories that are specified in the publication_index.xml
-update stepmod/repository_index.xml for new modules (tag with CR #)
stepmod/repository_index.xml
<resources>
<resource name="<schema_name>" part="<part_number>"/>
</resources>

<resource_docs>
    
    <resource_doc name="<resource name>"/>
    
  </resource_docs>
  
<modules>
<!-- bug nnnn -->
     <module name="scan_3d_data_shape" part="<part number value from convener>" project="AP242" status="in-development"/>
...
-Add 409, 410, 442 to CR
-get all meta-data numbers from convener (including 409, 410, 442)
-initialize local stepmod repo with "switch to another version" with latest published SMRL tag
-update each module or resource doc or resource directory that is included in the CR so as to include the changes proposed.
-(that is switch those specific directories to be updated with the CR with "switch to another version" with "your" CR tag!
<example: only one schema in part 42 is being updated so only one schema directory would be switched,
in addition to the part42 resource doc directory.>

-update bug #3347 Maintain record CVS tags used
====================================

Step two:
Create ARM/MIM EXPRESS and XML longforms for 409, 410, 442
--note that this process does NOT product pretty-printed EXPRESS because there is no AP publication involved.
--For the CR that is intended to product long forms that are pretty-printed additional steps are involved.
-use longform.jar, longform_arm.prop, longform_mim.prop, longform_edms.bat, longform.EDMscript (tailored to local environment and particular 4xx module).
-update concatenated_arm.exp, concatenated_mim.exp for 409, 410, 442
--409 concatenated_arm.exp, concatenated_mim.exp are in stepmod/data/modules/ap209.../dvlp
--410 concatenated_arm.exp, concatenated_mim.exp are in stepmod/data/modules/ap210_el*/dvlp/pmi
--442 concatenated_arm.exp, concatenated_mim.exp are in stepmod/data/modules/ap242_m*/dvlp/express/pmi
-execute shtolo using usual longform.EDMscript
-note that the diagnostic file in the example is the diagnostic for the concatenated file!!!! so the endings are not the same for the diagnostic and for the output .exp file
<example>:
Schemata>MakeLongForm(
"n:\concatenated_arm.exp",
"n:\electronic_assembly_interconnect_and_packaging_design_arm_sf.exp.dia",
Ap210_electronic_assembly_interconnect_and_packaging_design_arm,
"n:\electronic_assembly_interconnect_and_packaging_design_arm_lf.exp",
"REPLACE_SCHEMA_NAMES,REPLACE_SCHEMA_NAMES_REPORT,DIAGNOSTICS_FOR_ROOT_ONLY,DIAGNOSTICS_FOR_INTERFACED_ONLY,EXPRESS_EDITION_2,TC2,EDITION_1_LONGFORM")
'n:' is the location of the concatenated files.
</example>
--TODO explain how to generate your own script
-evaluate concatenated_arm.exp, concatenated_mim.exp for errors using the EDMS diagnostic report
-execute patches for bug
-note review the unix "patch" command if necessary.
-more than one patch may be included in a patch file for convenience.
#4619, 
#4662 (content in #4661), 
#4665, 
#4667, 
#4668, 
#4820, 
#4904 comment #0, 
#4904 comment #2, 
#4978, 
#4988, 
#4992, 
#4994, 
#5004, 
#5018, 
#5019, 
#5023, 
#5048, 
#5051, 
#5052,  (is this still required? If not CR team should get Keith to mark the bug VERIFIED.)
#5053, (is this fix published? If so Keith shall mark the bug VERIFIED.)
#5054,
#5056,
#5057,
#5539.

---NOTE: list for bug has been consolidated in /stepmod/publication/part1000/CR00011/patches.xlsx
--- & tag as SHTOLO on bugzilla

-Commit concatenated_arm.exp, concatenated_mim.exp for 409, 410, 442
-Commit the six diagnostic files "n:\<schema_name>_sf.exp.dia": 
-execute longform EXPRESS evaluation using longform.EDMscript 'DefineSchema' command.
<example>:
Schemata>DefineSchema(
"n:\electronic_assembly_interconnect_and_packaging_design_arm_lf.exp",
"n:\electronic_assembly_interconnect_and_packaging_design_arm_lf.exp.dia",
Ap210_electronic_assembly_interconnect_and_packaging_design_arm, "STORING_SOURCE,DELETING_EXISTING_SCHEMAS,TC2")
'n:' is the location of the concatenated files.
</end_example>

-evaluate error report from longform.EDMscript
-Commit the six diagnostic files "n:\<schema_name>_lf.exp.dia": 
-copy and rename e.g., "n:\electronic_assembly_interconnect_and_packaging_design_arm_lf.exp" to stepmod/data/modules/ap210_el*/arm_lf.exp"
-do same for five other longform files.
-Commit arm_lf.exp, mim_lf.exp for 409, 410, 442.
-For each of the 3 AP modules, commit in the right directory:

--concatenated_arm/mim.exp.EDM_validation.dia : EDMs diagnostic output of the concatenated schemas
--concatenated_arm/mim.exp.shtolo_log.dia : EDMs log output of the "Make Long Form" function
--arm/mim_lf.exp.EDM_check.dia : EDMs diagnostic output of the resulting long form schema
---TODO: update the list of logs to be committed

Ensure that the correct header information is included in the first few lines of the file.
Example:
(*
   $Id: create_a_CR_package.txt,v 1.24 2015/11/23 16:42:58 kevletu Exp $
   ISO TC184/SC4/WG3 8232 - ISO/TS 10303-410 AP210 electronic assembly interconnect and packaging design - EXPRESS MIM Long form
   Supersedes ISO TC184/SC4/WG3 N2601
*)
[The header will need to be copied into the longform before commit.]

-Create arm_lf.xml for 409, 410, 442.
-Create mim_lf.xml for 409, 410, 442.
-- JSDAI is able to it

Step two-(B)
Evaluate the 6 schemas with the steptools expfront tool looking for especially items not covered by EDMS 
(e.g., incorrect schema names that cause no schema name replacement during shtolo process).
Go to this web page:
http://www.steptools.com/translate/expfront
Follow the instructions for uploading a file but do not select "Include Integrated resources in compilation" as the long forms
are complete.
Commit the six diagnostic files in the usual location with these generic names arm_lf.exp.STEPTools_check.dia and mim_lf.exp.STEPTools_check.dia

Step two-(C)
tag ap209_*, ap210_el*, and ap242_man* directories with relevant SMRL_CR... tag, moving tags if needed.
At the end of this step all modules and resource_docs and resources directories shall be correctly tagged.
====================================

Step three:

Summary: build actual CR publication package and copy over previous SMRL with CR content.

Step three-(A)
A-1 checkout stepmod/data with previous SMRL tag
A-2 checkout stepmod/data with current CR tag in a different sworkspace
Replace manually SMRL directories & files by CR11 directories & files - be careful how your tool replace the files
This changes the state of the local repo to be SMRL_previous modified to current CR.

-note: the directories that are NOT data directories shall be at the HEAD state.
--note2: the following can be done via incremental basis of module by module rather doing a full AP build
–Requires ANT and Java and Saxon 6.5.5

<for each module in the publication_index.xml>
 execute xslt against 
stepmod/data/modules/<module>/sys/5_mapping.xml
-look for red marks.
-fix red marks.
</for>
•Build the ANT file
–Run: ant –buildfilebuildbuild
--NOTE: remove the previous build.xml before running build.xml
•Generate the HTML
–Run: ant all
–Generates: stepmod\publication\isopub\<CR00NNN>
-review the contents of the build.log file created in step (1) for real errors due to missing modules in publication_index.xml
-or other errors
--because the local repo is strictly built from SMRL_previous and CR_current there should be exact provenance for errors/changes
-commit the contents of stepmod\publication\part1000\<CR00NNN> to CVS.
[[!!do not commit any directory with "isopub" in the path!!]]
-review the content of stepmod\publication\isopub\<CR00NNN> for errors.
-fix errors until none.
--move SMRL_CRxxx tag as needed to make it up to date.

Step three-(B): build the new SMRL
retrieve last SMRL and put it somewhere.
delete the items explicitly listed in stepmod\publication\part1000\<CR00NNN>\publication_index.xml
from the new SMRL.
copy the items explicitly listed in stepmod\publication\part1000\<CR00NNN>\publication_index.xml
to the new SMRL.
This sequence ensures that no previous content shall be retained for the relevant directories.
It also ensures that extra content created by the CR publication build does not get injected
into the SMRL.
For CR11, it is ok to copy the resource directories for p42, p43 as all resource directories for
those resource parts are new.
For CR12 and following only the resources included in the publication_index.xml shall be injected
into the new SMRL.
====================================


Step four:
<for> each design ap build an ap publication package.
Run:stepmod\utils\mkpublication.wsf
fill in: "APNNN" to create a directory
–Edit: stepmod\publication\<APNNN>\publication_index.xml
-create an empty log file
stepmod\publication\<APNNN>\log.txt
•Build the ANT file
–Run: ant –buildfilebuildbuild
--NOTE: remove the previous build.xml before running build.xml
•Generate the HTML
<for each design AP>
–Run: ant all
–Generates: stepmod\publication\isopub\<APNNN>
commit the directory stepmod\publication\<APNNN>\ to CVS.
[[!!do not commit any directory with "isopub" in the path!!]]
-examine the log file for errors that need fixing.
-fix errors in AP doc.
-fix errors in modules or resources and repeat Step three to ensure tags and data are valid.
</for each design AP>.

<for each design AP>
merge the 
> stepmod\publication\isopub\<APNNN>\iso10303_2xx\abstracts
> stepmod\publication\isopub\<APNNN>\iso10303_2xx\data/application_protocols/<ap_name>
> stepmod\publication\isopub\<APNNN>\iso10303_2xx\images
> stepmod\publication\isopub\<APNNN>\iso10303_2xx\iso10303_210.htm
> stepmod\publication\isopub\<APNNN>\iso10303_2xx\iso10303_210_readme.txt
with the SMRL directory structure 
going in iso_10303-2xx\

(look to AP242 ed1 directory structure for details)
run linkcheck against the APNNN/index.htm
(I think it is ok to merge multiple APs for testing into one SMRL directory structure as they have isolated names)
verify the missing links are only ones related to old link for sc4 directory.
If other missing links are found:
fix missing links at AP document and repeat Step four
fix missing links in other docs and repeat Step three to ensure tags and data are valid.
</for each design AP>.

====================================

Step five:
upload the modified multiple AP / SMRL directory as a zip file to WG12 drop-in box. Check with Convener for zip file name to use.
====================================

Step six:
Mark all related bugs as RESOLVED/FIXED and assign to Keith (ensure correct milestone!!).
====================================

Step seven:
Update bug #3361 update tag index with the tag for this CR.

